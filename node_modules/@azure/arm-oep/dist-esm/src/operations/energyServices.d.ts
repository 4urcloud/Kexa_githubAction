import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { EnergyServices } from "../operationsInterfaces";
import { OpenEnergyPlatformManagementServiceAPIs } from "../openEnergyPlatformManagementServiceAPIs";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { EnergyService, EnergyServicesListByResourceGroupOptionalParams, EnergyServicesListBySubscriptionOptionalParams, EnergyServicesGetOptionalParams, EnergyServicesGetResponse, EnergyServicesCreateOptionalParams, EnergyServicesCreateResponse, EnergyServicesUpdateOptionalParams, EnergyServicesUpdateResponse, EnergyServicesDeleteOptionalParams } from "../models";
/** Class containing EnergyServices operations. */
export declare class EnergyServicesImpl implements EnergyServices {
    private readonly client;
    /**
     * Initialize a new instance of the class EnergyServices class.
     * @param client Reference to the service client
     */
    constructor(client: OpenEnergyPlatformManagementServiceAPIs);
    /**
     * Returns list of oep resources..
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: EnergyServicesListByResourceGroupOptionalParams): PagedAsyncIterableIterator<EnergyService>;
    private listByResourceGroupPagingPage;
    private listByResourceGroupPagingAll;
    /**
     * Lists a collection of oep resources under the given Azure Subscription ID.
     * @param options The options parameters.
     */
    listBySubscription(options?: EnergyServicesListBySubscriptionOptionalParams): PagedAsyncIterableIterator<EnergyService>;
    private listBySubscriptionPagingPage;
    private listBySubscriptionPagingAll;
    /**
     * Returns list of oep resources..
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    private _listByResourceGroup;
    /**
     * Lists a collection of oep resources under the given Azure Subscription ID.
     * @param options The options parameters.
     */
    private _listBySubscription;
    /**
     * Returns oep resource for a given name.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The resource name.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, resourceName: string, options?: EnergyServicesGetOptionalParams): Promise<EnergyServicesGetResponse>;
    /**
     * Method that gets called if subscribed for ResourceCreationBegin trigger.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The resource name.
     * @param options The options parameters.
     */
    beginCreate(resourceGroupName: string, resourceName: string, options?: EnergyServicesCreateOptionalParams): Promise<PollerLike<PollOperationState<EnergyServicesCreateResponse>, EnergyServicesCreateResponse>>;
    /**
     * Method that gets called if subscribed for ResourceCreationBegin trigger.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The resource name.
     * @param options The options parameters.
     */
    beginCreateAndWait(resourceGroupName: string, resourceName: string, options?: EnergyServicesCreateOptionalParams): Promise<EnergyServicesCreateResponse>;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The resource name.
     * @param options The options parameters.
     */
    update(resourceGroupName: string, resourceName: string, options?: EnergyServicesUpdateOptionalParams): Promise<EnergyServicesUpdateResponse>;
    /**
     * Deletes oep resource
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The resource name.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, resourceName: string, options?: EnergyServicesDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Deletes oep resource
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The resource name.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, resourceName: string, options?: EnergyServicesDeleteOptionalParams): Promise<void>;
    /**
     * ListByResourceGroupNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.
     * @param options The options parameters.
     */
    private _listByResourceGroupNext;
    /**
     * ListBySubscriptionNext
     * @param nextLink The nextLink from the previous successful call to the ListBySubscription method.
     * @param options The options parameters.
     */
    private _listBySubscriptionNext;
}
//# sourceMappingURL=energyServices.d.ts.map