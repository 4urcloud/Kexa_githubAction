import * as coreAuth from '@azure/core-auth';
import * as coreClient from '@azure/core-client';
import { PagedAsyncIterableIterator } from '@azure/core-paging';
import { PollerLike } from '@azure/core-lro';
import { PollOperationState } from '@azure/core-lro';

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Internal**
 */
export declare type ActionType = string;

/**
 * Defines values for CheckNameAvailabilityReason. \
 * {@link KnownCheckNameAvailabilityReason} can be used interchangeably with CheckNameAvailabilityReason,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **AlreadyExists**
 */
export declare type CheckNameAvailabilityReason = string;

/** The check availability request body. */
export declare interface CheckNameAvailabilityRequest {
    /** The name of the resource for which availability needs to be checked. */
    name?: string;
    /** The resource type. */
    type?: string;
}

/** The check availability result. */
export declare interface CheckNameAvailabilityResponse {
    /** Indicates if the resource name is available. */
    nameAvailable?: boolean;
    /** The reason why the given name is not available. */
    reason?: CheckNameAvailabilityReason;
    /** Detailed reason why the given name is available. */
    message?: string;
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export declare type CreatedByType = string;

/** The list of Energy services resource's Data Partition Names. */
export declare interface DataPartitionNames {
    name?: string;
}

/** The resource model definition used for updating a tracked ARM resource. */
export declare interface EnergyResourceUpdate {
    /** Resource tags. */
    tags?: {
        [propertyName: string]: string;
    };
}

export declare interface EnergyService extends Resource {
    properties?: EnergyServiceProperties;
    /** Resource tags. */
    tags?: {
        [propertyName: string]: string;
    };
    /** Geo-location where the resource lives. */
    location: string;
}

/** The list of oep resources. */
export declare interface EnergyServiceList {
    /** The link used to get the next page of oep resources list. */
    nextLink?: string;
    /** The list of oep resources. */
    value?: EnergyService[];
}

export declare interface EnergyServiceProperties {
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly dnsName?: string;
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly provisioningState?: ProvisioningState;
    authAppId?: string;
    dataPartitionNames?: DataPartitionNames[];
}

/** Interface representing a EnergyServices. */
export declare interface EnergyServices {
    /**
     * Returns list of oep resources..
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: EnergyServicesListByResourceGroupOptionalParams): PagedAsyncIterableIterator<EnergyService>;
    /**
     * Lists a collection of oep resources under the given Azure Subscription ID.
     * @param options The options parameters.
     */
    listBySubscription(options?: EnergyServicesListBySubscriptionOptionalParams): PagedAsyncIterableIterator<EnergyService>;
    /**
     * Returns oep resource for a given name.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The resource name.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, resourceName: string, options?: EnergyServicesGetOptionalParams): Promise<EnergyServicesGetResponse>;
    /**
     * Method that gets called if subscribed for ResourceCreationBegin trigger.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The resource name.
     * @param options The options parameters.
     */
    beginCreate(resourceGroupName: string, resourceName: string, options?: EnergyServicesCreateOptionalParams): Promise<PollerLike<PollOperationState<EnergyServicesCreateResponse>, EnergyServicesCreateResponse>>;
    /**
     * Method that gets called if subscribed for ResourceCreationBegin trigger.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The resource name.
     * @param options The options parameters.
     */
    beginCreateAndWait(resourceGroupName: string, resourceName: string, options?: EnergyServicesCreateOptionalParams): Promise<EnergyServicesCreateResponse>;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The resource name.
     * @param options The options parameters.
     */
    update(resourceGroupName: string, resourceName: string, options?: EnergyServicesUpdateOptionalParams): Promise<EnergyServicesUpdateResponse>;
    /**
     * Deletes oep resource
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The resource name.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, resourceName: string, options?: EnergyServicesDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Deletes oep resource
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The resource name.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, resourceName: string, options?: EnergyServicesDeleteOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface EnergyServicesCreateOptionalParams extends coreClient.OperationOptions {
    /** Request body. */
    body?: EnergyService;
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the create operation. */
export declare type EnergyServicesCreateResponse = EnergyService;

/** Optional parameters. */
export declare interface EnergyServicesDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface EnergyServicesGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type EnergyServicesGetResponse = EnergyService;

/** Optional parameters. */
export declare interface EnergyServicesListByResourceGroupNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroupNext operation. */
export declare type EnergyServicesListByResourceGroupNextResponse = EnergyServiceList;

/** Optional parameters. */
export declare interface EnergyServicesListByResourceGroupOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroup operation. */
export declare type EnergyServicesListByResourceGroupResponse = EnergyServiceList;

/** Optional parameters. */
export declare interface EnergyServicesListBySubscriptionNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listBySubscriptionNext operation. */
export declare type EnergyServicesListBySubscriptionNextResponse = EnergyServiceList;

/** Optional parameters. */
export declare interface EnergyServicesListBySubscriptionOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listBySubscription operation. */
export declare type EnergyServicesListBySubscriptionResponse = EnergyServiceList;

/** Optional parameters. */
export declare interface EnergyServicesUpdateOptionalParams extends coreClient.OperationOptions {
    /** The resource model definition used for updating a tracked ARM resource. */
    body?: EnergyResourceUpdate;
}

/** Contains response data for the update operation. */
export declare type EnergyServicesUpdateResponse = EnergyService;

/** The resource management error additional info. */
export declare interface ErrorAdditionalInfo {
    /**
     * The additional info type.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /**
     * The additional info.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly info?: Record<string, unknown>;
}

/** The error detail. */
export declare interface ErrorDetail {
    /**
     * The error code.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly code?: string;
    /**
     * The error message.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly message?: string;
    /**
     * The error target.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly target?: string;
    /**
     * The error details.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly details?: ErrorDetail[];
    /**
     * The error additional info.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export declare interface ErrorResponse {
    /** The error object. */
    error?: ErrorDetail;
}

/**
 * Given a result page from a pageable operation, returns a
 * continuation token that can be used to begin paging from
 * that point later.
 * @param page A result object from calling .byPage() on a paged operation.
 * @returns The continuation token that can be passed into byPage().
 */
export declare function getContinuationToken(page: unknown): string | undefined;

/** Known values of {@link ActionType} that the service accepts. */
export declare enum KnownActionType {
    /** Internal */
    Internal = "Internal"
}

/** Known values of {@link CheckNameAvailabilityReason} that the service accepts. */
export declare enum KnownCheckNameAvailabilityReason {
    /** Invalid */
    Invalid = "Invalid",
    /** AlreadyExists */
    AlreadyExists = "AlreadyExists"
}

/** Known values of {@link CreatedByType} that the service accepts. */
export declare enum KnownCreatedByType {
    /** User */
    User = "User",
    /** Application */
    Application = "Application",
    /** ManagedIdentity */
    ManagedIdentity = "ManagedIdentity",
    /** Key */
    Key = "Key"
}

/** Known values of {@link Origin} that the service accepts. */
export declare enum KnownOrigin {
    /** User */
    User = "user",
    /** System */
    System = "system",
    /** UserSystem */
    UserSystem = "user,system"
}

/** Known values of {@link ProvisioningState} that the service accepts. */
export declare enum KnownProvisioningState {
    /** Unknown */
    Unknown = "Unknown",
    /** Succeeded */
    Succeeded = "Succeeded",
    /** Failed */
    Failed = "Failed",
    /** Canceled */
    Canceled = "Canceled",
    /** Creating */
    Creating = "Creating",
    /** Deleting */
    Deleting = "Deleting",
    /** Updating */
    Updating = "Updating"
}

/** Interface representing a Locations. */
export declare interface Locations {
    /**
     * Checks the name availability of the resource with requested resource name.
     * @param body NameAvailabilityRequest object.
     * @param options The options parameters.
     */
    checkNameAvailability(body: CheckNameAvailabilityRequest, options?: LocationsCheckNameAvailabilityOptionalParams): Promise<LocationsCheckNameAvailabilityResponse>;
}

/** Optional parameters. */
export declare interface LocationsCheckNameAvailabilityOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the checkNameAvailability operation. */
export declare type LocationsCheckNameAvailabilityResponse = CheckNameAvailabilityResponse;

export declare class OpenEnergyPlatformManagementServiceAPIs extends coreClient.ServiceClient {
    $host: string;
    subscriptionId: string;
    apiVersion: string;
    /**
     * Initializes a new instance of the OpenEnergyPlatformManagementServiceAPIs class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId The ID of the target subscription.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: OpenEnergyPlatformManagementServiceAPIsOptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    locations: Locations;
    energyServices: EnergyServices;
    operations: Operations;
}

/** Optional parameters. */
export declare interface OpenEnergyPlatformManagementServiceAPIsOptionalParams extends coreClient.ServiceClientOptions {
    /** server parameter */
    $host?: string;
    /** Api Version */
    apiVersion?: string;
    /** Overrides client endpoint. */
    endpoint?: string;
}

/** Details of a REST API operation, returned from the Resource Provider Operations API */
export declare interface Operation {
    /**
     * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly isDataAction?: boolean;
    /** Localized display information for this particular operation. */
    display?: OperationDisplay;
    /**
     * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly origin?: Origin;
    /**
     * Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly actionType?: ActionType;
}

/** Localized display information for this particular operation. */
export declare interface OperationDisplay {
    /**
     * The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provider?: string;
    /**
     * The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly resource?: string;
    /**
     * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly operation?: string;
    /**
     * The short, localized friendly description of the operation; suitable for tool tips and detailed views.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly description?: string;
}

/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */
export declare interface OperationListResult {
    /**
     * List of operations supported by the resource provider
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: Operation[];
    /**
     * URL to get the next set of operation list results (if there are any).
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Interface representing a Operations. */
export declare interface Operations {
    /**
     * Lists the available operations of Microsoft.OpenEnergyPlatform resource provider.
     * @param options The options parameters.
     */
    list(options?: OperationsListOptionalParams): Promise<OperationsListResponse>;
}

/** Optional parameters. */
export declare interface OperationsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type OperationsListResponse = OperationListResult;

/**
 * Defines values for Origin. \
 * {@link KnownOrigin} can be used interchangeably with Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **system** \
 * **user,system**
 */
export declare type Origin = string;

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **Succeeded** \
 * **Failed** \
 * **Canceled** \
 * **Creating** \
 * **Deleting** \
 * **Updating**
 */
export declare type ProvisioningState = string;

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export declare interface Resource {
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /**
     * The name of the resource
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
}

/** Metadata pertaining to creation and last modification of the resource. */
export declare interface SystemData {
    /** The identity that created the resource. */
    createdBy?: string;
    /** The type of identity that created the resource. */
    createdByType?: CreatedByType;
    /** The timestamp of resource creation (UTC). */
    createdAt?: Date;
    /** The identity that last modified the resource. */
    lastModifiedBy?: string;
    /** The type of identity that last modified the resource. */
    lastModifiedByType?: CreatedByType;
    /** The timestamp of resource last modification (UTC) */
    lastModifiedAt?: Date;
}

export { }
