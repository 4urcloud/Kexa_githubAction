/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { SavingsPlanOrderAliasModel as SavingsPlanOrderAliasModelMapper, SavingsPlanUpdateRequest as SavingsPlanUpdateRequestMapper, SavingsPlanUpdateValidateRequest as SavingsPlanUpdateValidateRequestMapper, SavingsPlanPurchaseValidateRequest as SavingsPlanPurchaseValidateRequestMapper, ReservationOrderAliasRequest as ReservationOrderAliasRequestMapper } from "../models/mappers";
export const accept = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String"
        }
    }
};
export const $host = {
    parameterPath: "$host",
    mapper: {
        serializedName: "$host",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const apiVersion = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2022-11-01",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
export const nextLink = {
    parameterPath: "nextLink",
    mapper: {
        serializedName: "nextLink",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const contentType = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String"
        }
    }
};
export const body = {
    parameterPath: "body",
    mapper: SavingsPlanOrderAliasModelMapper
};
export const savingsPlanOrderAliasName = {
    parameterPath: "savingsPlanOrderAliasName",
    mapper: {
        constraints: {
            Pattern: new RegExp("^[a-zA-Z0-9_\\-\\.]+$")
        },
        serializedName: "savingsPlanOrderAliasName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const savingsPlanOrderId = {
    parameterPath: "savingsPlanOrderId",
    mapper: {
        serializedName: "savingsPlanOrderId",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const expand = {
    parameterPath: ["options", "expand"],
    mapper: {
        serializedName: "$expand",
        type: {
            name: "String"
        }
    }
};
export const filter = {
    parameterPath: ["options", "filter"],
    mapper: {
        serializedName: "$filter",
        type: {
            name: "String"
        }
    }
};
export const orderby = {
    parameterPath: ["options", "orderby"],
    mapper: {
        serializedName: "$orderby",
        type: {
            name: "String"
        }
    }
};
export const refreshSummary = {
    parameterPath: ["options", "refreshSummary"],
    mapper: {
        serializedName: "refreshSummary",
        type: {
            name: "String"
        }
    }
};
export const skiptoken = {
    parameterPath: ["options", "skiptoken"],
    mapper: {
        serializedName: "$skiptoken",
        type: {
            name: "Number"
        }
    }
};
export const selectedState = {
    parameterPath: ["options", "selectedState"],
    mapper: {
        serializedName: "selectedState",
        type: {
            name: "String"
        }
    }
};
export const take = {
    parameterPath: ["options", "take"],
    mapper: {
        serializedName: "take",
        type: {
            name: "Number"
        }
    }
};
export const savingsPlanId = {
    parameterPath: "savingsPlanId",
    mapper: {
        serializedName: "savingsPlanId",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const body1 = {
    parameterPath: "body",
    mapper: SavingsPlanUpdateRequestMapper
};
export const body2 = {
    parameterPath: "body",
    mapper: SavingsPlanUpdateValidateRequestMapper
};
export const body3 = {
    parameterPath: "body",
    mapper: SavingsPlanPurchaseValidateRequestMapper
};
export const body4 = {
    parameterPath: "body",
    mapper: ReservationOrderAliasRequestMapper
};
export const reservationOrderAliasName = {
    parameterPath: "reservationOrderAliasName",
    mapper: {
        constraints: {
            Pattern: new RegExp("^[a-zA-Z0-9_\\-\\.]+$")
        },
        serializedName: "reservationOrderAliasName",
        required: true,
        type: {
            name: "String"
        }
    }
};
//# sourceMappingURL=parameters.js.map