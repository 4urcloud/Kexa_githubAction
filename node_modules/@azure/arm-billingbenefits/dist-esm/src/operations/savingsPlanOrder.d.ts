import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SavingsPlanOrder } from "../operationsInterfaces";
import { BillingBenefitsRP } from "../billingBenefitsRP";
import { SavingsPlanOrderModel, SavingsPlanOrderListOptionalParams, SavingsPlanOrderGetOptionalParams, SavingsPlanOrderGetResponse, SavingsPlanOrderElevateOptionalParams, SavingsPlanOrderElevateResponse } from "../models";
/** Class containing SavingsPlanOrder operations. */
export declare class SavingsPlanOrderImpl implements SavingsPlanOrder {
    private readonly client;
    /**
     * Initialize a new instance of the class SavingsPlanOrder class.
     * @param client Reference to the service client
     */
    constructor(client: BillingBenefitsRP);
    /**
     * List all Savings plan orders.
     * @param options The options parameters.
     */
    list(options?: SavingsPlanOrderListOptionalParams): PagedAsyncIterableIterator<SavingsPlanOrderModel>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Get a savings plan order.
     * @param savingsPlanOrderId Order ID of the savings plan
     * @param options The options parameters.
     */
    get(savingsPlanOrderId: string, options?: SavingsPlanOrderGetOptionalParams): Promise<SavingsPlanOrderGetResponse>;
    /**
     * Elevate as owner on savings plan order based on billing permissions.
     * @param savingsPlanOrderId Order ID of the savings plan
     * @param options The options parameters.
     */
    elevate(savingsPlanOrderId: string, options?: SavingsPlanOrderElevateOptionalParams): Promise<SavingsPlanOrderElevateResponse>;
    /**
     * List all Savings plan orders.
     * @param options The options parameters.
     */
    private _list;
    /**
     * ListNext
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=savingsPlanOrder.d.ts.map