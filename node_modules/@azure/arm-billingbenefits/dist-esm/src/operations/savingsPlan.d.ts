import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SavingsPlan } from "../operationsInterfaces";
import { BillingBenefitsRP } from "../billingBenefitsRP";
import { SavingsPlanModel, SavingsPlanListOptionalParams, SavingsPlanListAllOptionalParams, SavingsPlanGetOptionalParams, SavingsPlanGetResponse, SavingsPlanUpdateRequest, SavingsPlanUpdateOptionalParams, SavingsPlanUpdateResponse, SavingsPlanUpdateValidateRequest, SavingsPlanValidateUpdateOptionalParams, SavingsPlanValidateUpdateResponse } from "../models";
/** Class containing SavingsPlan operations. */
export declare class SavingsPlanImpl implements SavingsPlan {
    private readonly client;
    /**
     * Initialize a new instance of the class SavingsPlan class.
     * @param client Reference to the service client
     */
    constructor(client: BillingBenefitsRP);
    /**
     * List savings plans in an order.
     * @param savingsPlanOrderId Order ID of the savings plan
     * @param options The options parameters.
     */
    list(savingsPlanOrderId: string, options?: SavingsPlanListOptionalParams): PagedAsyncIterableIterator<SavingsPlanModel>;
    private listPagingPage;
    private listPagingAll;
    /**
     * List savings plans.
     * @param options The options parameters.
     */
    listAll(options?: SavingsPlanListAllOptionalParams): PagedAsyncIterableIterator<SavingsPlanModel>;
    private listAllPagingPage;
    private listAllPagingAll;
    /**
     * List savings plans in an order.
     * @param savingsPlanOrderId Order ID of the savings plan
     * @param options The options parameters.
     */
    private _list;
    /**
     * List savings plans.
     * @param options The options parameters.
     */
    private _listAll;
    /**
     * Get savings plan.
     * @param savingsPlanOrderId Order ID of the savings plan
     * @param savingsPlanId ID of the savings plan
     * @param options The options parameters.
     */
    get(savingsPlanOrderId: string, savingsPlanId: string, options?: SavingsPlanGetOptionalParams): Promise<SavingsPlanGetResponse>;
    /**
     * Update savings plan.
     * @param savingsPlanOrderId Order ID of the savings plan
     * @param savingsPlanId ID of the savings plan
     * @param body Request body for patching a savings plan order alias
     * @param options The options parameters.
     */
    update(savingsPlanOrderId: string, savingsPlanId: string, body: SavingsPlanUpdateRequest, options?: SavingsPlanUpdateOptionalParams): Promise<SavingsPlanUpdateResponse>;
    /**
     * Validate savings plan patch.
     * @param savingsPlanOrderId Order ID of the savings plan
     * @param savingsPlanId ID of the savings plan
     * @param body Request body for validating a savings plan patch request
     * @param options The options parameters.
     */
    validateUpdate(savingsPlanOrderId: string, savingsPlanId: string, body: SavingsPlanUpdateValidateRequest, options?: SavingsPlanValidateUpdateOptionalParams): Promise<SavingsPlanValidateUpdateResponse>;
    /**
     * ListNext
     * @param savingsPlanOrderId Order ID of the savings plan
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
    /**
     * ListAllNext
     * @param nextLink The nextLink from the previous successful call to the ListAll method.
     * @param options The options parameters.
     */
    private _listAllNext;
}
//# sourceMappingURL=savingsPlan.d.ts.map