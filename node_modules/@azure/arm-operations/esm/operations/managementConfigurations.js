/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import { __assign } from "tslib";
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/managementConfigurationsMappers";
import * as Parameters from "../models/parameters";
/** Class representing a ManagementConfigurations. */
var ManagementConfigurations = /** @class */ (function () {
    /**
     * Create a ManagementConfigurations.
     * @param {OperationsManagementClientContext} client Reference to the service client.
     */
    function ManagementConfigurations(client) {
        this.client = client;
    }
    ManagementConfigurations.prototype.listBySubscription = function (options, callback) {
        return this.client.sendOperationRequest({
            options: options
        }, listBySubscriptionOperationSpec, callback);
    };
    ManagementConfigurations.prototype.createOrUpdate = function (resourceGroupName, managementConfigurationName, parameters, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            managementConfigurationName: managementConfigurationName,
            parameters: parameters,
            options: options
        }, createOrUpdateOperationSpec, callback);
    };
    ManagementConfigurations.prototype.deleteMethod = function (resourceGroupName, managementConfigurationName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            managementConfigurationName: managementConfigurationName,
            options: options
        }, deleteMethodOperationSpec, callback);
    };
    ManagementConfigurations.prototype.get = function (resourceGroupName, managementConfigurationName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            managementConfigurationName: managementConfigurationName,
            options: options
        }, getOperationSpec, callback);
    };
    return ManagementConfigurations;
}());
export { ManagementConfigurations };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var listBySubscriptionOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/providers/Microsoft.OperationsManagement/ManagementConfigurations",
    urlParameters: [
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.ManagementConfigurationPropertiesList
        },
        default: {
            bodyMapper: Mappers.CodeMessageError
        }
    },
    serializer: serializer
};
var createOrUpdateOperationSpec = {
    httpMethod: "PUT",
    path: "subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationsManagement/ManagementConfigurations/{managementConfigurationName}",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.managementConfigurationName
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: "parameters",
        mapper: __assign(__assign({}, Mappers.ManagementConfiguration), { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.ManagementConfiguration
        },
        default: {
            bodyMapper: Mappers.CodeMessageError
        }
    },
    serializer: serializer
};
var deleteMethodOperationSpec = {
    httpMethod: "DELETE",
    path: "subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationsManagement/ManagementConfigurations/{managementConfigurationName}",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.managementConfigurationName
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {},
        default: {
            bodyMapper: Mappers.CodeMessageError
        }
    },
    serializer: serializer
};
var getOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationsManagement/ManagementConfigurations/{managementConfigurationName}",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.managementConfigurationName
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.ManagementConfiguration
        },
        default: {
            bodyMapper: Mappers.CodeMessageError
        }
    },
    serializer: serializer
};
//# sourceMappingURL=managementConfigurations.js.map