{"version":3,"file":"arm-operations.js","sources":["../node_modules/tslib/tslib.es6.js","../src/models/index.ts","../src/models/mappers.ts","../src/models/solutionsMappers.ts","../src/models/parameters.ts","../src/operations/solutions.ts","../src/models/managementAssociationsMappers.ts","../src/operations/managementAssociations.ts","../src/models/managementConfigurationsMappers.ts","../src/operations/managementConfigurations.ts","../src/models/operationsMappers.ts","../src/operations/operations.ts","../src/operationsManagementClientContext.ts","../src/operationsManagementClient.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { BaseResource, CloudError, AzureServiceClientOptions } from \"@azure/ms-rest-azure-js\";\nimport * as msRest from \"@azure/ms-rest-js\";\n\nexport { BaseResource, CloudError };\n\n/**\n * Display metadata associated with the operation.\n */\nexport interface OperationDisplay {\n  /**\n   * Service provider: Microsoft OperationsManagement.\n   */\n  provider?: string;\n  /**\n   * Resource on which the operation is performed etc.\n   */\n  resource?: string;\n  /**\n   * Type of operation: get, read, delete, etc.\n   */\n  operation?: string;\n}\n\n/**\n * Supported operation of OperationsManagement resource provider.\n */\nexport interface Operation {\n  /**\n   * Operation name: {provider}/{resource}/{operation}\n   */\n  name?: string;\n  /**\n   * Display metadata associated with the operation.\n   */\n  display?: OperationDisplay;\n}\n\n/**\n * Solution properties supported by the OperationsManagement resource provider.\n */\nexport interface SolutionProperties extends BaseResource {\n  /**\n   * The azure resourceId for the workspace where the solution will be deployed/enabled.\n   */\n  workspaceResourceId: string;\n  /**\n   * The provisioning state for the solution.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly provisioningState?: string;\n  /**\n   * The azure resources that will be contained within the solutions. They will be locked and gets\n   * deleted automatically when the solution is deleted.\n   */\n  containedResources?: string[];\n  /**\n   * The resources that will be referenced from this solution. Deleting any of those solution out\n   * of band will break the solution.\n   */\n  referencedResources?: string[];\n}\n\n/**\n * ManagementAssociation properties supported by the OperationsManagement resource provider.\n */\nexport interface ManagementAssociationProperties extends BaseResource {\n  /**\n   * The applicationId of the appliance for this association.\n   */\n  applicationId: string;\n}\n\n/**\n * Parameter to pass to ARM template\n */\nexport interface ArmTemplateParameter {\n  /**\n   * name of the parameter.\n   */\n  name?: string;\n  /**\n   * value for the parameter. In Jtoken\n   */\n  value?: string;\n}\n\n/**\n * ManagementConfiguration properties supported by the OperationsManagement resource provider.\n */\nexport interface ManagementConfigurationProperties extends BaseResource {\n  /**\n   * The applicationId of the appliance for this Management.\n   */\n  applicationId?: string;\n  /**\n   * The type of the parent resource.\n   */\n  parentResourceType: string;\n  /**\n   * Parameters to run the ARM template\n   */\n  parameters: ArmTemplateParameter[];\n  /**\n   * The provisioning state for the ManagementConfiguration.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly provisioningState?: string;\n  /**\n   * The Json object containing the ARM template to deploy\n   */\n  template: any;\n}\n\n/**\n * Plan for solution object supported by the OperationsManagement resource provider.\n */\nexport interface SolutionPlan {\n  /**\n   * name of the solution to be created. For Microsoft published solution it should be in the\n   * format of solutionType(workspaceName). SolutionType part is case sensitive. For third party\n   * solution, it can be anything.\n   */\n  name?: string;\n  /**\n   * Publisher name. For gallery solution, it is Microsoft.\n   */\n  publisher?: string;\n  /**\n   * promotionCode, Not really used now, can you left as empty\n   */\n  promotionCode?: string;\n  /**\n   * name of the solution to enabled/add. For Microsoft published gallery solution it should be in\n   * the format of OMSGallery/<solutionType>. This is case sensitive\n   */\n  product?: string;\n}\n\n/**\n * The container for solution.\n */\nexport interface Solution extends BaseResource {\n  /**\n   * Resource ID.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Resource name.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * Resource type.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly type?: string;\n  /**\n   * Resource location\n   */\n  location?: string;\n  /**\n   * Resource tags\n   */\n  tags?: { [propertyName: string]: string };\n  /**\n   * Plan for solution object supported by the OperationsManagement resource provider.\n   */\n  plan?: SolutionPlan;\n  /**\n   * Properties for solution object supported by the OperationsManagement resource provider.\n   */\n  properties?: SolutionProperties;\n}\n\n/**\n * the list of solution response\n */\nexport interface SolutionPropertiesList {\n  /**\n   * List of solution properties within the subscription.\n   */\n  value?: Solution[];\n}\n\n/**\n * The container for solution.\n */\nexport interface ManagementAssociation extends BaseResource {\n  /**\n   * Resource ID.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Resource name.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * Resource type.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly type?: string;\n  /**\n   * Resource location\n   */\n  location?: string;\n  /**\n   * Properties for ManagementAssociation object supported by the OperationsManagement resource\n   * provider.\n   */\n  properties?: ManagementAssociationProperties;\n}\n\n/**\n * the list of ManagementAssociation response\n */\nexport interface ManagementAssociationPropertiesList {\n  /**\n   * List of Management Association properties within the subscription.\n   */\n  value?: ManagementAssociation[];\n}\n\n/**\n * The container for solution.\n */\nexport interface ManagementConfiguration extends BaseResource {\n  /**\n   * Resource ID.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Resource name.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * Resource type.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly type?: string;\n  /**\n   * Resource location\n   */\n  location?: string;\n  /**\n   * Properties for ManagementConfiguration object supported by the OperationsManagement resource\n   * provider.\n   */\n  properties?: ManagementConfigurationProperties;\n}\n\n/**\n * the list of ManagementConfiguration response\n */\nexport interface ManagementConfigurationPropertiesList {\n  /**\n   * List of Management Configuration properties within the subscription.\n   */\n  value?: ManagementConfiguration[];\n}\n\n/**\n * The properties of a Solution that can be patched.\n */\nexport interface SolutionPatch extends BaseResource {\n  /**\n   * Resource tags\n   */\n  tags?: { [propertyName: string]: string };\n}\n\n/**\n * The error details for a failed request.\n */\nexport interface CodeMessageErrorError {\n  /**\n   * The error type.\n   */\n  code?: string;\n  /**\n   * The error message.\n   */\n  message?: string;\n}\n\n/**\n * The error body contract.\n */\nexport interface CodeMessageError {\n  /**\n   * The error details for a failed request.\n   */\n  error?: CodeMessageErrorError;\n}\n\n/**\n * An interface representing OperationsManagementClientOptions.\n */\nexport interface OperationsManagementClientOptions extends AzureServiceClientOptions {\n  baseUri?: string;\n}\n\n/**\n * @interface\n * Result of the request to list solution operations.\n * @extends Array<Operation>\n */\nexport interface OperationListResult extends Array<Operation> {\n}\n\n/**\n * Contains response data for the createOrUpdate operation.\n */\nexport type SolutionsCreateOrUpdateResponse = Solution & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: Solution;\n    };\n};\n\n/**\n * Contains response data for the update operation.\n */\nexport type SolutionsUpdateResponse = Solution & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: Solution;\n    };\n};\n\n/**\n * Contains response data for the get operation.\n */\nexport type SolutionsGetResponse = Solution & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: Solution;\n    };\n};\n\n/**\n * Contains response data for the listByResourceGroup operation.\n */\nexport type SolutionsListByResourceGroupResponse = SolutionPropertiesList & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: SolutionPropertiesList;\n    };\n};\n\n/**\n * Contains response data for the listBySubscription operation.\n */\nexport type SolutionsListBySubscriptionResponse = SolutionPropertiesList & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: SolutionPropertiesList;\n    };\n};\n\n/**\n * Contains response data for the beginCreateOrUpdate operation.\n */\nexport type SolutionsBeginCreateOrUpdateResponse = Solution & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: Solution;\n    };\n};\n\n/**\n * Contains response data for the beginUpdate operation.\n */\nexport type SolutionsBeginUpdateResponse = Solution & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: Solution;\n    };\n};\n\n/**\n * Contains response data for the listBySubscription operation.\n */\nexport type ManagementAssociationsListBySubscriptionResponse = ManagementAssociationPropertiesList & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ManagementAssociationPropertiesList;\n    };\n};\n\n/**\n * Contains response data for the createOrUpdate operation.\n */\nexport type ManagementAssociationsCreateOrUpdateResponse = ManagementAssociation & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ManagementAssociation;\n    };\n};\n\n/**\n * Contains response data for the get operation.\n */\nexport type ManagementAssociationsGetResponse = ManagementAssociation & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ManagementAssociation;\n    };\n};\n\n/**\n * Contains response data for the listBySubscription operation.\n */\nexport type ManagementConfigurationsListBySubscriptionResponse = ManagementConfigurationPropertiesList & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ManagementConfigurationPropertiesList;\n    };\n};\n\n/**\n * Contains response data for the createOrUpdate operation.\n */\nexport type ManagementConfigurationsCreateOrUpdateResponse = ManagementConfiguration & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ManagementConfiguration;\n    };\n};\n\n/**\n * Contains response data for the get operation.\n */\nexport type ManagementConfigurationsGetResponse = ManagementConfiguration & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ManagementConfiguration;\n    };\n};\n\n/**\n * Contains response data for the list operation.\n */\nexport type OperationsListResponse = OperationListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: OperationListResult;\n    };\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { CloudErrorMapper, BaseResourceMapper } from \"@azure/ms-rest-azure-js\";\nimport * as msRest from \"@azure/ms-rest-js\";\n\nexport const CloudError = CloudErrorMapper;\nexport const BaseResource = BaseResourceMapper;\n\nexport const OperationDisplay: msRest.CompositeMapper = {\n  serializedName: \"Operation_display\",\n  type: {\n    name: \"Composite\",\n    className: \"OperationDisplay\",\n    modelProperties: {\n      provider: {\n        serializedName: \"provider\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resource: {\n        serializedName: \"resource\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operation: {\n        serializedName: \"operation\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Operation: msRest.CompositeMapper = {\n  serializedName: \"Operation\",\n  type: {\n    name: \"Composite\",\n    className: \"Operation\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      display: {\n        serializedName: \"display\",\n        type: {\n          name: \"Composite\",\n          className: \"OperationDisplay\"\n        }\n      }\n    }\n  }\n};\n\nexport const SolutionProperties: msRest.CompositeMapper = {\n  serializedName: \"SolutionProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"SolutionProperties\",\n    modelProperties: {\n      workspaceResourceId: {\n        required: true,\n        serializedName: \"workspaceResourceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        readOnly: true,\n        serializedName: \"provisioningState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      containedResources: {\n        serializedName: \"containedResources\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      referencedResources: {\n        serializedName: \"referencedResources\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ManagementAssociationProperties: msRest.CompositeMapper = {\n  serializedName: \"ManagementAssociationProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"ManagementAssociationProperties\",\n    modelProperties: {\n      applicationId: {\n        required: true,\n        serializedName: \"applicationId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ArmTemplateParameter: msRest.CompositeMapper = {\n  serializedName: \"ArmTemplateParameter\",\n  type: {\n    name: \"Composite\",\n    className: \"ArmTemplateParameter\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagementConfigurationProperties: msRest.CompositeMapper = {\n  serializedName: \"ManagementConfigurationProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"ManagementConfigurationProperties\",\n    modelProperties: {\n      applicationId: {\n        serializedName: \"applicationId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      parentResourceType: {\n        required: true,\n        serializedName: \"parentResourceType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      parameters: {\n        required: true,\n        serializedName: \"parameters\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ArmTemplateParameter\"\n            }\n          }\n        }\n      },\n      provisioningState: {\n        readOnly: true,\n        serializedName: \"provisioningState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      template: {\n        required: true,\n        serializedName: \"template\",\n        type: {\n          name: \"Object\"\n        }\n      }\n    }\n  }\n};\n\nexport const SolutionPlan: msRest.CompositeMapper = {\n  serializedName: \"SolutionPlan\",\n  type: {\n    name: \"Composite\",\n    className: \"SolutionPlan\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      publisher: {\n        serializedName: \"publisher\",\n        type: {\n          name: \"String\"\n        }\n      },\n      promotionCode: {\n        serializedName: \"promotionCode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      product: {\n        serializedName: \"product\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Solution: msRest.CompositeMapper = {\n  serializedName: \"Solution\",\n  type: {\n    name: \"Composite\",\n    className: \"Solution\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        readOnly: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        readOnly: true,\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      plan: {\n        serializedName: \"plan\",\n        type: {\n          name: \"Composite\",\n          className: \"SolutionPlan\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"SolutionProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const SolutionPropertiesList: msRest.CompositeMapper = {\n  serializedName: \"SolutionPropertiesList\",\n  type: {\n    name: \"Composite\",\n    className: \"SolutionPropertiesList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Solution\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ManagementAssociation: msRest.CompositeMapper = {\n  serializedName: \"ManagementAssociation\",\n  type: {\n    name: \"Composite\",\n    className: \"ManagementAssociation\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        readOnly: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        readOnly: true,\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagementAssociationProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagementAssociationPropertiesList: msRest.CompositeMapper = {\n  serializedName: \"ManagementAssociationPropertiesList\",\n  type: {\n    name: \"Composite\",\n    className: \"ManagementAssociationPropertiesList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ManagementAssociation\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ManagementConfiguration: msRest.CompositeMapper = {\n  serializedName: \"ManagementConfiguration\",\n  type: {\n    name: \"Composite\",\n    className: \"ManagementConfiguration\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        readOnly: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        readOnly: true,\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagementConfigurationProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagementConfigurationPropertiesList: msRest.CompositeMapper = {\n  serializedName: \"ManagementConfigurationPropertiesList\",\n  type: {\n    name: \"Composite\",\n    className: \"ManagementConfigurationPropertiesList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ManagementConfiguration\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SolutionPatch: msRest.CompositeMapper = {\n  serializedName: \"SolutionPatch\",\n  type: {\n    name: \"Composite\",\n    className: \"SolutionPatch\",\n    modelProperties: {\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const CodeMessageErrorError: msRest.CompositeMapper = {\n  serializedName: \"CodeMessageError_error\",\n  type: {\n    name: \"Composite\",\n    className: \"CodeMessageErrorError\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CodeMessageError: msRest.CompositeMapper = {\n  serializedName: \"CodeMessageError\",\n  type: {\n    name: \"Composite\",\n    className: \"CodeMessageError\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"CodeMessageErrorError\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationListResult: msRest.CompositeMapper = {\n  serializedName: \"OperationListResult\",\n  type: {\n    name: \"Composite\",\n    className: \"OperationListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Operation\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  ArmTemplateParameter,\n  BaseResource,\n  CodeMessageError,\n  CodeMessageErrorError,\n  ManagementAssociation,\n  ManagementAssociationProperties,\n  ManagementConfiguration,\n  ManagementConfigurationProperties,\n  Solution,\n  SolutionPatch,\n  SolutionPlan,\n  SolutionProperties,\n  SolutionPropertiesList\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\n\nexport const acceptLanguage: msRest.OperationParameter = {\n  parameterPath: \"acceptLanguage\",\n  mapper: {\n    serializedName: \"accept-language\",\n    defaultValue: 'en-US',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const apiVersion: msRest.OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    required: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const managementAssociationName: msRest.OperationURLParameter = {\n  parameterPath: \"managementAssociationName\",\n  mapper: {\n    required: true,\n    serializedName: \"managementAssociationName\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const managementConfigurationName: msRest.OperationURLParameter = {\n  parameterPath: \"managementConfigurationName\",\n  mapper: {\n    required: true,\n    serializedName: \"managementConfigurationName\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const providerName: msRest.OperationURLParameter = {\n  parameterPath: \"providerName\",\n  mapper: {\n    required: true,\n    serializedName: \"providerName\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const resourceGroupName: msRest.OperationURLParameter = {\n  parameterPath: \"resourceGroupName\",\n  mapper: {\n    required: true,\n    serializedName: \"resourceGroupName\",\n    constraints: {\n      MaxLength: 90,\n      MinLength: 1,\n      Pattern: /^[-\\w\\._\\(\\)]+$/\n    },\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const resourceName: msRest.OperationURLParameter = {\n  parameterPath: \"resourceName\",\n  mapper: {\n    required: true,\n    serializedName: \"resourceName\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const resourceType: msRest.OperationURLParameter = {\n  parameterPath: \"resourceType\",\n  mapper: {\n    required: true,\n    serializedName: \"resourceType\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const solutionName: msRest.OperationURLParameter = {\n  parameterPath: \"solutionName\",\n  mapper: {\n    required: true,\n    serializedName: \"solutionName\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const subscriptionId: msRest.OperationURLParameter = {\n  parameterPath: \"subscriptionId\",\n  mapper: {\n    required: true,\n    serializedName: \"subscriptionId\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as msRestAzure from \"@azure/ms-rest-azure-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/solutionsMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { OperationsManagementClientContext } from \"../operationsManagementClientContext\";\n\n/** Class representing a Solutions. */\nexport class Solutions {\n  private readonly client: OperationsManagementClientContext;\n\n  /**\n   * Create a Solutions.\n   * @param {OperationsManagementClientContext} client Reference to the service client.\n   */\n  constructor(client: OperationsManagementClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Creates or updates the Solution.\n   * @summary Create/Update Solution.\n   * @param resourceGroupName The name of the resource group to get. The name is case insensitive.\n   * @param solutionName User Solution Name.\n   * @param parameters The parameters required to create OMS Solution.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.SolutionsCreateOrUpdateResponse>\n   */\n  createOrUpdate(resourceGroupName: string, solutionName: string, parameters: Models.Solution, options?: msRest.RequestOptionsBase): Promise<Models.SolutionsCreateOrUpdateResponse> {\n    return this.beginCreateOrUpdate(resourceGroupName,solutionName,parameters,options)\n      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.SolutionsCreateOrUpdateResponse>;\n  }\n\n  /**\n   * Patch a Solution. Only updating tags supported.\n   * @summary Patch a Solution.\n   * @param resourceGroupName The name of the resource group to get. The name is case insensitive.\n   * @param solutionName User Solution Name.\n   * @param parameters The parameters required to patch a Solution.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.SolutionsUpdateResponse>\n   */\n  update(resourceGroupName: string, solutionName: string, parameters: Models.SolutionPatch, options?: msRest.RequestOptionsBase): Promise<Models.SolutionsUpdateResponse> {\n    return this.beginUpdate(resourceGroupName,solutionName,parameters,options)\n      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.SolutionsUpdateResponse>;\n  }\n\n  /**\n   * Deletes the solution in the subscription.\n   * @summary Deletes the solution\n   * @param resourceGroupName The name of the resource group to get. The name is case insensitive.\n   * @param solutionName User Solution Name.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  deleteMethod(resourceGroupName: string, solutionName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse> {\n    return this.beginDeleteMethod(resourceGroupName,solutionName,options)\n      .then(lroPoller => lroPoller.pollUntilFinished());\n  }\n\n  /**\n   * Retrieves the user solution.\n   * @summary Retrieve solution.\n   * @param resourceGroupName The name of the resource group to get. The name is case insensitive.\n   * @param solutionName User Solution Name.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.SolutionsGetResponse>\n   */\n  get(resourceGroupName: string, solutionName: string, options?: msRest.RequestOptionsBase): Promise<Models.SolutionsGetResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group to get. The name is case insensitive.\n   * @param solutionName User Solution Name.\n   * @param callback The callback\n   */\n  get(resourceGroupName: string, solutionName: string, callback: msRest.ServiceCallback<Models.Solution>): void;\n  /**\n   * @param resourceGroupName The name of the resource group to get. The name is case insensitive.\n   * @param solutionName User Solution Name.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  get(resourceGroupName: string, solutionName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Solution>): void;\n  get(resourceGroupName: string, solutionName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.Solution>, callback?: msRest.ServiceCallback<Models.Solution>): Promise<Models.SolutionsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        solutionName,\n        options\n      },\n      getOperationSpec,\n      callback) as Promise<Models.SolutionsGetResponse>;\n  }\n\n  /**\n   * Retrieves the solution list. It will retrieve both first party and third party solutions\n   * @summary Retrieves the solution list for the subscription\n   * @param resourceGroupName The name of the resource group to get. The name is case insensitive.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.SolutionsListByResourceGroupResponse>\n   */\n  listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.SolutionsListByResourceGroupResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group to get. The name is case insensitive.\n   * @param callback The callback\n   */\n  listByResourceGroup(resourceGroupName: string, callback: msRest.ServiceCallback<Models.SolutionPropertiesList>): void;\n  /**\n   * @param resourceGroupName The name of the resource group to get. The name is case insensitive.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listByResourceGroup(resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SolutionPropertiesList>): void;\n  listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.SolutionPropertiesList>, callback?: msRest.ServiceCallback<Models.SolutionPropertiesList>): Promise<Models.SolutionsListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        options\n      },\n      listByResourceGroupOperationSpec,\n      callback) as Promise<Models.SolutionsListByResourceGroupResponse>;\n  }\n\n  /**\n   * Retrieves the solution list. It will retrieve both first party and third party solutions\n   * @summary Retrieves the solution list for the subscription\n   * @param [options] The optional parameters\n   * @returns Promise<Models.SolutionsListBySubscriptionResponse>\n   */\n  listBySubscription(options?: msRest.RequestOptionsBase): Promise<Models.SolutionsListBySubscriptionResponse>;\n  /**\n   * @param callback The callback\n   */\n  listBySubscription(callback: msRest.ServiceCallback<Models.SolutionPropertiesList>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listBySubscription(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SolutionPropertiesList>): void;\n  listBySubscription(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.SolutionPropertiesList>, callback?: msRest.ServiceCallback<Models.SolutionPropertiesList>): Promise<Models.SolutionsListBySubscriptionResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      listBySubscriptionOperationSpec,\n      callback) as Promise<Models.SolutionsListBySubscriptionResponse>;\n  }\n\n  /**\n   * Creates or updates the Solution.\n   * @summary Create/Update Solution.\n   * @param resourceGroupName The name of the resource group to get. The name is case insensitive.\n   * @param solutionName User Solution Name.\n   * @param parameters The parameters required to create OMS Solution.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginCreateOrUpdate(resourceGroupName: string, solutionName: string, parameters: Models.Solution, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        resourceGroupName,\n        solutionName,\n        parameters,\n        options\n      },\n      beginCreateOrUpdateOperationSpec,\n      options);\n  }\n\n  /**\n   * Patch a Solution. Only updating tags supported.\n   * @summary Patch a Solution.\n   * @param resourceGroupName The name of the resource group to get. The name is case insensitive.\n   * @param solutionName User Solution Name.\n   * @param parameters The parameters required to patch a Solution.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginUpdate(resourceGroupName: string, solutionName: string, parameters: Models.SolutionPatch, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        resourceGroupName,\n        solutionName,\n        parameters,\n        options\n      },\n      beginUpdateOperationSpec,\n      options);\n  }\n\n  /**\n   * Deletes the solution in the subscription.\n   * @summary Deletes the solution\n   * @param resourceGroupName The name of the resource group to get. The name is case insensitive.\n   * @param solutionName User Solution Name.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginDeleteMethod(resourceGroupName: string, solutionName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        resourceGroupName,\n        solutionName,\n        options\n      },\n      beginDeleteMethodOperationSpec,\n      options);\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst getOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationsManagement/solutions/{solutionName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.solutionName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.Solution\n    },\n    default: {\n      bodyMapper: Mappers.CodeMessageError\n    }\n  },\n  serializer\n};\n\nconst listByResourceGroupOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationsManagement/solutions\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.SolutionPropertiesList\n    },\n    default: {\n      bodyMapper: Mappers.CodeMessageError\n    }\n  },\n  serializer\n};\n\nconst listBySubscriptionOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/providers/Microsoft.OperationsManagement/solutions\",\n  urlParameters: [\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.SolutionPropertiesList\n    },\n    default: {\n      bodyMapper: Mappers.CodeMessageError\n    }\n  },\n  serializer\n};\n\nconst beginCreateOrUpdateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationsManagement/solutions/{solutionName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.solutionName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.Solution,\n      required: true\n    }\n  },\n  responses: {\n    201: {\n      bodyMapper: Mappers.Solution\n    },\n    default: {\n      bodyMapper: Mappers.CodeMessageError\n    }\n  },\n  serializer\n};\n\nconst beginUpdateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PATCH\",\n  path: \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationsManagement/solutions/{solutionName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.solutionName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.SolutionPatch,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.Solution\n    },\n    default: {\n      bodyMapper: Mappers.CodeMessageError\n    }\n  },\n  serializer\n};\n\nconst beginDeleteMethodOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationsManagement/solutions/{solutionName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.solutionName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.CodeMessageError\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  ArmTemplateParameter,\n  BaseResource,\n  CodeMessageError,\n  CodeMessageErrorError,\n  ManagementAssociation,\n  ManagementAssociationProperties,\n  ManagementAssociationPropertiesList,\n  ManagementConfiguration,\n  ManagementConfigurationProperties,\n  Solution,\n  SolutionPatch,\n  SolutionPlan,\n  SolutionProperties\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/managementAssociationsMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { OperationsManagementClientContext } from \"../operationsManagementClientContext\";\n\n/** Class representing a ManagementAssociations. */\nexport class ManagementAssociations {\n  private readonly client: OperationsManagementClientContext;\n\n  /**\n   * Create a ManagementAssociations.\n   * @param {OperationsManagementClientContext} client Reference to the service client.\n   */\n  constructor(client: OperationsManagementClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Retrieves the ManagementAssociations list.\n   * @summary Retrieves the ManagementAssociations list for the subscription\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ManagementAssociationsListBySubscriptionResponse>\n   */\n  listBySubscription(options?: msRest.RequestOptionsBase): Promise<Models.ManagementAssociationsListBySubscriptionResponse>;\n  /**\n   * @param callback The callback\n   */\n  listBySubscription(callback: msRest.ServiceCallback<Models.ManagementAssociationPropertiesList>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listBySubscription(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ManagementAssociationPropertiesList>): void;\n  listBySubscription(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ManagementAssociationPropertiesList>, callback?: msRest.ServiceCallback<Models.ManagementAssociationPropertiesList>): Promise<Models.ManagementAssociationsListBySubscriptionResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      listBySubscriptionOperationSpec,\n      callback) as Promise<Models.ManagementAssociationsListBySubscriptionResponse>;\n  }\n\n  /**\n   * Creates or updates the ManagementAssociation.\n   * @summary Create/Update ManagementAssociation.\n   * @param resourceGroupName The name of the resource group to get. The name is case insensitive.\n   * @param managementAssociationName User ManagementAssociation Name.\n   * @param parameters The parameters required to create ManagementAssociation extension.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ManagementAssociationsCreateOrUpdateResponse>\n   */\n  createOrUpdate(resourceGroupName: string, managementAssociationName: string, parameters: Models.ManagementAssociation, options?: msRest.RequestOptionsBase): Promise<Models.ManagementAssociationsCreateOrUpdateResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group to get. The name is case insensitive.\n   * @param managementAssociationName User ManagementAssociation Name.\n   * @param parameters The parameters required to create ManagementAssociation extension.\n   * @param callback The callback\n   */\n  createOrUpdate(resourceGroupName: string, managementAssociationName: string, parameters: Models.ManagementAssociation, callback: msRest.ServiceCallback<Models.ManagementAssociation>): void;\n  /**\n   * @param resourceGroupName The name of the resource group to get. The name is case insensitive.\n   * @param managementAssociationName User ManagementAssociation Name.\n   * @param parameters The parameters required to create ManagementAssociation extension.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  createOrUpdate(resourceGroupName: string, managementAssociationName: string, parameters: Models.ManagementAssociation, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ManagementAssociation>): void;\n  createOrUpdate(resourceGroupName: string, managementAssociationName: string, parameters: Models.ManagementAssociation, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ManagementAssociation>, callback?: msRest.ServiceCallback<Models.ManagementAssociation>): Promise<Models.ManagementAssociationsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managementAssociationName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec,\n      callback) as Promise<Models.ManagementAssociationsCreateOrUpdateResponse>;\n  }\n\n  /**\n   * Deletes the ManagementAssociation in the subscription.\n   * @summary Deletes the ManagementAssociation\n   * @param resourceGroupName The name of the resource group to get. The name is case insensitive.\n   * @param managementAssociationName User ManagementAssociation Name.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  deleteMethod(resourceGroupName: string, managementAssociationName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group to get. The name is case insensitive.\n   * @param managementAssociationName User ManagementAssociation Name.\n   * @param callback The callback\n   */\n  deleteMethod(resourceGroupName: string, managementAssociationName: string, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param resourceGroupName The name of the resource group to get. The name is case insensitive.\n   * @param managementAssociationName User ManagementAssociation Name.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  deleteMethod(resourceGroupName: string, managementAssociationName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;\n  deleteMethod(resourceGroupName: string, managementAssociationName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managementAssociationName,\n        options\n      },\n      deleteMethodOperationSpec,\n      callback);\n  }\n\n  /**\n   * Retrieves the user ManagementAssociation.\n   * @summary Retrieve ManagementAssociation.\n   * @param resourceGroupName The name of the resource group to get. The name is case insensitive.\n   * @param managementAssociationName User ManagementAssociation Name.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ManagementAssociationsGetResponse>\n   */\n  get(resourceGroupName: string, managementAssociationName: string, options?: msRest.RequestOptionsBase): Promise<Models.ManagementAssociationsGetResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group to get. The name is case insensitive.\n   * @param managementAssociationName User ManagementAssociation Name.\n   * @param callback The callback\n   */\n  get(resourceGroupName: string, managementAssociationName: string, callback: msRest.ServiceCallback<Models.ManagementAssociation>): void;\n  /**\n   * @param resourceGroupName The name of the resource group to get. The name is case insensitive.\n   * @param managementAssociationName User ManagementAssociation Name.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  get(resourceGroupName: string, managementAssociationName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ManagementAssociation>): void;\n  get(resourceGroupName: string, managementAssociationName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ManagementAssociation>, callback?: msRest.ServiceCallback<Models.ManagementAssociation>): Promise<Models.ManagementAssociationsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managementAssociationName,\n        options\n      },\n      getOperationSpec,\n      callback) as Promise<Models.ManagementAssociationsGetResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst listBySubscriptionOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/providers/Microsoft.OperationsManagement/ManagementAssociations\",\n  urlParameters: [\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagementAssociationPropertiesList\n    },\n    default: {\n      bodyMapper: Mappers.CodeMessageError\n    }\n  },\n  serializer\n};\n\nconst createOrUpdateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{providerName}/{resourceType}/{resourceName}/providers/Microsoft.OperationsManagement/ManagementAssociations/{managementAssociationName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.providerName,\n    Parameters.resourceType,\n    Parameters.resourceName,\n    Parameters.managementAssociationName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.ManagementAssociation,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagementAssociation\n    },\n    default: {\n      bodyMapper: Mappers.CodeMessageError\n    }\n  },\n  serializer\n};\n\nconst deleteMethodOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{providerName}/{resourceType}/{resourceName}/providers/Microsoft.OperationsManagement/ManagementAssociations/{managementAssociationName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.providerName,\n    Parameters.resourceType,\n    Parameters.resourceName,\n    Parameters.managementAssociationName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.CodeMessageError\n    }\n  },\n  serializer\n};\n\nconst getOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{providerName}/{resourceType}/{resourceName}/providers/Microsoft.OperationsManagement/ManagementAssociations/{managementAssociationName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.providerName,\n    Parameters.resourceType,\n    Parameters.resourceName,\n    Parameters.managementAssociationName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagementAssociation\n    },\n    default: {\n      bodyMapper: Mappers.CodeMessageError\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  ArmTemplateParameter,\n  BaseResource,\n  CodeMessageError,\n  CodeMessageErrorError,\n  ManagementAssociation,\n  ManagementAssociationProperties,\n  ManagementConfiguration,\n  ManagementConfigurationProperties,\n  ManagementConfigurationPropertiesList,\n  Solution,\n  SolutionPatch,\n  SolutionPlan,\n  SolutionProperties\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/managementConfigurationsMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { OperationsManagementClientContext } from \"../operationsManagementClientContext\";\n\n/** Class representing a ManagementConfigurations. */\nexport class ManagementConfigurations {\n  private readonly client: OperationsManagementClientContext;\n\n  /**\n   * Create a ManagementConfigurations.\n   * @param {OperationsManagementClientContext} client Reference to the service client.\n   */\n  constructor(client: OperationsManagementClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Retrieves the ManagementConfigurations list.\n   * @summary Retrieves the ManagementConfigurations list for the subscription\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ManagementConfigurationsListBySubscriptionResponse>\n   */\n  listBySubscription(options?: msRest.RequestOptionsBase): Promise<Models.ManagementConfigurationsListBySubscriptionResponse>;\n  /**\n   * @param callback The callback\n   */\n  listBySubscription(callback: msRest.ServiceCallback<Models.ManagementConfigurationPropertiesList>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listBySubscription(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ManagementConfigurationPropertiesList>): void;\n  listBySubscription(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ManagementConfigurationPropertiesList>, callback?: msRest.ServiceCallback<Models.ManagementConfigurationPropertiesList>): Promise<Models.ManagementConfigurationsListBySubscriptionResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      listBySubscriptionOperationSpec,\n      callback) as Promise<Models.ManagementConfigurationsListBySubscriptionResponse>;\n  }\n\n  /**\n   * Creates or updates the ManagementConfiguration.\n   * @summary Create/Update ManagementConfiguration.\n   * @param resourceGroupName The name of the resource group to get. The name is case insensitive.\n   * @param managementConfigurationName User Management Configuration Name.\n   * @param parameters The parameters required to create OMS Solution.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ManagementConfigurationsCreateOrUpdateResponse>\n   */\n  createOrUpdate(resourceGroupName: string, managementConfigurationName: string, parameters: Models.ManagementConfiguration, options?: msRest.RequestOptionsBase): Promise<Models.ManagementConfigurationsCreateOrUpdateResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group to get. The name is case insensitive.\n   * @param managementConfigurationName User Management Configuration Name.\n   * @param parameters The parameters required to create OMS Solution.\n   * @param callback The callback\n   */\n  createOrUpdate(resourceGroupName: string, managementConfigurationName: string, parameters: Models.ManagementConfiguration, callback: msRest.ServiceCallback<Models.ManagementConfiguration>): void;\n  /**\n   * @param resourceGroupName The name of the resource group to get. The name is case insensitive.\n   * @param managementConfigurationName User Management Configuration Name.\n   * @param parameters The parameters required to create OMS Solution.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  createOrUpdate(resourceGroupName: string, managementConfigurationName: string, parameters: Models.ManagementConfiguration, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ManagementConfiguration>): void;\n  createOrUpdate(resourceGroupName: string, managementConfigurationName: string, parameters: Models.ManagementConfiguration, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ManagementConfiguration>, callback?: msRest.ServiceCallback<Models.ManagementConfiguration>): Promise<Models.ManagementConfigurationsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managementConfigurationName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec,\n      callback) as Promise<Models.ManagementConfigurationsCreateOrUpdateResponse>;\n  }\n\n  /**\n   * Deletes the ManagementConfiguration in the subscription.\n   * @summary Deletes the ManagementConfiguration\n   * @param resourceGroupName The name of the resource group to get. The name is case insensitive.\n   * @param managementConfigurationName User Management Configuration Name.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  deleteMethod(resourceGroupName: string, managementConfigurationName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group to get. The name is case insensitive.\n   * @param managementConfigurationName User Management Configuration Name.\n   * @param callback The callback\n   */\n  deleteMethod(resourceGroupName: string, managementConfigurationName: string, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param resourceGroupName The name of the resource group to get. The name is case insensitive.\n   * @param managementConfigurationName User Management Configuration Name.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  deleteMethod(resourceGroupName: string, managementConfigurationName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;\n  deleteMethod(resourceGroupName: string, managementConfigurationName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managementConfigurationName,\n        options\n      },\n      deleteMethodOperationSpec,\n      callback);\n  }\n\n  /**\n   * Retrieves the user ManagementConfiguration.\n   * @summary Retrieve ManagementConfiguration.\n   * @param resourceGroupName The name of the resource group to get. The name is case insensitive.\n   * @param managementConfigurationName User Management Configuration Name.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ManagementConfigurationsGetResponse>\n   */\n  get(resourceGroupName: string, managementConfigurationName: string, options?: msRest.RequestOptionsBase): Promise<Models.ManagementConfigurationsGetResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group to get. The name is case insensitive.\n   * @param managementConfigurationName User Management Configuration Name.\n   * @param callback The callback\n   */\n  get(resourceGroupName: string, managementConfigurationName: string, callback: msRest.ServiceCallback<Models.ManagementConfiguration>): void;\n  /**\n   * @param resourceGroupName The name of the resource group to get. The name is case insensitive.\n   * @param managementConfigurationName User Management Configuration Name.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  get(resourceGroupName: string, managementConfigurationName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ManagementConfiguration>): void;\n  get(resourceGroupName: string, managementConfigurationName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ManagementConfiguration>, callback?: msRest.ServiceCallback<Models.ManagementConfiguration>): Promise<Models.ManagementConfigurationsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managementConfigurationName,\n        options\n      },\n      getOperationSpec,\n      callback) as Promise<Models.ManagementConfigurationsGetResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst listBySubscriptionOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/providers/Microsoft.OperationsManagement/ManagementConfigurations\",\n  urlParameters: [\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagementConfigurationPropertiesList\n    },\n    default: {\n      bodyMapper: Mappers.CodeMessageError\n    }\n  },\n  serializer\n};\n\nconst createOrUpdateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationsManagement/ManagementConfigurations/{managementConfigurationName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.managementConfigurationName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.ManagementConfiguration,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagementConfiguration\n    },\n    default: {\n      bodyMapper: Mappers.CodeMessageError\n    }\n  },\n  serializer\n};\n\nconst deleteMethodOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationsManagement/ManagementConfigurations/{managementConfigurationName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.managementConfigurationName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.CodeMessageError\n    }\n  },\n  serializer\n};\n\nconst getOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationsManagement/ManagementConfigurations/{managementConfigurationName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.managementConfigurationName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagementConfiguration\n    },\n    default: {\n      bodyMapper: Mappers.CodeMessageError\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  CloudError,\n  Operation,\n  OperationDisplay,\n  OperationListResult\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/operationsMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { OperationsManagementClientContext } from \"../operationsManagementClientContext\";\n\n/** Class representing a Operations. */\nexport class Operations {\n  private readonly client: OperationsManagementClientContext;\n\n  /**\n   * Create a Operations.\n   * @param {OperationsManagementClientContext} client Reference to the service client.\n   */\n  constructor(client: OperationsManagementClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all of the available OperationsManagement Rest API operations.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.OperationsListResponse>\n   */\n  list(options?: msRest.RequestOptionsBase): Promise<Models.OperationsListResponse>;\n  /**\n   * @param callback The callback\n   */\n  list(callback: msRest.ServiceCallback<Models.OperationListResult>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  list(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.OperationListResult>): void;\n  list(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.OperationListResult>, callback?: msRest.ServiceCallback<Models.OperationListResult>): Promise<Models.OperationsListResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      listOperationSpec,\n      callback) as Promise<Models.OperationsListResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst listOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"providers/Microsoft.OperationsManagement/operations\",\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as Models from \"./models\";\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as msRestAzure from \"@azure/ms-rest-azure-js\";\nimport { TokenCredential } from \"@azure/core-auth\";\n\nconst packageName = \"@azure/arm-operations\";\nconst packageVersion = \"3.0.0\";\n\nexport class OperationsManagementClientContext extends msRestAzure.AzureServiceClient {\n  credentials: msRest.ServiceClientCredentials | TokenCredential;\n  subscriptionId: string;\n  apiVersion?: string;\n  providerName: string;\n  resourceType: string;\n  resourceName: string;\n\n  /**\n   * Initializes a new instance of the OperationsManagementClient class.\n   * @param credentials Credentials needed for the client to connect to Azure. Credentials\n   * implementing the TokenCredential interface from the @azure/identity package are recommended. For\n   * more information about these credentials, see\n   * {@link https://www.npmjs.com/package/@azure/identity}. Credentials implementing the\n   * ServiceClientCredentials interface from the older packages @azure/ms-rest-nodeauth and\n   * @azure/ms-rest-browserauth are also supported.\n   * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure\n   * subscription. The subscription ID forms part of the URI for every service call.\n   * @param providerName Provider name for the parent resource.\n   * @param resourceType Resource type for the parent resource\n   * @param resourceName Parent resource name.\n   * @param [options] The parameter options\n   */\n  constructor(credentials: msRest.ServiceClientCredentials | TokenCredential, subscriptionId: string, providerName: string, resourceType: string, resourceName: string, options?: Models.OperationsManagementClientOptions) {\n    if (credentials == undefined) {\n      throw new Error('\\'credentials\\' cannot be null.');\n    }\n    if (subscriptionId == undefined) {\n      throw new Error('\\'subscriptionId\\' cannot be null.');\n    }\n    if (providerName == undefined) {\n      throw new Error('\\'providerName\\' cannot be null.');\n    }\n    if (resourceType == undefined) {\n      throw new Error('\\'resourceType\\' cannot be null.');\n    }\n    if (resourceName == undefined) {\n      throw new Error('\\'resourceName\\' cannot be null.');\n    }\n\n    if (!options) {\n      options = {};\n    }\n    if (!options.userAgent) {\n      const defaultUserAgent = msRestAzure.getDefaultUserAgentValue();\n      options.userAgent = `${packageName}/${packageVersion} ${defaultUserAgent}`;\n    }\n\n    super(credentials, options);\n\n    this.apiVersion = '2015-11-01-preview';\n    this.acceptLanguage = 'en-US';\n    this.longRunningOperationRetryTimeout = 30;\n    this.baseUri = options.baseUri || this.baseUri || \"https://management.azure.com\";\n    this.requestContentType = \"application/json; charset=utf-8\";\n    this.credentials = credentials;\n    this.subscriptionId = subscriptionId;\n    this.providerName = providerName;\n    this.resourceType = resourceType;\n    this.resourceName = resourceName;\n\n    if (options.acceptLanguage !== null && options.acceptLanguage !== undefined) {\n      this.acceptLanguage = options.acceptLanguage;\n    }\n    if (options.longRunningOperationRetryTimeout !== null && options.longRunningOperationRetryTimeout !== undefined) {\n      this.longRunningOperationRetryTimeout = options.longRunningOperationRetryTimeout;\n    }\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport { TokenCredential } from \"@azure/core-auth\";\nimport * as Models from \"./models\";\nimport * as Mappers from \"./models/mappers\";\nimport * as operations from \"./operations\";\nimport { OperationsManagementClientContext } from \"./operationsManagementClientContext\";\n\n\nclass OperationsManagementClient extends OperationsManagementClientContext {\n  // Operation groups\n  solutions: operations.Solutions;\n  managementAssociations: operations.ManagementAssociations;\n  managementConfigurations: operations.ManagementConfigurations;\n  operations: operations.Operations;\n\n  /**\n   * Initializes a new instance of the OperationsManagementClient class.\n   * @param credentials Credentials needed for the client to connect to Azure. Credentials\n   * implementing the TokenCredential interface from the @azure/identity package are recommended. For\n   * more information about these credentials, see\n   * {@link https://www.npmjs.com/package/@azure/identity}. Credentials implementing the\n   * ServiceClientCredentials interface from the older packages @azure/ms-rest-nodeauth and\n   * @azure/ms-rest-browserauth are also supported.\n   * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure\n   * subscription. The subscription ID forms part of the URI for every service call.\n   * @param providerName Provider name for the parent resource.\n   * @param resourceType Resource type for the parent resource\n   * @param resourceName Parent resource name.\n   * @param [options] The parameter options\n   */\n  constructor(credentials: msRest.ServiceClientCredentials | TokenCredential, subscriptionId: string, providerName: string, resourceType: string, resourceName: string, options?: Models.OperationsManagementClientOptions) {\n    super(credentials, subscriptionId, providerName, resourceType, resourceName, options);\n    this.solutions = new operations.Solutions(this);\n    this.managementAssociations = new operations.ManagementAssociations(this);\n    this.managementConfigurations = new operations.ManagementConfigurations(this);\n    this.operations = new operations.Operations(this);\n  }\n}\n\n// Operation Specifications\n\nexport {\n  OperationsManagementClient,\n  OperationsManagementClientContext,\n  Models as OperationsManagementModels,\n  Mappers as OperationsManagementMappers\n};\nexport * from \"./operations\";\n"],"names":["CloudErrorMapper","BaseResourceMapper","msRest.Serializer","Parameters.subscriptionId","Parameters.resourceGroupName","Parameters.solutionName","Parameters.apiVersion","Parameters.acceptLanguage","Mappers.Solution","Mappers.CodeMessageError","Mappers.SolutionPropertiesList","Mappers.SolutionPatch","listBySubscriptionOperationSpec","getOperationSpec","serializer","Mappers","Mappers.ManagementAssociationPropertiesList","Parameters.providerName","Parameters.resourceType","Parameters.resourceName","Parameters.managementAssociationName","Mappers.ManagementAssociation","createOrUpdateOperationSpec","deleteMethodOperationSpec","Mappers.ManagementConfigurationPropertiesList","Parameters.managementConfigurationName","Mappers.ManagementConfiguration","Mappers.OperationListResult","Mappers.CloudError","msRestAzure.getDefaultUserAgentValue","msRestAzure.AzureServiceClient","operations.Solutions","operations.ManagementAssociations","operations.ManagementConfigurations","operations.Operations"],"mappings":";;;;;;;;;;;;;IAAA;IACA;AACA;IACA;IACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA,IAAI,aAAa,GAAG,SAAS,CAAC,EAAE,CAAC,EAAE;IACnC,IAAI,aAAa,GAAG,MAAM,CAAC,cAAc;IACzC,SAAS,EAAE,SAAS,EAAE,EAAE,EAAE,YAAY,KAAK,IAAI,UAAU,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC;IACpF,QAAQ,UAAU,CAAC,EAAE,CAAC,EAAE,EAAE,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACnF,IAAI,OAAO,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC;AACF;IACO,SAAS,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE;IAChC,IAAI,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACxB,IAAI,SAAS,EAAE,GAAG,EAAE,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE;IAC3C,IAAI,CAAC,CAAC,SAAS,GAAG,CAAC,KAAK,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;IACzF,CAAC;AACD;IACO,IAAI,QAAQ,GAAG,WAAW;IACjC,IAAI,QAAQ,GAAG,MAAM,CAAC,MAAM,IAAI,SAAS,QAAQ,CAAC,CAAC,EAAE;IACrD,QAAQ,KAAK,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAC7D,YAAY,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;IAC7B,YAAY,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACzF,SAAS;IACT,QAAQ,OAAO,CAAC,CAAC;IACjB,MAAK;IACL,IAAI,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IAC3C;;ICtCA;;;;;;OAMG;;;;;;ICNH;;;;;;;AAQA,IAGO,IAAM,UAAU,GAAGA,4BAAgB,CAAC;AAC3C,IAAO,IAAM,YAAY,GAAGC,8BAAkB,CAAC;AAE/C,IAAO,IAAM,gBAAgB,GAA2B;QACtD,cAAc,EAAE,mBAAmB;QACnC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,kBAAkB;YAC7B,eAAe,EAAE;gBACf,QAAQ,EAAE;oBACR,cAAc,EAAE,UAAU;oBAC1B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,QAAQ,EAAE;oBACR,cAAc,EAAE,UAAU;oBAC1B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,SAAS,EAAE;oBACT,cAAc,EAAE,WAAW;oBAC3B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,SAAS,GAA2B;QAC/C,cAAc,EAAE,WAAW;QAC3B,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,WAAW;YACtB,eAAe,EAAE;gBACf,IAAI,EAAE;oBACJ,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,OAAO,EAAE;oBACP,cAAc,EAAE,SAAS;oBACzB,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,kBAAkB;qBAC9B;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,kBAAkB,GAA2B;QACxD,cAAc,EAAE,oBAAoB;QACpC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,oBAAoB;YAC/B,eAAe,EAAE;gBACf,mBAAmB,EAAE;oBACnB,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,qBAAqB;oBACrC,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,iBAAiB,EAAE;oBACjB,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,mBAAmB;oBACnC,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,kBAAkB,EAAE;oBAClB,cAAc,EAAE,oBAAoB;oBACpC,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,QAAQ;6BACf;yBACF;qBACF;iBACF;gBACD,mBAAmB,EAAE;oBACnB,cAAc,EAAE,qBAAqB;oBACrC,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,QAAQ;6BACf;yBACF;qBACF;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,+BAA+B,GAA2B;QACrE,cAAc,EAAE,iCAAiC;QACjD,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,iCAAiC;YAC5C,eAAe,EAAE;gBACf,aAAa,EAAE;oBACb,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,eAAe;oBAC/B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,oBAAoB,GAA2B;QAC1D,cAAc,EAAE,sBAAsB;QACtC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,sBAAsB;YACjC,eAAe,EAAE;gBACf,IAAI,EAAE;oBACJ,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,KAAK,EAAE;oBACL,cAAc,EAAE,OAAO;oBACvB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,iCAAiC,GAA2B;QACvE,cAAc,EAAE,mCAAmC;QACnD,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,mCAAmC;YAC9C,eAAe,EAAE;gBACf,aAAa,EAAE;oBACb,cAAc,EAAE,eAAe;oBAC/B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,kBAAkB,EAAE;oBAClB,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,oBAAoB;oBACpC,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,UAAU,EAAE;oBACV,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,YAAY;oBAC5B,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,WAAW;gCACjB,SAAS,EAAE,sBAAsB;6BAClC;yBACF;qBACF;iBACF;gBACD,iBAAiB,EAAE;oBACjB,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,mBAAmB;oBACnC,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,QAAQ,EAAE;oBACR,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,UAAU;oBAC1B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,YAAY,GAA2B;QAClD,cAAc,EAAE,cAAc;QAC9B,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,cAAc;YACzB,eAAe,EAAE;gBACf,IAAI,EAAE;oBACJ,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,SAAS,EAAE;oBACT,cAAc,EAAE,WAAW;oBAC3B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,aAAa,EAAE;oBACb,cAAc,EAAE,eAAe;oBAC/B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,OAAO,EAAE;oBACP,cAAc,EAAE,SAAS;oBACzB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,QAAQ,GAA2B;QAC9C,cAAc,EAAE,UAAU;QAC1B,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,UAAU;YACrB,eAAe,EAAE;gBACf,EAAE,EAAE;oBACF,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,IAAI;oBACpB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,IAAI,EAAE;oBACJ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,IAAI,EAAE;oBACJ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,QAAQ,EAAE;oBACR,cAAc,EAAE,UAAU;oBAC1B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,IAAI,EAAE;oBACJ,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,YAAY;wBAClB,KAAK,EAAE;4BACL,IAAI,EAAE;gCACJ,IAAI,EAAE,QAAQ;6BACf;yBACF;qBACF;iBACF;gBACD,IAAI,EAAE;oBACJ,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,cAAc;qBAC1B;iBACF;gBACD,UAAU,EAAE;oBACV,cAAc,EAAE,YAAY;oBAC5B,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,oBAAoB;qBAChC;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,sBAAsB,GAA2B;QAC5D,cAAc,EAAE,wBAAwB;QACxC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,wBAAwB;YACnC,eAAe,EAAE;gBACf,KAAK,EAAE;oBACL,cAAc,EAAE,OAAO;oBACvB,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,WAAW;gCACjB,SAAS,EAAE,UAAU;6BACtB;yBACF;qBACF;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,qBAAqB,GAA2B;QAC3D,cAAc,EAAE,uBAAuB;QACvC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,uBAAuB;YAClC,eAAe,EAAE;gBACf,EAAE,EAAE;oBACF,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,IAAI;oBACpB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,IAAI,EAAE;oBACJ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,IAAI,EAAE;oBACJ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,QAAQ,EAAE;oBACR,cAAc,EAAE,UAAU;oBAC1B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,UAAU,EAAE;oBACV,cAAc,EAAE,YAAY;oBAC5B,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,iCAAiC;qBAC7C;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,mCAAmC,GAA2B;QACzE,cAAc,EAAE,qCAAqC;QACrD,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,qCAAqC;YAChD,eAAe,EAAE;gBACf,KAAK,EAAE;oBACL,cAAc,EAAE,OAAO;oBACvB,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,WAAW;gCACjB,SAAS,EAAE,uBAAuB;6BACnC;yBACF;qBACF;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,uBAAuB,GAA2B;QAC7D,cAAc,EAAE,yBAAyB;QACzC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,yBAAyB;YACpC,eAAe,EAAE;gBACf,EAAE,EAAE;oBACF,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,IAAI;oBACpB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,IAAI,EAAE;oBACJ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,IAAI,EAAE;oBACJ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,QAAQ,EAAE;oBACR,cAAc,EAAE,UAAU;oBAC1B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,UAAU,EAAE;oBACV,cAAc,EAAE,YAAY;oBAC5B,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,mCAAmC;qBAC/C;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,qCAAqC,GAA2B;QAC3E,cAAc,EAAE,uCAAuC;QACvD,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,uCAAuC;YAClD,eAAe,EAAE;gBACf,KAAK,EAAE;oBACL,cAAc,EAAE,OAAO;oBACvB,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,WAAW;gCACjB,SAAS,EAAE,yBAAyB;6BACrC;yBACF;qBACF;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,aAAa,GAA2B;QACnD,cAAc,EAAE,eAAe;QAC/B,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,eAAe;YAC1B,eAAe,EAAE;gBACf,IAAI,EAAE;oBACJ,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,YAAY;wBAClB,KAAK,EAAE;4BACL,IAAI,EAAE;gCACJ,IAAI,EAAE,QAAQ;6BACf;yBACF;qBACF;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,qBAAqB,GAA2B;QAC3D,cAAc,EAAE,wBAAwB;QACxC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,uBAAuB;YAClC,eAAe,EAAE;gBACf,IAAI,EAAE;oBACJ,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,OAAO,EAAE;oBACP,cAAc,EAAE,SAAS;oBACzB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,gBAAgB,GAA2B;QACtD,cAAc,EAAE,kBAAkB;QAClC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,kBAAkB;YAC7B,eAAe,EAAE;gBACf,KAAK,EAAE;oBACL,cAAc,EAAE,OAAO;oBACvB,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,uBAAuB;qBACnC;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,mBAAmB,GAA2B;QACzD,cAAc,EAAE,qBAAqB;QACrC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,qBAAqB;YAChC,eAAe,EAAE;gBACf,KAAK,EAAE;oBACL,cAAc,EAAE,EAAE;oBAClB,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,WAAW;gCACjB,SAAS,EAAE,WAAW;6BACvB;yBACF;qBACF;iBACF;aACF;SACF;KACF,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;IClhBF;;;;;;OAMG;;;;;;;;;;;;;;;;;;;ICNH;;;;;;;;AAWA,IAAO,IAAM,cAAc,GAA8B;QACvD,aAAa,EAAE,gBAAgB;QAC/B,MAAM,EAAE;YACN,cAAc,EAAE,iBAAiB;YACjC,YAAY,EAAE,OAAO;YACrB,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;aACf;SACF;KACF,CAAC;AACF,IAAO,IAAM,UAAU,GAAmC;QACxD,aAAa,EAAE,YAAY;QAC3B,MAAM,EAAE;YACN,QAAQ,EAAE,IAAI;YACd,cAAc,EAAE,aAAa;YAC7B,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;aACf;SACF;KACF,CAAC;AACF,IAAO,IAAM,yBAAyB,GAAiC;QACrE,aAAa,EAAE,2BAA2B;QAC1C,MAAM,EAAE;YACN,QAAQ,EAAE,IAAI;YACd,cAAc,EAAE,2BAA2B;YAC3C,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;aACf;SACF;KACF,CAAC;AACF,IAAO,IAAM,2BAA2B,GAAiC;QACvE,aAAa,EAAE,6BAA6B;QAC5C,MAAM,EAAE;YACN,QAAQ,EAAE,IAAI;YACd,cAAc,EAAE,6BAA6B;YAC7C,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;aACf;SACF;KACF,CAAC;AACF,IAAO,IAAM,YAAY,GAAiC;QACxD,aAAa,EAAE,cAAc;QAC7B,MAAM,EAAE;YACN,QAAQ,EAAE,IAAI;YACd,cAAc,EAAE,cAAc;YAC9B,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;aACf;SACF;KACF,CAAC;AACF,IAAO,IAAM,iBAAiB,GAAiC;QAC7D,aAAa,EAAE,mBAAmB;QAClC,MAAM,EAAE;YACN,QAAQ,EAAE,IAAI;YACd,cAAc,EAAE,mBAAmB;YACnC,WAAW,EAAE;gBACX,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC;gBACZ,OAAO,EAAE,iBAAiB;aAC3B;YACD,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;aACf;SACF;KACF,CAAC;AACF,IAAO,IAAM,YAAY,GAAiC;QACxD,aAAa,EAAE,cAAc;QAC7B,MAAM,EAAE;YACN,QAAQ,EAAE,IAAI;YACd,cAAc,EAAE,cAAc;YAC9B,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;aACf;SACF;KACF,CAAC;AACF,IAAO,IAAM,YAAY,GAAiC;QACxD,aAAa,EAAE,cAAc;QAC7B,MAAM,EAAE;YACN,QAAQ,EAAE,IAAI;YACd,cAAc,EAAE,cAAc;YAC9B,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;aACf;SACF;KACF,CAAC;AACF,IAAO,IAAM,YAAY,GAAiC;QACxD,aAAa,EAAE,cAAc;QAC7B,MAAM,EAAE;YACN,QAAQ,EAAE,IAAI;YACd,cAAc,EAAE,cAAc;YAC9B,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;aACf;SACF;KACF,CAAC;AACF,IAAO,IAAM,cAAc,GAAiC;QAC1D,aAAa,EAAE,gBAAgB;QAC/B,MAAM,EAAE;YACN,QAAQ,EAAE,IAAI;YACd,cAAc,EAAE,gBAAgB;YAChC,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;aACf;SACF;KACF,CAAC;;ICnHF;;;;;;;;IAgBA;AACA;;;;;QAOE,mBAAY,MAAyC;YACnD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACtB;;;;;;;;;;QAWD,kCAAc,GAAd,UAAe,iBAAyB,EAAE,YAAoB,EAAE,UAA2B,EAAE,OAAmC;YAC9H,OAAO,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,EAAC,YAAY,EAAC,UAAU,EAAC,OAAO,CAAC;iBAC/E,IAAI,CAAC,UAAA,SAAS,IAAI,OAAA,SAAS,CAAC,iBAAiB,EAAE,GAAA,CAAoD,CAAC;SACxG;;;;;;;;;;QAWD,0BAAM,GAAN,UAAO,iBAAyB,EAAE,YAAoB,EAAE,UAAgC,EAAE,OAAmC;YAC3H,OAAO,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAC,YAAY,EAAC,UAAU,EAAC,OAAO,CAAC;iBACvE,IAAI,CAAC,UAAA,SAAS,IAAI,OAAA,SAAS,CAAC,iBAAiB,EAAE,GAAA,CAA4C,CAAC;SAChG;;;;;;;;;QAUD,gCAAY,GAAZ,UAAa,iBAAyB,EAAE,YAAoB,EAAE,OAAmC;YAC/F,OAAO,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,EAAC,YAAY,EAAC,OAAO,CAAC;iBAClE,IAAI,CAAC,UAAA,SAAS,IAAI,OAAA,SAAS,CAAC,iBAAiB,EAAE,GAAA,CAAC,CAAC;SACrD;QAwBD,uBAAG,GAAH,UAAI,iBAAyB,EAAE,YAAoB,EAAE,OAA6E,EAAE,QAAkD;YACpL,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,iBAAiB,mBAAA;gBACjB,YAAY,cAAA;gBACZ,OAAO,SAAA;aACR,EACD,gBAAgB,EAChB,QAAQ,CAAyC,CAAC;SACrD;QAqBD,uCAAmB,GAAnB,UAAoB,iBAAyB,EAAE,OAA2F,EAAE,QAAgE;YAC1M,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,iBAAiB,mBAAA;gBACjB,OAAO,SAAA;aACR,EACD,gCAAgC,EAChC,QAAQ,CAAyD,CAAC;SACrE;QAkBD,sCAAkB,GAAlB,UAAmB,OAA2F,EAAE,QAAgE;YAC9K,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,OAAO,SAAA;aACR,EACD,+BAA+B,EAC/B,QAAQ,CAAwD,CAAC;SACpE;;;;;;;;;;QAWD,uCAAmB,GAAnB,UAAoB,iBAAyB,EAAE,YAAoB,EAAE,UAA2B,EAAE,OAAmC;YACnI,OAAO,IAAI,CAAC,MAAM,CAAC,cAAc,CAC/B;gBACE,iBAAiB,mBAAA;gBACjB,YAAY,cAAA;gBACZ,UAAU,YAAA;gBACV,OAAO,SAAA;aACR,EACD,gCAAgC,EAChC,OAAO,CAAC,CAAC;SACZ;;;;;;;;;;QAWD,+BAAW,GAAX,UAAY,iBAAyB,EAAE,YAAoB,EAAE,UAAgC,EAAE,OAAmC;YAChI,OAAO,IAAI,CAAC,MAAM,CAAC,cAAc,CAC/B;gBACE,iBAAiB,mBAAA;gBACjB,YAAY,cAAA;gBACZ,UAAU,YAAA;gBACV,OAAO,SAAA;aACR,EACD,wBAAwB,EACxB,OAAO,CAAC,CAAC;SACZ;;;;;;;;;QAUD,qCAAiB,GAAjB,UAAkB,iBAAyB,EAAE,YAAoB,EAAE,OAAmC;YACpG,OAAO,IAAI,CAAC,MAAM,CAAC,cAAc,CAC/B;gBACE,iBAAiB,mBAAA;gBACjB,YAAY,cAAA;gBACZ,OAAO,SAAA;aACR,EACD,8BAA8B,EAC9B,OAAO,CAAC,CAAC;SACZ;QACH,gBAAC;IAAD,CAAC,IAAA;IAED;IACA,IAAM,UAAU,GAAG,IAAIC,iBAAiB,CAAC,OAAO,CAAC,CAAC;IAClD,IAAM,gBAAgB,GAAyB;QAC7C,UAAU,EAAE,KAAK;QACjB,IAAI,EAAE,qIAAqI;QAC3I,aAAa,EAAE;YACbC,cAAyB;YACzBC,iBAA4B;YAC5BC,YAAuB;SACxB;QACD,eAAe,EAAE;YACfC,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAEC,QAAgB;aAC7B;YACD,OAAO,EAAE;gBACP,UAAU,EAAEC,gBAAwB;aACrC;SACF;QACD,UAAU,YAAA;KACX,CAAC;IAEF,IAAM,gCAAgC,GAAyB;QAC7D,UAAU,EAAE,KAAK;QACjB,IAAI,EAAE,sHAAsH;QAC5H,aAAa,EAAE;YACbN,cAAyB;YACzBC,iBAA4B;SAC7B;QACD,eAAe,EAAE;YACfE,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAEG,sBAA8B;aAC3C;YACD,OAAO,EAAE;gBACP,UAAU,EAAED,gBAAwB;aACrC;SACF;QACD,UAAU,YAAA;KACX,CAAC;IAEF,IAAM,+BAA+B,GAAyB;QAC5D,UAAU,EAAE,KAAK;QACjB,IAAI,EAAE,mFAAmF;QACzF,aAAa,EAAE;YACbN,cAAyB;SAC1B;QACD,eAAe,EAAE;YACfG,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAEG,sBAA8B;aAC3C;YACD,OAAO,EAAE;gBACP,UAAU,EAAED,gBAAwB;aACrC;SACF;QACD,UAAU,YAAA;KACX,CAAC;IAEF,IAAM,gCAAgC,GAAyB;QAC7D,UAAU,EAAE,KAAK;QACjB,IAAI,EAAE,qIAAqI;QAC3I,aAAa,EAAE;YACbN,cAAyB;YACzBC,iBAA4B;YAC5BC,YAAuB;SACxB;QACD,eAAe,EAAE;YACfC,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,WAAW,EAAE;YACX,aAAa,EAAE,YAAY;YAC3B,MAAM,wBACDC,QAAgB,KACnB,QAAQ,EAAE,IAAI,GACf;SACF;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAEA,QAAgB;aAC7B;YACD,OAAO,EAAE;gBACP,UAAU,EAAEC,gBAAwB;aACrC;SACF;QACD,UAAU,YAAA;KACX,CAAC;IAEF,IAAM,wBAAwB,GAAyB;QACrD,UAAU,EAAE,OAAO;QACnB,IAAI,EAAE,qIAAqI;QAC3I,aAAa,EAAE;YACbN,cAAyB;YACzBC,iBAA4B;YAC5BC,YAAuB;SACxB;QACD,eAAe,EAAE;YACfC,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,WAAW,EAAE;YACX,aAAa,EAAE,YAAY;YAC3B,MAAM,wBACDI,aAAqB,KACxB,QAAQ,EAAE,IAAI,GACf;SACF;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAEH,QAAgB;aAC7B;YACD,OAAO,EAAE;gBACP,UAAU,EAAEC,gBAAwB;aACrC;SACF;QACD,UAAU,YAAA;KACX,CAAC;IAEF,IAAM,8BAA8B,GAAyB;QAC3D,UAAU,EAAE,QAAQ;QACpB,IAAI,EAAE,qIAAqI;QAC3I,aAAa,EAAE;YACbN,cAAyB;YACzBC,iBAA4B;YAC5BC,YAAuB;SACxB;QACD,eAAe,EAAE;YACfC,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,SAAS,EAAE;YACT,GAAG,EAAE,EAAE;YACP,OAAO,EAAE;gBACP,UAAU,EAAEE,gBAAwB;aACrC;SACF;QACD,UAAU,YAAA;KACX,CAAC;;ICzXF;;;;;;OAMG;;;;;;;;;;;;;;;;;;;ICNH;;;;;;;;IAeA;AACA;;;;;QAOE,gCAAY,MAAyC;YACnD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACtB;QAkBD,mDAAkB,GAAlB,UAAmB,OAAwG,EAAE,QAA6E;YACxM,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,OAAO,SAAA;aACR,EACDG,iCAA+B,EAC/B,QAAQ,CAAqE,CAAC;SACjF;QA2BD,+CAAc,GAAd,UAAe,iBAAyB,EAAE,yBAAiC,EAAE,UAAwC,EAAE,OAA0F,EAAE,QAA+D;YAChR,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,iBAAiB,mBAAA;gBACjB,yBAAyB,2BAAA;gBACzB,UAAU,YAAA;gBACV,OAAO,SAAA;aACR,EACD,2BAA2B,EAC3B,QAAQ,CAAiE,CAAC;SAC7E;QAwBD,6CAAY,GAAZ,UAAa,iBAAyB,EAAE,yBAAiC,EAAE,OAAkE,EAAE,QAAuC;YACpL,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,iBAAiB,mBAAA;gBACjB,yBAAyB,2BAAA;gBACzB,OAAO,SAAA;aACR,EACD,yBAAyB,EACzB,QAAQ,CAAC,CAAC;SACb;QAwBD,oCAAG,GAAH,UAAI,iBAAyB,EAAE,yBAAiC,EAAE,OAA0F,EAAE,QAA+D;YAC3N,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,iBAAiB,mBAAA;gBACjB,yBAAyB,2BAAA;gBACzB,OAAO,SAAA;aACR,EACDC,kBAAgB,EAChB,QAAQ,CAAsD,CAAC;SAClE;QACH,6BAAC;IAAD,CAAC,IAAA;IAED;IACA,IAAMC,YAAU,GAAG,IAAIZ,iBAAiB,CAACa,SAAO,CAAC,CAAC;IAClD,IAAMH,iCAA+B,GAAyB;QAC5D,UAAU,EAAE,KAAK;QACjB,IAAI,EAAE,gGAAgG;QACtG,aAAa,EAAE;YACbT,cAAyB;SAC1B;QACD,eAAe,EAAE;YACfG,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAES,mCAA2C;aACxD;YACD,OAAO,EAAE;gBACP,UAAU,EAAEP,gBAAwB;aACrC;SACF;QACD,UAAU,cAAA;KACX,CAAC;IAEF,IAAM,2BAA2B,GAAyB;QACxD,UAAU,EAAE,KAAK;QACjB,IAAI,EAAE,sNAAsN;QAC5N,aAAa,EAAE;YACbN,cAAyB;YACzBC,iBAA4B;YAC5Ba,YAAuB;YACvBC,YAAuB;YACvBC,YAAuB;YACvBC,yBAAoC;SACrC;QACD,eAAe,EAAE;YACfd,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,WAAW,EAAE;YACX,aAAa,EAAE,YAAY;YAC3B,MAAM,wBACDc,qBAA6B,KAChC,QAAQ,EAAE,IAAI,GACf;SACF;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAEA,qBAA6B;aAC1C;YACD,OAAO,EAAE;gBACP,UAAU,EAAEZ,gBAAwB;aACrC;SACF;QACD,UAAU,cAAA;KACX,CAAC;IAEF,IAAM,yBAAyB,GAAyB;QACtD,UAAU,EAAE,QAAQ;QACpB,IAAI,EAAE,sNAAsN;QAC5N,aAAa,EAAE;YACbN,cAAyB;YACzBC,iBAA4B;YAC5Ba,YAAuB;YACvBC,YAAuB;YACvBC,YAAuB;YACvBC,yBAAoC;SACrC;QACD,eAAe,EAAE;YACfd,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,SAAS,EAAE;YACT,GAAG,EAAE,EAAE;YACP,OAAO,EAAE;gBACP,UAAU,EAAEE,gBAAwB;aACrC;SACF;QACD,UAAU,cAAA;KACX,CAAC;IAEF,IAAMI,kBAAgB,GAAyB;QAC7C,UAAU,EAAE,KAAK;QACjB,IAAI,EAAE,sNAAsN;QAC5N,aAAa,EAAE;YACbV,cAAyB;YACzBC,iBAA4B;YAC5Ba,YAAuB;YACvBC,YAAuB;YACvBC,YAAuB;YACvBC,yBAAoC;SACrC;QACD,eAAe,EAAE;YACfd,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAEc,qBAA6B;aAC1C;YACD,OAAO,EAAE;gBACP,UAAU,EAAEZ,gBAAwB;aACrC;SACF;QACD,UAAU,cAAA;KACX,CAAC;;IC5QF;;;;;;OAMG;;;;;;;;;;;;;;;;;;;ICNH;;;;;;;;IAeA;AACA;;;;;QAOE,kCAAY,MAAyC;YACnD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACtB;QAkBD,qDAAkB,GAAlB,UAAmB,OAA0G,EAAE,QAA+E;YAC5M,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,OAAO,SAAA;aACR,EACDG,iCAA+B,EAC/B,QAAQ,CAAuE,CAAC;SACnF;QA2BD,iDAAc,GAAd,UAAe,iBAAyB,EAAE,2BAAmC,EAAE,UAA0C,EAAE,OAA4F,EAAE,QAAiE;YACxR,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,iBAAiB,mBAAA;gBACjB,2BAA2B,6BAAA;gBAC3B,UAAU,YAAA;gBACV,OAAO,SAAA;aACR,EACDU,6BAA2B,EAC3B,QAAQ,CAAmE,CAAC;SAC/E;QAwBD,+CAAY,GAAZ,UAAa,iBAAyB,EAAE,2BAAmC,EAAE,OAAkE,EAAE,QAAuC;YACtL,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,iBAAiB,mBAAA;gBACjB,2BAA2B,6BAAA;gBAC3B,OAAO,SAAA;aACR,EACDC,2BAAyB,EACzB,QAAQ,CAAC,CAAC;SACb;QAwBD,sCAAG,GAAH,UAAI,iBAAyB,EAAE,2BAAmC,EAAE,OAA4F,EAAE,QAAiE;YACjO,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,iBAAiB,mBAAA;gBACjB,2BAA2B,6BAAA;gBAC3B,OAAO,SAAA;aACR,EACDV,kBAAgB,EAChB,QAAQ,CAAwD,CAAC;SACpE;QACH,+BAAC;IAAD,CAAC,IAAA;IAED;IACA,IAAMC,YAAU,GAAG,IAAIZ,iBAAiB,CAACa,SAAO,CAAC,CAAC;IAClD,IAAMH,iCAA+B,GAAyB;QAC5D,UAAU,EAAE,KAAK;QACjB,IAAI,EAAE,kGAAkG;QACxG,aAAa,EAAE;YACbT,cAAyB;SAC1B;QACD,eAAe,EAAE;YACfG,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAEiB,qCAA6C;aAC1D;YACD,OAAO,EAAE;gBACP,UAAU,EAAEf,gBAAwB;aACrC;SACF;QACD,UAAU,cAAA;KACX,CAAC;IAEF,IAAMa,6BAA2B,GAAyB;QACxD,UAAU,EAAE,KAAK;QACjB,IAAI,EAAE,mKAAmK;QACzK,aAAa,EAAE;YACbnB,cAAyB;YACzBC,iBAA4B;YAC5BqB,2BAAsC;SACvC;QACD,eAAe,EAAE;YACfnB,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,WAAW,EAAE;YACX,aAAa,EAAE,YAAY;YAC3B,MAAM,wBACDmB,uBAA+B,KAClC,QAAQ,EAAE,IAAI,GACf;SACF;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAEA,uBAA+B;aAC5C;YACD,OAAO,EAAE;gBACP,UAAU,EAAEjB,gBAAwB;aACrC;SACF;QACD,UAAU,cAAA;KACX,CAAC;IAEF,IAAMc,2BAAyB,GAAyB;QACtD,UAAU,EAAE,QAAQ;QACpB,IAAI,EAAE,mKAAmK;QACzK,aAAa,EAAE;YACbpB,cAAyB;YACzBC,iBAA4B;YAC5BqB,2BAAsC;SACvC;QACD,eAAe,EAAE;YACfnB,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,SAAS,EAAE;YACT,GAAG,EAAE,EAAE;YACP,OAAO,EAAE;gBACP,UAAU,EAAEE,gBAAwB;aACrC;SACF;QACD,UAAU,cAAA;KACX,CAAC;IAEF,IAAMI,kBAAgB,GAAyB;QAC7C,UAAU,EAAE,KAAK;QACjB,IAAI,EAAE,mKAAmK;QACzK,aAAa,EAAE;YACbV,cAAyB;YACzBC,iBAA4B;YAC5BqB,2BAAsC;SACvC;QACD,eAAe,EAAE;YACfnB,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAEmB,uBAA+B;aAC5C;YACD,OAAO,EAAE;gBACP,UAAU,EAAEjB,gBAAwB;aACrC;SACF;QACD,UAAU,cAAA;KACX,CAAC;;ICnQF;;;;;;OAMG;;;;;;;;;;ICNH;;;;;;;;AASA,IAMA;AACA;;;;;QAOE,oBAAY,MAAyC;YACnD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACtB;QAiBD,yBAAI,GAAJ,UAAK,OAAwF,EAAE,QAA6D;YAC1J,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,OAAO,SAAA;aACR,EACD,iBAAiB,EACjB,QAAQ,CAA2C,CAAC;SACvD;QACH,iBAAC;IAAD,CAAC,IAAA;IAED;IACA,IAAMK,YAAU,GAAG,IAAIZ,iBAAiB,CAACa,SAAO,CAAC,CAAC;IAClD,IAAM,iBAAiB,GAAyB;QAC9C,UAAU,EAAE,KAAK;QACjB,IAAI,EAAE,qDAAqD;QAC3D,eAAe,EAAE;YACfT,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAEoB,mBAA2B;aACxC;YACD,OAAO,EAAE;gBACP,UAAU,EAAEC,UAAkB;aAC/B;SACF;QACD,UAAU,cAAA;KACX,CAAC;;ICxEF;;;;;;;;IAcA,IAAM,WAAW,GAAG,uBAAuB,CAAC;IAC5C,IAAM,cAAc,GAAG,OAAO,CAAC;AAE/B;QAAuD,qDAA8B;;;;;;;;;;;;;;;;QAuBnF,2CAAY,WAA8D,EAAE,cAAsB,EAAE,YAAoB,EAAE,YAAoB,EAAE,YAAoB,EAAE,OAAkD;YAAxN,iBA4CC;YA3CC,IAAI,WAAW,IAAI,SAAS,EAAE;gBAC5B,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;aACpD;YACD,IAAI,cAAc,IAAI,SAAS,EAAE;gBAC/B,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAC;aACvD;YACD,IAAI,YAAY,IAAI,SAAS,EAAE;gBAC7B,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC;aACrD;YACD,IAAI,YAAY,IAAI,SAAS,EAAE;gBAC7B,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC;aACrD;YACD,IAAI,YAAY,IAAI,SAAS,EAAE;gBAC7B,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC;aACrD;YAED,IAAI,CAAC,OAAO,EAAE;gBACZ,OAAO,GAAG,EAAE,CAAC;aACd;YACD,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;gBACtB,IAAM,gBAAgB,GAAGC,oCAAoC,EAAE,CAAC;gBAChE,OAAO,CAAC,SAAS,GAAM,WAAW,SAAI,cAAc,SAAI,gBAAkB,CAAC;aAC5E;YAED,QAAA,kBAAM,WAAW,EAAE,OAAO,CAAC,SAAC;YAE5B,KAAI,CAAC,UAAU,GAAG,oBAAoB,CAAC;YACvC,KAAI,CAAC,cAAc,GAAG,OAAO,CAAC;YAC9B,KAAI,CAAC,gCAAgC,GAAG,EAAE,CAAC;YAC3C,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,KAAI,CAAC,OAAO,IAAI,8BAA8B,CAAC;YACjF,KAAI,CAAC,kBAAkB,GAAG,iCAAiC,CAAC;YAC5D,KAAI,CAAC,WAAW,GAAG,WAAW,CAAC;YAC/B,KAAI,CAAC,cAAc,GAAG,cAAc,CAAC;YACrC,KAAI,CAAC,YAAY,GAAG,YAAY,CAAC;YACjC,KAAI,CAAC,YAAY,GAAG,YAAY,CAAC;YACjC,KAAI,CAAC,YAAY,GAAG,YAAY,CAAC;YAEjC,IAAI,OAAO,CAAC,cAAc,KAAK,IAAI,IAAI,OAAO,CAAC,cAAc,KAAK,SAAS,EAAE;gBAC3E,KAAI,CAAC,cAAc,GAAG,OAAO,CAAC,cAAc,CAAC;aAC9C;YACD,IAAI,OAAO,CAAC,gCAAgC,KAAK,IAAI,IAAI,OAAO,CAAC,gCAAgC,KAAK,SAAS,EAAE;gBAC/G,KAAI,CAAC,gCAAgC,GAAG,OAAO,CAAC,gCAAgC,CAAC;aAClF;;SACF;QACH,wCAAC;IAAD,CAAC,CApEsDC,8BAA8B;;ICjBrF;;;;;;;;;QAiByC,8CAAiC;;;;;;;;;;;;;;;;QAsBxE,oCAAY,WAA8D,EAAE,cAAsB,EAAE,YAAoB,EAAE,YAAoB,EAAE,YAAoB,EAAE,OAAkD;YAAxN,YACE,kBAAM,WAAW,EAAE,cAAc,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,OAAO,CAAC,SAKtF;YAJC,KAAI,CAAC,SAAS,GAAG,IAAIC,SAAoB,CAAC,KAAI,CAAC,CAAC;YAChD,KAAI,CAAC,sBAAsB,GAAG,IAAIC,sBAAiC,CAAC,KAAI,CAAC,CAAC;YAC1E,KAAI,CAAC,wBAAwB,GAAG,IAAIC,wBAAmC,CAAC,KAAI,CAAC,CAAC;YAC9E,KAAI,CAAC,UAAU,GAAG,IAAIC,UAAqB,CAAC,KAAI,CAAC,CAAC;;SACnD;QACH,iCAAC;IAAD,CA7BA,CAAyC,iCAAiC;;;;;;;;;;;;;;;;;;;"}