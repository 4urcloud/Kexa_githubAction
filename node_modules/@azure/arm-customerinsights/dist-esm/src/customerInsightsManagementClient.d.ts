import * as coreClient from "@azure/core-client";
import * as coreAuth from "@azure/core-auth";
import { Operations, Hubs, Profiles, Interactions, Relationships, RelationshipLinks, AuthorizationPolicies, Connectors, ConnectorMappings, Kpi, WidgetTypes, Views, Links, Roles, RoleAssignments, Images, Predictions } from "./operationsInterfaces";
import { CustomerInsightsManagementClientOptionalParams } from "./models";
export declare class CustomerInsightsManagementClient extends coreClient.ServiceClient {
    $host: string;
    apiVersion: string;
    subscriptionId: string;
    /**
     * Initializes a new instance of the CustomerInsightsManagementClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure
     *                       subscription. The subscription ID forms part of the URI for every service call.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: CustomerInsightsManagementClientOptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    operations: Operations;
    hubs: Hubs;
    profiles: Profiles;
    interactions: Interactions;
    relationships: Relationships;
    relationshipLinks: RelationshipLinks;
    authorizationPolicies: AuthorizationPolicies;
    connectors: Connectors;
    connectorMappings: ConnectorMappings;
    kpi: Kpi;
    widgetTypes: WidgetTypes;
    views: Views;
    links: Links;
    roles: Roles;
    roleAssignments: RoleAssignments;
    images: Images;
    predictions: Predictions;
}
//# sourceMappingURL=customerInsightsManagementClient.d.ts.map