import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Links } from "../operationsInterfaces";
import { CustomerInsightsManagementClient } from "../customerInsightsManagementClient";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { LinkResourceFormat, LinksListByHubOptionalParams, LinksCreateOrUpdateOptionalParams, LinksCreateOrUpdateResponse, LinksGetOptionalParams, LinksGetResponse, LinksDeleteOptionalParams } from "../models";
/** Class containing Links operations. */
export declare class LinksImpl implements Links {
    private readonly client;
    /**
     * Initialize a new instance of the class Links class.
     * @param client Reference to the service client
     */
    constructor(client: CustomerInsightsManagementClient);
    /**
     * Gets all the links in the specified hub.
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param options The options parameters.
     */
    listByHub(resourceGroupName: string, hubName: string, options?: LinksListByHubOptionalParams): PagedAsyncIterableIterator<LinkResourceFormat>;
    private listByHubPagingPage;
    private listByHubPagingAll;
    /**
     * Creates a link or updates an existing link in the hub.
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param linkName The name of the link.
     * @param parameters Parameters supplied to the CreateOrUpdate Link operation.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, hubName: string, linkName: string, parameters: LinkResourceFormat, options?: LinksCreateOrUpdateOptionalParams): Promise<PollerLike<PollOperationState<LinksCreateOrUpdateResponse>, LinksCreateOrUpdateResponse>>;
    /**
     * Creates a link or updates an existing link in the hub.
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param linkName The name of the link.
     * @param parameters Parameters supplied to the CreateOrUpdate Link operation.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, hubName: string, linkName: string, parameters: LinkResourceFormat, options?: LinksCreateOrUpdateOptionalParams): Promise<LinksCreateOrUpdateResponse>;
    /**
     * Gets a link in the hub.
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param linkName The name of the link.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, hubName: string, linkName: string, options?: LinksGetOptionalParams): Promise<LinksGetResponse>;
    /**
     * Deletes a link in the hub.
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param linkName The name of the link.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, hubName: string, linkName: string, options?: LinksDeleteOptionalParams): Promise<void>;
    /**
     * Gets all the links in the specified hub.
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param options The options parameters.
     */
    private _listByHub;
    /**
     * ListByHubNext
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param nextLink The nextLink from the previous successful call to the ListByHub method.
     * @param options The options parameters.
     */
    private _listByHubNext;
}
//# sourceMappingURL=links.d.ts.map