import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { WidgetTypes } from "../operationsInterfaces";
import { CustomerInsightsManagementClient } from "../customerInsightsManagementClient";
import { WidgetTypeResourceFormat, WidgetTypesListByHubOptionalParams, WidgetTypesGetOptionalParams, WidgetTypesGetResponse } from "../models";
/** Class containing WidgetTypes operations. */
export declare class WidgetTypesImpl implements WidgetTypes {
    private readonly client;
    /**
     * Initialize a new instance of the class WidgetTypes class.
     * @param client Reference to the service client
     */
    constructor(client: CustomerInsightsManagementClient);
    /**
     * Gets all available widget types in the specified hub.
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param options The options parameters.
     */
    listByHub(resourceGroupName: string, hubName: string, options?: WidgetTypesListByHubOptionalParams): PagedAsyncIterableIterator<WidgetTypeResourceFormat>;
    private listByHubPagingPage;
    private listByHubPagingAll;
    /**
     * Gets all available widget types in the specified hub.
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param options The options parameters.
     */
    private _listByHub;
    /**
     * Gets a widget type in the specified hub.
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param widgetTypeName The name of the widget type.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, hubName: string, widgetTypeName: string, options?: WidgetTypesGetOptionalParams): Promise<WidgetTypesGetResponse>;
    /**
     * ListByHubNext
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param nextLink The nextLink from the previous successful call to the ListByHub method.
     * @param options The options parameters.
     */
    private _listByHubNext;
}
//# sourceMappingURL=widgetTypes.d.ts.map