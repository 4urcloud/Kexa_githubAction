import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Interactions } from "../operationsInterfaces";
import { CustomerInsightsManagementClient } from "../customerInsightsManagementClient";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { InteractionResourceFormat, InteractionsListByHubOptionalParams, InteractionsCreateOrUpdateOptionalParams, InteractionsCreateOrUpdateResponse, InteractionsGetOptionalParams, InteractionsGetResponse, InteractionsSuggestRelationshipLinksOptionalParams, InteractionsSuggestRelationshipLinksResponse } from "../models";
/** Class containing Interactions operations. */
export declare class InteractionsImpl implements Interactions {
    private readonly client;
    /**
     * Initialize a new instance of the class Interactions class.
     * @param client Reference to the service client
     */
    constructor(client: CustomerInsightsManagementClient);
    /**
     * Gets all interactions in the hub.
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param options The options parameters.
     */
    listByHub(resourceGroupName: string, hubName: string, options?: InteractionsListByHubOptionalParams): PagedAsyncIterableIterator<InteractionResourceFormat>;
    private listByHubPagingPage;
    private listByHubPagingAll;
    /**
     * Creates an interaction or updates an existing interaction within a hub.
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param interactionName The name of the interaction.
     * @param parameters Parameters supplied to the CreateOrUpdate Interaction operation.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, hubName: string, interactionName: string, parameters: InteractionResourceFormat, options?: InteractionsCreateOrUpdateOptionalParams): Promise<PollerLike<PollOperationState<InteractionsCreateOrUpdateResponse>, InteractionsCreateOrUpdateResponse>>;
    /**
     * Creates an interaction or updates an existing interaction within a hub.
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param interactionName The name of the interaction.
     * @param parameters Parameters supplied to the CreateOrUpdate Interaction operation.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, hubName: string, interactionName: string, parameters: InteractionResourceFormat, options?: InteractionsCreateOrUpdateOptionalParams): Promise<InteractionsCreateOrUpdateResponse>;
    /**
     * Gets information about the specified interaction.
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param interactionName The name of the interaction.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, hubName: string, interactionName: string, options?: InteractionsGetOptionalParams): Promise<InteractionsGetResponse>;
    /**
     * Gets all interactions in the hub.
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param options The options parameters.
     */
    private _listByHub;
    /**
     * Suggests relationships to create relationship links.
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param interactionName The name of the interaction.
     * @param options The options parameters.
     */
    suggestRelationshipLinks(resourceGroupName: string, hubName: string, interactionName: string, options?: InteractionsSuggestRelationshipLinksOptionalParams): Promise<InteractionsSuggestRelationshipLinksResponse>;
    /**
     * ListByHubNext
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param nextLink The nextLink from the previous successful call to the ListByHub method.
     * @param options The options parameters.
     */
    private _listByHubNext;
}
//# sourceMappingURL=interactions.d.ts.map