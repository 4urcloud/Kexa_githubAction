import { Images } from "../operationsInterfaces";
import { CustomerInsightsManagementClient } from "../customerInsightsManagementClient";
import { GetImageUploadUrlInput, ImagesGetUploadUrlForEntityTypeOptionalParams, ImagesGetUploadUrlForEntityTypeResponse, ImagesGetUploadUrlForDataOptionalParams, ImagesGetUploadUrlForDataResponse } from "../models";
/** Class containing Images operations. */
export declare class ImagesImpl implements Images {
    private readonly client;
    /**
     * Initialize a new instance of the class Images class.
     * @param client Reference to the service client
     */
    constructor(client: CustomerInsightsManagementClient);
    /**
     * Gets entity type (profile or interaction) image upload URL.
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param parameters Parameters supplied to the GetUploadUrlForEntityType operation.
     * @param options The options parameters.
     */
    getUploadUrlForEntityType(resourceGroupName: string, hubName: string, parameters: GetImageUploadUrlInput, options?: ImagesGetUploadUrlForEntityTypeOptionalParams): Promise<ImagesGetUploadUrlForEntityTypeResponse>;
    /**
     * Gets data image upload URL.
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param parameters Parameters supplied to the GetUploadUrlForData operation.
     * @param options The options parameters.
     */
    getUploadUrlForData(resourceGroupName: string, hubName: string, parameters: GetImageUploadUrlInput, options?: ImagesGetUploadUrlForDataOptionalParams): Promise<ImagesGetUploadUrlForDataResponse>;
}
//# sourceMappingURL=images.d.ts.map