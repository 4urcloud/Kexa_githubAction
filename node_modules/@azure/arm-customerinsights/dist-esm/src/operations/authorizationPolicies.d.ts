import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { AuthorizationPolicies } from "../operationsInterfaces";
import { CustomerInsightsManagementClient } from "../customerInsightsManagementClient";
import { AuthorizationPolicyResourceFormat, AuthorizationPoliciesListByHubOptionalParams, AuthorizationPoliciesCreateOrUpdateOptionalParams, AuthorizationPoliciesCreateOrUpdateResponse, AuthorizationPoliciesGetOptionalParams, AuthorizationPoliciesGetResponse, AuthorizationPoliciesRegeneratePrimaryKeyOptionalParams, AuthorizationPoliciesRegeneratePrimaryKeyResponse, AuthorizationPoliciesRegenerateSecondaryKeyOptionalParams, AuthorizationPoliciesRegenerateSecondaryKeyResponse } from "../models";
/** Class containing AuthorizationPolicies operations. */
export declare class AuthorizationPoliciesImpl implements AuthorizationPolicies {
    private readonly client;
    /**
     * Initialize a new instance of the class AuthorizationPolicies class.
     * @param client Reference to the service client
     */
    constructor(client: CustomerInsightsManagementClient);
    /**
     * Gets all the authorization policies in a specified hub.
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param options The options parameters.
     */
    listByHub(resourceGroupName: string, hubName: string, options?: AuthorizationPoliciesListByHubOptionalParams): PagedAsyncIterableIterator<AuthorizationPolicyResourceFormat>;
    private listByHubPagingPage;
    private listByHubPagingAll;
    /**
     * Creates an authorization policy or updates an existing authorization policy.
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param authorizationPolicyName The name of the policy.
     * @param parameters Parameters supplied to the CreateOrUpdate authorization policy operation.
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, hubName: string, authorizationPolicyName: string, parameters: AuthorizationPolicyResourceFormat, options?: AuthorizationPoliciesCreateOrUpdateOptionalParams): Promise<AuthorizationPoliciesCreateOrUpdateResponse>;
    /**
     * Gets an authorization policy in the hub.
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param authorizationPolicyName The name of the policy.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, hubName: string, authorizationPolicyName: string, options?: AuthorizationPoliciesGetOptionalParams): Promise<AuthorizationPoliciesGetResponse>;
    /**
     * Gets all the authorization policies in a specified hub.
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param options The options parameters.
     */
    private _listByHub;
    /**
     * Regenerates the primary policy key of the specified authorization policy.
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param authorizationPolicyName The name of the policy.
     * @param options The options parameters.
     */
    regeneratePrimaryKey(resourceGroupName: string, hubName: string, authorizationPolicyName: string, options?: AuthorizationPoliciesRegeneratePrimaryKeyOptionalParams): Promise<AuthorizationPoliciesRegeneratePrimaryKeyResponse>;
    /**
     * Regenerates the secondary policy key of the specified authorization policy.
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param authorizationPolicyName The name of the policy.
     * @param options The options parameters.
     */
    regenerateSecondaryKey(resourceGroupName: string, hubName: string, authorizationPolicyName: string, options?: AuthorizationPoliciesRegenerateSecondaryKeyOptionalParams): Promise<AuthorizationPoliciesRegenerateSecondaryKeyResponse>;
    /**
     * ListByHubNext
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param nextLink The nextLink from the previous successful call to the ListByHub method.
     * @param options The options parameters.
     */
    private _listByHubNext;
}
//# sourceMappingURL=authorizationPolicies.d.ts.map