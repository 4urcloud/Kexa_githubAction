import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { RelationshipLinks } from "../operationsInterfaces";
import { CustomerInsightsManagementClient } from "../customerInsightsManagementClient";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { RelationshipLinkResourceFormat, RelationshipLinksListByHubOptionalParams, RelationshipLinksCreateOrUpdateOptionalParams, RelationshipLinksCreateOrUpdateResponse, RelationshipLinksGetOptionalParams, RelationshipLinksGetResponse, RelationshipLinksDeleteOptionalParams } from "../models";
/** Class containing RelationshipLinks operations. */
export declare class RelationshipLinksImpl implements RelationshipLinks {
    private readonly client;
    /**
     * Initialize a new instance of the class RelationshipLinks class.
     * @param client Reference to the service client
     */
    constructor(client: CustomerInsightsManagementClient);
    /**
     * Gets all relationship links in the hub.
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param options The options parameters.
     */
    listByHub(resourceGroupName: string, hubName: string, options?: RelationshipLinksListByHubOptionalParams): PagedAsyncIterableIterator<RelationshipLinkResourceFormat>;
    private listByHubPagingPage;
    private listByHubPagingAll;
    /**
     * Creates a relationship link or updates an existing relationship link within a hub.
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param relationshipLinkName The name of the relationship link.
     * @param parameters Parameters supplied to the CreateOrUpdate relationship link operation.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, hubName: string, relationshipLinkName: string, parameters: RelationshipLinkResourceFormat, options?: RelationshipLinksCreateOrUpdateOptionalParams): Promise<PollerLike<PollOperationState<RelationshipLinksCreateOrUpdateResponse>, RelationshipLinksCreateOrUpdateResponse>>;
    /**
     * Creates a relationship link or updates an existing relationship link within a hub.
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param relationshipLinkName The name of the relationship link.
     * @param parameters Parameters supplied to the CreateOrUpdate relationship link operation.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, hubName: string, relationshipLinkName: string, parameters: RelationshipLinkResourceFormat, options?: RelationshipLinksCreateOrUpdateOptionalParams): Promise<RelationshipLinksCreateOrUpdateResponse>;
    /**
     * Gets information about the specified relationship Link.
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param relationshipLinkName The name of the relationship link.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, hubName: string, relationshipLinkName: string, options?: RelationshipLinksGetOptionalParams): Promise<RelationshipLinksGetResponse>;
    /**
     * Deletes a relationship link within a hub.
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param relationshipLinkName The name of the relationship.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, hubName: string, relationshipLinkName: string, options?: RelationshipLinksDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Deletes a relationship link within a hub.
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param relationshipLinkName The name of the relationship.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, hubName: string, relationshipLinkName: string, options?: RelationshipLinksDeleteOptionalParams): Promise<void>;
    /**
     * Gets all relationship links in the hub.
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param options The options parameters.
     */
    private _listByHub;
    /**
     * ListByHubNext
     * @param resourceGroupName The name of the resource group.
     * @param hubName The name of the hub.
     * @param nextLink The nextLink from the previous successful call to the ListByHub method.
     * @param options The options parameters.
     */
    private _listByHubNext;
}
//# sourceMappingURL=relationshipLinks.d.ts.map