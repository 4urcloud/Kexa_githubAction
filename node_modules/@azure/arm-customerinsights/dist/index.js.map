{"version":3,"file":"index.js","sources":["../src/pagingHelper.ts","../src/models/index.ts","../src/models/mappers.ts","../src/models/parameters.ts","../src/operations/operations.ts","../src/lroImpl.ts","../src/operations/hubs.ts","../src/operations/profiles.ts","../src/operations/interactions.ts","../src/operations/relationships.ts","../src/operations/relationshipLinks.ts","../src/operations/authorizationPolicies.ts","../src/operations/connectors.ts","../src/operations/connectorMappings.ts","../src/operations/kpi.ts","../src/operations/widgetTypes.ts","../src/operations/views.ts","../src/operations/links.ts","../src/operations/roles.ts","../src/operations/roleAssignments.ts","../src/operations/images.ts","../src/operations/predictions.ts","../src/customerInsightsManagementClient.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport interface PageInfo {\n  continuationToken?: string;\n}\n\nconst pageMap = new WeakMap<object, PageInfo>();\n\n/**\n * Given a result page from a pageable operation, returns a\n * continuation token that can be used to begin paging from\n * that point later.\n * @param page A result object from calling .byPage() on a paged operation.\n * @returns The continuation token that can be passed into byPage().\n */\nexport function getContinuationToken(page: unknown): string | undefined {\n  if (typeof page !== \"object\" || page === null) {\n    return undefined;\n  }\n  return pageMap.get(page)?.continuationToken;\n}\n\nexport function setContinuationToken(\n  page: unknown,\n  continuationToken: string | undefined\n): void {\n  if (typeof page !== \"object\" || page === null || !continuationToken) {\n    return;\n  }\n  const pageInfo = pageMap.get(page) ?? {};\n  pageInfo.continuationToken = continuationToken;\n  pageMap.set(page, pageInfo);\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\n/** Result of the request to list Customer Insights operations. It contains a list of operations and a URL link to get the next set of results. */\nexport interface OperationListResult {\n  /**\n   * List of Customer Insights operations supported by the Microsoft.CustomerInsights resource provider.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: Operation[];\n  /**\n   * URL to get the next set of operation list results if there are any.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A Customer Insights REST API operation */\nexport interface Operation {\n  /**\n   * Operation name: {provider}/{resource}/{operation}\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /** The object that represents the operation. */\n  display?: OperationDisplay;\n}\n\n/** The object that represents the operation. */\nexport interface OperationDisplay {\n  /**\n   * Service provider: Microsoft.CustomerInsights\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provider?: string;\n  /**\n   * Resource on which the operation is performed: Invoice, etc.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resource?: string;\n  /**\n   * Operation type: Read, write, delete, etc.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly operation?: string;\n}\n\n/** Hub billing info. */\nexport interface HubBillingInfoFormat {\n  /** The sku name. */\n  skuName?: string;\n  /** The minimum number of units will be billed. One unit is 10,000 Profiles and 100,000 Interactions. */\n  minUnits?: number;\n  /** The maximum number of units can be used.  One unit is 10,000 Profiles and 100,000 Interactions. */\n  maxUnits?: number;\n}\n\n/** Common properties of Azure resource. */\nexport interface Resource {\n  /**\n   * Resource ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Resource name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Resource location. */\n  location?: string;\n  /** Resource tags. */\n  tags?: { [propertyName: string]: string };\n}\n\n/** Response of list hub operation. */\nexport interface HubListResult {\n  /** Results of the list operation. */\n  value?: Hub[];\n  /** Link for next set of results. */\n  nextLink?: string;\n}\n\n/** Property/Properties which represent a unique ID. */\nexport interface StrongId {\n  /** The properties which make up the unique ID. */\n  keyPropertyNames: string[];\n  /** The Name identifying the strong ID. */\n  strongIdName: string;\n  /** Localized display name. */\n  displayName?: { [propertyName: string]: string };\n  /** Localized descriptions. */\n  description?: { [propertyName: string]: string };\n}\n\n/** Property definition. */\nexport interface PropertyDefinition {\n  /** Array value separator for properties with isArray set. */\n  arrayValueSeparator?: string;\n  /** Describes valid values for an enum property. */\n  enumValidValues?: ProfileEnumValidValuesFormat[];\n  /** Name of the property. */\n  fieldName: string;\n  /** Type of the property. */\n  fieldType: string;\n  /** Indicates if the property is actually an array of the fieldType above on the data api. */\n  isArray?: boolean;\n  /** Indicates if the property is an enum. */\n  isEnum?: boolean;\n  /** Indicates if the property is an flag enum. */\n  isFlagEnum?: boolean;\n  /** Whether the property is an Image. */\n  isImage?: boolean;\n  /** Whether the property is a localized string. */\n  isLocalizedString?: boolean;\n  /** Whether the property is a name or a part of name. */\n  isName?: boolean;\n  /** Whether property value is required on instances, IsRequired field only for Interaction. Profile Instance will not check for required field. */\n  isRequired?: boolean;\n  /** The ID associated with the property. */\n  propertyId?: string;\n  /** URL encoded schema.org item prop link for the property. */\n  schemaItemPropLink?: string;\n  /** Max length of string. Used only if type is string. */\n  maxLength?: number;\n  /** Whether property is available in graph or not. */\n  isAvailableInGraph?: boolean;\n  /**\n   * This is specific to interactions modeled as activities. Data sources are used to determine where data is stored and also in precedence rules.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly dataSourcePrecedenceRules?: DataSourcePrecedence[];\n}\n\n/** Valid enum values in case of an enum property. */\nexport interface ProfileEnumValidValuesFormat {\n  /** The integer value of the enum member. */\n  value?: number;\n  /** Localized names of the enum member. */\n  localizedValueNames?: { [propertyName: string]: string };\n}\n\n/** The data source precedence is a way to know the precedence of each data source. */\nexport interface DataSourcePrecedence {\n  /** the precedence value. */\n  precedence?: number;\n  /**\n   * The data source name\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The data source type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly dataSourceType?: DataSourceType;\n  /**\n   * The data source status.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: Status;\n  /**\n   * The data source ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: number;\n  /**\n   * The data source reference id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly dataSourceReferenceId?: string;\n}\n\n/** The Metadata definition base. */\nexport interface MetadataDefinitionBase {\n  /** The attributes for the Type. */\n  attributes?: { [propertyName: string]: string[] };\n  /** Localized descriptions for the property. */\n  description?: { [propertyName: string]: string };\n  /** Localized display names for the property. */\n  displayName?: { [propertyName: string]: string };\n  /** Any custom localized attributes for the Type. */\n  localizedAttributes?: {\n    [propertyName: string]: { [propertyName: string]: string };\n  };\n  /** Small Image associated with the Property or EntityType. */\n  smallImage?: string;\n  /** Medium Image associated with the Property or EntityType. */\n  mediumImage?: string;\n  /** Large Image associated with the Property or EntityType. */\n  largeImage?: string;\n}\n\n/** Common properties of proxy resource. */\nexport interface ProxyResource {\n  /**\n   * Resource ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Resource name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n}\n\n/** The response of list profile operation. */\nexport interface ProfileListResult {\n  /** Results of the list operation. */\n  value?: ProfileResourceFormat[];\n  /** Link to the next set of results. */\n  nextLink?: string;\n}\n\n/** Defines the KPI Threshold limits. */\nexport interface KpiDefinition {\n  /** The mapping entity type. */\n  entityType: EntityTypes;\n  /** The mapping entity name. */\n  entityTypeName: string;\n  /**\n   * The hub name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantId?: string;\n  /**\n   * The KPI name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly kpiName?: string;\n  /** Localized display name for the KPI. */\n  displayName?: { [propertyName: string]: string };\n  /** Localized description for the KPI. */\n  description?: { [propertyName: string]: string };\n  /** The calculation window. */\n  calculationWindow: CalculationWindowTypes;\n  /** Name of calculation window field. */\n  calculationWindowFieldName?: string;\n  /** The computation function for the KPI. */\n  function: KpiFunctions;\n  /** The computation expression for the KPI. */\n  expression: string;\n  /** The unit of measurement for the KPI. */\n  unit?: string;\n  /** The filter expression for the KPI. */\n  filter?: string;\n  /** the group by properties for the KPI. */\n  groupBy?: string[];\n  /**\n   * The KPI GroupByMetadata.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly groupByMetadata?: KpiGroupByMetadata[];\n  /**\n   * The participant profiles.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly participantProfilesMetadata?: KpiParticipantProfilesMetadata[];\n  /**\n   * Provisioning state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningStates;\n  /** The KPI thresholds. */\n  thresHolds?: KpiThresholds;\n  /** The aliases. */\n  aliases?: KpiAlias[];\n  /** The KPI extracts. */\n  extracts?: KpiExtract[];\n}\n\n/** The KPI GroupBy field metadata. */\nexport interface KpiGroupByMetadata {\n  /** The display name. */\n  displayName?: { [propertyName: string]: string };\n  /** The name of the field. */\n  fieldName?: string;\n  /** The type of the field. */\n  fieldType?: string;\n}\n\n/** The KPI participant profile metadata. */\nexport interface KpiParticipantProfilesMetadata {\n  /** Name of the type. */\n  typeName: string;\n}\n\n/** Defines the KPI Threshold limits. */\nexport interface KpiThresholds {\n  /** The lower threshold limit. */\n  lowerLimit: number;\n  /** The upper threshold limit. */\n  upperLimit: number;\n  /** Whether or not the KPI is an increasing KPI. */\n  increasingKpi: boolean;\n}\n\n/** The KPI alias. */\nexport interface KpiAlias {\n  /** KPI alias name. */\n  aliasName: string;\n  /** The expression. */\n  expression: string;\n}\n\n/** The KPI extract. */\nexport interface KpiExtract {\n  /** KPI extract name. */\n  extractName: string;\n  /** The expression. */\n  expression: string;\n}\n\n/** Describes a profile type participating in an interaction. */\nexport interface Participant {\n  /** Profile type name. */\n  profileTypeName: string;\n  /** The property references. */\n  participantPropertyReferences: ParticipantPropertyReference[];\n  /** Participant name. */\n  participantName: string;\n  /** Localized display name. */\n  displayName?: { [propertyName: string]: string };\n  /** Localized descriptions. */\n  description?: { [propertyName: string]: string };\n  /** The role that the participant is playing in the interaction. */\n  role?: string;\n}\n\n/** The participant property reference. */\nexport interface ParticipantPropertyReference {\n  /** The source property that maps to the target property. */\n  sourcePropertyName: string;\n  /** The target property that maps to the source property. */\n  targetPropertyName: string;\n}\n\n/** The response of list interaction operation. */\nexport interface InteractionListResult {\n  /** Results of the list operation. */\n  value?: InteractionResourceFormat[];\n  /** Link to the next set of results. */\n  nextLink?: string;\n}\n\n/** The response of suggest relationship links operation. */\nexport interface SuggestRelationshipLinksResponse {\n  /**\n   * The interaction name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly interactionName?: string;\n  /**\n   * Suggested relationships for the type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly suggestedRelationships?: RelationshipsLookup[];\n}\n\n/** The definition of suggested relationship for the type. */\nexport interface RelationshipsLookup {\n  /**\n   * The relationship profile.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly profileName?: string;\n  /**\n   * The property references for the profile type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly profilePropertyReferences?: ParticipantProfilePropertyReference[];\n  /**\n   * The related profile.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly relatedProfileName?: string;\n  /**\n   * The property references for the related profile type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly relatedProfilePropertyReferences?: ParticipantProfilePropertyReference[];\n  /**\n   * The name of existing Relationship.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly existingRelationshipName?: string;\n}\n\n/** The participant profile property reference. */\nexport interface ParticipantProfilePropertyReference {\n  /** The source interaction property that maps to the target profile property. */\n  interactionPropertyName: string;\n  /** The target profile property that maps to the source interaction property. */\n  profilePropertyName: string;\n}\n\n/** Maps fields in Profile to their corresponding StrongIds in Related Profile. */\nexport interface RelationshipTypeMapping {\n  /** Maps a profile property with the StrongId of related profile. This is an array to support StrongIds that are composite key as well. */\n  fieldMappings: RelationshipTypeFieldMapping[];\n}\n\n/** Map a field of profile to its corresponding StrongId in Related Profile. */\nexport interface RelationshipTypeFieldMapping {\n  /** Specifies the fieldName in profile. */\n  profileFieldName: string;\n  /** Specifies the KeyProperty (from StrongId) of the related profile. */\n  relatedProfileKeyProperty: string;\n}\n\n/** The response of list relationship operation. */\nexport interface RelationshipListResult {\n  /** Results of the list operation. */\n  value?: RelationshipResourceFormat[];\n  /** Link to the next set of results. */\n  nextLink?: string;\n}\n\n/** The fields mapping for Relationships. */\nexport interface RelationshipLinkFieldMapping {\n  /** The field name on the Interaction Type. */\n  interactionFieldName: string;\n  /** Link type. */\n  linkType?: LinkTypes;\n  /** The field name on the Relationship metadata. */\n  relationshipFieldName: string;\n}\n\n/** The response of list relationship link operation. */\nexport interface RelationshipLinkListResult {\n  /** Results of the list operation. */\n  value?: RelationshipLinkResourceFormat[];\n  /** Link to the next set of results. */\n  nextLink?: string;\n}\n\n/** The authorization policy. */\nexport interface AuthorizationPolicy {\n  /**\n   * Name of the policy.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly policyName?: string;\n  /** The permissions associated with the policy. */\n  permissions: PermissionTypes[];\n  /** Primary key associated with the policy. */\n  primaryKey?: string;\n  /** Secondary key associated with the policy. */\n  secondaryKey?: string;\n}\n\n/** The response of list authorization policy operation. */\nexport interface AuthorizationPolicyListResult {\n  /** Results of the list operation. */\n  value?: AuthorizationPolicyResourceFormat[];\n  /** Link to the next set of results. */\n  nextLink?: string;\n}\n\n/** The response of list connector operation. */\nexport interface ConnectorListResult {\n  /** Results of the list operation. */\n  value?: ConnectorResourceFormat[];\n  /** Link to the next set of results. */\n  nextLink?: string;\n}\n\n/** The connector mapping properties. */\nexport interface ConnectorMappingProperties {\n  /** The folder path for the mapping. */\n  folderPath?: string;\n  /** The file filter for the mapping. */\n  fileFilter?: string;\n  /** If the file contains a header or not. */\n  hasHeader?: boolean;\n  /** The error management setting for the mapping. */\n  errorManagement: ConnectorMappingErrorManagement;\n  /** The format of mapping property. */\n  format: ConnectorMappingFormat;\n  /** The availability of mapping property. */\n  availability: ConnectorMappingAvailability;\n  /** Ingestion mapping information at property level. */\n  structure: ConnectorMappingStructure[];\n  /** The operation after import is done. */\n  completeOperation: ConnectorMappingCompleteOperation;\n}\n\n/** The error management. */\nexport interface ConnectorMappingErrorManagement {\n  /** The type of error management to use for the mapping. */\n  errorManagementType: ErrorManagementTypes;\n  /** The error limit allowed while importing data. */\n  errorLimit?: number;\n}\n\n/** Connector mapping property format. */\nexport interface ConnectorMappingFormat {\n  /** The type mapping format. */\n  formatType: \"TextFormat\";\n  /** The character that signifies a break between columns. */\n  columnDelimiter?: string;\n  /** The oData language. */\n  acceptLanguage?: string;\n  /** Quote character, used to indicate enquoted fields. */\n  quoteCharacter?: string;\n  /** Escape character for quotes, can be the same as the quoteCharacter. */\n  quoteEscapeCharacter?: string;\n  /** Character separating array elements. */\n  arraySeparator?: string;\n}\n\n/** Connector mapping property availability. */\nexport interface ConnectorMappingAvailability {\n  /** The frequency to update. */\n  frequency?: FrequencyTypes;\n  /** The interval of the given frequency to use. */\n  interval: number;\n}\n\n/** Connector mapping property structure. */\nexport interface ConnectorMappingStructure {\n  /** The property name of the mapping entity. */\n  propertyName: string;\n  /** The column name of the import file. */\n  columnName: string;\n  /** Custom format specifier for input parsing. */\n  customFormatSpecifier?: string;\n  /** Indicates if the column is encrypted. */\n  isEncrypted?: boolean;\n}\n\n/** The complete operation. */\nexport interface ConnectorMappingCompleteOperation {\n  /** The type of completion operation. */\n  completionOperationType?: CompletionOperationTypes;\n  /** The destination folder where files will be moved to once the import is done. */\n  destinationFolder?: string;\n}\n\n/** The response of list connector mapping operation. */\nexport interface ConnectorMappingListResult {\n  /** Results of the list operation. */\n  value?: ConnectorMappingResourceFormat[];\n  /** Link to the next set of results. */\n  nextLink?: string;\n}\n\n/** The response of list KPI operation. */\nexport interface KpiListResult {\n  /** Results of the list operation. */\n  value?: KpiResourceFormat[];\n  /** Link to the next set of results. */\n  nextLink?: string;\n}\n\n/** The response of list widget type operation. */\nexport interface WidgetTypeListResult {\n  /** Results of the list operation. */\n  value?: WidgetTypeResourceFormat[];\n  /** Link to the next set of results. */\n  nextLink?: string;\n}\n\n/** The response of list view operation. */\nexport interface ViewListResult {\n  /** Results of the list operation. */\n  value?: ViewResourceFormat[];\n  /** Link to the next set of results. */\n  nextLink?: string;\n}\n\n/** Metadata for a Link's property mapping. */\nexport interface TypePropertiesMapping {\n  /**  Property name on the source Entity Type. */\n  sourcePropertyName: string;\n  /** Property name on the target Entity Type. */\n  targetPropertyName: string;\n  /** Link type. */\n  linkType?: LinkTypes;\n}\n\n/** The response of list link operation. */\nexport interface LinkListResult {\n  /** Results of the list operation. */\n  value?: LinkResourceFormat[];\n  /** Link to the next set of results. */\n  nextLink?: string;\n}\n\n/** The response of list role assignment operation. */\nexport interface RoleListResult {\n  /** Results of the list operation. */\n  value?: RoleResourceFormat[];\n  /** Link to the next set of results. */\n  nextLink?: string;\n}\n\n/** The response of list role assignment operation. */\nexport interface RoleAssignmentListResult {\n  /** Results of the list operation. */\n  value?: RoleAssignmentResourceFormat[];\n  /** Link to the next set of results. */\n  nextLink?: string;\n}\n\n/** The AssignmentPrincipal */\nexport interface AssignmentPrincipal {\n  /** The principal id being assigned to. */\n  principalId: string;\n  /** The Type of the principal ID. */\n  principalType: string;\n  /** Other metadata for the principal. */\n  principalMetadata?: { [propertyName: string]: string };\n}\n\n/** The resource set description. */\nexport interface ResourceSetDescription {\n  /** The elements included in the set. */\n  elements?: string[];\n  /** The elements that are not included in the set, in case elements contains '*' indicating 'all'. */\n  exceptions?: string[];\n}\n\n/** Input type for getting image upload url. */\nexport interface GetImageUploadUrlInput {\n  /** Type of entity. Can be Profile or Interaction. */\n  entityType?: string;\n  /** Name of the entity type. */\n  entityTypeName?: string;\n  /** Relative path of the image. */\n  relativePath?: string;\n}\n\n/** The image definition. */\nexport interface ImageDefinition {\n  /** Whether image exists already. */\n  imageExists?: boolean;\n  /** Content URL for the image blob. */\n  contentUrl?: string;\n  /** Relative path of the image. */\n  relativePath?: string;\n}\n\n/** Definition of the link mapping of prediction. */\nexport interface PredictionMappings {\n  /** The score of the link mapping. */\n  score: string;\n  /** The grade of the link mapping. */\n  grade: string;\n  /** The reason of the link mapping. */\n  reason: string;\n}\n\n/** The definition of a prediction grade. */\nexport interface PredictionGradesItem {\n  /** Name of the grade. */\n  gradeName?: string;\n  /** Minimum score threshold. */\n  minScoreThreshold?: number;\n  /** Maximum score threshold. */\n  maxScoreThreshold?: number;\n}\n\n/** System generated entities. */\nexport interface PredictionSystemGeneratedEntities {\n  /** Generated interaction types. */\n  generatedInteractionTypes?: string[];\n  /** Generated links. */\n  generatedLinks?: string[];\n  /** Generated KPIs. */\n  generatedKpis?: { [propertyName: string]: string };\n}\n\n/** The training results of the prediction. */\nexport interface PredictionTrainingResults {\n  /**\n   * The hub name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantId?: string;\n  /**\n   * Score name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly scoreName?: string;\n  /**\n   * Prediction distribution.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly predictionDistribution?: PredictionDistributionDefinition;\n  /**\n   * Canonical profiles.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly canonicalProfiles?: CanonicalProfileDefinition[];\n  /**\n   * Instance count of the primary profile.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly primaryProfileInstanceCount?: number;\n}\n\n/** The definition of the prediction distribution. */\nexport interface PredictionDistributionDefinition {\n  /** Total positive in the distribution. */\n  totalPositives?: number;\n  /** Total negatives in the distribution. */\n  totalNegatives?: number;\n  /** Distributions of the prediction. */\n  distributions?: PredictionDistributionDefinitionDistributionsItem[];\n}\n\n/** The definition of a prediction distribution. */\nexport interface PredictionDistributionDefinitionDistributionsItem {\n  /** Score threshold. */\n  scoreThreshold?: number;\n  /** Number of positives. */\n  positives?: number;\n  /** Number of negatives. */\n  negatives?: number;\n  /** Number of positives above threshold. */\n  positivesAboveThreshold?: number;\n  /** Number of negatives above threshold. */\n  negativesAboveThreshold?: number;\n}\n\n/** Definition of canonical profile. */\nexport interface CanonicalProfileDefinition {\n  /** Canonical profile ID. */\n  canonicalProfileId?: number;\n  /** Properties of the canonical profile. */\n  properties?: CanonicalProfileDefinitionPropertiesItem[];\n}\n\n/** The definition of a canonical profile property. */\nexport interface CanonicalProfileDefinitionPropertiesItem {\n  /** Profile name. */\n  profileName?: string;\n  /** Property name of profile. */\n  profilePropertyName?: string;\n  /** The rank. */\n  rank?: number;\n  /** Type of canonical property value. */\n  type?: CanonicalPropertyValueType;\n  /** Value of the canonical property. */\n  value?: string;\n}\n\n/** The prediction model status. */\nexport interface PredictionModelStatus {\n  /**\n   * The hub name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantId?: string;\n  /**\n   * The prediction name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly predictionName?: string;\n  /**\n   * The prediction GUID ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly predictionGuidId?: string;\n  /** Prediction model life cycle.  When prediction is in PendingModelConfirmation status, it is allowed to update the status to PendingFeaturing or Active through API. */\n  status: PredictionModelLifeCycle;\n  /**\n   * The model status message.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n  /**\n   * Count of the training set.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly trainingSetCount?: number;\n  /**\n   * Count of the test set.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly testSetCount?: number;\n  /**\n   * Count of the validation set.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly validationSetCount?: number;\n  /**\n   * The training accuracy.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly trainingAccuracy?: number;\n  /**\n   * The signals used.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly signalsUsed?: number;\n  /**\n   * Version of the model.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly modelVersion?: string;\n}\n\n/** The response of list predictions operation. */\nexport interface PredictionListResult {\n  /** Results of the list operation. */\n  value?: PredictionResourceFormat[];\n  /** Link to the next set of results. */\n  nextLink?: string;\n}\n\n/** Salesforce discover setting. */\nexport interface SalesforceDiscoverSetting {\n  /** The salesforce connection string secret URL. */\n  salesforceConnectionStringSecretUrl: string;\n}\n\n/** Salesforce table. */\nexport interface SalesforceTable {\n  /** Indicating whether this instance is profile. */\n  isProfile?: string;\n  /** The table category. */\n  tableCategory: string;\n  /** The name of the table. */\n  tableName: string;\n  /** The table remarks. */\n  tableRemarks?: string;\n  /** The table schema. */\n  tableSchema: string;\n}\n\n/** The Salesforce connector properties. */\nexport interface SalesforceConnectorProperties {\n  /** The user settings. */\n  usersetting: SalesforceDiscoverSetting;\n  /** The Salesforce tables. */\n  salesforcetables: SalesforceTable[];\n}\n\n/** The Azure Blob connector properties. */\nexport interface AzureBlobConnectorProperties {\n  /** The connection KeyVault URL. */\n  connectionKeyVaultUrl: string;\n}\n\n/** The CRM connector properties. */\nexport interface CrmConnectorProperties {\n  /** The connection string. */\n  connectionString?: string;\n  /** The organization ID. */\n  organizationId: string;\n  /** The organization URL. */\n  organizationUrl: string;\n  /** The entities like account, contact, opportunity. */\n  entities: CrmConnectorEntities[];\n  /** The access token. */\n  accessToken?: string;\n}\n\n/** The CRM connector entities. */\nexport interface CrmConnectorEntities {\n  /** The logical name. */\n  logicalName: string;\n  /** The display name. */\n  displayName?: string;\n  /** Indicating whether this is profile. */\n  isProfile?: boolean;\n}\n\n/** Hub resource. */\nexport interface Hub extends Resource {\n  /**\n   * API endpoint URL of the hub.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly apiEndpoint?: string;\n  /**\n   * Web endpoint URL of the hub.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly webEndpoint?: string;\n  /**\n   * Provisioning state of the hub.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n  /** The bit flags for enabled hub features. Bit 0 is set to 1 indicates graph is enabled, or disabled if set to 0. Bit 1 is set to 1 indicates the hub is disabled, or enabled if set to 0. */\n  tenantFeatures?: number;\n  /** Billing settings of the hub. */\n  hubBillingInfo?: HubBillingInfoFormat;\n}\n\n/** Describes an entity. */\nexport interface EntityTypeDefinition extends MetadataDefinitionBase {\n  /** The api entity set name. This becomes the odata entity set name for the entity Type being referred in this object. */\n  apiEntitySetName?: string;\n  /** Type of entity. */\n  entityType?: EntityTypes;\n  /** The properties of the Profile. */\n  fields?: PropertyDefinition[];\n  /** The instance count. */\n  instancesCount?: number;\n  /**\n   * The last changed time for the type definition.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastChangedUtc?: Date;\n  /**\n   * Provisioning state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningStates;\n  /** The schema org link. This helps ACI identify and suggest semantic models. */\n  schemaItemTypeLink?: string;\n  /**\n   * The hub name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantId?: string;\n  /** The timestamp property name. Represents the time when the interaction or profile update happened. */\n  timestampFieldName?: string;\n  /** The name of the entity. */\n  typeName?: string;\n}\n\n/** The profile resource format. */\nexport interface ProfileResourceFormat extends ProxyResource {\n  /** The attributes for the Type. */\n  attributes?: { [propertyName: string]: string[] };\n  /** Localized descriptions for the property. */\n  description?: { [propertyName: string]: string };\n  /** Localized display names for the property. */\n  displayName?: { [propertyName: string]: string };\n  /** Any custom localized attributes for the Type. */\n  localizedAttributes?: {\n    [propertyName: string]: { [propertyName: string]: string };\n  };\n  /** Small Image associated with the Property or EntityType. */\n  smallImage?: string;\n  /** Medium Image associated with the Property or EntityType. */\n  mediumImage?: string;\n  /** Large Image associated with the Property or EntityType. */\n  largeImage?: string;\n  /** The api entity set name. This becomes the odata entity set name for the entity Type being referred in this object. */\n  apiEntitySetName?: string;\n  /** Type of entity. */\n  entityType?: EntityTypes;\n  /** The properties of the Profile. */\n  fields?: PropertyDefinition[];\n  /** The instance count. */\n  instancesCount?: number;\n  /**\n   * The last changed time for the type definition.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastChangedUtc?: Date;\n  /**\n   * Provisioning state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningStates;\n  /** The schema org link. This helps ACI identify and suggest semantic models. */\n  schemaItemTypeLink?: string;\n  /**\n   * The hub name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantId?: string;\n  /** The timestamp property name. Represents the time when the interaction or profile update happened. */\n  timestampFieldName?: string;\n  /** The name of the entity. */\n  typeName?: string;\n  /** The strong IDs. */\n  strongIds?: StrongId[];\n}\n\n/** The interaction resource format. */\nexport interface InteractionResourceFormat extends ProxyResource {\n  /** The attributes for the Type. */\n  attributes?: { [propertyName: string]: string[] };\n  /** Localized descriptions for the property. */\n  description?: { [propertyName: string]: string };\n  /** Localized display names for the property. */\n  displayName?: { [propertyName: string]: string };\n  /** Any custom localized attributes for the Type. */\n  localizedAttributes?: {\n    [propertyName: string]: { [propertyName: string]: string };\n  };\n  /** Small Image associated with the Property or EntityType. */\n  smallImage?: string;\n  /** Medium Image associated with the Property or EntityType. */\n  mediumImage?: string;\n  /** Large Image associated with the Property or EntityType. */\n  largeImage?: string;\n  /** The api entity set name. This becomes the odata entity set name for the entity Type being referred in this object. */\n  apiEntitySetName?: string;\n  /** Type of entity. */\n  entityType?: EntityTypes;\n  /** The properties of the Profile. */\n  fields?: PropertyDefinition[];\n  /** The instance count. */\n  instancesCount?: number;\n  /**\n   * The last changed time for the type definition.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastChangedUtc?: Date;\n  /**\n   * Provisioning state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningStates;\n  /** The schema org link. This helps ACI identify and suggest semantic models. */\n  schemaItemTypeLink?: string;\n  /**\n   * The hub name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantId?: string;\n  /** The timestamp property name. Represents the time when the interaction or profile update happened. */\n  timestampFieldName?: string;\n  /** The name of the entity. */\n  typeName?: string;\n  /** The id property names. Properties which uniquely identify an interaction instance. */\n  idPropertyNames?: string[];\n  /** Profiles that participated in the interaction. */\n  participantProfiles?: Participant[];\n  /** The primary participant property name for an interaction ,This is used to logically represent the agent of the interaction, Specify the participant name here from ParticipantName. */\n  primaryParticipantProfilePropertyName?: string;\n  /**\n   * This is specific to interactions modeled as activities. Data sources are used to determine where data is stored and also in precedence rules.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly dataSourcePrecedenceRules?: DataSourcePrecedence[];\n  /** An interaction can be tagged as an activity only during create. This enables the interaction to be editable and can enable merging of properties from multiple data sources based on precedence, which is defined at a link level. */\n  isActivity?: boolean;\n  /**\n   * The data source name\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly namePropertiesDefaultDataSourceName?: string;\n  /**\n   * The data source type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly dataSourceType?: DataSourceType;\n  /**\n   * The data source status.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: Status;\n  /**\n   * The data source ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly idPropertiesDefaultDataSourceId?: number;\n  /**\n   * The data source reference id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly dataSourceReferenceId?: string;\n}\n\n/** The relationship resource format. */\nexport interface RelationshipResourceFormat extends ProxyResource {\n  /** The Relationship Cardinality. */\n  cardinality?: CardinalityTypes;\n  /** Localized display name for the Relationship. */\n  displayName?: { [propertyName: string]: string };\n  /** Localized descriptions for the Relationship. */\n  description?: { [propertyName: string]: string };\n  /** The expiry date time in UTC. */\n  expiryDateTimeUtc?: Date;\n  /** The properties of the Relationship. */\n  fields?: PropertyDefinition[];\n  /** Optional property to be used to map fields in profile to their strong ids in related profile. */\n  lookupMappings?: RelationshipTypeMapping[];\n  /** Profile type. */\n  profileType?: string;\n  /**\n   * Provisioning state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningStates;\n  /**\n   * The Relationship name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly relationshipName?: string;\n  /** Related profile being referenced. */\n  relatedProfileType?: string;\n  /**\n   * The relationship guid id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly relationshipGuidId?: string;\n  /**\n   * The hub name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantId?: string;\n}\n\n/** The relationship link resource format. */\nexport interface RelationshipLinkResourceFormat extends ProxyResource {\n  /** Localized display name for the Relationship Link. */\n  displayName?: { [propertyName: string]: string };\n  /** Localized descriptions for the Relationship Link. */\n  description?: { [propertyName: string]: string };\n  /** The InteractionType associated with the Relationship Link. */\n  interactionType?: string;\n  /**\n   * The name of the Relationship Link.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly linkName?: string;\n  /** The mappings between Interaction and Relationship fields. */\n  mappings?: RelationshipLinkFieldMapping[];\n  /** The property references for the Profile of the Relationship. */\n  profilePropertyReferences?: ParticipantProfilePropertyReference[];\n  /**\n   * Provisioning state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningStates;\n  /** The property references for the Related Profile of the Relationship. */\n  relatedProfilePropertyReferences?: ParticipantProfilePropertyReference[];\n  /** The Relationship associated with the Link. */\n  relationshipName?: string;\n  /**\n   * The relationship guid id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly relationshipGuidId?: string;\n  /**\n   * The hub name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantId?: string;\n}\n\n/** The authorization policy resource format. */\nexport interface AuthorizationPolicyResourceFormat extends ProxyResource {\n  /**\n   * Name of the policy.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly policyName?: string;\n  /** The permissions associated with the policy. */\n  permissions?: PermissionTypes[];\n  /** Primary key associated with the policy. */\n  primaryKey?: string;\n  /** Secondary key associated with the policy. */\n  secondaryKey?: string;\n}\n\n/** The connector resource format. */\nexport interface ConnectorResourceFormat extends ProxyResource {\n  /**\n   * ID of the connector.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly connectorId?: number;\n  /** Name of the connector. */\n  connectorName?: string;\n  /** Type of connector. */\n  connectorType?: ConnectorTypes;\n  /** Display name of the connector. */\n  displayName?: string;\n  /** Description of the connector. */\n  description?: string;\n  /** The connector properties. */\n  connectorProperties?: { [propertyName: string]: Record<string, unknown> };\n  /**\n   * The created time.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly created?: Date;\n  /**\n   * The last modified time.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastModified?: Date;\n  /**\n   * State of connector.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly state?: ConnectorStates;\n  /**\n   * The hub name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantId?: string;\n  /** If this is an internal connector. */\n  isInternal?: boolean;\n}\n\n/** The connector mapping resource format. */\nexport interface ConnectorMappingResourceFormat extends ProxyResource {\n  /**\n   * The connector name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly connectorName?: string;\n  /** Type of connector. */\n  connectorType?: ConnectorTypes;\n  /**\n   * The created time.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly created?: Date;\n  /**\n   * The last modified time.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastModified?: Date;\n  /** Defines which entity type the file should map to. */\n  entityType?: EntityTypes;\n  /** The mapping entity name. */\n  entityTypeName?: string;\n  /**\n   * The connector mapping name\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly connectorMappingName?: string;\n  /** Display name for the connector mapping. */\n  displayName?: string;\n  /** The description of the connector mapping. */\n  description?: string;\n  /**\n   * The DataFormat ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly dataFormatId?: string;\n  /** The properties of the mapping. */\n  mappingProperties?: ConnectorMappingProperties;\n  /**\n   * The next run time based on customer's settings.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextRunTime?: Date;\n  /**\n   * The RunId.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly runId?: string;\n  /**\n   * State of connector mapping.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly state?: ConnectorMappingStates;\n  /**\n   * The hub name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantId?: string;\n}\n\n/** The KPI resource format. */\nexport interface KpiResourceFormat extends ProxyResource {\n  /** The mapping entity type. */\n  entityType?: EntityTypes;\n  /** The mapping entity name. */\n  entityTypeName?: string;\n  /**\n   * The hub name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantId?: string;\n  /**\n   * The KPI name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly kpiName?: string;\n  /** Localized display name for the KPI. */\n  displayName?: { [propertyName: string]: string };\n  /** Localized description for the KPI. */\n  description?: { [propertyName: string]: string };\n  /** The calculation window. */\n  calculationWindow?: CalculationWindowTypes;\n  /** Name of calculation window field. */\n  calculationWindowFieldName?: string;\n  /** The computation function for the KPI. */\n  function?: KpiFunctions;\n  /** The computation expression for the KPI. */\n  expression?: string;\n  /** The unit of measurement for the KPI. */\n  unit?: string;\n  /** The filter expression for the KPI. */\n  filter?: string;\n  /** the group by properties for the KPI. */\n  groupBy?: string[];\n  /**\n   * The KPI GroupByMetadata.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly groupByMetadata?: KpiGroupByMetadata[];\n  /**\n   * The participant profiles.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly participantProfilesMetadata?: KpiParticipantProfilesMetadata[];\n  /**\n   * Provisioning state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningStates;\n  /** The KPI thresholds. */\n  thresHolds?: KpiThresholds;\n  /** The aliases. */\n  aliases?: KpiAlias[];\n  /** The KPI extracts. */\n  extracts?: KpiExtract[];\n}\n\n/** The WidgetTypeResourceFormat */\nexport interface WidgetTypeResourceFormat extends ProxyResource {\n  /**\n   * Name of the widget type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly widgetTypeName?: string;\n  /** Definition for widget type. */\n  definition?: string;\n  /** Description for widget type. */\n  description?: string;\n  /** Localized display name for the widget type. */\n  displayName?: { [propertyName: string]: string };\n  /** The image URL. */\n  imageUrl?: string;\n  /**\n   * The hub name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantId?: string;\n  /** The widget version. */\n  widgetVersion?: string;\n  /**\n   * Date time when widget type was last modified.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly changed?: Date;\n  /**\n   * Date time when widget type was created.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly created?: Date;\n}\n\n/** The view resource format. */\nexport interface ViewResourceFormat extends ProxyResource {\n  /**\n   * Name of the view.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly viewName?: string;\n  /** the user ID. */\n  userId?: string;\n  /**\n   * the hub name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantId?: string;\n  /** Localized display name for the view. */\n  displayName?: { [propertyName: string]: string };\n  /** View definition. */\n  definition?: string;\n  /**\n   * Date time when view was last modified.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly changed?: Date;\n  /**\n   * Date time when view was created.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly created?: Date;\n}\n\n/** The link resource format. */\nexport interface LinkResourceFormat extends ProxyResource {\n  /**\n   * The hub name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantId?: string;\n  /**\n   * The link name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly linkName?: string;\n  /** Type of source entity. */\n  sourceEntityType?: EntityType;\n  /** Type of target entity. */\n  targetEntityType?: EntityType;\n  /** Name of the source Entity Type. */\n  sourceEntityTypeName?: string;\n  /** Name of the target Entity Type. */\n  targetEntityTypeName?: string;\n  /** Localized display name for the Link. */\n  displayName?: { [propertyName: string]: string };\n  /** Localized descriptions for the Link. */\n  description?: { [propertyName: string]: string };\n  /** The set of properties mappings between the source and target Types. */\n  mappings?: TypePropertiesMapping[];\n  /** The properties that represent the participating profile. */\n  participantPropertyReferences?: ParticipantPropertyReference[];\n  /**\n   * Provisioning state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningStates;\n  /** Indicating whether the link is reference only link. This flag is ignored if the Mappings are defined. If the mappings are not defined and it is set to true, links processing will not create or update profiles. */\n  referenceOnly?: boolean;\n  /** Determines whether this link is supposed to create or delete instances if Link is NOT Reference Only. */\n  operationType?: InstanceOperationType;\n}\n\n/** The role resource format. */\nexport interface RoleResourceFormat extends ProxyResource {\n  /** The role name. */\n  roleName?: string;\n  /** The description of the role. */\n  description?: string;\n}\n\n/** The Role Assignment resource format. */\nexport interface RoleAssignmentResourceFormat extends ProxyResource {\n  /**\n   * The hub name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantId?: string;\n  /**\n   * The name of the metadata object.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly assignmentName?: string;\n  /** Localized display names for the metadata. */\n  displayName?: { [propertyName: string]: string };\n  /** Localized description for the metadata. */\n  description?: { [propertyName: string]: string };\n  /**\n   * Provisioning state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningStates;\n  /** Type of roles. */\n  role?: RoleTypes;\n  /** The principals being assigned to. */\n  principals?: AssignmentPrincipal[];\n  /** Profiles set for the assignment. */\n  profiles?: ResourceSetDescription;\n  /** Interactions set for the assignment. */\n  interactions?: ResourceSetDescription;\n  /** Links set for the assignment. */\n  links?: ResourceSetDescription;\n  /** Kpis set for the assignment. */\n  kpis?: ResourceSetDescription;\n  /** Sas Policies set for the assignment. */\n  sasPolicies?: ResourceSetDescription;\n  /** Connectors set for the assignment. */\n  connectors?: ResourceSetDescription;\n  /** Views set for the assignment. */\n  views?: ResourceSetDescription;\n  /** The Role assignments set for the relationship links. */\n  relationshipLinks?: ResourceSetDescription;\n  /** The Role assignments set for the relationships. */\n  relationships?: ResourceSetDescription;\n  /** Widget types set for the assignment. */\n  widgetTypes?: ResourceSetDescription;\n  /** The Role assignments set for the assignment. */\n  roleAssignments?: ResourceSetDescription;\n  /** Widget types set for the assignment. */\n  conflationPolicies?: ResourceSetDescription;\n  /** The Role assignments set for the assignment. */\n  segments?: ResourceSetDescription;\n}\n\n/** The prediction resource format. */\nexport interface PredictionResourceFormat extends ProxyResource {\n  /** Description of the prediction. */\n  description?: { [propertyName: string]: string };\n  /** Display name of the prediction. */\n  displayName?: { [propertyName: string]: string };\n  /** Interaction types involved in the prediction. */\n  involvedInteractionTypes?: string[];\n  /** KPI types involved in the prediction. */\n  involvedKpiTypes?: string[];\n  /** Relationships involved in the prediction. */\n  involvedRelationships?: string[];\n  /** Negative outcome expression. */\n  negativeOutcomeExpression?: string;\n  /** Positive outcome expression. */\n  positiveOutcomeExpression?: string;\n  /** Primary profile type. */\n  primaryProfileType?: string;\n  /**\n   * Provisioning state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningStates;\n  /** Name of the prediction. */\n  predictionName?: string;\n  /** Scope expression. */\n  scopeExpression?: string;\n  /**\n   * The hub name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantId?: string;\n  /** Whether do auto analyze. */\n  autoAnalyze?: boolean;\n  /** Definition of the link mapping of prediction. */\n  mappings?: PredictionMappings;\n  /** Score label. */\n  scoreLabel?: string;\n  /** The prediction grades. */\n  grades?: PredictionGradesItem[];\n  /**\n   * System generated entities.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemGeneratedEntities?: PredictionSystemGeneratedEntities;\n}\n\n/** The enriching KPI definition. */\nexport interface EnrichingKpi extends KpiDefinition {}\n\n/** The profile type definition. */\nexport interface ProfileTypeDefinition extends EntityTypeDefinition {\n  /** The strong IDs. */\n  strongIds?: StrongId[];\n}\n\n/** The Interaction Type Definition */\nexport interface InteractionTypeDefinition extends EntityTypeDefinition {\n  /** The id property names. Properties which uniquely identify an interaction instance. */\n  idPropertyNames?: string[];\n  /** Profiles that participated in the interaction. */\n  participantProfiles?: Participant[];\n  /** The primary participant property name for an interaction ,This is used to logically represent the agent of the interaction, Specify the participant name here from ParticipantName. */\n  primaryParticipantProfilePropertyName?: string;\n  /**\n   * This is specific to interactions modeled as activities. Data sources are used to determine where data is stored and also in precedence rules.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly dataSourcePrecedenceRules?: DataSourcePrecedence[];\n  /** An interaction can be tagged as an activity only during create. This enables the interaction to be editable and can enable merging of properties from multiple data sources based on precedence, which is defined at a link level. */\n  isActivity?: boolean;\n  /**\n   * The data source name\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The data source type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly dataSourceType?: DataSourceType;\n  /**\n   * The data source status.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: Status;\n  /**\n   * The data source ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: number;\n  /**\n   * The data source reference id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly dataSourceReferenceId?: string;\n}\n\n/** Known values of {@link DataSourceType} that the service accepts. */\nexport enum KnownDataSourceType {\n  /** Connector */\n  Connector = \"Connector\",\n  /** LinkInteraction */\n  LinkInteraction = \"LinkInteraction\",\n  /** SystemDefault */\n  SystemDefault = \"SystemDefault\"\n}\n\n/**\n * Defines values for DataSourceType. \\\n * {@link KnownDataSourceType} can be used interchangeably with DataSourceType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Connector** \\\n * **LinkInteraction** \\\n * **SystemDefault**\n */\nexport type DataSourceType = string;\n\n/** Known values of {@link Status} that the service accepts. */\nexport enum KnownStatus {\n  /** None */\n  None = \"None\",\n  /** Active */\n  Active = \"Active\",\n  /** Deleted */\n  Deleted = \"Deleted\"\n}\n\n/**\n * Defines values for Status. \\\n * {@link KnownStatus} can be used interchangeably with Status,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **Active** \\\n * **Deleted**\n */\nexport type Status = string;\n\n/** Known values of {@link ProvisioningStates} that the service accepts. */\nexport enum KnownProvisioningStates {\n  /** Provisioning */\n  Provisioning = \"Provisioning\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Expiring */\n  Expiring = \"Expiring\",\n  /** Deleting */\n  Deleting = \"Deleting\",\n  /** HumanIntervention */\n  HumanIntervention = \"HumanIntervention\",\n  /** Failed */\n  Failed = \"Failed\"\n}\n\n/**\n * Defines values for ProvisioningStates. \\\n * {@link KnownProvisioningStates} can be used interchangeably with ProvisioningStates,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Provisioning** \\\n * **Succeeded** \\\n * **Expiring** \\\n * **Deleting** \\\n * **HumanIntervention** \\\n * **Failed**\n */\nexport type ProvisioningStates = string;\n\n/** Known values of {@link ConnectorTypes} that the service accepts. */\nexport enum KnownConnectorTypes {\n  /** None */\n  None = \"None\",\n  /** CRM */\n  CRM = \"CRM\",\n  /** AzureBlob */\n  AzureBlob = \"AzureBlob\",\n  /** Salesforce */\n  Salesforce = \"Salesforce\",\n  /** ExchangeOnline */\n  ExchangeOnline = \"ExchangeOnline\",\n  /** Outbound */\n  Outbound = \"Outbound\"\n}\n\n/**\n * Defines values for ConnectorTypes. \\\n * {@link KnownConnectorTypes} can be used interchangeably with ConnectorTypes,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **CRM** \\\n * **AzureBlob** \\\n * **Salesforce** \\\n * **ExchangeOnline** \\\n * **Outbound**\n */\nexport type ConnectorTypes = string;\n\n/** Known values of {@link CanonicalPropertyValueType} that the service accepts. */\nexport enum KnownCanonicalPropertyValueType {\n  /** Numeric */\n  Numeric = \"Numeric\",\n  /** Categorical */\n  Categorical = \"Categorical\",\n  /** DerivedCategorical */\n  DerivedCategorical = \"DerivedCategorical\",\n  /** DerivedNumeric */\n  DerivedNumeric = \"DerivedNumeric\"\n}\n\n/**\n * Defines values for CanonicalPropertyValueType. \\\n * {@link KnownCanonicalPropertyValueType} can be used interchangeably with CanonicalPropertyValueType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Numeric** \\\n * **Categorical** \\\n * **DerivedCategorical** \\\n * **DerivedNumeric**\n */\nexport type CanonicalPropertyValueType = string;\n\n/** Known values of {@link PredictionModelLifeCycle} that the service accepts. */\nexport enum KnownPredictionModelLifeCycle {\n  /** New */\n  New = \"New\",\n  /** Provisioning */\n  Provisioning = \"Provisioning\",\n  /** ProvisioningFailed */\n  ProvisioningFailed = \"ProvisioningFailed\",\n  /** PendingDiscovering */\n  PendingDiscovering = \"PendingDiscovering\",\n  /** Discovering */\n  Discovering = \"Discovering\",\n  /** PendingFeaturing */\n  PendingFeaturing = \"PendingFeaturing\",\n  /** Featuring */\n  Featuring = \"Featuring\",\n  /** FeaturingFailed */\n  FeaturingFailed = \"FeaturingFailed\",\n  /** PendingTraining */\n  PendingTraining = \"PendingTraining\",\n  /** Training */\n  Training = \"Training\",\n  /** TrainingFailed */\n  TrainingFailed = \"TrainingFailed\",\n  /** Evaluating */\n  Evaluating = \"Evaluating\",\n  /** EvaluatingFailed */\n  EvaluatingFailed = \"EvaluatingFailed\",\n  /** PendingModelConfirmation */\n  PendingModelConfirmation = \"PendingModelConfirmation\",\n  /** Active */\n  Active = \"Active\",\n  /** Deleted */\n  Deleted = \"Deleted\",\n  /** HumanIntervention */\n  HumanIntervention = \"HumanIntervention\",\n  /** Failed */\n  Failed = \"Failed\"\n}\n\n/**\n * Defines values for PredictionModelLifeCycle. \\\n * {@link KnownPredictionModelLifeCycle} can be used interchangeably with PredictionModelLifeCycle,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **New** \\\n * **Provisioning** \\\n * **ProvisioningFailed** \\\n * **PendingDiscovering** \\\n * **Discovering** \\\n * **PendingFeaturing** \\\n * **Featuring** \\\n * **FeaturingFailed** \\\n * **PendingTraining** \\\n * **Training** \\\n * **TrainingFailed** \\\n * **Evaluating** \\\n * **EvaluatingFailed** \\\n * **PendingModelConfirmation** \\\n * **Active** \\\n * **Deleted** \\\n * **HumanIntervention** \\\n * **Failed**\n */\nexport type PredictionModelLifeCycle = string;\n/** Defines values for EntityTypes. */\nexport type EntityTypes = \"None\" | \"Profile\" | \"Interaction\" | \"Relationship\";\n/** Defines values for CalculationWindowTypes. */\nexport type CalculationWindowTypes =\n  | \"Lifetime\"\n  | \"Hour\"\n  | \"Day\"\n  | \"Week\"\n  | \"Month\";\n/** Defines values for KpiFunctions. */\nexport type KpiFunctions =\n  | \"Sum\"\n  | \"Avg\"\n  | \"Min\"\n  | \"Max\"\n  | \"Last\"\n  | \"Count\"\n  | \"None\"\n  | \"CountDistinct\";\n/** Defines values for CardinalityTypes. */\nexport type CardinalityTypes = \"OneToOne\" | \"OneToMany\" | \"ManyToMany\";\n/** Defines values for LinkTypes. */\nexport type LinkTypes = \"UpdateAlways\" | \"CopyIfNull\";\n/** Defines values for PermissionTypes. */\nexport type PermissionTypes = \"Read\" | \"Write\" | \"Manage\";\n/** Defines values for ConnectorStates. */\nexport type ConnectorStates =\n  | \"Creating\"\n  | \"Created\"\n  | \"Ready\"\n  | \"Expiring\"\n  | \"Deleting\"\n  | \"Failed\";\n/** Defines values for ErrorManagementTypes. */\nexport type ErrorManagementTypes =\n  | \"RejectAndContinue\"\n  | \"StopImport\"\n  | \"RejectUntilLimit\";\n/** Defines values for FrequencyTypes. */\nexport type FrequencyTypes = \"Minute\" | \"Hour\" | \"Day\" | \"Week\" | \"Month\";\n/** Defines values for CompletionOperationTypes. */\nexport type CompletionOperationTypes = \"DoNothing\" | \"DeleteFile\" | \"MoveFile\";\n/** Defines values for ConnectorMappingStates. */\nexport type ConnectorMappingStates =\n  | \"Creating\"\n  | \"Created\"\n  | \"Failed\"\n  | \"Ready\"\n  | \"Running\"\n  | \"Stopped\"\n  | \"Expiring\";\n/** Defines values for EntityType. */\nexport type EntityType = \"None\" | \"Profile\" | \"Interaction\" | \"Relationship\";\n/** Defines values for InstanceOperationType. */\nexport type InstanceOperationType = \"Upsert\" | \"Delete\";\n/** Defines values for RoleTypes. */\nexport type RoleTypes =\n  | \"Admin\"\n  | \"Reader\"\n  | \"ManageAdmin\"\n  | \"ManageReader\"\n  | \"DataAdmin\"\n  | \"DataReader\";\n\n/** Optional parameters. */\nexport interface OperationsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type OperationsListResponse = OperationListResult;\n\n/** Optional parameters. */\nexport interface OperationsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type OperationsListNextResponse = OperationListResult;\n\n/** Optional parameters. */\nexport interface HubsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type HubsCreateOrUpdateResponse = Hub;\n\n/** Optional parameters. */\nexport interface HubsUpdateOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the update operation. */\nexport type HubsUpdateResponse = Hub;\n\n/** Optional parameters. */\nexport interface HubsDeleteOptionalParams extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface HubsGetOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type HubsGetResponse = Hub;\n\n/** Optional parameters. */\nexport interface HubsListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type HubsListByResourceGroupResponse = HubListResult;\n\n/** Optional parameters. */\nexport interface HubsListOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type HubsListResponse = HubListResult;\n\n/** Optional parameters. */\nexport interface HubsListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type HubsListByResourceGroupNextResponse = HubListResult;\n\n/** Optional parameters. */\nexport interface HubsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type HubsListNextResponse = HubListResult;\n\n/** Optional parameters. */\nexport interface ProfilesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ProfilesCreateOrUpdateResponse = ProfileResourceFormat;\n\n/** Optional parameters. */\nexport interface ProfilesGetOptionalParams extends coreClient.OperationOptions {\n  /** Locale of profile to retrieve, default is en-us. */\n  localeCode?: string;\n}\n\n/** Contains response data for the get operation. */\nexport type ProfilesGetResponse = ProfileResourceFormat;\n\n/** Optional parameters. */\nexport interface ProfilesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Locale of profile to retrieve, default is en-us. */\n  localeCode?: string;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ProfilesListByHubOptionalParams\n  extends coreClient.OperationOptions {\n  /** Locale of profile to retrieve, default is en-us. */\n  localeCode?: string;\n}\n\n/** Contains response data for the listByHub operation. */\nexport type ProfilesListByHubResponse = ProfileListResult;\n\n/** Optional parameters. */\nexport interface ProfilesGetEnrichingKpisOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getEnrichingKpis operation. */\nexport type ProfilesGetEnrichingKpisResponse = KpiDefinition[];\n\n/** Optional parameters. */\nexport interface ProfilesListByHubNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Locale of profile to retrieve, default is en-us. */\n  localeCode?: string;\n}\n\n/** Contains response data for the listByHubNext operation. */\nexport type ProfilesListByHubNextResponse = ProfileListResult;\n\n/** Optional parameters. */\nexport interface InteractionsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type InteractionsCreateOrUpdateResponse = InteractionResourceFormat;\n\n/** Optional parameters. */\nexport interface InteractionsGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** Locale of interaction to retrieve, default is en-us. */\n  localeCode?: string;\n}\n\n/** Contains response data for the get operation. */\nexport type InteractionsGetResponse = InteractionResourceFormat;\n\n/** Optional parameters. */\nexport interface InteractionsListByHubOptionalParams\n  extends coreClient.OperationOptions {\n  /** Locale of interaction to retrieve, default is en-us. */\n  localeCode?: string;\n}\n\n/** Contains response data for the listByHub operation. */\nexport type InteractionsListByHubResponse = InteractionListResult;\n\n/** Optional parameters. */\nexport interface InteractionsSuggestRelationshipLinksOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the suggestRelationshipLinks operation. */\nexport type InteractionsSuggestRelationshipLinksResponse = SuggestRelationshipLinksResponse;\n\n/** Optional parameters. */\nexport interface InteractionsListByHubNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Locale of interaction to retrieve, default is en-us. */\n  localeCode?: string;\n}\n\n/** Contains response data for the listByHubNext operation. */\nexport type InteractionsListByHubNextResponse = InteractionListResult;\n\n/** Optional parameters. */\nexport interface RelationshipsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type RelationshipsCreateOrUpdateResponse = RelationshipResourceFormat;\n\n/** Optional parameters. */\nexport interface RelationshipsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type RelationshipsGetResponse = RelationshipResourceFormat;\n\n/** Optional parameters. */\nexport interface RelationshipsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface RelationshipsListByHubOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByHub operation. */\nexport type RelationshipsListByHubResponse = RelationshipListResult;\n\n/** Optional parameters. */\nexport interface RelationshipsListByHubNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByHubNext operation. */\nexport type RelationshipsListByHubNextResponse = RelationshipListResult;\n\n/** Optional parameters. */\nexport interface RelationshipLinksCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type RelationshipLinksCreateOrUpdateResponse = RelationshipLinkResourceFormat;\n\n/** Optional parameters. */\nexport interface RelationshipLinksGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type RelationshipLinksGetResponse = RelationshipLinkResourceFormat;\n\n/** Optional parameters. */\nexport interface RelationshipLinksDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface RelationshipLinksListByHubOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByHub operation. */\nexport type RelationshipLinksListByHubResponse = RelationshipLinkListResult;\n\n/** Optional parameters. */\nexport interface RelationshipLinksListByHubNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByHubNext operation. */\nexport type RelationshipLinksListByHubNextResponse = RelationshipLinkListResult;\n\n/** Optional parameters. */\nexport interface AuthorizationPoliciesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type AuthorizationPoliciesCreateOrUpdateResponse = AuthorizationPolicyResourceFormat;\n\n/** Optional parameters. */\nexport interface AuthorizationPoliciesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type AuthorizationPoliciesGetResponse = AuthorizationPolicyResourceFormat;\n\n/** Optional parameters. */\nexport interface AuthorizationPoliciesListByHubOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByHub operation. */\nexport type AuthorizationPoliciesListByHubResponse = AuthorizationPolicyListResult;\n\n/** Optional parameters. */\nexport interface AuthorizationPoliciesRegeneratePrimaryKeyOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the regeneratePrimaryKey operation. */\nexport type AuthorizationPoliciesRegeneratePrimaryKeyResponse = AuthorizationPolicy;\n\n/** Optional parameters. */\nexport interface AuthorizationPoliciesRegenerateSecondaryKeyOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the regenerateSecondaryKey operation. */\nexport type AuthorizationPoliciesRegenerateSecondaryKeyResponse = AuthorizationPolicy;\n\n/** Optional parameters. */\nexport interface AuthorizationPoliciesListByHubNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByHubNext operation. */\nexport type AuthorizationPoliciesListByHubNextResponse = AuthorizationPolicyListResult;\n\n/** Optional parameters. */\nexport interface ConnectorsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ConnectorsCreateOrUpdateResponse = ConnectorResourceFormat;\n\n/** Optional parameters. */\nexport interface ConnectorsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ConnectorsGetResponse = ConnectorResourceFormat;\n\n/** Optional parameters. */\nexport interface ConnectorsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ConnectorsListByHubOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByHub operation. */\nexport type ConnectorsListByHubResponse = ConnectorListResult;\n\n/** Optional parameters. */\nexport interface ConnectorsListByHubNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByHubNext operation. */\nexport type ConnectorsListByHubNextResponse = ConnectorListResult;\n\n/** Optional parameters. */\nexport interface ConnectorMappingsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ConnectorMappingsCreateOrUpdateResponse = ConnectorMappingResourceFormat;\n\n/** Optional parameters. */\nexport interface ConnectorMappingsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ConnectorMappingsGetResponse = ConnectorMappingResourceFormat;\n\n/** Optional parameters. */\nexport interface ConnectorMappingsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ConnectorMappingsListByConnectorOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByConnector operation. */\nexport type ConnectorMappingsListByConnectorResponse = ConnectorMappingListResult;\n\n/** Optional parameters. */\nexport interface ConnectorMappingsListByConnectorNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByConnectorNext operation. */\nexport type ConnectorMappingsListByConnectorNextResponse = ConnectorMappingListResult;\n\n/** Optional parameters. */\nexport interface KpiCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type KpiCreateOrUpdateResponse = KpiResourceFormat;\n\n/** Optional parameters. */\nexport interface KpiGetOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type KpiGetResponse = KpiResourceFormat;\n\n/** Optional parameters. */\nexport interface KpiDeleteOptionalParams extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface KpiReprocessOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface KpiListByHubOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByHub operation. */\nexport type KpiListByHubResponse = KpiListResult;\n\n/** Optional parameters. */\nexport interface KpiListByHubNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByHubNext operation. */\nexport type KpiListByHubNextResponse = KpiListResult;\n\n/** Optional parameters. */\nexport interface WidgetTypesListByHubOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByHub operation. */\nexport type WidgetTypesListByHubResponse = WidgetTypeListResult;\n\n/** Optional parameters. */\nexport interface WidgetTypesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type WidgetTypesGetResponse = WidgetTypeResourceFormat;\n\n/** Optional parameters. */\nexport interface WidgetTypesListByHubNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByHubNext operation. */\nexport type WidgetTypesListByHubNextResponse = WidgetTypeListResult;\n\n/** Optional parameters. */\nexport interface ViewsListByHubOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByHub operation. */\nexport type ViewsListByHubResponse = ViewListResult;\n\n/** Optional parameters. */\nexport interface ViewsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ViewsCreateOrUpdateResponse = ViewResourceFormat;\n\n/** Optional parameters. */\nexport interface ViewsGetOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ViewsGetResponse = ViewResourceFormat;\n\n/** Optional parameters. */\nexport interface ViewsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ViewsListByHubNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByHubNext operation. */\nexport type ViewsListByHubNextResponse = ViewListResult;\n\n/** Optional parameters. */\nexport interface LinksCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type LinksCreateOrUpdateResponse = LinkResourceFormat;\n\n/** Optional parameters. */\nexport interface LinksGetOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type LinksGetResponse = LinkResourceFormat;\n\n/** Optional parameters. */\nexport interface LinksDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface LinksListByHubOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByHub operation. */\nexport type LinksListByHubResponse = LinkListResult;\n\n/** Optional parameters. */\nexport interface LinksListByHubNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByHubNext operation. */\nexport type LinksListByHubNextResponse = LinkListResult;\n\n/** Optional parameters. */\nexport interface RolesListByHubOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByHub operation. */\nexport type RolesListByHubResponse = RoleListResult;\n\n/** Optional parameters. */\nexport interface RolesListByHubNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByHubNext operation. */\nexport type RolesListByHubNextResponse = RoleListResult;\n\n/** Optional parameters. */\nexport interface RoleAssignmentsListByHubOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByHub operation. */\nexport type RoleAssignmentsListByHubResponse = RoleAssignmentListResult;\n\n/** Optional parameters. */\nexport interface RoleAssignmentsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type RoleAssignmentsCreateOrUpdateResponse = RoleAssignmentResourceFormat;\n\n/** Optional parameters. */\nexport interface RoleAssignmentsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type RoleAssignmentsGetResponse = RoleAssignmentResourceFormat;\n\n/** Optional parameters. */\nexport interface RoleAssignmentsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface RoleAssignmentsListByHubNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByHubNext operation. */\nexport type RoleAssignmentsListByHubNextResponse = RoleAssignmentListResult;\n\n/** Optional parameters. */\nexport interface ImagesGetUploadUrlForEntityTypeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getUploadUrlForEntityType operation. */\nexport type ImagesGetUploadUrlForEntityTypeResponse = ImageDefinition;\n\n/** Optional parameters. */\nexport interface ImagesGetUploadUrlForDataOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getUploadUrlForData operation. */\nexport type ImagesGetUploadUrlForDataResponse = ImageDefinition;\n\n/** Optional parameters. */\nexport interface PredictionsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type PredictionsCreateOrUpdateResponse = PredictionResourceFormat;\n\n/** Optional parameters. */\nexport interface PredictionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type PredictionsGetResponse = PredictionResourceFormat;\n\n/** Optional parameters. */\nexport interface PredictionsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface PredictionsGetTrainingResultsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getTrainingResults operation. */\nexport type PredictionsGetTrainingResultsResponse = PredictionTrainingResults;\n\n/** Optional parameters. */\nexport interface PredictionsGetModelStatusOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getModelStatus operation. */\nexport type PredictionsGetModelStatusResponse = PredictionModelStatus;\n\n/** Optional parameters. */\nexport interface PredictionsModelStatusOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface PredictionsListByHubOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByHub operation. */\nexport type PredictionsListByHubResponse = PredictionListResult;\n\n/** Optional parameters. */\nexport interface PredictionsListByHubNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByHubNext operation. */\nexport type PredictionsListByHubNextResponse = PredictionListResult;\n\n/** Optional parameters. */\nexport interface CustomerInsightsManagementClientOptionalParams\n  extends coreClient.ServiceClientOptions {\n  /** server parameter */\n  $host?: string;\n  /** Api Version */\n  apiVersion?: string;\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport const OperationListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Operation\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Operation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Operation\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      display: {\n        serializedName: \"display\",\n        type: {\n          name: \"Composite\",\n          className: \"OperationDisplay\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationDisplay: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationDisplay\",\n    modelProperties: {\n      provider: {\n        serializedName: \"provider\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resource: {\n        serializedName: \"resource\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      operation: {\n        serializedName: \"operation\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const HubBillingInfoFormat: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"HubBillingInfoFormat\",\n    modelProperties: {\n      skuName: {\n        serializedName: \"skuName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      minUnits: {\n        constraints: {\n          InclusiveMaximum: 10,\n          InclusiveMinimum: 1\n        },\n        serializedName: \"minUnits\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      maxUnits: {\n        constraints: {\n          InclusiveMaximum: 10,\n          InclusiveMinimum: 1\n        },\n        serializedName: \"maxUnits\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Resource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Resource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const HubListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"HubListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Hub\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const StrongId: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StrongId\",\n    modelProperties: {\n      keyPropertyNames: {\n        serializedName: \"keyPropertyNames\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      strongIdName: {\n        serializedName: \"strongIdName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const PropertyDefinition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PropertyDefinition\",\n    modelProperties: {\n      arrayValueSeparator: {\n        serializedName: \"arrayValueSeparator\",\n        type: {\n          name: \"String\"\n        }\n      },\n      enumValidValues: {\n        serializedName: \"enumValidValues\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ProfileEnumValidValuesFormat\"\n            }\n          }\n        }\n      },\n      fieldName: {\n        serializedName: \"fieldName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fieldType: {\n        serializedName: \"fieldType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      isArray: {\n        serializedName: \"isArray\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isEnum: {\n        serializedName: \"isEnum\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isFlagEnum: {\n        serializedName: \"isFlagEnum\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isImage: {\n        serializedName: \"isImage\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isLocalizedString: {\n        serializedName: \"isLocalizedString\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isName: {\n        serializedName: \"isName\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isRequired: {\n        serializedName: \"isRequired\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      propertyId: {\n        serializedName: \"propertyId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      schemaItemPropLink: {\n        serializedName: \"schemaItemPropLink\",\n        type: {\n          name: \"String\"\n        }\n      },\n      maxLength: {\n        serializedName: \"maxLength\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      isAvailableInGraph: {\n        serializedName: \"isAvailableInGraph\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      dataSourcePrecedenceRules: {\n        serializedName: \"dataSourcePrecedenceRules\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DataSourcePrecedence\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ProfileEnumValidValuesFormat: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProfileEnumValidValuesFormat\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      localizedValueNames: {\n        serializedName: \"localizedValueNames\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const DataSourcePrecedence: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DataSourcePrecedence\",\n    modelProperties: {\n      precedence: {\n        serializedName: \"precedence\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      name: {\n        serializedName: \"dataSource.name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      dataSourceType: {\n        serializedName: \"dataSource.dataSourceType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"dataSource.status\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      id: {\n        serializedName: \"dataSource.id\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      dataSourceReferenceId: {\n        serializedName: \"dataSource.dataSourceReferenceId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MetadataDefinitionBase: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetadataDefinitionBase\",\n    modelProperties: {\n      attributes: {\n        serializedName: \"attributes\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Sequence\", element: { type: { name: \"String\" } } }\n          }\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      localizedAttributes: {\n        serializedName: \"localizedAttributes\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Dictionary\", value: { type: { name: \"String\" } } }\n          }\n        }\n      },\n      smallImage: {\n        serializedName: \"smallImage\",\n        type: {\n          name: \"String\"\n        }\n      },\n      mediumImage: {\n        serializedName: \"mediumImage\",\n        type: {\n          name: \"String\"\n        }\n      },\n      largeImage: {\n        serializedName: \"largeImage\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ProxyResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProxyResource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ProfileListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProfileListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ProfileResourceFormat\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const KpiDefinition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KpiDefinition\",\n    modelProperties: {\n      entityType: {\n        serializedName: \"entityType\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"None\", \"Profile\", \"Interaction\", \"Relationship\"]\n        }\n      },\n      entityTypeName: {\n        serializedName: \"entityTypeName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantId: {\n        serializedName: \"tenantId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      kpiName: {\n        serializedName: \"kpiName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      calculationWindow: {\n        serializedName: \"calculationWindow\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Lifetime\", \"Hour\", \"Day\", \"Week\", \"Month\"]\n        }\n      },\n      calculationWindowFieldName: {\n        serializedName: \"calculationWindowFieldName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      function: {\n        serializedName: \"function\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Sum\",\n            \"Avg\",\n            \"Min\",\n            \"Max\",\n            \"Last\",\n            \"Count\",\n            \"None\",\n            \"CountDistinct\"\n          ]\n        }\n      },\n      expression: {\n        serializedName: \"expression\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      unit: {\n        serializedName: \"unit\",\n        type: {\n          name: \"String\"\n        }\n      },\n      filter: {\n        serializedName: \"filter\",\n        type: {\n          name: \"String\"\n        }\n      },\n      groupBy: {\n        serializedName: \"groupBy\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      groupByMetadata: {\n        serializedName: \"groupByMetadata\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"KpiGroupByMetadata\"\n            }\n          }\n        }\n      },\n      participantProfilesMetadata: {\n        serializedName: \"participantProfilesMetadata\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"KpiParticipantProfilesMetadata\"\n            }\n          }\n        }\n      },\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      thresHolds: {\n        serializedName: \"thresHolds\",\n        type: {\n          name: \"Composite\",\n          className: \"KpiThresholds\"\n        }\n      },\n      aliases: {\n        serializedName: \"aliases\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"KpiAlias\"\n            }\n          }\n        }\n      },\n      extracts: {\n        serializedName: \"extracts\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"KpiExtract\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const KpiGroupByMetadata: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KpiGroupByMetadata\",\n    modelProperties: {\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      fieldName: {\n        serializedName: \"fieldName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fieldType: {\n        serializedName: \"fieldType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const KpiParticipantProfilesMetadata: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KpiParticipantProfilesMetadata\",\n    modelProperties: {\n      typeName: {\n        serializedName: \"typeName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const KpiThresholds: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KpiThresholds\",\n    modelProperties: {\n      lowerLimit: {\n        serializedName: \"lowerLimit\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      upperLimit: {\n        serializedName: \"upperLimit\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      increasingKpi: {\n        serializedName: \"increasingKpi\",\n        required: true,\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const KpiAlias: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KpiAlias\",\n    modelProperties: {\n      aliasName: {\n        serializedName: \"aliasName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      expression: {\n        serializedName: \"expression\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const KpiExtract: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KpiExtract\",\n    modelProperties: {\n      extractName: {\n        serializedName: \"extractName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      expression: {\n        serializedName: \"expression\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Participant: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Participant\",\n    modelProperties: {\n      profileTypeName: {\n        serializedName: \"profileTypeName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      participantPropertyReferences: {\n        serializedName: \"participantPropertyReferences\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ParticipantPropertyReference\"\n            }\n          }\n        }\n      },\n      participantName: {\n        serializedName: \"participantName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      role: {\n        serializedName: \"role\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ParticipantPropertyReference: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ParticipantPropertyReference\",\n    modelProperties: {\n      sourcePropertyName: {\n        serializedName: \"sourcePropertyName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      targetPropertyName: {\n        serializedName: \"targetPropertyName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const InteractionListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"InteractionListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"InteractionResourceFormat\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SuggestRelationshipLinksResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SuggestRelationshipLinksResponse\",\n    modelProperties: {\n      interactionName: {\n        serializedName: \"interactionName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      suggestedRelationships: {\n        serializedName: \"suggestedRelationships\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RelationshipsLookup\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const RelationshipsLookup: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RelationshipsLookup\",\n    modelProperties: {\n      profileName: {\n        serializedName: \"profileName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      profilePropertyReferences: {\n        serializedName: \"profilePropertyReferences\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ParticipantProfilePropertyReference\"\n            }\n          }\n        }\n      },\n      relatedProfileName: {\n        serializedName: \"relatedProfileName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      relatedProfilePropertyReferences: {\n        serializedName: \"relatedProfilePropertyReferences\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ParticipantProfilePropertyReference\"\n            }\n          }\n        }\n      },\n      existingRelationshipName: {\n        serializedName: \"existingRelationshipName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ParticipantProfilePropertyReference: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ParticipantProfilePropertyReference\",\n    modelProperties: {\n      interactionPropertyName: {\n        serializedName: \"interactionPropertyName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      profilePropertyName: {\n        serializedName: \"profilePropertyName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RelationshipTypeMapping: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RelationshipTypeMapping\",\n    modelProperties: {\n      fieldMappings: {\n        serializedName: \"fieldMappings\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RelationshipTypeFieldMapping\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const RelationshipTypeFieldMapping: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RelationshipTypeFieldMapping\",\n    modelProperties: {\n      profileFieldName: {\n        serializedName: \"profileFieldName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      relatedProfileKeyProperty: {\n        serializedName: \"relatedProfileKeyProperty\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RelationshipListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RelationshipListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RelationshipResourceFormat\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RelationshipLinkFieldMapping: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RelationshipLinkFieldMapping\",\n    modelProperties: {\n      interactionFieldName: {\n        serializedName: \"interactionFieldName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      linkType: {\n        serializedName: \"linkType\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"UpdateAlways\", \"CopyIfNull\"]\n        }\n      },\n      relationshipFieldName: {\n        serializedName: \"relationshipFieldName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RelationshipLinkListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RelationshipLinkListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RelationshipLinkResourceFormat\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AuthorizationPolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AuthorizationPolicy\",\n    modelProperties: {\n      policyName: {\n        serializedName: \"policyName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      permissions: {\n        constraints: {\n          UniqueItems: true\n        },\n        serializedName: \"permissions\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Enum\",\n              allowedValues: [\"Read\", \"Write\", \"Manage\"]\n            }\n          }\n        }\n      },\n      primaryKey: {\n        serializedName: \"primaryKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      secondaryKey: {\n        serializedName: \"secondaryKey\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AuthorizationPolicyListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AuthorizationPolicyListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"AuthorizationPolicyResourceFormat\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectorListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ConnectorListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ConnectorResourceFormat\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectorMappingProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ConnectorMappingProperties\",\n    modelProperties: {\n      folderPath: {\n        serializedName: \"folderPath\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileFilter: {\n        serializedName: \"fileFilter\",\n        type: {\n          name: \"String\"\n        }\n      },\n      hasHeader: {\n        serializedName: \"hasHeader\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      errorManagement: {\n        serializedName: \"errorManagement\",\n        type: {\n          name: \"Composite\",\n          className: \"ConnectorMappingErrorManagement\"\n        }\n      },\n      format: {\n        serializedName: \"format\",\n        type: {\n          name: \"Composite\",\n          className: \"ConnectorMappingFormat\"\n        }\n      },\n      availability: {\n        serializedName: \"availability\",\n        type: {\n          name: \"Composite\",\n          className: \"ConnectorMappingAvailability\"\n        }\n      },\n      structure: {\n        serializedName: \"structure\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ConnectorMappingStructure\"\n            }\n          }\n        }\n      },\n      completeOperation: {\n        serializedName: \"completeOperation\",\n        type: {\n          name: \"Composite\",\n          className: \"ConnectorMappingCompleteOperation\"\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectorMappingErrorManagement: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ConnectorMappingErrorManagement\",\n    modelProperties: {\n      errorManagementType: {\n        serializedName: \"errorManagementType\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"RejectAndContinue\", \"StopImport\", \"RejectUntilLimit\"]\n        }\n      },\n      errorLimit: {\n        serializedName: \"errorLimit\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectorMappingFormat: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ConnectorMappingFormat\",\n    modelProperties: {\n      formatType: {\n        defaultValue: \"TextFormat\",\n        isConstant: true,\n        serializedName: \"formatType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      columnDelimiter: {\n        serializedName: \"columnDelimiter\",\n        type: {\n          name: \"String\"\n        }\n      },\n      acceptLanguage: {\n        serializedName: \"acceptLanguage\",\n        type: {\n          name: \"String\"\n        }\n      },\n      quoteCharacter: {\n        serializedName: \"quoteCharacter\",\n        type: {\n          name: \"String\"\n        }\n      },\n      quoteEscapeCharacter: {\n        serializedName: \"quoteEscapeCharacter\",\n        type: {\n          name: \"String\"\n        }\n      },\n      arraySeparator: {\n        serializedName: \"arraySeparator\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectorMappingAvailability: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ConnectorMappingAvailability\",\n    modelProperties: {\n      frequency: {\n        serializedName: \"frequency\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Minute\", \"Hour\", \"Day\", \"Week\", \"Month\"]\n        }\n      },\n      interval: {\n        serializedName: \"interval\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectorMappingStructure: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ConnectorMappingStructure\",\n    modelProperties: {\n      propertyName: {\n        serializedName: \"propertyName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      columnName: {\n        serializedName: \"columnName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      customFormatSpecifier: {\n        serializedName: \"customFormatSpecifier\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isEncrypted: {\n        serializedName: \"isEncrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectorMappingCompleteOperation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ConnectorMappingCompleteOperation\",\n    modelProperties: {\n      completionOperationType: {\n        serializedName: \"completionOperationType\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"DoNothing\", \"DeleteFile\", \"MoveFile\"]\n        }\n      },\n      destinationFolder: {\n        serializedName: \"destinationFolder\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectorMappingListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ConnectorMappingListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ConnectorMappingResourceFormat\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const KpiListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KpiListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"KpiResourceFormat\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const WidgetTypeListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WidgetTypeListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"WidgetTypeResourceFormat\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ViewListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ViewListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ViewResourceFormat\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TypePropertiesMapping: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TypePropertiesMapping\",\n    modelProperties: {\n      sourcePropertyName: {\n        serializedName: \"sourcePropertyName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      targetPropertyName: {\n        serializedName: \"targetPropertyName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      linkType: {\n        serializedName: \"linkType\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"UpdateAlways\", \"CopyIfNull\"]\n        }\n      }\n    }\n  }\n};\n\nexport const LinkListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LinkListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"LinkResourceFormat\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoleListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RoleResourceFormat\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoleAssignmentListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleAssignmentListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RoleAssignmentResourceFormat\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AssignmentPrincipal: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AssignmentPrincipal\",\n    modelProperties: {\n      principalId: {\n        serializedName: \"principalId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      principalType: {\n        serializedName: \"principalType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      principalMetadata: {\n        serializedName: \"principalMetadata\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceSetDescription: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceSetDescription\",\n    modelProperties: {\n      elements: {\n        serializedName: \"elements\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      exceptions: {\n        serializedName: \"exceptions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const GetImageUploadUrlInput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GetImageUploadUrlInput\",\n    modelProperties: {\n      entityType: {\n        serializedName: \"entityType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      entityTypeName: {\n        serializedName: \"entityTypeName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      relativePath: {\n        serializedName: \"relativePath\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ImageDefinition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ImageDefinition\",\n    modelProperties: {\n      imageExists: {\n        serializedName: \"imageExists\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      contentUrl: {\n        serializedName: \"contentUrl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      relativePath: {\n        serializedName: \"relativePath\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PredictionMappings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PredictionMappings\",\n    modelProperties: {\n      score: {\n        serializedName: \"score\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      grade: {\n        serializedName: \"grade\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      reason: {\n        serializedName: \"reason\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PredictionGradesItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PredictionGradesItem\",\n    modelProperties: {\n      gradeName: {\n        serializedName: \"gradeName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      minScoreThreshold: {\n        serializedName: \"minScoreThreshold\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      maxScoreThreshold: {\n        serializedName: \"maxScoreThreshold\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const PredictionSystemGeneratedEntities: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PredictionSystemGeneratedEntities\",\n    modelProperties: {\n      generatedInteractionTypes: {\n        serializedName: \"generatedInteractionTypes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      generatedLinks: {\n        serializedName: \"generatedLinks\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      generatedKpis: {\n        serializedName: \"generatedKpis\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const PredictionTrainingResults: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PredictionTrainingResults\",\n    modelProperties: {\n      tenantId: {\n        serializedName: \"tenantId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      scoreName: {\n        serializedName: \"scoreName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      predictionDistribution: {\n        serializedName: \"predictionDistribution\",\n        type: {\n          name: \"Composite\",\n          className: \"PredictionDistributionDefinition\"\n        }\n      },\n      canonicalProfiles: {\n        serializedName: \"canonicalProfiles\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CanonicalProfileDefinition\"\n            }\n          }\n        }\n      },\n      primaryProfileInstanceCount: {\n        serializedName: \"primaryProfileInstanceCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const PredictionDistributionDefinition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PredictionDistributionDefinition\",\n    modelProperties: {\n      totalPositives: {\n        serializedName: \"totalPositives\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      totalNegatives: {\n        serializedName: \"totalNegatives\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      distributions: {\n        serializedName: \"distributions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PredictionDistributionDefinitionDistributionsItem\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const PredictionDistributionDefinitionDistributionsItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PredictionDistributionDefinitionDistributionsItem\",\n    modelProperties: {\n      scoreThreshold: {\n        serializedName: \"scoreThreshold\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      positives: {\n        serializedName: \"positives\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      negatives: {\n        serializedName: \"negatives\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      positivesAboveThreshold: {\n        serializedName: \"positivesAboveThreshold\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      negativesAboveThreshold: {\n        serializedName: \"negativesAboveThreshold\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const CanonicalProfileDefinition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CanonicalProfileDefinition\",\n    modelProperties: {\n      canonicalProfileId: {\n        serializedName: \"canonicalProfileId\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CanonicalProfileDefinitionPropertiesItem\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const CanonicalProfileDefinitionPropertiesItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CanonicalProfileDefinitionPropertiesItem\",\n    modelProperties: {\n      profileName: {\n        serializedName: \"profileName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      profilePropertyName: {\n        serializedName: \"profilePropertyName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      rank: {\n        serializedName: \"rank\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PredictionModelStatus: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PredictionModelStatus\",\n    modelProperties: {\n      tenantId: {\n        serializedName: \"tenantId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      predictionName: {\n        serializedName: \"predictionName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      predictionGuidId: {\n        serializedName: \"predictionGuidId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      trainingSetCount: {\n        serializedName: \"trainingSetCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      testSetCount: {\n        serializedName: \"testSetCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      validationSetCount: {\n        serializedName: \"validationSetCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      trainingAccuracy: {\n        serializedName: \"trainingAccuracy\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      signalsUsed: {\n        serializedName: \"signalsUsed\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      modelVersion: {\n        serializedName: \"modelVersion\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PredictionListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PredictionListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PredictionResourceFormat\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SalesforceDiscoverSetting: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SalesforceDiscoverSetting\",\n    modelProperties: {\n      salesforceConnectionStringSecretUrl: {\n        serializedName: \"salesforceConnectionStringSecretUrl\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SalesforceTable: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SalesforceTable\",\n    modelProperties: {\n      isProfile: {\n        serializedName: \"isProfile\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tableCategory: {\n        serializedName: \"tableCategory\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tableName: {\n        serializedName: \"tableName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tableRemarks: {\n        serializedName: \"tableRemarks\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tableSchema: {\n        serializedName: \"tableSchema\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SalesforceConnectorProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SalesforceConnectorProperties\",\n    modelProperties: {\n      usersetting: {\n        serializedName: \"usersetting\",\n        type: {\n          name: \"Composite\",\n          className: \"SalesforceDiscoverSetting\"\n        }\n      },\n      salesforcetables: {\n        serializedName: \"salesforcetables\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SalesforceTable\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const AzureBlobConnectorProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AzureBlobConnectorProperties\",\n    modelProperties: {\n      connectionKeyVaultUrl: {\n        serializedName: \"connectionKeyVaultUrl\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CrmConnectorProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CrmConnectorProperties\",\n    modelProperties: {\n      connectionString: {\n        serializedName: \"connectionString\",\n        type: {\n          name: \"String\"\n        }\n      },\n      organizationId: {\n        serializedName: \"organizationId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      organizationUrl: {\n        serializedName: \"organizationUrl\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      entities: {\n        serializedName: \"entities\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CrmConnectorEntities\"\n            }\n          }\n        }\n      },\n      accessToken: {\n        serializedName: \"accessToken\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CrmConnectorEntities: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CrmConnectorEntities\",\n    modelProperties: {\n      logicalName: {\n        serializedName: \"logicalName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isProfile: {\n        serializedName: \"isProfile\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const Hub: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Hub\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      apiEndpoint: {\n        serializedName: \"properties.apiEndpoint\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      webEndpoint: {\n        serializedName: \"properties.webEndpoint\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantFeatures: {\n        serializedName: \"properties.tenantFeatures\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      hubBillingInfo: {\n        serializedName: \"properties.hubBillingInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"HubBillingInfoFormat\"\n        }\n      }\n    }\n  }\n};\n\nexport const EntityTypeDefinition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EntityTypeDefinition\",\n    modelProperties: {\n      ...MetadataDefinitionBase.type.modelProperties,\n      apiEntitySetName: {\n        serializedName: \"apiEntitySetName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      entityType: {\n        serializedName: \"entityType\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"None\", \"Profile\", \"Interaction\", \"Relationship\"]\n        }\n      },\n      fields: {\n        serializedName: \"fields\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PropertyDefinition\"\n            }\n          }\n        }\n      },\n      instancesCount: {\n        serializedName: \"instancesCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      lastChangedUtc: {\n        serializedName: \"lastChangedUtc\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      schemaItemTypeLink: {\n        serializedName: \"schemaItemTypeLink\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantId: {\n        serializedName: \"tenantId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      timestampFieldName: {\n        serializedName: \"timestampFieldName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      typeName: {\n        serializedName: \"typeName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ProfileResourceFormat: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProfileResourceFormat\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      attributes: {\n        serializedName: \"properties.attributes\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Sequence\", element: { type: { name: \"String\" } } }\n          }\n        }\n      },\n      description: {\n        serializedName: \"properties.description\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      displayName: {\n        serializedName: \"properties.displayName\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      localizedAttributes: {\n        serializedName: \"properties.localizedAttributes\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Dictionary\", value: { type: { name: \"String\" } } }\n          }\n        }\n      },\n      smallImage: {\n        serializedName: \"properties.smallImage\",\n        type: {\n          name: \"String\"\n        }\n      },\n      mediumImage: {\n        serializedName: \"properties.mediumImage\",\n        type: {\n          name: \"String\"\n        }\n      },\n      largeImage: {\n        serializedName: \"properties.largeImage\",\n        type: {\n          name: \"String\"\n        }\n      },\n      apiEntitySetName: {\n        serializedName: \"properties.apiEntitySetName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      entityType: {\n        serializedName: \"properties.entityType\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"None\", \"Profile\", \"Interaction\", \"Relationship\"]\n        }\n      },\n      fields: {\n        serializedName: \"properties.fields\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PropertyDefinition\"\n            }\n          }\n        }\n      },\n      instancesCount: {\n        serializedName: \"properties.instancesCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      lastChangedUtc: {\n        serializedName: \"properties.lastChangedUtc\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      schemaItemTypeLink: {\n        serializedName: \"properties.schemaItemTypeLink\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantId: {\n        serializedName: \"properties.tenantId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      timestampFieldName: {\n        serializedName: \"properties.timestampFieldName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      typeName: {\n        serializedName: \"properties.typeName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      strongIds: {\n        serializedName: \"properties.strongIds\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"StrongId\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const InteractionResourceFormat: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"InteractionResourceFormat\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      attributes: {\n        serializedName: \"properties.attributes\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Sequence\", element: { type: { name: \"String\" } } }\n          }\n        }\n      },\n      description: {\n        serializedName: \"properties.description\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      displayName: {\n        serializedName: \"properties.displayName\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      localizedAttributes: {\n        serializedName: \"properties.localizedAttributes\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Dictionary\", value: { type: { name: \"String\" } } }\n          }\n        }\n      },\n      smallImage: {\n        serializedName: \"properties.smallImage\",\n        type: {\n          name: \"String\"\n        }\n      },\n      mediumImage: {\n        serializedName: \"properties.mediumImage\",\n        type: {\n          name: \"String\"\n        }\n      },\n      largeImage: {\n        serializedName: \"properties.largeImage\",\n        type: {\n          name: \"String\"\n        }\n      },\n      apiEntitySetName: {\n        serializedName: \"properties.apiEntitySetName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      entityType: {\n        serializedName: \"properties.entityType\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"None\", \"Profile\", \"Interaction\", \"Relationship\"]\n        }\n      },\n      fields: {\n        serializedName: \"properties.fields\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PropertyDefinition\"\n            }\n          }\n        }\n      },\n      instancesCount: {\n        serializedName: \"properties.instancesCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      lastChangedUtc: {\n        serializedName: \"properties.lastChangedUtc\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      schemaItemTypeLink: {\n        serializedName: \"properties.schemaItemTypeLink\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantId: {\n        serializedName: \"properties.tenantId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      timestampFieldName: {\n        serializedName: \"properties.timestampFieldName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      typeName: {\n        serializedName: \"properties.typeName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      idPropertyNames: {\n        serializedName: \"properties.idPropertyNames\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      participantProfiles: {\n        serializedName: \"properties.participantProfiles\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Participant\"\n            }\n          }\n        }\n      },\n      primaryParticipantProfilePropertyName: {\n        serializedName: \"properties.primaryParticipantProfilePropertyName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      dataSourcePrecedenceRules: {\n        serializedName: \"properties.dataSourcePrecedenceRules\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DataSourcePrecedence\"\n            }\n          }\n        }\n      },\n      isActivity: {\n        serializedName: \"properties.isActivity\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      namePropertiesDefaultDataSourceName: {\n        serializedName: \"properties.defaultDataSource.name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      dataSourceType: {\n        serializedName: \"properties.defaultDataSource.dataSourceType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"properties.defaultDataSource.status\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      idPropertiesDefaultDataSourceId: {\n        serializedName: \"properties.defaultDataSource.id\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      dataSourceReferenceId: {\n        serializedName: \"properties.defaultDataSource.dataSourceReferenceId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RelationshipResourceFormat: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RelationshipResourceFormat\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      cardinality: {\n        serializedName: \"properties.cardinality\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"OneToOne\", \"OneToMany\", \"ManyToMany\"]\n        }\n      },\n      displayName: {\n        serializedName: \"properties.displayName\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      description: {\n        serializedName: \"properties.description\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      expiryDateTimeUtc: {\n        serializedName: \"properties.expiryDateTimeUtc\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      fields: {\n        serializedName: \"properties.fields\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PropertyDefinition\"\n            }\n          }\n        }\n      },\n      lookupMappings: {\n        serializedName: \"properties.lookupMappings\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RelationshipTypeMapping\"\n            }\n          }\n        }\n      },\n      profileType: {\n        serializedName: \"properties.profileType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      relationshipName: {\n        serializedName: \"properties.relationshipName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      relatedProfileType: {\n        serializedName: \"properties.relatedProfileType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      relationshipGuidId: {\n        serializedName: \"properties.relationshipGuidId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantId: {\n        serializedName: \"properties.tenantId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RelationshipLinkResourceFormat: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RelationshipLinkResourceFormat\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      displayName: {\n        serializedName: \"properties.displayName\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      description: {\n        serializedName: \"properties.description\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      interactionType: {\n        serializedName: \"properties.interactionType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      linkName: {\n        serializedName: \"properties.linkName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      mappings: {\n        serializedName: \"properties.mappings\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RelationshipLinkFieldMapping\"\n            }\n          }\n        }\n      },\n      profilePropertyReferences: {\n        serializedName: \"properties.profilePropertyReferences\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ParticipantProfilePropertyReference\"\n            }\n          }\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      relatedProfilePropertyReferences: {\n        serializedName: \"properties.relatedProfilePropertyReferences\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ParticipantProfilePropertyReference\"\n            }\n          }\n        }\n      },\n      relationshipName: {\n        serializedName: \"properties.relationshipName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      relationshipGuidId: {\n        serializedName: \"properties.relationshipGuidId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantId: {\n        serializedName: \"properties.tenantId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AuthorizationPolicyResourceFormat: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AuthorizationPolicyResourceFormat\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      policyName: {\n        serializedName: \"properties.policyName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      permissions: {\n        constraints: {\n          UniqueItems: true\n        },\n        serializedName: \"properties.permissions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Enum\",\n              allowedValues: [\"Read\", \"Write\", \"Manage\"]\n            }\n          }\n        }\n      },\n      primaryKey: {\n        serializedName: \"properties.primaryKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      secondaryKey: {\n        serializedName: \"properties.secondaryKey\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectorResourceFormat: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ConnectorResourceFormat\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      connectorId: {\n        serializedName: \"properties.connectorId\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      connectorName: {\n        serializedName: \"properties.connectorName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      connectorType: {\n        serializedName: \"properties.connectorType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"properties.displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"properties.description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      connectorProperties: {\n        serializedName: \"properties.connectorProperties\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n          }\n        }\n      },\n      created: {\n        serializedName: \"properties.created\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastModified: {\n        serializedName: \"properties.lastModified\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      state: {\n        serializedName: \"properties.state\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Creating\",\n            \"Created\",\n            \"Ready\",\n            \"Expiring\",\n            \"Deleting\",\n            \"Failed\"\n          ]\n        }\n      },\n      tenantId: {\n        serializedName: \"properties.tenantId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      isInternal: {\n        serializedName: \"properties.isInternal\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectorMappingResourceFormat: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ConnectorMappingResourceFormat\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      connectorName: {\n        serializedName: \"properties.connectorName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      connectorType: {\n        serializedName: \"properties.connectorType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      created: {\n        serializedName: \"properties.created\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastModified: {\n        serializedName: \"properties.lastModified\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      entityType: {\n        serializedName: \"properties.entityType\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"None\", \"Profile\", \"Interaction\", \"Relationship\"]\n        }\n      },\n      entityTypeName: {\n        serializedName: \"properties.entityTypeName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      connectorMappingName: {\n        serializedName: \"properties.connectorMappingName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"properties.displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"properties.description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      dataFormatId: {\n        serializedName: \"properties.dataFormatId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      mappingProperties: {\n        serializedName: \"properties.mappingProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"ConnectorMappingProperties\"\n        }\n      },\n      nextRunTime: {\n        serializedName: \"properties.nextRunTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      runId: {\n        serializedName: \"properties.runId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      state: {\n        serializedName: \"properties.state\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Creating\",\n            \"Created\",\n            \"Failed\",\n            \"Ready\",\n            \"Running\",\n            \"Stopped\",\n            \"Expiring\"\n          ]\n        }\n      },\n      tenantId: {\n        serializedName: \"properties.tenantId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const KpiResourceFormat: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KpiResourceFormat\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      entityType: {\n        serializedName: \"properties.entityType\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"None\", \"Profile\", \"Interaction\", \"Relationship\"]\n        }\n      },\n      entityTypeName: {\n        serializedName: \"properties.entityTypeName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantId: {\n        serializedName: \"properties.tenantId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      kpiName: {\n        serializedName: \"properties.kpiName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"properties.displayName\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      description: {\n        serializedName: \"properties.description\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      calculationWindow: {\n        serializedName: \"properties.calculationWindow\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Lifetime\", \"Hour\", \"Day\", \"Week\", \"Month\"]\n        }\n      },\n      calculationWindowFieldName: {\n        serializedName: \"properties.calculationWindowFieldName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      function: {\n        serializedName: \"properties.function\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Sum\",\n            \"Avg\",\n            \"Min\",\n            \"Max\",\n            \"Last\",\n            \"Count\",\n            \"None\",\n            \"CountDistinct\"\n          ]\n        }\n      },\n      expression: {\n        serializedName: \"properties.expression\",\n        type: {\n          name: \"String\"\n        }\n      },\n      unit: {\n        serializedName: \"properties.unit\",\n        type: {\n          name: \"String\"\n        }\n      },\n      filter: {\n        serializedName: \"properties.filter\",\n        type: {\n          name: \"String\"\n        }\n      },\n      groupBy: {\n        serializedName: \"properties.groupBy\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      groupByMetadata: {\n        serializedName: \"properties.groupByMetadata\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"KpiGroupByMetadata\"\n            }\n          }\n        }\n      },\n      participantProfilesMetadata: {\n        serializedName: \"properties.participantProfilesMetadata\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"KpiParticipantProfilesMetadata\"\n            }\n          }\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      thresHolds: {\n        serializedName: \"properties.thresHolds\",\n        type: {\n          name: \"Composite\",\n          className: \"KpiThresholds\"\n        }\n      },\n      aliases: {\n        serializedName: \"properties.aliases\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"KpiAlias\"\n            }\n          }\n        }\n      },\n      extracts: {\n        serializedName: \"properties.extracts\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"KpiExtract\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const WidgetTypeResourceFormat: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WidgetTypeResourceFormat\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      widgetTypeName: {\n        serializedName: \"properties.widgetTypeName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      definition: {\n        serializedName: \"properties.definition\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"properties.description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"properties.displayName\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      imageUrl: {\n        serializedName: \"properties.imageUrl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantId: {\n        serializedName: \"properties.tenantId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      widgetVersion: {\n        serializedName: \"properties.widgetVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      changed: {\n        serializedName: \"properties.changed\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      created: {\n        serializedName: \"properties.created\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const ViewResourceFormat: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ViewResourceFormat\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      viewName: {\n        serializedName: \"properties.viewName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      userId: {\n        serializedName: \"properties.userId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantId: {\n        serializedName: \"properties.tenantId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"properties.displayName\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      definition: {\n        serializedName: \"properties.definition\",\n        type: {\n          name: \"String\"\n        }\n      },\n      changed: {\n        serializedName: \"properties.changed\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      created: {\n        serializedName: \"properties.created\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const LinkResourceFormat: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LinkResourceFormat\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      tenantId: {\n        serializedName: \"properties.tenantId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      linkName: {\n        serializedName: \"properties.linkName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      sourceEntityType: {\n        serializedName: \"properties.sourceEntityType\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"None\", \"Profile\", \"Interaction\", \"Relationship\"]\n        }\n      },\n      targetEntityType: {\n        serializedName: \"properties.targetEntityType\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"None\", \"Profile\", \"Interaction\", \"Relationship\"]\n        }\n      },\n      sourceEntityTypeName: {\n        serializedName: \"properties.sourceEntityTypeName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetEntityTypeName: {\n        serializedName: \"properties.targetEntityTypeName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"properties.displayName\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      description: {\n        serializedName: \"properties.description\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      mappings: {\n        serializedName: \"properties.mappings\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"TypePropertiesMapping\"\n            }\n          }\n        }\n      },\n      participantPropertyReferences: {\n        serializedName: \"properties.participantPropertyReferences\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ParticipantPropertyReference\"\n            }\n          }\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      referenceOnly: {\n        serializedName: \"properties.referenceOnly\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      operationType: {\n        serializedName: \"properties.operationType\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Upsert\", \"Delete\"]\n        }\n      }\n    }\n  }\n};\n\nexport const RoleResourceFormat: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleResourceFormat\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      roleName: {\n        serializedName: \"properties.roleName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"properties.description\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoleAssignmentResourceFormat: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleAssignmentResourceFormat\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      tenantId: {\n        serializedName: \"properties.tenantId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      assignmentName: {\n        serializedName: \"properties.assignmentName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"properties.displayName\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      description: {\n        serializedName: \"properties.description\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      role: {\n        serializedName: \"properties.role\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Admin\",\n            \"Reader\",\n            \"ManageAdmin\",\n            \"ManageReader\",\n            \"DataAdmin\",\n            \"DataReader\"\n          ]\n        }\n      },\n      principals: {\n        serializedName: \"properties.principals\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"AssignmentPrincipal\"\n            }\n          }\n        }\n      },\n      profiles: {\n        serializedName: \"properties.profiles\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceSetDescription\"\n        }\n      },\n      interactions: {\n        serializedName: \"properties.interactions\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceSetDescription\"\n        }\n      },\n      links: {\n        serializedName: \"properties.links\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceSetDescription\"\n        }\n      },\n      kpis: {\n        serializedName: \"properties.kpis\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceSetDescription\"\n        }\n      },\n      sasPolicies: {\n        serializedName: \"properties.sasPolicies\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceSetDescription\"\n        }\n      },\n      connectors: {\n        serializedName: \"properties.connectors\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceSetDescription\"\n        }\n      },\n      views: {\n        serializedName: \"properties.views\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceSetDescription\"\n        }\n      },\n      relationshipLinks: {\n        serializedName: \"properties.relationshipLinks\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceSetDescription\"\n        }\n      },\n      relationships: {\n        serializedName: \"properties.relationships\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceSetDescription\"\n        }\n      },\n      widgetTypes: {\n        serializedName: \"properties.widgetTypes\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceSetDescription\"\n        }\n      },\n      roleAssignments: {\n        serializedName: \"properties.roleAssignments\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceSetDescription\"\n        }\n      },\n      conflationPolicies: {\n        serializedName: \"properties.conflationPolicies\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceSetDescription\"\n        }\n      },\n      segments: {\n        serializedName: \"properties.segments\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceSetDescription\"\n        }\n      }\n    }\n  }\n};\n\nexport const PredictionResourceFormat: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PredictionResourceFormat\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      description: {\n        serializedName: \"properties.description\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      displayName: {\n        serializedName: \"properties.displayName\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      involvedInteractionTypes: {\n        serializedName: \"properties.involvedInteractionTypes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      involvedKpiTypes: {\n        serializedName: \"properties.involvedKpiTypes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      involvedRelationships: {\n        serializedName: \"properties.involvedRelationships\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      negativeOutcomeExpression: {\n        serializedName: \"properties.negativeOutcomeExpression\",\n        type: {\n          name: \"String\"\n        }\n      },\n      positiveOutcomeExpression: {\n        serializedName: \"properties.positiveOutcomeExpression\",\n        type: {\n          name: \"String\"\n        }\n      },\n      primaryProfileType: {\n        serializedName: \"properties.primaryProfileType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      predictionName: {\n        serializedName: \"properties.predictionName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      scopeExpression: {\n        serializedName: \"properties.scopeExpression\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantId: {\n        serializedName: \"properties.tenantId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      autoAnalyze: {\n        serializedName: \"properties.autoAnalyze\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      mappings: {\n        serializedName: \"properties.mappings\",\n        type: {\n          name: \"Composite\",\n          className: \"PredictionMappings\"\n        }\n      },\n      scoreLabel: {\n        serializedName: \"properties.scoreLabel\",\n        type: {\n          name: \"String\"\n        }\n      },\n      grades: {\n        serializedName: \"properties.grades\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PredictionGradesItem\"\n            }\n          }\n        }\n      },\n      systemGeneratedEntities: {\n        serializedName: \"properties.systemGeneratedEntities\",\n        type: {\n          name: \"Composite\",\n          className: \"PredictionSystemGeneratedEntities\"\n        }\n      }\n    }\n  }\n};\n\nexport const EnrichingKpi: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EnrichingKpi\",\n    modelProperties: {\n      ...KpiDefinition.type.modelProperties\n    }\n  }\n};\n\nexport const ProfileTypeDefinition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProfileTypeDefinition\",\n    modelProperties: {\n      ...EntityTypeDefinition.type.modelProperties,\n      strongIds: {\n        serializedName: \"strongIds\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"StrongId\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const InteractionTypeDefinition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"InteractionTypeDefinition\",\n    modelProperties: {\n      ...EntityTypeDefinition.type.modelProperties,\n      idPropertyNames: {\n        serializedName: \"idPropertyNames\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      participantProfiles: {\n        serializedName: \"participantProfiles\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Participant\"\n            }\n          }\n        }\n      },\n      primaryParticipantProfilePropertyName: {\n        serializedName: \"primaryParticipantProfilePropertyName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      dataSourcePrecedenceRules: {\n        serializedName: \"dataSourcePrecedenceRules\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DataSourcePrecedence\"\n            }\n          }\n        }\n      },\n      isActivity: {\n        serializedName: \"isActivity\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      name: {\n        serializedName: \"defaultDataSource.name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      dataSourceType: {\n        serializedName: \"defaultDataSource.dataSourceType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"defaultDataSource.status\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      id: {\n        serializedName: \"defaultDataSource.id\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      dataSourceReferenceId: {\n        serializedName: \"defaultDataSource.dataSourceReferenceId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter\n} from \"@azure/core-client\";\nimport {\n  Hub as HubMapper,\n  ProfileResourceFormat as ProfileResourceFormatMapper,\n  InteractionResourceFormat as InteractionResourceFormatMapper,\n  RelationshipResourceFormat as RelationshipResourceFormatMapper,\n  RelationshipLinkResourceFormat as RelationshipLinkResourceFormatMapper,\n  AuthorizationPolicyResourceFormat as AuthorizationPolicyResourceFormatMapper,\n  ConnectorResourceFormat as ConnectorResourceFormatMapper,\n  ConnectorMappingResourceFormat as ConnectorMappingResourceFormatMapper,\n  KpiResourceFormat as KpiResourceFormatMapper,\n  ViewResourceFormat as ViewResourceFormatMapper,\n  LinkResourceFormat as LinkResourceFormatMapper,\n  RoleAssignmentResourceFormat as RoleAssignmentResourceFormatMapper,\n  GetImageUploadUrlInput as GetImageUploadUrlInputMapper,\n  PredictionResourceFormat as PredictionResourceFormatMapper,\n  PredictionModelStatus as PredictionModelStatusMapper\n} from \"../models/mappers\";\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2017-04-26\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const nextLink: OperationURLParameter = {\n  parameterPath: \"nextLink\",\n  mapper: {\n    serializedName: \"nextLink\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: HubMapper\n};\n\nexport const resourceGroupName: OperationURLParameter = {\n  parameterPath: \"resourceGroupName\",\n  mapper: {\n    serializedName: \"resourceGroupName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const hubName: OperationURLParameter = {\n  parameterPath: \"hubName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[a-zA-Z][a-zA-Z0-9]+$\"),\n      MaxLength: 64,\n      MinLength: 1\n    },\n    serializedName: \"hubName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const subscriptionId: OperationURLParameter = {\n  parameterPath: \"subscriptionId\",\n  mapper: {\n    serializedName: \"subscriptionId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const hubName1: OperationURLParameter = {\n  parameterPath: \"hubName\",\n  mapper: {\n    serializedName: \"hubName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters1: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ProfileResourceFormatMapper\n};\n\nexport const profileName: OperationURLParameter = {\n  parameterPath: \"profileName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[a-zA-Z][a-zA-Z0-9_]+$\"),\n      MaxLength: 128,\n      MinLength: 1\n    },\n    serializedName: \"profileName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const profileName1: OperationURLParameter = {\n  parameterPath: \"profileName\",\n  mapper: {\n    serializedName: \"profileName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const localeCode: OperationQueryParameter = {\n  parameterPath: [\"options\", \"localeCode\"],\n  mapper: {\n    defaultValue: \"en-us\",\n    serializedName: \"locale-code\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters2: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: InteractionResourceFormatMapper\n};\n\nexport const interactionName: OperationURLParameter = {\n  parameterPath: \"interactionName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[a-zA-Z][a-zA-Z0-9_]+$\"),\n      MaxLength: 128,\n      MinLength: 1\n    },\n    serializedName: \"interactionName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const interactionName1: OperationURLParameter = {\n  parameterPath: \"interactionName\",\n  mapper: {\n    serializedName: \"interactionName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters3: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: RelationshipResourceFormatMapper\n};\n\nexport const relationshipName: OperationURLParameter = {\n  parameterPath: \"relationshipName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[a-zA-Z][a-zA-Z0-9_]+$\"),\n      MaxLength: 512,\n      MinLength: 1\n    },\n    serializedName: \"relationshipName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const relationshipName1: OperationURLParameter = {\n  parameterPath: \"relationshipName\",\n  mapper: {\n    serializedName: \"relationshipName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters4: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: RelationshipLinkResourceFormatMapper\n};\n\nexport const relationshipLinkName: OperationURLParameter = {\n  parameterPath: \"relationshipLinkName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[a-zA-Z][a-zA-Z0-9_]+$\"),\n      MaxLength: 512,\n      MinLength: 1\n    },\n    serializedName: \"relationshipLinkName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const relationshipLinkName1: OperationURLParameter = {\n  parameterPath: \"relationshipLinkName\",\n  mapper: {\n    serializedName: \"relationshipLinkName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters5: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: AuthorizationPolicyResourceFormatMapper\n};\n\nexport const authorizationPolicyName: OperationURLParameter = {\n  parameterPath: \"authorizationPolicyName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[A-Za-z0-9]$|^[A-Za-z0-9][\\\\w-\\\\.]*[A-Za-z0-9]$\"),\n      MaxLength: 50,\n      MinLength: 1\n    },\n    serializedName: \"authorizationPolicyName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const authorizationPolicyName1: OperationURLParameter = {\n  parameterPath: \"authorizationPolicyName\",\n  mapper: {\n    serializedName: \"authorizationPolicyName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters6: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ConnectorResourceFormatMapper\n};\n\nexport const connectorName: OperationURLParameter = {\n  parameterPath: \"connectorName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[a-zA-Z][a-zA-Z0-9_]+$\"),\n      MaxLength: 128,\n      MinLength: 1\n    },\n    serializedName: \"connectorName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const connectorName1: OperationURLParameter = {\n  parameterPath: \"connectorName\",\n  mapper: {\n    serializedName: \"connectorName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters7: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ConnectorMappingResourceFormatMapper\n};\n\nexport const mappingName: OperationURLParameter = {\n  parameterPath: \"mappingName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[a-zA-Z][a-zA-Z0-9_]+$\"),\n      MaxLength: 128,\n      MinLength: 1\n    },\n    serializedName: \"mappingName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const mappingName1: OperationURLParameter = {\n  parameterPath: \"mappingName\",\n  mapper: {\n    serializedName: \"mappingName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters8: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: KpiResourceFormatMapper\n};\n\nexport const kpiName: OperationURLParameter = {\n  parameterPath: \"kpiName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[a-zA-Z][a-zA-Z0-9_]+$\"),\n      MaxLength: 512,\n      MinLength: 1\n    },\n    serializedName: \"kpiName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const kpiName1: OperationURLParameter = {\n  parameterPath: \"kpiName\",\n  mapper: {\n    serializedName: \"kpiName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const widgetTypeName: OperationURLParameter = {\n  parameterPath: \"widgetTypeName\",\n  mapper: {\n    serializedName: \"widgetTypeName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const userId: OperationQueryParameter = {\n  parameterPath: \"userId\",\n  mapper: {\n    serializedName: \"userId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters9: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ViewResourceFormatMapper\n};\n\nexport const viewName: OperationURLParameter = {\n  parameterPath: \"viewName\",\n  mapper: {\n    constraints: {\n      MaxLength: 512,\n      MinLength: 1\n    },\n    serializedName: \"viewName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const viewName1: OperationURLParameter = {\n  parameterPath: \"viewName\",\n  mapper: {\n    serializedName: \"viewName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters10: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: LinkResourceFormatMapper\n};\n\nexport const linkName: OperationURLParameter = {\n  parameterPath: \"linkName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[a-zA-Z][a-zA-Z0-9_]+$\"),\n      MaxLength: 512,\n      MinLength: 1\n    },\n    serializedName: \"linkName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const linkName1: OperationURLParameter = {\n  parameterPath: \"linkName\",\n  mapper: {\n    serializedName: \"linkName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters11: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: RoleAssignmentResourceFormatMapper\n};\n\nexport const assignmentName: OperationURLParameter = {\n  parameterPath: \"assignmentName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[a-zA-Z][a-zA-Z0-9_]+$\"),\n      MaxLength: 128,\n      MinLength: 1\n    },\n    serializedName: \"assignmentName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const assignmentName1: OperationURLParameter = {\n  parameterPath: \"assignmentName\",\n  mapper: {\n    serializedName: \"assignmentName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters12: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: GetImageUploadUrlInputMapper\n};\n\nexport const parameters13: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: PredictionResourceFormatMapper\n};\n\nexport const predictionName: OperationURLParameter = {\n  parameterPath: \"predictionName\",\n  mapper: {\n    constraints: {\n      MaxLength: 512,\n      MinLength: 1\n    },\n    serializedName: \"predictionName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const predictionName1: OperationURLParameter = {\n  parameterPath: \"predictionName\",\n  mapper: {\n    serializedName: \"predictionName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters14: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: PredictionModelStatusMapper\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Operations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CustomerInsightsManagementClient } from \"../customerInsightsManagementClient\";\nimport {\n  Operation,\n  OperationsListNextOptionalParams,\n  OperationsListOptionalParams,\n  OperationsListResponse,\n  OperationsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Operations operations. */\nexport class OperationsImpl implements Operations {\n  private readonly client: CustomerInsightsManagementClient;\n\n  /**\n   * Initialize a new instance of the class Operations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CustomerInsightsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all of the available Customer Insights REST API operations.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: OperationsListOptionalParams\n  ): PagedAsyncIterableIterator<Operation> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: OperationsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Operation[]> {\n    let result: OperationsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: OperationsListOptionalParams\n  ): AsyncIterableIterator<Operation> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all of the available Customer Insights REST API operations.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: OperationsListOptionalParams\n  ): Promise<OperationsListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: OperationsListNextOptionalParams\n  ): Promise<OperationsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.CustomerInsights/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { LongRunningOperation, LroResponse } from \"@azure/core-lro\";\n\nexport class LroImpl<T> implements LongRunningOperation<T> {\n  constructor(\n    private sendOperationFn: (args: any, spec: any) => Promise<LroResponse<T>>,\n    private args: Record<string, unknown>,\n    private spec: {\n      readonly requestBody?: unknown;\n      readonly path?: string;\n      readonly httpMethod: string;\n    } & Record<string, any>,\n    public requestPath: string = spec.path!,\n    public requestMethod: string = spec.httpMethod\n  ) {}\n  public async sendInitialRequest(): Promise<LroResponse<T>> {\n    return this.sendOperationFn(this.args, this.spec);\n  }\n  public async sendPollRequest(path: string): Promise<LroResponse<T>> {\n    const { requestBody, ...restSpec } = this.spec;\n    return this.sendOperationFn(this.args, {\n      ...restSpec,\n      path,\n      httpMethod: \"GET\"\n    });\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Hubs } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CustomerInsightsManagementClient } from \"../customerInsightsManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  Hub,\n  HubsListByResourceGroupNextOptionalParams,\n  HubsListByResourceGroupOptionalParams,\n  HubsListByResourceGroupResponse,\n  HubsListNextOptionalParams,\n  HubsListOptionalParams,\n  HubsListResponse,\n  HubsCreateOrUpdateOptionalParams,\n  HubsCreateOrUpdateResponse,\n  HubsUpdateOptionalParams,\n  HubsUpdateResponse,\n  HubsDeleteOptionalParams,\n  HubsGetOptionalParams,\n  HubsGetResponse,\n  HubsListByResourceGroupNextResponse,\n  HubsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Hubs operations. */\nexport class HubsImpl implements Hubs {\n  private readonly client: CustomerInsightsManagementClient;\n\n  /**\n   * Initialize a new instance of the class Hubs class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CustomerInsightsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets all the hubs in a resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param options The options parameters.\n   */\n  public listByResourceGroup(\n    resourceGroupName: string,\n    options?: HubsListByResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<Hub> {\n    const iter = this.listByResourceGroupPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByResourceGroupPagingPage(\n          resourceGroupName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: HubsListByResourceGroupOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Hub[]> {\n    let result: HubsListByResourceGroupResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByResourceGroup(resourceGroupName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByResourceGroupNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: HubsListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<Hub> {\n    for await (const page of this.listByResourceGroupPagingPage(\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all hubs in the specified subscription.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: HubsListOptionalParams\n  ): PagedAsyncIterableIterator<Hub> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: HubsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Hub[]> {\n    let result: HubsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: HubsListOptionalParams\n  ): AsyncIterableIterator<Hub> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Creates a hub, or updates an existing hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the Hub.\n   * @param parameters Parameters supplied to the CreateOrUpdate Hub operation.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    hubName: string,\n    parameters: Hub,\n    options?: HubsCreateOrUpdateOptionalParams\n  ): Promise<HubsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Updates a Hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the Hub.\n   * @param parameters Parameters supplied to the Update Hub operation.\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    hubName: string,\n    parameters: Hub,\n    options?: HubsUpdateOptionalParams\n  ): Promise<HubsUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, parameters, options },\n      updateOperationSpec\n    );\n  }\n\n  /**\n   * Deletes the specified hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    hubName: string,\n    options?: HubsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, hubName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes the specified hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    hubName: string,\n    options?: HubsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(resourceGroupName, hubName, options);\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets information about the specified hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    hubName: string,\n    options?: HubsGetOptionalParams\n  ): Promise<HubsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Gets all the hubs in a resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroup(\n    resourceGroupName: string,\n    options?: HubsListByResourceGroupOptionalParams\n  ): Promise<HubsListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listByResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Gets all hubs in the specified subscription.\n   * @param options The options parameters.\n   */\n  private _list(options?: HubsListOptionalParams): Promise<HubsListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * ListByResourceGroupNext\n   * @param resourceGroupName The name of the resource group.\n   * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: HubsListByResourceGroupNextOptionalParams\n  ): Promise<HubsListByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listByResourceGroupNextOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: HubsListNextOptionalParams\n  ): Promise<HubsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Hub\n    },\n    201: {\n      bodyMapper: Mappers.Hub\n    }\n  },\n  requestBody: Parameters.parameters,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.hubName,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Hub\n    }\n  },\n  requestBody: Parameters.parameters,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {} },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1\n  ],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Hub\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.HubListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.CustomerInsights/hubs\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.HubListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.HubListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.HubListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Profiles } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CustomerInsightsManagementClient } from \"../customerInsightsManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  ProfileResourceFormat,\n  ProfilesListByHubNextOptionalParams,\n  ProfilesListByHubOptionalParams,\n  ProfilesListByHubResponse,\n  ProfilesCreateOrUpdateOptionalParams,\n  ProfilesCreateOrUpdateResponse,\n  ProfilesGetOptionalParams,\n  ProfilesGetResponse,\n  ProfilesDeleteOptionalParams,\n  ProfilesGetEnrichingKpisOptionalParams,\n  ProfilesGetEnrichingKpisResponse,\n  ProfilesListByHubNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Profiles operations. */\nexport class ProfilesImpl implements Profiles {\n  private readonly client: CustomerInsightsManagementClient;\n\n  /**\n   * Initialize a new instance of the class Profiles class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CustomerInsightsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets all profile in the hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param options The options parameters.\n   */\n  public listByHub(\n    resourceGroupName: string,\n    hubName: string,\n    options?: ProfilesListByHubOptionalParams\n  ): PagedAsyncIterableIterator<ProfileResourceFormat> {\n    const iter = this.listByHubPagingAll(resourceGroupName, hubName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByHubPagingPage(\n          resourceGroupName,\n          hubName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByHubPagingPage(\n    resourceGroupName: string,\n    hubName: string,\n    options?: ProfilesListByHubOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ProfileResourceFormat[]> {\n    let result: ProfilesListByHubResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByHub(resourceGroupName, hubName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByHubNext(\n        resourceGroupName,\n        hubName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByHubPagingAll(\n    resourceGroupName: string,\n    hubName: string,\n    options?: ProfilesListByHubOptionalParams\n  ): AsyncIterableIterator<ProfileResourceFormat> {\n    for await (const page of this.listByHubPagingPage(\n      resourceGroupName,\n      hubName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Creates a profile within a Hub, or updates an existing profile.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param profileName The name of the profile.\n   * @param parameters Parameters supplied to the create/delete Profile type operation\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    hubName: string,\n    profileName: string,\n    parameters: ProfileResourceFormat,\n    options?: ProfilesCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<ProfilesCreateOrUpdateResponse>,\n      ProfilesCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ProfilesCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, hubName, profileName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates a profile within a Hub, or updates an existing profile.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param profileName The name of the profile.\n   * @param parameters Parameters supplied to the create/delete Profile type operation\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    hubName: string,\n    profileName: string,\n    parameters: ProfileResourceFormat,\n    options?: ProfilesCreateOrUpdateOptionalParams\n  ): Promise<ProfilesCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      hubName,\n      profileName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets information about the specified profile.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param profileName The name of the profile.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    hubName: string,\n    profileName: string,\n    options?: ProfilesGetOptionalParams\n  ): Promise<ProfilesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, profileName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Deletes a profile within a hub\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param profileName The name of the profile.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    hubName: string,\n    profileName: string,\n    options?: ProfilesDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, hubName, profileName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes a profile within a hub\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param profileName The name of the profile.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    hubName: string,\n    profileName: string,\n    options?: ProfilesDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      hubName,\n      profileName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets all profile in the hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param options The options parameters.\n   */\n  private _listByHub(\n    resourceGroupName: string,\n    hubName: string,\n    options?: ProfilesListByHubOptionalParams\n  ): Promise<ProfilesListByHubResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, options },\n      listByHubOperationSpec\n    );\n  }\n\n  /**\n   * Gets the KPIs that enrich the profile Type identified by the supplied name. Enrichment happens\n   * through participants of the Interaction on an Interaction KPI and through Relationships for Profile\n   * KPIs.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param profileName The name of the profile.\n   * @param options The options parameters.\n   */\n  getEnrichingKpis(\n    resourceGroupName: string,\n    hubName: string,\n    profileName: string,\n    options?: ProfilesGetEnrichingKpisOptionalParams\n  ): Promise<ProfilesGetEnrichingKpisResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, profileName, options },\n      getEnrichingKpisOperationSpec\n    );\n  }\n\n  /**\n   * ListByHubNext\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param nextLink The nextLink from the previous successful call to the ListByHub method.\n   * @param options The options parameters.\n   */\n  private _listByHubNext(\n    resourceGroupName: string,\n    hubName: string,\n    nextLink: string,\n    options?: ProfilesListByHubNextOptionalParams\n  ): Promise<ProfilesListByHubNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, nextLink, options },\n      listByHubNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/profiles/{profileName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProfileResourceFormat\n    },\n    201: {\n      bodyMapper: Mappers.ProfileResourceFormat\n    },\n    202: {\n      bodyMapper: Mappers.ProfileResourceFormat\n    },\n    204: {\n      bodyMapper: Mappers.ProfileResourceFormat\n    }\n  },\n  requestBody: Parameters.parameters1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1,\n    Parameters.profileName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/profiles/{profileName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProfileResourceFormat\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.localeCode],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1,\n    Parameters.profileName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/profiles/{profileName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {} },\n  queryParameters: [Parameters.apiVersion, Parameters.localeCode],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1,\n    Parameters.profileName1\n  ],\n  serializer\n};\nconst listByHubOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/profiles\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProfileListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.localeCode],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getEnrichingKpisOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/profiles/{profileName}/getEnrichingKpis\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"KpiDefinition\" } }\n        }\n      }\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1,\n    Parameters.profileName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByHubNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProfileListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.localeCode],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Interactions } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CustomerInsightsManagementClient } from \"../customerInsightsManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  InteractionResourceFormat,\n  InteractionsListByHubNextOptionalParams,\n  InteractionsListByHubOptionalParams,\n  InteractionsListByHubResponse,\n  InteractionsCreateOrUpdateOptionalParams,\n  InteractionsCreateOrUpdateResponse,\n  InteractionsGetOptionalParams,\n  InteractionsGetResponse,\n  InteractionsSuggestRelationshipLinksOptionalParams,\n  InteractionsSuggestRelationshipLinksResponse,\n  InteractionsListByHubNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Interactions operations. */\nexport class InteractionsImpl implements Interactions {\n  private readonly client: CustomerInsightsManagementClient;\n\n  /**\n   * Initialize a new instance of the class Interactions class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CustomerInsightsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets all interactions in the hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param options The options parameters.\n   */\n  public listByHub(\n    resourceGroupName: string,\n    hubName: string,\n    options?: InteractionsListByHubOptionalParams\n  ): PagedAsyncIterableIterator<InteractionResourceFormat> {\n    const iter = this.listByHubPagingAll(resourceGroupName, hubName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByHubPagingPage(\n          resourceGroupName,\n          hubName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByHubPagingPage(\n    resourceGroupName: string,\n    hubName: string,\n    options?: InteractionsListByHubOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<InteractionResourceFormat[]> {\n    let result: InteractionsListByHubResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByHub(resourceGroupName, hubName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByHubNext(\n        resourceGroupName,\n        hubName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByHubPagingAll(\n    resourceGroupName: string,\n    hubName: string,\n    options?: InteractionsListByHubOptionalParams\n  ): AsyncIterableIterator<InteractionResourceFormat> {\n    for await (const page of this.listByHubPagingPage(\n      resourceGroupName,\n      hubName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Creates an interaction or updates an existing interaction within a hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param interactionName The name of the interaction.\n   * @param parameters Parameters supplied to the CreateOrUpdate Interaction operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    hubName: string,\n    interactionName: string,\n    parameters: InteractionResourceFormat,\n    options?: InteractionsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<InteractionsCreateOrUpdateResponse>,\n      InteractionsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<InteractionsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, hubName, interactionName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates an interaction or updates an existing interaction within a hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param interactionName The name of the interaction.\n   * @param parameters Parameters supplied to the CreateOrUpdate Interaction operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    hubName: string,\n    interactionName: string,\n    parameters: InteractionResourceFormat,\n    options?: InteractionsCreateOrUpdateOptionalParams\n  ): Promise<InteractionsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      hubName,\n      interactionName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets information about the specified interaction.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param interactionName The name of the interaction.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    hubName: string,\n    interactionName: string,\n    options?: InteractionsGetOptionalParams\n  ): Promise<InteractionsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, interactionName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Gets all interactions in the hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param options The options parameters.\n   */\n  private _listByHub(\n    resourceGroupName: string,\n    hubName: string,\n    options?: InteractionsListByHubOptionalParams\n  ): Promise<InteractionsListByHubResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, options },\n      listByHubOperationSpec\n    );\n  }\n\n  /**\n   * Suggests relationships to create relationship links.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param interactionName The name of the interaction.\n   * @param options The options parameters.\n   */\n  suggestRelationshipLinks(\n    resourceGroupName: string,\n    hubName: string,\n    interactionName: string,\n    options?: InteractionsSuggestRelationshipLinksOptionalParams\n  ): Promise<InteractionsSuggestRelationshipLinksResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, interactionName, options },\n      suggestRelationshipLinksOperationSpec\n    );\n  }\n\n  /**\n   * ListByHubNext\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param nextLink The nextLink from the previous successful call to the ListByHub method.\n   * @param options The options parameters.\n   */\n  private _listByHubNext(\n    resourceGroupName: string,\n    hubName: string,\n    nextLink: string,\n    options?: InteractionsListByHubNextOptionalParams\n  ): Promise<InteractionsListByHubNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, nextLink, options },\n      listByHubNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/interactions/{interactionName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.InteractionResourceFormat\n    },\n    201: {\n      bodyMapper: Mappers.InteractionResourceFormat\n    },\n    202: {\n      bodyMapper: Mappers.InteractionResourceFormat\n    },\n    204: {\n      bodyMapper: Mappers.InteractionResourceFormat\n    }\n  },\n  requestBody: Parameters.parameters2,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1,\n    Parameters.interactionName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/interactions/{interactionName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.InteractionResourceFormat\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.localeCode],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1,\n    Parameters.interactionName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByHubOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/interactions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.InteractionListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.localeCode],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst suggestRelationshipLinksOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/interactions/{interactionName}/suggestRelationshipLinks\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SuggestRelationshipLinksResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1,\n    Parameters.interactionName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByHubNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.InteractionListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.localeCode],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Relationships } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CustomerInsightsManagementClient } from \"../customerInsightsManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  RelationshipResourceFormat,\n  RelationshipsListByHubNextOptionalParams,\n  RelationshipsListByHubOptionalParams,\n  RelationshipsListByHubResponse,\n  RelationshipsCreateOrUpdateOptionalParams,\n  RelationshipsCreateOrUpdateResponse,\n  RelationshipsGetOptionalParams,\n  RelationshipsGetResponse,\n  RelationshipsDeleteOptionalParams,\n  RelationshipsListByHubNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Relationships operations. */\nexport class RelationshipsImpl implements Relationships {\n  private readonly client: CustomerInsightsManagementClient;\n\n  /**\n   * Initialize a new instance of the class Relationships class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CustomerInsightsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets all relationships in the hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param options The options parameters.\n   */\n  public listByHub(\n    resourceGroupName: string,\n    hubName: string,\n    options?: RelationshipsListByHubOptionalParams\n  ): PagedAsyncIterableIterator<RelationshipResourceFormat> {\n    const iter = this.listByHubPagingAll(resourceGroupName, hubName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByHubPagingPage(\n          resourceGroupName,\n          hubName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByHubPagingPage(\n    resourceGroupName: string,\n    hubName: string,\n    options?: RelationshipsListByHubOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<RelationshipResourceFormat[]> {\n    let result: RelationshipsListByHubResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByHub(resourceGroupName, hubName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByHubNext(\n        resourceGroupName,\n        hubName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByHubPagingAll(\n    resourceGroupName: string,\n    hubName: string,\n    options?: RelationshipsListByHubOptionalParams\n  ): AsyncIterableIterator<RelationshipResourceFormat> {\n    for await (const page of this.listByHubPagingPage(\n      resourceGroupName,\n      hubName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Creates a relationship or updates an existing relationship within a hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param relationshipName The name of the Relationship.\n   * @param parameters Parameters supplied to the CreateOrUpdate Relationship operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    hubName: string,\n    relationshipName: string,\n    parameters: RelationshipResourceFormat,\n    options?: RelationshipsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<RelationshipsCreateOrUpdateResponse>,\n      RelationshipsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<RelationshipsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, hubName, relationshipName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates a relationship or updates an existing relationship within a hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param relationshipName The name of the Relationship.\n   * @param parameters Parameters supplied to the CreateOrUpdate Relationship operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    hubName: string,\n    relationshipName: string,\n    parameters: RelationshipResourceFormat,\n    options?: RelationshipsCreateOrUpdateOptionalParams\n  ): Promise<RelationshipsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      hubName,\n      relationshipName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets information about the specified relationship.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param relationshipName The name of the relationship.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    hubName: string,\n    relationshipName: string,\n    options?: RelationshipsGetOptionalParams\n  ): Promise<RelationshipsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, relationshipName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Deletes a relationship within a hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param relationshipName The name of the relationship.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    hubName: string,\n    relationshipName: string,\n    options?: RelationshipsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, hubName, relationshipName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes a relationship within a hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param relationshipName The name of the relationship.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    hubName: string,\n    relationshipName: string,\n    options?: RelationshipsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      hubName,\n      relationshipName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets all relationships in the hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param options The options parameters.\n   */\n  private _listByHub(\n    resourceGroupName: string,\n    hubName: string,\n    options?: RelationshipsListByHubOptionalParams\n  ): Promise<RelationshipsListByHubResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, options },\n      listByHubOperationSpec\n    );\n  }\n\n  /**\n   * ListByHubNext\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param nextLink The nextLink from the previous successful call to the ListByHub method.\n   * @param options The options parameters.\n   */\n  private _listByHubNext(\n    resourceGroupName: string,\n    hubName: string,\n    nextLink: string,\n    options?: RelationshipsListByHubNextOptionalParams\n  ): Promise<RelationshipsListByHubNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, nextLink, options },\n      listByHubNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/relationships/{relationshipName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RelationshipResourceFormat\n    },\n    201: {\n      bodyMapper: Mappers.RelationshipResourceFormat\n    },\n    202: {\n      bodyMapper: Mappers.RelationshipResourceFormat\n    },\n    204: {\n      bodyMapper: Mappers.RelationshipResourceFormat\n    }\n  },\n  requestBody: Parameters.parameters3,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1,\n    Parameters.relationshipName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/relationships/{relationshipName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RelationshipResourceFormat\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1,\n    Parameters.relationshipName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/relationships/{relationshipName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {} },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1,\n    Parameters.relationshipName1\n  ],\n  serializer\n};\nconst listByHubOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/relationships\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RelationshipListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByHubNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RelationshipListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { RelationshipLinks } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CustomerInsightsManagementClient } from \"../customerInsightsManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  RelationshipLinkResourceFormat,\n  RelationshipLinksListByHubNextOptionalParams,\n  RelationshipLinksListByHubOptionalParams,\n  RelationshipLinksListByHubResponse,\n  RelationshipLinksCreateOrUpdateOptionalParams,\n  RelationshipLinksCreateOrUpdateResponse,\n  RelationshipLinksGetOptionalParams,\n  RelationshipLinksGetResponse,\n  RelationshipLinksDeleteOptionalParams,\n  RelationshipLinksListByHubNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing RelationshipLinks operations. */\nexport class RelationshipLinksImpl implements RelationshipLinks {\n  private readonly client: CustomerInsightsManagementClient;\n\n  /**\n   * Initialize a new instance of the class RelationshipLinks class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CustomerInsightsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets all relationship links in the hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param options The options parameters.\n   */\n  public listByHub(\n    resourceGroupName: string,\n    hubName: string,\n    options?: RelationshipLinksListByHubOptionalParams\n  ): PagedAsyncIterableIterator<RelationshipLinkResourceFormat> {\n    const iter = this.listByHubPagingAll(resourceGroupName, hubName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByHubPagingPage(\n          resourceGroupName,\n          hubName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByHubPagingPage(\n    resourceGroupName: string,\n    hubName: string,\n    options?: RelationshipLinksListByHubOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<RelationshipLinkResourceFormat[]> {\n    let result: RelationshipLinksListByHubResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByHub(resourceGroupName, hubName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByHubNext(\n        resourceGroupName,\n        hubName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByHubPagingAll(\n    resourceGroupName: string,\n    hubName: string,\n    options?: RelationshipLinksListByHubOptionalParams\n  ): AsyncIterableIterator<RelationshipLinkResourceFormat> {\n    for await (const page of this.listByHubPagingPage(\n      resourceGroupName,\n      hubName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Creates a relationship link or updates an existing relationship link within a hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param relationshipLinkName The name of the relationship link.\n   * @param parameters Parameters supplied to the CreateOrUpdate relationship link operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    hubName: string,\n    relationshipLinkName: string,\n    parameters: RelationshipLinkResourceFormat,\n    options?: RelationshipLinksCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<RelationshipLinksCreateOrUpdateResponse>,\n      RelationshipLinksCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<RelationshipLinksCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, hubName, relationshipLinkName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates a relationship link or updates an existing relationship link within a hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param relationshipLinkName The name of the relationship link.\n   * @param parameters Parameters supplied to the CreateOrUpdate relationship link operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    hubName: string,\n    relationshipLinkName: string,\n    parameters: RelationshipLinkResourceFormat,\n    options?: RelationshipLinksCreateOrUpdateOptionalParams\n  ): Promise<RelationshipLinksCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      hubName,\n      relationshipLinkName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets information about the specified relationship Link.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param relationshipLinkName The name of the relationship link.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    hubName: string,\n    relationshipLinkName: string,\n    options?: RelationshipLinksGetOptionalParams\n  ): Promise<RelationshipLinksGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, relationshipLinkName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Deletes a relationship link within a hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param relationshipLinkName The name of the relationship.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    hubName: string,\n    relationshipLinkName: string,\n    options?: RelationshipLinksDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, hubName, relationshipLinkName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes a relationship link within a hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param relationshipLinkName The name of the relationship.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    hubName: string,\n    relationshipLinkName: string,\n    options?: RelationshipLinksDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      hubName,\n      relationshipLinkName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets all relationship links in the hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param options The options parameters.\n   */\n  private _listByHub(\n    resourceGroupName: string,\n    hubName: string,\n    options?: RelationshipLinksListByHubOptionalParams\n  ): Promise<RelationshipLinksListByHubResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, options },\n      listByHubOperationSpec\n    );\n  }\n\n  /**\n   * ListByHubNext\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param nextLink The nextLink from the previous successful call to the ListByHub method.\n   * @param options The options parameters.\n   */\n  private _listByHubNext(\n    resourceGroupName: string,\n    hubName: string,\n    nextLink: string,\n    options?: RelationshipLinksListByHubNextOptionalParams\n  ): Promise<RelationshipLinksListByHubNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, nextLink, options },\n      listByHubNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/relationshipLinks/{relationshipLinkName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RelationshipLinkResourceFormat\n    },\n    201: {\n      bodyMapper: Mappers.RelationshipLinkResourceFormat\n    },\n    202: {\n      bodyMapper: Mappers.RelationshipLinkResourceFormat\n    },\n    204: {\n      bodyMapper: Mappers.RelationshipLinkResourceFormat\n    }\n  },\n  requestBody: Parameters.parameters4,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1,\n    Parameters.relationshipLinkName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/relationshipLinks/{relationshipLinkName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RelationshipLinkResourceFormat\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1,\n    Parameters.relationshipLinkName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/relationshipLinks/{relationshipLinkName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {} },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1,\n    Parameters.relationshipLinkName1\n  ],\n  serializer\n};\nconst listByHubOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/relationshipLinks\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RelationshipLinkListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByHubNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RelationshipLinkListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { AuthorizationPolicies } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CustomerInsightsManagementClient } from \"../customerInsightsManagementClient\";\nimport {\n  AuthorizationPolicyResourceFormat,\n  AuthorizationPoliciesListByHubNextOptionalParams,\n  AuthorizationPoliciesListByHubOptionalParams,\n  AuthorizationPoliciesListByHubResponse,\n  AuthorizationPoliciesCreateOrUpdateOptionalParams,\n  AuthorizationPoliciesCreateOrUpdateResponse,\n  AuthorizationPoliciesGetOptionalParams,\n  AuthorizationPoliciesGetResponse,\n  AuthorizationPoliciesRegeneratePrimaryKeyOptionalParams,\n  AuthorizationPoliciesRegeneratePrimaryKeyResponse,\n  AuthorizationPoliciesRegenerateSecondaryKeyOptionalParams,\n  AuthorizationPoliciesRegenerateSecondaryKeyResponse,\n  AuthorizationPoliciesListByHubNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing AuthorizationPolicies operations. */\nexport class AuthorizationPoliciesImpl implements AuthorizationPolicies {\n  private readonly client: CustomerInsightsManagementClient;\n\n  /**\n   * Initialize a new instance of the class AuthorizationPolicies class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CustomerInsightsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets all the authorization policies in a specified hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param options The options parameters.\n   */\n  public listByHub(\n    resourceGroupName: string,\n    hubName: string,\n    options?: AuthorizationPoliciesListByHubOptionalParams\n  ): PagedAsyncIterableIterator<AuthorizationPolicyResourceFormat> {\n    const iter = this.listByHubPagingAll(resourceGroupName, hubName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByHubPagingPage(\n          resourceGroupName,\n          hubName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByHubPagingPage(\n    resourceGroupName: string,\n    hubName: string,\n    options?: AuthorizationPoliciesListByHubOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<AuthorizationPolicyResourceFormat[]> {\n    let result: AuthorizationPoliciesListByHubResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByHub(resourceGroupName, hubName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByHubNext(\n        resourceGroupName,\n        hubName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByHubPagingAll(\n    resourceGroupName: string,\n    hubName: string,\n    options?: AuthorizationPoliciesListByHubOptionalParams\n  ): AsyncIterableIterator<AuthorizationPolicyResourceFormat> {\n    for await (const page of this.listByHubPagingPage(\n      resourceGroupName,\n      hubName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Creates an authorization policy or updates an existing authorization policy.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param authorizationPolicyName The name of the policy.\n   * @param parameters Parameters supplied to the CreateOrUpdate authorization policy operation.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    hubName: string,\n    authorizationPolicyName: string,\n    parameters: AuthorizationPolicyResourceFormat,\n    options?: AuthorizationPoliciesCreateOrUpdateOptionalParams\n  ): Promise<AuthorizationPoliciesCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        hubName,\n        authorizationPolicyName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Gets an authorization policy in the hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param authorizationPolicyName The name of the policy.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    hubName: string,\n    authorizationPolicyName: string,\n    options?: AuthorizationPoliciesGetOptionalParams\n  ): Promise<AuthorizationPoliciesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, authorizationPolicyName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Gets all the authorization policies in a specified hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param options The options parameters.\n   */\n  private _listByHub(\n    resourceGroupName: string,\n    hubName: string,\n    options?: AuthorizationPoliciesListByHubOptionalParams\n  ): Promise<AuthorizationPoliciesListByHubResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, options },\n      listByHubOperationSpec\n    );\n  }\n\n  /**\n   * Regenerates the primary policy key of the specified authorization policy.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param authorizationPolicyName The name of the policy.\n   * @param options The options parameters.\n   */\n  regeneratePrimaryKey(\n    resourceGroupName: string,\n    hubName: string,\n    authorizationPolicyName: string,\n    options?: AuthorizationPoliciesRegeneratePrimaryKeyOptionalParams\n  ): Promise<AuthorizationPoliciesRegeneratePrimaryKeyResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, authorizationPolicyName, options },\n      regeneratePrimaryKeyOperationSpec\n    );\n  }\n\n  /**\n   * Regenerates the secondary policy key of the specified authorization policy.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param authorizationPolicyName The name of the policy.\n   * @param options The options parameters.\n   */\n  regenerateSecondaryKey(\n    resourceGroupName: string,\n    hubName: string,\n    authorizationPolicyName: string,\n    options?: AuthorizationPoliciesRegenerateSecondaryKeyOptionalParams\n  ): Promise<AuthorizationPoliciesRegenerateSecondaryKeyResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, authorizationPolicyName, options },\n      regenerateSecondaryKeyOperationSpec\n    );\n  }\n\n  /**\n   * ListByHubNext\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param nextLink The nextLink from the previous successful call to the ListByHub method.\n   * @param options The options parameters.\n   */\n  private _listByHubNext(\n    resourceGroupName: string,\n    hubName: string,\n    nextLink: string,\n    options?: AuthorizationPoliciesListByHubNextOptionalParams\n  ): Promise<AuthorizationPoliciesListByHubNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, nextLink, options },\n      listByHubNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/authorizationPolicies/{authorizationPolicyName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AuthorizationPolicyResourceFormat\n    },\n    201: {\n      bodyMapper: Mappers.AuthorizationPolicyResourceFormat\n    }\n  },\n  requestBody: Parameters.parameters5,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1,\n    Parameters.authorizationPolicyName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/authorizationPolicies/{authorizationPolicyName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AuthorizationPolicyResourceFormat\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1,\n    Parameters.authorizationPolicyName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByHubOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/authorizationPolicies\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AuthorizationPolicyListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst regeneratePrimaryKeyOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/authorizationPolicies/{authorizationPolicyName}/regeneratePrimaryKey\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AuthorizationPolicy\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1,\n    Parameters.authorizationPolicyName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst regenerateSecondaryKeyOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/authorizationPolicies/{authorizationPolicyName}/regenerateSecondaryKey\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AuthorizationPolicy\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1,\n    Parameters.authorizationPolicyName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByHubNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AuthorizationPolicyListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Connectors } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CustomerInsightsManagementClient } from \"../customerInsightsManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  ConnectorResourceFormat,\n  ConnectorsListByHubNextOptionalParams,\n  ConnectorsListByHubOptionalParams,\n  ConnectorsListByHubResponse,\n  ConnectorsCreateOrUpdateOptionalParams,\n  ConnectorsCreateOrUpdateResponse,\n  ConnectorsGetOptionalParams,\n  ConnectorsGetResponse,\n  ConnectorsDeleteOptionalParams,\n  ConnectorsListByHubNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Connectors operations. */\nexport class ConnectorsImpl implements Connectors {\n  private readonly client: CustomerInsightsManagementClient;\n\n  /**\n   * Initialize a new instance of the class Connectors class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CustomerInsightsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets all the connectors in the specified hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param options The options parameters.\n   */\n  public listByHub(\n    resourceGroupName: string,\n    hubName: string,\n    options?: ConnectorsListByHubOptionalParams\n  ): PagedAsyncIterableIterator<ConnectorResourceFormat> {\n    const iter = this.listByHubPagingAll(resourceGroupName, hubName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByHubPagingPage(\n          resourceGroupName,\n          hubName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByHubPagingPage(\n    resourceGroupName: string,\n    hubName: string,\n    options?: ConnectorsListByHubOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ConnectorResourceFormat[]> {\n    let result: ConnectorsListByHubResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByHub(resourceGroupName, hubName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByHubNext(\n        resourceGroupName,\n        hubName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByHubPagingAll(\n    resourceGroupName: string,\n    hubName: string,\n    options?: ConnectorsListByHubOptionalParams\n  ): AsyncIterableIterator<ConnectorResourceFormat> {\n    for await (const page of this.listByHubPagingPage(\n      resourceGroupName,\n      hubName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Creates a connector or updates an existing connector in the hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param connectorName The name of the connector.\n   * @param parameters Parameters supplied to the CreateOrUpdate Connector operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    hubName: string,\n    connectorName: string,\n    parameters: ConnectorResourceFormat,\n    options?: ConnectorsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<ConnectorsCreateOrUpdateResponse>,\n      ConnectorsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ConnectorsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, hubName, connectorName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates a connector or updates an existing connector in the hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param connectorName The name of the connector.\n   * @param parameters Parameters supplied to the CreateOrUpdate Connector operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    hubName: string,\n    connectorName: string,\n    parameters: ConnectorResourceFormat,\n    options?: ConnectorsCreateOrUpdateOptionalParams\n  ): Promise<ConnectorsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      hubName,\n      connectorName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a connector in the hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param connectorName The name of the connector.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    hubName: string,\n    connectorName: string,\n    options?: ConnectorsGetOptionalParams\n  ): Promise<ConnectorsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, connectorName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Deletes a connector in the hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param connectorName The name of the connector.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    hubName: string,\n    connectorName: string,\n    options?: ConnectorsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, hubName, connectorName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes a connector in the hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param connectorName The name of the connector.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    hubName: string,\n    connectorName: string,\n    options?: ConnectorsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      hubName,\n      connectorName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets all the connectors in the specified hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param options The options parameters.\n   */\n  private _listByHub(\n    resourceGroupName: string,\n    hubName: string,\n    options?: ConnectorsListByHubOptionalParams\n  ): Promise<ConnectorsListByHubResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, options },\n      listByHubOperationSpec\n    );\n  }\n\n  /**\n   * ListByHubNext\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param nextLink The nextLink from the previous successful call to the ListByHub method.\n   * @param options The options parameters.\n   */\n  private _listByHubNext(\n    resourceGroupName: string,\n    hubName: string,\n    nextLink: string,\n    options?: ConnectorsListByHubNextOptionalParams\n  ): Promise<ConnectorsListByHubNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, nextLink, options },\n      listByHubNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/connectors/{connectorName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConnectorResourceFormat\n    },\n    201: {\n      bodyMapper: Mappers.ConnectorResourceFormat\n    },\n    202: {\n      bodyMapper: Mappers.ConnectorResourceFormat\n    },\n    204: {\n      bodyMapper: Mappers.ConnectorResourceFormat\n    }\n  },\n  requestBody: Parameters.parameters6,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1,\n    Parameters.connectorName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/connectors/{connectorName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConnectorResourceFormat\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1,\n    Parameters.connectorName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/connectors/{connectorName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {} },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1,\n    Parameters.connectorName1\n  ],\n  serializer\n};\nconst listByHubOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/connectors\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConnectorListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByHubNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConnectorListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ConnectorMappings } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CustomerInsightsManagementClient } from \"../customerInsightsManagementClient\";\nimport {\n  ConnectorMappingResourceFormat,\n  ConnectorMappingsListByConnectorNextOptionalParams,\n  ConnectorMappingsListByConnectorOptionalParams,\n  ConnectorMappingsListByConnectorResponse,\n  ConnectorMappingsCreateOrUpdateOptionalParams,\n  ConnectorMappingsCreateOrUpdateResponse,\n  ConnectorMappingsGetOptionalParams,\n  ConnectorMappingsGetResponse,\n  ConnectorMappingsDeleteOptionalParams,\n  ConnectorMappingsListByConnectorNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ConnectorMappings operations. */\nexport class ConnectorMappingsImpl implements ConnectorMappings {\n  private readonly client: CustomerInsightsManagementClient;\n\n  /**\n   * Initialize a new instance of the class ConnectorMappings class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CustomerInsightsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets all the connector mappings in the specified connector.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param connectorName The name of the connector.\n   * @param options The options parameters.\n   */\n  public listByConnector(\n    resourceGroupName: string,\n    hubName: string,\n    connectorName: string,\n    options?: ConnectorMappingsListByConnectorOptionalParams\n  ): PagedAsyncIterableIterator<ConnectorMappingResourceFormat> {\n    const iter = this.listByConnectorPagingAll(\n      resourceGroupName,\n      hubName,\n      connectorName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByConnectorPagingPage(\n          resourceGroupName,\n          hubName,\n          connectorName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByConnectorPagingPage(\n    resourceGroupName: string,\n    hubName: string,\n    connectorName: string,\n    options?: ConnectorMappingsListByConnectorOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ConnectorMappingResourceFormat[]> {\n    let result: ConnectorMappingsListByConnectorResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByConnector(\n        resourceGroupName,\n        hubName,\n        connectorName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByConnectorNext(\n        resourceGroupName,\n        hubName,\n        connectorName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByConnectorPagingAll(\n    resourceGroupName: string,\n    hubName: string,\n    connectorName: string,\n    options?: ConnectorMappingsListByConnectorOptionalParams\n  ): AsyncIterableIterator<ConnectorMappingResourceFormat> {\n    for await (const page of this.listByConnectorPagingPage(\n      resourceGroupName,\n      hubName,\n      connectorName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Creates a connector mapping or updates an existing connector mapping in the connector.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param connectorName The name of the connector.\n   * @param mappingName The name of the connector mapping.\n   * @param parameters Parameters supplied to the CreateOrUpdate Connector Mapping operation.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    hubName: string,\n    connectorName: string,\n    mappingName: string,\n    parameters: ConnectorMappingResourceFormat,\n    options?: ConnectorMappingsCreateOrUpdateOptionalParams\n  ): Promise<ConnectorMappingsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        hubName,\n        connectorName,\n        mappingName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Gets a connector mapping in the connector.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param connectorName The name of the connector.\n   * @param mappingName The name of the connector mapping.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    hubName: string,\n    connectorName: string,\n    mappingName: string,\n    options?: ConnectorMappingsGetOptionalParams\n  ): Promise<ConnectorMappingsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, connectorName, mappingName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Deletes a connector mapping in the connector.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param connectorName The name of the connector.\n   * @param mappingName The name of the connector mapping.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    hubName: string,\n    connectorName: string,\n    mappingName: string,\n    options?: ConnectorMappingsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, connectorName, mappingName, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Gets all the connector mappings in the specified connector.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param connectorName The name of the connector.\n   * @param options The options parameters.\n   */\n  private _listByConnector(\n    resourceGroupName: string,\n    hubName: string,\n    connectorName: string,\n    options?: ConnectorMappingsListByConnectorOptionalParams\n  ): Promise<ConnectorMappingsListByConnectorResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, connectorName, options },\n      listByConnectorOperationSpec\n    );\n  }\n\n  /**\n   * ListByConnectorNext\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param connectorName The name of the connector.\n   * @param nextLink The nextLink from the previous successful call to the ListByConnector method.\n   * @param options The options parameters.\n   */\n  private _listByConnectorNext(\n    resourceGroupName: string,\n    hubName: string,\n    connectorName: string,\n    nextLink: string,\n    options?: ConnectorMappingsListByConnectorNextOptionalParams\n  ): Promise<ConnectorMappingsListByConnectorNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, connectorName, nextLink, options },\n      listByConnectorNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/connectors/{connectorName}/mappings/{mappingName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConnectorMappingResourceFormat\n    },\n    201: {\n      bodyMapper: Mappers.ConnectorMappingResourceFormat\n    }\n  },\n  requestBody: Parameters.parameters7,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1,\n    Parameters.connectorName1,\n    Parameters.mappingName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/connectors/{connectorName}/mappings/{mappingName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConnectorMappingResourceFormat\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1,\n    Parameters.connectorName1,\n    Parameters.mappingName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/connectors/{connectorName}/mappings/{mappingName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 204: {} },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1,\n    Parameters.connectorName1,\n    Parameters.mappingName1\n  ],\n  serializer\n};\nconst listByConnectorOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/connectors/{connectorName}/mappings\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConnectorMappingListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1,\n    Parameters.connectorName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByConnectorNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConnectorMappingListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1,\n    Parameters.connectorName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Kpi } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CustomerInsightsManagementClient } from \"../customerInsightsManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  KpiResourceFormat,\n  KpiListByHubNextOptionalParams,\n  KpiListByHubOptionalParams,\n  KpiListByHubResponse,\n  KpiCreateOrUpdateOptionalParams,\n  KpiCreateOrUpdateResponse,\n  KpiGetOptionalParams,\n  KpiGetResponse,\n  KpiDeleteOptionalParams,\n  KpiReprocessOptionalParams,\n  KpiListByHubNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Kpi operations. */\nexport class KpiImpl implements Kpi {\n  private readonly client: CustomerInsightsManagementClient;\n\n  /**\n   * Initialize a new instance of the class Kpi class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CustomerInsightsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets all the KPIs in the specified hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param options The options parameters.\n   */\n  public listByHub(\n    resourceGroupName: string,\n    hubName: string,\n    options?: KpiListByHubOptionalParams\n  ): PagedAsyncIterableIterator<KpiResourceFormat> {\n    const iter = this.listByHubPagingAll(resourceGroupName, hubName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByHubPagingPage(\n          resourceGroupName,\n          hubName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByHubPagingPage(\n    resourceGroupName: string,\n    hubName: string,\n    options?: KpiListByHubOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<KpiResourceFormat[]> {\n    let result: KpiListByHubResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByHub(resourceGroupName, hubName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByHubNext(\n        resourceGroupName,\n        hubName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByHubPagingAll(\n    resourceGroupName: string,\n    hubName: string,\n    options?: KpiListByHubOptionalParams\n  ): AsyncIterableIterator<KpiResourceFormat> {\n    for await (const page of this.listByHubPagingPage(\n      resourceGroupName,\n      hubName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Creates a KPI or updates an existing KPI in the hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param kpiName The name of the KPI.\n   * @param parameters Parameters supplied to the create/update KPI operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    hubName: string,\n    kpiName: string,\n    parameters: KpiResourceFormat,\n    options?: KpiCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<KpiCreateOrUpdateResponse>,\n      KpiCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<KpiCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, hubName, kpiName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates a KPI or updates an existing KPI in the hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param kpiName The name of the KPI.\n   * @param parameters Parameters supplied to the create/update KPI operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    hubName: string,\n    kpiName: string,\n    parameters: KpiResourceFormat,\n    options?: KpiCreateOrUpdateOptionalParams\n  ): Promise<KpiCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      hubName,\n      kpiName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a KPI in the hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param kpiName The name of the KPI.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    hubName: string,\n    kpiName: string,\n    options?: KpiGetOptionalParams\n  ): Promise<KpiGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, kpiName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Deletes a KPI in the hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param kpiName The name of the KPI.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    hubName: string,\n    kpiName: string,\n    options?: KpiDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, hubName, kpiName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes a KPI in the hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param kpiName The name of the KPI.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    hubName: string,\n    kpiName: string,\n    options?: KpiDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      hubName,\n      kpiName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Reprocesses the Kpi values of the specified KPI.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param kpiName The name of the KPI.\n   * @param options The options parameters.\n   */\n  reprocess(\n    resourceGroupName: string,\n    hubName: string,\n    kpiName: string,\n    options?: KpiReprocessOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, kpiName, options },\n      reprocessOperationSpec\n    );\n  }\n\n  /**\n   * Gets all the KPIs in the specified hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param options The options parameters.\n   */\n  private _listByHub(\n    resourceGroupName: string,\n    hubName: string,\n    options?: KpiListByHubOptionalParams\n  ): Promise<KpiListByHubResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, options },\n      listByHubOperationSpec\n    );\n  }\n\n  /**\n   * ListByHubNext\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param nextLink The nextLink from the previous successful call to the ListByHub method.\n   * @param options The options parameters.\n   */\n  private _listByHubNext(\n    resourceGroupName: string,\n    hubName: string,\n    nextLink: string,\n    options?: KpiListByHubNextOptionalParams\n  ): Promise<KpiListByHubNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, nextLink, options },\n      listByHubNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/kpi/{kpiName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KpiResourceFormat\n    },\n    201: {\n      bodyMapper: Mappers.KpiResourceFormat\n    },\n    202: {\n      bodyMapper: Mappers.KpiResourceFormat\n    },\n    204: {\n      bodyMapper: Mappers.KpiResourceFormat\n    }\n  },\n  requestBody: Parameters.parameters8,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1,\n    Parameters.kpiName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/kpi/{kpiName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KpiResourceFormat\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1,\n    Parameters.kpiName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/kpi/{kpiName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {} },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1,\n    Parameters.kpiName1\n  ],\n  serializer\n};\nconst reprocessOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/kpi/{kpiName}/reprocess\",\n  httpMethod: \"POST\",\n  responses: { 202: {} },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1,\n    Parameters.kpiName1\n  ],\n  serializer\n};\nconst listByHubOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/kpi\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KpiListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByHubNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KpiListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { WidgetTypes } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CustomerInsightsManagementClient } from \"../customerInsightsManagementClient\";\nimport {\n  WidgetTypeResourceFormat,\n  WidgetTypesListByHubNextOptionalParams,\n  WidgetTypesListByHubOptionalParams,\n  WidgetTypesListByHubResponse,\n  WidgetTypesGetOptionalParams,\n  WidgetTypesGetResponse,\n  WidgetTypesListByHubNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing WidgetTypes operations. */\nexport class WidgetTypesImpl implements WidgetTypes {\n  private readonly client: CustomerInsightsManagementClient;\n\n  /**\n   * Initialize a new instance of the class WidgetTypes class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CustomerInsightsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets all available widget types in the specified hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param options The options parameters.\n   */\n  public listByHub(\n    resourceGroupName: string,\n    hubName: string,\n    options?: WidgetTypesListByHubOptionalParams\n  ): PagedAsyncIterableIterator<WidgetTypeResourceFormat> {\n    const iter = this.listByHubPagingAll(resourceGroupName, hubName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByHubPagingPage(\n          resourceGroupName,\n          hubName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByHubPagingPage(\n    resourceGroupName: string,\n    hubName: string,\n    options?: WidgetTypesListByHubOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<WidgetTypeResourceFormat[]> {\n    let result: WidgetTypesListByHubResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByHub(resourceGroupName, hubName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByHubNext(\n        resourceGroupName,\n        hubName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByHubPagingAll(\n    resourceGroupName: string,\n    hubName: string,\n    options?: WidgetTypesListByHubOptionalParams\n  ): AsyncIterableIterator<WidgetTypeResourceFormat> {\n    for await (const page of this.listByHubPagingPage(\n      resourceGroupName,\n      hubName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all available widget types in the specified hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param options The options parameters.\n   */\n  private _listByHub(\n    resourceGroupName: string,\n    hubName: string,\n    options?: WidgetTypesListByHubOptionalParams\n  ): Promise<WidgetTypesListByHubResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, options },\n      listByHubOperationSpec\n    );\n  }\n\n  /**\n   * Gets a widget type in the specified hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param widgetTypeName The name of the widget type.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    hubName: string,\n    widgetTypeName: string,\n    options?: WidgetTypesGetOptionalParams\n  ): Promise<WidgetTypesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, widgetTypeName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * ListByHubNext\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param nextLink The nextLink from the previous successful call to the ListByHub method.\n   * @param options The options parameters.\n   */\n  private _listByHubNext(\n    resourceGroupName: string,\n    hubName: string,\n    nextLink: string,\n    options?: WidgetTypesListByHubNextOptionalParams\n  ): Promise<WidgetTypesListByHubNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, nextLink, options },\n      listByHubNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByHubOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/widgetTypes\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WidgetTypeListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/widgetTypes/{widgetTypeName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WidgetTypeResourceFormat\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1,\n    Parameters.widgetTypeName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByHubNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WidgetTypeListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Views } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CustomerInsightsManagementClient } from \"../customerInsightsManagementClient\";\nimport {\n  ViewResourceFormat,\n  ViewsListByHubNextOptionalParams,\n  ViewsListByHubOptionalParams,\n  ViewsListByHubResponse,\n  ViewsCreateOrUpdateOptionalParams,\n  ViewsCreateOrUpdateResponse,\n  ViewsGetOptionalParams,\n  ViewsGetResponse,\n  ViewsDeleteOptionalParams,\n  ViewsListByHubNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Views operations. */\nexport class ViewsImpl implements Views {\n  private readonly client: CustomerInsightsManagementClient;\n\n  /**\n   * Initialize a new instance of the class Views class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CustomerInsightsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets all available views for given user in the specified hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param userId The user ID. Use * to retrieve hub level views.\n   * @param options The options parameters.\n   */\n  public listByHub(\n    resourceGroupName: string,\n    hubName: string,\n    userId: string,\n    options?: ViewsListByHubOptionalParams\n  ): PagedAsyncIterableIterator<ViewResourceFormat> {\n    const iter = this.listByHubPagingAll(\n      resourceGroupName,\n      hubName,\n      userId,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByHubPagingPage(\n          resourceGroupName,\n          hubName,\n          userId,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByHubPagingPage(\n    resourceGroupName: string,\n    hubName: string,\n    userId: string,\n    options?: ViewsListByHubOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ViewResourceFormat[]> {\n    let result: ViewsListByHubResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByHub(\n        resourceGroupName,\n        hubName,\n        userId,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByHubNext(\n        resourceGroupName,\n        hubName,\n        userId,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByHubPagingAll(\n    resourceGroupName: string,\n    hubName: string,\n    userId: string,\n    options?: ViewsListByHubOptionalParams\n  ): AsyncIterableIterator<ViewResourceFormat> {\n    for await (const page of this.listByHubPagingPage(\n      resourceGroupName,\n      hubName,\n      userId,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all available views for given user in the specified hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param userId The user ID. Use * to retrieve hub level views.\n   * @param options The options parameters.\n   */\n  private _listByHub(\n    resourceGroupName: string,\n    hubName: string,\n    userId: string,\n    options?: ViewsListByHubOptionalParams\n  ): Promise<ViewsListByHubResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, userId, options },\n      listByHubOperationSpec\n    );\n  }\n\n  /**\n   * Creates a view or updates an existing view in the hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param viewName The name of the view.\n   * @param parameters Parameters supplied to the CreateOrUpdate View operation.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    hubName: string,\n    viewName: string,\n    parameters: ViewResourceFormat,\n    options?: ViewsCreateOrUpdateOptionalParams\n  ): Promise<ViewsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, viewName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Gets a view in the hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param viewName The name of the view.\n   * @param userId The user ID. Use * to retrieve hub level view.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    hubName: string,\n    viewName: string,\n    userId: string,\n    options?: ViewsGetOptionalParams\n  ): Promise<ViewsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, viewName, userId, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Deletes a view in the specified hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param viewName The name of the view.\n   * @param userId The user ID. Use * to retrieve hub level view.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    hubName: string,\n    viewName: string,\n    userId: string,\n    options?: ViewsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, viewName, userId, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * ListByHubNext\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param userId The user ID. Use * to retrieve hub level views.\n   * @param nextLink The nextLink from the previous successful call to the ListByHub method.\n   * @param options The options parameters.\n   */\n  private _listByHubNext(\n    resourceGroupName: string,\n    hubName: string,\n    userId: string,\n    nextLink: string,\n    options?: ViewsListByHubNextOptionalParams\n  ): Promise<ViewsListByHubNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, userId, nextLink, options },\n      listByHubNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByHubOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/views\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ViewListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.userId],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/views/{viewName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ViewResourceFormat\n    }\n  },\n  requestBody: Parameters.parameters9,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1,\n    Parameters.viewName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/views/{viewName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ViewResourceFormat\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.userId],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1,\n    Parameters.viewName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/views/{viewName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {} },\n  queryParameters: [Parameters.apiVersion, Parameters.userId],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1,\n    Parameters.viewName1\n  ],\n  serializer\n};\nconst listByHubNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ViewListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.userId],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Links } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CustomerInsightsManagementClient } from \"../customerInsightsManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  LinkResourceFormat,\n  LinksListByHubNextOptionalParams,\n  LinksListByHubOptionalParams,\n  LinksListByHubResponse,\n  LinksCreateOrUpdateOptionalParams,\n  LinksCreateOrUpdateResponse,\n  LinksGetOptionalParams,\n  LinksGetResponse,\n  LinksDeleteOptionalParams,\n  LinksListByHubNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Links operations. */\nexport class LinksImpl implements Links {\n  private readonly client: CustomerInsightsManagementClient;\n\n  /**\n   * Initialize a new instance of the class Links class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CustomerInsightsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets all the links in the specified hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param options The options parameters.\n   */\n  public listByHub(\n    resourceGroupName: string,\n    hubName: string,\n    options?: LinksListByHubOptionalParams\n  ): PagedAsyncIterableIterator<LinkResourceFormat> {\n    const iter = this.listByHubPagingAll(resourceGroupName, hubName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByHubPagingPage(\n          resourceGroupName,\n          hubName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByHubPagingPage(\n    resourceGroupName: string,\n    hubName: string,\n    options?: LinksListByHubOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<LinkResourceFormat[]> {\n    let result: LinksListByHubResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByHub(resourceGroupName, hubName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByHubNext(\n        resourceGroupName,\n        hubName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByHubPagingAll(\n    resourceGroupName: string,\n    hubName: string,\n    options?: LinksListByHubOptionalParams\n  ): AsyncIterableIterator<LinkResourceFormat> {\n    for await (const page of this.listByHubPagingPage(\n      resourceGroupName,\n      hubName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Creates a link or updates an existing link in the hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param linkName The name of the link.\n   * @param parameters Parameters supplied to the CreateOrUpdate Link operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    hubName: string,\n    linkName: string,\n    parameters: LinkResourceFormat,\n    options?: LinksCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<LinksCreateOrUpdateResponse>,\n      LinksCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<LinksCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, hubName, linkName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates a link or updates an existing link in the hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param linkName The name of the link.\n   * @param parameters Parameters supplied to the CreateOrUpdate Link operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    hubName: string,\n    linkName: string,\n    parameters: LinkResourceFormat,\n    options?: LinksCreateOrUpdateOptionalParams\n  ): Promise<LinksCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      hubName,\n      linkName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a link in the hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param linkName The name of the link.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    hubName: string,\n    linkName: string,\n    options?: LinksGetOptionalParams\n  ): Promise<LinksGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, linkName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Deletes a link in the hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param linkName The name of the link.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    hubName: string,\n    linkName: string,\n    options?: LinksDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, linkName, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Gets all the links in the specified hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param options The options parameters.\n   */\n  private _listByHub(\n    resourceGroupName: string,\n    hubName: string,\n    options?: LinksListByHubOptionalParams\n  ): Promise<LinksListByHubResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, options },\n      listByHubOperationSpec\n    );\n  }\n\n  /**\n   * ListByHubNext\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param nextLink The nextLink from the previous successful call to the ListByHub method.\n   * @param options The options parameters.\n   */\n  private _listByHubNext(\n    resourceGroupName: string,\n    hubName: string,\n    nextLink: string,\n    options?: LinksListByHubNextOptionalParams\n  ): Promise<LinksListByHubNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, nextLink, options },\n      listByHubNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/links/{linkName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LinkResourceFormat\n    },\n    201: {\n      bodyMapper: Mappers.LinkResourceFormat\n    },\n    202: {\n      bodyMapper: Mappers.LinkResourceFormat\n    },\n    204: {\n      bodyMapper: Mappers.LinkResourceFormat\n    }\n  },\n  requestBody: Parameters.parameters10,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1,\n    Parameters.linkName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/links/{linkName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LinkResourceFormat\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1,\n    Parameters.linkName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/links/{linkName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 202: {} },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1,\n    Parameters.linkName1\n  ],\n  serializer\n};\nconst listByHubOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/links\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LinkListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByHubNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LinkListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Roles } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CustomerInsightsManagementClient } from \"../customerInsightsManagementClient\";\nimport {\n  RoleResourceFormat,\n  RolesListByHubNextOptionalParams,\n  RolesListByHubOptionalParams,\n  RolesListByHubResponse,\n  RolesListByHubNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Roles operations. */\nexport class RolesImpl implements Roles {\n  private readonly client: CustomerInsightsManagementClient;\n\n  /**\n   * Initialize a new instance of the class Roles class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CustomerInsightsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets all the roles for the hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param options The options parameters.\n   */\n  public listByHub(\n    resourceGroupName: string,\n    hubName: string,\n    options?: RolesListByHubOptionalParams\n  ): PagedAsyncIterableIterator<RoleResourceFormat> {\n    const iter = this.listByHubPagingAll(resourceGroupName, hubName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByHubPagingPage(\n          resourceGroupName,\n          hubName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByHubPagingPage(\n    resourceGroupName: string,\n    hubName: string,\n    options?: RolesListByHubOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<RoleResourceFormat[]> {\n    let result: RolesListByHubResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByHub(resourceGroupName, hubName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByHubNext(\n        resourceGroupName,\n        hubName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByHubPagingAll(\n    resourceGroupName: string,\n    hubName: string,\n    options?: RolesListByHubOptionalParams\n  ): AsyncIterableIterator<RoleResourceFormat> {\n    for await (const page of this.listByHubPagingPage(\n      resourceGroupName,\n      hubName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all the roles for the hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param options The options parameters.\n   */\n  private _listByHub(\n    resourceGroupName: string,\n    hubName: string,\n    options?: RolesListByHubOptionalParams\n  ): Promise<RolesListByHubResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, options },\n      listByHubOperationSpec\n    );\n  }\n\n  /**\n   * ListByHubNext\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param nextLink The nextLink from the previous successful call to the ListByHub method.\n   * @param options The options parameters.\n   */\n  private _listByHubNext(\n    resourceGroupName: string,\n    hubName: string,\n    nextLink: string,\n    options?: RolesListByHubNextOptionalParams\n  ): Promise<RolesListByHubNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, nextLink, options },\n      listByHubNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByHubOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/roles\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByHubNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { RoleAssignments } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CustomerInsightsManagementClient } from \"../customerInsightsManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  RoleAssignmentResourceFormat,\n  RoleAssignmentsListByHubNextOptionalParams,\n  RoleAssignmentsListByHubOptionalParams,\n  RoleAssignmentsListByHubResponse,\n  RoleAssignmentsCreateOrUpdateOptionalParams,\n  RoleAssignmentsCreateOrUpdateResponse,\n  RoleAssignmentsGetOptionalParams,\n  RoleAssignmentsGetResponse,\n  RoleAssignmentsDeleteOptionalParams,\n  RoleAssignmentsListByHubNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing RoleAssignments operations. */\nexport class RoleAssignmentsImpl implements RoleAssignments {\n  private readonly client: CustomerInsightsManagementClient;\n\n  /**\n   * Initialize a new instance of the class RoleAssignments class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CustomerInsightsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets all the role assignments for the specified hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param options The options parameters.\n   */\n  public listByHub(\n    resourceGroupName: string,\n    hubName: string,\n    options?: RoleAssignmentsListByHubOptionalParams\n  ): PagedAsyncIterableIterator<RoleAssignmentResourceFormat> {\n    const iter = this.listByHubPagingAll(resourceGroupName, hubName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByHubPagingPage(\n          resourceGroupName,\n          hubName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByHubPagingPage(\n    resourceGroupName: string,\n    hubName: string,\n    options?: RoleAssignmentsListByHubOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<RoleAssignmentResourceFormat[]> {\n    let result: RoleAssignmentsListByHubResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByHub(resourceGroupName, hubName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByHubNext(\n        resourceGroupName,\n        hubName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByHubPagingAll(\n    resourceGroupName: string,\n    hubName: string,\n    options?: RoleAssignmentsListByHubOptionalParams\n  ): AsyncIterableIterator<RoleAssignmentResourceFormat> {\n    for await (const page of this.listByHubPagingPage(\n      resourceGroupName,\n      hubName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all the role assignments for the specified hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param options The options parameters.\n   */\n  private _listByHub(\n    resourceGroupName: string,\n    hubName: string,\n    options?: RoleAssignmentsListByHubOptionalParams\n  ): Promise<RoleAssignmentsListByHubResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, options },\n      listByHubOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a role assignment in the hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param assignmentName The assignment name\n   * @param parameters Parameters supplied to the CreateOrUpdate RoleAssignment operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    hubName: string,\n    assignmentName: string,\n    parameters: RoleAssignmentResourceFormat,\n    options?: RoleAssignmentsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<RoleAssignmentsCreateOrUpdateResponse>,\n      RoleAssignmentsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<RoleAssignmentsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, hubName, assignmentName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates or updates a role assignment in the hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param assignmentName The assignment name\n   * @param parameters Parameters supplied to the CreateOrUpdate RoleAssignment operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    hubName: string,\n    assignmentName: string,\n    parameters: RoleAssignmentResourceFormat,\n    options?: RoleAssignmentsCreateOrUpdateOptionalParams\n  ): Promise<RoleAssignmentsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      hubName,\n      assignmentName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets the role assignment in the hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param assignmentName The name of the role assignment.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    hubName: string,\n    assignmentName: string,\n    options?: RoleAssignmentsGetOptionalParams\n  ): Promise<RoleAssignmentsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, assignmentName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Deletes the role assignment in the hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param assignmentName The name of the role assignment.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    hubName: string,\n    assignmentName: string,\n    options?: RoleAssignmentsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, assignmentName, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * ListByHubNext\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param nextLink The nextLink from the previous successful call to the ListByHub method.\n   * @param options The options parameters.\n   */\n  private _listByHubNext(\n    resourceGroupName: string,\n    hubName: string,\n    nextLink: string,\n    options?: RoleAssignmentsListByHubNextOptionalParams\n  ): Promise<RoleAssignmentsListByHubNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, nextLink, options },\n      listByHubNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByHubOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/roleAssignments\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleAssignmentListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/roleAssignments/{assignmentName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleAssignmentResourceFormat\n    },\n    201: {\n      bodyMapper: Mappers.RoleAssignmentResourceFormat\n    },\n    202: {\n      bodyMapper: Mappers.RoleAssignmentResourceFormat\n    },\n    204: {\n      bodyMapper: Mappers.RoleAssignmentResourceFormat\n    }\n  },\n  requestBody: Parameters.parameters11,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1,\n    Parameters.assignmentName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/roleAssignments/{assignmentName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleAssignmentResourceFormat\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1,\n    Parameters.assignmentName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/roleAssignments/{assignmentName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 202: {}, 204: {} },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1,\n    Parameters.assignmentName1\n  ],\n  serializer\n};\nconst listByHubNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleAssignmentListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { Images } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CustomerInsightsManagementClient } from \"../customerInsightsManagementClient\";\nimport {\n  GetImageUploadUrlInput,\n  ImagesGetUploadUrlForEntityTypeOptionalParams,\n  ImagesGetUploadUrlForEntityTypeResponse,\n  ImagesGetUploadUrlForDataOptionalParams,\n  ImagesGetUploadUrlForDataResponse\n} from \"../models\";\n\n/** Class containing Images operations. */\nexport class ImagesImpl implements Images {\n  private readonly client: CustomerInsightsManagementClient;\n\n  /**\n   * Initialize a new instance of the class Images class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CustomerInsightsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets entity type (profile or interaction) image upload URL.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param parameters Parameters supplied to the GetUploadUrlForEntityType operation.\n   * @param options The options parameters.\n   */\n  getUploadUrlForEntityType(\n    resourceGroupName: string,\n    hubName: string,\n    parameters: GetImageUploadUrlInput,\n    options?: ImagesGetUploadUrlForEntityTypeOptionalParams\n  ): Promise<ImagesGetUploadUrlForEntityTypeResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, parameters, options },\n      getUploadUrlForEntityTypeOperationSpec\n    );\n  }\n\n  /**\n   * Gets data image upload URL.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param parameters Parameters supplied to the GetUploadUrlForData operation.\n   * @param options The options parameters.\n   */\n  getUploadUrlForData(\n    resourceGroupName: string,\n    hubName: string,\n    parameters: GetImageUploadUrlInput,\n    options?: ImagesGetUploadUrlForDataOptionalParams\n  ): Promise<ImagesGetUploadUrlForDataResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, parameters, options },\n      getUploadUrlForDataOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getUploadUrlForEntityTypeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/images/getEntityTypeImageUploadUrl\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ImageDefinition\n    }\n  },\n  requestBody: Parameters.parameters12,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getUploadUrlForDataOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/images/getDataImageUploadUrl\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ImageDefinition\n    }\n  },\n  requestBody: Parameters.parameters12,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Predictions } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CustomerInsightsManagementClient } from \"../customerInsightsManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  PredictionResourceFormat,\n  PredictionsListByHubNextOptionalParams,\n  PredictionsListByHubOptionalParams,\n  PredictionsListByHubResponse,\n  PredictionsCreateOrUpdateOptionalParams,\n  PredictionsCreateOrUpdateResponse,\n  PredictionsGetOptionalParams,\n  PredictionsGetResponse,\n  PredictionsDeleteOptionalParams,\n  PredictionsGetTrainingResultsOptionalParams,\n  PredictionsGetTrainingResultsResponse,\n  PredictionsGetModelStatusOptionalParams,\n  PredictionsGetModelStatusResponse,\n  PredictionModelStatus,\n  PredictionsModelStatusOptionalParams,\n  PredictionsListByHubNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Predictions operations. */\nexport class PredictionsImpl implements Predictions {\n  private readonly client: CustomerInsightsManagementClient;\n\n  /**\n   * Initialize a new instance of the class Predictions class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CustomerInsightsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets all the predictions in the specified hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param options The options parameters.\n   */\n  public listByHub(\n    resourceGroupName: string,\n    hubName: string,\n    options?: PredictionsListByHubOptionalParams\n  ): PagedAsyncIterableIterator<PredictionResourceFormat> {\n    const iter = this.listByHubPagingAll(resourceGroupName, hubName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByHubPagingPage(\n          resourceGroupName,\n          hubName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByHubPagingPage(\n    resourceGroupName: string,\n    hubName: string,\n    options?: PredictionsListByHubOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<PredictionResourceFormat[]> {\n    let result: PredictionsListByHubResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByHub(resourceGroupName, hubName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByHubNext(\n        resourceGroupName,\n        hubName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByHubPagingAll(\n    resourceGroupName: string,\n    hubName: string,\n    options?: PredictionsListByHubOptionalParams\n  ): AsyncIterableIterator<PredictionResourceFormat> {\n    for await (const page of this.listByHubPagingPage(\n      resourceGroupName,\n      hubName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Creates a Prediction or updates an existing Prediction in the hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param predictionName The name of the Prediction.\n   * @param parameters Parameters supplied to the create/update Prediction operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    hubName: string,\n    predictionName: string,\n    parameters: PredictionResourceFormat,\n    options?: PredictionsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<PredictionsCreateOrUpdateResponse>,\n      PredictionsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<PredictionsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, hubName, predictionName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates a Prediction or updates an existing Prediction in the hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param predictionName The name of the Prediction.\n   * @param parameters Parameters supplied to the create/update Prediction operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    hubName: string,\n    predictionName: string,\n    parameters: PredictionResourceFormat,\n    options?: PredictionsCreateOrUpdateOptionalParams\n  ): Promise<PredictionsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      hubName,\n      predictionName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a Prediction in the hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param predictionName The name of the Prediction.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    hubName: string,\n    predictionName: string,\n    options?: PredictionsGetOptionalParams\n  ): Promise<PredictionsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, predictionName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Deletes a Prediction in the hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param predictionName The name of the Prediction.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    hubName: string,\n    predictionName: string,\n    options?: PredictionsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, hubName, predictionName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes a Prediction in the hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param predictionName The name of the Prediction.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    hubName: string,\n    predictionName: string,\n    options?: PredictionsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      hubName,\n      predictionName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets training results.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param predictionName The name of the Prediction.\n   * @param options The options parameters.\n   */\n  getTrainingResults(\n    resourceGroupName: string,\n    hubName: string,\n    predictionName: string,\n    options?: PredictionsGetTrainingResultsOptionalParams\n  ): Promise<PredictionsGetTrainingResultsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, predictionName, options },\n      getTrainingResultsOperationSpec\n    );\n  }\n\n  /**\n   * Gets model status of the prediction.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param predictionName The name of the Prediction.\n   * @param options The options parameters.\n   */\n  getModelStatus(\n    resourceGroupName: string,\n    hubName: string,\n    predictionName: string,\n    options?: PredictionsGetModelStatusOptionalParams\n  ): Promise<PredictionsGetModelStatusResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, predictionName, options },\n      getModelStatusOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates the model status of prediction.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param predictionName The name of the Prediction.\n   * @param parameters Parameters supplied to the create/update prediction model status operation.\n   * @param options The options parameters.\n   */\n  modelStatus(\n    resourceGroupName: string,\n    hubName: string,\n    predictionName: string,\n    parameters: PredictionModelStatus,\n    options?: PredictionsModelStatusOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, predictionName, parameters, options },\n      modelStatusOperationSpec\n    );\n  }\n\n  /**\n   * Gets all the predictions in the specified hub.\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param options The options parameters.\n   */\n  private _listByHub(\n    resourceGroupName: string,\n    hubName: string,\n    options?: PredictionsListByHubOptionalParams\n  ): Promise<PredictionsListByHubResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, options },\n      listByHubOperationSpec\n    );\n  }\n\n  /**\n   * ListByHubNext\n   * @param resourceGroupName The name of the resource group.\n   * @param hubName The name of the hub.\n   * @param nextLink The nextLink from the previous successful call to the ListByHub method.\n   * @param options The options parameters.\n   */\n  private _listByHubNext(\n    resourceGroupName: string,\n    hubName: string,\n    nextLink: string,\n    options?: PredictionsListByHubNextOptionalParams\n  ): Promise<PredictionsListByHubNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hubName, nextLink, options },\n      listByHubNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/predictions/{predictionName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PredictionResourceFormat\n    },\n    201: {\n      bodyMapper: Mappers.PredictionResourceFormat\n    },\n    202: {\n      bodyMapper: Mappers.PredictionResourceFormat\n    },\n    204: {\n      bodyMapper: Mappers.PredictionResourceFormat\n    }\n  },\n  requestBody: Parameters.parameters13,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1,\n    Parameters.predictionName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/predictions/{predictionName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PredictionResourceFormat\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1,\n    Parameters.predictionName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/predictions/{predictionName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {} },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1,\n    Parameters.predictionName1\n  ],\n  serializer\n};\nconst getTrainingResultsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/predictions/{predictionName}/getTrainingResults\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PredictionTrainingResults\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1,\n    Parameters.predictionName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getModelStatusOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/predictions/{predictionName}/getModelStatus\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PredictionModelStatus\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1,\n    Parameters.predictionName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst modelStatusOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/predictions/{predictionName}/modelStatus\",\n  httpMethod: \"POST\",\n  responses: { 200: {} },\n  requestBody: Parameters.parameters14,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1,\n    Parameters.predictionName1\n  ],\n  headerParameters: [Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listByHubOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/predictions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PredictionListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByHubNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PredictionListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hubName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\nimport {\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest\n} from \"@azure/core-rest-pipeline\";\nimport * as coreAuth from \"@azure/core-auth\";\nimport {\n  OperationsImpl,\n  HubsImpl,\n  ProfilesImpl,\n  InteractionsImpl,\n  RelationshipsImpl,\n  RelationshipLinksImpl,\n  AuthorizationPoliciesImpl,\n  ConnectorsImpl,\n  ConnectorMappingsImpl,\n  KpiImpl,\n  WidgetTypesImpl,\n  ViewsImpl,\n  LinksImpl,\n  RolesImpl,\n  RoleAssignmentsImpl,\n  ImagesImpl,\n  PredictionsImpl\n} from \"./operations\";\nimport {\n  Operations,\n  Hubs,\n  Profiles,\n  Interactions,\n  Relationships,\n  RelationshipLinks,\n  AuthorizationPolicies,\n  Connectors,\n  ConnectorMappings,\n  Kpi,\n  WidgetTypes,\n  Views,\n  Links,\n  Roles,\n  RoleAssignments,\n  Images,\n  Predictions\n} from \"./operationsInterfaces\";\nimport { CustomerInsightsManagementClientOptionalParams } from \"./models\";\n\nexport class CustomerInsightsManagementClient extends coreClient.ServiceClient {\n  $host: string;\n  apiVersion: string;\n  subscriptionId: string;\n\n  /**\n   * Initializes a new instance of the CustomerInsightsManagementClient class.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure\n   *                       subscription. The subscription ID forms part of the URI for every service call.\n   * @param options The parameter options\n   */\n  constructor(\n    credentials: coreAuth.TokenCredential,\n    subscriptionId: string,\n    options?: CustomerInsightsManagementClientOptionalParams\n  ) {\n    if (credentials === undefined) {\n      throw new Error(\"'credentials' cannot be null\");\n    }\n    if (subscriptionId === undefined) {\n      throw new Error(\"'subscriptionId' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: CustomerInsightsManagementClientOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\",\n      credential: credentials\n    };\n\n    const packageDetails = `azsdk-js-arm-customerinsights/4.1.0`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      endpoint:\n        options.endpoint ?? options.baseUri ?? \"https://management.azure.com\"\n    };\n    super(optionsWithDefaults);\n\n    let bearerTokenAuthenticationPolicyFound: boolean = false;\n    if (options?.pipeline && options.pipeline.getOrderedPolicies().length > 0) {\n      const pipelinePolicies: coreRestPipeline.PipelinePolicy[] = options.pipeline.getOrderedPolicies();\n      bearerTokenAuthenticationPolicyFound = pipelinePolicies.some(\n        (pipelinePolicy) =>\n          pipelinePolicy.name ===\n          coreRestPipeline.bearerTokenAuthenticationPolicyName\n      );\n    }\n    if (\n      !options ||\n      !options.pipeline ||\n      options.pipeline.getOrderedPolicies().length == 0 ||\n      !bearerTokenAuthenticationPolicyFound\n    ) {\n      this.pipeline.removePolicy({\n        name: coreRestPipeline.bearerTokenAuthenticationPolicyName\n      });\n      this.pipeline.addPolicy(\n        coreRestPipeline.bearerTokenAuthenticationPolicy({\n          credential: credentials,\n          scopes:\n            optionsWithDefaults.credentialScopes ??\n            `${optionsWithDefaults.endpoint}/.default`,\n          challengeCallbacks: {\n            authorizeRequestOnChallenge:\n              coreClient.authorizeRequestOnClaimChallenge\n          }\n        })\n      );\n    }\n    // Parameter assignments\n    this.subscriptionId = subscriptionId;\n\n    // Assigning values to Constant parameters\n    this.$host = options.$host || \"https://management.azure.com\";\n    this.apiVersion = options.apiVersion || \"2017-04-26\";\n    this.operations = new OperationsImpl(this);\n    this.hubs = new HubsImpl(this);\n    this.profiles = new ProfilesImpl(this);\n    this.interactions = new InteractionsImpl(this);\n    this.relationships = new RelationshipsImpl(this);\n    this.relationshipLinks = new RelationshipLinksImpl(this);\n    this.authorizationPolicies = new AuthorizationPoliciesImpl(this);\n    this.connectors = new ConnectorsImpl(this);\n    this.connectorMappings = new ConnectorMappingsImpl(this);\n    this.kpi = new KpiImpl(this);\n    this.widgetTypes = new WidgetTypesImpl(this);\n    this.views = new ViewsImpl(this);\n    this.links = new LinksImpl(this);\n    this.roles = new RolesImpl(this);\n    this.roleAssignments = new RoleAssignmentsImpl(this);\n    this.images = new ImagesImpl(this);\n    this.predictions = new PredictionsImpl(this);\n    this.addCustomApiVersionPolicy(options.apiVersion);\n  }\n\n  /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */\n  private addCustomApiVersionPolicy(apiVersion?: string) {\n    if (!apiVersion) {\n      return;\n    }\n    const apiVersionPolicy = {\n      name: \"CustomApiVersionPolicy\",\n      async sendRequest(\n        request: PipelineRequest,\n        next: SendRequest\n      ): Promise<PipelineResponse> {\n        const param = request.url.split(\"?\");\n        if (param.length > 1) {\n          const newParams = param[1].split(\"&\").map((item) => {\n            if (item.indexOf(\"api-version\") > -1) {\n              return \"api-version=\" + apiVersion;\n            } else {\n              return item;\n            }\n          });\n          request.url = param[0] + \"?\" + newParams.join(\"&\");\n        }\n        return next(request);\n      }\n    };\n    this.pipeline.addPolicy(apiVersionPolicy);\n  }\n\n  operations: Operations;\n  hubs: Hubs;\n  profiles: Profiles;\n  interactions: Interactions;\n  relationships: Relationships;\n  relationshipLinks: RelationshipLinks;\n  authorizationPolicies: AuthorizationPolicies;\n  connectors: Connectors;\n  connectorMappings: ConnectorMappings;\n  kpi: Kpi;\n  widgetTypes: WidgetTypes;\n  views: Views;\n  links: Links;\n  roles: Roles;\n  roleAssignments: RoleAssignments;\n  images: Images;\n  predictions: Predictions;\n}\n"],"names":["KnownDataSourceType","KnownStatus","KnownProvisioningStates","KnownConnectorTypes","KnownCanonicalPropertyValueType","KnownPredictionModelLifeCycle","HubMapper","ProfileResourceFormatMapper","InteractionResourceFormatMapper","RelationshipResourceFormatMapper","RelationshipLinkResourceFormatMapper","AuthorizationPolicyResourceFormatMapper","ConnectorResourceFormatMapper","ConnectorMappingResourceFormatMapper","KpiResourceFormatMapper","ViewResourceFormatMapper","LinkResourceFormatMapper","RoleAssignmentResourceFormatMapper","GetImageUploadUrlInputMapper","PredictionResourceFormatMapper","PredictionModelStatusMapper","__await","__asyncValues","__asyncDelegator","listOperationSpec","listNextOperationSpec","serializer","coreClient","Mappers.OperationListResult","Parameters.apiVersion","Parameters.$host","Parameters.accept","Parameters.nextLink","__rest","createOrUpdateOperationSpec","__awaiter","deleteOperationSpec","LroEngine","getOperationSpec","Mappers.Hub","Parameters.parameters","Parameters.resourceGroupName","Parameters.hubName","Parameters.subscriptionId","Parameters.contentType","Parameters.hubName1","Mappers.HubListResult","listByHubOperationSpec","listByHubNextOperationSpec","Mappers.ProfileResourceFormat","Parameters.parameters1","Parameters.profileName","Parameters.localeCode","Parameters.profileName1","Mappers.ProfileListResult","Mappers.InteractionResourceFormat","Parameters.parameters2","Parameters.interactionName","Parameters.interactionName1","Mappers.InteractionListResult","Mappers.SuggestRelationshipLinksResponse","Mappers.RelationshipResourceFormat","Parameters.parameters3","Parameters.relationshipName","Parameters.relationshipName1","Mappers.RelationshipListResult","Mappers.RelationshipLinkResourceFormat","Parameters.parameters4","Parameters.relationshipLinkName","Parameters.relationshipLinkName1","Mappers.RelationshipLinkListResult","Mappers.AuthorizationPolicyResourceFormat","Parameters.parameters5","Parameters.authorizationPolicyName","Parameters.authorizationPolicyName1","Mappers.AuthorizationPolicyListResult","Mappers.AuthorizationPolicy","Mappers.ConnectorResourceFormat","Parameters.parameters6","Parameters.connectorName","Parameters.connectorName1","Mappers.ConnectorListResult","Mappers.ConnectorMappingResourceFormat","Parameters.parameters7","Parameters.mappingName","Parameters.mappingName1","Mappers.ConnectorMappingListResult","Mappers.KpiResourceFormat","Parameters.parameters8","Parameters.kpiName","Parameters.kpiName1","Mappers.KpiListResult","Mappers.WidgetTypeListResult","Mappers.WidgetTypeResourceFormat","Parameters.widgetTypeName","Mappers.ViewListResult","Parameters.userId","Mappers.ViewResourceFormat","Parameters.parameters9","Parameters.viewName","Parameters.viewName1","Mappers.LinkResourceFormat","Parameters.parameters10","Parameters.linkName","Parameters.linkName1","Mappers.LinkListResult","Mappers.RoleListResult","Mappers.RoleAssignmentListResult","Mappers.RoleAssignmentResourceFormat","Parameters.parameters11","Parameters.assignmentName","Parameters.assignmentName1","Mappers.ImageDefinition","Parameters.parameters12","Mappers.PredictionResourceFormat","Parameters.parameters13","Parameters.predictionName","Parameters.predictionName1","Mappers.PredictionTrainingResults","Mappers.PredictionModelStatus","Parameters.parameters14","Mappers.PredictionListResult","coreRestPipeline"],"mappings":"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"}