{"version":3,"file":"index.js","sources":["../src/pagingHelper.ts","../src/models/index.ts","../src/models/mappers.ts","../src/models/parameters.ts","../src/operations/operations.ts","../src/lroImpl.ts","../src/operations/namespaces.ts","../src/operations/notificationHubs.ts","../src/notificationHubsManagementClient.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport interface PageInfo {\n  continuationToken?: string;\n}\n\nconst pageMap = new WeakMap<object, PageInfo>();\n\n/**\n * Given a result page from a pageable operation, returns a\n * continuation token that can be used to begin paging from\n * that point later.\n * @param page A result object from calling .byPage() on a paged operation.\n * @returns The continuation token that can be passed into byPage().\n */\nexport function getContinuationToken(page: unknown): string | undefined {\n  if (typeof page !== \"object\" || page === null) {\n    return undefined;\n  }\n  return pageMap.get(page)?.continuationToken;\n}\n\nexport function setContinuationToken(\n  page: unknown,\n  continuationToken: string | undefined\n): void {\n  if (typeof page !== \"object\" || page === null || !continuationToken) {\n    return;\n  }\n  const pageInfo = pageMap.get(page) ?? {};\n  pageInfo.continuationToken = continuationToken;\n  pageMap.set(page, pageInfo);\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\n/** Result of the request to list NotificationHubs operations. It contains a list of operations and a URL link to get the next set of results. */\nexport interface OperationListResult {\n  /**\n   * List of NotificationHubs operations supported by the Microsoft.NotificationHubs resource provider.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: Operation[];\n  /**\n   * URL to get the next set of operation list results if there are any.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A NotificationHubs REST API operation */\nexport interface Operation {\n  /**\n   * Operation name: {provider}/{resource}/{operation}\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /** The object that represents the operation. */\n  display?: OperationDisplay;\n}\n\n/** The object that represents the operation. */\nexport interface OperationDisplay {\n  /**\n   * Service provider: Microsoft.NotificationHubs\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provider?: string;\n  /**\n   * Resource on which the operation is performed: Invoice, etc.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resource?: string;\n  /**\n   * Operation type: Read, write, delete, etc.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly operation?: string;\n}\n\n/** Error response indicates NotificationHubs service is not able to process the incoming request. The reason is provided in the error message. */\nexport interface ErrorResponse {\n  /** Error code. */\n  code?: string;\n  /** Error message indicating why the operation failed. */\n  message?: string;\n}\n\n/** Parameters supplied to the Check Name Availability for Namespace and NotificationHubs. */\nexport interface CheckAvailabilityParameters {\n  /**\n   * Resource Id\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /** Resource name */\n  name: string;\n  /**\n   * Resource type\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Resource location */\n  location?: string;\n  /** Resource tags */\n  tags?: { [propertyName: string]: string };\n  /** The sku of the created namespace */\n  sku?: Sku;\n  /** True if the name is available and can be used to create new Namespace/NotificationHub. Otherwise false. */\n  isAvailiable?: boolean;\n}\n\n/** The Sku description for a namespace */\nexport interface Sku {\n  /** Name of the notification hub sku */\n  name: SkuName;\n  /** The tier of particular sku */\n  tier?: string;\n  /** The Sku size */\n  size?: string;\n  /** The Sku Family */\n  family?: string;\n  /** The capacity of the resource */\n  capacity?: number;\n}\n\nexport interface Resource {\n  /**\n   * Resource Id\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Resource name\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Resource type\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Resource location */\n  location?: string;\n  /** Resource tags */\n  tags?: { [propertyName: string]: string };\n  /** The sku of the created namespace */\n  sku?: Sku;\n}\n\n/** Parameters supplied to the Patch Namespace operation. */\nexport interface NamespacePatchParameters {\n  /** Resource tags */\n  tags?: { [propertyName: string]: string };\n  /** The sku of the created namespace */\n  sku?: Sku;\n}\n\n/** Parameters supplied to the CreateOrUpdate Namespace AuthorizationRules. */\nexport interface SharedAccessAuthorizationRuleCreateOrUpdateParameters {\n  /** Properties of the Namespace AuthorizationRules. */\n  properties: SharedAccessAuthorizationRuleProperties;\n}\n\n/** SharedAccessAuthorizationRule properties. */\nexport interface SharedAccessAuthorizationRuleProperties {\n  /** The rights associated with the rule. */\n  rights?: AccessRights[];\n  /**\n   * A base64-encoded 256-bit primary key for signing and validating the SAS token.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly primaryKey?: string;\n  /**\n   * A base64-encoded 256-bit primary key for signing and validating the SAS token.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly secondaryKey?: string;\n  /**\n   * A string that describes the authorization rule.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly keyName?: string;\n  /**\n   * A string that describes the claim type\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly claimType?: string;\n  /**\n   * A string that describes the claim value\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly claimValue?: string;\n  /**\n   * The last modified time for this rule\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly modifiedTime?: string;\n  /**\n   * The created time for this rule\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly createdTime?: string;\n  /**\n   * The revision number for the rule\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly revision?: number;\n}\n\n/** The response of the List Namespace operation. */\nexport interface NamespaceListResult {\n  /** Result of the List Namespace operation. */\n  value?: NamespaceResource[];\n  /** Link to the next set of results. Not empty if Value contains incomplete list of Namespaces */\n  nextLink?: string;\n}\n\n/** The response of the List Namespace operation. */\nexport interface SharedAccessAuthorizationRuleListResult {\n  /** Result of the List AuthorizationRules operation. */\n  value?: SharedAccessAuthorizationRuleResource[];\n  /** Link to the next set of results. Not empty if Value contains incomplete list of AuthorizationRules */\n  nextLink?: string;\n}\n\n/** Namespace/NotificationHub Connection String */\nexport interface ResourceListKeys {\n  /** PrimaryConnectionString of the AuthorizationRule. */\n  primaryConnectionString?: string;\n  /** SecondaryConnectionString of the created AuthorizationRule */\n  secondaryConnectionString?: string;\n  /** PrimaryKey of the created AuthorizationRule. */\n  primaryKey?: string;\n  /** SecondaryKey of the created AuthorizationRule */\n  secondaryKey?: string;\n  /** KeyName of the created AuthorizationRule */\n  keyName?: string;\n}\n\n/** Namespace/NotificationHub Regenerate Keys */\nexport interface PolicykeyResource {\n  /** Name of the key that has to be regenerated for the Namespace/Notification Hub Authorization Rule. The value can be Primary Key/Secondary Key. */\n  policyKey?: string;\n}\n\n/** Description of a NotificationHub ApnsCredential. */\nexport interface ApnsCredential {\n  /** The APNS certificate. Specify if using Certificate Authentication Mode. */\n  apnsCertificate?: string;\n  /** The APNS certificate password if it exists. */\n  certificateKey?: string;\n  /** The APNS endpoint of this credential. If using Certificate Authentication Mode and Sandbox specify 'gateway.sandbox.push.apple.com'. If using Certificate Authentication Mode and Production specify 'gateway.push.apple.com'. If using Token Authentication Mode and Sandbox specify 'https://api.development.push.apple.com:443/3/device'. If using Token Authentication Mode and Production specify 'https://api.push.apple.com:443/3/device'. */\n  endpoint?: string;\n  /** The APNS certificate thumbprint. Specify if using Certificate Authentication Mode. */\n  thumbprint?: string;\n  /** A 10-character key identifier (kid) key, obtained from your developer account. Specify if using Token Authentication Mode. */\n  keyId?: string;\n  /** The name of the application or BundleId. Specify if using Token Authentication Mode. */\n  appName?: string;\n  /** The issuer (iss) registered claim key. The value is a 10-character TeamId, obtained from your developer account. Specify if using Token Authentication Mode. */\n  appId?: string;\n  /** Provider Authentication Token, obtained through your developer account. Specify if using Token Authentication Mode. */\n  token?: string;\n}\n\n/** Description of a NotificationHub WnsCredential. */\nexport interface WnsCredential {\n  /** The package ID for this credential. */\n  packageSid?: string;\n  /** The secret key. */\n  secretKey?: string;\n  /** The Windows Live endpoint. */\n  windowsLiveEndpoint?: string;\n}\n\n/** Description of a NotificationHub GcmCredential. */\nexport interface GcmCredential {\n  /** The FCM legacy endpoint. Default value is 'https://fcm.googleapis.com/fcm/send' */\n  gcmEndpoint?: string;\n  /** The Google API key. */\n  googleApiKey?: string;\n}\n\n/** Description of a NotificationHub MpnsCredential. */\nexport interface MpnsCredential {\n  /** The MPNS certificate. */\n  mpnsCertificate?: string;\n  /** The certificate key for this credential. */\n  certificateKey?: string;\n  /** The MPNS certificate Thumbprint */\n  thumbprint?: string;\n}\n\n/** Description of a NotificationHub AdmCredential. */\nexport interface AdmCredential {\n  /** The client identifier. */\n  clientId?: string;\n  /** The credential secret access key. */\n  clientSecret?: string;\n  /** The URL of the authorization token. */\n  authTokenUrl?: string;\n}\n\n/** Description of a NotificationHub BaiduCredential. */\nexport interface BaiduCredential {\n  /** Baidu Api Key. */\n  baiduApiKey?: string;\n  /** Baidu Endpoint. */\n  baiduEndPoint?: string;\n  /** Baidu Secret Key */\n  baiduSecretKey?: string;\n}\n\n/** The response of the List NotificationHub operation. */\nexport interface NotificationHubListResult {\n  /** Result of the List NotificationHub operation. */\n  value?: NotificationHubResource[];\n  /** Link to the next set of results. Not empty if Value contains incomplete list of NotificationHub */\n  nextLink?: string;\n}\n\nexport interface SubResource {\n  /** Resource Id */\n  id?: string;\n}\n\n/** Description of a CheckAvailability resource. */\nexport interface CheckAvailabilityResult extends Resource {\n  /** True if the name is available and can be used to create new Namespace/NotificationHub. Otherwise false. */\n  isAvailiable?: boolean;\n}\n\n/** Parameters supplied to the CreateOrUpdate Namespace operation. */\nexport interface NamespaceCreateOrUpdateParameters extends Resource {\n  /** The name of the namespace. */\n  namePropertiesName?: string;\n  /** Provisioning state of the Namespace. */\n  provisioningState?: string;\n  /** Specifies the targeted region in which the namespace should be created. It can be any of the following values: Australia East, Australia Southeast, Central US, East US, East US 2, West US, North Central US, South Central US, East Asia, Southeast Asia, Brazil South, Japan East, Japan West, North Europe, West Europe */\n  region?: string;\n  /**\n   * Identifier for Azure Insights metrics\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly metricId?: string;\n  /** Status of the namespace. It can be any of these values:1 = Created/Active2 = Creating3 = Suspended4 = Deleting */\n  status?: string;\n  /** The time the namespace was created. */\n  createdAt?: Date;\n  /** The time the namespace was updated. */\n  updatedAt?: Date;\n  /** Endpoint you can use to perform NotificationHub operations. */\n  serviceBusEndpoint?: string;\n  /** The Id of the Azure subscription associated with the namespace. */\n  subscriptionId?: string;\n  /** ScaleUnit where the namespace gets created */\n  scaleUnit?: string;\n  /** Whether or not the namespace is currently enabled. */\n  enabled?: boolean;\n  /** Whether or not the namespace is set as Critical. */\n  critical?: boolean;\n  /** Data center for the namespace */\n  dataCenter?: string;\n  /** The namespace type. */\n  namespaceType?: NamespaceType;\n}\n\n/** Description of a Namespace resource. */\nexport interface NamespaceResource extends Resource {\n  /** The name of the namespace. */\n  namePropertiesName?: string;\n  /** Provisioning state of the Namespace. */\n  provisioningState?: string;\n  /** Specifies the targeted region in which the namespace should be created. It can be any of the following values: Australia East, Australia Southeast, Central US, East US, East US 2, West US, North Central US, South Central US, East Asia, Southeast Asia, Brazil South, Japan East, Japan West, North Europe, West Europe */\n  region?: string;\n  /**\n   * Identifier for Azure Insights metrics\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly metricId?: string;\n  /** Status of the namespace. It can be any of these values:1 = Created/Active2 = Creating3 = Suspended4 = Deleting */\n  status?: string;\n  /** The time the namespace was created. */\n  createdAt?: Date;\n  /** The time the namespace was updated. */\n  updatedAt?: Date;\n  /** Endpoint you can use to perform NotificationHub operations. */\n  serviceBusEndpoint?: string;\n  /** The Id of the Azure subscription associated with the namespace. */\n  subscriptionId?: string;\n  /** ScaleUnit where the namespace gets created */\n  scaleUnit?: string;\n  /** Whether or not the namespace is currently enabled. */\n  enabled?: boolean;\n  /** Whether or not the namespace is set as Critical. */\n  critical?: boolean;\n  /** Data center for the namespace */\n  dataCenter?: string;\n  /** The namespace type. */\n  namespaceType?: NamespaceType;\n}\n\n/** Description of a Namespace AuthorizationRules. */\nexport interface SharedAccessAuthorizationRuleResource extends Resource {\n  /** The rights associated with the rule. */\n  rights?: AccessRights[];\n  /**\n   * A base64-encoded 256-bit primary key for signing and validating the SAS token.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly primaryKey?: string;\n  /**\n   * A base64-encoded 256-bit primary key for signing and validating the SAS token.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly secondaryKey?: string;\n  /**\n   * A string that describes the authorization rule.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly keyName?: string;\n  /**\n   * A string that describes the claim type\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly claimType?: string;\n  /**\n   * A string that describes the claim value\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly claimValue?: string;\n  /**\n   * The last modified time for this rule\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly modifiedTime?: string;\n  /**\n   * The created time for this rule\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly createdTime?: string;\n  /**\n   * The revision number for the rule\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly revision?: number;\n}\n\n/** Parameters supplied to the CreateOrUpdate NotificationHub operation. */\nexport interface NotificationHubCreateOrUpdateParameters extends Resource {\n  /** The NotificationHub name. */\n  namePropertiesName?: string;\n  /** The RegistrationTtl of the created NotificationHub */\n  registrationTtl?: string;\n  /** The AuthorizationRules of the created NotificationHub */\n  authorizationRules?: SharedAccessAuthorizationRuleProperties[];\n  /** The ApnsCredential of the created NotificationHub */\n  apnsCredential?: ApnsCredential;\n  /** The WnsCredential of the created NotificationHub */\n  wnsCredential?: WnsCredential;\n  /** The GcmCredential of the created NotificationHub */\n  gcmCredential?: GcmCredential;\n  /** The MpnsCredential of the created NotificationHub */\n  mpnsCredential?: MpnsCredential;\n  /** The AdmCredential of the created NotificationHub */\n  admCredential?: AdmCredential;\n  /** The BaiduCredential of the created NotificationHub */\n  baiduCredential?: BaiduCredential;\n}\n\n/** Description of a NotificationHub Resource. */\nexport interface NotificationHubResource extends Resource {\n  /** The NotificationHub name. */\n  namePropertiesName?: string;\n  /** The RegistrationTtl of the created NotificationHub */\n  registrationTtl?: string;\n  /** The AuthorizationRules of the created NotificationHub */\n  authorizationRules?: SharedAccessAuthorizationRuleProperties[];\n  /** The ApnsCredential of the created NotificationHub */\n  apnsCredential?: ApnsCredential;\n  /** The WnsCredential of the created NotificationHub */\n  wnsCredential?: WnsCredential;\n  /** The GcmCredential of the created NotificationHub */\n  gcmCredential?: GcmCredential;\n  /** The MpnsCredential of the created NotificationHub */\n  mpnsCredential?: MpnsCredential;\n  /** The AdmCredential of the created NotificationHub */\n  admCredential?: AdmCredential;\n  /** The BaiduCredential of the created NotificationHub */\n  baiduCredential?: BaiduCredential;\n}\n\n/** Parameters supplied to the patch NotificationHub operation. */\nexport interface NotificationHubPatchParameters extends Resource {\n  /** The NotificationHub name. */\n  namePropertiesName?: string;\n  /** The RegistrationTtl of the created NotificationHub */\n  registrationTtl?: string;\n  /** The AuthorizationRules of the created NotificationHub */\n  authorizationRules?: SharedAccessAuthorizationRuleProperties[];\n  /** The ApnsCredential of the created NotificationHub */\n  apnsCredential?: ApnsCredential;\n  /** The WnsCredential of the created NotificationHub */\n  wnsCredential?: WnsCredential;\n  /** The GcmCredential of the created NotificationHub */\n  gcmCredential?: GcmCredential;\n  /** The MpnsCredential of the created NotificationHub */\n  mpnsCredential?: MpnsCredential;\n  /** The AdmCredential of the created NotificationHub */\n  admCredential?: AdmCredential;\n  /** The BaiduCredential of the created NotificationHub */\n  baiduCredential?: BaiduCredential;\n}\n\n/** Description of a NotificationHub Resource. */\nexport interface DebugSendResponse extends Resource {\n  /** successful send */\n  success?: number;\n  /** send failure */\n  failure?: number;\n  /** actual failure description */\n  results?: Record<string, unknown>;\n}\n\n/** Description of a NotificationHub PNS Credentials. */\nexport interface PnsCredentialsResource extends Resource {\n  /** The ApnsCredential of the created NotificationHub */\n  apnsCredential?: ApnsCredential;\n  /** The WnsCredential of the created NotificationHub */\n  wnsCredential?: WnsCredential;\n  /** The GcmCredential of the created NotificationHub */\n  gcmCredential?: GcmCredential;\n  /** The MpnsCredential of the created NotificationHub */\n  mpnsCredential?: MpnsCredential;\n  /** The AdmCredential of the created NotificationHub */\n  admCredential?: AdmCredential;\n  /** The BaiduCredential of the created NotificationHub */\n  baiduCredential?: BaiduCredential;\n}\n\n/** Known values of {@link SkuName} that the service accepts. */\nexport enum KnownSkuName {\n  /** Free */\n  Free = \"Free\",\n  /** Basic */\n  Basic = \"Basic\",\n  /** Standard */\n  Standard = \"Standard\"\n}\n\n/**\n * Defines values for SkuName. \\\n * {@link KnownSkuName} can be used interchangeably with SkuName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Free** \\\n * **Basic** \\\n * **Standard**\n */\nexport type SkuName = string;\n/** Defines values for NamespaceType. */\nexport type NamespaceType = \"Messaging\" | \"NotificationHub\";\n/** Defines values for AccessRights. */\nexport type AccessRights = \"Manage\" | \"Send\" | \"Listen\";\n\n/** Optional parameters. */\nexport interface OperationsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type OperationsListResponse = OperationListResult;\n\n/** Optional parameters. */\nexport interface OperationsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type OperationsListNextResponse = OperationListResult;\n\n/** Optional parameters. */\nexport interface NamespacesCheckAvailabilityOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkAvailability operation. */\nexport type NamespacesCheckAvailabilityResponse = CheckAvailabilityResult;\n\n/** Optional parameters. */\nexport interface NamespacesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type NamespacesCreateOrUpdateResponse = NamespaceResource;\n\n/** Optional parameters. */\nexport interface NamespacesPatchOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the patch operation. */\nexport type NamespacesPatchResponse = NamespaceResource;\n\n/** Optional parameters. */\nexport interface NamespacesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface NamespacesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type NamespacesGetResponse = NamespaceResource;\n\n/** Optional parameters. */\nexport interface NamespacesCreateOrUpdateAuthorizationRuleOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdateAuthorizationRule operation. */\nexport type NamespacesCreateOrUpdateAuthorizationRuleResponse = SharedAccessAuthorizationRuleResource;\n\n/** Optional parameters. */\nexport interface NamespacesDeleteAuthorizationRuleOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface NamespacesGetAuthorizationRuleOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAuthorizationRule operation. */\nexport type NamespacesGetAuthorizationRuleResponse = SharedAccessAuthorizationRuleResource;\n\n/** Optional parameters. */\nexport interface NamespacesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type NamespacesListResponse = NamespaceListResult;\n\n/** Optional parameters. */\nexport interface NamespacesListAllOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAll operation. */\nexport type NamespacesListAllResponse = NamespaceListResult;\n\n/** Optional parameters. */\nexport interface NamespacesListAuthorizationRulesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAuthorizationRules operation. */\nexport type NamespacesListAuthorizationRulesResponse = SharedAccessAuthorizationRuleListResult;\n\n/** Optional parameters. */\nexport interface NamespacesListKeysOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listKeys operation. */\nexport type NamespacesListKeysResponse = ResourceListKeys;\n\n/** Optional parameters. */\nexport interface NamespacesRegenerateKeysOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the regenerateKeys operation. */\nexport type NamespacesRegenerateKeysResponse = ResourceListKeys;\n\n/** Optional parameters. */\nexport interface NamespacesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type NamespacesListNextResponse = NamespaceListResult;\n\n/** Optional parameters. */\nexport interface NamespacesListAllNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAllNext operation. */\nexport type NamespacesListAllNextResponse = NamespaceListResult;\n\n/** Optional parameters. */\nexport interface NamespacesListAuthorizationRulesNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAuthorizationRulesNext operation. */\nexport type NamespacesListAuthorizationRulesNextResponse = SharedAccessAuthorizationRuleListResult;\n\n/** Optional parameters. */\nexport interface NotificationHubsCheckNotificationHubAvailabilityOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkNotificationHubAvailability operation. */\nexport type NotificationHubsCheckNotificationHubAvailabilityResponse = CheckAvailabilityResult;\n\n/** Optional parameters. */\nexport interface NotificationHubsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type NotificationHubsCreateOrUpdateResponse = NotificationHubResource;\n\n/** Optional parameters. */\nexport interface NotificationHubsPatchOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameters supplied to patch a NotificationHub Resource. */\n  parameters?: NotificationHubPatchParameters;\n}\n\n/** Contains response data for the patch operation. */\nexport type NotificationHubsPatchResponse = NotificationHubResource;\n\n/** Optional parameters. */\nexport interface NotificationHubsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface NotificationHubsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type NotificationHubsGetResponse = NotificationHubResource;\n\n/** Optional parameters. */\nexport interface NotificationHubsDebugSendOptionalParams\n  extends coreClient.OperationOptions {\n  /** Debug send parameters */\n  parameters?: Record<string, unknown>;\n}\n\n/** Contains response data for the debugSend operation. */\nexport type NotificationHubsDebugSendResponse = DebugSendResponse;\n\n/** Optional parameters. */\nexport interface NotificationHubsCreateOrUpdateAuthorizationRuleOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdateAuthorizationRule operation. */\nexport type NotificationHubsCreateOrUpdateAuthorizationRuleResponse = SharedAccessAuthorizationRuleResource;\n\n/** Optional parameters. */\nexport interface NotificationHubsDeleteAuthorizationRuleOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface NotificationHubsGetAuthorizationRuleOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAuthorizationRule operation. */\nexport type NotificationHubsGetAuthorizationRuleResponse = SharedAccessAuthorizationRuleResource;\n\n/** Optional parameters. */\nexport interface NotificationHubsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type NotificationHubsListResponse = NotificationHubListResult;\n\n/** Optional parameters. */\nexport interface NotificationHubsListAuthorizationRulesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAuthorizationRules operation. */\nexport type NotificationHubsListAuthorizationRulesResponse = SharedAccessAuthorizationRuleListResult;\n\n/** Optional parameters. */\nexport interface NotificationHubsListKeysOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listKeys operation. */\nexport type NotificationHubsListKeysResponse = ResourceListKeys;\n\n/** Optional parameters. */\nexport interface NotificationHubsRegenerateKeysOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the regenerateKeys operation. */\nexport type NotificationHubsRegenerateKeysResponse = ResourceListKeys;\n\n/** Optional parameters. */\nexport interface NotificationHubsGetPnsCredentialsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getPnsCredentials operation. */\nexport type NotificationHubsGetPnsCredentialsResponse = PnsCredentialsResource;\n\n/** Optional parameters. */\nexport interface NotificationHubsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type NotificationHubsListNextResponse = NotificationHubListResult;\n\n/** Optional parameters. */\nexport interface NotificationHubsListAuthorizationRulesNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAuthorizationRulesNext operation. */\nexport type NotificationHubsListAuthorizationRulesNextResponse = SharedAccessAuthorizationRuleListResult;\n\n/** Optional parameters. */\nexport interface NotificationHubsManagementClientOptionalParams\n  extends coreClient.ServiceClientOptions {\n  /** server parameter */\n  $host?: string;\n  /** Api Version */\n  apiVersion?: string;\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport const OperationListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Operation\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Operation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Operation\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      display: {\n        serializedName: \"display\",\n        type: {\n          name: \"Composite\",\n          className: \"OperationDisplay\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationDisplay: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationDisplay\",\n    modelProperties: {\n      provider: {\n        serializedName: \"provider\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resource: {\n        serializedName: \"resource\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      operation: {\n        serializedName: \"operation\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorResponse\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CheckAvailabilityParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CheckAvailabilityParameters\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      isAvailiable: {\n        serializedName: \"isAvailiable\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const Sku: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Sku\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tier: {\n        serializedName: \"tier\",\n        type: {\n          name: \"String\"\n        }\n      },\n      size: {\n        serializedName: \"size\",\n        type: {\n          name: \"String\"\n        }\n      },\n      family: {\n        serializedName: \"family\",\n        type: {\n          name: \"String\"\n        }\n      },\n      capacity: {\n        serializedName: \"capacity\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Resource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Resource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      }\n    }\n  }\n};\n\nexport const NamespacePatchParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NamespacePatchParameters\",\n    modelProperties: {\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      }\n    }\n  }\n};\n\nexport const SharedAccessAuthorizationRuleCreateOrUpdateParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SharedAccessAuthorizationRuleCreateOrUpdateParameters\",\n    modelProperties: {\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"SharedAccessAuthorizationRuleProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const SharedAccessAuthorizationRuleProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SharedAccessAuthorizationRuleProperties\",\n    modelProperties: {\n      rights: {\n        serializedName: \"rights\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Enum\",\n              allowedValues: [\"Manage\", \"Send\", \"Listen\"]\n            }\n          }\n        }\n      },\n      primaryKey: {\n        serializedName: \"primaryKey\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      secondaryKey: {\n        serializedName: \"secondaryKey\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      keyName: {\n        serializedName: \"keyName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      claimType: {\n        serializedName: \"claimType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      claimValue: {\n        serializedName: \"claimValue\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      modifiedTime: {\n        serializedName: \"modifiedTime\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      createdTime: {\n        serializedName: \"createdTime\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      revision: {\n        serializedName: \"revision\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const NamespaceListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NamespaceListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"NamespaceResource\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SharedAccessAuthorizationRuleListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SharedAccessAuthorizationRuleListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SharedAccessAuthorizationRuleResource\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceListKeys: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceListKeys\",\n    modelProperties: {\n      primaryConnectionString: {\n        serializedName: \"primaryConnectionString\",\n        type: {\n          name: \"String\"\n        }\n      },\n      secondaryConnectionString: {\n        serializedName: \"secondaryConnectionString\",\n        type: {\n          name: \"String\"\n        }\n      },\n      primaryKey: {\n        serializedName: \"primaryKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      secondaryKey: {\n        serializedName: \"secondaryKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      keyName: {\n        serializedName: \"keyName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PolicykeyResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PolicykeyResource\",\n    modelProperties: {\n      policyKey: {\n        serializedName: \"policyKey\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ApnsCredential: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ApnsCredential\",\n    modelProperties: {\n      apnsCertificate: {\n        serializedName: \"properties.apnsCertificate\",\n        type: {\n          name: \"String\"\n        }\n      },\n      certificateKey: {\n        serializedName: \"properties.certificateKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      endpoint: {\n        serializedName: \"properties.endpoint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      thumbprint: {\n        serializedName: \"properties.thumbprint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      keyId: {\n        serializedName: \"properties.keyId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      appName: {\n        serializedName: \"properties.appName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      appId: {\n        serializedName: \"properties.appId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      token: {\n        serializedName: \"properties.token\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const WnsCredential: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WnsCredential\",\n    modelProperties: {\n      packageSid: {\n        serializedName: \"properties.packageSid\",\n        type: {\n          name: \"String\"\n        }\n      },\n      secretKey: {\n        serializedName: \"properties.secretKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      windowsLiveEndpoint: {\n        serializedName: \"properties.windowsLiveEndpoint\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GcmCredential: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GcmCredential\",\n    modelProperties: {\n      gcmEndpoint: {\n        serializedName: \"properties.gcmEndpoint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      googleApiKey: {\n        serializedName: \"properties.googleApiKey\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MpnsCredential: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MpnsCredential\",\n    modelProperties: {\n      mpnsCertificate: {\n        serializedName: \"properties.mpnsCertificate\",\n        type: {\n          name: \"String\"\n        }\n      },\n      certificateKey: {\n        serializedName: \"properties.certificateKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      thumbprint: {\n        serializedName: \"properties.thumbprint\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AdmCredential: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AdmCredential\",\n    modelProperties: {\n      clientId: {\n        serializedName: \"properties.clientId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientSecret: {\n        serializedName: \"properties.clientSecret\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authTokenUrl: {\n        serializedName: \"properties.authTokenUrl\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BaiduCredential: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BaiduCredential\",\n    modelProperties: {\n      baiduApiKey: {\n        serializedName: \"properties.baiduApiKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      baiduEndPoint: {\n        serializedName: \"properties.baiduEndPoint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      baiduSecretKey: {\n        serializedName: \"properties.baiduSecretKey\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NotificationHubListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NotificationHubListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"NotificationHubResource\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SubResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SubResource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CheckAvailabilityResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CheckAvailabilityResult\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      isAvailiable: {\n        serializedName: \"isAvailiable\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const NamespaceCreateOrUpdateParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NamespaceCreateOrUpdateParameters\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      namePropertiesName: {\n        serializedName: \"properties.name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      region: {\n        serializedName: \"properties.region\",\n        type: {\n          name: \"String\"\n        }\n      },\n      metricId: {\n        serializedName: \"properties.metricId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"properties.status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdAt: {\n        serializedName: \"properties.createdAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      updatedAt: {\n        serializedName: \"properties.updatedAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      serviceBusEndpoint: {\n        serializedName: \"properties.serviceBusEndpoint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      subscriptionId: {\n        serializedName: \"properties.subscriptionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      scaleUnit: {\n        serializedName: \"properties.scaleUnit\",\n        type: {\n          name: \"String\"\n        }\n      },\n      enabled: {\n        serializedName: \"properties.enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      critical: {\n        serializedName: \"properties.critical\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      dataCenter: {\n        serializedName: \"properties.dataCenter\",\n        type: {\n          name: \"String\"\n        }\n      },\n      namespaceType: {\n        serializedName: \"properties.namespaceType\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Messaging\", \"NotificationHub\"]\n        }\n      }\n    }\n  }\n};\n\nexport const NamespaceResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NamespaceResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      namePropertiesName: {\n        serializedName: \"properties.name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      region: {\n        serializedName: \"properties.region\",\n        type: {\n          name: \"String\"\n        }\n      },\n      metricId: {\n        serializedName: \"properties.metricId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"properties.status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdAt: {\n        serializedName: \"properties.createdAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      updatedAt: {\n        serializedName: \"properties.updatedAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      serviceBusEndpoint: {\n        serializedName: \"properties.serviceBusEndpoint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      subscriptionId: {\n        serializedName: \"properties.subscriptionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      scaleUnit: {\n        serializedName: \"properties.scaleUnit\",\n        type: {\n          name: \"String\"\n        }\n      },\n      enabled: {\n        serializedName: \"properties.enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      critical: {\n        serializedName: \"properties.critical\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      dataCenter: {\n        serializedName: \"properties.dataCenter\",\n        type: {\n          name: \"String\"\n        }\n      },\n      namespaceType: {\n        serializedName: \"properties.namespaceType\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Messaging\", \"NotificationHub\"]\n        }\n      }\n    }\n  }\n};\n\nexport const SharedAccessAuthorizationRuleResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SharedAccessAuthorizationRuleResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      rights: {\n        serializedName: \"properties.rights\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Enum\",\n              allowedValues: [\"Manage\", \"Send\", \"Listen\"]\n            }\n          }\n        }\n      },\n      primaryKey: {\n        serializedName: \"properties.primaryKey\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      secondaryKey: {\n        serializedName: \"properties.secondaryKey\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      keyName: {\n        serializedName: \"properties.keyName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      claimType: {\n        serializedName: \"properties.claimType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      claimValue: {\n        serializedName: \"properties.claimValue\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      modifiedTime: {\n        serializedName: \"properties.modifiedTime\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      createdTime: {\n        serializedName: \"properties.createdTime\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      revision: {\n        serializedName: \"properties.revision\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const NotificationHubCreateOrUpdateParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NotificationHubCreateOrUpdateParameters\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      namePropertiesName: {\n        serializedName: \"properties.name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      registrationTtl: {\n        serializedName: \"properties.registrationTtl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authorizationRules: {\n        serializedName: \"properties.authorizationRules\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SharedAccessAuthorizationRuleProperties\"\n            }\n          }\n        }\n      },\n      apnsCredential: {\n        serializedName: \"properties.apnsCredential\",\n        type: {\n          name: \"Composite\",\n          className: \"ApnsCredential\"\n        }\n      },\n      wnsCredential: {\n        serializedName: \"properties.wnsCredential\",\n        type: {\n          name: \"Composite\",\n          className: \"WnsCredential\"\n        }\n      },\n      gcmCredential: {\n        serializedName: \"properties.gcmCredential\",\n        type: {\n          name: \"Composite\",\n          className: \"GcmCredential\"\n        }\n      },\n      mpnsCredential: {\n        serializedName: \"properties.mpnsCredential\",\n        type: {\n          name: \"Composite\",\n          className: \"MpnsCredential\"\n        }\n      },\n      admCredential: {\n        serializedName: \"properties.admCredential\",\n        type: {\n          name: \"Composite\",\n          className: \"AdmCredential\"\n        }\n      },\n      baiduCredential: {\n        serializedName: \"properties.baiduCredential\",\n        type: {\n          name: \"Composite\",\n          className: \"BaiduCredential\"\n        }\n      }\n    }\n  }\n};\n\nexport const NotificationHubResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NotificationHubResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      namePropertiesName: {\n        serializedName: \"properties.name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      registrationTtl: {\n        serializedName: \"properties.registrationTtl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authorizationRules: {\n        serializedName: \"properties.authorizationRules\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SharedAccessAuthorizationRuleProperties\"\n            }\n          }\n        }\n      },\n      apnsCredential: {\n        serializedName: \"properties.apnsCredential\",\n        type: {\n          name: \"Composite\",\n          className: \"ApnsCredential\"\n        }\n      },\n      wnsCredential: {\n        serializedName: \"properties.wnsCredential\",\n        type: {\n          name: \"Composite\",\n          className: \"WnsCredential\"\n        }\n      },\n      gcmCredential: {\n        serializedName: \"properties.gcmCredential\",\n        type: {\n          name: \"Composite\",\n          className: \"GcmCredential\"\n        }\n      },\n      mpnsCredential: {\n        serializedName: \"properties.mpnsCredential\",\n        type: {\n          name: \"Composite\",\n          className: \"MpnsCredential\"\n        }\n      },\n      admCredential: {\n        serializedName: \"properties.admCredential\",\n        type: {\n          name: \"Composite\",\n          className: \"AdmCredential\"\n        }\n      },\n      baiduCredential: {\n        serializedName: \"properties.baiduCredential\",\n        type: {\n          name: \"Composite\",\n          className: \"BaiduCredential\"\n        }\n      }\n    }\n  }\n};\n\nexport const NotificationHubPatchParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NotificationHubPatchParameters\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      namePropertiesName: {\n        serializedName: \"properties.name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      registrationTtl: {\n        serializedName: \"properties.registrationTtl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authorizationRules: {\n        serializedName: \"properties.authorizationRules\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SharedAccessAuthorizationRuleProperties\"\n            }\n          }\n        }\n      },\n      apnsCredential: {\n        serializedName: \"properties.apnsCredential\",\n        type: {\n          name: \"Composite\",\n          className: \"ApnsCredential\"\n        }\n      },\n      wnsCredential: {\n        serializedName: \"properties.wnsCredential\",\n        type: {\n          name: \"Composite\",\n          className: \"WnsCredential\"\n        }\n      },\n      gcmCredential: {\n        serializedName: \"properties.gcmCredential\",\n        type: {\n          name: \"Composite\",\n          className: \"GcmCredential\"\n        }\n      },\n      mpnsCredential: {\n        serializedName: \"properties.mpnsCredential\",\n        type: {\n          name: \"Composite\",\n          className: \"MpnsCredential\"\n        }\n      },\n      admCredential: {\n        serializedName: \"properties.admCredential\",\n        type: {\n          name: \"Composite\",\n          className: \"AdmCredential\"\n        }\n      },\n      baiduCredential: {\n        serializedName: \"properties.baiduCredential\",\n        type: {\n          name: \"Composite\",\n          className: \"BaiduCredential\"\n        }\n      }\n    }\n  }\n};\n\nexport const DebugSendResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DebugSendResponse\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      success: {\n        serializedName: \"properties.success\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      failure: {\n        serializedName: \"properties.failure\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      results: {\n        serializedName: \"properties.results\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const PnsCredentialsResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PnsCredentialsResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      apnsCredential: {\n        serializedName: \"properties.apnsCredential\",\n        type: {\n          name: \"Composite\",\n          className: \"ApnsCredential\"\n        }\n      },\n      wnsCredential: {\n        serializedName: \"properties.wnsCredential\",\n        type: {\n          name: \"Composite\",\n          className: \"WnsCredential\"\n        }\n      },\n      gcmCredential: {\n        serializedName: \"properties.gcmCredential\",\n        type: {\n          name: \"Composite\",\n          className: \"GcmCredential\"\n        }\n      },\n      mpnsCredential: {\n        serializedName: \"properties.mpnsCredential\",\n        type: {\n          name: \"Composite\",\n          className: \"MpnsCredential\"\n        }\n      },\n      admCredential: {\n        serializedName: \"properties.admCredential\",\n        type: {\n          name: \"Composite\",\n          className: \"AdmCredential\"\n        }\n      },\n      baiduCredential: {\n        serializedName: \"properties.baiduCredential\",\n        type: {\n          name: \"Composite\",\n          className: \"BaiduCredential\"\n        }\n      }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter\n} from \"@azure/core-client\";\nimport {\n  CheckAvailabilityParameters as CheckAvailabilityParametersMapper,\n  NamespaceCreateOrUpdateParameters as NamespaceCreateOrUpdateParametersMapper,\n  NamespacePatchParameters as NamespacePatchParametersMapper,\n  SharedAccessAuthorizationRuleCreateOrUpdateParameters as SharedAccessAuthorizationRuleCreateOrUpdateParametersMapper,\n  PolicykeyResource as PolicykeyResourceMapper,\n  NotificationHubCreateOrUpdateParameters as NotificationHubCreateOrUpdateParametersMapper,\n  NotificationHubPatchParameters as NotificationHubPatchParametersMapper\n} from \"../models/mappers\";\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2017-04-01\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const nextLink: OperationURLParameter = {\n  parameterPath: \"nextLink\",\n  mapper: {\n    serializedName: \"nextLink\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: CheckAvailabilityParametersMapper\n};\n\nexport const subscriptionId: OperationURLParameter = {\n  parameterPath: \"subscriptionId\",\n  mapper: {\n    serializedName: \"subscriptionId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters1: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: NamespaceCreateOrUpdateParametersMapper\n};\n\nexport const resourceGroupName: OperationURLParameter = {\n  parameterPath: \"resourceGroupName\",\n  mapper: {\n    serializedName: \"resourceGroupName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const namespaceName: OperationURLParameter = {\n  parameterPath: \"namespaceName\",\n  mapper: {\n    serializedName: \"namespaceName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters2: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: NamespacePatchParametersMapper\n};\n\nexport const parameters3: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: SharedAccessAuthorizationRuleCreateOrUpdateParametersMapper\n};\n\nexport const authorizationRuleName: OperationURLParameter = {\n  parameterPath: \"authorizationRuleName\",\n  mapper: {\n    serializedName: \"authorizationRuleName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters4: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: PolicykeyResourceMapper\n};\n\nexport const parameters5: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: NotificationHubCreateOrUpdateParametersMapper\n};\n\nexport const notificationHubName: OperationURLParameter = {\n  parameterPath: \"notificationHubName\",\n  mapper: {\n    serializedName: \"notificationHubName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters6: OperationParameter = {\n  parameterPath: [\"options\", \"parameters\"],\n  mapper: NotificationHubPatchParametersMapper\n};\n\nexport const parameters7: OperationParameter = {\n  parameterPath: [\"options\", \"parameters\"],\n  mapper: {\n    serializedName: \"parameters\",\n    type: {\n      name: \"Dictionary\",\n      value: { type: { name: \"any\" } }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Operations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { NotificationHubsManagementClient } from \"../notificationHubsManagementClient\";\nimport {\n  Operation,\n  OperationsListNextOptionalParams,\n  OperationsListOptionalParams,\n  OperationsListResponse,\n  OperationsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Operations operations. */\nexport class OperationsImpl implements Operations {\n  private readonly client: NotificationHubsManagementClient;\n\n  /**\n   * Initialize a new instance of the class Operations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: NotificationHubsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all of the available NotificationHubs REST API operations.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: OperationsListOptionalParams\n  ): PagedAsyncIterableIterator<Operation> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: OperationsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Operation[]> {\n    let result: OperationsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: OperationsListOptionalParams\n  ): AsyncIterableIterator<Operation> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all of the available NotificationHubs REST API operations.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: OperationsListOptionalParams\n  ): Promise<OperationsListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: OperationsListNextOptionalParams\n  ): Promise<OperationsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.NotificationHubs/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { LongRunningOperation, LroResponse } from \"@azure/core-lro\";\n\nexport class LroImpl<T> implements LongRunningOperation<T> {\n  constructor(\n    private sendOperationFn: (args: any, spec: any) => Promise<LroResponse<T>>,\n    private args: Record<string, unknown>,\n    private spec: {\n      readonly requestBody?: unknown;\n      readonly path?: string;\n      readonly httpMethod: string;\n    } & Record<string, any>,\n    public requestPath: string = spec.path!,\n    public requestMethod: string = spec.httpMethod\n  ) {}\n  public async sendInitialRequest(): Promise<LroResponse<T>> {\n    return this.sendOperationFn(this.args, this.spec);\n  }\n  public async sendPollRequest(path: string): Promise<LroResponse<T>> {\n    const { requestBody, ...restSpec } = this.spec;\n    return this.sendOperationFn(this.args, {\n      ...restSpec,\n      path,\n      httpMethod: \"GET\"\n    });\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Namespaces } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { NotificationHubsManagementClient } from \"../notificationHubsManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  NamespaceResource,\n  NamespacesListNextOptionalParams,\n  NamespacesListOptionalParams,\n  NamespacesListResponse,\n  NamespacesListAllNextOptionalParams,\n  NamespacesListAllOptionalParams,\n  NamespacesListAllResponse,\n  SharedAccessAuthorizationRuleResource,\n  NamespacesListAuthorizationRulesNextOptionalParams,\n  NamespacesListAuthorizationRulesOptionalParams,\n  NamespacesListAuthorizationRulesResponse,\n  CheckAvailabilityParameters,\n  NamespacesCheckAvailabilityOptionalParams,\n  NamespacesCheckAvailabilityResponse,\n  NamespaceCreateOrUpdateParameters,\n  NamespacesCreateOrUpdateOptionalParams,\n  NamespacesCreateOrUpdateResponse,\n  NamespacePatchParameters,\n  NamespacesPatchOptionalParams,\n  NamespacesPatchResponse,\n  NamespacesDeleteOptionalParams,\n  NamespacesGetOptionalParams,\n  NamespacesGetResponse,\n  SharedAccessAuthorizationRuleCreateOrUpdateParameters,\n  NamespacesCreateOrUpdateAuthorizationRuleOptionalParams,\n  NamespacesCreateOrUpdateAuthorizationRuleResponse,\n  NamespacesDeleteAuthorizationRuleOptionalParams,\n  NamespacesGetAuthorizationRuleOptionalParams,\n  NamespacesGetAuthorizationRuleResponse,\n  NamespacesListKeysOptionalParams,\n  NamespacesListKeysResponse,\n  PolicykeyResource,\n  NamespacesRegenerateKeysOptionalParams,\n  NamespacesRegenerateKeysResponse,\n  NamespacesListNextResponse,\n  NamespacesListAllNextResponse,\n  NamespacesListAuthorizationRulesNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Namespaces operations. */\nexport class NamespacesImpl implements Namespaces {\n  private readonly client: NotificationHubsManagementClient;\n\n  /**\n   * Initialize a new instance of the class Namespaces class.\n   * @param client Reference to the service client\n   */\n  constructor(client: NotificationHubsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists the available namespaces within a resourceGroup.\n   * @param resourceGroupName The name of the resource group. If resourceGroupName value is null the\n   *                          method lists all the namespaces within subscription\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    options?: NamespacesListOptionalParams\n  ): PagedAsyncIterableIterator<NamespaceResource> {\n    const iter = this.listPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(resourceGroupName, options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    options?: NamespacesListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<NamespaceResource[]> {\n    let result: NamespacesListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(resourceGroupName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    options?: NamespacesListOptionalParams\n  ): AsyncIterableIterator<NamespaceResource> {\n    for await (const page of this.listPagingPage(resourceGroupName, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all the available namespaces within the subscription irrespective of the resourceGroups.\n   * @param options The options parameters.\n   */\n  public listAll(\n    options?: NamespacesListAllOptionalParams\n  ): PagedAsyncIterableIterator<NamespaceResource> {\n    const iter = this.listAllPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listAllPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listAllPagingPage(\n    options?: NamespacesListAllOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<NamespaceResource[]> {\n    let result: NamespacesListAllResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listAll(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listAllNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listAllPagingAll(\n    options?: NamespacesListAllOptionalParams\n  ): AsyncIterableIterator<NamespaceResource> {\n    for await (const page of this.listAllPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets the authorization rules for a namespace.\n   * @param resourceGroupName The name of the resource group.\n   * @param namespaceName The namespace name\n   * @param options The options parameters.\n   */\n  public listAuthorizationRules(\n    resourceGroupName: string,\n    namespaceName: string,\n    options?: NamespacesListAuthorizationRulesOptionalParams\n  ): PagedAsyncIterableIterator<SharedAccessAuthorizationRuleResource> {\n    const iter = this.listAuthorizationRulesPagingAll(\n      resourceGroupName,\n      namespaceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listAuthorizationRulesPagingPage(\n          resourceGroupName,\n          namespaceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listAuthorizationRulesPagingPage(\n    resourceGroupName: string,\n    namespaceName: string,\n    options?: NamespacesListAuthorizationRulesOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<SharedAccessAuthorizationRuleResource[]> {\n    let result: NamespacesListAuthorizationRulesResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listAuthorizationRules(\n        resourceGroupName,\n        namespaceName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listAuthorizationRulesNext(\n        resourceGroupName,\n        namespaceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listAuthorizationRulesPagingAll(\n    resourceGroupName: string,\n    namespaceName: string,\n    options?: NamespacesListAuthorizationRulesOptionalParams\n  ): AsyncIterableIterator<SharedAccessAuthorizationRuleResource> {\n    for await (const page of this.listAuthorizationRulesPagingPage(\n      resourceGroupName,\n      namespaceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Checks the availability of the given service namespace across all Azure subscriptions. This is\n   * useful because the domain name is created based on the service namespace name.\n   * @param parameters The namespace name.\n   * @param options The options parameters.\n   */\n  checkAvailability(\n    parameters: CheckAvailabilityParameters,\n    options?: NamespacesCheckAvailabilityOptionalParams\n  ): Promise<NamespacesCheckAvailabilityResponse> {\n    return this.client.sendOperationRequest(\n      { parameters, options },\n      checkAvailabilityOperationSpec\n    );\n  }\n\n  /**\n   * Creates/Updates a service namespace. Once created, this namespace's resource manifest is immutable.\n   * This operation is idempotent.\n   * @param resourceGroupName The name of the resource group.\n   * @param namespaceName The namespace name.\n   * @param parameters Parameters supplied to create a Namespace Resource.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    namespaceName: string,\n    parameters: NamespaceCreateOrUpdateParameters,\n    options?: NamespacesCreateOrUpdateOptionalParams\n  ): Promise<NamespacesCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, namespaceName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Patches the existing namespace\n   * @param resourceGroupName The name of the resource group.\n   * @param namespaceName The namespace name.\n   * @param parameters Parameters supplied to patch a Namespace Resource.\n   * @param options The options parameters.\n   */\n  patch(\n    resourceGroupName: string,\n    namespaceName: string,\n    parameters: NamespacePatchParameters,\n    options?: NamespacesPatchOptionalParams\n  ): Promise<NamespacesPatchResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, namespaceName, parameters, options },\n      patchOperationSpec\n    );\n  }\n\n  /**\n   * Deletes an existing namespace. This operation also removes all associated notificationHubs under the\n   * namespace.\n   * @param resourceGroupName The name of the resource group.\n   * @param namespaceName The namespace name.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    namespaceName: string,\n    options?: NamespacesDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, namespaceName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes an existing namespace. This operation also removes all associated notificationHubs under the\n   * namespace.\n   * @param resourceGroupName The name of the resource group.\n   * @param namespaceName The namespace name.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    namespaceName: string,\n    options?: NamespacesDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      namespaceName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Returns the description for the specified namespace.\n   * @param resourceGroupName The name of the resource group.\n   * @param namespaceName The namespace name.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    namespaceName: string,\n    options?: NamespacesGetOptionalParams\n  ): Promise<NamespacesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, namespaceName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates an authorization rule for a namespace\n   * @param resourceGroupName The name of the resource group.\n   * @param namespaceName The namespace name.\n   * @param authorizationRuleName Authorization Rule Name.\n   * @param parameters The shared access authorization rule.\n   * @param options The options parameters.\n   */\n  createOrUpdateAuthorizationRule(\n    resourceGroupName: string,\n    namespaceName: string,\n    authorizationRuleName: string,\n    parameters: SharedAccessAuthorizationRuleCreateOrUpdateParameters,\n    options?: NamespacesCreateOrUpdateAuthorizationRuleOptionalParams\n  ): Promise<NamespacesCreateOrUpdateAuthorizationRuleResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        namespaceName,\n        authorizationRuleName,\n        parameters,\n        options\n      },\n      createOrUpdateAuthorizationRuleOperationSpec\n    );\n  }\n\n  /**\n   * Deletes a namespace authorization rule\n   * @param resourceGroupName The name of the resource group.\n   * @param namespaceName The namespace name.\n   * @param authorizationRuleName Authorization Rule Name.\n   * @param options The options parameters.\n   */\n  deleteAuthorizationRule(\n    resourceGroupName: string,\n    namespaceName: string,\n    authorizationRuleName: string,\n    options?: NamespacesDeleteAuthorizationRuleOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, namespaceName, authorizationRuleName, options },\n      deleteAuthorizationRuleOperationSpec\n    );\n  }\n\n  /**\n   * Gets an authorization rule for a namespace by name.\n   * @param resourceGroupName The name of the resource group.\n   * @param namespaceName The namespace name\n   * @param authorizationRuleName Authorization rule name.\n   * @param options The options parameters.\n   */\n  getAuthorizationRule(\n    resourceGroupName: string,\n    namespaceName: string,\n    authorizationRuleName: string,\n    options?: NamespacesGetAuthorizationRuleOptionalParams\n  ): Promise<NamespacesGetAuthorizationRuleResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, namespaceName, authorizationRuleName, options },\n      getAuthorizationRuleOperationSpec\n    );\n  }\n\n  /**\n   * Lists the available namespaces within a resourceGroup.\n   * @param resourceGroupName The name of the resource group. If resourceGroupName value is null the\n   *                          method lists all the namespaces within subscription\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    options?: NamespacesListOptionalParams\n  ): Promise<NamespacesListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Lists all the available namespaces within the subscription irrespective of the resourceGroups.\n   * @param options The options parameters.\n   */\n  private _listAll(\n    options?: NamespacesListAllOptionalParams\n  ): Promise<NamespacesListAllResponse> {\n    return this.client.sendOperationRequest({ options }, listAllOperationSpec);\n  }\n\n  /**\n   * Gets the authorization rules for a namespace.\n   * @param resourceGroupName The name of the resource group.\n   * @param namespaceName The namespace name\n   * @param options The options parameters.\n   */\n  private _listAuthorizationRules(\n    resourceGroupName: string,\n    namespaceName: string,\n    options?: NamespacesListAuthorizationRulesOptionalParams\n  ): Promise<NamespacesListAuthorizationRulesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, namespaceName, options },\n      listAuthorizationRulesOperationSpec\n    );\n  }\n\n  /**\n   * Gets the Primary and Secondary ConnectionStrings to the namespace\n   * @param resourceGroupName The name of the resource group.\n   * @param namespaceName The namespace name.\n   * @param authorizationRuleName The connection string of the namespace for the specified\n   *                              authorizationRule.\n   * @param options The options parameters.\n   */\n  listKeys(\n    resourceGroupName: string,\n    namespaceName: string,\n    authorizationRuleName: string,\n    options?: NamespacesListKeysOptionalParams\n  ): Promise<NamespacesListKeysResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, namespaceName, authorizationRuleName, options },\n      listKeysOperationSpec\n    );\n  }\n\n  /**\n   * Regenerates the Primary/Secondary Keys to the Namespace Authorization Rule\n   * @param resourceGroupName The name of the resource group.\n   * @param namespaceName The namespace name.\n   * @param authorizationRuleName The connection string of the namespace for the specified\n   *                              authorizationRule.\n   * @param parameters Parameters supplied to regenerate the Namespace Authorization Rule Key.\n   * @param options The options parameters.\n   */\n  regenerateKeys(\n    resourceGroupName: string,\n    namespaceName: string,\n    authorizationRuleName: string,\n    parameters: PolicykeyResource,\n    options?: NamespacesRegenerateKeysOptionalParams\n  ): Promise<NamespacesRegenerateKeysResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        namespaceName,\n        authorizationRuleName,\n        parameters,\n        options\n      },\n      regenerateKeysOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. If resourceGroupName value is null the\n   *                          method lists all the namespaces within subscription\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: NamespacesListNextOptionalParams\n  ): Promise<NamespacesListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n\n  /**\n   * ListAllNext\n   * @param nextLink The nextLink from the previous successful call to the ListAll method.\n   * @param options The options parameters.\n   */\n  private _listAllNext(\n    nextLink: string,\n    options?: NamespacesListAllNextOptionalParams\n  ): Promise<NamespacesListAllNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listAllNextOperationSpec\n    );\n  }\n\n  /**\n   * ListAuthorizationRulesNext\n   * @param resourceGroupName The name of the resource group.\n   * @param namespaceName The namespace name\n   * @param nextLink The nextLink from the previous successful call to the ListAuthorizationRules method.\n   * @param options The options parameters.\n   */\n  private _listAuthorizationRulesNext(\n    resourceGroupName: string,\n    namespaceName: string,\n    nextLink: string,\n    options?: NamespacesListAuthorizationRulesNextOptionalParams\n  ): Promise<NamespacesListAuthorizationRulesNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, namespaceName, nextLink, options },\n      listAuthorizationRulesNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst checkAvailabilityOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.NotificationHubs/checkNamespaceAvailability\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CheckAvailabilityResult\n    }\n  },\n  requestBody: Parameters.parameters,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NamespaceResource\n    },\n    201: {\n      bodyMapper: Mappers.NamespaceResource\n    }\n  },\n  requestBody: Parameters.parameters1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.namespaceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst patchOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NamespaceResource\n    }\n  },\n  requestBody: Parameters.parameters2,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.namespaceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {} },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.namespaceName\n  ],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NamespaceResource\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.namespaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateAuthorizationRuleOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SharedAccessAuthorizationRuleResource\n    }\n  },\n  requestBody: Parameters.parameters3,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.namespaceName,\n    Parameters.authorizationRuleName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteAuthorizationRuleOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 204: {} },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.namespaceName,\n    Parameters.authorizationRuleName\n  ],\n  serializer\n};\nconst getAuthorizationRuleOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SharedAccessAuthorizationRuleResource\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.namespaceName,\n    Parameters.authorizationRuleName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NamespaceListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listAllOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.NotificationHubs/namespaces\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NamespaceListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listAuthorizationRulesOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/AuthorizationRules\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SharedAccessAuthorizationRuleListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.namespaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listKeysOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}/listKeys\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceListKeys\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.namespaceName,\n    Parameters.authorizationRuleName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst regenerateKeysOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}/regenerateKeys\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceListKeys\n    }\n  },\n  requestBody: Parameters.parameters4,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.namespaceName,\n    Parameters.authorizationRuleName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NamespaceListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listAllNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NamespaceListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listAuthorizationRulesNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SharedAccessAuthorizationRuleListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.namespaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { NotificationHubs } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { NotificationHubsManagementClient } from \"../notificationHubsManagementClient\";\nimport {\n  NotificationHubResource,\n  NotificationHubsListNextOptionalParams,\n  NotificationHubsListOptionalParams,\n  NotificationHubsListResponse,\n  SharedAccessAuthorizationRuleResource,\n  NotificationHubsListAuthorizationRulesNextOptionalParams,\n  NotificationHubsListAuthorizationRulesOptionalParams,\n  NotificationHubsListAuthorizationRulesResponse,\n  CheckAvailabilityParameters,\n  NotificationHubsCheckNotificationHubAvailabilityOptionalParams,\n  NotificationHubsCheckNotificationHubAvailabilityResponse,\n  NotificationHubCreateOrUpdateParameters,\n  NotificationHubsCreateOrUpdateOptionalParams,\n  NotificationHubsCreateOrUpdateResponse,\n  NotificationHubsPatchOptionalParams,\n  NotificationHubsPatchResponse,\n  NotificationHubsDeleteOptionalParams,\n  NotificationHubsGetOptionalParams,\n  NotificationHubsGetResponse,\n  NotificationHubsDebugSendOptionalParams,\n  NotificationHubsDebugSendResponse,\n  SharedAccessAuthorizationRuleCreateOrUpdateParameters,\n  NotificationHubsCreateOrUpdateAuthorizationRuleOptionalParams,\n  NotificationHubsCreateOrUpdateAuthorizationRuleResponse,\n  NotificationHubsDeleteAuthorizationRuleOptionalParams,\n  NotificationHubsGetAuthorizationRuleOptionalParams,\n  NotificationHubsGetAuthorizationRuleResponse,\n  NotificationHubsListKeysOptionalParams,\n  NotificationHubsListKeysResponse,\n  PolicykeyResource,\n  NotificationHubsRegenerateKeysOptionalParams,\n  NotificationHubsRegenerateKeysResponse,\n  NotificationHubsGetPnsCredentialsOptionalParams,\n  NotificationHubsGetPnsCredentialsResponse,\n  NotificationHubsListNextResponse,\n  NotificationHubsListAuthorizationRulesNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing NotificationHubs operations. */\nexport class NotificationHubsImpl implements NotificationHubs {\n  private readonly client: NotificationHubsManagementClient;\n\n  /**\n   * Initialize a new instance of the class NotificationHubs class.\n   * @param client Reference to the service client\n   */\n  constructor(client: NotificationHubsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists the notification hubs associated with a namespace.\n   * @param resourceGroupName The name of the resource group.\n   * @param namespaceName The namespace name.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    namespaceName: string,\n    options?: NotificationHubsListOptionalParams\n  ): PagedAsyncIterableIterator<NotificationHubResource> {\n    const iter = this.listPagingAll(resourceGroupName, namespaceName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          namespaceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    namespaceName: string,\n    options?: NotificationHubsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<NotificationHubResource[]> {\n    let result: NotificationHubsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(resourceGroupName, namespaceName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        namespaceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    namespaceName: string,\n    options?: NotificationHubsListOptionalParams\n  ): AsyncIterableIterator<NotificationHubResource> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      namespaceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets the authorization rules for a NotificationHub.\n   * @param resourceGroupName The name of the resource group.\n   * @param namespaceName The namespace name\n   * @param notificationHubName The notification hub name.\n   * @param options The options parameters.\n   */\n  public listAuthorizationRules(\n    resourceGroupName: string,\n    namespaceName: string,\n    notificationHubName: string,\n    options?: NotificationHubsListAuthorizationRulesOptionalParams\n  ): PagedAsyncIterableIterator<SharedAccessAuthorizationRuleResource> {\n    const iter = this.listAuthorizationRulesPagingAll(\n      resourceGroupName,\n      namespaceName,\n      notificationHubName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listAuthorizationRulesPagingPage(\n          resourceGroupName,\n          namespaceName,\n          notificationHubName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listAuthorizationRulesPagingPage(\n    resourceGroupName: string,\n    namespaceName: string,\n    notificationHubName: string,\n    options?: NotificationHubsListAuthorizationRulesOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<SharedAccessAuthorizationRuleResource[]> {\n    let result: NotificationHubsListAuthorizationRulesResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listAuthorizationRules(\n        resourceGroupName,\n        namespaceName,\n        notificationHubName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listAuthorizationRulesNext(\n        resourceGroupName,\n        namespaceName,\n        notificationHubName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listAuthorizationRulesPagingAll(\n    resourceGroupName: string,\n    namespaceName: string,\n    notificationHubName: string,\n    options?: NotificationHubsListAuthorizationRulesOptionalParams\n  ): AsyncIterableIterator<SharedAccessAuthorizationRuleResource> {\n    for await (const page of this.listAuthorizationRulesPagingPage(\n      resourceGroupName,\n      namespaceName,\n      notificationHubName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Checks the availability of the given notificationHub in a namespace.\n   * @param resourceGroupName The name of the resource group.\n   * @param namespaceName The namespace name.\n   * @param parameters The notificationHub name.\n   * @param options The options parameters.\n   */\n  checkNotificationHubAvailability(\n    resourceGroupName: string,\n    namespaceName: string,\n    parameters: CheckAvailabilityParameters,\n    options?: NotificationHubsCheckNotificationHubAvailabilityOptionalParams\n  ): Promise<NotificationHubsCheckNotificationHubAvailabilityResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, namespaceName, parameters, options },\n      checkNotificationHubAvailabilityOperationSpec\n    );\n  }\n\n  /**\n   * Creates/Update a NotificationHub in a namespace.\n   * @param resourceGroupName The name of the resource group.\n   * @param namespaceName The namespace name.\n   * @param notificationHubName The notification hub name.\n   * @param parameters Parameters supplied to the create/update a NotificationHub Resource.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    namespaceName: string,\n    notificationHubName: string,\n    parameters: NotificationHubCreateOrUpdateParameters,\n    options?: NotificationHubsCreateOrUpdateOptionalParams\n  ): Promise<NotificationHubsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        namespaceName,\n        notificationHubName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Patch a NotificationHub in a namespace.\n   * @param resourceGroupName The name of the resource group.\n   * @param namespaceName The namespace name.\n   * @param notificationHubName The notification hub name.\n   * @param options The options parameters.\n   */\n  patch(\n    resourceGroupName: string,\n    namespaceName: string,\n    notificationHubName: string,\n    options?: NotificationHubsPatchOptionalParams\n  ): Promise<NotificationHubsPatchResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, namespaceName, notificationHubName, options },\n      patchOperationSpec\n    );\n  }\n\n  /**\n   * Deletes a notification hub associated with a namespace.\n   * @param resourceGroupName The name of the resource group.\n   * @param namespaceName The namespace name.\n   * @param notificationHubName The notification hub name.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    namespaceName: string,\n    notificationHubName: string,\n    options?: NotificationHubsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, namespaceName, notificationHubName, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Lists the notification hubs associated with a namespace.\n   * @param resourceGroupName The name of the resource group.\n   * @param namespaceName The namespace name.\n   * @param notificationHubName The notification hub name.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    namespaceName: string,\n    notificationHubName: string,\n    options?: NotificationHubsGetOptionalParams\n  ): Promise<NotificationHubsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, namespaceName, notificationHubName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * test send a push notification\n   * @param resourceGroupName The name of the resource group.\n   * @param namespaceName The namespace name.\n   * @param notificationHubName The notification hub name.\n   * @param options The options parameters.\n   */\n  debugSend(\n    resourceGroupName: string,\n    namespaceName: string,\n    notificationHubName: string,\n    options?: NotificationHubsDebugSendOptionalParams\n  ): Promise<NotificationHubsDebugSendResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, namespaceName, notificationHubName, options },\n      debugSendOperationSpec\n    );\n  }\n\n  /**\n   * Creates/Updates an authorization rule for a NotificationHub\n   * @param resourceGroupName The name of the resource group.\n   * @param namespaceName The namespace name.\n   * @param notificationHubName The notification hub name.\n   * @param authorizationRuleName Authorization Rule Name.\n   * @param parameters The shared access authorization rule.\n   * @param options The options parameters.\n   */\n  createOrUpdateAuthorizationRule(\n    resourceGroupName: string,\n    namespaceName: string,\n    notificationHubName: string,\n    authorizationRuleName: string,\n    parameters: SharedAccessAuthorizationRuleCreateOrUpdateParameters,\n    options?: NotificationHubsCreateOrUpdateAuthorizationRuleOptionalParams\n  ): Promise<NotificationHubsCreateOrUpdateAuthorizationRuleResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        namespaceName,\n        notificationHubName,\n        authorizationRuleName,\n        parameters,\n        options\n      },\n      createOrUpdateAuthorizationRuleOperationSpec\n    );\n  }\n\n  /**\n   * Deletes a notificationHub authorization rule\n   * @param resourceGroupName The name of the resource group.\n   * @param namespaceName The namespace name.\n   * @param notificationHubName The notification hub name.\n   * @param authorizationRuleName Authorization Rule Name.\n   * @param options The options parameters.\n   */\n  deleteAuthorizationRule(\n    resourceGroupName: string,\n    namespaceName: string,\n    notificationHubName: string,\n    authorizationRuleName: string,\n    options?: NotificationHubsDeleteAuthorizationRuleOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        namespaceName,\n        notificationHubName,\n        authorizationRuleName,\n        options\n      },\n      deleteAuthorizationRuleOperationSpec\n    );\n  }\n\n  /**\n   * Gets an authorization rule for a NotificationHub by name.\n   * @param resourceGroupName The name of the resource group.\n   * @param namespaceName The namespace name\n   * @param notificationHubName The notification hub name.\n   * @param authorizationRuleName authorization rule name.\n   * @param options The options parameters.\n   */\n  getAuthorizationRule(\n    resourceGroupName: string,\n    namespaceName: string,\n    notificationHubName: string,\n    authorizationRuleName: string,\n    options?: NotificationHubsGetAuthorizationRuleOptionalParams\n  ): Promise<NotificationHubsGetAuthorizationRuleResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        namespaceName,\n        notificationHubName,\n        authorizationRuleName,\n        options\n      },\n      getAuthorizationRuleOperationSpec\n    );\n  }\n\n  /**\n   * Lists the notification hubs associated with a namespace.\n   * @param resourceGroupName The name of the resource group.\n   * @param namespaceName The namespace name.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    namespaceName: string,\n    options?: NotificationHubsListOptionalParams\n  ): Promise<NotificationHubsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, namespaceName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Gets the authorization rules for a NotificationHub.\n   * @param resourceGroupName The name of the resource group.\n   * @param namespaceName The namespace name\n   * @param notificationHubName The notification hub name.\n   * @param options The options parameters.\n   */\n  private _listAuthorizationRules(\n    resourceGroupName: string,\n    namespaceName: string,\n    notificationHubName: string,\n    options?: NotificationHubsListAuthorizationRulesOptionalParams\n  ): Promise<NotificationHubsListAuthorizationRulesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, namespaceName, notificationHubName, options },\n      listAuthorizationRulesOperationSpec\n    );\n  }\n\n  /**\n   * Gets the Primary and Secondary ConnectionStrings to the NotificationHub\n   * @param resourceGroupName The name of the resource group.\n   * @param namespaceName The namespace name.\n   * @param notificationHubName The notification hub name.\n   * @param authorizationRuleName The connection string of the NotificationHub for the specified\n   *                              authorizationRule.\n   * @param options The options parameters.\n   */\n  listKeys(\n    resourceGroupName: string,\n    namespaceName: string,\n    notificationHubName: string,\n    authorizationRuleName: string,\n    options?: NotificationHubsListKeysOptionalParams\n  ): Promise<NotificationHubsListKeysResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        namespaceName,\n        notificationHubName,\n        authorizationRuleName,\n        options\n      },\n      listKeysOperationSpec\n    );\n  }\n\n  /**\n   * Regenerates the Primary/Secondary Keys to the NotificationHub Authorization Rule\n   * @param resourceGroupName The name of the resource group.\n   * @param namespaceName The namespace name.\n   * @param notificationHubName The notification hub name.\n   * @param authorizationRuleName The connection string of the NotificationHub for the specified\n   *                              authorizationRule.\n   * @param parameters Parameters supplied to regenerate the NotificationHub Authorization Rule Key.\n   * @param options The options parameters.\n   */\n  regenerateKeys(\n    resourceGroupName: string,\n    namespaceName: string,\n    notificationHubName: string,\n    authorizationRuleName: string,\n    parameters: PolicykeyResource,\n    options?: NotificationHubsRegenerateKeysOptionalParams\n  ): Promise<NotificationHubsRegenerateKeysResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        namespaceName,\n        notificationHubName,\n        authorizationRuleName,\n        parameters,\n        options\n      },\n      regenerateKeysOperationSpec\n    );\n  }\n\n  /**\n   * Lists the PNS Credentials associated with a notification hub .\n   * @param resourceGroupName The name of the resource group.\n   * @param namespaceName The namespace name.\n   * @param notificationHubName The notification hub name.\n   * @param options The options parameters.\n   */\n  getPnsCredentials(\n    resourceGroupName: string,\n    namespaceName: string,\n    notificationHubName: string,\n    options?: NotificationHubsGetPnsCredentialsOptionalParams\n  ): Promise<NotificationHubsGetPnsCredentialsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, namespaceName, notificationHubName, options },\n      getPnsCredentialsOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group.\n   * @param namespaceName The namespace name.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    namespaceName: string,\n    nextLink: string,\n    options?: NotificationHubsListNextOptionalParams\n  ): Promise<NotificationHubsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, namespaceName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n\n  /**\n   * ListAuthorizationRulesNext\n   * @param resourceGroupName The name of the resource group.\n   * @param namespaceName The namespace name\n   * @param notificationHubName The notification hub name.\n   * @param nextLink The nextLink from the previous successful call to the ListAuthorizationRules method.\n   * @param options The options parameters.\n   */\n  private _listAuthorizationRulesNext(\n    resourceGroupName: string,\n    namespaceName: string,\n    notificationHubName: string,\n    nextLink: string,\n    options?: NotificationHubsListAuthorizationRulesNextOptionalParams\n  ): Promise<NotificationHubsListAuthorizationRulesNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        namespaceName,\n        notificationHubName,\n        nextLink,\n        options\n      },\n      listAuthorizationRulesNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst checkNotificationHubAvailabilityOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/checkNotificationHubAvailability\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CheckAvailabilityResult\n    }\n  },\n  requestBody: Parameters.parameters,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.namespaceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NotificationHubResource\n    },\n    201: {\n      bodyMapper: Mappers.NotificationHubResource\n    }\n  },\n  requestBody: Parameters.parameters5,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.namespaceName,\n    Parameters.notificationHubName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst patchOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NotificationHubResource\n    }\n  },\n  requestBody: Parameters.parameters6,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.namespaceName,\n    Parameters.notificationHubName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {} },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.namespaceName,\n    Parameters.notificationHubName\n  ],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NotificationHubResource\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.namespaceName,\n    Parameters.notificationHubName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst debugSendOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}/debugsend\",\n  httpMethod: \"POST\",\n  responses: {\n    201: {\n      bodyMapper: Mappers.DebugSendResponse\n    }\n  },\n  requestBody: Parameters.parameters7,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.namespaceName,\n    Parameters.notificationHubName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst createOrUpdateAuthorizationRuleOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}/AuthorizationRules/{authorizationRuleName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SharedAccessAuthorizationRuleResource\n    }\n  },\n  requestBody: Parameters.parameters3,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.namespaceName,\n    Parameters.authorizationRuleName,\n    Parameters.notificationHubName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteAuthorizationRuleOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}/AuthorizationRules/{authorizationRuleName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 204: {} },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.namespaceName,\n    Parameters.authorizationRuleName,\n    Parameters.notificationHubName\n  ],\n  serializer\n};\nconst getAuthorizationRuleOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}/AuthorizationRules/{authorizationRuleName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SharedAccessAuthorizationRuleResource\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.namespaceName,\n    Parameters.authorizationRuleName,\n    Parameters.notificationHubName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NotificationHubListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.namespaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listAuthorizationRulesOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}/AuthorizationRules\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SharedAccessAuthorizationRuleListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.namespaceName,\n    Parameters.notificationHubName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listKeysOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}/AuthorizationRules/{authorizationRuleName}/listKeys\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceListKeys\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.namespaceName,\n    Parameters.authorizationRuleName,\n    Parameters.notificationHubName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst regenerateKeysOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}/AuthorizationRules/{authorizationRuleName}/regenerateKeys\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceListKeys\n    }\n  },\n  requestBody: Parameters.parameters4,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.namespaceName,\n    Parameters.authorizationRuleName,\n    Parameters.notificationHubName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getPnsCredentialsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}/pnsCredentials\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PnsCredentialsResource\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.namespaceName,\n    Parameters.notificationHubName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NotificationHubListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.namespaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listAuthorizationRulesNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SharedAccessAuthorizationRuleListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.namespaceName,\n    Parameters.notificationHubName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\nimport {\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest\n} from \"@azure/core-rest-pipeline\";\nimport * as coreAuth from \"@azure/core-auth\";\nimport {\n  OperationsImpl,\n  NamespacesImpl,\n  NotificationHubsImpl\n} from \"./operations\";\nimport {\n  Operations,\n  Namespaces,\n  NotificationHubs\n} from \"./operationsInterfaces\";\nimport { NotificationHubsManagementClientOptionalParams } from \"./models\";\n\nexport class NotificationHubsManagementClient extends coreClient.ServiceClient {\n  $host: string;\n  apiVersion: string;\n  subscriptionId: string;\n\n  /**\n   * Initializes a new instance of the NotificationHubsManagementClient class.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure\n   *                       subscription. The subscription ID forms part of the URI for every service call.\n   * @param options The parameter options\n   */\n  constructor(\n    credentials: coreAuth.TokenCredential,\n    subscriptionId: string,\n    options?: NotificationHubsManagementClientOptionalParams\n  ) {\n    if (credentials === undefined) {\n      throw new Error(\"'credentials' cannot be null\");\n    }\n    if (subscriptionId === undefined) {\n      throw new Error(\"'subscriptionId' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: NotificationHubsManagementClientOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\",\n      credential: credentials\n    };\n\n    const packageDetails = `azsdk-js-arm-notificationhubs/2.1.0`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      endpoint:\n        options.endpoint ?? options.baseUri ?? \"https://management.azure.com\"\n    };\n    super(optionsWithDefaults);\n\n    let bearerTokenAuthenticationPolicyFound: boolean = false;\n    if (options?.pipeline && options.pipeline.getOrderedPolicies().length > 0) {\n      const pipelinePolicies: coreRestPipeline.PipelinePolicy[] = options.pipeline.getOrderedPolicies();\n      bearerTokenAuthenticationPolicyFound = pipelinePolicies.some(\n        (pipelinePolicy) =>\n          pipelinePolicy.name ===\n          coreRestPipeline.bearerTokenAuthenticationPolicyName\n      );\n    }\n    if (\n      !options ||\n      !options.pipeline ||\n      options.pipeline.getOrderedPolicies().length == 0 ||\n      !bearerTokenAuthenticationPolicyFound\n    ) {\n      this.pipeline.removePolicy({\n        name: coreRestPipeline.bearerTokenAuthenticationPolicyName\n      });\n      this.pipeline.addPolicy(\n        coreRestPipeline.bearerTokenAuthenticationPolicy({\n          credential: credentials,\n          scopes:\n            optionsWithDefaults.credentialScopes ??\n            `${optionsWithDefaults.endpoint}/.default`,\n          challengeCallbacks: {\n            authorizeRequestOnChallenge:\n              coreClient.authorizeRequestOnClaimChallenge\n          }\n        })\n      );\n    }\n    // Parameter assignments\n    this.subscriptionId = subscriptionId;\n\n    // Assigning values to Constant parameters\n    this.$host = options.$host || \"https://management.azure.com\";\n    this.apiVersion = options.apiVersion || \"2017-04-01\";\n    this.operations = new OperationsImpl(this);\n    this.namespaces = new NamespacesImpl(this);\n    this.notificationHubs = new NotificationHubsImpl(this);\n    this.addCustomApiVersionPolicy(options.apiVersion);\n  }\n\n  /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */\n  private addCustomApiVersionPolicy(apiVersion?: string) {\n    if (!apiVersion) {\n      return;\n    }\n    const apiVersionPolicy = {\n      name: \"CustomApiVersionPolicy\",\n      async sendRequest(\n        request: PipelineRequest,\n        next: SendRequest\n      ): Promise<PipelineResponse> {\n        const param = request.url.split(\"?\");\n        if (param.length > 1) {\n          const newParams = param[1].split(\"&\").map((item) => {\n            if (item.indexOf(\"api-version\") > -1) {\n              return \"api-version=\" + apiVersion;\n            } else {\n              return item;\n            }\n          });\n          request.url = param[0] + \"?\" + newParams.join(\"&\");\n        }\n        return next(request);\n      }\n    };\n    this.pipeline.addPolicy(apiVersionPolicy);\n  }\n\n  operations: Operations;\n  namespaces: Namespaces;\n  notificationHubs: NotificationHubs;\n}\n"],"names":["KnownSkuName","CheckAvailabilityParametersMapper","NamespaceCreateOrUpdateParametersMapper","NamespacePatchParametersMapper","SharedAccessAuthorizationRuleCreateOrUpdateParametersMapper","PolicykeyResourceMapper","NotificationHubCreateOrUpdateParametersMapper","NotificationHubPatchParametersMapper","__await","__asyncValues","__asyncDelegator","listOperationSpec","listNextOperationSpec","serializer","coreClient","Mappers.OperationListResult","Mappers.ErrorResponse","Parameters.apiVersion","Parameters.$host","Parameters.accept","Parameters.nextLink","__rest","createOrUpdateOperationSpec","patchOperationSpec","__awaiter","deleteOperationSpec","LroEngine","getOperationSpec","createOrUpdateAuthorizationRuleOperationSpec","deleteAuthorizationRuleOperationSpec","getAuthorizationRuleOperationSpec","listAuthorizationRulesOperationSpec","listKeysOperationSpec","regenerateKeysOperationSpec","listAuthorizationRulesNextOperationSpec","Mappers.CheckAvailabilityResult","Parameters.parameters","Parameters.subscriptionId","Parameters.contentType","Mappers.NamespaceResource","Parameters.parameters1","Parameters.resourceGroupName","Parameters.namespaceName","Parameters.parameters2","Mappers.SharedAccessAuthorizationRuleResource","Parameters.parameters3","Parameters.authorizationRuleName","Mappers.NamespaceListResult","Mappers.SharedAccessAuthorizationRuleListResult","Mappers.ResourceListKeys","Parameters.parameters4","Mappers.NotificationHubResource","Parameters.parameters5","Parameters.notificationHubName","Parameters.parameters6","Mappers.DebugSendResponse","Parameters.parameters7","Mappers.NotificationHubListResult","Mappers.PnsCredentialsResource","coreRestPipeline"],"mappings":"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"}