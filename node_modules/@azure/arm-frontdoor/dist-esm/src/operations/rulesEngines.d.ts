import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { RulesEngines } from "../operationsInterfaces";
import { FrontDoorManagementClient } from "../frontDoorManagementClient";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import { RulesEngine, RulesEnginesListByFrontDoorOptionalParams, RulesEnginesGetOptionalParams, RulesEnginesGetResponse, RulesEnginesCreateOrUpdateOptionalParams, RulesEnginesCreateOrUpdateResponse, RulesEnginesDeleteOptionalParams } from "../models";
/** Class containing RulesEngines operations. */
export declare class RulesEnginesImpl implements RulesEngines {
    private readonly client;
    /**
     * Initialize a new instance of the class RulesEngines class.
     * @param client Reference to the service client
     */
    constructor(client: FrontDoorManagementClient);
    /**
     * Lists all of the Rules Engine Configurations within a Front Door.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param frontDoorName Name of the Front Door which is globally unique.
     * @param options The options parameters.
     */
    listByFrontDoor(resourceGroupName: string, frontDoorName: string, options?: RulesEnginesListByFrontDoorOptionalParams): PagedAsyncIterableIterator<RulesEngine>;
    private listByFrontDoorPagingPage;
    private listByFrontDoorPagingAll;
    /**
     * Lists all of the Rules Engine Configurations within a Front Door.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param frontDoorName Name of the Front Door which is globally unique.
     * @param options The options parameters.
     */
    private _listByFrontDoor;
    /**
     * Gets a Rules Engine Configuration with the specified name within the specified Front Door.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param frontDoorName Name of the Front Door which is globally unique.
     * @param rulesEngineName Name of the Rules Engine which is unique within the Front Door.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, frontDoorName: string, rulesEngineName: string, options?: RulesEnginesGetOptionalParams): Promise<RulesEnginesGetResponse>;
    /**
     * Creates a new Rules Engine Configuration with the specified name within the specified Front Door.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param frontDoorName Name of the Front Door which is globally unique.
     * @param rulesEngineName Name of the Rules Engine which is unique within the Front Door.
     * @param rulesEngineParameters Rules Engine Configuration properties needed to create a new Rules
     *                              Engine Configuration.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, frontDoorName: string, rulesEngineName: string, rulesEngineParameters: RulesEngine, options?: RulesEnginesCreateOrUpdateOptionalParams): Promise<SimplePollerLike<OperationState<RulesEnginesCreateOrUpdateResponse>, RulesEnginesCreateOrUpdateResponse>>;
    /**
     * Creates a new Rules Engine Configuration with the specified name within the specified Front Door.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param frontDoorName Name of the Front Door which is globally unique.
     * @param rulesEngineName Name of the Rules Engine which is unique within the Front Door.
     * @param rulesEngineParameters Rules Engine Configuration properties needed to create a new Rules
     *                              Engine Configuration.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, frontDoorName: string, rulesEngineName: string, rulesEngineParameters: RulesEngine, options?: RulesEnginesCreateOrUpdateOptionalParams): Promise<RulesEnginesCreateOrUpdateResponse>;
    /**
     * Deletes an existing Rules Engine Configuration with the specified parameters.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param frontDoorName Name of the Front Door which is globally unique.
     * @param rulesEngineName Name of the Rules Engine which is unique within the Front Door.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, frontDoorName: string, rulesEngineName: string, options?: RulesEnginesDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Deletes an existing Rules Engine Configuration with the specified parameters.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param frontDoorName Name of the Front Door which is globally unique.
     * @param rulesEngineName Name of the Rules Engine which is unique within the Front Door.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, frontDoorName: string, rulesEngineName: string, options?: RulesEnginesDeleteOptionalParams): Promise<void>;
    /**
     * ListByFrontDoorNext
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param frontDoorName Name of the Front Door which is globally unique.
     * @param nextLink The nextLink from the previous successful call to the ListByFrontDoor method.
     * @param options The options parameters.
     */
    private _listByFrontDoorNext;
}
//# sourceMappingURL=rulesEngines.d.ts.map