import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { FrontendEndpoints } from "../operationsInterfaces";
import { FrontDoorManagementClient } from "../frontDoorManagementClient";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import { FrontendEndpoint, FrontendEndpointsListByFrontDoorOptionalParams, FrontendEndpointsGetOptionalParams, FrontendEndpointsGetResponse, CustomHttpsConfiguration, FrontendEndpointsEnableHttpsOptionalParams, FrontendEndpointsDisableHttpsOptionalParams } from "../models";
/** Class containing FrontendEndpoints operations. */
export declare class FrontendEndpointsImpl implements FrontendEndpoints {
    private readonly client;
    /**
     * Initialize a new instance of the class FrontendEndpoints class.
     * @param client Reference to the service client
     */
    constructor(client: FrontDoorManagementClient);
    /**
     * Lists all of the frontend endpoints within a Front Door.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param frontDoorName Name of the Front Door which is globally unique.
     * @param options The options parameters.
     */
    listByFrontDoor(resourceGroupName: string, frontDoorName: string, options?: FrontendEndpointsListByFrontDoorOptionalParams): PagedAsyncIterableIterator<FrontendEndpoint>;
    private listByFrontDoorPagingPage;
    private listByFrontDoorPagingAll;
    /**
     * Lists all of the frontend endpoints within a Front Door.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param frontDoorName Name of the Front Door which is globally unique.
     * @param options The options parameters.
     */
    private _listByFrontDoor;
    /**
     * Gets a Frontend endpoint with the specified name within the specified Front Door.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param frontDoorName Name of the Front Door which is globally unique.
     * @param frontendEndpointName Name of the Frontend endpoint which is unique within the Front Door.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, frontDoorName: string, frontendEndpointName: string, options?: FrontendEndpointsGetOptionalParams): Promise<FrontendEndpointsGetResponse>;
    /**
     * Enables a frontendEndpoint for HTTPS traffic
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param frontDoorName Name of the Front Door which is globally unique.
     * @param frontendEndpointName Name of the Frontend endpoint which is unique within the Front Door.
     * @param customHttpsConfiguration The configuration specifying how to enable HTTPS
     * @param options The options parameters.
     */
    beginEnableHttps(resourceGroupName: string, frontDoorName: string, frontendEndpointName: string, customHttpsConfiguration: CustomHttpsConfiguration, options?: FrontendEndpointsEnableHttpsOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Enables a frontendEndpoint for HTTPS traffic
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param frontDoorName Name of the Front Door which is globally unique.
     * @param frontendEndpointName Name of the Frontend endpoint which is unique within the Front Door.
     * @param customHttpsConfiguration The configuration specifying how to enable HTTPS
     * @param options The options parameters.
     */
    beginEnableHttpsAndWait(resourceGroupName: string, frontDoorName: string, frontendEndpointName: string, customHttpsConfiguration: CustomHttpsConfiguration, options?: FrontendEndpointsEnableHttpsOptionalParams): Promise<void>;
    /**
     * Disables a frontendEndpoint for HTTPS traffic
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param frontDoorName Name of the Front Door which is globally unique.
     * @param frontendEndpointName Name of the Frontend endpoint which is unique within the Front Door.
     * @param options The options parameters.
     */
    beginDisableHttps(resourceGroupName: string, frontDoorName: string, frontendEndpointName: string, options?: FrontendEndpointsDisableHttpsOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Disables a frontendEndpoint for HTTPS traffic
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param frontDoorName Name of the Front Door which is globally unique.
     * @param frontendEndpointName Name of the Frontend endpoint which is unique within the Front Door.
     * @param options The options parameters.
     */
    beginDisableHttpsAndWait(resourceGroupName: string, frontDoorName: string, frontendEndpointName: string, options?: FrontendEndpointsDisableHttpsOptionalParams): Promise<void>;
    /**
     * ListByFrontDoorNext
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param frontDoorName Name of the Front Door which is globally unique.
     * @param nextLink The nextLink from the previous successful call to the ListByFrontDoor method.
     * @param options The options parameters.
     */
    private _listByFrontDoorNext;
}
//# sourceMappingURL=frontendEndpoints.d.ts.map