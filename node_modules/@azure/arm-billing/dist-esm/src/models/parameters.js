/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { BillingAccountUpdateRequest as BillingAccountUpdateRequestMapper, AddressDetails as AddressDetailsMapper, Instruction as InstructionMapper, BillingProfile as BillingProfileMapper, InvoiceSection as InvoiceSectionMapper, BillingSubscription as BillingSubscriptionMapper, TransferBillingSubscriptionRequestProperties as TransferBillingSubscriptionRequestPropertiesMapper, Product as ProductMapper, TransferProductRequestProperties as TransferProductRequestPropertiesMapper, Policy as PolicyMapper, CustomerPolicy as CustomerPolicyMapper, BillingProperty as BillingPropertyMapper } from "../models/mappers";
export const accept = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String"
        }
    }
};
export const $host = {
    parameterPath: "$host",
    mapper: {
        serializedName: "$host",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const apiVersion = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2020-05-01",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
export const expand = {
    parameterPath: ["options", "expand"],
    mapper: {
        serializedName: "$expand",
        type: {
            name: "String"
        }
    }
};
export const billingAccountName = {
    parameterPath: "billingAccountName",
    mapper: {
        serializedName: "billingAccountName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const contentType = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String"
        }
    }
};
export const parameters = {
    parameterPath: "parameters",
    mapper: BillingAccountUpdateRequestMapper
};
export const nextLink = {
    parameterPath: "nextLink",
    mapper: {
        serializedName: "nextLink",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const address = {
    parameterPath: "address",
    mapper: AddressDetailsMapper
};
export const billingProfileName = {
    parameterPath: "billingProfileName",
    mapper: {
        serializedName: "billingProfileName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const instructionName = {
    parameterPath: "instructionName",
    mapper: {
        serializedName: "instructionName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const parameters1 = {
    parameterPath: "parameters",
    mapper: InstructionMapper
};
export const parameters2 = {
    parameterPath: "parameters",
    mapper: BillingProfileMapper
};
export const search = {
    parameterPath: ["options", "search"],
    mapper: {
        serializedName: "$search",
        type: {
            name: "String"
        }
    }
};
export const filter = {
    parameterPath: ["options", "filter"],
    mapper: {
        serializedName: "$filter",
        type: {
            name: "String"
        }
    }
};
export const customerName = {
    parameterPath: "customerName",
    mapper: {
        serializedName: "customerName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const invoiceSectionName = {
    parameterPath: "invoiceSectionName",
    mapper: {
        serializedName: "invoiceSectionName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const parameters3 = {
    parameterPath: "parameters",
    mapper: InvoiceSectionMapper
};
export const subscriptionId = {
    parameterPath: "subscriptionId",
    mapper: {
        serializedName: "subscriptionId",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const parameters4 = {
    parameterPath: "parameters",
    mapper: BillingSubscriptionMapper
};
export const parameters5 = {
    parameterPath: "parameters",
    mapper: TransferBillingSubscriptionRequestPropertiesMapper
};
export const productName = {
    parameterPath: "productName",
    mapper: {
        serializedName: "productName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const parameters6 = {
    parameterPath: "parameters",
    mapper: ProductMapper
};
export const parameters7 = {
    parameterPath: "parameters",
    mapper: TransferProductRequestPropertiesMapper
};
export const periodStartDate = {
    parameterPath: "periodStartDate",
    mapper: {
        serializedName: "periodStartDate",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const periodEndDate = {
    parameterPath: "periodEndDate",
    mapper: {
        serializedName: "periodEndDate",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const invoiceName = {
    parameterPath: "invoiceName",
    mapper: {
        serializedName: "invoiceName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const downloadToken = {
    parameterPath: "downloadToken",
    mapper: {
        serializedName: "downloadToken",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const downloadUrls = {
    parameterPath: "downloadUrls",
    mapper: {
        serializedName: "downloadUrls",
        required: true,
        type: {
            name: "Sequence",
            element: {
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const parameters8 = {
    parameterPath: "parameters",
    mapper: PolicyMapper
};
export const parameters9 = {
    parameterPath: "parameters",
    mapper: CustomerPolicyMapper
};
export const parameters10 = {
    parameterPath: "parameters",
    mapper: BillingPropertyMapper
};
export const billingRoleDefinitionName = {
    parameterPath: "billingRoleDefinitionName",
    mapper: {
        serializedName: "billingRoleDefinitionName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const billingRoleAssignmentName = {
    parameterPath: "billingRoleAssignmentName",
    mapper: {
        serializedName: "billingRoleAssignmentName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const agreementName = {
    parameterPath: "agreementName",
    mapper: {
        serializedName: "agreementName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const orderby = {
    parameterPath: ["options", "orderby"],
    mapper: {
        serializedName: "$orderby",
        type: {
            name: "String"
        }
    }
};
export const refreshSummary = {
    parameterPath: ["options", "refreshSummary"],
    mapper: {
        serializedName: "refreshSummary",
        type: {
            name: "String"
        }
    }
};
export const selectedState = {
    parameterPath: ["options", "selectedState"],
    mapper: {
        serializedName: "selectedState",
        type: {
            name: "String"
        }
    }
};
export const apiVersion1 = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2018-03-01-preview",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
export const name = {
    parameterPath: "name",
    mapper: {
        serializedName: "name",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const skiptoken = {
    parameterPath: ["options", "skiptoken"],
    mapper: {
        serializedName: "$skiptoken",
        type: {
            name: "String"
        }
    }
};
export const top = {
    parameterPath: ["options", "top"],
    mapper: {
        constraints: {
            InclusiveMaximum: 100,
            InclusiveMinimum: 1
        },
        serializedName: "$top",
        type: {
            name: "Number"
        }
    }
};
export const billingPeriodName = {
    parameterPath: "billingPeriodName",
    mapper: {
        serializedName: "billingPeriodName",
        required: true,
        type: {
            name: "String"
        }
    }
};
//# sourceMappingURL=parameters.js.map