import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Transactions } from "../operationsInterfaces";
import { BillingManagementClient } from "../billingManagementClient";
import { Transaction, TransactionsListByInvoiceOptionalParams } from "../models";
/** Class containing Transactions operations. */
export declare class TransactionsImpl implements Transactions {
    private readonly client;
    /**
     * Initialize a new instance of the class Transactions class.
     * @param client Reference to the service client
     */
    constructor(client: BillingManagementClient);
    /**
     * Lists the transactions for an invoice. Transactions include purchases, refunds and Azure usage
     * charges.
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param invoiceName The ID that uniquely identifies an invoice.
     * @param options The options parameters.
     */
    listByInvoice(billingAccountName: string, invoiceName: string, options?: TransactionsListByInvoiceOptionalParams): PagedAsyncIterableIterator<Transaction>;
    private listByInvoicePagingPage;
    private listByInvoicePagingAll;
    /**
     * Lists the transactions for an invoice. Transactions include purchases, refunds and Azure usage
     * charges.
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param invoiceName The ID that uniquely identifies an invoice.
     * @param options The options parameters.
     */
    private _listByInvoice;
    /**
     * ListByInvoiceNext
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param invoiceName The ID that uniquely identifies an invoice.
     * @param nextLink The nextLink from the previous successful call to the ListByInvoice method.
     * @param options The options parameters.
     */
    private _listByInvoiceNext;
}
//# sourceMappingURL=transactions.d.ts.map