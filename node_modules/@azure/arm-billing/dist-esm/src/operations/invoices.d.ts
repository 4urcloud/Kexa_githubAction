import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Invoices } from "../operationsInterfaces";
import { BillingManagementClient } from "../billingManagementClient";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { Invoice, InvoicesListByBillingAccountOptionalParams, InvoicesListByBillingProfileOptionalParams, InvoicesListByBillingSubscriptionOptionalParams, InvoicesGetOptionalParams, InvoicesGetResponse, InvoicesGetByIdOptionalParams, InvoicesGetByIdResponse, InvoicesDownloadInvoiceOptionalParams, InvoicesDownloadInvoiceResponse, InvoicesDownloadMultipleBillingProfileInvoicesOptionalParams, InvoicesDownloadMultipleBillingProfileInvoicesResponse, InvoicesGetBySubscriptionAndInvoiceIdOptionalParams, InvoicesGetBySubscriptionAndInvoiceIdResponse, InvoicesDownloadBillingSubscriptionInvoiceOptionalParams, InvoicesDownloadBillingSubscriptionInvoiceResponse, InvoicesDownloadMultipleBillingSubscriptionInvoicesOptionalParams, InvoicesDownloadMultipleBillingSubscriptionInvoicesResponse } from "../models";
/** Class containing Invoices operations. */
export declare class InvoicesImpl implements Invoices {
    private readonly client;
    /**
     * Initialize a new instance of the class Invoices class.
     * @param client Reference to the service client
     */
    constructor(client: BillingManagementClient);
    /**
     * Lists the invoices for a billing account for a given start date and end date. The operation is
     * supported for billing accounts with agreement type Microsoft Partner Agreement or Microsoft Customer
     * Agreement.
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param periodStartDate The start date to fetch the invoices. The date should be specified in
     *                        MM-DD-YYYY format.
     * @param periodEndDate The end date to fetch the invoices. The date should be specified in MM-DD-YYYY
     *                      format.
     * @param options The options parameters.
     */
    listByBillingAccount(billingAccountName: string, periodStartDate: string, periodEndDate: string, options?: InvoicesListByBillingAccountOptionalParams): PagedAsyncIterableIterator<Invoice>;
    private listByBillingAccountPagingPage;
    private listByBillingAccountPagingAll;
    /**
     * Lists the invoices for a billing profile for a given start date and end date. The operation is
     * supported for billing accounts with agreement type Microsoft Partner Agreement or Microsoft Customer
     * Agreement.
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param billingProfileName The ID that uniquely identifies a billing profile.
     * @param periodStartDate The start date to fetch the invoices. The date should be specified in
     *                        MM-DD-YYYY format.
     * @param periodEndDate The end date to fetch the invoices. The date should be specified in MM-DD-YYYY
     *                      format.
     * @param options The options parameters.
     */
    listByBillingProfile(billingAccountName: string, billingProfileName: string, periodStartDate: string, periodEndDate: string, options?: InvoicesListByBillingProfileOptionalParams): PagedAsyncIterableIterator<Invoice>;
    private listByBillingProfilePagingPage;
    private listByBillingProfilePagingAll;
    /**
     * Lists the invoices for a subscription.
     * @param periodStartDate Invoice period start date.
     * @param periodEndDate Invoice period end date.
     * @param options The options parameters.
     */
    listByBillingSubscription(periodStartDate: string, periodEndDate: string, options?: InvoicesListByBillingSubscriptionOptionalParams): PagedAsyncIterableIterator<Invoice>;
    private listByBillingSubscriptionPagingPage;
    private listByBillingSubscriptionPagingAll;
    /**
     * Lists the invoices for a billing account for a given start date and end date. The operation is
     * supported for billing accounts with agreement type Microsoft Partner Agreement or Microsoft Customer
     * Agreement.
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param periodStartDate The start date to fetch the invoices. The date should be specified in
     *                        MM-DD-YYYY format.
     * @param periodEndDate The end date to fetch the invoices. The date should be specified in MM-DD-YYYY
     *                      format.
     * @param options The options parameters.
     */
    private _listByBillingAccount;
    /**
     * Lists the invoices for a billing profile for a given start date and end date. The operation is
     * supported for billing accounts with agreement type Microsoft Partner Agreement or Microsoft Customer
     * Agreement.
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param billingProfileName The ID that uniquely identifies a billing profile.
     * @param periodStartDate The start date to fetch the invoices. The date should be specified in
     *                        MM-DD-YYYY format.
     * @param periodEndDate The end date to fetch the invoices. The date should be specified in MM-DD-YYYY
     *                      format.
     * @param options The options parameters.
     */
    private _listByBillingProfile;
    /**
     * Gets an invoice by billing account name and ID. The operation is supported for billing accounts with
     * agreement type Microsoft Partner Agreement or Microsoft Customer Agreement.
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param invoiceName The ID that uniquely identifies an invoice.
     * @param options The options parameters.
     */
    get(billingAccountName: string, invoiceName: string, options?: InvoicesGetOptionalParams): Promise<InvoicesGetResponse>;
    /**
     * Gets an invoice by ID. The operation is supported for billing accounts with agreement type Microsoft
     * Partner Agreement or Microsoft Customer Agreement.
     * @param invoiceName The ID that uniquely identifies an invoice.
     * @param options The options parameters.
     */
    getById(invoiceName: string, options?: InvoicesGetByIdOptionalParams): Promise<InvoicesGetByIdResponse>;
    /**
     * Gets a URL to download an invoice. The operation is supported for billing accounts with agreement
     * type Microsoft Partner Agreement or Microsoft Customer Agreement.
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param invoiceName The ID that uniquely identifies an invoice.
     * @param downloadToken Download token with document source and document ID.
     * @param options The options parameters.
     */
    beginDownloadInvoice(billingAccountName: string, invoiceName: string, downloadToken: string, options?: InvoicesDownloadInvoiceOptionalParams): Promise<PollerLike<PollOperationState<InvoicesDownloadInvoiceResponse>, InvoicesDownloadInvoiceResponse>>;
    /**
     * Gets a URL to download an invoice. The operation is supported for billing accounts with agreement
     * type Microsoft Partner Agreement or Microsoft Customer Agreement.
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param invoiceName The ID that uniquely identifies an invoice.
     * @param downloadToken Download token with document source and document ID.
     * @param options The options parameters.
     */
    beginDownloadInvoiceAndWait(billingAccountName: string, invoiceName: string, downloadToken: string, options?: InvoicesDownloadInvoiceOptionalParams): Promise<InvoicesDownloadInvoiceResponse>;
    /**
     * Gets a URL to download multiple invoice documents (invoice pdf, tax receipts, credit notes) as a zip
     * file. The operation is supported for billing accounts with agreement type Microsoft Partner
     * Agreement or Microsoft Customer Agreement.
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param downloadUrls An array of download urls for individual documents
     * @param options The options parameters.
     */
    beginDownloadMultipleBillingProfileInvoices(billingAccountName: string, downloadUrls: string[], options?: InvoicesDownloadMultipleBillingProfileInvoicesOptionalParams): Promise<PollerLike<PollOperationState<InvoicesDownloadMultipleBillingProfileInvoicesResponse>, InvoicesDownloadMultipleBillingProfileInvoicesResponse>>;
    /**
     * Gets a URL to download multiple invoice documents (invoice pdf, tax receipts, credit notes) as a zip
     * file. The operation is supported for billing accounts with agreement type Microsoft Partner
     * Agreement or Microsoft Customer Agreement.
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param downloadUrls An array of download urls for individual documents
     * @param options The options parameters.
     */
    beginDownloadMultipleBillingProfileInvoicesAndWait(billingAccountName: string, downloadUrls: string[], options?: InvoicesDownloadMultipleBillingProfileInvoicesOptionalParams): Promise<InvoicesDownloadMultipleBillingProfileInvoicesResponse>;
    /**
     * Lists the invoices for a subscription.
     * @param periodStartDate Invoice period start date.
     * @param periodEndDate Invoice period end date.
     * @param options The options parameters.
     */
    private _listByBillingSubscription;
    /**
     * Gets an invoice by subscription ID and invoice ID.
     * @param invoiceName The ID that uniquely identifies an invoice.
     * @param options The options parameters.
     */
    getBySubscriptionAndInvoiceId(invoiceName: string, options?: InvoicesGetBySubscriptionAndInvoiceIdOptionalParams): Promise<InvoicesGetBySubscriptionAndInvoiceIdResponse>;
    /**
     * Gets a URL to download an invoice.
     * @param invoiceName The ID that uniquely identifies an invoice.
     * @param downloadToken Download token with document source and document ID.
     * @param options The options parameters.
     */
    beginDownloadBillingSubscriptionInvoice(invoiceName: string, downloadToken: string, options?: InvoicesDownloadBillingSubscriptionInvoiceOptionalParams): Promise<PollerLike<PollOperationState<InvoicesDownloadBillingSubscriptionInvoiceResponse>, InvoicesDownloadBillingSubscriptionInvoiceResponse>>;
    /**
     * Gets a URL to download an invoice.
     * @param invoiceName The ID that uniquely identifies an invoice.
     * @param downloadToken Download token with document source and document ID.
     * @param options The options parameters.
     */
    beginDownloadBillingSubscriptionInvoiceAndWait(invoiceName: string, downloadToken: string, options?: InvoicesDownloadBillingSubscriptionInvoiceOptionalParams): Promise<InvoicesDownloadBillingSubscriptionInvoiceResponse>;
    /**
     * Gets a URL to download multiple invoice documents (invoice pdf, tax receipts, credit notes) as a zip
     * file.
     * @param downloadUrls An array of download urls for individual documents
     * @param options The options parameters.
     */
    beginDownloadMultipleBillingSubscriptionInvoices(downloadUrls: string[], options?: InvoicesDownloadMultipleBillingSubscriptionInvoicesOptionalParams): Promise<PollerLike<PollOperationState<InvoicesDownloadMultipleBillingSubscriptionInvoicesResponse>, InvoicesDownloadMultipleBillingSubscriptionInvoicesResponse>>;
    /**
     * Gets a URL to download multiple invoice documents (invoice pdf, tax receipts, credit notes) as a zip
     * file.
     * @param downloadUrls An array of download urls for individual documents
     * @param options The options parameters.
     */
    beginDownloadMultipleBillingSubscriptionInvoicesAndWait(downloadUrls: string[], options?: InvoicesDownloadMultipleBillingSubscriptionInvoicesOptionalParams): Promise<InvoicesDownloadMultipleBillingSubscriptionInvoicesResponse>;
    /**
     * ListByBillingAccountNext
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param periodStartDate The start date to fetch the invoices. The date should be specified in
     *                        MM-DD-YYYY format.
     * @param periodEndDate The end date to fetch the invoices. The date should be specified in MM-DD-YYYY
     *                      format.
     * @param nextLink The nextLink from the previous successful call to the ListByBillingAccount method.
     * @param options The options parameters.
     */
    private _listByBillingAccountNext;
    /**
     * ListByBillingProfileNext
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param billingProfileName The ID that uniquely identifies a billing profile.
     * @param periodStartDate The start date to fetch the invoices. The date should be specified in
     *                        MM-DD-YYYY format.
     * @param periodEndDate The end date to fetch the invoices. The date should be specified in MM-DD-YYYY
     *                      format.
     * @param nextLink The nextLink from the previous successful call to the ListByBillingProfile method.
     * @param options The options parameters.
     */
    private _listByBillingProfileNext;
    /**
     * ListByBillingSubscriptionNext
     * @param periodStartDate Invoice period start date.
     * @param periodEndDate Invoice period end date.
     * @param nextLink The nextLink from the previous successful call to the ListByBillingSubscription
     *                 method.
     * @param options The options parameters.
     */
    private _listByBillingSubscriptionNext;
}
//# sourceMappingURL=invoices.d.ts.map