import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Agreements } from "../operationsInterfaces";
import { BillingManagementClient } from "../billingManagementClient";
import { Agreement, AgreementsListByBillingAccountOptionalParams, AgreementsGetOptionalParams, AgreementsGetResponse } from "../models";
/** Class containing Agreements operations. */
export declare class AgreementsImpl implements Agreements {
    private readonly client;
    /**
     * Initialize a new instance of the class Agreements class.
     * @param client Reference to the service client
     */
    constructor(client: BillingManagementClient);
    /**
     * Lists the agreements for a billing account.
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param options The options parameters.
     */
    listByBillingAccount(billingAccountName: string, options?: AgreementsListByBillingAccountOptionalParams): PagedAsyncIterableIterator<Agreement>;
    private listByBillingAccountPagingPage;
    private listByBillingAccountPagingAll;
    /**
     * Lists the agreements for a billing account.
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param options The options parameters.
     */
    private _listByBillingAccount;
    /**
     * Gets an agreement by ID.
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param agreementName The ID that uniquely identifies an agreement.
     * @param options The options parameters.
     */
    get(billingAccountName: string, agreementName: string, options?: AgreementsGetOptionalParams): Promise<AgreementsGetResponse>;
    /**
     * ListByBillingAccountNext
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param nextLink The nextLink from the previous successful call to the ListByBillingAccount method.
     * @param options The options parameters.
     */
    private _listByBillingAccountNext;
}
//# sourceMappingURL=agreements.d.ts.map