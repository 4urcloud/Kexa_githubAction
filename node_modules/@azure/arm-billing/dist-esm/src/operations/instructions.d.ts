import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Instructions } from "../operationsInterfaces";
import { BillingManagementClient } from "../billingManagementClient";
import { Instruction, InstructionsListByBillingProfileOptionalParams, InstructionsGetOptionalParams, InstructionsGetResponse, InstructionsPutOptionalParams, InstructionsPutResponse } from "../models";
/** Class containing Instructions operations. */
export declare class InstructionsImpl implements Instructions {
    private readonly client;
    /**
     * Initialize a new instance of the class Instructions class.
     * @param client Reference to the service client
     */
    constructor(client: BillingManagementClient);
    /**
     * Lists the instructions by billing profile id.
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param billingProfileName The ID that uniquely identifies a billing profile.
     * @param options The options parameters.
     */
    listByBillingProfile(billingAccountName: string, billingProfileName: string, options?: InstructionsListByBillingProfileOptionalParams): PagedAsyncIterableIterator<Instruction>;
    private listByBillingProfilePagingPage;
    private listByBillingProfilePagingAll;
    /**
     * Lists the instructions by billing profile id.
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param billingProfileName The ID that uniquely identifies a billing profile.
     * @param options The options parameters.
     */
    private _listByBillingProfile;
    /**
     * Get the instruction by name. These are custom billing instructions and are only applicable for
     * certain customers.
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param billingProfileName The ID that uniquely identifies a billing profile.
     * @param instructionName Instruction Name.
     * @param options The options parameters.
     */
    get(billingAccountName: string, billingProfileName: string, instructionName: string, options?: InstructionsGetOptionalParams): Promise<InstructionsGetResponse>;
    /**
     * Creates or updates an instruction. These are custom billing instructions and are only applicable for
     * certain customers.
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param billingProfileName The ID that uniquely identifies a billing profile.
     * @param instructionName Instruction Name.
     * @param parameters The new instruction.
     * @param options The options parameters.
     */
    put(billingAccountName: string, billingProfileName: string, instructionName: string, parameters: Instruction, options?: InstructionsPutOptionalParams): Promise<InstructionsPutResponse>;
    /**
     * ListByBillingProfileNext
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param billingProfileName The ID that uniquely identifies a billing profile.
     * @param nextLink The nextLink from the previous successful call to the ListByBillingProfile method.
     * @param options The options parameters.
     */
    private _listByBillingProfileNext;
}
//# sourceMappingURL=instructions.d.ts.map