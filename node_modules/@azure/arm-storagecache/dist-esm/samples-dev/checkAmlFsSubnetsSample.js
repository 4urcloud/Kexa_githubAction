/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { StorageCacheManagementClient } from "@azure/arm-storagecache";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Check that subnets will be valid for AML file system create calls.
 *
 * @summary Check that subnets will be valid for AML file system create calls.
 * x-ms-original-file: specification/storagecache/resource-manager/Microsoft.StorageCache/stable/2023-05-01/examples/checkAmlFSSubnets.json
 */
function checkAmlFsSubnets() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["STORAGECACHE_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const amlFilesystemSubnetInfo = {
            filesystemSubnet: "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/scgroup/providers/Microsoft.Network/virtualNetworks/scvnet/subnets/fsSub",
            sku: { name: "AMLFS-Durable-Premium-125" },
            storageCapacityTiB: 16
        };
        const options = { amlFilesystemSubnetInfo };
        const credential = new DefaultAzureCredential();
        const client = new StorageCacheManagementClient(credential, subscriptionId);
        const result = yield client.checkAmlFSSubnets(options);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        checkAmlFsSubnets();
    });
}
main().catch(console.error);
//# sourceMappingURL=checkAmlFsSubnetsSample.js.map