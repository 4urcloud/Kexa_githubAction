/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
/** Known values of {@link AmlFilesystemHealthStateType} that the service accepts. */
export var KnownAmlFilesystemHealthStateType;
(function (KnownAmlFilesystemHealthStateType) {
    /** Unavailable */
    KnownAmlFilesystemHealthStateType["Unavailable"] = "Unavailable";
    /** Available */
    KnownAmlFilesystemHealthStateType["Available"] = "Available";
    /** Degraded */
    KnownAmlFilesystemHealthStateType["Degraded"] = "Degraded";
    /** Transitioning */
    KnownAmlFilesystemHealthStateType["Transitioning"] = "Transitioning";
    /** Maintenance */
    KnownAmlFilesystemHealthStateType["Maintenance"] = "Maintenance";
})(KnownAmlFilesystemHealthStateType || (KnownAmlFilesystemHealthStateType = {}));
/** Known values of {@link AmlFilesystemProvisioningStateType} that the service accepts. */
export var KnownAmlFilesystemProvisioningStateType;
(function (KnownAmlFilesystemProvisioningStateType) {
    /** Succeeded */
    KnownAmlFilesystemProvisioningStateType["Succeeded"] = "Succeeded";
    /** Failed */
    KnownAmlFilesystemProvisioningStateType["Failed"] = "Failed";
    /** Creating */
    KnownAmlFilesystemProvisioningStateType["Creating"] = "Creating";
    /** Deleting */
    KnownAmlFilesystemProvisioningStateType["Deleting"] = "Deleting";
    /** Updating */
    KnownAmlFilesystemProvisioningStateType["Updating"] = "Updating";
    /** Canceled */
    KnownAmlFilesystemProvisioningStateType["Canceled"] = "Canceled";
})(KnownAmlFilesystemProvisioningStateType || (KnownAmlFilesystemProvisioningStateType = {}));
/** Known values of {@link ArchiveStatusType} that the service accepts. */
export var KnownArchiveStatusType;
(function (KnownArchiveStatusType) {
    /** NotConfigured */
    KnownArchiveStatusType["NotConfigured"] = "NotConfigured";
    /** Idle */
    KnownArchiveStatusType["Idle"] = "Idle";
    /** InProgress */
    KnownArchiveStatusType["InProgress"] = "InProgress";
    /** Canceled */
    KnownArchiveStatusType["Canceled"] = "Canceled";
    /** Completed */
    KnownArchiveStatusType["Completed"] = "Completed";
    /** Failed */
    KnownArchiveStatusType["Failed"] = "Failed";
    /** Cancelling */
    KnownArchiveStatusType["Cancelling"] = "Cancelling";
    /** FSScanInProgress */
    KnownArchiveStatusType["FSScanInProgress"] = "FSScanInProgress";
})(KnownArchiveStatusType || (KnownArchiveStatusType = {}));
/** Known values of {@link CreatedByType} that the service accepts. */
export var KnownCreatedByType;
(function (KnownCreatedByType) {
    /** User */
    KnownCreatedByType["User"] = "User";
    /** Application */
    KnownCreatedByType["Application"] = "Application";
    /** ManagedIdentity */
    KnownCreatedByType["ManagedIdentity"] = "ManagedIdentity";
    /** Key */
    KnownCreatedByType["Key"] = "Key";
})(KnownCreatedByType || (KnownCreatedByType = {}));
/** Known values of {@link FilesystemSubnetStatusType} that the service accepts. */
export var KnownFilesystemSubnetStatusType;
(function (KnownFilesystemSubnetStatusType) {
    /** Ok */
    KnownFilesystemSubnetStatusType["Ok"] = "Ok";
    /** Invalid */
    KnownFilesystemSubnetStatusType["Invalid"] = "Invalid";
})(KnownFilesystemSubnetStatusType || (KnownFilesystemSubnetStatusType = {}));
/** Known values of {@link MetricAggregationType} that the service accepts. */
export var KnownMetricAggregationType;
(function (KnownMetricAggregationType) {
    /** NotSpecified */
    KnownMetricAggregationType["NotSpecified"] = "NotSpecified";
    /** None */
    KnownMetricAggregationType["None"] = "None";
    /** Average */
    KnownMetricAggregationType["Average"] = "Average";
    /** Minimum */
    KnownMetricAggregationType["Minimum"] = "Minimum";
    /** Maximum */
    KnownMetricAggregationType["Maximum"] = "Maximum";
    /** Total */
    KnownMetricAggregationType["Total"] = "Total";
    /** Count */
    KnownMetricAggregationType["Count"] = "Count";
})(KnownMetricAggregationType || (KnownMetricAggregationType = {}));
/** Known values of {@link ReasonCode} that the service accepts. */
export var KnownReasonCode;
(function (KnownReasonCode) {
    /** QuotaId */
    KnownReasonCode["QuotaId"] = "QuotaId";
    /** NotAvailableForSubscription */
    KnownReasonCode["NotAvailableForSubscription"] = "NotAvailableForSubscription";
})(KnownReasonCode || (KnownReasonCode = {}));
/** Known values of {@link HealthStateType} that the service accepts. */
export var KnownHealthStateType;
(function (KnownHealthStateType) {
    /** Unknown */
    KnownHealthStateType["Unknown"] = "Unknown";
    /** Healthy */
    KnownHealthStateType["Healthy"] = "Healthy";
    /** Degraded */
    KnownHealthStateType["Degraded"] = "Degraded";
    /** Down */
    KnownHealthStateType["Down"] = "Down";
    /** Transitioning */
    KnownHealthStateType["Transitioning"] = "Transitioning";
    /** Stopping */
    KnownHealthStateType["Stopping"] = "Stopping";
    /** Stopped */
    KnownHealthStateType["Stopped"] = "Stopped";
    /** Upgrading */
    KnownHealthStateType["Upgrading"] = "Upgrading";
    /** Flushing */
    KnownHealthStateType["Flushing"] = "Flushing";
    /** WaitingForKey */
    KnownHealthStateType["WaitingForKey"] = "WaitingForKey";
    /** StartFailed */
    KnownHealthStateType["StartFailed"] = "StartFailed";
    /** UpgradeFailed */
    KnownHealthStateType["UpgradeFailed"] = "UpgradeFailed";
})(KnownHealthStateType || (KnownHealthStateType = {}));
/** Known values of {@link ProvisioningStateType} that the service accepts. */
export var KnownProvisioningStateType;
(function (KnownProvisioningStateType) {
    /** Succeeded */
    KnownProvisioningStateType["Succeeded"] = "Succeeded";
    /** Failed */
    KnownProvisioningStateType["Failed"] = "Failed";
    /** Canceled */
    KnownProvisioningStateType["Canceled"] = "Canceled";
    /** Creating */
    KnownProvisioningStateType["Creating"] = "Creating";
    /** Deleting */
    KnownProvisioningStateType["Deleting"] = "Deleting";
    /** Updating */
    KnownProvisioningStateType["Updating"] = "Updating";
})(KnownProvisioningStateType || (KnownProvisioningStateType = {}));
/** Known values of {@link FirmwareStatusType} that the service accepts. */
export var KnownFirmwareStatusType;
(function (KnownFirmwareStatusType) {
    /** Available */
    KnownFirmwareStatusType["Available"] = "available";
    /** Unavailable */
    KnownFirmwareStatusType["Unavailable"] = "unavailable";
})(KnownFirmwareStatusType || (KnownFirmwareStatusType = {}));
/** Known values of {@link NfsAccessRuleScope} that the service accepts. */
export var KnownNfsAccessRuleScope;
(function (KnownNfsAccessRuleScope) {
    /** Default */
    KnownNfsAccessRuleScope["Default"] = "default";
    /** Network */
    KnownNfsAccessRuleScope["Network"] = "network";
    /** Host */
    KnownNfsAccessRuleScope["Host"] = "host";
})(KnownNfsAccessRuleScope || (KnownNfsAccessRuleScope = {}));
/** Known values of {@link NfsAccessRuleAccess} that the service accepts. */
export var KnownNfsAccessRuleAccess;
(function (KnownNfsAccessRuleAccess) {
    /** No */
    KnownNfsAccessRuleAccess["No"] = "no";
    /** Ro */
    KnownNfsAccessRuleAccess["Ro"] = "ro";
    /** Rw */
    KnownNfsAccessRuleAccess["Rw"] = "rw";
})(KnownNfsAccessRuleAccess || (KnownNfsAccessRuleAccess = {}));
/** Known values of {@link DomainJoinedType} that the service accepts. */
export var KnownDomainJoinedType;
(function (KnownDomainJoinedType) {
    /** Yes */
    KnownDomainJoinedType["Yes"] = "Yes";
    /** No */
    KnownDomainJoinedType["No"] = "No";
    /** Error */
    KnownDomainJoinedType["Error"] = "Error";
})(KnownDomainJoinedType || (KnownDomainJoinedType = {}));
/** Known values of {@link UsernameSource} that the service accepts. */
export var KnownUsernameSource;
(function (KnownUsernameSource) {
    /** AD */
    KnownUsernameSource["AD"] = "AD";
    /** Ldap */
    KnownUsernameSource["Ldap"] = "LDAP";
    /** File */
    KnownUsernameSource["File"] = "File";
    /** None */
    KnownUsernameSource["None"] = "None";
})(KnownUsernameSource || (KnownUsernameSource = {}));
/** Known values of {@link UsernameDownloadedType} that the service accepts. */
export var KnownUsernameDownloadedType;
(function (KnownUsernameDownloadedType) {
    /** Yes */
    KnownUsernameDownloadedType["Yes"] = "Yes";
    /** No */
    KnownUsernameDownloadedType["No"] = "No";
    /** Error */
    KnownUsernameDownloadedType["Error"] = "Error";
})(KnownUsernameDownloadedType || (KnownUsernameDownloadedType = {}));
/** Known values of {@link PrimingJobState} that the service accepts. */
export var KnownPrimingJobState;
(function (KnownPrimingJobState) {
    /** Queued */
    KnownPrimingJobState["Queued"] = "Queued";
    /** Running */
    KnownPrimingJobState["Running"] = "Running";
    /** Paused */
    KnownPrimingJobState["Paused"] = "Paused";
    /** Complete */
    KnownPrimingJobState["Complete"] = "Complete";
})(KnownPrimingJobState || (KnownPrimingJobState = {}));
/** Known values of {@link StorageTargetType} that the service accepts. */
export var KnownStorageTargetType;
(function (KnownStorageTargetType) {
    /** Nfs3 */
    KnownStorageTargetType["Nfs3"] = "nfs3";
    /** Clfs */
    KnownStorageTargetType["Clfs"] = "clfs";
    /** Unknown */
    KnownStorageTargetType["Unknown"] = "unknown";
    /** BlobNfs */
    KnownStorageTargetType["BlobNfs"] = "blobNfs";
})(KnownStorageTargetType || (KnownStorageTargetType = {}));
/** Known values of {@link OperationalStateType} that the service accepts. */
export var KnownOperationalStateType;
(function (KnownOperationalStateType) {
    /** Ready */
    KnownOperationalStateType["Ready"] = "Ready";
    /** Busy */
    KnownOperationalStateType["Busy"] = "Busy";
    /** Suspended */
    KnownOperationalStateType["Suspended"] = "Suspended";
    /** Flushing */
    KnownOperationalStateType["Flushing"] = "Flushing";
})(KnownOperationalStateType || (KnownOperationalStateType = {}));
//# sourceMappingURL=index.js.map