/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
export const AmlFilesystemsListResult = {
    type: {
        name: "Composite",
        className: "AmlFilesystemsListResult",
        modelProperties: {
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            },
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "AmlFilesystem"
                        }
                    }
                }
            }
        }
    }
};
export const AmlFilesystemIdentity = {
    type: {
        name: "Composite",
        className: "AmlFilesystemIdentity",
        modelProperties: {
            principalId: {
                serializedName: "principalId",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            tenantId: {
                serializedName: "tenantId",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                type: {
                    name: "Enum",
                    allowedValues: ["UserAssigned", "None"]
                }
            },
            userAssignedIdentities: {
                serializedName: "userAssignedIdentities",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "Composite",
                            className: "UserAssignedIdentitiesValue"
                        }
                    }
                }
            }
        }
    }
};
export const UserAssignedIdentitiesValue = {
    type: {
        name: "Composite",
        className: "UserAssignedIdentitiesValue",
        modelProperties: {
            principalId: {
                serializedName: "principalId",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            clientId: {
                serializedName: "clientId",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SkuName = {
    type: {
        name: "Composite",
        className: "SkuName",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const AmlFilesystemHealth = {
    type: {
        name: "Composite",
        className: "AmlFilesystemHealth",
        modelProperties: {
            state: {
                serializedName: "state",
                type: {
                    name: "String"
                }
            },
            statusCode: {
                serializedName: "statusCode",
                type: {
                    name: "String"
                }
            },
            statusDescription: {
                serializedName: "statusDescription",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const AmlFilesystemClientInfo = {
    type: {
        name: "Composite",
        className: "AmlFilesystemClientInfo",
        modelProperties: {
            mgsAddress: {
                serializedName: "mgsAddress",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            mountCommand: {
                serializedName: "mountCommand",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            lustreVersion: {
                serializedName: "lustreVersion",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            containerStorageInterface: {
                serializedName: "containerStorageInterface",
                type: {
                    name: "Composite",
                    className: "AmlFilesystemContainerStorageInterface"
                }
            }
        }
    }
};
export const AmlFilesystemContainerStorageInterface = {
    type: {
        name: "Composite",
        className: "AmlFilesystemContainerStorageInterface",
        modelProperties: {
            persistentVolumeClaim: {
                serializedName: "persistentVolumeClaim",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            persistentVolume: {
                serializedName: "persistentVolume",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            storageClass: {
                serializedName: "storageClass",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const AmlFilesystemEncryptionSettings = {
    type: {
        name: "Composite",
        className: "AmlFilesystemEncryptionSettings",
        modelProperties: {
            keyEncryptionKey: {
                serializedName: "keyEncryptionKey",
                type: {
                    name: "Composite",
                    className: "KeyVaultKeyReference"
                }
            }
        }
    }
};
export const KeyVaultKeyReference = {
    type: {
        name: "Composite",
        className: "KeyVaultKeyReference",
        modelProperties: {
            keyUrl: {
                serializedName: "keyUrl",
                required: true,
                type: {
                    name: "String"
                }
            },
            sourceVault: {
                serializedName: "sourceVault",
                type: {
                    name: "Composite",
                    className: "KeyVaultKeyReferenceSourceVault"
                }
            }
        }
    }
};
export const KeyVaultKeyReferenceSourceVault = {
    type: {
        name: "Composite",
        className: "KeyVaultKeyReferenceSourceVault",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const AmlFilesystemPropertiesMaintenanceWindow = {
    type: {
        name: "Composite",
        className: "AmlFilesystemPropertiesMaintenanceWindow",
        modelProperties: {
            dayOfWeek: {
                serializedName: "dayOfWeek",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Monday",
                        "Tuesday",
                        "Wednesday",
                        "Thursday",
                        "Friday",
                        "Saturday",
                        "Sunday"
                    ]
                }
            },
            timeOfDayUTC: {
                constraints: {
                    Pattern: new RegExp("^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$")
                },
                serializedName: "timeOfDayUTC",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const AmlFilesystemPropertiesHsm = {
    type: {
        name: "Composite",
        className: "AmlFilesystemPropertiesHsm",
        modelProperties: {
            settings: {
                serializedName: "settings",
                type: {
                    name: "Composite",
                    className: "AmlFilesystemHsmSettings"
                }
            },
            archiveStatus: {
                serializedName: "archiveStatus",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "AmlFilesystemArchive"
                        }
                    }
                }
            }
        }
    }
};
export const AmlFilesystemHsmSettings = {
    type: {
        name: "Composite",
        className: "AmlFilesystemHsmSettings",
        modelProperties: {
            container: {
                serializedName: "container",
                required: true,
                type: {
                    name: "String"
                }
            },
            loggingContainer: {
                serializedName: "loggingContainer",
                required: true,
                type: {
                    name: "String"
                }
            },
            importPrefix: {
                defaultValue: "/",
                serializedName: "importPrefix",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const AmlFilesystemArchive = {
    type: {
        name: "Composite",
        className: "AmlFilesystemArchive",
        modelProperties: {
            filesystemPath: {
                serializedName: "filesystemPath",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            status: {
                serializedName: "status",
                type: {
                    name: "Composite",
                    className: "AmlFilesystemArchiveStatus"
                }
            }
        }
    }
};
export const AmlFilesystemArchiveStatus = {
    type: {
        name: "Composite",
        className: "AmlFilesystemArchiveStatus",
        modelProperties: {
            state: {
                serializedName: "state",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            lastCompletionTime: {
                serializedName: "lastCompletionTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            },
            lastStartedTime: {
                serializedName: "lastStartedTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            },
            percentComplete: {
                serializedName: "percentComplete",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            errorCode: {
                serializedName: "errorCode",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            errorMessage: {
                serializedName: "errorMessage",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const Resource = {
    type: {
        name: "Composite",
        className: "Resource",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            systemData: {
                serializedName: "systemData",
                type: {
                    name: "Composite",
                    className: "SystemData"
                }
            }
        }
    }
};
export const SystemData = {
    type: {
        name: "Composite",
        className: "SystemData",
        modelProperties: {
            createdBy: {
                serializedName: "createdBy",
                type: {
                    name: "String"
                }
            },
            createdByType: {
                serializedName: "createdByType",
                type: {
                    name: "String"
                }
            },
            createdAt: {
                serializedName: "createdAt",
                type: {
                    name: "DateTime"
                }
            },
            lastModifiedBy: {
                serializedName: "lastModifiedBy",
                type: {
                    name: "String"
                }
            },
            lastModifiedByType: {
                serializedName: "lastModifiedByType",
                type: {
                    name: "String"
                }
            },
            lastModifiedAt: {
                serializedName: "lastModifiedAt",
                type: {
                    name: "DateTime"
                }
            }
        }
    }
};
export const CloudError = {
    type: {
        name: "Composite",
        className: "CloudError",
        modelProperties: {
            error: {
                serializedName: "error",
                type: {
                    name: "Composite",
                    className: "CloudErrorBody"
                }
            }
        }
    }
};
export const CloudErrorBody = {
    type: {
        name: "Composite",
        className: "CloudErrorBody",
        modelProperties: {
            code: {
                serializedName: "code",
                type: {
                    name: "String"
                }
            },
            details: {
                serializedName: "details",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CloudErrorBody"
                        }
                    }
                }
            },
            message: {
                serializedName: "message",
                type: {
                    name: "String"
                }
            },
            target: {
                serializedName: "target",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const AmlFilesystemUpdate = {
    type: {
        name: "Composite",
        className: "AmlFilesystemUpdate",
        modelProperties: {
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            },
            encryptionSettings: {
                serializedName: "properties.encryptionSettings",
                type: {
                    name: "Composite",
                    className: "AmlFilesystemEncryptionSettings"
                }
            },
            maintenanceWindow: {
                serializedName: "properties.maintenanceWindow",
                type: {
                    name: "Composite",
                    className: "AmlFilesystemUpdatePropertiesMaintenanceWindow"
                }
            }
        }
    }
};
export const AmlFilesystemUpdatePropertiesMaintenanceWindow = {
    type: {
        name: "Composite",
        className: "AmlFilesystemUpdatePropertiesMaintenanceWindow",
        modelProperties: {
            dayOfWeek: {
                serializedName: "dayOfWeek",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Monday",
                        "Tuesday",
                        "Wednesday",
                        "Thursday",
                        "Friday",
                        "Saturday",
                        "Sunday"
                    ]
                }
            },
            timeOfDayUTC: {
                constraints: {
                    Pattern: new RegExp("^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$")
                },
                serializedName: "timeOfDayUTC",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const AmlFilesystemArchiveInfo = {
    type: {
        name: "Composite",
        className: "AmlFilesystemArchiveInfo",
        modelProperties: {
            filesystemPath: {
                defaultValue: "/",
                serializedName: "filesystemPath",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const AmlFilesystemSubnetInfo = {
    type: {
        name: "Composite",
        className: "AmlFilesystemSubnetInfo",
        modelProperties: {
            filesystemSubnet: {
                serializedName: "filesystemSubnet",
                type: {
                    name: "String"
                }
            },
            storageCapacityTiB: {
                serializedName: "storageCapacityTiB",
                type: {
                    name: "Number"
                }
            },
            sku: {
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "SkuName"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const AmlFilesystemCheckSubnetError = {
    type: {
        name: "Composite",
        className: "AmlFilesystemCheckSubnetError",
        modelProperties: {
            filesystemSubnet: {
                serializedName: "filesystemSubnet",
                type: {
                    name: "Composite",
                    className: "AmlFilesystemCheckSubnetErrorFilesystemSubnet"
                }
            }
        }
    }
};
export const AmlFilesystemCheckSubnetErrorFilesystemSubnet = {
    type: {
        name: "Composite",
        className: "AmlFilesystemCheckSubnetErrorFilesystemSubnet",
        modelProperties: {
            status: {
                serializedName: "status",
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const RequiredAmlFilesystemSubnetsSizeInfo = {
    type: {
        name: "Composite",
        className: "RequiredAmlFilesystemSubnetsSizeInfo",
        modelProperties: {
            storageCapacityTiB: {
                serializedName: "storageCapacityTiB",
                type: {
                    name: "Number"
                }
            },
            sku: {
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "SkuName"
                }
            }
        }
    }
};
export const RequiredAmlFilesystemSubnetsSize = {
    type: {
        name: "Composite",
        className: "RequiredAmlFilesystemSubnetsSize",
        modelProperties: {
            filesystemSubnetSize: {
                serializedName: "filesystemSubnetSize",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const ApiOperationListResult = {
    type: {
        name: "Composite",
        className: "ApiOperationListResult",
        modelProperties: {
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            },
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ApiOperation"
                        }
                    }
                }
            }
        }
    }
};
export const ApiOperation = {
    type: {
        name: "Composite",
        className: "ApiOperation",
        modelProperties: {
            display: {
                serializedName: "display",
                type: {
                    name: "Composite",
                    className: "ApiOperationDisplay"
                }
            },
            origin: {
                serializedName: "origin",
                type: {
                    name: "String"
                }
            },
            isDataAction: {
                serializedName: "isDataAction",
                type: {
                    name: "Boolean"
                }
            },
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            serviceSpecification: {
                serializedName: "properties.serviceSpecification",
                type: {
                    name: "Composite",
                    className: "ApiOperationPropertiesServiceSpecification"
                }
            }
        }
    }
};
export const ApiOperationDisplay = {
    type: {
        name: "Composite",
        className: "ApiOperationDisplay",
        modelProperties: {
            operation: {
                serializedName: "operation",
                type: {
                    name: "String"
                }
            },
            provider: {
                serializedName: "provider",
                type: {
                    name: "String"
                }
            },
            resource: {
                serializedName: "resource",
                type: {
                    name: "String"
                }
            },
            description: {
                serializedName: "description",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ApiOperationPropertiesServiceSpecification = {
    type: {
        name: "Composite",
        className: "ApiOperationPropertiesServiceSpecification",
        modelProperties: {
            metricSpecifications: {
                serializedName: "metricSpecifications",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "MetricSpecification"
                        }
                    }
                }
            },
            logSpecifications: {
                serializedName: "logSpecifications",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "LogSpecification"
                        }
                    }
                }
            }
        }
    }
};
export const MetricSpecification = {
    type: {
        name: "Composite",
        className: "MetricSpecification",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            displayName: {
                serializedName: "displayName",
                type: {
                    name: "String"
                }
            },
            displayDescription: {
                serializedName: "displayDescription",
                type: {
                    name: "String"
                }
            },
            unit: {
                serializedName: "unit",
                type: {
                    name: "String"
                }
            },
            aggregationType: {
                serializedName: "aggregationType",
                type: {
                    name: "String"
                }
            },
            supportedAggregationTypes: {
                serializedName: "supportedAggregationTypes",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            metricClass: {
                serializedName: "metricClass",
                type: {
                    name: "String"
                }
            },
            dimensions: {
                serializedName: "dimensions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "MetricDimension"
                        }
                    }
                }
            }
        }
    }
};
export const MetricDimension = {
    type: {
        name: "Composite",
        className: "MetricDimension",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            displayName: {
                serializedName: "displayName",
                type: {
                    name: "String"
                }
            },
            internalName: {
                serializedName: "internalName",
                type: {
                    name: "String"
                }
            },
            toBeExportedForShoebox: {
                serializedName: "toBeExportedForShoebox",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export const LogSpecification = {
    type: {
        name: "Composite",
        className: "LogSpecification",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            displayName: {
                serializedName: "displayName",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ResourceSkusResult = {
    type: {
        name: "Composite",
        className: "ResourceSkusResult",
        modelProperties: {
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            },
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ResourceSku"
                        }
                    }
                }
            }
        }
    }
};
export const ResourceSku = {
    type: {
        name: "Composite",
        className: "ResourceSku",
        modelProperties: {
            resourceType: {
                serializedName: "resourceType",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            capabilities: {
                serializedName: "capabilities",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ResourceSkuCapabilities"
                        }
                    }
                }
            },
            locations: {
                serializedName: "locations",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            locationInfo: {
                serializedName: "locationInfo",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ResourceSkuLocationInfo"
                        }
                    }
                }
            },
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            restrictions: {
                serializedName: "restrictions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Restriction"
                        }
                    }
                }
            }
        }
    }
};
export const ResourceSkuCapabilities = {
    type: {
        name: "Composite",
        className: "ResourceSkuCapabilities",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            value: {
                serializedName: "value",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ResourceSkuLocationInfo = {
    type: {
        name: "Composite",
        className: "ResourceSkuLocationInfo",
        modelProperties: {
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            zones: {
                serializedName: "zones",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export const Restriction = {
    type: {
        name: "Composite",
        className: "Restriction",
        modelProperties: {
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            values: {
                serializedName: "values",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            reasonCode: {
                serializedName: "reasonCode",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const UsageModelsResult = {
    type: {
        name: "Composite",
        className: "UsageModelsResult",
        modelProperties: {
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            },
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "UsageModel"
                        }
                    }
                }
            }
        }
    }
};
export const UsageModel = {
    type: {
        name: "Composite",
        className: "UsageModel",
        modelProperties: {
            display: {
                serializedName: "display",
                type: {
                    name: "Composite",
                    className: "UsageModelDisplay"
                }
            },
            modelName: {
                serializedName: "modelName",
                type: {
                    name: "String"
                }
            },
            targetType: {
                serializedName: "targetType",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const UsageModelDisplay = {
    type: {
        name: "Composite",
        className: "UsageModelDisplay",
        modelProperties: {
            description: {
                serializedName: "description",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const AscOperation = {
    type: {
        name: "Composite",
        className: "AscOperation",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            startTime: {
                serializedName: "startTime",
                type: {
                    name: "String"
                }
            },
            endTime: {
                serializedName: "endTime",
                type: {
                    name: "String"
                }
            },
            status: {
                serializedName: "status",
                type: {
                    name: "String"
                }
            },
            error: {
                serializedName: "error",
                type: {
                    name: "Composite",
                    className: "ErrorResponse"
                }
            },
            output: {
                serializedName: "properties.output",
                type: {
                    name: "Dictionary",
                    value: {
                        type: { name: "Dictionary", value: { type: { name: "any" } } }
                    }
                }
            }
        }
    }
};
export const ErrorResponse = {
    type: {
        name: "Composite",
        className: "ErrorResponse",
        modelProperties: {
            code: {
                serializedName: "code",
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ResourceUsagesListResult = {
    type: {
        name: "Composite",
        className: "ResourceUsagesListResult",
        modelProperties: {
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ResourceUsage"
                        }
                    }
                }
            }
        }
    }
};
export const ResourceUsage = {
    type: {
        name: "Composite",
        className: "ResourceUsage",
        modelProperties: {
            limit: {
                constraints: {
                    InclusiveMinimum: 0
                },
                serializedName: "limit",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            unit: {
                serializedName: "unit",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            currentValue: {
                constraints: {
                    InclusiveMinimum: 0
                },
                serializedName: "currentValue",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            name: {
                serializedName: "name",
                type: {
                    name: "Composite",
                    className: "ResourceUsageName"
                }
            }
        }
    }
};
export const ResourceUsageName = {
    type: {
        name: "Composite",
        className: "ResourceUsageName",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "String"
                }
            },
            localizedValue: {
                serializedName: "localizedValue",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CachesListResult = {
    type: {
        name: "Composite",
        className: "CachesListResult",
        modelProperties: {
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            },
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Cache"
                        }
                    }
                }
            }
        }
    }
};
export const Cache = {
    type: {
        name: "Composite",
        className: "Cache",
        modelProperties: {
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            },
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            name: {
                constraints: {
                    Pattern: new RegExp("^[-0-9a-zA-Z_]{1,80}$")
                },
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            identity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "CacheIdentity"
                }
            },
            systemData: {
                serializedName: "systemData",
                type: {
                    name: "Composite",
                    className: "SystemData"
                }
            },
            sku: {
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "CacheSku"
                }
            },
            cacheSizeGB: {
                serializedName: "properties.cacheSizeGB",
                type: {
                    name: "Number"
                }
            },
            health: {
                serializedName: "properties.health",
                type: {
                    name: "Composite",
                    className: "CacheHealth"
                }
            },
            mountAddresses: {
                serializedName: "properties.mountAddresses",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            provisioningState: {
                serializedName: "properties.provisioningState",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            subnet: {
                serializedName: "properties.subnet",
                type: {
                    name: "String"
                }
            },
            upgradeStatus: {
                serializedName: "properties.upgradeStatus",
                type: {
                    name: "Composite",
                    className: "CacheUpgradeStatus"
                }
            },
            upgradeSettings: {
                serializedName: "properties.upgradeSettings",
                type: {
                    name: "Composite",
                    className: "CacheUpgradeSettings"
                }
            },
            networkSettings: {
                serializedName: "properties.networkSettings",
                type: {
                    name: "Composite",
                    className: "CacheNetworkSettings"
                }
            },
            encryptionSettings: {
                serializedName: "properties.encryptionSettings",
                type: {
                    name: "Composite",
                    className: "CacheEncryptionSettings"
                }
            },
            securitySettings: {
                serializedName: "properties.securitySettings",
                type: {
                    name: "Composite",
                    className: "CacheSecuritySettings"
                }
            },
            directoryServicesSettings: {
                serializedName: "properties.directoryServicesSettings",
                type: {
                    name: "Composite",
                    className: "CacheDirectorySettings"
                }
            },
            zones: {
                serializedName: "properties.zones",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            primingJobs: {
                serializedName: "properties.primingJobs",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "PrimingJob"
                        }
                    }
                }
            },
            spaceAllocation: {
                serializedName: "properties.spaceAllocation",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "StorageTargetSpaceAllocation"
                        }
                    }
                }
            }
        }
    }
};
export const CacheIdentity = {
    type: {
        name: "Composite",
        className: "CacheIdentity",
        modelProperties: {
            principalId: {
                serializedName: "principalId",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            tenantId: {
                serializedName: "tenantId",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned",
                        "None"
                    ]
                }
            },
            userAssignedIdentities: {
                serializedName: "userAssignedIdentities",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "Composite",
                            className: "UserAssignedIdentitiesValue"
                        }
                    }
                }
            }
        }
    }
};
export const CacheHealth = {
    type: {
        name: "Composite",
        className: "CacheHealth",
        modelProperties: {
            state: {
                serializedName: "state",
                type: {
                    name: "String"
                }
            },
            statusDescription: {
                serializedName: "statusDescription",
                type: {
                    name: "String"
                }
            },
            conditions: {
                serializedName: "conditions",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Condition"
                        }
                    }
                }
            }
        }
    }
};
export const Condition = {
    type: {
        name: "Composite",
        className: "Condition",
        modelProperties: {
            timestamp: {
                serializedName: "timestamp",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            },
            message: {
                serializedName: "message",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CacheUpgradeStatus = {
    type: {
        name: "Composite",
        className: "CacheUpgradeStatus",
        modelProperties: {
            currentFirmwareVersion: {
                serializedName: "currentFirmwareVersion",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            firmwareUpdateStatus: {
                serializedName: "firmwareUpdateStatus",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            firmwareUpdateDeadline: {
                serializedName: "firmwareUpdateDeadline",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            },
            lastFirmwareUpdate: {
                serializedName: "lastFirmwareUpdate",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            },
            pendingFirmwareVersion: {
                serializedName: "pendingFirmwareVersion",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CacheUpgradeSettings = {
    type: {
        name: "Composite",
        className: "CacheUpgradeSettings",
        modelProperties: {
            upgradeScheduleEnabled: {
                serializedName: "upgradeScheduleEnabled",
                type: {
                    name: "Boolean"
                }
            },
            scheduledTime: {
                serializedName: "scheduledTime",
                type: {
                    name: "DateTime"
                }
            }
        }
    }
};
export const CacheNetworkSettings = {
    type: {
        name: "Composite",
        className: "CacheNetworkSettings",
        modelProperties: {
            mtu: {
                defaultValue: 1500,
                constraints: {
                    InclusiveMaximum: 1500,
                    InclusiveMinimum: 576
                },
                serializedName: "mtu",
                type: {
                    name: "Number"
                }
            },
            utilityAddresses: {
                serializedName: "utilityAddresses",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            dnsServers: {
                serializedName: "dnsServers",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            dnsSearchDomain: {
                serializedName: "dnsSearchDomain",
                type: {
                    name: "String"
                }
            },
            ntpServer: {
                defaultValue: "time.windows.com",
                serializedName: "ntpServer",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CacheEncryptionSettings = {
    type: {
        name: "Composite",
        className: "CacheEncryptionSettings",
        modelProperties: {
            keyEncryptionKey: {
                serializedName: "keyEncryptionKey",
                type: {
                    name: "Composite",
                    className: "KeyVaultKeyReference"
                }
            },
            rotationToLatestKeyVersionEnabled: {
                serializedName: "rotationToLatestKeyVersionEnabled",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export const CacheSecuritySettings = {
    type: {
        name: "Composite",
        className: "CacheSecuritySettings",
        modelProperties: {
            accessPolicies: {
                serializedName: "accessPolicies",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "NfsAccessPolicy"
                        }
                    }
                }
            }
        }
    }
};
export const NfsAccessPolicy = {
    type: {
        name: "Composite",
        className: "NfsAccessPolicy",
        modelProperties: {
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String"
                }
            },
            accessRules: {
                serializedName: "accessRules",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "NfsAccessRule"
                        }
                    }
                }
            }
        }
    }
};
export const NfsAccessRule = {
    type: {
        name: "Composite",
        className: "NfsAccessRule",
        modelProperties: {
            scope: {
                serializedName: "scope",
                required: true,
                type: {
                    name: "String"
                }
            },
            filter: {
                serializedName: "filter",
                type: {
                    name: "String"
                }
            },
            access: {
                serializedName: "access",
                required: true,
                type: {
                    name: "String"
                }
            },
            suid: {
                serializedName: "suid",
                type: {
                    name: "Boolean"
                }
            },
            submountAccess: {
                serializedName: "submountAccess",
                type: {
                    name: "Boolean"
                }
            },
            rootSquash: {
                serializedName: "rootSquash",
                type: {
                    name: "Boolean"
                }
            },
            anonymousUID: {
                serializedName: "anonymousUID",
                type: {
                    name: "String"
                }
            },
            anonymousGID: {
                serializedName: "anonymousGID",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CacheDirectorySettings = {
    type: {
        name: "Composite",
        className: "CacheDirectorySettings",
        modelProperties: {
            activeDirectory: {
                serializedName: "activeDirectory",
                type: {
                    name: "Composite",
                    className: "CacheActiveDirectorySettings"
                }
            },
            usernameDownload: {
                serializedName: "usernameDownload",
                type: {
                    name: "Composite",
                    className: "CacheUsernameDownloadSettings"
                }
            }
        }
    }
};
export const CacheActiveDirectorySettings = {
    type: {
        name: "Composite",
        className: "CacheActiveDirectorySettings",
        modelProperties: {
            primaryDnsIpAddress: {
                serializedName: "primaryDnsIpAddress",
                required: true,
                type: {
                    name: "String"
                }
            },
            secondaryDnsIpAddress: {
                serializedName: "secondaryDnsIpAddress",
                type: {
                    name: "String"
                }
            },
            domainName: {
                serializedName: "domainName",
                required: true,
                type: {
                    name: "String"
                }
            },
            domainNetBiosName: {
                serializedName: "domainNetBiosName",
                required: true,
                type: {
                    name: "String"
                }
            },
            cacheNetBiosName: {
                constraints: {
                    Pattern: new RegExp("^[-0-9a-zA-Z]{1,15}$")
                },
                serializedName: "cacheNetBiosName",
                required: true,
                type: {
                    name: "String"
                }
            },
            domainJoined: {
                serializedName: "domainJoined",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            credentials: {
                serializedName: "credentials",
                type: {
                    name: "Composite",
                    className: "CacheActiveDirectorySettingsCredentials"
                }
            }
        }
    }
};
export const CacheActiveDirectorySettingsCredentials = {
    type: {
        name: "Composite",
        className: "CacheActiveDirectorySettingsCredentials",
        modelProperties: {
            username: {
                serializedName: "username",
                required: true,
                type: {
                    name: "String"
                }
            },
            password: {
                serializedName: "password",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CacheUsernameDownloadSettings = {
    type: {
        name: "Composite",
        className: "CacheUsernameDownloadSettings",
        modelProperties: {
            extendedGroups: {
                serializedName: "extendedGroups",
                type: {
                    name: "Boolean"
                }
            },
            usernameSource: {
                defaultValue: "None",
                serializedName: "usernameSource",
                type: {
                    name: "String"
                }
            },
            groupFileURI: {
                serializedName: "groupFileURI",
                type: {
                    name: "String"
                }
            },
            userFileURI: {
                serializedName: "userFileURI",
                type: {
                    name: "String"
                }
            },
            ldapServer: {
                serializedName: "ldapServer",
                type: {
                    name: "String"
                }
            },
            ldapBaseDN: {
                serializedName: "ldapBaseDN",
                type: {
                    name: "String"
                }
            },
            encryptLdapConnection: {
                defaultValue: false,
                serializedName: "encryptLdapConnection",
                type: {
                    name: "Boolean"
                }
            },
            requireValidCertificate: {
                defaultValue: false,
                serializedName: "requireValidCertificate",
                type: {
                    name: "Boolean"
                }
            },
            autoDownloadCertificate: {
                defaultValue: false,
                serializedName: "autoDownloadCertificate",
                type: {
                    name: "Boolean"
                }
            },
            caCertificateURI: {
                serializedName: "caCertificateURI",
                type: {
                    name: "String"
                }
            },
            usernameDownloaded: {
                serializedName: "usernameDownloaded",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            credentials: {
                serializedName: "credentials",
                type: {
                    name: "Composite",
                    className: "CacheUsernameDownloadSettingsCredentials"
                }
            }
        }
    }
};
export const CacheUsernameDownloadSettingsCredentials = {
    type: {
        name: "Composite",
        className: "CacheUsernameDownloadSettingsCredentials",
        modelProperties: {
            bindDn: {
                serializedName: "bindDn",
                type: {
                    name: "String"
                }
            },
            bindPassword: {
                serializedName: "bindPassword",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const PrimingJob = {
    type: {
        name: "Composite",
        className: "PrimingJob",
        modelProperties: {
            primingJobName: {
                constraints: {
                    Pattern: new RegExp("^[-0-9a-zA-Z_]{1,80}$")
                },
                serializedName: "primingJobName",
                required: true,
                type: {
                    name: "String"
                }
            },
            primingManifestUrl: {
                serializedName: "primingManifestUrl",
                required: true,
                type: {
                    name: "String"
                }
            },
            primingJobId: {
                constraints: {
                    Pattern: new RegExp("^[-0-9a-zA-Z_]{1,80}$")
                },
                serializedName: "primingJobId",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            primingJobState: {
                serializedName: "primingJobState",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            primingJobStatus: {
                serializedName: "primingJobStatus",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            primingJobDetails: {
                serializedName: "primingJobDetails",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            primingJobPercentComplete: {
                constraints: {
                    InclusiveMaximum: 100,
                    InclusiveMinimum: 0
                },
                serializedName: "primingJobPercentComplete",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const StorageTargetSpaceAllocation = {
    type: {
        name: "Composite",
        className: "StorageTargetSpaceAllocation",
        modelProperties: {
            name: {
                constraints: {
                    Pattern: new RegExp("^[-0-9a-zA-Z_]{1,80}$")
                },
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            allocationPercentage: {
                constraints: {
                    InclusiveMaximum: 100,
                    InclusiveMinimum: 1
                },
                serializedName: "allocationPercentage",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const CacheSku = {
    type: {
        name: "Composite",
        className: "CacheSku",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const StorageTargetsResult = {
    type: {
        name: "Composite",
        className: "StorageTargetsResult",
        modelProperties: {
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            },
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "StorageTarget"
                        }
                    }
                }
            }
        }
    }
};
export const NamespaceJunction = {
    type: {
        name: "Composite",
        className: "NamespaceJunction",
        modelProperties: {
            namespacePath: {
                serializedName: "namespacePath",
                type: {
                    name: "String"
                }
            },
            targetPath: {
                serializedName: "targetPath",
                type: {
                    name: "String"
                }
            },
            nfsExport: {
                serializedName: "nfsExport",
                type: {
                    name: "String"
                }
            },
            nfsAccessPolicy: {
                defaultValue: "default",
                serializedName: "nfsAccessPolicy",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const Nfs3Target = {
    type: {
        name: "Composite",
        className: "Nfs3Target",
        modelProperties: {
            target: {
                constraints: {
                    Pattern: new RegExp("^[-.,0-9a-zA-Z]+$")
                },
                serializedName: "target",
                type: {
                    name: "String"
                }
            },
            usageModel: {
                serializedName: "usageModel",
                type: {
                    name: "String"
                }
            },
            verificationTimer: {
                serializedName: "verificationTimer",
                type: {
                    name: "Number"
                }
            },
            writeBackTimer: {
                serializedName: "writeBackTimer",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const ClfsTarget = {
    type: {
        name: "Composite",
        className: "ClfsTarget",
        modelProperties: {
            target: {
                serializedName: "target",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const UnknownTarget = {
    type: {
        name: "Composite",
        className: "UnknownTarget",
        modelProperties: {
            attributes: {
                serializedName: "attributes",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            }
        }
    }
};
export const BlobNfsTarget = {
    type: {
        name: "Composite",
        className: "BlobNfsTarget",
        modelProperties: {
            target: {
                serializedName: "target",
                type: {
                    name: "String"
                }
            },
            usageModel: {
                serializedName: "usageModel",
                type: {
                    name: "String"
                }
            },
            verificationTimer: {
                serializedName: "verificationTimer",
                type: {
                    name: "Number"
                }
            },
            writeBackTimer: {
                serializedName: "writeBackTimer",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const StorageTargetResource = {
    type: {
        name: "Composite",
        className: "StorageTargetResource",
        modelProperties: {
            name: {
                constraints: {
                    Pattern: new RegExp("^[-0-9a-zA-Z_]{1,80}$")
                },
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            systemData: {
                serializedName: "systemData",
                type: {
                    name: "Composite",
                    className: "SystemData"
                }
            }
        }
    }
};
export const PrimingJobIdParameter = {
    type: {
        name: "Composite",
        className: "PrimingJobIdParameter",
        modelProperties: {
            primingJobId: {
                constraints: {
                    Pattern: new RegExp("^[-0-9a-zA-Z_]{1,80}$")
                },
                serializedName: "primingJobId",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const TrackedResource = {
    type: {
        name: "Composite",
        className: "TrackedResource",
        modelProperties: Object.assign(Object.assign({}, Resource.type.modelProperties), { tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            }, location: {
                serializedName: "location",
                required: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const StorageTarget = {
    type: {
        name: "Composite",
        className: "StorageTarget",
        modelProperties: Object.assign(Object.assign({}, StorageTargetResource.type.modelProperties), { junctions: {
                serializedName: "properties.junctions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "NamespaceJunction"
                        }
                    }
                }
            }, targetType: {
                serializedName: "properties.targetType",
                type: {
                    name: "String"
                }
            }, provisioningState: {
                serializedName: "properties.provisioningState",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, state: {
                serializedName: "properties.state",
                type: {
                    name: "String"
                }
            }, nfs3: {
                serializedName: "properties.nfs3",
                type: {
                    name: "Composite",
                    className: "Nfs3Target"
                }
            }, clfs: {
                serializedName: "properties.clfs",
                type: {
                    name: "Composite",
                    className: "ClfsTarget"
                }
            }, unknown: {
                serializedName: "properties.unknown",
                type: {
                    name: "Composite",
                    className: "UnknownTarget"
                }
            }, blobNfs: {
                serializedName: "properties.blobNfs",
                type: {
                    name: "Composite",
                    className: "BlobNfsTarget"
                }
            }, allocationPercentage: {
                constraints: {
                    InclusiveMaximum: 100,
                    InclusiveMinimum: 1
                },
                serializedName: "properties.allocationPercentage",
                readOnly: true,
                type: {
                    name: "Number"
                }
            } })
    }
};
export const AmlFilesystem = {
    type: {
        name: "Composite",
        className: "AmlFilesystem",
        modelProperties: Object.assign(Object.assign({}, TrackedResource.type.modelProperties), { identity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "AmlFilesystemIdentity"
                }
            }, sku: {
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "SkuName"
                }
            }, zones: {
                serializedName: "zones",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, storageCapacityTiB: {
                serializedName: "properties.storageCapacityTiB",
                type: {
                    name: "Number"
                }
            }, health: {
                serializedName: "properties.health",
                type: {
                    name: "Composite",
                    className: "AmlFilesystemHealth"
                }
            }, provisioningState: {
                serializedName: "properties.provisioningState",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, filesystemSubnet: {
                serializedName: "properties.filesystemSubnet",
                type: {
                    name: "String"
                }
            }, clientInfo: {
                serializedName: "properties.clientInfo",
                type: {
                    name: "Composite",
                    className: "AmlFilesystemClientInfo"
                }
            }, throughputProvisionedMBps: {
                serializedName: "properties.throughputProvisionedMBps",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }, encryptionSettings: {
                serializedName: "properties.encryptionSettings",
                type: {
                    name: "Composite",
                    className: "AmlFilesystemEncryptionSettings"
                }
            }, maintenanceWindow: {
                serializedName: "properties.maintenanceWindow",
                type: {
                    name: "Composite",
                    className: "AmlFilesystemPropertiesMaintenanceWindow"
                }
            }, hsm: {
                serializedName: "properties.hsm",
                type: {
                    name: "Composite",
                    className: "AmlFilesystemPropertiesHsm"
                }
            } })
    }
};
export const AmlFilesystemsDeleteHeaders = {
    type: {
        name: "Composite",
        className: "AmlFilesystemsDeleteHeaders",
        modelProperties: {
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const AmlFilesystemsCreateOrUpdateHeaders = {
    type: {
        name: "Composite",
        className: "AmlFilesystemsCreateOrUpdateHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-async-operation",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const AmlFilesystemsUpdateHeaders = {
    type: {
        name: "Composite",
        className: "AmlFilesystemsUpdateHeaders",
        modelProperties: {
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            azureAsyncOperation: {
                serializedName: "azure-async-operation",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CachesDeleteHeaders = {
    type: {
        name: "Composite",
        className: "CachesDeleteHeaders",
        modelProperties: {
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CachesUpdateHeaders = {
    type: {
        name: "Composite",
        className: "CachesUpdateHeaders",
        modelProperties: {
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CachesDebugInfoHeaders = {
    type: {
        name: "Composite",
        className: "CachesDebugInfoHeaders",
        modelProperties: {
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CachesFlushHeaders = {
    type: {
        name: "Composite",
        className: "CachesFlushHeaders",
        modelProperties: {
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CachesStartHeaders = {
    type: {
        name: "Composite",
        className: "CachesStartHeaders",
        modelProperties: {
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CachesStopHeaders = {
    type: {
        name: "Composite",
        className: "CachesStopHeaders",
        modelProperties: {
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CachesStartPrimingJobHeaders = {
    type: {
        name: "Composite",
        className: "CachesStartPrimingJobHeaders",
        modelProperties: {
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CachesStopPrimingJobHeaders = {
    type: {
        name: "Composite",
        className: "CachesStopPrimingJobHeaders",
        modelProperties: {
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CachesPausePrimingJobHeaders = {
    type: {
        name: "Composite",
        className: "CachesPausePrimingJobHeaders",
        modelProperties: {
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CachesResumePrimingJobHeaders = {
    type: {
        name: "Composite",
        className: "CachesResumePrimingJobHeaders",
        modelProperties: {
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CachesUpgradeFirmwareHeaders = {
    type: {
        name: "Composite",
        className: "CachesUpgradeFirmwareHeaders",
        modelProperties: {
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CachesSpaceAllocationHeaders = {
    type: {
        name: "Composite",
        className: "CachesSpaceAllocationHeaders",
        modelProperties: {
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const StorageTargetsDnsRefreshHeaders = {
    type: {
        name: "Composite",
        className: "StorageTargetsDnsRefreshHeaders",
        modelProperties: {
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const StorageTargetsDeleteHeaders = {
    type: {
        name: "Composite",
        className: "StorageTargetsDeleteHeaders",
        modelProperties: {
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const StorageTargetsRestoreDefaultsHeaders = {
    type: {
        name: "Composite",
        className: "StorageTargetsRestoreDefaultsHeaders",
        modelProperties: {
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const StorageTargetFlushHeaders = {
    type: {
        name: "Composite",
        className: "StorageTargetFlushHeaders",
        modelProperties: {
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const StorageTargetSuspendHeaders = {
    type: {
        name: "Composite",
        className: "StorageTargetSuspendHeaders",
        modelProperties: {
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const StorageTargetResumeHeaders = {
    type: {
        name: "Composite",
        className: "StorageTargetResumeHeaders",
        modelProperties: {
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const StorageTargetInvalidateHeaders = {
    type: {
        name: "Composite",
        className: "StorageTargetInvalidateHeaders",
        modelProperties: {
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            }
        }
    }
};
//# sourceMappingURL=mappers.js.map