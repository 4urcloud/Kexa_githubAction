import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { AmlFilesystems } from "../operationsInterfaces";
import { StorageCacheManagementClient } from "../storageCacheManagementClient";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import { AmlFilesystem, AmlFilesystemsListOptionalParams, AmlFilesystemsListByResourceGroupOptionalParams, AmlFilesystemsDeleteOptionalParams, AmlFilesystemsGetOptionalParams, AmlFilesystemsGetResponse, AmlFilesystemsCreateOrUpdateOptionalParams, AmlFilesystemsCreateOrUpdateResponse, AmlFilesystemUpdate, AmlFilesystemsUpdateOptionalParams, AmlFilesystemsUpdateResponse, AmlFilesystemsArchiveOptionalParams, AmlFilesystemsCancelArchiveOptionalParams } from "../models";
/** Class containing AmlFilesystems operations. */
export declare class AmlFilesystemsImpl implements AmlFilesystems {
    private readonly client;
    /**
     * Initialize a new instance of the class AmlFilesystems class.
     * @param client Reference to the service client
     */
    constructor(client: StorageCacheManagementClient);
    /**
     * Returns all AML file systems the user has access to under a subscription.
     * @param options The options parameters.
     */
    list(options?: AmlFilesystemsListOptionalParams): PagedAsyncIterableIterator<AmlFilesystem>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Returns all AML file systems the user has access to under a resource group.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: AmlFilesystemsListByResourceGroupOptionalParams): PagedAsyncIterableIterator<AmlFilesystem>;
    private listByResourceGroupPagingPage;
    private listByResourceGroupPagingAll;
    /**
     * Returns all AML file systems the user has access to under a subscription.
     * @param options The options parameters.
     */
    private _list;
    /**
     * Returns all AML file systems the user has access to under a resource group.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    private _listByResourceGroup;
    /**
     * Schedules an AML file system for deletion.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param amlFilesystemName Name for the AML file system. Allows alphanumerics, underscores, and
     *                          hyphens. Start and end with alphanumeric.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, amlFilesystemName: string, options?: AmlFilesystemsDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Schedules an AML file system for deletion.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param amlFilesystemName Name for the AML file system. Allows alphanumerics, underscores, and
     *                          hyphens. Start and end with alphanumeric.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, amlFilesystemName: string, options?: AmlFilesystemsDeleteOptionalParams): Promise<void>;
    /**
     * Returns an AML file system.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param amlFilesystemName Name for the AML file system. Allows alphanumerics, underscores, and
     *                          hyphens. Start and end with alphanumeric.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, amlFilesystemName: string, options?: AmlFilesystemsGetOptionalParams): Promise<AmlFilesystemsGetResponse>;
    /**
     * Create or update an AML file system.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param amlFilesystemName Name for the AML file system. Allows alphanumerics, underscores, and
     *                          hyphens. Start and end with alphanumeric.
     * @param amlFilesystem Object containing the user-selectable properties of the AML file system. If
     *                      read-only properties are included, they must match the existing values of those properties.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, amlFilesystemName: string, amlFilesystem: AmlFilesystem, options?: AmlFilesystemsCreateOrUpdateOptionalParams): Promise<SimplePollerLike<OperationState<AmlFilesystemsCreateOrUpdateResponse>, AmlFilesystemsCreateOrUpdateResponse>>;
    /**
     * Create or update an AML file system.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param amlFilesystemName Name for the AML file system. Allows alphanumerics, underscores, and
     *                          hyphens. Start and end with alphanumeric.
     * @param amlFilesystem Object containing the user-selectable properties of the AML file system. If
     *                      read-only properties are included, they must match the existing values of those properties.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, amlFilesystemName: string, amlFilesystem: AmlFilesystem, options?: AmlFilesystemsCreateOrUpdateOptionalParams): Promise<AmlFilesystemsCreateOrUpdateResponse>;
    /**
     * Update an AML file system instance.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param amlFilesystemName Name for the AML file system. Allows alphanumerics, underscores, and
     *                          hyphens. Start and end with alphanumeric.
     * @param amlFilesystem Object containing the user-selectable properties of the AML file system. If
     *                      read-only properties are included, they must match the existing values of those properties.
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, amlFilesystemName: string, amlFilesystem: AmlFilesystemUpdate, options?: AmlFilesystemsUpdateOptionalParams): Promise<SimplePollerLike<OperationState<AmlFilesystemsUpdateResponse>, AmlFilesystemsUpdateResponse>>;
    /**
     * Update an AML file system instance.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param amlFilesystemName Name for the AML file system. Allows alphanumerics, underscores, and
     *                          hyphens. Start and end with alphanumeric.
     * @param amlFilesystem Object containing the user-selectable properties of the AML file system. If
     *                      read-only properties are included, they must match the existing values of those properties.
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, amlFilesystemName: string, amlFilesystem: AmlFilesystemUpdate, options?: AmlFilesystemsUpdateOptionalParams): Promise<AmlFilesystemsUpdateResponse>;
    /**
     * Archive data from the AML file system.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param amlFilesystemName Name for the AML file system. Allows alphanumerics, underscores, and
     *                          hyphens. Start and end with alphanumeric.
     * @param options The options parameters.
     */
    archive(resourceGroupName: string, amlFilesystemName: string, options?: AmlFilesystemsArchiveOptionalParams): Promise<void>;
    /**
     * Cancel archiving data from the AML file system.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param amlFilesystemName Name for the AML file system. Allows alphanumerics, underscores, and
     *                          hyphens. Start and end with alphanumeric.
     * @param options The options parameters.
     */
    cancelArchive(resourceGroupName: string, amlFilesystemName: string, options?: AmlFilesystemsCancelArchiveOptionalParams): Promise<void>;
    /**
     * ListNext
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
    /**
     * ListByResourceGroupNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.
     * @param options The options parameters.
     */
    private _listByResourceGroupNext;
}
//# sourceMappingURL=amlFilesystems.d.ts.map