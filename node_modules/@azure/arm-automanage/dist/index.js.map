{"version":3,"file":"index.js","sources":["../src/models/index.ts","../src/models/mappers.ts","../src/models/parameters.ts","../src/operations/bestPractices.ts","../src/operations/bestPracticesVersions.ts","../src/operations/configurationProfiles.ts","../src/operations/configurationProfilesVersions.ts","../src/operations/configurationProfileAssignments.ts","../src/operations/operations.ts","../src/operations/reports.ts","../src/operations/servicePrincipals.ts","../src/operations/configurationProfileHcrpAssignments.ts","../src/operations/hcrpReports.ts","../src/operations/configurationProfileHCIAssignments.ts","../src/operations/hCIReports.ts","../src/automanageClient.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\n/** Definition of the Automanage best practice. */\nexport interface BestPractice {\n  /**\n   * The fully qualified ID for the best practice.  For example, /providers/Microsoft.Automanage/bestPractices/azureBestPracticesProduction\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The type of the resource.  For example, Microsoft.Automanage/bestPractices\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * The name of the best practice. For example, azureBestPracticesProduction\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Azure Resource Manager metadata containing createdBy and modifiedBy information.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n  /** configuration dictionary of the configuration profile. */\n  configuration?: Record<string, unknown>;\n}\n\n/** Automanage configuration profile properties. */\nexport interface ConfigurationProfileProperties {\n  /** configuration dictionary of the configuration profile. */\n  configuration?: Record<string, unknown>;\n}\n\n/** Metadata pertaining to creation and last modification of the resource. */\nexport interface SystemData {\n  /** The identity that created the resource. */\n  createdBy?: string;\n  /** The type of identity that created the resource. */\n  createdByType?: CreatedByType;\n  /** The timestamp of resource creation (UTC). */\n  createdAt?: Date;\n  /** The identity that last modified the resource. */\n  lastModifiedBy?: string;\n  /** The type of identity that last modified the resource. */\n  lastModifiedByType?: CreatedByType;\n  /** The timestamp of resource last modification (UTC) */\n  lastModifiedAt?: Date;\n}\n\n/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */\nexport interface ErrorResponse {\n  /** The error object. */\n  error?: ErrorDetail;\n}\n\n/** The error detail. */\nexport interface ErrorDetail {\n  /**\n   * The error code.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly code?: string;\n  /**\n   * The error message.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n  /**\n   * The error target.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly target?: string;\n  /**\n   * The error details.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly details?: ErrorDetail[];\n  /**\n   * The error additional info.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly additionalInfo?: ErrorAdditionalInfo[];\n}\n\n/** The resource management error additional info. */\nexport interface ErrorAdditionalInfo {\n  /**\n   * The additional info type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * The additional info.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly info?: Record<string, unknown>;\n}\n\n/** The response of the list best practice operation. */\nexport interface BestPracticeList {\n  /** Result of the list best practice operation. */\n  value?: BestPractice[];\n}\n\n/** Common fields that are returned in the response for all Azure Resource Manager resources */\nexport interface Resource {\n  /**\n   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The name of the resource\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n}\n\n/** Represents an update resource */\nexport interface UpdateResource {\n  /** The tags of the resource. */\n  tags?: { [propertyName: string]: string };\n}\n\n/** The response of the list configuration profile operation. */\nexport interface ConfigurationProfileList {\n  /** Result of the list ConfigurationProfile operation. */\n  value?: ConfigurationProfile[];\n}\n\n/** Automanage configuration profile assignment properties. */\nexport interface ConfigurationProfileAssignmentProperties {\n  /** The Automanage configurationProfile ARM Resource URI. */\n  configurationProfile?: string;\n  /**\n   * The target VM resource URI\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly targetId?: string;\n  /**\n   * The status of onboarding, which only appears in the response.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: string;\n}\n\n/** The response of the list configuration profile assignment operation. */\nexport interface ConfigurationProfileAssignmentList {\n  /** Result of the list configuration profile assignment operation. */\n  value?: ConfigurationProfileAssignment[];\n}\n\n/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */\nexport interface OperationListResult {\n  /**\n   * List of operations supported by the resource provider\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: Operation[];\n  /**\n   * URL to get the next set of operation list results (if there are any).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Details of a REST API operation, returned from the Resource Provider Operations API */\nexport interface Operation {\n  /**\n   * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isDataAction?: boolean;\n  /** Localized display information for this particular operation. */\n  display?: OperationDisplay;\n  /**\n   * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly origin?: Origin;\n  /**\n   * Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly actionType?: ActionType;\n}\n\n/** Localized display information for this particular operation. */\nexport interface OperationDisplay {\n  /**\n   * The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provider?: string;\n  /**\n   * The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resource?: string;\n  /**\n   * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly operation?: string;\n  /**\n   * The short, localized friendly description of the operation; suitable for tool tips and detailed views.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly description?: string;\n}\n\n/** Details about the resource processed by the configuration profile assignment */\nexport interface ReportResource {\n  /**\n   * Name of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * ARM id of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Type of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * Status of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: string;\n  /**\n   * Error message, if any, returned when deploying the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly error?: ErrorDetail;\n}\n\n/** The response of the list report operation. */\nexport interface ReportList {\n  /** Result of the list report operation. */\n  value?: Report[];\n}\n\n/** The list of ServicePrincipals. */\nexport interface ServicePrincipalListResult {\n  /** The list of servicePrincipals. */\n  value?: ServicePrincipal[];\n}\n\n/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */\nexport interface TrackedResource extends Resource {\n  /** Resource tags. */\n  tags?: { [propertyName: string]: string };\n  /** The geo-location where the resource lives */\n  location: string;\n}\n\n/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */\nexport interface ProxyResource extends Resource {}\n\n/** Definition of the configuration profile. */\nexport interface ConfigurationProfileUpdate extends UpdateResource {\n  /** Properties of the configuration profile. */\n  properties?: ConfigurationProfileProperties;\n}\n\n/** Definition of the configuration profile. */\nexport interface ConfigurationProfile extends TrackedResource {\n  /** Properties of the configuration profile. */\n  properties?: ConfigurationProfileProperties;\n  /**\n   * Azure Resource Manager metadata containing createdBy and modifiedBy information.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n}\n\n/** Configuration profile assignment is an association between a VM and automanage profile configuration. */\nexport interface ConfigurationProfileAssignment extends ProxyResource {\n  /** Properties of the configuration profile assignment. */\n  properties?: ConfigurationProfileAssignmentProperties;\n  /**\n   * Azure resource id. Indicates if this resource is managed by another Azure resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly managedBy?: string;\n  /**\n   * Azure Resource Manager metadata containing createdBy and modifiedBy information.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n}\n\n/** Definition of the report. */\nexport interface Report extends ProxyResource {\n  /**\n   * Azure Resource Manager metadata containing createdBy and modifiedBy information.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n  /** Start time of the configuration profile assignment processing. */\n  startTime?: string;\n  /** End time of the configuration profile assignment processing. */\n  endTime?: string;\n  /**\n   * Last modified time of the configuration profile assignment processing.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastModifiedTime?: string;\n  /**\n   * Duration of the configuration profile assignment processing.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly duration?: string;\n  /**\n   * Type of the configuration profile assignment processing (Initial/Consistency).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly typePropertiesType?: string;\n  /**\n   * The status of the configuration profile assignment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: string;\n  /**\n   * The configurationProfile linked to the assignment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly configurationProfile?: string;\n  /**\n   * List of resources processed by the configuration profile assignment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resources?: ReportResource[];\n  /**\n   * Error message, if any, returned by the configuration profile assignment processing.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly error?: ErrorDetail;\n  /**\n   * Version of the report format\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly reportFormatVersion?: string;\n}\n\n/** The Service Principal Id for the subscription. */\nexport interface ServicePrincipal extends ProxyResource {\n  /**\n   * Azure Resource Manager metadata containing createdBy and modifiedBy information.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n  /**\n   * The Service Principal Id for the subscription.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly servicePrincipalId?: string;\n  /**\n   * Returns the contributor RBAC Role exist or not for the Service Principal Id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly authorizationSet?: boolean;\n}\n\n/** Known values of {@link CreatedByType} that the service accepts. */\nexport enum KnownCreatedByType {\n  /** User */\n  User = \"User\",\n  /** Application */\n  Application = \"Application\",\n  /** ManagedIdentity */\n  ManagedIdentity = \"ManagedIdentity\",\n  /** Key */\n  Key = \"Key\"\n}\n\n/**\n * Defines values for CreatedByType. \\\n * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **User** \\\n * **Application** \\\n * **ManagedIdentity** \\\n * **Key**\n */\nexport type CreatedByType = string;\n\n/** Known values of {@link Origin} that the service accepts. */\nexport enum KnownOrigin {\n  /** User */\n  User = \"user\",\n  /** System */\n  System = \"system\",\n  /** UserSystem */\n  UserSystem = \"user,system\"\n}\n\n/**\n * Defines values for Origin. \\\n * {@link KnownOrigin} can be used interchangeably with Origin,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **user** \\\n * **system** \\\n * **user,system**\n */\nexport type Origin = string;\n\n/** Known values of {@link ActionType} that the service accepts. */\nexport enum KnownActionType {\n  /** Internal */\n  Internal = \"Internal\"\n}\n\n/**\n * Defines values for ActionType. \\\n * {@link KnownActionType} can be used interchangeably with ActionType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Internal**\n */\nexport type ActionType = string;\n\n/** Optional parameters. */\nexport interface BestPracticesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type BestPracticesGetResponse = BestPractice;\n\n/** Optional parameters. */\nexport interface BestPracticesListByTenantOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByTenant operation. */\nexport type BestPracticesListByTenantResponse = BestPracticeList;\n\n/** Optional parameters. */\nexport interface BestPracticesVersionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type BestPracticesVersionsGetResponse = BestPractice;\n\n/** Optional parameters. */\nexport interface BestPracticesVersionsListByTenantOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByTenant operation. */\nexport type BestPracticesVersionsListByTenantResponse = BestPracticeList;\n\n/** Optional parameters. */\nexport interface ConfigurationProfilesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ConfigurationProfilesCreateOrUpdateResponse = ConfigurationProfile;\n\n/** Optional parameters. */\nexport interface ConfigurationProfilesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ConfigurationProfilesGetResponse = ConfigurationProfile;\n\n/** Optional parameters. */\nexport interface ConfigurationProfilesDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ConfigurationProfilesUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the update operation. */\nexport type ConfigurationProfilesUpdateResponse = ConfigurationProfile;\n\n/** Optional parameters. */\nexport interface ConfigurationProfilesListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type ConfigurationProfilesListByResourceGroupResponse = ConfigurationProfileList;\n\n/** Optional parameters. */\nexport interface ConfigurationProfilesListBySubscriptionOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBySubscription operation. */\nexport type ConfigurationProfilesListBySubscriptionResponse = ConfigurationProfileList;\n\n/** Optional parameters. */\nexport interface ConfigurationProfilesVersionsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ConfigurationProfilesVersionsCreateOrUpdateResponse = ConfigurationProfile;\n\n/** Optional parameters. */\nexport interface ConfigurationProfilesVersionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ConfigurationProfilesVersionsGetResponse = ConfigurationProfile;\n\n/** Optional parameters. */\nexport interface ConfigurationProfilesVersionsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ConfigurationProfilesVersionsListChildResourcesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listChildResources operation. */\nexport type ConfigurationProfilesVersionsListChildResourcesResponse = ConfigurationProfileList;\n\n/** Optional parameters. */\nexport interface ConfigurationProfileAssignmentsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ConfigurationProfileAssignmentsCreateOrUpdateResponse = ConfigurationProfileAssignment;\n\n/** Optional parameters. */\nexport interface ConfigurationProfileAssignmentsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ConfigurationProfileAssignmentsGetResponse = ConfigurationProfileAssignment;\n\n/** Optional parameters. */\nexport interface ConfigurationProfileAssignmentsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ConfigurationProfileAssignmentsListByVirtualMachinesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByVirtualMachines operation. */\nexport type ConfigurationProfileAssignmentsListByVirtualMachinesResponse = ConfigurationProfileAssignmentList;\n\n/** Optional parameters. */\nexport interface ConfigurationProfileAssignmentsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type ConfigurationProfileAssignmentsListResponse = ConfigurationProfileAssignmentList;\n\n/** Optional parameters. */\nexport interface ConfigurationProfileAssignmentsListBySubscriptionOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBySubscription operation. */\nexport type ConfigurationProfileAssignmentsListBySubscriptionResponse = ConfigurationProfileAssignmentList;\n\n/** Optional parameters. */\nexport interface ConfigurationProfileAssignmentsListByMachineNameOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByMachineName operation. */\nexport type ConfigurationProfileAssignmentsListByMachineNameResponse = ConfigurationProfileAssignmentList;\n\n/** Optional parameters. */\nexport interface ConfigurationProfileAssignmentsListByClusterNameOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByClusterName operation. */\nexport type ConfigurationProfileAssignmentsListByClusterNameResponse = ConfigurationProfileAssignmentList;\n\n/** Optional parameters. */\nexport interface OperationsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type OperationsListResponse = OperationListResult;\n\n/** Optional parameters. */\nexport interface ReportsGetOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ReportsGetResponse = Report;\n\n/** Optional parameters. */\nexport interface ReportsListByConfigurationProfileAssignmentsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByConfigurationProfileAssignments operation. */\nexport type ReportsListByConfigurationProfileAssignmentsResponse = ReportList;\n\n/** Optional parameters. */\nexport interface ServicePrincipalsListBySubscriptionOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBySubscription operation. */\nexport type ServicePrincipalsListBySubscriptionResponse = ServicePrincipalListResult;\n\n/** Optional parameters. */\nexport interface ServicePrincipalsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ServicePrincipalsGetResponse = ServicePrincipal;\n\n/** Optional parameters. */\nexport interface ConfigurationProfileHcrpAssignmentsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ConfigurationProfileHcrpAssignmentsCreateOrUpdateResponse = ConfigurationProfileAssignment;\n\n/** Optional parameters. */\nexport interface ConfigurationProfileHcrpAssignmentsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ConfigurationProfileHcrpAssignmentsGetResponse = ConfigurationProfileAssignment;\n\n/** Optional parameters. */\nexport interface ConfigurationProfileHcrpAssignmentsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface HcrpReportsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type HcrpReportsGetResponse = Report;\n\n/** Optional parameters. */\nexport interface HcrpReportsListByConfigurationProfileAssignmentsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByConfigurationProfileAssignments operation. */\nexport type HcrpReportsListByConfigurationProfileAssignmentsResponse = ReportList;\n\n/** Optional parameters. */\nexport interface ConfigurationProfileHCIAssignmentsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ConfigurationProfileHCIAssignmentsCreateOrUpdateResponse = ConfigurationProfileAssignment;\n\n/** Optional parameters. */\nexport interface ConfigurationProfileHCIAssignmentsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ConfigurationProfileHCIAssignmentsGetResponse = ConfigurationProfileAssignment;\n\n/** Optional parameters. */\nexport interface ConfigurationProfileHCIAssignmentsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface HCIReportsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type HCIReportsGetResponse = Report;\n\n/** Optional parameters. */\nexport interface HCIReportsListByConfigurationProfileAssignmentsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByConfigurationProfileAssignments operation. */\nexport type HCIReportsListByConfigurationProfileAssignmentsResponse = ReportList;\n\n/** Optional parameters. */\nexport interface AutomanageClientOptionalParams\n  extends coreClient.ServiceClientOptions {\n  /** server parameter */\n  $host?: string;\n  /** Api Version */\n  apiVersion?: string;\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport const BestPractice: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BestPractice\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      },\n      configuration: {\n        serializedName: \"properties.configuration\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const ConfigurationProfileProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ConfigurationProfileProperties\",\n    modelProperties: {\n      configuration: {\n        serializedName: \"configuration\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const SystemData: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SystemData\",\n    modelProperties: {\n      createdBy: {\n        serializedName: \"createdBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdByType: {\n        serializedName: \"createdByType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdAt: {\n        serializedName: \"createdAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastModifiedBy: {\n        serializedName: \"lastModifiedBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedByType: {\n        serializedName: \"lastModifiedByType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedAt: {\n        serializedName: \"lastModifiedAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorResponse\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorDetail\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorDetail: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorDetail\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      target: {\n        serializedName: \"target\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      details: {\n        serializedName: \"details\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorDetail\"\n            }\n          }\n        }\n      },\n      additionalInfo: {\n        serializedName: \"additionalInfo\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorAdditionalInfo\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorAdditionalInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorAdditionalInfo\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      info: {\n        serializedName: \"info\",\n        readOnly: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const BestPracticeList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BestPracticeList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BestPractice\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Resource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Resource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UpdateResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UpdateResource\",\n    modelProperties: {\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const ConfigurationProfileList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ConfigurationProfileList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ConfigurationProfile\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ConfigurationProfileAssignmentProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ConfigurationProfileAssignmentProperties\",\n    modelProperties: {\n      configurationProfile: {\n        serializedName: \"configurationProfile\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetId: {\n        serializedName: \"targetId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ConfigurationProfileAssignmentList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ConfigurationProfileAssignmentList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ConfigurationProfileAssignment\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const OperationListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Operation\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Operation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Operation\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      isDataAction: {\n        serializedName: \"isDataAction\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      display: {\n        serializedName: \"display\",\n        type: {\n          name: \"Composite\",\n          className: \"OperationDisplay\"\n        }\n      },\n      origin: {\n        serializedName: \"origin\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      actionType: {\n        serializedName: \"actionType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationDisplay: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationDisplay\",\n    modelProperties: {\n      provider: {\n        serializedName: \"provider\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resource: {\n        serializedName: \"resource\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      operation: {\n        serializedName: \"operation\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReportResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReportResource\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorDetail\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReportList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReportList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Report\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ServicePrincipalListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServicePrincipalListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ServicePrincipal\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const TrackedResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TrackedResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ProxyResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProxyResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties\n    }\n  }\n};\n\nexport const ConfigurationProfileUpdate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ConfigurationProfileUpdate\",\n    modelProperties: {\n      ...UpdateResource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ConfigurationProfileProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const ConfigurationProfile: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ConfigurationProfile\",\n    modelProperties: {\n      ...TrackedResource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ConfigurationProfileProperties\"\n        }\n      },\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      }\n    }\n  }\n};\n\nexport const ConfigurationProfileAssignment: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ConfigurationProfileAssignment\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ConfigurationProfileAssignmentProperties\"\n        }\n      },\n      managedBy: {\n        serializedName: \"managedBy\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      }\n    }\n  }\n};\n\nexport const Report: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Report\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      },\n      startTime: {\n        serializedName: \"properties.startTime\",\n        type: {\n          name: \"String\"\n        }\n      },\n      endTime: {\n        serializedName: \"properties.endTime\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedTime: {\n        serializedName: \"properties.lastModifiedTime\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      duration: {\n        serializedName: \"properties.duration\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      typePropertiesType: {\n        serializedName: \"properties.type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"properties.status\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      configurationProfile: {\n        serializedName: \"properties.configurationProfile\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resources: {\n        serializedName: \"properties.resources\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReportResource\"\n            }\n          }\n        }\n      },\n      error: {\n        serializedName: \"properties.error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorDetail\"\n        }\n      },\n      reportFormatVersion: {\n        serializedName: \"properties.reportFormatVersion\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServicePrincipal: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServicePrincipal\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      },\n      servicePrincipalId: {\n        serializedName: \"properties.servicePrincipalId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      authorizationSet: {\n        serializedName: \"properties.authorizationSet\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter\n} from \"@azure/core-client\";\nimport {\n  ConfigurationProfile as ConfigurationProfileMapper,\n  ConfigurationProfileUpdate as ConfigurationProfileUpdateMapper,\n  ConfigurationProfileAssignment as ConfigurationProfileAssignmentMapper\n} from \"../models/mappers\";\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const bestPracticeName: OperationURLParameter = {\n  parameterPath: \"bestPracticeName\",\n  mapper: {\n    serializedName: \"bestPracticeName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2022-05-04\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const versionName: OperationURLParameter = {\n  parameterPath: \"versionName\",\n  mapper: {\n    serializedName: \"versionName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ConfigurationProfileMapper\n};\n\nexport const configurationProfileName: OperationURLParameter = {\n  parameterPath: \"configurationProfileName\",\n  mapper: {\n    serializedName: \"configurationProfileName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const subscriptionId: OperationURLParameter = {\n  parameterPath: \"subscriptionId\",\n  mapper: {\n    constraints: {\n      MinLength: 1\n    },\n    serializedName: \"subscriptionId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const resourceGroupName: OperationURLParameter = {\n  parameterPath: \"resourceGroupName\",\n  mapper: {\n    constraints: {\n      MaxLength: 90,\n      MinLength: 1\n    },\n    serializedName: \"resourceGroupName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters1: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ConfigurationProfileUpdateMapper\n};\n\nexport const parameters2: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ConfigurationProfileAssignmentMapper\n};\n\nexport const configurationProfileAssignmentName: OperationURLParameter = {\n  parameterPath: \"configurationProfileAssignmentName\",\n  mapper: {\n    serializedName: \"configurationProfileAssignmentName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const vmName: OperationURLParameter = {\n  parameterPath: \"vmName\",\n  mapper: {\n    serializedName: \"vmName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const machineName: OperationURLParameter = {\n  parameterPath: \"machineName\",\n  mapper: {\n    serializedName: \"machineName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const clusterName: OperationURLParameter = {\n  parameterPath: \"clusterName\",\n  mapper: {\n    serializedName: \"clusterName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const reportName: OperationURLParameter = {\n  parameterPath: \"reportName\",\n  mapper: {\n    serializedName: \"reportName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { BestPractices } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AutomanageClient } from \"../automanageClient\";\nimport {\n  BestPractice,\n  BestPracticesListByTenantOptionalParams,\n  BestPracticesGetOptionalParams,\n  BestPracticesGetResponse,\n  BestPracticesListByTenantResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing BestPractices operations. */\nexport class BestPracticesImpl implements BestPractices {\n  private readonly client: AutomanageClient;\n\n  /**\n   * Initialize a new instance of the class BestPractices class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AutomanageClient) {\n    this.client = client;\n  }\n\n  /**\n   * Retrieve a list of Automanage best practices\n   * @param options The options parameters.\n   */\n  public listByTenant(\n    options?: BestPracticesListByTenantOptionalParams\n  ): PagedAsyncIterableIterator<BestPractice> {\n    const iter = this.listByTenantPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByTenantPagingPage(options);\n      }\n    };\n  }\n\n  private async *listByTenantPagingPage(\n    options?: BestPracticesListByTenantOptionalParams\n  ): AsyncIterableIterator<BestPractice[]> {\n    let result = await this._listByTenant(options);\n    yield result.value || [];\n  }\n\n  private async *listByTenantPagingAll(\n    options?: BestPracticesListByTenantOptionalParams\n  ): AsyncIterableIterator<BestPractice> {\n    for await (const page of this.listByTenantPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get information about a Automanage best practice\n   * @param bestPracticeName The Automanage best practice name.\n   * @param options The options parameters.\n   */\n  get(\n    bestPracticeName: string,\n    options?: BestPracticesGetOptionalParams\n  ): Promise<BestPracticesGetResponse> {\n    return this.client.sendOperationRequest(\n      { bestPracticeName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Retrieve a list of Automanage best practices\n   * @param options The options parameters.\n   */\n  private _listByTenant(\n    options?: BestPracticesListByTenantOptionalParams\n  ): Promise<BestPracticesListByTenantResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      listByTenantOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Automanage/bestPractices/{bestPracticeName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BestPractice\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.bestPracticeName],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByTenantOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Automanage/bestPractices\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BestPracticeList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { BestPracticesVersions } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AutomanageClient } from \"../automanageClient\";\nimport {\n  BestPractice,\n  BestPracticesVersionsListByTenantOptionalParams,\n  BestPracticesVersionsGetOptionalParams,\n  BestPracticesVersionsGetResponse,\n  BestPracticesVersionsListByTenantResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing BestPracticesVersions operations. */\nexport class BestPracticesVersionsImpl implements BestPracticesVersions {\n  private readonly client: AutomanageClient;\n\n  /**\n   * Initialize a new instance of the class BestPracticesVersions class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AutomanageClient) {\n    this.client = client;\n  }\n\n  /**\n   * Retrieve a list of Automanage best practices versions\n   * @param bestPracticeName The Automanage best practice name.\n   * @param options The options parameters.\n   */\n  public listByTenant(\n    bestPracticeName: string,\n    options?: BestPracticesVersionsListByTenantOptionalParams\n  ): PagedAsyncIterableIterator<BestPractice> {\n    const iter = this.listByTenantPagingAll(bestPracticeName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByTenantPagingPage(bestPracticeName, options);\n      }\n    };\n  }\n\n  private async *listByTenantPagingPage(\n    bestPracticeName: string,\n    options?: BestPracticesVersionsListByTenantOptionalParams\n  ): AsyncIterableIterator<BestPractice[]> {\n    let result = await this._listByTenant(bestPracticeName, options);\n    yield result.value || [];\n  }\n\n  private async *listByTenantPagingAll(\n    bestPracticeName: string,\n    options?: BestPracticesVersionsListByTenantOptionalParams\n  ): AsyncIterableIterator<BestPractice> {\n    for await (const page of this.listByTenantPagingPage(\n      bestPracticeName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get information about a Automanage best practice version\n   * @param bestPracticeName The Automanage best practice name.\n   * @param versionName The Automanage best practice version name.\n   * @param options The options parameters.\n   */\n  get(\n    bestPracticeName: string,\n    versionName: string,\n    options?: BestPracticesVersionsGetOptionalParams\n  ): Promise<BestPracticesVersionsGetResponse> {\n    return this.client.sendOperationRequest(\n      { bestPracticeName, versionName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Retrieve a list of Automanage best practices versions\n   * @param bestPracticeName The Automanage best practice name.\n   * @param options The options parameters.\n   */\n  private _listByTenant(\n    bestPracticeName: string,\n    options?: BestPracticesVersionsListByTenantOptionalParams\n  ): Promise<BestPracticesVersionsListByTenantResponse> {\n    return this.client.sendOperationRequest(\n      { bestPracticeName, options },\n      listByTenantOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Automanage/bestPractices/{bestPracticeName}/versions/{versionName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BestPractice\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.bestPracticeName,\n    Parameters.versionName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByTenantOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Automanage/bestPractices/{bestPracticeName}/versions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BestPracticeList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.bestPracticeName],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { ConfigurationProfiles } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AutomanageClient } from \"../automanageClient\";\nimport {\n  ConfigurationProfile,\n  ConfigurationProfilesListByResourceGroupOptionalParams,\n  ConfigurationProfilesListBySubscriptionOptionalParams,\n  ConfigurationProfilesCreateOrUpdateOptionalParams,\n  ConfigurationProfilesCreateOrUpdateResponse,\n  ConfigurationProfilesGetOptionalParams,\n  ConfigurationProfilesGetResponse,\n  ConfigurationProfilesDeleteOptionalParams,\n  ConfigurationProfileUpdate,\n  ConfigurationProfilesUpdateOptionalParams,\n  ConfigurationProfilesUpdateResponse,\n  ConfigurationProfilesListByResourceGroupResponse,\n  ConfigurationProfilesListBySubscriptionResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ConfigurationProfiles operations. */\nexport class ConfigurationProfilesImpl implements ConfigurationProfiles {\n  private readonly client: AutomanageClient;\n\n  /**\n   * Initialize a new instance of the class ConfigurationProfiles class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AutomanageClient) {\n    this.client = client;\n  }\n\n  /**\n   * Retrieve a list of configuration profile within a given resource group\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  public listByResourceGroup(\n    resourceGroupName: string,\n    options?: ConfigurationProfilesListByResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<ConfigurationProfile> {\n    const iter = this.listByResourceGroupPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByResourceGroupPagingPage(resourceGroupName, options);\n      }\n    };\n  }\n\n  private async *listByResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: ConfigurationProfilesListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<ConfigurationProfile[]> {\n    let result = await this._listByResourceGroup(resourceGroupName, options);\n    yield result.value || [];\n  }\n\n  private async *listByResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: ConfigurationProfilesListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<ConfigurationProfile> {\n    for await (const page of this.listByResourceGroupPagingPage(\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Retrieve a list of configuration profile within a subscription\n   * @param options The options parameters.\n   */\n  public listBySubscription(\n    options?: ConfigurationProfilesListBySubscriptionOptionalParams\n  ): PagedAsyncIterableIterator<ConfigurationProfile> {\n    const iter = this.listBySubscriptionPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listBySubscriptionPagingPage(options);\n      }\n    };\n  }\n\n  private async *listBySubscriptionPagingPage(\n    options?: ConfigurationProfilesListBySubscriptionOptionalParams\n  ): AsyncIterableIterator<ConfigurationProfile[]> {\n    let result = await this._listBySubscription(options);\n    yield result.value || [];\n  }\n\n  private async *listBySubscriptionPagingAll(\n    options?: ConfigurationProfilesListBySubscriptionOptionalParams\n  ): AsyncIterableIterator<ConfigurationProfile> {\n    for await (const page of this.listBySubscriptionPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Creates a configuration profile\n   * @param configurationProfileName Name of the configuration profile.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param parameters Parameters supplied to create or update configuration profile.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    configurationProfileName: string,\n    resourceGroupName: string,\n    parameters: ConfigurationProfile,\n    options?: ConfigurationProfilesCreateOrUpdateOptionalParams\n  ): Promise<ConfigurationProfilesCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { configurationProfileName, resourceGroupName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Get information about a configuration profile\n   * @param configurationProfileName The configuration profile name.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  get(\n    configurationProfileName: string,\n    resourceGroupName: string,\n    options?: ConfigurationProfilesGetOptionalParams\n  ): Promise<ConfigurationProfilesGetResponse> {\n    return this.client.sendOperationRequest(\n      { configurationProfileName, resourceGroupName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Delete a configuration profile\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param configurationProfileName Name of the configuration profile\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    configurationProfileName: string,\n    options?: ConfigurationProfilesDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, configurationProfileName, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Updates a configuration profile\n   * @param configurationProfileName Name of the configuration profile.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param parameters Parameters supplied to update configuration profile.\n   * @param options The options parameters.\n   */\n  update(\n    configurationProfileName: string,\n    resourceGroupName: string,\n    parameters: ConfigurationProfileUpdate,\n    options?: ConfigurationProfilesUpdateOptionalParams\n  ): Promise<ConfigurationProfilesUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { configurationProfileName, resourceGroupName, parameters, options },\n      updateOperationSpec\n    );\n  }\n\n  /**\n   * Retrieve a list of configuration profile within a given resource group\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroup(\n    resourceGroupName: string,\n    options?: ConfigurationProfilesListByResourceGroupOptionalParams\n  ): Promise<ConfigurationProfilesListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listByResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Retrieve a list of configuration profile within a subscription\n   * @param options The options parameters.\n   */\n  private _listBySubscription(\n    options?: ConfigurationProfilesListBySubscriptionOptionalParams\n  ): Promise<ConfigurationProfilesListBySubscriptionResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      listBySubscriptionOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automanage/configurationProfiles/{configurationProfileName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConfigurationProfile\n    },\n    201: {\n      bodyMapper: Mappers.ConfigurationProfile\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.configurationProfileName,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automanage/configurationProfiles/{configurationProfileName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConfigurationProfile\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.configurationProfileName,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automanage/configurationProfiles/{configurationProfileName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.configurationProfileName,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automanage/configurationProfiles/{configurationProfileName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConfigurationProfile\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.configurationProfileName,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automanage/configurationProfiles\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConfigurationProfileList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listBySubscriptionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Automanage/configurationProfiles\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConfigurationProfileList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { ConfigurationProfilesVersions } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AutomanageClient } from \"../automanageClient\";\nimport {\n  ConfigurationProfile,\n  ConfigurationProfilesVersionsListChildResourcesOptionalParams,\n  ConfigurationProfilesVersionsCreateOrUpdateOptionalParams,\n  ConfigurationProfilesVersionsCreateOrUpdateResponse,\n  ConfigurationProfilesVersionsGetOptionalParams,\n  ConfigurationProfilesVersionsGetResponse,\n  ConfigurationProfilesVersionsDeleteOptionalParams,\n  ConfigurationProfilesVersionsListChildResourcesResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ConfigurationProfilesVersions operations. */\nexport class ConfigurationProfilesVersionsImpl\n  implements ConfigurationProfilesVersions {\n  private readonly client: AutomanageClient;\n\n  /**\n   * Initialize a new instance of the class ConfigurationProfilesVersions class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AutomanageClient) {\n    this.client = client;\n  }\n\n  /**\n   * Retrieve a list of configuration profile version for a configuration profile\n   * @param configurationProfileName Name of the configuration profile.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  public listChildResources(\n    configurationProfileName: string,\n    resourceGroupName: string,\n    options?: ConfigurationProfilesVersionsListChildResourcesOptionalParams\n  ): PagedAsyncIterableIterator<ConfigurationProfile> {\n    const iter = this.listChildResourcesPagingAll(\n      configurationProfileName,\n      resourceGroupName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listChildResourcesPagingPage(\n          configurationProfileName,\n          resourceGroupName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listChildResourcesPagingPage(\n    configurationProfileName: string,\n    resourceGroupName: string,\n    options?: ConfigurationProfilesVersionsListChildResourcesOptionalParams\n  ): AsyncIterableIterator<ConfigurationProfile[]> {\n    let result = await this._listChildResources(\n      configurationProfileName,\n      resourceGroupName,\n      options\n    );\n    yield result.value || [];\n  }\n\n  private async *listChildResourcesPagingAll(\n    configurationProfileName: string,\n    resourceGroupName: string,\n    options?: ConfigurationProfilesVersionsListChildResourcesOptionalParams\n  ): AsyncIterableIterator<ConfigurationProfile> {\n    for await (const page of this.listChildResourcesPagingPage(\n      configurationProfileName,\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Creates a configuration profile version\n   * @param configurationProfileName Name of the configuration profile.\n   * @param versionName The configuration profile version name.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param parameters Parameters supplied to create or update configuration profile.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    configurationProfileName: string,\n    versionName: string,\n    resourceGroupName: string,\n    parameters: ConfigurationProfile,\n    options?: ConfigurationProfilesVersionsCreateOrUpdateOptionalParams\n  ): Promise<ConfigurationProfilesVersionsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        configurationProfileName,\n        versionName,\n        resourceGroupName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Get information about a configuration profile version\n   * @param configurationProfileName The configuration profile name.\n   * @param versionName The configuration profile version name.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  get(\n    configurationProfileName: string,\n    versionName: string,\n    resourceGroupName: string,\n    options?: ConfigurationProfilesVersionsGetOptionalParams\n  ): Promise<ConfigurationProfilesVersionsGetResponse> {\n    return this.client.sendOperationRequest(\n      { configurationProfileName, versionName, resourceGroupName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Delete a configuration profile version\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param configurationProfileName Name of the configuration profile\n   * @param versionName The configuration profile version name.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    configurationProfileName: string,\n    versionName: string,\n    options?: ConfigurationProfilesVersionsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, configurationProfileName, versionName, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Retrieve a list of configuration profile version for a configuration profile\n   * @param configurationProfileName Name of the configuration profile.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  private _listChildResources(\n    configurationProfileName: string,\n    resourceGroupName: string,\n    options?: ConfigurationProfilesVersionsListChildResourcesOptionalParams\n  ): Promise<ConfigurationProfilesVersionsListChildResourcesResponse> {\n    return this.client.sendOperationRequest(\n      { configurationProfileName, resourceGroupName, options },\n      listChildResourcesOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automanage/configurationProfiles/{configurationProfileName}/versions/{versionName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConfigurationProfile\n    },\n    201: {\n      bodyMapper: Mappers.ConfigurationProfile\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.versionName,\n    Parameters.configurationProfileName,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automanage/configurationProfiles/{configurationProfileName}/versions/{versionName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConfigurationProfile\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.versionName,\n    Parameters.configurationProfileName,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automanage/configurationProfiles/{configurationProfileName}/versions/{versionName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.versionName,\n    Parameters.configurationProfileName,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listChildResourcesOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automanage/configurationProfiles/{configurationProfileName}/versions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConfigurationProfileList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.configurationProfileName,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { ConfigurationProfileAssignments } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AutomanageClient } from \"../automanageClient\";\nimport {\n  ConfigurationProfileAssignment,\n  ConfigurationProfileAssignmentsListByVirtualMachinesOptionalParams,\n  ConfigurationProfileAssignmentsListOptionalParams,\n  ConfigurationProfileAssignmentsListBySubscriptionOptionalParams,\n  ConfigurationProfileAssignmentsListByMachineNameOptionalParams,\n  ConfigurationProfileAssignmentsListByClusterNameOptionalParams,\n  ConfigurationProfileAssignmentsCreateOrUpdateOptionalParams,\n  ConfigurationProfileAssignmentsCreateOrUpdateResponse,\n  ConfigurationProfileAssignmentsGetOptionalParams,\n  ConfigurationProfileAssignmentsGetResponse,\n  ConfigurationProfileAssignmentsDeleteOptionalParams,\n  ConfigurationProfileAssignmentsListByVirtualMachinesResponse,\n  ConfigurationProfileAssignmentsListResponse,\n  ConfigurationProfileAssignmentsListBySubscriptionResponse,\n  ConfigurationProfileAssignmentsListByMachineNameResponse,\n  ConfigurationProfileAssignmentsListByClusterNameResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ConfigurationProfileAssignments operations. */\nexport class ConfigurationProfileAssignmentsImpl\n  implements ConfigurationProfileAssignments {\n  private readonly client: AutomanageClient;\n\n  /**\n   * Initialize a new instance of the class ConfigurationProfileAssignments class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AutomanageClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get list of configuration profile assignments\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  public listByVirtualMachines(\n    resourceGroupName: string,\n    vmName: string,\n    options?: ConfigurationProfileAssignmentsListByVirtualMachinesOptionalParams\n  ): PagedAsyncIterableIterator<ConfigurationProfileAssignment> {\n    const iter = this.listByVirtualMachinesPagingAll(\n      resourceGroupName,\n      vmName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByVirtualMachinesPagingPage(\n          resourceGroupName,\n          vmName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listByVirtualMachinesPagingPage(\n    resourceGroupName: string,\n    vmName: string,\n    options?: ConfigurationProfileAssignmentsListByVirtualMachinesOptionalParams\n  ): AsyncIterableIterator<ConfigurationProfileAssignment[]> {\n    let result = await this._listByVirtualMachines(\n      resourceGroupName,\n      vmName,\n      options\n    );\n    yield result.value || [];\n  }\n\n  private async *listByVirtualMachinesPagingAll(\n    resourceGroupName: string,\n    vmName: string,\n    options?: ConfigurationProfileAssignmentsListByVirtualMachinesOptionalParams\n  ): AsyncIterableIterator<ConfigurationProfileAssignment> {\n    for await (const page of this.listByVirtualMachinesPagingPage(\n      resourceGroupName,\n      vmName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get list of configuration profile assignments\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    options?: ConfigurationProfileAssignmentsListOptionalParams\n  ): PagedAsyncIterableIterator<ConfigurationProfileAssignment> {\n    const iter = this.listPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(resourceGroupName, options);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    options?: ConfigurationProfileAssignmentsListOptionalParams\n  ): AsyncIterableIterator<ConfigurationProfileAssignment[]> {\n    let result = await this._list(resourceGroupName, options);\n    yield result.value || [];\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    options?: ConfigurationProfileAssignmentsListOptionalParams\n  ): AsyncIterableIterator<ConfigurationProfileAssignment> {\n    for await (const page of this.listPagingPage(resourceGroupName, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get list of configuration profile assignments under a given subscription\n   * @param options The options parameters.\n   */\n  public listBySubscription(\n    options?: ConfigurationProfileAssignmentsListBySubscriptionOptionalParams\n  ): PagedAsyncIterableIterator<ConfigurationProfileAssignment> {\n    const iter = this.listBySubscriptionPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listBySubscriptionPagingPage(options);\n      }\n    };\n  }\n\n  private async *listBySubscriptionPagingPage(\n    options?: ConfigurationProfileAssignmentsListBySubscriptionOptionalParams\n  ): AsyncIterableIterator<ConfigurationProfileAssignment[]> {\n    let result = await this._listBySubscription(options);\n    yield result.value || [];\n  }\n\n  private async *listBySubscriptionPagingAll(\n    options?: ConfigurationProfileAssignmentsListBySubscriptionOptionalParams\n  ): AsyncIterableIterator<ConfigurationProfileAssignment> {\n    for await (const page of this.listBySubscriptionPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get list of configuration profile assignments\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param machineName The name of the Arc machine.\n   * @param options The options parameters.\n   */\n  public listByMachineName(\n    resourceGroupName: string,\n    machineName: string,\n    options?: ConfigurationProfileAssignmentsListByMachineNameOptionalParams\n  ): PagedAsyncIterableIterator<ConfigurationProfileAssignment> {\n    const iter = this.listByMachineNamePagingAll(\n      resourceGroupName,\n      machineName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByMachineNamePagingPage(\n          resourceGroupName,\n          machineName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listByMachineNamePagingPage(\n    resourceGroupName: string,\n    machineName: string,\n    options?: ConfigurationProfileAssignmentsListByMachineNameOptionalParams\n  ): AsyncIterableIterator<ConfigurationProfileAssignment[]> {\n    let result = await this._listByMachineName(\n      resourceGroupName,\n      machineName,\n      options\n    );\n    yield result.value || [];\n  }\n\n  private async *listByMachineNamePagingAll(\n    resourceGroupName: string,\n    machineName: string,\n    options?: ConfigurationProfileAssignmentsListByMachineNameOptionalParams\n  ): AsyncIterableIterator<ConfigurationProfileAssignment> {\n    for await (const page of this.listByMachineNamePagingPage(\n      resourceGroupName,\n      machineName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get list of configuration profile assignments\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the Arc machine.\n   * @param options The options parameters.\n   */\n  public listByClusterName(\n    resourceGroupName: string,\n    clusterName: string,\n    options?: ConfigurationProfileAssignmentsListByClusterNameOptionalParams\n  ): PagedAsyncIterableIterator<ConfigurationProfileAssignment> {\n    const iter = this.listByClusterNamePagingAll(\n      resourceGroupName,\n      clusterName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByClusterNamePagingPage(\n          resourceGroupName,\n          clusterName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listByClusterNamePagingPage(\n    resourceGroupName: string,\n    clusterName: string,\n    options?: ConfigurationProfileAssignmentsListByClusterNameOptionalParams\n  ): AsyncIterableIterator<ConfigurationProfileAssignment[]> {\n    let result = await this._listByClusterName(\n      resourceGroupName,\n      clusterName,\n      options\n    );\n    yield result.value || [];\n  }\n\n  private async *listByClusterNamePagingAll(\n    resourceGroupName: string,\n    clusterName: string,\n    options?: ConfigurationProfileAssignmentsListByClusterNameOptionalParams\n  ): AsyncIterableIterator<ConfigurationProfileAssignment> {\n    for await (const page of this.listByClusterNamePagingPage(\n      resourceGroupName,\n      clusterName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Creates an association between a VM and Automanage configuration profile\n   * @param configurationProfileAssignmentName Name of the configuration profile assignment. Only default\n   *                                           is supported.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmName The name of the virtual machine.\n   * @param parameters Parameters supplied to the create or update configuration profile assignment.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    configurationProfileAssignmentName: string,\n    resourceGroupName: string,\n    vmName: string,\n    parameters: ConfigurationProfileAssignment,\n    options?: ConfigurationProfileAssignmentsCreateOrUpdateOptionalParams\n  ): Promise<ConfigurationProfileAssignmentsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        configurationProfileAssignmentName,\n        resourceGroupName,\n        vmName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Get information about a configuration profile assignment\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param configurationProfileAssignmentName The configuration profile assignment name.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    configurationProfileAssignmentName: string,\n    vmName: string,\n    options?: ConfigurationProfileAssignmentsGetOptionalParams\n  ): Promise<ConfigurationProfileAssignmentsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        configurationProfileAssignmentName,\n        vmName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Delete a configuration profile assignment\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param configurationProfileAssignmentName Name of the configuration profile assignment\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    configurationProfileAssignmentName: string,\n    vmName: string,\n    options?: ConfigurationProfileAssignmentsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        configurationProfileAssignmentName,\n        vmName,\n        options\n      },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Get list of configuration profile assignments\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  private _listByVirtualMachines(\n    resourceGroupName: string,\n    vmName: string,\n    options?: ConfigurationProfileAssignmentsListByVirtualMachinesOptionalParams\n  ): Promise<ConfigurationProfileAssignmentsListByVirtualMachinesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vmName, options },\n      listByVirtualMachinesOperationSpec\n    );\n  }\n\n  /**\n   * Get list of configuration profile assignments\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    options?: ConfigurationProfileAssignmentsListOptionalParams\n  ): Promise<ConfigurationProfileAssignmentsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Get list of configuration profile assignments under a given subscription\n   * @param options The options parameters.\n   */\n  private _listBySubscription(\n    options?: ConfigurationProfileAssignmentsListBySubscriptionOptionalParams\n  ): Promise<ConfigurationProfileAssignmentsListBySubscriptionResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      listBySubscriptionOperationSpec\n    );\n  }\n\n  /**\n   * Get list of configuration profile assignments\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param machineName The name of the Arc machine.\n   * @param options The options parameters.\n   */\n  private _listByMachineName(\n    resourceGroupName: string,\n    machineName: string,\n    options?: ConfigurationProfileAssignmentsListByMachineNameOptionalParams\n  ): Promise<ConfigurationProfileAssignmentsListByMachineNameResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, machineName, options },\n      listByMachineNameOperationSpec\n    );\n  }\n\n  /**\n   * Get list of configuration profile assignments\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the Arc machine.\n   * @param options The options parameters.\n   */\n  private _listByClusterName(\n    resourceGroupName: string,\n    clusterName: string,\n    options?: ConfigurationProfileAssignmentsListByClusterNameOptionalParams\n  ): Promise<ConfigurationProfileAssignmentsListByClusterNameResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, clusterName, options },\n      listByClusterNameOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/providers/Microsoft.Automanage/configurationProfileAssignments/{configurationProfileAssignmentName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConfigurationProfileAssignment\n    },\n    201: {\n      bodyMapper: Mappers.ConfigurationProfileAssignment\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters2,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.configurationProfileAssignmentName,\n    Parameters.vmName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/providers/Microsoft.Automanage/configurationProfileAssignments/{configurationProfileAssignmentName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConfigurationProfileAssignment\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.configurationProfileAssignmentName,\n    Parameters.vmName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/providers/Microsoft.Automanage/configurationProfileAssignments/{configurationProfileAssignmentName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.configurationProfileAssignmentName,\n    Parameters.vmName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByVirtualMachinesOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/providers/Microsoft.Automanage/configurationProfileAssignments\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConfigurationProfileAssignmentList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.vmName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automanage/configurationProfileAssignments\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConfigurationProfileAssignmentList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listBySubscriptionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Automanage/configurationProfileAssignments\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConfigurationProfileAssignmentList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByMachineNameOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines/{machineName}/providers/Microsoft.Automanage/configurationProfileAssignments\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConfigurationProfileAssignmentList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.machineName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByClusterNameOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHci/clusters/{clusterName}/providers/Microsoft.Automanage/configurationProfileAssignments\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConfigurationProfileAssignmentList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.clusterName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { Operations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AutomanageClient } from \"../automanageClient\";\nimport {\n  Operation,\n  OperationsListOptionalParams,\n  OperationsListResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Operations operations. */\nexport class OperationsImpl implements Operations {\n  private readonly client: AutomanageClient;\n\n  /**\n   * Initialize a new instance of the class Operations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AutomanageClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all of the available Automanage REST API operations.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: OperationsListOptionalParams\n  ): PagedAsyncIterableIterator<Operation> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(options);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: OperationsListOptionalParams\n  ): AsyncIterableIterator<Operation[]> {\n    let result = await this._list(options);\n    yield result.value || [];\n  }\n\n  private async *listPagingAll(\n    options?: OperationsListOptionalParams\n  ): AsyncIterableIterator<Operation> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all of the available Automanage REST API operations.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: OperationsListOptionalParams\n  ): Promise<OperationsListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Automanage/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { Reports } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AutomanageClient } from \"../automanageClient\";\nimport {\n  Report,\n  ReportsListByConfigurationProfileAssignmentsOptionalParams,\n  ReportsGetOptionalParams,\n  ReportsGetResponse,\n  ReportsListByConfigurationProfileAssignmentsResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Reports operations. */\nexport class ReportsImpl implements Reports {\n  private readonly client: AutomanageClient;\n\n  /**\n   * Initialize a new instance of the class Reports class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AutomanageClient) {\n    this.client = client;\n  }\n\n  /**\n   * Retrieve a list of reports within a given configuration profile assignment\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param configurationProfileAssignmentName The configuration profile assignment name.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  public listByConfigurationProfileAssignments(\n    resourceGroupName: string,\n    configurationProfileAssignmentName: string,\n    vmName: string,\n    options?: ReportsListByConfigurationProfileAssignmentsOptionalParams\n  ): PagedAsyncIterableIterator<Report> {\n    const iter = this.listByConfigurationProfileAssignmentsPagingAll(\n      resourceGroupName,\n      configurationProfileAssignmentName,\n      vmName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByConfigurationProfileAssignmentsPagingPage(\n          resourceGroupName,\n          configurationProfileAssignmentName,\n          vmName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listByConfigurationProfileAssignmentsPagingPage(\n    resourceGroupName: string,\n    configurationProfileAssignmentName: string,\n    vmName: string,\n    options?: ReportsListByConfigurationProfileAssignmentsOptionalParams\n  ): AsyncIterableIterator<Report[]> {\n    let result = await this._listByConfigurationProfileAssignments(\n      resourceGroupName,\n      configurationProfileAssignmentName,\n      vmName,\n      options\n    );\n    yield result.value || [];\n  }\n\n  private async *listByConfigurationProfileAssignmentsPagingAll(\n    resourceGroupName: string,\n    configurationProfileAssignmentName: string,\n    vmName: string,\n    options?: ReportsListByConfigurationProfileAssignmentsOptionalParams\n  ): AsyncIterableIterator<Report> {\n    for await (const page of this.listByConfigurationProfileAssignmentsPagingPage(\n      resourceGroupName,\n      configurationProfileAssignmentName,\n      vmName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get information about a report associated with a configuration profile assignment run\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param configurationProfileAssignmentName The configuration profile assignment name.\n   * @param reportName The report name.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    configurationProfileAssignmentName: string,\n    reportName: string,\n    vmName: string,\n    options?: ReportsGetOptionalParams\n  ): Promise<ReportsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        configurationProfileAssignmentName,\n        reportName,\n        vmName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Retrieve a list of reports within a given configuration profile assignment\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param configurationProfileAssignmentName The configuration profile assignment name.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  private _listByConfigurationProfileAssignments(\n    resourceGroupName: string,\n    configurationProfileAssignmentName: string,\n    vmName: string,\n    options?: ReportsListByConfigurationProfileAssignmentsOptionalParams\n  ): Promise<ReportsListByConfigurationProfileAssignmentsResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        configurationProfileAssignmentName,\n        vmName,\n        options\n      },\n      listByConfigurationProfileAssignmentsOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/providers/Microsoft.Automanage/configurationProfileAssignments/{configurationProfileAssignmentName}/reports/{reportName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Report\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.configurationProfileAssignmentName,\n    Parameters.vmName,\n    Parameters.reportName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByConfigurationProfileAssignmentsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/providers/Microsoft.Automanage/configurationProfileAssignments/{configurationProfileAssignmentName}/reports\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReportList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.configurationProfileAssignmentName,\n    Parameters.vmName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { ServicePrincipals } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AutomanageClient } from \"../automanageClient\";\nimport {\n  ServicePrincipal,\n  ServicePrincipalsListBySubscriptionOptionalParams,\n  ServicePrincipalsListBySubscriptionResponse,\n  ServicePrincipalsGetOptionalParams,\n  ServicePrincipalsGetResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ServicePrincipals operations. */\nexport class ServicePrincipalsImpl implements ServicePrincipals {\n  private readonly client: AutomanageClient;\n\n  /**\n   * Initialize a new instance of the class ServicePrincipals class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AutomanageClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get the Automanage AAD first party Application Service Principal details for the subscription id.\n   * @param options The options parameters.\n   */\n  public listBySubscription(\n    options?: ServicePrincipalsListBySubscriptionOptionalParams\n  ): PagedAsyncIterableIterator<ServicePrincipal> {\n    const iter = this.listBySubscriptionPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listBySubscriptionPagingPage(options);\n      }\n    };\n  }\n\n  private async *listBySubscriptionPagingPage(\n    options?: ServicePrincipalsListBySubscriptionOptionalParams\n  ): AsyncIterableIterator<ServicePrincipal[]> {\n    let result = await this._listBySubscription(options);\n    yield result.value || [];\n  }\n\n  private async *listBySubscriptionPagingAll(\n    options?: ServicePrincipalsListBySubscriptionOptionalParams\n  ): AsyncIterableIterator<ServicePrincipal> {\n    for await (const page of this.listBySubscriptionPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get the Automanage AAD first party Application Service Principal details for the subscription id.\n   * @param options The options parameters.\n   */\n  private _listBySubscription(\n    options?: ServicePrincipalsListBySubscriptionOptionalParams\n  ): Promise<ServicePrincipalsListBySubscriptionResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      listBySubscriptionOperationSpec\n    );\n  }\n\n  /**\n   * Get the Automanage AAD first party Application Service Principal details for the subscription id.\n   * @param options The options parameters.\n   */\n  get(\n    options?: ServicePrincipalsGetOptionalParams\n  ): Promise<ServicePrincipalsGetResponse> {\n    return this.client.sendOperationRequest({ options }, getOperationSpec);\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listBySubscriptionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Automanage/servicePrincipals\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServicePrincipalListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Automanage/servicePrincipals/default\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServicePrincipal\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { ConfigurationProfileHcrpAssignments } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AutomanageClient } from \"../automanageClient\";\nimport {\n  ConfigurationProfileAssignment,\n  ConfigurationProfileHcrpAssignmentsCreateOrUpdateOptionalParams,\n  ConfigurationProfileHcrpAssignmentsCreateOrUpdateResponse,\n  ConfigurationProfileHcrpAssignmentsGetOptionalParams,\n  ConfigurationProfileHcrpAssignmentsGetResponse,\n  ConfigurationProfileHcrpAssignmentsDeleteOptionalParams\n} from \"../models\";\n\n/** Class containing ConfigurationProfileHcrpAssignments operations. */\nexport class ConfigurationProfileHcrpAssignmentsImpl\n  implements ConfigurationProfileHcrpAssignments {\n  private readonly client: AutomanageClient;\n\n  /**\n   * Initialize a new instance of the class ConfigurationProfileHcrpAssignments class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AutomanageClient) {\n    this.client = client;\n  }\n\n  /**\n   * Creates an association between a ARC machine and Automanage configuration profile\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param machineName The name of the Arc machine.\n   * @param configurationProfileAssignmentName Name of the configuration profile assignment. Only default\n   *                                           is supported.\n   * @param parameters Parameters supplied to the create or update configuration profile assignment.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    machineName: string,\n    configurationProfileAssignmentName: string,\n    parameters: ConfigurationProfileAssignment,\n    options?: ConfigurationProfileHcrpAssignmentsCreateOrUpdateOptionalParams\n  ): Promise<ConfigurationProfileHcrpAssignmentsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        machineName,\n        configurationProfileAssignmentName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Get information about a configuration profile assignment\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param machineName The name of the Arc machine.\n   * @param configurationProfileAssignmentName The configuration profile assignment name.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    machineName: string,\n    configurationProfileAssignmentName: string,\n    options?: ConfigurationProfileHcrpAssignmentsGetOptionalParams\n  ): Promise<ConfigurationProfileHcrpAssignmentsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        machineName,\n        configurationProfileAssignmentName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Delete a configuration profile assignment\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param machineName The name of the Arc machine.\n   * @param configurationProfileAssignmentName Name of the configuration profile assignment\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    machineName: string,\n    configurationProfileAssignmentName: string,\n    options?: ConfigurationProfileHcrpAssignmentsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        machineName,\n        configurationProfileAssignmentName,\n        options\n      },\n      deleteOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines/{machineName}/providers/Microsoft.Automanage/configurationProfileAssignments/{configurationProfileAssignmentName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConfigurationProfileAssignment\n    },\n    201: {\n      bodyMapper: Mappers.ConfigurationProfileAssignment\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters2,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.configurationProfileAssignmentName,\n    Parameters.machineName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines/{machineName}/providers/Microsoft.Automanage/configurationProfileAssignments/{configurationProfileAssignmentName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConfigurationProfileAssignment\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.configurationProfileAssignmentName,\n    Parameters.machineName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines/{machineName}/providers/Microsoft.Automanage/configurationProfileAssignments/{configurationProfileAssignmentName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.configurationProfileAssignmentName,\n    Parameters.machineName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { HcrpReports } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AutomanageClient } from \"../automanageClient\";\nimport {\n  Report,\n  HcrpReportsListByConfigurationProfileAssignmentsOptionalParams,\n  HcrpReportsGetOptionalParams,\n  HcrpReportsGetResponse,\n  HcrpReportsListByConfigurationProfileAssignmentsResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing HcrpReports operations. */\nexport class HcrpReportsImpl implements HcrpReports {\n  private readonly client: AutomanageClient;\n\n  /**\n   * Initialize a new instance of the class HcrpReports class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AutomanageClient) {\n    this.client = client;\n  }\n\n  /**\n   * Retrieve a list of reports within a given configuration profile assignment\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param machineName The name of the Arc machine.\n   * @param configurationProfileAssignmentName The configuration profile assignment name.\n   * @param options The options parameters.\n   */\n  public listByConfigurationProfileAssignments(\n    resourceGroupName: string,\n    machineName: string,\n    configurationProfileAssignmentName: string,\n    options?: HcrpReportsListByConfigurationProfileAssignmentsOptionalParams\n  ): PagedAsyncIterableIterator<Report> {\n    const iter = this.listByConfigurationProfileAssignmentsPagingAll(\n      resourceGroupName,\n      machineName,\n      configurationProfileAssignmentName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByConfigurationProfileAssignmentsPagingPage(\n          resourceGroupName,\n          machineName,\n          configurationProfileAssignmentName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listByConfigurationProfileAssignmentsPagingPage(\n    resourceGroupName: string,\n    machineName: string,\n    configurationProfileAssignmentName: string,\n    options?: HcrpReportsListByConfigurationProfileAssignmentsOptionalParams\n  ): AsyncIterableIterator<Report[]> {\n    let result = await this._listByConfigurationProfileAssignments(\n      resourceGroupName,\n      machineName,\n      configurationProfileAssignmentName,\n      options\n    );\n    yield result.value || [];\n  }\n\n  private async *listByConfigurationProfileAssignmentsPagingAll(\n    resourceGroupName: string,\n    machineName: string,\n    configurationProfileAssignmentName: string,\n    options?: HcrpReportsListByConfigurationProfileAssignmentsOptionalParams\n  ): AsyncIterableIterator<Report> {\n    for await (const page of this.listByConfigurationProfileAssignmentsPagingPage(\n      resourceGroupName,\n      machineName,\n      configurationProfileAssignmentName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get information about a report associated with a configuration profile assignment run\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param machineName The name of the Arc machine.\n   * @param configurationProfileAssignmentName The configuration profile assignment name.\n   * @param reportName The report name.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    machineName: string,\n    configurationProfileAssignmentName: string,\n    reportName: string,\n    options?: HcrpReportsGetOptionalParams\n  ): Promise<HcrpReportsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        machineName,\n        configurationProfileAssignmentName,\n        reportName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Retrieve a list of reports within a given configuration profile assignment\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param machineName The name of the Arc machine.\n   * @param configurationProfileAssignmentName The configuration profile assignment name.\n   * @param options The options parameters.\n   */\n  private _listByConfigurationProfileAssignments(\n    resourceGroupName: string,\n    machineName: string,\n    configurationProfileAssignmentName: string,\n    options?: HcrpReportsListByConfigurationProfileAssignmentsOptionalParams\n  ): Promise<HcrpReportsListByConfigurationProfileAssignmentsResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        machineName,\n        configurationProfileAssignmentName,\n        options\n      },\n      listByConfigurationProfileAssignmentsOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines/{machineName}/providers/Microsoft.Automanage/configurationProfileAssignments/{configurationProfileAssignmentName}/reports/{reportName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Report\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.configurationProfileAssignmentName,\n    Parameters.machineName,\n    Parameters.reportName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByConfigurationProfileAssignmentsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines/{machineName}/providers/Microsoft.Automanage/configurationProfileAssignments/{configurationProfileAssignmentName}/reports\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReportList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.configurationProfileAssignmentName,\n    Parameters.machineName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { ConfigurationProfileHCIAssignments } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AutomanageClient } from \"../automanageClient\";\nimport {\n  ConfigurationProfileAssignment,\n  ConfigurationProfileHCIAssignmentsCreateOrUpdateOptionalParams,\n  ConfigurationProfileHCIAssignmentsCreateOrUpdateResponse,\n  ConfigurationProfileHCIAssignmentsGetOptionalParams,\n  ConfigurationProfileHCIAssignmentsGetResponse,\n  ConfigurationProfileHCIAssignmentsDeleteOptionalParams\n} from \"../models\";\n\n/** Class containing ConfigurationProfileHCIAssignments operations. */\nexport class ConfigurationProfileHCIAssignmentsImpl\n  implements ConfigurationProfileHCIAssignments {\n  private readonly client: AutomanageClient;\n\n  /**\n   * Initialize a new instance of the class ConfigurationProfileHCIAssignments class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AutomanageClient) {\n    this.client = client;\n  }\n\n  /**\n   * Creates an association between a AzureStackHCI cluster and Automanage configuration profile\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the Arc machine.\n   * @param configurationProfileAssignmentName Name of the configuration profile assignment. Only default\n   *                                           is supported.\n   * @param parameters Parameters supplied to the create or update configuration profile assignment.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    clusterName: string,\n    configurationProfileAssignmentName: string,\n    parameters: ConfigurationProfileAssignment,\n    options?: ConfigurationProfileHCIAssignmentsCreateOrUpdateOptionalParams\n  ): Promise<ConfigurationProfileHCIAssignmentsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        clusterName,\n        configurationProfileAssignmentName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Get information about a configuration profile assignment\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the Arc machine.\n   * @param configurationProfileAssignmentName The configuration profile assignment name.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    clusterName: string,\n    configurationProfileAssignmentName: string,\n    options?: ConfigurationProfileHCIAssignmentsGetOptionalParams\n  ): Promise<ConfigurationProfileHCIAssignmentsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        clusterName,\n        configurationProfileAssignmentName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Delete a configuration profile assignment\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the Arc machine.\n   * @param configurationProfileAssignmentName Name of the configuration profile assignment\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    clusterName: string,\n    configurationProfileAssignmentName: string,\n    options?: ConfigurationProfileHCIAssignmentsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        clusterName,\n        configurationProfileAssignmentName,\n        options\n      },\n      deleteOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHci/clusters/{clusterName}/providers/Microsoft.Automanage/configurationProfileAssignments/{configurationProfileAssignmentName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConfigurationProfileAssignment\n    },\n    201: {\n      bodyMapper: Mappers.ConfigurationProfileAssignment\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters2,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.configurationProfileAssignmentName,\n    Parameters.clusterName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHci/clusters/{clusterName}/providers/Microsoft.Automanage/configurationProfileAssignments/{configurationProfileAssignmentName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConfigurationProfileAssignment\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.configurationProfileAssignmentName,\n    Parameters.clusterName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHci/clusters/{clusterName}/providers/Microsoft.Automanage/configurationProfileAssignments/{configurationProfileAssignmentName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.configurationProfileAssignmentName,\n    Parameters.clusterName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { HCIReports } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AutomanageClient } from \"../automanageClient\";\nimport {\n  Report,\n  HCIReportsListByConfigurationProfileAssignmentsOptionalParams,\n  HCIReportsGetOptionalParams,\n  HCIReportsGetResponse,\n  HCIReportsListByConfigurationProfileAssignmentsResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing HCIReports operations. */\nexport class HCIReportsImpl implements HCIReports {\n  private readonly client: AutomanageClient;\n\n  /**\n   * Initialize a new instance of the class HCIReports class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AutomanageClient) {\n    this.client = client;\n  }\n\n  /**\n   * Retrieve a list of reports within a given configuration profile assignment\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the Arc machine.\n   * @param configurationProfileAssignmentName The configuration profile assignment name.\n   * @param options The options parameters.\n   */\n  public listByConfigurationProfileAssignments(\n    resourceGroupName: string,\n    clusterName: string,\n    configurationProfileAssignmentName: string,\n    options?: HCIReportsListByConfigurationProfileAssignmentsOptionalParams\n  ): PagedAsyncIterableIterator<Report> {\n    const iter = this.listByConfigurationProfileAssignmentsPagingAll(\n      resourceGroupName,\n      clusterName,\n      configurationProfileAssignmentName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByConfigurationProfileAssignmentsPagingPage(\n          resourceGroupName,\n          clusterName,\n          configurationProfileAssignmentName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listByConfigurationProfileAssignmentsPagingPage(\n    resourceGroupName: string,\n    clusterName: string,\n    configurationProfileAssignmentName: string,\n    options?: HCIReportsListByConfigurationProfileAssignmentsOptionalParams\n  ): AsyncIterableIterator<Report[]> {\n    let result = await this._listByConfigurationProfileAssignments(\n      resourceGroupName,\n      clusterName,\n      configurationProfileAssignmentName,\n      options\n    );\n    yield result.value || [];\n  }\n\n  private async *listByConfigurationProfileAssignmentsPagingAll(\n    resourceGroupName: string,\n    clusterName: string,\n    configurationProfileAssignmentName: string,\n    options?: HCIReportsListByConfigurationProfileAssignmentsOptionalParams\n  ): AsyncIterableIterator<Report> {\n    for await (const page of this.listByConfigurationProfileAssignmentsPagingPage(\n      resourceGroupName,\n      clusterName,\n      configurationProfileAssignmentName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get information about a report associated with a configuration profile assignment run\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the Arc machine.\n   * @param configurationProfileAssignmentName The configuration profile assignment name.\n   * @param reportName The report name.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    clusterName: string,\n    configurationProfileAssignmentName: string,\n    reportName: string,\n    options?: HCIReportsGetOptionalParams\n  ): Promise<HCIReportsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        clusterName,\n        configurationProfileAssignmentName,\n        reportName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Retrieve a list of reports within a given configuration profile assignment\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the Arc machine.\n   * @param configurationProfileAssignmentName The configuration profile assignment name.\n   * @param options The options parameters.\n   */\n  private _listByConfigurationProfileAssignments(\n    resourceGroupName: string,\n    clusterName: string,\n    configurationProfileAssignmentName: string,\n    options?: HCIReportsListByConfigurationProfileAssignmentsOptionalParams\n  ): Promise<HCIReportsListByConfigurationProfileAssignmentsResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        clusterName,\n        configurationProfileAssignmentName,\n        options\n      },\n      listByConfigurationProfileAssignmentsOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHci/clusters/{clusterName}/providers/Microsoft.Automanage/configurationProfileAssignments/{configurationProfileAssignmentName}/reports/{reportName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Report\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.configurationProfileAssignmentName,\n    Parameters.clusterName,\n    Parameters.reportName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByConfigurationProfileAssignmentsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHci/clusters/{clusterName}/providers/Microsoft.Automanage/configurationProfileAssignments/{configurationProfileAssignmentName}/reports\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReportList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.configurationProfileAssignmentName,\n    Parameters.clusterName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\nimport {\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest\n} from \"@azure/core-rest-pipeline\";\nimport * as coreAuth from \"@azure/core-auth\";\nimport {\n  BestPracticesImpl,\n  BestPracticesVersionsImpl,\n  ConfigurationProfilesImpl,\n  ConfigurationProfilesVersionsImpl,\n  ConfigurationProfileAssignmentsImpl,\n  OperationsImpl,\n  ReportsImpl,\n  ServicePrincipalsImpl,\n  ConfigurationProfileHcrpAssignmentsImpl,\n  HcrpReportsImpl,\n  ConfigurationProfileHCIAssignmentsImpl,\n  HCIReportsImpl\n} from \"./operations\";\nimport {\n  BestPractices,\n  BestPracticesVersions,\n  ConfigurationProfiles,\n  ConfigurationProfilesVersions,\n  ConfigurationProfileAssignments,\n  Operations,\n  Reports,\n  ServicePrincipals,\n  ConfigurationProfileHcrpAssignments,\n  HcrpReports,\n  ConfigurationProfileHCIAssignments,\n  HCIReports\n} from \"./operationsInterfaces\";\nimport { AutomanageClientOptionalParams } from \"./models\";\n\nexport class AutomanageClient extends coreClient.ServiceClient {\n  $host: string;\n  apiVersion: string;\n  subscriptionId: string;\n\n  /**\n   * Initializes a new instance of the AutomanageClient class.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param subscriptionId The ID of the target subscription.\n   * @param options The parameter options\n   */\n  constructor(\n    credentials: coreAuth.TokenCredential,\n    subscriptionId: string,\n    options?: AutomanageClientOptionalParams\n  ) {\n    if (credentials === undefined) {\n      throw new Error(\"'credentials' cannot be null\");\n    }\n    if (subscriptionId === undefined) {\n      throw new Error(\"'subscriptionId' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: AutomanageClientOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\",\n      credential: credentials\n    };\n\n    const packageDetails = `azsdk-js-arm-automanage/1.0.2`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    if (!options.credentialScopes) {\n      options.credentialScopes = [\"https://management.azure.com/.default\"];\n    }\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      baseUri:\n        options.endpoint ?? options.baseUri ?? \"https://management.azure.com\"\n    };\n    super(optionsWithDefaults);\n\n    let bearerTokenAuthenticationPolicyFound: boolean = false;\n    if (options?.pipeline && options.pipeline.getOrderedPolicies().length > 0) {\n      const pipelinePolicies: coreRestPipeline.PipelinePolicy[] = options.pipeline.getOrderedPolicies();\n      bearerTokenAuthenticationPolicyFound = pipelinePolicies.some(\n        (pipelinePolicy) =>\n          pipelinePolicy.name ===\n          coreRestPipeline.bearerTokenAuthenticationPolicyName\n      );\n    }\n    if (\n      !options ||\n      !options.pipeline ||\n      options.pipeline.getOrderedPolicies().length == 0 ||\n      !bearerTokenAuthenticationPolicyFound\n    ) {\n      this.pipeline.removePolicy({\n        name: coreRestPipeline.bearerTokenAuthenticationPolicyName\n      });\n      this.pipeline.addPolicy(\n        coreRestPipeline.bearerTokenAuthenticationPolicy({\n          credential: credentials,\n          scopes: `${optionsWithDefaults.credentialScopes}`,\n          challengeCallbacks: {\n            authorizeRequestOnChallenge:\n              coreClient.authorizeRequestOnClaimChallenge\n          }\n        })\n      );\n    }\n    // Parameter assignments\n    this.subscriptionId = subscriptionId;\n\n    // Assigning values to Constant parameters\n    this.$host = options.$host || \"https://management.azure.com\";\n    this.apiVersion = options.apiVersion || \"2022-05-04\";\n    this.bestPractices = new BestPracticesImpl(this);\n    this.bestPracticesVersions = new BestPracticesVersionsImpl(this);\n    this.configurationProfiles = new ConfigurationProfilesImpl(this);\n    this.configurationProfilesVersions = new ConfigurationProfilesVersionsImpl(\n      this\n    );\n    this.configurationProfileAssignments = new ConfigurationProfileAssignmentsImpl(\n      this\n    );\n    this.operations = new OperationsImpl(this);\n    this.reports = new ReportsImpl(this);\n    this.servicePrincipals = new ServicePrincipalsImpl(this);\n    this.configurationProfileHcrpAssignments = new ConfigurationProfileHcrpAssignmentsImpl(\n      this\n    );\n    this.hcrpReports = new HcrpReportsImpl(this);\n    this.configurationProfileHCIAssignments = new ConfigurationProfileHCIAssignmentsImpl(\n      this\n    );\n    this.hCIReports = new HCIReportsImpl(this);\n    this.addCustomApiVersionPolicy(options.apiVersion);\n  }\n\n  /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */\n  private addCustomApiVersionPolicy(apiVersion?: string) {\n    if (!apiVersion) {\n      return;\n    }\n    const apiVersionPolicy = {\n      name: \"CustomApiVersionPolicy\",\n      async sendRequest(\n        request: PipelineRequest,\n        next: SendRequest\n      ): Promise<PipelineResponse> {\n        const param = request.url.split(\"?\");\n        if (param.length > 1) {\n          const newParams = param[1].split(\"&\").map((item) => {\n            if (item.indexOf(\"api-version\") > -1) {\n              return \"api-version=\" + apiVersion;\n            } else {\n              return item;\n            }\n          });\n          request.url = param[0] + \"?\" + newParams.join(\"&\");\n        }\n        return next(request);\n      }\n    };\n    this.pipeline.addPolicy(apiVersionPolicy);\n  }\n\n  bestPractices: BestPractices;\n  bestPracticesVersions: BestPracticesVersions;\n  configurationProfiles: ConfigurationProfiles;\n  configurationProfilesVersions: ConfigurationProfilesVersions;\n  configurationProfileAssignments: ConfigurationProfileAssignments;\n  operations: Operations;\n  reports: Reports;\n  servicePrincipals: ServicePrincipals;\n  configurationProfileHcrpAssignments: ConfigurationProfileHcrpAssignments;\n  hcrpReports: HcrpReports;\n  configurationProfileHCIAssignments: ConfigurationProfileHCIAssignments;\n  hCIReports: HCIReports;\n}\n"],"names":["KnownCreatedByType","KnownOrigin","KnownActionType","ConfigurationProfileMapper","ConfigurationProfileUpdateMapper","ConfigurationProfileAssignmentMapper","__await","__asyncValues","__asyncDelegator","getOperationSpec","listByTenantOperationSpec","serializer","coreClient","Mappers.BestPractice","Mappers.ErrorResponse","Parameters.apiVersion","Parameters.$host","Parameters.bestPracticeName","Parameters.accept","Mappers.BestPracticeList","Parameters.versionName","createOrUpdateOperationSpec","deleteOperationSpec","listBySubscriptionOperationSpec","Mappers.ConfigurationProfile","Parameters.parameters","Parameters.configurationProfileName","Parameters.subscriptionId","Parameters.resourceGroupName","Parameters.contentType","Parameters.parameters1","Mappers.ConfigurationProfileList","listOperationSpec","Mappers.ConfigurationProfileAssignment","Parameters.parameters2","Parameters.configurationProfileAssignmentName","Parameters.vmName","Mappers.ConfigurationProfileAssignmentList","Parameters.machineName","Parameters.clusterName","Mappers.OperationListResult","listByConfigurationProfileAssignmentsOperationSpec","Mappers.Report","Parameters.reportName","Mappers.ReportList","Mappers.ServicePrincipalListResult","Mappers.ServicePrincipal","coreRestPipeline"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;AAMG;AA6XH;AACYA,oCASX;AATD,CAAA,UAAY,kBAAkB,EAAA;;AAE5B,IAAA,kBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;;AAEb,IAAA,kBAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;;AAE3B,IAAA,kBAAA,CAAA,iBAAA,CAAA,GAAA,iBAAmC,CAAA;;AAEnC,IAAA,kBAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;AACb,CAAC,EATWA,0BAAkB,KAAlBA,0BAAkB,GAS7B,EAAA,CAAA,CAAA,CAAA;AAcD;AACYC,6BAOX;AAPD,CAAA,UAAY,WAAW,EAAA;;AAErB,IAAA,WAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;;AAEb,IAAA,WAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;;AAEjB,IAAA,WAAA,CAAA,YAAA,CAAA,GAAA,aAA0B,CAAA;AAC5B,CAAC,EAPWA,mBAAW,KAAXA,mBAAW,GAOtB,EAAA,CAAA,CAAA,CAAA;AAaD;AACYC,iCAGX;AAHD,CAAA,UAAY,eAAe,EAAA;;AAEzB,IAAA,eAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACvB,CAAC,EAHWA,uBAAe,KAAfA,uBAAe,GAG1B,EAAA,CAAA,CAAA;;ACpbD;;;;;;AAMG;AAII,MAAM,YAAY,GAA+B;AACtD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,cAAc;AACzB,QAAA,eAAe,EAAE;AACf,YAAA,EAAE,EAAE;AACF,gBAAA,cAAc,EAAE,IAAI;AACpB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,YAAY;AACxB,iBAAA;AACF,aAAA;AACD,YAAA,aAAa,EAAE;AACb,gBAAA,cAAc,EAAE,0BAA0B;AAC1C,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;AACjC,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,8BAA8B,GAA+B;AACxE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,gCAAgC;AAC3C,QAAA,eAAe,EAAE;AACf,YAAA,aAAa,EAAE;AACb,gBAAA,cAAc,EAAE,eAAe;AAC/B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;AACjC,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,UAAU,GAA+B;AACpD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,YAAY;AACvB,QAAA,eAAe,EAAE;AACf,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,aAAa,EAAE;AACb,gBAAA,cAAc,EAAE,eAAe;AAC/B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AACjB,iBAAA;AACF,aAAA;AACD,YAAA,cAAc,EAAE;AACd,gBAAA,cAAc,EAAE,gBAAgB;AAChC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,kBAAkB,EAAE;AAClB,gBAAA,cAAc,EAAE,oBAAoB;AACpC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,cAAc,EAAE;AACd,gBAAA,cAAc,EAAE,gBAAgB;AAChC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AACjB,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,aAAa,GAA+B;AACvD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,eAAe;AAC1B,QAAA,eAAe,EAAE;AACf,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,aAAa;AACzB,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,WAAW,GAA+B;AACrD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,aAAa;AACxB,QAAA,eAAe,EAAE;AACf,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,aAAa;AACzB,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,cAAc,EAAE;AACd,gBAAA,cAAc,EAAE,gBAAgB;AAChC,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,qBAAqB;AACjC,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,mBAAmB,GAA+B;AAC7D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,qBAAqB;AAChC,QAAA,eAAe,EAAE;AACf,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;AACjC,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,gBAAgB,GAA+B;AAC1D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,kBAAkB;AAC7B,QAAA,eAAe,EAAE;AACf,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,cAAc;AAC1B,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,QAAQ,GAA+B;AAClD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,UAAU;AACrB,QAAA,eAAe,EAAE;AACf,YAAA,EAAE,EAAE;AACF,gBAAA,cAAc,EAAE,IAAI;AACpB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,cAAc,GAA+B;AACxD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,gBAAgB;AAC3B,QAAA,eAAe,EAAE;AACf,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;AACpC,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,wBAAwB,GAA+B;AAClE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,0BAA0B;AACrC,QAAA,eAAe,EAAE;AACf,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,sBAAsB;AAClC,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,wCAAwC,GAA+B;AAClF,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,0CAA0C;AACrD,QAAA,eAAe,EAAE;AACf,YAAA,oBAAoB,EAAE;AACpB,gBAAA,cAAc,EAAE,sBAAsB;AACtC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,kCAAkC,GAA+B;AAC5E,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,oCAAoC;AAC/C,QAAA,eAAe,EAAE;AACf,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,gCAAgC;AAC5C,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,mBAAmB,GAA+B;AAC7D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,qBAAqB;AAChC,QAAA,eAAe,EAAE;AACf,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,WAAW;AACvB,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,SAAS,GAA+B;AACnD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,WAAW;AACtB,QAAA,eAAe,EAAE;AACf,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,YAAY,EAAE;AACZ,gBAAA,cAAc,EAAE,cAAc;AAC9B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,SAAS;AAChB,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,kBAAkB;AAC9B,iBAAA;AACF,aAAA;AACD,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,gBAAgB,GAA+B;AAC1D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,kBAAkB;AAC7B,QAAA,eAAe,EAAE;AACf,YAAA,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,cAAc,GAA+B;AACxD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,gBAAgB;AAC3B,QAAA,eAAe,EAAE;AACf,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,EAAE,EAAE;AACF,gBAAA,cAAc,EAAE,IAAI;AACpB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,aAAa;AACzB,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,UAAU,GAA+B;AACpD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,YAAY;AACvB,QAAA,eAAe,EAAE;AACf,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,QAAQ;AACpB,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,0BAA0B,GAA+B;AACpE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,4BAA4B;AACvC,QAAA,eAAe,EAAE;AACf,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,kBAAkB;AAC9B,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,eAAe,GAA+B;AACzD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,iBAAiB;QAC5B,eAAe,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACV,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAA,EAAA,EAChC,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;AACpC,iBAAA;AACF,aAAA,EACD,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;aACF,EACF,CAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,aAAa,GAA+B;AACvD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,eAAe;AAC1B,QAAA,eAAe,oBACV,QAAQ,CAAC,IAAI,CAAC,eAAe,CACjC;AACF,KAAA;CACF,CAAC;AAEK,MAAM,0BAA0B,GAA+B;AACpE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,4BAA4B;QACvC,eAAe,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACV,cAAc,CAAC,IAAI,CAAC,eAAe,CAAA,EAAA,EACtC,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,gCAAgC;AAC5C,iBAAA;aACF,EACF,CAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,oBAAoB,GAA+B;AAC9D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,sBAAsB;QACjC,eAAe,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACV,eAAe,CAAC,IAAI,CAAC,eAAe,CAAA,EAAA,EACvC,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,gCAAgC;AAC5C,iBAAA;AACF,aAAA,EACD,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,YAAY;AACxB,iBAAA;aACF,EACF,CAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,8BAA8B,GAA+B;AACxE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,gCAAgC;QAC3C,eAAe,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACV,aAAa,CAAC,IAAI,CAAC,eAAe,CAAA,EAAA,EACrC,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,0CAA0C;AACtD,iBAAA;AACF,aAAA,EACD,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,YAAY;AACxB,iBAAA;aACF,EACF,CAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,MAAM,GAA+B;AAChD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,QAAQ;QACnB,eAAe,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACV,aAAa,CAAC,IAAI,CAAC,eAAe,CAAA,EAAA,EACrC,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,YAAY;AACxB,iBAAA;AACF,aAAA,EACD,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,sBAAsB;AACtC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,oBAAoB;AACpC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,gBAAgB,EAAE;AAChB,gBAAA,cAAc,EAAE,6BAA6B;AAC7C,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,qBAAqB;AACrC,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,kBAAkB,EAAE;AAClB,gBAAA,cAAc,EAAE,iBAAiB;AACjC,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,mBAAmB;AACnC,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,oBAAoB,EAAE;AACpB,gBAAA,cAAc,EAAE,iCAAiC;AACjD,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,sBAAsB;AACtC,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,gBAAgB;AAC5B,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA,EACD,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,kBAAkB;AAClC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,aAAa;AACzB,iBAAA;AACF,aAAA,EACD,mBAAmB,EAAE;AACnB,gBAAA,cAAc,EAAE,gCAAgC;AAChD,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;aACF,EACF,CAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,gBAAgB,GAA+B;AAC1D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,kBAAkB;QAC7B,eAAe,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACV,aAAa,CAAC,IAAI,CAAC,eAAe,CAAA,EAAA,EACrC,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,YAAY;AACxB,iBAAA;AACF,aAAA,EACD,kBAAkB,EAAE;AAClB,gBAAA,cAAc,EAAE,+BAA+B;AAC/C,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,gBAAgB,EAAE;AAChB,gBAAA,cAAc,EAAE,6BAA6B;AAC7C,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,SAAS;AAChB,iBAAA;aACF,EACF,CAAA;AACF,KAAA;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnwBD;;;;;;AAMG;AAaI,MAAM,MAAM,GAAuB;AACxC,IAAA,aAAa,EAAE,QAAQ;AACvB,IAAA,MAAM,EAAE;AACN,QAAA,YAAY,EAAE,kBAAkB;AAChC,QAAA,UAAU,EAAE,IAAI;AAChB,QAAA,cAAc,EAAE,QAAQ;AACxB,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,KAAK,GAA0B;AAC1C,IAAA,aAAa,EAAE,OAAO;AACtB,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,OAAO;AACvB,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;AACD,IAAA,YAAY,EAAE,IAAI;CACnB,CAAC;AAEK,MAAM,gBAAgB,GAA0B;AACrD,IAAA,aAAa,EAAE,kBAAkB;AACjC,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,kBAAkB;AAClC,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,UAAU,GAA4B;AACjD,IAAA,aAAa,EAAE,YAAY;AAC3B,IAAA,MAAM,EAAE;AACN,QAAA,YAAY,EAAE,YAAY;AAC1B,QAAA,UAAU,EAAE,IAAI;AAChB,QAAA,cAAc,EAAE,aAAa;AAC7B,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,WAAW,GAA0B;AAChD,IAAA,aAAa,EAAE,aAAa;AAC5B,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,aAAa;AAC7B,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,WAAW,GAAuB;AAC7C,IAAA,aAAa,EAAE,CAAC,SAAS,EAAE,aAAa,CAAC;AACzC,IAAA,MAAM,EAAE;AACN,QAAA,YAAY,EAAE,kBAAkB;AAChC,QAAA,UAAU,EAAE,IAAI;AAChB,QAAA,cAAc,EAAE,cAAc;AAC9B,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,UAAU,GAAuB;AAC5C,IAAA,aAAa,EAAE,YAAY;AAC3B,IAAA,MAAM,EAAEC,oBAA0B;CACnC,CAAC;AAEK,MAAM,wBAAwB,GAA0B;AAC7D,IAAA,aAAa,EAAE,0BAA0B;AACzC,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,0BAA0B;AAC1C,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,cAAc,GAA0B;AACnD,IAAA,aAAa,EAAE,gBAAgB;AAC/B,IAAA,MAAM,EAAE;AACN,QAAA,WAAW,EAAE;AACX,YAAA,SAAS,EAAE,CAAC;AACb,SAAA;AACD,QAAA,cAAc,EAAE,gBAAgB;AAChC,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,iBAAiB,GAA0B;AACtD,IAAA,aAAa,EAAE,mBAAmB;AAClC,IAAA,MAAM,EAAE;AACN,QAAA,WAAW,EAAE;AACX,YAAA,SAAS,EAAE,EAAE;AACb,YAAA,SAAS,EAAE,CAAC;AACb,SAAA;AACD,QAAA,cAAc,EAAE,mBAAmB;AACnC,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,WAAW,GAAuB;AAC7C,IAAA,aAAa,EAAE,YAAY;AAC3B,IAAA,MAAM,EAAEC,0BAAgC;CACzC,CAAC;AAEK,MAAM,WAAW,GAAuB;AAC7C,IAAA,aAAa,EAAE,YAAY;AAC3B,IAAA,MAAM,EAAEC,8BAAoC;CAC7C,CAAC;AAEK,MAAM,kCAAkC,GAA0B;AACvE,IAAA,aAAa,EAAE,oCAAoC;AACnD,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,oCAAoC;AACpD,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,MAAM,GAA0B;AAC3C,IAAA,aAAa,EAAE,QAAQ;AACvB,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,QAAQ;AACxB,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,WAAW,GAA0B;AAChD,IAAA,aAAa,EAAE,aAAa;AAC5B,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,aAAa;AAC7B,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,WAAW,GAA0B;AAChD,IAAA,aAAa,EAAE,aAAa;AAC5B,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,aAAa;AAC7B,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,UAAU,GAA0B;AAC/C,IAAA,aAAa,EAAE,YAAY;AAC3B,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,YAAY;AAC5B,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF;;ACrMD;;;;;;AAMG;AAgBH;AACA;MACa,iBAAiB,CAAA;AAG5B;;;AAGG;AACH,IAAA,WAAA,CAAY,MAAwB,EAAA;AAClC,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED;;;AAGG;AACI,IAAA,YAAY,CACjB,OAAiD,EAAA;QAEjD,MAAM,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC;QACjD,OAAO;YACL,IAAI,GAAA;AACF,gBAAA,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC,GAAA;AACpB,gBAAA,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE,MAAK;AACX,gBAAA,OAAO,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC;aAC7C;SACF,CAAC;KACH;AAEc,IAAA,sBAAsB,CACnC,OAAiD,EAAA;;YAEjD,IAAI,MAAM,GAAG,MAAAC,aAAA,CAAM,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAA,CAAC;AAC/C,YAAA,MAAA,MAAAA,aAAA,CAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;SAC1B,CAAA,CAAA;AAAA,KAAA;AAEc,IAAA,qBAAqB,CAClC,OAAiD,EAAA;;;;gBAEjD,KAAyB,IAAA,EAAA,GAAAC,mBAAA,CAAA,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAAD,aAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,IAAA,GAAA;oBAAlD,MAAM,IAAI,WAAA,CAAA;oBACnB,MAAAA,aAAA,CAAA,OAAOE,sBAAA,CAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;AACb,iBAAA;;;;;;;;;SACF,CAAA,CAAA;AAAA,KAAA;AAED;;;;AAIG;IACH,GAAG,CACD,gBAAwB,EACxB,OAAwC,EAAA;AAExC,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,gBAAgB,EAAE,OAAO,EAAE,EAC7BE,kBAAgB,CACjB,CAAC;KACH;AAED;;;AAGG;AACK,IAAA,aAAa,CACnB,OAAiD,EAAA;AAEjD,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,OAAO,EAAE,EACXC,2BAAyB,CAC1B,CAAC;KACH;AACF,CAAA;AACD;AACA,MAAMC,YAAU,GAAGC,qBAAU,CAAC,gBAAgB,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMH,kBAAgB,GAA6B;AACjD,IAAA,IAAI,EAAE,kEAAkE;AACxE,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEI,YAAoB;AACjC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEC,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE,CAACC,KAAgB,EAAEC,gBAA2B,CAAC;AAC9D,IAAA,gBAAgB,EAAE,CAACC,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAMD,2BAAyB,GAA6B;AAC1D,IAAA,IAAI,EAAE,+CAA+C;AACrD,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAES,gBAAwB;AACrC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEL,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE,CAACC,KAAgB,CAAC;AACjC,IAAA,gBAAgB,EAAE,CAACE,MAAiB,CAAC;gBACrCP,YAAU;CACX;;ACrID;;;;;;AAMG;AAgBH;AACA;MACa,yBAAyB,CAAA;AAGpC;;;AAGG;AACH,IAAA,WAAA,CAAY,MAAwB,EAAA;AAClC,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED;;;;AAIG;IACI,YAAY,CACjB,gBAAwB,EACxB,OAAyD,EAAA;QAEzD,MAAM,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAC;QACnE,OAAO;YACL,IAAI,GAAA;AACF,gBAAA,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC,GAAA;AACpB,gBAAA,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE,MAAK;gBACX,OAAO,IAAI,CAAC,sBAAsB,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAC;aAC/D;SACF,CAAC;KACH;IAEc,sBAAsB,CACnC,gBAAwB,EACxB,OAAyD,EAAA;;AAEzD,YAAA,IAAI,MAAM,GAAG,MAAML,aAAA,CAAA,IAAI,CAAC,aAAa,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAA,CAAC;AACjE,YAAA,MAAA,MAAAA,aAAA,CAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;SAC1B,CAAA,CAAA;AAAA,KAAA;IAEc,qBAAqB,CAClC,gBAAwB,EACxB,OAAyD,EAAA;;;;AAEzD,gBAAA,KAAyB,IAAA,EAAA,GAAAC,mBAAA,CAAA,IAAI,CAAC,sBAAsB,CAClD,gBAAgB,EAChB,OAAO,CACR,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAAD,aAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,IAAA,GAAA;oBAHU,MAAM,IAAI,WAAA,CAAA;oBAInB,MAAAA,aAAA,CAAA,OAAOE,sBAAA,CAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;AACb,iBAAA;;;;;;;;;SACF,CAAA,CAAA;AAAA,KAAA;AAED;;;;;AAKG;AACH,IAAA,GAAG,CACD,gBAAwB,EACxB,WAAmB,EACnB,OAAgD,EAAA;AAEhD,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,gBAAgB,EAAE,WAAW,EAAE,OAAO,EAAE,EAC1CE,kBAAgB,CACjB,CAAC;KACH;AAED;;;;AAIG;IACK,aAAa,CACnB,gBAAwB,EACxB,OAAyD,EAAA;AAEzD,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,gBAAgB,EAAE,OAAO,EAAE,EAC7B,yBAAyB,CAC1B,CAAC;KACH;AACF,CAAA;AACD;AACA,MAAME,YAAU,GAAGC,qBAAU,CAAC,gBAAgB,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMH,kBAAgB,GAA6B;AACjD,IAAA,IAAI,EACF,yFAAyF;AAC3F,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEI,YAAoB;AACjC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEC,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,gBAA2B;AAC3B,QAAAG,WAAsB;AACvB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACF,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAM,yBAAyB,GAA6B;AAC1D,IAAA,IAAI,EACF,2EAA2E;AAC7E,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEQ,gBAAwB;AACrC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEL,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE,CAACC,KAAgB,EAAEC,gBAA2B,CAAC;AAC9D,IAAA,gBAAgB,EAAE,CAACC,MAAiB,CAAC;gBACrCP,YAAU;CACX;;ACtJD;;;;;;AAMG;AAwBH;AACA;MACa,yBAAyB,CAAA;AAGpC;;;AAGG;AACH,IAAA,WAAA,CAAY,MAAwB,EAAA;AAClC,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED;;;;AAIG;IACI,mBAAmB,CACxB,iBAAyB,EACzB,OAAgE,EAAA;QAEhE,MAAM,IAAI,GAAG,IAAI,CAAC,4BAA4B,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;QAC3E,OAAO;YACL,IAAI,GAAA;AACF,gBAAA,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC,GAAA;AACpB,gBAAA,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE,MAAK;gBACX,OAAO,IAAI,CAAC,6BAA6B,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;aACvE;SACF,CAAC;KACH;IAEc,6BAA6B,CAC1C,iBAAyB,EACzB,OAAgE,EAAA;;AAEhE,YAAA,IAAI,MAAM,GAAG,MAAML,aAAA,CAAA,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;AACzE,YAAA,MAAA,MAAAA,aAAA,CAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;SAC1B,CAAA,CAAA;AAAA,KAAA;IAEc,4BAA4B,CACzC,iBAAyB,EACzB,OAAgE,EAAA;;;;AAEhE,gBAAA,KAAyB,IAAA,EAAA,GAAAC,mBAAA,CAAA,IAAI,CAAC,6BAA6B,CACzD,iBAAiB,EACjB,OAAO,CACR,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAAD,aAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,IAAA,GAAA;oBAHU,MAAM,IAAI,WAAA,CAAA;oBAInB,MAAAA,aAAA,CAAA,OAAOE,sBAAA,CAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;AACb,iBAAA;;;;;;;;;SACF,CAAA,CAAA;AAAA,KAAA;AAED;;;AAGG;AACI,IAAA,kBAAkB,CACvB,OAA+D,EAAA;QAE/D,MAAM,IAAI,GAAG,IAAI,CAAC,2BAA2B,CAAC,OAAO,CAAC,CAAC;QACvD,OAAO;YACL,IAAI,GAAA;AACF,gBAAA,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC,GAAA;AACpB,gBAAA,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE,MAAK;AACX,gBAAA,OAAO,IAAI,CAAC,4BAA4B,CAAC,OAAO,CAAC,CAAC;aACnD;SACF,CAAC;KACH;AAEc,IAAA,4BAA4B,CACzC,OAA+D,EAAA;;YAE/D,IAAI,MAAM,GAAG,MAAAD,aAAA,CAAM,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAA,CAAC;AACrD,YAAA,MAAA,MAAAA,aAAA,CAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;SAC1B,CAAA,CAAA;AAAA,KAAA;AAEc,IAAA,2BAA2B,CACxC,OAA+D,EAAA;;;;gBAE/D,KAAyB,IAAA,EAAA,GAAAC,mBAAA,CAAA,IAAI,CAAC,4BAA4B,CAAC,OAAO,CAAC,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAAD,aAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,IAAA,GAAA;oBAAxD,MAAM,IAAI,WAAA,CAAA;oBACnB,MAAAA,aAAA,CAAA,OAAOE,sBAAA,CAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;AACb,iBAAA;;;;;;;;;SACF,CAAA,CAAA;AAAA,KAAA;AAED;;;;;;AAMG;AACH,IAAA,cAAc,CACZ,wBAAgC,EAChC,iBAAyB,EACzB,UAAgC,EAChC,OAA2D,EAAA;AAE3D,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,wBAAwB,EAAE,iBAAiB,EAAE,UAAU,EAAE,OAAO,EAAE,EACpEc,6BAA2B,CAC5B,CAAC;KACH;AAED;;;;;AAKG;AACH,IAAA,GAAG,CACD,wBAAgC,EAChC,iBAAyB,EACzB,OAAgD,EAAA;AAEhD,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,wBAAwB,EAAE,iBAAiB,EAAE,OAAO,EAAE,EACxDZ,kBAAgB,CACjB,CAAC;KACH;AAED;;;;;AAKG;AACH,IAAA,MAAM,CACJ,iBAAyB,EACzB,wBAAgC,EAChC,OAAmD,EAAA;AAEnD,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,wBAAwB,EAAE,OAAO,EAAE,EACxDa,qBAAmB,CACpB,CAAC;KACH;AAED;;;;;;AAMG;AACH,IAAA,MAAM,CACJ,wBAAgC,EAChC,iBAAyB,EACzB,UAAsC,EACtC,OAAmD,EAAA;AAEnD,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,wBAAwB,EAAE,iBAAiB,EAAE,UAAU,EAAE,OAAO,EAAE,EACpE,mBAAmB,CACpB,CAAC;KACH;AAED;;;;AAIG;IACK,oBAAoB,CAC1B,iBAAyB,EACzB,OAAgE,EAAA;AAEhE,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,OAAO,EAAE,EAC9B,gCAAgC,CACjC,CAAC;KACH;AAED;;;AAGG;AACK,IAAA,mBAAmB,CACzB,OAA+D,EAAA;AAE/D,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,OAAO,EAAE,EACXC,iCAA+B,CAChC,CAAC;KACH;AACF,CAAA;AACD;AACA,MAAMZ,YAAU,GAAGC,qBAAU,CAAC,gBAAgB,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMS,6BAA2B,GAA6B;AAC5D,IAAA,IAAI,EACF,oJAAoJ;AACtJ,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEG,oBAA4B;AACzC,SAAA;AACD,QAAA,GAAG,EAAE;YACH,UAAU,EAAEA,oBAA4B;AACzC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEV,aAAqB;AAClC,SAAA;AACF,KAAA;IACD,WAAW,EAAEW,UAAqB;AAClC,IAAA,eAAe,EAAE,CAACV,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAU,wBAAmC;AACnC,QAAAC,cAAyB;AACzB,QAAAC,iBAA4B;AAC7B,KAAA;IACD,gBAAgB,EAAE,CAACV,MAAiB,EAAEW,WAAsB,CAAC;AAC7D,IAAA,SAAS,EAAE,MAAM;gBACjBlB,YAAU;CACX,CAAC;AACF,MAAMF,kBAAgB,GAA6B;AACjD,IAAA,IAAI,EACF,oJAAoJ;AACtJ,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEe,oBAA4B;AACzC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEV,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAU,wBAAmC;AACnC,QAAAC,cAAyB;AACzB,QAAAC,iBAA4B;AAC7B,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACV,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAMW,qBAAmB,GAA6B;AACpD,IAAA,IAAI,EACF,oJAAoJ;AACtJ,IAAA,UAAU,EAAE,QAAQ;AACpB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,OAAO,EAAE;YACP,UAAU,EAAER,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAU,wBAAmC;AACnC,QAAAC,cAAyB;AACzB,QAAAC,iBAA4B;AAC7B,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACV,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAM,mBAAmB,GAA6B;AACpD,IAAA,IAAI,EACF,oJAAoJ;AACtJ,IAAA,UAAU,EAAE,OAAO;AACnB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEa,oBAA4B;AACzC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEV,aAAqB;AAClC,SAAA;AACF,KAAA;IACD,WAAW,EAAEgB,WAAsB;AACnC,IAAA,eAAe,EAAE,CAACf,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAU,wBAAmC;AACnC,QAAAC,cAAyB;AACzB,QAAAC,iBAA4B;AAC7B,KAAA;IACD,gBAAgB,EAAE,CAACV,MAAiB,EAAEW,WAAsB,CAAC;AAC7D,IAAA,SAAS,EAAE,MAAM;gBACjBlB,YAAU;CACX,CAAC;AACF,MAAM,gCAAgC,GAA6B;AACjE,IAAA,IAAI,EACF,yHAAyH;AAC3H,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEoB,wBAAgC;AAC7C,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEjB,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAW,cAAyB;AACzB,QAAAC,iBAA4B;AAC7B,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACV,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAMY,iCAA+B,GAA6B;AAChE,IAAA,IAAI,EACF,sFAAsF;AACxF,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEQ,wBAAgC;AAC7C,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEjB,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE,CAACC,KAAgB,EAAEW,cAAyB,CAAC;AAC5D,IAAA,gBAAgB,EAAE,CAACT,MAAiB,CAAC;gBACrCP,YAAU;CACX;;ACpWD;;;;;;AAMG;AAmBH;AACA;MACa,iCAAiC,CAAA;AAI5C;;;AAGG;AACH,IAAA,WAAA,CAAY,MAAwB,EAAA;AAClC,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED;;;;;AAKG;AACI,IAAA,kBAAkB,CACvB,wBAAgC,EAChC,iBAAyB,EACzB,OAAuE,EAAA;AAEvE,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,2BAA2B,CAC3C,wBAAwB,EACxB,iBAAiB,EACjB,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI,GAAA;AACF,gBAAA,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC,GAAA;AACpB,gBAAA,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE,MAAK;gBACX,OAAO,IAAI,CAAC,4BAA4B,CACtC,wBAAwB,EACxB,iBAAiB,EACjB,OAAO,CACR,CAAC;aACH;SACF,CAAC;KACH;AAEc,IAAA,4BAA4B,CACzC,wBAAgC,EAChC,iBAAyB,EACzB,OAAuE,EAAA;;AAEvE,YAAA,IAAI,MAAM,GAAG,MAAML,aAAA,CAAA,IAAI,CAAC,mBAAmB,CACzC,wBAAwB,EACxB,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;AACF,YAAA,MAAA,MAAAA,aAAA,CAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;SAC1B,CAAA,CAAA;AAAA,KAAA;AAEc,IAAA,2BAA2B,CACxC,wBAAgC,EAChC,iBAAyB,EACzB,OAAuE,EAAA;;;;AAEvE,gBAAA,KAAyB,IAAA,EAAA,GAAAC,mBAAA,CAAA,IAAI,CAAC,4BAA4B,CACxD,wBAAwB,EACxB,iBAAiB,EACjB,OAAO,CACR,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAAD,aAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,IAAA,GAAA;oBAJU,MAAM,IAAI,WAAA,CAAA;oBAKnB,MAAAA,aAAA,CAAA,OAAOE,sBAAA,CAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;AACb,iBAAA;;;;;;;;;SACF,CAAA,CAAA;AAAA,KAAA;AAED;;;;;;;AAOG;IACH,cAAc,CACZ,wBAAgC,EAChC,WAAmB,EACnB,iBAAyB,EACzB,UAAgC,EAChC,OAAmE,EAAA;AAEnE,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,wBAAwB;YACxB,WAAW;YACX,iBAAiB;YACjB,UAAU;YACV,OAAO;SACR,EACDc,6BAA2B,CAC5B,CAAC;KACH;AAED;;;;;;AAMG;AACH,IAAA,GAAG,CACD,wBAAgC,EAChC,WAAmB,EACnB,iBAAyB,EACzB,OAAwD,EAAA;AAExD,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,wBAAwB,EAAE,WAAW,EAAE,iBAAiB,EAAE,OAAO,EAAE,EACrEZ,kBAAgB,CACjB,CAAC;KACH;AAED;;;;;;AAMG;AACH,IAAA,MAAM,CACJ,iBAAyB,EACzB,wBAAgC,EAChC,WAAmB,EACnB,OAA2D,EAAA;AAE3D,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,wBAAwB,EAAE,WAAW,EAAE,OAAO,EAAE,EACrEa,qBAAmB,CACpB,CAAC;KACH;AAED;;;;;AAKG;AACK,IAAA,mBAAmB,CACzB,wBAAgC,EAChC,iBAAyB,EACzB,OAAuE,EAAA;AAEvE,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,wBAAwB,EAAE,iBAAiB,EAAE,OAAO,EAAE,EACxD,+BAA+B,CAChC,CAAC;KACH;AACF,CAAA;AACD;AACA,MAAMX,YAAU,GAAGC,qBAAU,CAAC,gBAAgB,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMS,6BAA2B,GAA6B;AAC5D,IAAA,IAAI,EACF,2KAA2K;AAC7K,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEG,oBAA4B;AACzC,SAAA;AACD,QAAA,GAAG,EAAE;YACH,UAAU,EAAEA,oBAA4B;AACzC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEV,aAAqB;AAClC,SAAA;AACF,KAAA;IACD,WAAW,EAAEW,UAAqB;AAClC,IAAA,eAAe,EAAE,CAACV,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAI,WAAsB;AACtB,QAAAM,wBAAmC;AACnC,QAAAC,cAAyB;AACzB,QAAAC,iBAA4B;AAC7B,KAAA;IACD,gBAAgB,EAAE,CAACV,MAAiB,EAAEW,WAAsB,CAAC;AAC7D,IAAA,SAAS,EAAE,MAAM;gBACjBlB,YAAU;CACX,CAAC;AACF,MAAMF,kBAAgB,GAA6B;AACjD,IAAA,IAAI,EACF,2KAA2K;AAC7K,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEe,oBAA4B;AACzC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEV,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAI,WAAsB;AACtB,QAAAM,wBAAmC;AACnC,QAAAC,cAAyB;AACzB,QAAAC,iBAA4B;AAC7B,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACV,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAMW,qBAAmB,GAA6B;AACpD,IAAA,IAAI,EACF,2KAA2K;AAC7K,IAAA,UAAU,EAAE,QAAQ;AACpB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,OAAO,EAAE;YACP,UAAU,EAAER,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAI,WAAsB;AACtB,QAAAM,wBAAmC;AACnC,QAAAC,cAAyB;AACzB,QAAAC,iBAA4B;AAC7B,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACV,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAM,+BAA+B,GAA6B;AAChE,IAAA,IAAI,EACF,6JAA6J;AAC/J,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEoB,wBAAgC;AAC7C,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEjB,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAU,wBAAmC;AACnC,QAAAC,cAAyB;AACzB,QAAAC,iBAA4B;AAC7B,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACV,MAAiB,CAAC;gBACrCP,YAAU;CACX;;ACtRD;;;;;;AAMG;AA2BH;AACA;MACa,mCAAmC,CAAA;AAI9C;;;AAGG;AACH,IAAA,WAAA,CAAY,MAAwB,EAAA;AAClC,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED;;;;;AAKG;AACI,IAAA,qBAAqB,CAC1B,iBAAyB,EACzB,MAAc,EACd,OAA4E,EAAA;AAE5E,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,8BAA8B,CAC9C,iBAAiB,EACjB,MAAM,EACN,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI,GAAA;AACF,gBAAA,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC,GAAA;AACpB,gBAAA,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE,MAAK;gBACX,OAAO,IAAI,CAAC,+BAA+B,CACzC,iBAAiB,EACjB,MAAM,EACN,OAAO,CACR,CAAC;aACH;SACF,CAAC;KACH;AAEc,IAAA,+BAA+B,CAC5C,iBAAyB,EACzB,MAAc,EACd,OAA4E,EAAA;;AAE5E,YAAA,IAAI,MAAM,GAAG,MAAML,aAAA,CAAA,IAAI,CAAC,sBAAsB,CAC5C,iBAAiB,EACjB,MAAM,EACN,OAAO,CACR,CAAA,CAAC;AACF,YAAA,MAAA,MAAAA,aAAA,CAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;SAC1B,CAAA,CAAA;AAAA,KAAA;AAEc,IAAA,8BAA8B,CAC3C,iBAAyB,EACzB,MAAc,EACd,OAA4E,EAAA;;;;AAE5E,gBAAA,KAAyB,IAAA,EAAA,GAAAC,mBAAA,CAAA,IAAI,CAAC,+BAA+B,CAC3D,iBAAiB,EACjB,MAAM,EACN,OAAO,CACR,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAAD,aAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,IAAA,GAAA;oBAJU,MAAM,IAAI,WAAA,CAAA;oBAKnB,MAAAA,aAAA,CAAA,OAAOE,sBAAA,CAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;AACb,iBAAA;;;;;;;;;SACF,CAAA,CAAA;AAAA,KAAA;AAED;;;;AAIG;IACI,IAAI,CACT,iBAAyB,EACzB,OAA2D,EAAA;QAE3D,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;QAC5D,OAAO;YACL,IAAI,GAAA;AACF,gBAAA,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC,GAAA;AACpB,gBAAA,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE,MAAK;gBACX,OAAO,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;aACxD;SACF,CAAC;KACH;IAEc,cAAc,CAC3B,iBAAyB,EACzB,OAA2D,EAAA;;AAE3D,YAAA,IAAI,MAAM,GAAG,MAAMD,aAAA,CAAA,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;AAC1D,YAAA,MAAA,MAAAA,aAAA,CAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;SAC1B,CAAA,CAAA;AAAA,KAAA;IAEc,aAAa,CAC1B,iBAAyB,EACzB,OAA2D,EAAA;;;;AAE3D,gBAAA,KAAyB,IAAA,EAAA,GAAAC,mBAAA,CAAA,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAAD,aAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,IAAA,GAAA;oBAA7D,MAAM,IAAI,WAAA,CAAA;oBACnB,MAAAA,aAAA,CAAA,OAAOE,sBAAA,CAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;AACb,iBAAA;;;;;;;;;SACF,CAAA,CAAA;AAAA,KAAA;AAED;;;AAGG;AACI,IAAA,kBAAkB,CACvB,OAAyE,EAAA;QAEzE,MAAM,IAAI,GAAG,IAAI,CAAC,2BAA2B,CAAC,OAAO,CAAC,CAAC;QACvD,OAAO;YACL,IAAI,GAAA;AACF,gBAAA,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC,GAAA;AACpB,gBAAA,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE,MAAK;AACX,gBAAA,OAAO,IAAI,CAAC,4BAA4B,CAAC,OAAO,CAAC,CAAC;aACnD;SACF,CAAC;KACH;AAEc,IAAA,4BAA4B,CACzC,OAAyE,EAAA;;YAEzE,IAAI,MAAM,GAAG,MAAAD,aAAA,CAAM,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAA,CAAC;AACrD,YAAA,MAAA,MAAAA,aAAA,CAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;SAC1B,CAAA,CAAA;AAAA,KAAA;AAEc,IAAA,2BAA2B,CACxC,OAAyE,EAAA;;;;gBAEzE,KAAyB,IAAA,EAAA,GAAAC,mBAAA,CAAA,IAAI,CAAC,4BAA4B,CAAC,OAAO,CAAC,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAAD,aAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,IAAA,GAAA;oBAAxD,MAAM,IAAI,WAAA,CAAA;oBACnB,MAAAA,aAAA,CAAA,OAAOE,sBAAA,CAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;AACb,iBAAA;;;;;;;;;SACF,CAAA,CAAA;AAAA,KAAA;AAED;;;;;AAKG;AACI,IAAA,iBAAiB,CACtB,iBAAyB,EACzB,WAAmB,EACnB,OAAwE,EAAA;AAExE,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,0BAA0B,CAC1C,iBAAiB,EACjB,WAAW,EACX,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI,GAAA;AACF,gBAAA,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC,GAAA;AACpB,gBAAA,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE,MAAK;gBACX,OAAO,IAAI,CAAC,2BAA2B,CACrC,iBAAiB,EACjB,WAAW,EACX,OAAO,CACR,CAAC;aACH;SACF,CAAC;KACH;AAEc,IAAA,2BAA2B,CACxC,iBAAyB,EACzB,WAAmB,EACnB,OAAwE,EAAA;;AAExE,YAAA,IAAI,MAAM,GAAG,MAAMD,aAAA,CAAA,IAAI,CAAC,kBAAkB,CACxC,iBAAiB,EACjB,WAAW,EACX,OAAO,CACR,CAAA,CAAC;AACF,YAAA,MAAA,MAAAA,aAAA,CAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;SAC1B,CAAA,CAAA;AAAA,KAAA;AAEc,IAAA,0BAA0B,CACvC,iBAAyB,EACzB,WAAmB,EACnB,OAAwE,EAAA;;;;AAExE,gBAAA,KAAyB,IAAA,EAAA,GAAAC,mBAAA,CAAA,IAAI,CAAC,2BAA2B,CACvD,iBAAiB,EACjB,WAAW,EACX,OAAO,CACR,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAAD,aAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,IAAA,GAAA;oBAJU,MAAM,IAAI,WAAA,CAAA;oBAKnB,MAAAA,aAAA,CAAA,OAAOE,sBAAA,CAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;AACb,iBAAA;;;;;;;;;SACF,CAAA,CAAA;AAAA,KAAA;AAED;;;;;AAKG;AACI,IAAA,iBAAiB,CACtB,iBAAyB,EACzB,WAAmB,EACnB,OAAwE,EAAA;AAExE,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,0BAA0B,CAC1C,iBAAiB,EACjB,WAAW,EACX,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI,GAAA;AACF,gBAAA,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC,GAAA;AACpB,gBAAA,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE,MAAK;gBACX,OAAO,IAAI,CAAC,2BAA2B,CACrC,iBAAiB,EACjB,WAAW,EACX,OAAO,CACR,CAAC;aACH;SACF,CAAC;KACH;AAEc,IAAA,2BAA2B,CACxC,iBAAyB,EACzB,WAAmB,EACnB,OAAwE,EAAA;;AAExE,YAAA,IAAI,MAAM,GAAG,MAAMD,aAAA,CAAA,IAAI,CAAC,kBAAkB,CACxC,iBAAiB,EACjB,WAAW,EACX,OAAO,CACR,CAAA,CAAC;AACF,YAAA,MAAA,MAAAA,aAAA,CAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;SAC1B,CAAA,CAAA;AAAA,KAAA;AAEc,IAAA,0BAA0B,CACvC,iBAAyB,EACzB,WAAmB,EACnB,OAAwE,EAAA;;;;AAExE,gBAAA,KAAyB,IAAA,EAAA,GAAAC,mBAAA,CAAA,IAAI,CAAC,2BAA2B,CACvD,iBAAiB,EACjB,WAAW,EACX,OAAO,CACR,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAAD,aAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,IAAA,GAAA;oBAJU,MAAM,IAAI,WAAA,CAAA;oBAKnB,MAAAA,aAAA,CAAA,OAAOE,sBAAA,CAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;AACb,iBAAA;;;;;;;;;SACF,CAAA,CAAA;AAAA,KAAA;AAED;;;;;;;;AAQG;IACH,cAAc,CACZ,kCAA0C,EAC1C,iBAAyB,EACzB,MAAc,EACd,UAA0C,EAC1C,OAAqE,EAAA;AAErE,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,kCAAkC;YAClC,iBAAiB;YACjB,MAAM;YACN,UAAU;YACV,OAAO;SACR,EACDc,6BAA2B,CAC5B,CAAC;KACH;AAED;;;;;;AAMG;AACH,IAAA,GAAG,CACD,iBAAyB,EACzB,kCAA0C,EAC1C,MAAc,EACd,OAA0D,EAAA;AAE1D,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,kCAAkC;YAClC,MAAM;YACN,OAAO;SACR,EACDZ,kBAAgB,CACjB,CAAC;KACH;AAED;;;;;;AAMG;AACH,IAAA,MAAM,CACJ,iBAAyB,EACzB,kCAA0C,EAC1C,MAAc,EACd,OAA6D,EAAA;AAE7D,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,kCAAkC;YAClC,MAAM;YACN,OAAO;SACR,EACDa,qBAAmB,CACpB,CAAC;KACH;AAED;;;;;AAKG;AACK,IAAA,sBAAsB,CAC5B,iBAAyB,EACzB,MAAc,EACd,OAA4E,EAAA;AAE5E,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,MAAM,EAAE,OAAO,EAAE,EACtC,kCAAkC,CACnC,CAAC;KACH;AAED;;;;AAIG;IACK,KAAK,CACX,iBAAyB,EACzB,OAA2D,EAAA;AAE3D,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,OAAO,EAAE,EAC9BU,mBAAiB,CAClB,CAAC;KACH;AAED;;;AAGG;AACK,IAAA,mBAAmB,CACzB,OAAyE,EAAA;AAEzE,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,OAAO,EAAE,EACXT,iCAA+B,CAChC,CAAC;KACH;AAED;;;;;AAKG;AACK,IAAA,kBAAkB,CACxB,iBAAyB,EACzB,WAAmB,EACnB,OAAwE,EAAA;AAExE,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,WAAW,EAAE,OAAO,EAAE,EAC3C,8BAA8B,CAC/B,CAAC;KACH;AAED;;;;;AAKG;AACK,IAAA,kBAAkB,CACxB,iBAAyB,EACzB,WAAmB,EACnB,OAAwE,EAAA;AAExE,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,WAAW,EAAE,OAAO,EAAE,EAC3C,8BAA8B,CAC/B,CAAC;KACH;AACF,CAAA;AACD;AACA,MAAMZ,YAAU,GAAGC,qBAAU,CAAC,gBAAgB,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMS,6BAA2B,GAA6B;AAC5D,IAAA,IAAI,EACF,6NAA6N;AAC/N,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEY,8BAAsC;AACnD,SAAA;AACD,QAAA,GAAG,EAAE;YACH,UAAU,EAAEA,8BAAsC;AACnD,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEnB,aAAqB;AAClC,SAAA;AACF,KAAA;IACD,WAAW,EAAEoB,WAAsB;AACnC,IAAA,eAAe,EAAE,CAACnB,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAW,cAAyB;AACzB,QAAAC,iBAA4B;AAC5B,QAAAO,kCAA6C;AAC7C,QAAAC,MAAiB;AAClB,KAAA;IACD,gBAAgB,EAAE,CAAClB,MAAiB,EAAEW,WAAsB,CAAC;AAC7D,IAAA,SAAS,EAAE,MAAM;gBACjBlB,YAAU;CACX,CAAC;AACF,MAAMF,kBAAgB,GAA6B;AACjD,IAAA,IAAI,EACF,6NAA6N;AAC/N,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEwB,8BAAsC;AACnD,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEnB,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAW,cAAyB;AACzB,QAAAC,iBAA4B;AAC5B,QAAAO,kCAA6C;AAC7C,QAAAC,MAAiB;AAClB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAAClB,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAMW,qBAAmB,GAA6B;AACpD,IAAA,IAAI,EACF,6NAA6N;AAC/N,IAAA,UAAU,EAAE,QAAQ;AACpB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,OAAO,EAAE;YACP,UAAU,EAAER,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAW,cAAyB;AACzB,QAAAC,iBAA4B;AAC5B,QAAAO,kCAA6C;AAC7C,QAAAC,MAAiB;AAClB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAAClB,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAM,kCAAkC,GAA6B;AACnE,IAAA,IAAI,EACF,wLAAwL;AAC1L,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAE0B,kCAA0C;AACvD,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEvB,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAW,cAAyB;AACzB,QAAAC,iBAA4B;AAC5B,QAAAQ,MAAiB;AAClB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAAClB,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAMqB,mBAAiB,GAA6B;AAClD,IAAA,IAAI,EACF,mIAAmI;AACrI,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEK,kCAA0C;AACvD,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEvB,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAW,cAAyB;AACzB,QAAAC,iBAA4B;AAC7B,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACV,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAMY,iCAA+B,GAA6B;AAChE,IAAA,IAAI,EACF,gGAAgG;AAClG,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEc,kCAA0C;AACvD,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEvB,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE,CAACC,KAAgB,EAAEW,cAAyB,CAAC;AAC5D,IAAA,gBAAgB,EAAE,CAACT,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAM,8BAA8B,GAA6B;AAC/D,IAAA,IAAI,EACF,4LAA4L;AAC9L,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAE0B,kCAA0C;AACvD,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEvB,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAW,cAAyB;AACzB,QAAAC,iBAA4B;AAC5B,QAAAU,WAAsB;AACvB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACpB,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAM,8BAA8B,GAA6B;AAC/D,IAAA,IAAI,EACF,4LAA4L;AAC9L,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAE0B,kCAA0C;AACvD,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEvB,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAW,cAAyB;AACzB,QAAAC,iBAA4B;AAC5B,QAAAW,WAAsB;AACvB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACrB,MAAiB,CAAC;gBACrCP,YAAU;CACX;;AC7nBD;;;;;;AAMG;AAcH;AACA;MACa,cAAc,CAAA;AAGzB;;;AAGG;AACH,IAAA,WAAA,CAAY,MAAwB,EAAA;AAClC,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED;;;AAGG;AACI,IAAA,IAAI,CACT,OAAsC,EAAA;QAEtC,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QACzC,OAAO;YACL,IAAI,GAAA;AACF,gBAAA,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC,GAAA;AACpB,gBAAA,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE,MAAK;AACX,gBAAA,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;aACrC;SACF,CAAC;KACH;AAEc,IAAA,cAAc,CAC3B,OAAsC,EAAA;;YAEtC,IAAI,MAAM,GAAG,MAAAL,aAAA,CAAM,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAA,CAAC;AACvC,YAAA,MAAA,MAAAA,aAAA,CAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;SAC1B,CAAA,CAAA;AAAA,KAAA;AAEc,IAAA,aAAa,CAC1B,OAAsC,EAAA;;;;gBAEtC,KAAyB,IAAA,EAAA,GAAAC,mBAAA,CAAA,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAAD,aAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,IAAA,GAAA;oBAA1C,MAAM,IAAI,WAAA,CAAA;oBACnB,MAAAA,aAAA,CAAA,OAAOE,sBAAA,CAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;AACb,iBAAA;;;;;;;;;SACF,CAAA,CAAA;AAAA,KAAA;AAED;;;AAGG;AACK,IAAA,KAAK,CACX,OAAsC,EAAA;AAEtC,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,EAAE,OAAO,EAAE,EAAE,iBAAiB,CAAC,CAAC;KACzE;AACF,CAAA;AACD;AACA,MAAMI,YAAU,GAAGC,qBAAU,CAAC,gBAAgB,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAM,iBAAiB,GAA6B;AAClD,IAAA,IAAI,EAAE,4CAA4C;AAClD,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAE4B,mBAA2B;AACxC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAE1B,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE,CAACC,KAAgB,CAAC;AACjC,IAAA,gBAAgB,EAAE,CAACE,MAAiB,CAAC;gBACrCP,YAAU;CACX;;ACjGD;;;;;;AAMG;AAgBH;AACA;MACa,WAAW,CAAA;AAGtB;;;AAGG;AACH,IAAA,WAAA,CAAY,MAAwB,EAAA;AAClC,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED;;;;;;AAMG;AACI,IAAA,qCAAqC,CAC1C,iBAAyB,EACzB,kCAA0C,EAC1C,MAAc,EACd,OAAoE,EAAA;AAEpE,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,8CAA8C,CAC9D,iBAAiB,EACjB,kCAAkC,EAClC,MAAM,EACN,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI,GAAA;AACF,gBAAA,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC,GAAA;AACpB,gBAAA,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE,MAAK;AACX,gBAAA,OAAO,IAAI,CAAC,+CAA+C,CACzD,iBAAiB,EACjB,kCAAkC,EAClC,MAAM,EACN,OAAO,CACR,CAAC;aACH;SACF,CAAC;KACH;AAEc,IAAA,+CAA+C,CAC5D,iBAAyB,EACzB,kCAA0C,EAC1C,MAAc,EACd,OAAoE,EAAA;;AAEpE,YAAA,IAAI,MAAM,GAAG,MAAAL,aAAA,CAAM,IAAI,CAAC,sCAAsC,CAC5D,iBAAiB,EACjB,kCAAkC,EAClC,MAAM,EACN,OAAO,CACR,CAAA,CAAC;AACF,YAAA,MAAA,MAAAA,aAAA,CAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;SAC1B,CAAA,CAAA;AAAA,KAAA;AAEc,IAAA,8CAA8C,CAC3D,iBAAyB,EACzB,kCAA0C,EAC1C,MAAc,EACd,OAAoE,EAAA;;;;AAEpE,gBAAA,KAAyB,IAAA,EAAA,GAAAC,mBAAA,CAAA,IAAI,CAAC,+CAA+C,CAC3E,iBAAiB,EACjB,kCAAkC,EAClC,MAAM,EACN,OAAO,CACR,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAAD,aAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,IAAA,GAAA;oBALU,MAAM,IAAI,WAAA,CAAA;oBAMnB,MAAAA,aAAA,CAAA,OAAOE,sBAAA,CAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;AACb,iBAAA;;;;;;;;;SACF,CAAA,CAAA;AAAA,KAAA;AAED;;;;;;;AAOG;IACH,GAAG,CACD,iBAAyB,EACzB,kCAA0C,EAC1C,UAAkB,EAClB,MAAc,EACd,OAAkC,EAAA;AAElC,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,kCAAkC;YAClC,UAAU;YACV,MAAM;YACN,OAAO;SACR,EACDE,kBAAgB,CACjB,CAAC;KACH;AAED;;;;;;AAMG;AACK,IAAA,sCAAsC,CAC5C,iBAAyB,EACzB,kCAA0C,EAC1C,MAAc,EACd,OAAoE,EAAA;AAEpE,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,kCAAkC;YAClC,MAAM;YACN,OAAO;SACR,EACDgC,oDAAkD,CACnD,CAAC;KACH;AACF,CAAA;AACD;AACA,MAAM9B,YAAU,GAAGC,qBAAU,CAAC,gBAAgB,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMH,kBAAgB,GAA6B;AACjD,IAAA,IAAI,EACF,kPAAkP;AACpP,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEiC,MAAc;AAC3B,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAE5B,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAW,cAAyB;AACzB,QAAAC,iBAA4B;AAC5B,QAAAO,kCAA6C;AAC7C,QAAAC,MAAiB;AACjB,QAAAO,UAAqB;AACtB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACzB,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAM8B,oDAAkD,GAA6B;AACnF,IAAA,IAAI,EACF,qOAAqO;AACvO,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEG,UAAkB;AAC/B,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAE9B,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAW,cAAyB;AACzB,QAAAC,iBAA4B;AAC5B,QAAAO,kCAA6C;AAC7C,QAAAC,MAAiB;AAClB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAAClB,MAAiB,CAAC;gBACrCP,YAAU;CACX;;AC3MD;;;;;;AAMG;AAgBH;AACA;MACa,qBAAqB,CAAA;AAGhC;;;AAGG;AACH,IAAA,WAAA,CAAY,MAAwB,EAAA;AAClC,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED;;;AAGG;AACI,IAAA,kBAAkB,CACvB,OAA2D,EAAA;QAE3D,MAAM,IAAI,GAAG,IAAI,CAAC,2BAA2B,CAAC,OAAO,CAAC,CAAC;QACvD,OAAO;YACL,IAAI,GAAA;AACF,gBAAA,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC,GAAA;AACpB,gBAAA,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE,MAAK;AACX,gBAAA,OAAO,IAAI,CAAC,4BAA4B,CAAC,OAAO,CAAC,CAAC;aACnD;SACF,CAAC;KACH;AAEc,IAAA,4BAA4B,CACzC,OAA2D,EAAA;;YAE3D,IAAI,MAAM,GAAG,MAAAL,aAAA,CAAM,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAA,CAAC;AACrD,YAAA,MAAA,MAAAA,aAAA,CAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;SAC1B,CAAA,CAAA;AAAA,KAAA;AAEc,IAAA,2BAA2B,CACxC,OAA2D,EAAA;;;;gBAE3D,KAAyB,IAAA,EAAA,GAAAC,mBAAA,CAAA,IAAI,CAAC,4BAA4B,CAAC,OAAO,CAAC,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAAD,aAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,IAAA,GAAA;oBAAxD,MAAM,IAAI,WAAA,CAAA;oBACnB,MAAAA,aAAA,CAAA,OAAOE,sBAAA,CAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;AACb,iBAAA;;;;;;;;;SACF,CAAA,CAAA;AAAA,KAAA;AAED;;;AAGG;AACK,IAAA,mBAAmB,CACzB,OAA2D,EAAA;AAE3D,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,OAAO,EAAE,EACX,+BAA+B,CAChC,CAAC;KACH;AAED;;;AAGG;AACH,IAAA,GAAG,CACD,OAA4C,EAAA;AAE5C,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,EAAE,OAAO,EAAE,EAAEE,kBAAgB,CAAC,CAAC;KACxE;AACF,CAAA;AACD;AACA,MAAME,YAAU,GAAGC,qBAAU,CAAC,gBAAgB,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAM,+BAA+B,GAA6B;AAChE,IAAA,IAAI,EACF,kFAAkF;AACpF,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEiC,0BAAkC;AAC/C,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAE/B,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE,CAACC,KAAgB,EAAEW,cAAyB,CAAC;AAC5D,IAAA,gBAAgB,EAAE,CAACT,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAMF,kBAAgB,GAA6B;AACjD,IAAA,IAAI,EACF,0FAA0F;AAC5F,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEqC,gBAAwB;AACrC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEhC,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE,CAACC,KAAgB,EAAEW,cAAyB,CAAC;AAC5D,IAAA,gBAAgB,EAAE,CAACT,MAAiB,CAAC;gBACrCP,YAAU;CACX;;AClID;;;;;;AAMG;AAgBH;MACa,uCAAuC,CAAA;AAIlD;;;AAGG;AACH,IAAA,WAAA,CAAY,MAAwB,EAAA;AAClC,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED;;;;;;;;AAQG;IACH,cAAc,CACZ,iBAAyB,EACzB,WAAmB,EACnB,kCAA0C,EAC1C,UAA0C,EAC1C,OAAyE,EAAA;AAEzE,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,WAAW;YACX,kCAAkC;YAClC,UAAU;YACV,OAAO;SACR,EACDU,6BAA2B,CAC5B,CAAC;KACH;AAED;;;;;;AAMG;AACH,IAAA,GAAG,CACD,iBAAyB,EACzB,WAAmB,EACnB,kCAA0C,EAC1C,OAA8D,EAAA;AAE9D,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,WAAW;YACX,kCAAkC;YAClC,OAAO;SACR,EACDZ,kBAAgB,CACjB,CAAC;KACH;AAED;;;;;;AAMG;AACH,IAAA,MAAM,CACJ,iBAAyB,EACzB,WAAmB,EACnB,kCAA0C,EAC1C,OAAiE,EAAA;AAEjE,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,WAAW;YACX,kCAAkC;YAClC,OAAO;SACR,EACDa,qBAAmB,CACpB,CAAC;KACH;AACF,CAAA;AACD;AACA,MAAMX,YAAU,GAAGC,qBAAU,CAAC,gBAAgB,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMS,6BAA2B,GAA6B;AAC5D,IAAA,IAAI,EACF,iOAAiO;AACnO,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEY,8BAAsC;AACnD,SAAA;AACD,QAAA,GAAG,EAAE;YACH,UAAU,EAAEA,8BAAsC;AACnD,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEnB,aAAqB;AAClC,SAAA;AACF,KAAA;IACD,WAAW,EAAEoB,WAAsB;AACnC,IAAA,eAAe,EAAE,CAACnB,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAW,cAAyB;AACzB,QAAAC,iBAA4B;AAC5B,QAAAO,kCAA6C;AAC7C,QAAAG,WAAsB;AACvB,KAAA;IACD,gBAAgB,EAAE,CAACpB,MAAiB,EAAEW,WAAsB,CAAC;AAC7D,IAAA,SAAS,EAAE,MAAM;gBACjBlB,YAAU;CACX,CAAC;AACF,MAAMF,kBAAgB,GAA6B;AACjD,IAAA,IAAI,EACF,iOAAiO;AACnO,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEwB,8BAAsC;AACnD,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEnB,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAW,cAAyB;AACzB,QAAAC,iBAA4B;AAC5B,QAAAO,kCAA6C;AAC7C,QAAAG,WAAsB;AACvB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACpB,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAMW,qBAAmB,GAA6B;AACpD,IAAA,IAAI,EACF,iOAAiO;AACnO,IAAA,UAAU,EAAE,QAAQ;AACpB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,OAAO,EAAE;YACP,UAAU,EAAER,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAW,cAAyB;AACzB,QAAAC,iBAA4B;AAC5B,QAAAO,kCAA6C;AAC7C,QAAAG,WAAsB;AACvB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACpB,MAAiB,CAAC;gBACrCP,YAAU;CACX;;AC1LD;;;;;;AAMG;AAgBH;AACA;MACa,eAAe,CAAA;AAG1B;;;AAGG;AACH,IAAA,WAAA,CAAY,MAAwB,EAAA;AAClC,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED;;;;;;AAMG;AACI,IAAA,qCAAqC,CAC1C,iBAAyB,EACzB,WAAmB,EACnB,kCAA0C,EAC1C,OAAwE,EAAA;AAExE,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,8CAA8C,CAC9D,iBAAiB,EACjB,WAAW,EACX,kCAAkC,EAClC,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI,GAAA;AACF,gBAAA,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC,GAAA;AACpB,gBAAA,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE,MAAK;AACX,gBAAA,OAAO,IAAI,CAAC,+CAA+C,CACzD,iBAAiB,EACjB,WAAW,EACX,kCAAkC,EAClC,OAAO,CACR,CAAC;aACH;SACF,CAAC;KACH;AAEc,IAAA,+CAA+C,CAC5D,iBAAyB,EACzB,WAAmB,EACnB,kCAA0C,EAC1C,OAAwE,EAAA;;AAExE,YAAA,IAAI,MAAM,GAAG,MAAAL,aAAA,CAAM,IAAI,CAAC,sCAAsC,CAC5D,iBAAiB,EACjB,WAAW,EACX,kCAAkC,EAClC,OAAO,CACR,CAAA,CAAC;AACF,YAAA,MAAA,MAAAA,aAAA,CAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;SAC1B,CAAA,CAAA;AAAA,KAAA;AAEc,IAAA,8CAA8C,CAC3D,iBAAyB,EACzB,WAAmB,EACnB,kCAA0C,EAC1C,OAAwE,EAAA;;;;AAExE,gBAAA,KAAyB,IAAA,EAAA,GAAAC,mBAAA,CAAA,IAAI,CAAC,+CAA+C,CAC3E,iBAAiB,EACjB,WAAW,EACX,kCAAkC,EAClC,OAAO,CACR,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAAD,aAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,IAAA,GAAA;oBALU,MAAM,IAAI,WAAA,CAAA;oBAMnB,MAAAA,aAAA,CAAA,OAAOE,sBAAA,CAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;AACb,iBAAA;;;;;;;;;SACF,CAAA,CAAA;AAAA,KAAA;AAED;;;;;;;AAOG;IACH,GAAG,CACD,iBAAyB,EACzB,WAAmB,EACnB,kCAA0C,EAC1C,UAAkB,EAClB,OAAsC,EAAA;AAEtC,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,WAAW;YACX,kCAAkC;YAClC,UAAU;YACV,OAAO;SACR,EACDE,kBAAgB,CACjB,CAAC;KACH;AAED;;;;;;AAMG;AACK,IAAA,sCAAsC,CAC5C,iBAAyB,EACzB,WAAmB,EACnB,kCAA0C,EAC1C,OAAwE,EAAA;AAExE,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,WAAW;YACX,kCAAkC;YAClC,OAAO;SACR,EACDgC,oDAAkD,CACnD,CAAC;KACH;AACF,CAAA;AACD;AACA,MAAM9B,YAAU,GAAGC,qBAAU,CAAC,gBAAgB,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMH,kBAAgB,GAA6B;AACjD,IAAA,IAAI,EACF,sPAAsP;AACxP,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEiC,MAAc;AAC3B,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAE5B,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAW,cAAyB;AACzB,QAAAC,iBAA4B;AAC5B,QAAAO,kCAA6C;AAC7C,QAAAG,WAAsB;AACtB,QAAAK,UAAqB;AACtB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACzB,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAM8B,oDAAkD,GAA6B;AACnF,IAAA,IAAI,EACF,yOAAyO;AAC3O,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEG,UAAkB;AAC/B,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAE9B,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAW,cAAyB;AACzB,QAAAC,iBAA4B;AAC5B,QAAAO,kCAA6C;AAC7C,QAAAG,WAAsB;AACvB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACpB,MAAiB,CAAC;gBACrCP,YAAU;CACX;;AC3MD;;;;;;AAMG;AAgBH;MACa,sCAAsC,CAAA;AAIjD;;;AAGG;AACH,IAAA,WAAA,CAAY,MAAwB,EAAA;AAClC,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED;;;;;;;;AAQG;IACH,cAAc,CACZ,iBAAyB,EACzB,WAAmB,EACnB,kCAA0C,EAC1C,UAA0C,EAC1C,OAAwE,EAAA;AAExE,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,WAAW;YACX,kCAAkC;YAClC,UAAU;YACV,OAAO;SACR,EACD,2BAA2B,CAC5B,CAAC;KACH;AAED;;;;;;AAMG;AACH,IAAA,GAAG,CACD,iBAAyB,EACzB,WAAmB,EACnB,kCAA0C,EAC1C,OAA6D,EAAA;AAE7D,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,WAAW;YACX,kCAAkC;YAClC,OAAO;SACR,EACDF,kBAAgB,CACjB,CAAC;KACH;AAED;;;;;;AAMG;AACH,IAAA,MAAM,CACJ,iBAAyB,EACzB,WAAmB,EACnB,kCAA0C,EAC1C,OAAgE,EAAA;AAEhE,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,WAAW;YACX,kCAAkC;YAClC,OAAO;SACR,EACD,mBAAmB,CACpB,CAAC;KACH;AACF,CAAA;AACD;AACA,MAAME,YAAU,GAAGC,qBAAU,CAAC,gBAAgB,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAM,2BAA2B,GAA6B;AAC5D,IAAA,IAAI,EACF,iOAAiO;AACnO,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEqB,8BAAsC;AACnD,SAAA;AACD,QAAA,GAAG,EAAE;YACH,UAAU,EAAEA,8BAAsC;AACnD,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEnB,aAAqB;AAClC,SAAA;AACF,KAAA;IACD,WAAW,EAAEoB,WAAsB;AACnC,IAAA,eAAe,EAAE,CAACnB,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAW,cAAyB;AACzB,QAAAC,iBAA4B;AAC5B,QAAAO,kCAA6C;AAC7C,QAAAI,WAAsB;AACvB,KAAA;IACD,gBAAgB,EAAE,CAACrB,MAAiB,EAAEW,WAAsB,CAAC;AAC7D,IAAA,SAAS,EAAE,MAAM;gBACjBlB,YAAU;CACX,CAAC;AACF,MAAMF,kBAAgB,GAA6B;AACjD,IAAA,IAAI,EACF,iOAAiO;AACnO,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEwB,8BAAsC;AACnD,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEnB,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAW,cAAyB;AACzB,QAAAC,iBAA4B;AAC5B,QAAAO,kCAA6C;AAC7C,QAAAI,WAAsB;AACvB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACrB,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAM,mBAAmB,GAA6B;AACpD,IAAA,IAAI,EACF,iOAAiO;AACnO,IAAA,UAAU,EAAE,QAAQ;AACpB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,OAAO,EAAE;YACP,UAAU,EAAEG,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAW,cAAyB;AACzB,QAAAC,iBAA4B;AAC5B,QAAAO,kCAA6C;AAC7C,QAAAI,WAAsB;AACvB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACrB,MAAiB,CAAC;gBACrCP,YAAU;CACX;;AC1LD;;;;;;AAMG;AAgBH;AACA;MACa,cAAc,CAAA;AAGzB;;;AAGG;AACH,IAAA,WAAA,CAAY,MAAwB,EAAA;AAClC,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED;;;;;;AAMG;AACI,IAAA,qCAAqC,CAC1C,iBAAyB,EACzB,WAAmB,EACnB,kCAA0C,EAC1C,OAAuE,EAAA;AAEvE,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,8CAA8C,CAC9D,iBAAiB,EACjB,WAAW,EACX,kCAAkC,EAClC,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI,GAAA;AACF,gBAAA,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC,GAAA;AACpB,gBAAA,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE,MAAK;AACX,gBAAA,OAAO,IAAI,CAAC,+CAA+C,CACzD,iBAAiB,EACjB,WAAW,EACX,kCAAkC,EAClC,OAAO,CACR,CAAC;aACH;SACF,CAAC;KACH;AAEc,IAAA,+CAA+C,CAC5D,iBAAyB,EACzB,WAAmB,EACnB,kCAA0C,EAC1C,OAAuE,EAAA;;AAEvE,YAAA,IAAI,MAAM,GAAG,MAAAL,aAAA,CAAM,IAAI,CAAC,sCAAsC,CAC5D,iBAAiB,EACjB,WAAW,EACX,kCAAkC,EAClC,OAAO,CACR,CAAA,CAAC;AACF,YAAA,MAAA,MAAAA,aAAA,CAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;SAC1B,CAAA,CAAA;AAAA,KAAA;AAEc,IAAA,8CAA8C,CAC3D,iBAAyB,EACzB,WAAmB,EACnB,kCAA0C,EAC1C,OAAuE,EAAA;;;;AAEvE,gBAAA,KAAyB,IAAA,EAAA,GAAAC,mBAAA,CAAA,IAAI,CAAC,+CAA+C,CAC3E,iBAAiB,EACjB,WAAW,EACX,kCAAkC,EAClC,OAAO,CACR,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAAD,aAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,IAAA,GAAA;oBALU,MAAM,IAAI,WAAA,CAAA;oBAMnB,MAAAA,aAAA,CAAA,OAAOE,sBAAA,CAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;AACb,iBAAA;;;;;;;;;SACF,CAAA,CAAA;AAAA,KAAA;AAED;;;;;;;AAOG;IACH,GAAG,CACD,iBAAyB,EACzB,WAAmB,EACnB,kCAA0C,EAC1C,UAAkB,EAClB,OAAqC,EAAA;AAErC,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,WAAW;YACX,kCAAkC;YAClC,UAAU;YACV,OAAO;SACR,EACD,gBAAgB,CACjB,CAAC;KACH;AAED;;;;;;AAMG;AACK,IAAA,sCAAsC,CAC5C,iBAAyB,EACzB,WAAmB,EACnB,kCAA0C,EAC1C,OAAuE,EAAA;AAEvE,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,WAAW;YACX,kCAAkC;YAClC,OAAO;SACR,EACD,kDAAkD,CACnD,CAAC;KACH;AACF,CAAA;AACD;AACA,MAAM,UAAU,GAAGK,qBAAU,CAAC,gBAAgB,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAM,gBAAgB,GAA6B;AACjD,IAAA,IAAI,EACF,sPAAsP;AACxP,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAE8B,MAAc;AAC3B,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAE5B,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAW,cAAyB;AACzB,QAAAC,iBAA4B;AAC5B,QAAAO,kCAA6C;AAC7C,QAAAI,WAAsB;AACtB,QAAAI,UAAqB;AACtB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACzB,MAAiB,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,kDAAkD,GAA6B;AACnF,IAAA,IAAI,EACF,yOAAyO;AAC3O,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAE0B,UAAkB;AAC/B,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAE9B,aAAqB;AAClC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAW,cAAyB;AACzB,QAAAC,iBAA4B;AAC5B,QAAAO,kCAA6C;AAC7C,QAAAI,WAAsB;AACvB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACrB,MAAiB,CAAC;IACrC,UAAU;CACX;;AC3MD;;;;;;AAMG;AAwCU,MAAA,gBAAiB,SAAQN,qBAAU,CAAC,aAAa,CAAA;AAK5D;;;;;AAKG;AACH,IAAA,WAAA,CACE,WAAqC,EACrC,cAAsB,EACtB,OAAwC,EAAA;;QAExC,IAAI,WAAW,KAAK,SAAS,EAAE;AAC7B,YAAA,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;AACjD,SAAA;QACD,IAAI,cAAc,KAAK,SAAS,EAAE;AAChC,YAAA,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;AACpD,SAAA;;QAGD,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO,GAAG,EAAE,CAAC;AACd,SAAA;AACD,QAAA,MAAM,QAAQ,GAAmC;AAC/C,YAAA,kBAAkB,EAAE,iCAAiC;AACrD,YAAA,UAAU,EAAE,WAAW;SACxB,CAAC;QAEF,MAAM,cAAc,GAAG,CAAA,6BAAA,CAA+B,CAAC;QACvD,MAAM,eAAe,GACnB,OAAO,CAAC,gBAAgB,IAAI,OAAO,CAAC,gBAAgB,CAAC,eAAe;cAChE,GAAG,OAAO,CAAC,gBAAgB,CAAC,eAAe,CAAI,CAAA,EAAA,cAAc,CAAE,CAAA;AACjE,cAAE,CAAA,EAAG,cAAc,CAAA,CAAE,CAAC;AAE1B,QAAA,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE;AAC7B,YAAA,OAAO,CAAC,gBAAgB,GAAG,CAAC,uCAAuC,CAAC,CAAC;AACtE,SAAA;AACD,QAAA,MAAM,mBAAmB,GACpB,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,QAAQ,GACR,OAAO,CAAA,EAAA,EACV,gBAAgB,EAAE;gBAChB,eAAe;AAChB,aAAA,EACD,OAAO,EACL,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,OAAO,CAAC,QAAQ,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,OAAO,CAAC,OAAO,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,8BAA8B,GACxE,CAAC;QACF,KAAK,CAAC,mBAAmB,CAAC,CAAC;QAE3B,IAAI,oCAAoC,GAAY,KAAK,CAAC;AAC1D,QAAA,IAAI,CAAA,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,QAAQ,KAAI,OAAO,CAAC,QAAQ,CAAC,kBAAkB,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE;YACzE,MAAM,gBAAgB,GAAsC,OAAO,CAAC,QAAQ,CAAC,kBAAkB,EAAE,CAAC;AAClG,YAAA,oCAAoC,GAAG,gBAAgB,CAAC,IAAI,CAC1D,CAAC,cAAc,KACb,cAAc,CAAC,IAAI;gBACnBmC,2BAAgB,CAAC,mCAAmC,CACvD,CAAC;AACH,SAAA;AACD,QAAA,IACE,CAAC,OAAO;YACR,CAAC,OAAO,CAAC,QAAQ;YACjB,OAAO,CAAC,QAAQ,CAAC,kBAAkB,EAAE,CAAC,MAAM,IAAI,CAAC;AACjD,YAAA,CAAC,oCAAoC,EACrC;AACA,YAAA,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;gBACzB,IAAI,EAAEA,2BAAgB,CAAC,mCAAmC;AAC3D,aAAA,CAAC,CAAC;YACH,IAAI,CAAC,QAAQ,CAAC,SAAS,CACrBA,2BAAgB,CAAC,+BAA+B,CAAC;AAC/C,gBAAA,UAAU,EAAE,WAAW;AACvB,gBAAA,MAAM,EAAE,CAAA,EAAG,mBAAmB,CAAC,gBAAgB,CAAE,CAAA;AACjD,gBAAA,kBAAkB,EAAE;oBAClB,2BAA2B,EACzBnC,qBAAU,CAAC,gCAAgC;AAC9C,iBAAA;AACF,aAAA,CAAC,CACH,CAAC;AACH,SAAA;;AAED,QAAA,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;;QAGrC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,IAAI,8BAA8B,CAAC;QAC7D,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,IAAI,YAAY,CAAC;QACrD,IAAI,CAAC,aAAa,GAAG,IAAI,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACjD,IAAI,CAAC,qBAAqB,GAAG,IAAI,yBAAyB,CAAC,IAAI,CAAC,CAAC;QACjE,IAAI,CAAC,qBAAqB,GAAG,IAAI,yBAAyB,CAAC,IAAI,CAAC,CAAC;QACjE,IAAI,CAAC,6BAA6B,GAAG,IAAI,iCAAiC,CACxE,IAAI,CACL,CAAC;QACF,IAAI,CAAC,+BAA+B,GAAG,IAAI,mCAAmC,CAC5E,IAAI,CACL,CAAC;QACF,IAAI,CAAC,UAAU,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,CAAC;QAC3C,IAAI,CAAC,OAAO,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC;QACrC,IAAI,CAAC,iBAAiB,GAAG,IAAI,qBAAqB,CAAC,IAAI,CAAC,CAAC;QACzD,IAAI,CAAC,mCAAmC,GAAG,IAAI,uCAAuC,CACpF,IAAI,CACL,CAAC;QACF,IAAI,CAAC,WAAW,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,kCAAkC,GAAG,IAAI,sCAAsC,CAClF,IAAI,CACL,CAAC;QACF,IAAI,CAAC,UAAU,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,CAAC;AAC3C,QAAA,IAAI,CAAC,yBAAyB,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;KACpD;;AAGO,IAAA,yBAAyB,CAAC,UAAmB,EAAA;QACnD,IAAI,CAAC,UAAU,EAAE;YACf,OAAO;AACR,SAAA;AACD,QAAA,MAAM,gBAAgB,GAAG;AACvB,YAAA,IAAI,EAAE,wBAAwB;YACxB,WAAW,CACf,OAAwB,EACxB,IAAiB,EAAA;;oBAEjB,MAAM,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACrC,oBAAA,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;AACpB,wBAAA,MAAM,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,KAAI;4BACjD,IAAI,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,EAAE;gCACpC,OAAO,cAAc,GAAG,UAAU,CAAC;AACpC,6BAAA;AAAM,iCAAA;AACL,gCAAA,OAAO,IAAI,CAAC;AACb,6BAAA;AACH,yBAAC,CAAC,CAAC;AACH,wBAAA,OAAO,CAAC,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACpD,qBAAA;AACD,oBAAA,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC;iBACtB,CAAA,CAAA;AAAA,aAAA;SACF,CAAC;AACF,QAAA,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;KAC3C;AAcF;;;;"}