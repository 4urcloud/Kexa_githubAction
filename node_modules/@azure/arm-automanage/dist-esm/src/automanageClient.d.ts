import * as coreClient from "@azure/core-client";
import * as coreAuth from "@azure/core-auth";
import { BestPractices, BestPracticesVersions, ConfigurationProfiles, ConfigurationProfilesVersions, ConfigurationProfileAssignments, Operations, Reports, ServicePrincipals, ConfigurationProfileHcrpAssignments, HcrpReports, ConfigurationProfileHCIAssignments, HCIReports } from "./operationsInterfaces";
import { AutomanageClientOptionalParams } from "./models";
export declare class AutomanageClient extends coreClient.ServiceClient {
    $host: string;
    apiVersion: string;
    subscriptionId: string;
    /**
     * Initializes a new instance of the AutomanageClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId The ID of the target subscription.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: AutomanageClientOptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    bestPractices: BestPractices;
    bestPracticesVersions: BestPracticesVersions;
    configurationProfiles: ConfigurationProfiles;
    configurationProfilesVersions: ConfigurationProfilesVersions;
    configurationProfileAssignments: ConfigurationProfileAssignments;
    operations: Operations;
    reports: Reports;
    servicePrincipals: ServicePrincipals;
    configurationProfileHcrpAssignments: ConfigurationProfileHcrpAssignments;
    hcrpReports: HcrpReports;
    configurationProfileHCIAssignments: ConfigurationProfileHCIAssignments;
    hCIReports: HCIReports;
}
//# sourceMappingURL=automanageClient.d.ts.map