/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { ConfigurationProfile as ConfigurationProfileMapper, ConfigurationProfileUpdate as ConfigurationProfileUpdateMapper, ConfigurationProfileAssignment as ConfigurationProfileAssignmentMapper } from "../models/mappers";
export const accept = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String"
        }
    }
};
export const $host = {
    parameterPath: "$host",
    mapper: {
        serializedName: "$host",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const bestPracticeName = {
    parameterPath: "bestPracticeName",
    mapper: {
        serializedName: "bestPracticeName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const apiVersion = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2022-05-04",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
export const versionName = {
    parameterPath: "versionName",
    mapper: {
        serializedName: "versionName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const contentType = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String"
        }
    }
};
export const parameters = {
    parameterPath: "parameters",
    mapper: ConfigurationProfileMapper
};
export const configurationProfileName = {
    parameterPath: "configurationProfileName",
    mapper: {
        serializedName: "configurationProfileName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const subscriptionId = {
    parameterPath: "subscriptionId",
    mapper: {
        constraints: {
            MinLength: 1
        },
        serializedName: "subscriptionId",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const resourceGroupName = {
    parameterPath: "resourceGroupName",
    mapper: {
        constraints: {
            MaxLength: 90,
            MinLength: 1
        },
        serializedName: "resourceGroupName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const parameters1 = {
    parameterPath: "parameters",
    mapper: ConfigurationProfileUpdateMapper
};
export const parameters2 = {
    parameterPath: "parameters",
    mapper: ConfigurationProfileAssignmentMapper
};
export const configurationProfileAssignmentName = {
    parameterPath: "configurationProfileAssignmentName",
    mapper: {
        serializedName: "configurationProfileAssignmentName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const vmName = {
    parameterPath: "vmName",
    mapper: {
        serializedName: "vmName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const machineName = {
    parameterPath: "machineName",
    mapper: {
        serializedName: "machineName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const clusterName = {
    parameterPath: "clusterName",
    mapper: {
        serializedName: "clusterName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const reportName = {
    parameterPath: "reportName",
    mapper: {
        serializedName: "reportName",
        required: true,
        type: {
            name: "String"
        }
    }
};
//# sourceMappingURL=parameters.js.map