import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { ServicePrincipals } from "../operationsInterfaces";
import { AutomanageClient } from "../automanageClient";
import { ServicePrincipal, ServicePrincipalsListBySubscriptionOptionalParams, ServicePrincipalsGetOptionalParams, ServicePrincipalsGetResponse } from "../models";
/** Class containing ServicePrincipals operations. */
export declare class ServicePrincipalsImpl implements ServicePrincipals {
    private readonly client;
    /**
     * Initialize a new instance of the class ServicePrincipals class.
     * @param client Reference to the service client
     */
    constructor(client: AutomanageClient);
    /**
     * Get the Automanage AAD first party Application Service Principal details for the subscription id.
     * @param options The options parameters.
     */
    listBySubscription(options?: ServicePrincipalsListBySubscriptionOptionalParams): PagedAsyncIterableIterator<ServicePrincipal>;
    private listBySubscriptionPagingPage;
    private listBySubscriptionPagingAll;
    /**
     * Get the Automanage AAD first party Application Service Principal details for the subscription id.
     * @param options The options parameters.
     */
    private _listBySubscription;
    /**
     * Get the Automanage AAD first party Application Service Principal details for the subscription id.
     * @param options The options parameters.
     */
    get(options?: ServicePrincipalsGetOptionalParams): Promise<ServicePrincipalsGetResponse>;
}
//# sourceMappingURL=servicePrincipals.d.ts.map