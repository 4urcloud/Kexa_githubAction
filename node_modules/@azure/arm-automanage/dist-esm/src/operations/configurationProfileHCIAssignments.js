/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
/** Class containing ConfigurationProfileHCIAssignments operations. */
export class ConfigurationProfileHCIAssignmentsImpl {
    /**
     * Initialize a new instance of the class ConfigurationProfileHCIAssignments class.
     * @param client Reference to the service client
     */
    constructor(client) {
        this.client = client;
    }
    /**
     * Creates an association between a AzureStackHCI cluster and Automanage configuration profile
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Arc machine.
     * @param configurationProfileAssignmentName Name of the configuration profile assignment. Only default
     *                                           is supported.
     * @param parameters Parameters supplied to the create or update configuration profile assignment.
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName, clusterName, configurationProfileAssignmentName, parameters, options) {
        return this.client.sendOperationRequest({
            resourceGroupName,
            clusterName,
            configurationProfileAssignmentName,
            parameters,
            options
        }, createOrUpdateOperationSpec);
    }
    /**
     * Get information about a configuration profile assignment
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Arc machine.
     * @param configurationProfileAssignmentName The configuration profile assignment name.
     * @param options The options parameters.
     */
    get(resourceGroupName, clusterName, configurationProfileAssignmentName, options) {
        return this.client.sendOperationRequest({
            resourceGroupName,
            clusterName,
            configurationProfileAssignmentName,
            options
        }, getOperationSpec);
    }
    /**
     * Delete a configuration profile assignment
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Arc machine.
     * @param configurationProfileAssignmentName Name of the configuration profile assignment
     * @param options The options parameters.
     */
    delete(resourceGroupName, clusterName, configurationProfileAssignmentName, options) {
        return this.client.sendOperationRequest({
            resourceGroupName,
            clusterName,
            configurationProfileAssignmentName,
            options
        }, deleteOperationSpec);
    }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);
const createOrUpdateOperationSpec = {
    path: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHci/clusters/{clusterName}/providers/Microsoft.Automanage/configurationProfileAssignments/{configurationProfileAssignmentName}",
    httpMethod: "PUT",
    responses: {
        200: {
            bodyMapper: Mappers.ConfigurationProfileAssignment
        },
        201: {
            bodyMapper: Mappers.ConfigurationProfileAssignment
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    requestBody: Parameters.parameters2,
    queryParameters: [Parameters.apiVersion],
    urlParameters: [
        Parameters.$host,
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.configurationProfileAssignmentName,
        Parameters.clusterName
    ],
    headerParameters: [Parameters.accept, Parameters.contentType],
    mediaType: "json",
    serializer
};
const getOperationSpec = {
    path: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHci/clusters/{clusterName}/providers/Microsoft.Automanage/configurationProfileAssignments/{configurationProfileAssignmentName}",
    httpMethod: "GET",
    responses: {
        200: {
            bodyMapper: Mappers.ConfigurationProfileAssignment
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    queryParameters: [Parameters.apiVersion],
    urlParameters: [
        Parameters.$host,
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.configurationProfileAssignmentName,
        Parameters.clusterName
    ],
    headerParameters: [Parameters.accept],
    serializer
};
const deleteOperationSpec = {
    path: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHci/clusters/{clusterName}/providers/Microsoft.Automanage/configurationProfileAssignments/{configurationProfileAssignmentName}",
    httpMethod: "DELETE",
    responses: {
        200: {},
        204: {},
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    queryParameters: [Parameters.apiVersion],
    urlParameters: [
        Parameters.$host,
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.configurationProfileAssignmentName,
        Parameters.clusterName
    ],
    headerParameters: [Parameters.accept],
    serializer
};
//# sourceMappingURL=configurationProfileHCIAssignments.js.map