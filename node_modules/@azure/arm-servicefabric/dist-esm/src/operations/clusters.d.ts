import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Clusters } from "../operationsInterfaces";
import { ServiceFabricManagementClient } from "../serviceFabricManagementClient";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import { Cluster, ClustersListByResourceGroupOptionalParams, ClustersListOptionalParams, ClustersGetOptionalParams, ClustersGetResponse, ClustersCreateOrUpdateOptionalParams, ClustersCreateOrUpdateResponse, ClusterUpdateParameters, ClustersUpdateOptionalParams, ClustersUpdateResponse, ClustersDeleteOptionalParams, ClustersListUpgradableVersionsOptionalParams, ClustersListUpgradableVersionsResponse } from "../models";
/** Class containing Clusters operations. */
export declare class ClustersImpl implements Clusters {
    private readonly client;
    /**
     * Initialize a new instance of the class Clusters class.
     * @param client Reference to the service client
     */
    constructor(client: ServiceFabricManagementClient);
    /**
     * Gets all Service Fabric cluster resources created or in the process of being created in the resource
     * group.
     * @param resourceGroupName The name of the resource group.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: ClustersListByResourceGroupOptionalParams): PagedAsyncIterableIterator<Cluster>;
    private listByResourceGroupPagingPage;
    private listByResourceGroupPagingAll;
    /**
     * Gets all Service Fabric cluster resources created or in the process of being created in the
     * subscription.
     * @param options The options parameters.
     */
    list(options?: ClustersListOptionalParams): PagedAsyncIterableIterator<Cluster>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Get a Service Fabric cluster resource created or in the process of being created in the specified
     * resource group.
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster resource.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, clusterName: string, options?: ClustersGetOptionalParams): Promise<ClustersGetResponse>;
    /**
     * Create or update a Service Fabric cluster resource with the specified name.
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster resource.
     * @param parameters The cluster resource.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, clusterName: string, parameters: Cluster, options?: ClustersCreateOrUpdateOptionalParams): Promise<SimplePollerLike<OperationState<ClustersCreateOrUpdateResponse>, ClustersCreateOrUpdateResponse>>;
    /**
     * Create or update a Service Fabric cluster resource with the specified name.
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster resource.
     * @param parameters The cluster resource.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, clusterName: string, parameters: Cluster, options?: ClustersCreateOrUpdateOptionalParams): Promise<ClustersCreateOrUpdateResponse>;
    /**
     * Update the configuration of a Service Fabric cluster resource with the specified name.
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster resource.
     * @param parameters The parameters which contains the property value and property name which used to
     *                   update the cluster configuration.
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, clusterName: string, parameters: ClusterUpdateParameters, options?: ClustersUpdateOptionalParams): Promise<SimplePollerLike<OperationState<ClustersUpdateResponse>, ClustersUpdateResponse>>;
    /**
     * Update the configuration of a Service Fabric cluster resource with the specified name.
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster resource.
     * @param parameters The parameters which contains the property value and property name which used to
     *                   update the cluster configuration.
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, clusterName: string, parameters: ClusterUpdateParameters, options?: ClustersUpdateOptionalParams): Promise<ClustersUpdateResponse>;
    /**
     * Delete a Service Fabric cluster resource with the specified name.
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster resource.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, clusterName: string, options?: ClustersDeleteOptionalParams): Promise<void>;
    /**
     * Gets all Service Fabric cluster resources created or in the process of being created in the resource
     * group.
     * @param resourceGroupName The name of the resource group.
     * @param options The options parameters.
     */
    private _listByResourceGroup;
    /**
     * Gets all Service Fabric cluster resources created or in the process of being created in the
     * subscription.
     * @param options The options parameters.
     */
    private _list;
    /**
     * If a target is not provided, it will get the minimum and maximum versions available from the current
     * cluster version. If a target is given, it will provide the required path to get from the current
     * cluster version to the target version.
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster resource.
     * @param options The options parameters.
     */
    listUpgradableVersions(resourceGroupName: string, clusterName: string, options?: ClustersListUpgradableVersionsOptionalParams): Promise<ClustersListUpgradableVersionsResponse>;
    /**
     * ListByResourceGroupNext
     * @param resourceGroupName The name of the resource group.
     * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.
     * @param options The options parameters.
     */
    private _listByResourceGroupNext;
    /**
     * ListNext
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=clusters.d.ts.map