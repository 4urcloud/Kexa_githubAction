/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
/** Class containing ClusterVersions operations. */
export class ClusterVersionsImpl {
    /**
     * Initialize a new instance of the class ClusterVersions class.
     * @param client Reference to the service client
     */
    constructor(client) {
        this.client = client;
    }
    /**
     * Gets information about an available Service Fabric cluster code version.
     * @param location The location for the cluster code versions. This is different from cluster location.
     * @param clusterVersion The cluster code version.
     * @param options The options parameters.
     */
    get(location, clusterVersion, options) {
        return this.client.sendOperationRequest({ location, clusterVersion, options }, getOperationSpec);
    }
    /**
     * Gets information about an available Service Fabric cluster code version by environment.
     * @param location The location for the cluster code versions. This is different from cluster location.
     * @param environment The operating system of the cluster. The default means all.
     * @param clusterVersion The cluster code version.
     * @param options The options parameters.
     */
    getByEnvironment(location, environment, clusterVersion, options) {
        return this.client.sendOperationRequest({ location, environment, clusterVersion, options }, getByEnvironmentOperationSpec);
    }
    /**
     * Gets all available code versions for Service Fabric cluster resources by location.
     * @param location The location for the cluster code versions. This is different from cluster location.
     * @param options The options parameters.
     */
    list(location, options) {
        return this.client.sendOperationRequest({ location, options }, listOperationSpec);
    }
    /**
     * Gets all available code versions for Service Fabric cluster resources by environment.
     * @param location The location for the cluster code versions. This is different from cluster location.
     * @param environment The operating system of the cluster. The default means all.
     * @param options The options parameters.
     */
    listByEnvironment(location, environment, options) {
        return this.client.sendOperationRequest({ location, environment, options }, listByEnvironmentOperationSpec);
    }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);
const getOperationSpec = {
    path: "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/clusterVersions/{clusterVersion}",
    httpMethod: "GET",
    responses: {
        200: {
            bodyMapper: Mappers.ClusterCodeVersionsListResult
        },
        default: {
            bodyMapper: Mappers.ErrorModel
        }
    },
    queryParameters: [Parameters.apiVersion],
    urlParameters: [
        Parameters.$host,
        Parameters.subscriptionId,
        Parameters.location,
        Parameters.clusterVersion
    ],
    headerParameters: [Parameters.accept],
    serializer
};
const getByEnvironmentOperationSpec = {
    path: "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/environments/{environment}/clusterVersions/{clusterVersion}",
    httpMethod: "GET",
    responses: {
        200: {
            bodyMapper: Mappers.ClusterCodeVersionsListResult
        },
        default: {
            bodyMapper: Mappers.ErrorModel
        }
    },
    queryParameters: [Parameters.apiVersion],
    urlParameters: [
        Parameters.$host,
        Parameters.subscriptionId,
        Parameters.location,
        Parameters.clusterVersion,
        Parameters.environment
    ],
    headerParameters: [Parameters.accept],
    serializer
};
const listOperationSpec = {
    path: "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/clusterVersions",
    httpMethod: "GET",
    responses: {
        200: {
            bodyMapper: Mappers.ClusterCodeVersionsListResult
        },
        default: {
            bodyMapper: Mappers.ErrorModel
        }
    },
    queryParameters: [Parameters.apiVersion],
    urlParameters: [
        Parameters.$host,
        Parameters.subscriptionId,
        Parameters.location
    ],
    headerParameters: [Parameters.accept],
    serializer
};
const listByEnvironmentOperationSpec = {
    path: "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/environments/{environment}/clusterVersions",
    httpMethod: "GET",
    responses: {
        200: {
            bodyMapper: Mappers.ClusterCodeVersionsListResult
        },
        default: {
            bodyMapper: Mappers.ErrorModel
        }
    },
    queryParameters: [Parameters.apiVersion],
    urlParameters: [
        Parameters.$host,
        Parameters.subscriptionId,
        Parameters.location,
        Parameters.environment
    ],
    headerParameters: [Parameters.accept],
    serializer
};
//# sourceMappingURL=clusterVersions.js.map