/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { Cluster as ClusterMapper, ClusterUpdateParameters as ClusterUpdateParametersMapper, UpgradableVersionsDescription as UpgradableVersionsDescriptionMapper, ApplicationTypeResource as ApplicationTypeResourceMapper, ApplicationTypeVersionResource as ApplicationTypeVersionResourceMapper, ApplicationResource as ApplicationResourceMapper, ApplicationResourceUpdate as ApplicationResourceUpdateMapper, ServiceResource as ServiceResourceMapper, ServiceResourceUpdate as ServiceResourceUpdateMapper } from "../models/mappers";
export const accept = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String"
        }
    }
};
export const $host = {
    parameterPath: "$host",
    mapper: {
        serializedName: "$host",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const resourceGroupName = {
    parameterPath: "resourceGroupName",
    mapper: {
        serializedName: "resourceGroupName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const clusterName = {
    parameterPath: "clusterName",
    mapper: {
        serializedName: "clusterName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const apiVersion = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2021-06-01",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
export const subscriptionId = {
    parameterPath: "subscriptionId",
    mapper: {
        serializedName: "subscriptionId",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const contentType = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String"
        }
    }
};
export const parameters = {
    parameterPath: "parameters",
    mapper: ClusterMapper
};
export const parameters1 = {
    parameterPath: "parameters",
    mapper: ClusterUpdateParametersMapper
};
export const versionsDescription = {
    parameterPath: ["options", "versionsDescription"],
    mapper: UpgradableVersionsDescriptionMapper
};
export const nextLink = {
    parameterPath: "nextLink",
    mapper: {
        serializedName: "nextLink",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const location = {
    parameterPath: "location",
    mapper: {
        serializedName: "location",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const clusterVersion = {
    parameterPath: "clusterVersion",
    mapper: {
        serializedName: "clusterVersion",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const environment = {
    parameterPath: "environment",
    mapper: {
        serializedName: "environment",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const applicationTypeName = {
    parameterPath: "applicationTypeName",
    mapper: {
        serializedName: "applicationTypeName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const parameters2 = {
    parameterPath: "parameters",
    mapper: ApplicationTypeResourceMapper
};
export const version = {
    parameterPath: "version",
    mapper: {
        serializedName: "version",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const parameters3 = {
    parameterPath: "parameters",
    mapper: ApplicationTypeVersionResourceMapper
};
export const applicationName = {
    parameterPath: "applicationName",
    mapper: {
        serializedName: "applicationName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const parameters4 = {
    parameterPath: "parameters",
    mapper: ApplicationResourceMapper
};
export const parameters5 = {
    parameterPath: "parameters",
    mapper: ApplicationResourceUpdateMapper
};
export const serviceName = {
    parameterPath: "serviceName",
    mapper: {
        serializedName: "serviceName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const parameters6 = {
    parameterPath: "parameters",
    mapper: ServiceResourceMapper
};
export const parameters7 = {
    parameterPath: "parameters",
    mapper: ServiceResourceUpdateMapper
};
//# sourceMappingURL=parameters.js.map