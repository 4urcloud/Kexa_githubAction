/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { ContainerAppsAPIClient } from "@azure/arm-appcontainers";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Create or update the SourceControl for a Container App.
 *
 * @summary Create or update the SourceControl for a Container App.
 * x-ms-original-file: specification/app/resource-manager/Microsoft.App/stable/2023-05-01/examples/SourceControls_CreateOrUpdate.json
 */
function createOrUpdateContainerAppSourceControl() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["APPCONTAINERS_SUBSCRIPTION_ID"] ||
            "651f8027-33e8-4ec4-97b4-f6e9f3dc8744";
        const resourceGroupName = process.env["APPCONTAINERS_RESOURCE_GROUP"] || "workerapps-rg-xj";
        const containerAppName = "testcanadacentral";
        const sourceControlName = "current";
        const sourceControlEnvelope = {
            branch: "master",
            githubActionConfiguration: {
                azureCredentials: {
                    clientId: "<clientid>",
                    clientSecret: "<clientsecret>",
                    kind: "feaderated",
                    tenantId: "<tenantid>"
                },
                contextPath: "./",
                githubPersonalAccessToken: "test",
                image: "image/tag",
                registryInfo: {
                    registryPassword: "<registrypassword>",
                    registryUrl: "test-registry.azurecr.io",
                    registryUserName: "test-registry"
                }
            },
            repoUrl: "https://github.com/xwang971/ghatest"
        };
        const credential = new DefaultAzureCredential();
        const client = new ContainerAppsAPIClient(credential, subscriptionId);
        const result = yield client.containerAppsSourceControls.beginCreateOrUpdateAndWait(resourceGroupName, containerAppName, sourceControlName, sourceControlEnvelope);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        createOrUpdateContainerAppSourceControl();
    });
}
main().catch(console.error);
//# sourceMappingURL=containerAppsSourceControlsCreateOrUpdateSample.js.map