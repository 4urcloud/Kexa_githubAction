/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { ContainerAppsAPIClient } from "@azure/arm-appcontainers";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Creates or updates an connectedEnvironment.
 *
 * @summary Creates or updates an connectedEnvironment.
 * x-ms-original-file: specification/app/resource-manager/Microsoft.App/stable/2023-05-01/examples/ConnectedEnvironments_CreateOrUpdate.json
 */
function createKubeEnvironments() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["APPCONTAINERS_SUBSCRIPTION_ID"] ||
            "34adfa4f-cedf-4dc0-ba29-b6d1a69ab345";
        const resourceGroupName = process.env["APPCONTAINERS_RESOURCE_GROUP"] || "examplerg";
        const connectedEnvironmentName = "testenv";
        const environmentEnvelope = {
            customDomainConfiguration: {
                certificatePassword: "private key password",
                certificateValue: Buffer.from("Y2VydA=="),
                dnsSuffix: "www.my-name.com"
            },
            daprAIConnectionString: "InstrumentationKey=00000000-0000-0000-0000-000000000000;IngestionEndpoint=https://northcentralus-0.in.applicationinsights.azure.com/",
            location: "East US",
            staticIp: "1.2.3.4"
        };
        const credential = new DefaultAzureCredential();
        const client = new ContainerAppsAPIClient(credential, subscriptionId);
        const result = yield client.connectedEnvironments.beginCreateOrUpdateAndWait(resourceGroupName, connectedEnvironmentName, environmentEnvelope);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        createKubeEnvironments();
    });
}
main().catch(console.error);
//# sourceMappingURL=connectedEnvironmentsCreateOrUpdateSample.js.map