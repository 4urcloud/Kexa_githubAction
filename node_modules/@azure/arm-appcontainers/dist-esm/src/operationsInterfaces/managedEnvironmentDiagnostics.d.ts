import { ManagedEnvironmentDiagnosticsListDetectorsOptionalParams, ManagedEnvironmentDiagnosticsListDetectorsResponse, ManagedEnvironmentDiagnosticsGetDetectorOptionalParams, ManagedEnvironmentDiagnosticsGetDetectorResponse } from "../models";
/** Interface representing a ManagedEnvironmentDiagnostics. */
export interface ManagedEnvironmentDiagnostics {
    /**
     * Get the list of diagnostics for a Managed Environment used to host container apps.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param environmentName Name of the Environment.
     * @param options The options parameters.
     */
    listDetectors(resourceGroupName: string, environmentName: string, options?: ManagedEnvironmentDiagnosticsListDetectorsOptionalParams): Promise<ManagedEnvironmentDiagnosticsListDetectorsResponse>;
    /**
     * Get the diagnostics data for a Managed Environment used to host container apps.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param environmentName Name of the Environment.
     * @param detectorName Name of the Managed Environment detector.
     * @param options The options parameters.
     */
    getDetector(resourceGroupName: string, environmentName: string, detectorName: string, options?: ManagedEnvironmentDiagnosticsGetDetectorOptionalParams): Promise<ManagedEnvironmentDiagnosticsGetDetectorResponse>;
}
//# sourceMappingURL=managedEnvironmentDiagnostics.d.ts.map