import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { JobsExecutions } from "../operationsInterfaces";
import { ContainerAppsAPIClient } from "../containerAppsAPIClient";
import { JobExecution, JobsExecutionsListOptionalParams } from "../models";
/** Class containing JobsExecutions operations. */
export declare class JobsExecutionsImpl implements JobsExecutions {
    private readonly client;
    /**
     * Initialize a new instance of the class JobsExecutions class.
     * @param client Reference to the service client
     */
    constructor(client: ContainerAppsAPIClient);
    /**
     * Get a Container Apps Job's executions
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param jobName Job Name
     * @param options The options parameters.
     */
    list(resourceGroupName: string, jobName: string, options?: JobsExecutionsListOptionalParams): PagedAsyncIterableIterator<JobExecution>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Get a Container Apps Job's executions
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param jobName Job Name
     * @param options The options parameters.
     */
    private _list;
    /**
     * ListNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param jobName Job Name
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=jobsExecutions.d.ts.map