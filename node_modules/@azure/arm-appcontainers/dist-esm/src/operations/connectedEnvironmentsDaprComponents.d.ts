import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { ConnectedEnvironmentsDaprComponents } from "../operationsInterfaces";
import { ContainerAppsAPIClient } from "../containerAppsAPIClient";
import { DaprComponent, ConnectedEnvironmentsDaprComponentsListOptionalParams, ConnectedEnvironmentsDaprComponentsGetOptionalParams, ConnectedEnvironmentsDaprComponentsGetResponse, ConnectedEnvironmentsDaprComponentsCreateOrUpdateOptionalParams, ConnectedEnvironmentsDaprComponentsCreateOrUpdateResponse, ConnectedEnvironmentsDaprComponentsDeleteOptionalParams, ConnectedEnvironmentsDaprComponentsListSecretsOptionalParams, ConnectedEnvironmentsDaprComponentsListSecretsResponse } from "../models";
/** Class containing ConnectedEnvironmentsDaprComponents operations. */
export declare class ConnectedEnvironmentsDaprComponentsImpl implements ConnectedEnvironmentsDaprComponents {
    private readonly client;
    /**
     * Initialize a new instance of the class ConnectedEnvironmentsDaprComponents class.
     * @param client Reference to the service client
     */
    constructor(client: ContainerAppsAPIClient);
    /**
     * Get the Dapr Components for a connected environment.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectedEnvironmentName Name of the connected environment.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, connectedEnvironmentName: string, options?: ConnectedEnvironmentsDaprComponentsListOptionalParams): PagedAsyncIterableIterator<DaprComponent>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Get the Dapr Components for a connected environment.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectedEnvironmentName Name of the connected environment.
     * @param options The options parameters.
     */
    private _list;
    /**
     * Get a dapr component.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectedEnvironmentName Name of the connected environment.
     * @param componentName Name of the Dapr Component.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, connectedEnvironmentName: string, componentName: string, options?: ConnectedEnvironmentsDaprComponentsGetOptionalParams): Promise<ConnectedEnvironmentsDaprComponentsGetResponse>;
    /**
     * Creates or updates a Dapr Component in a connected environment.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectedEnvironmentName Name of the connected environment.
     * @param componentName Name of the Dapr Component.
     * @param daprComponentEnvelope Configuration details of the Dapr Component.
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, connectedEnvironmentName: string, componentName: string, daprComponentEnvelope: DaprComponent, options?: ConnectedEnvironmentsDaprComponentsCreateOrUpdateOptionalParams): Promise<ConnectedEnvironmentsDaprComponentsCreateOrUpdateResponse>;
    /**
     * Delete a Dapr Component from a connected environment.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectedEnvironmentName Name of the connected environment.
     * @param componentName Name of the Dapr Component.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, connectedEnvironmentName: string, componentName: string, options?: ConnectedEnvironmentsDaprComponentsDeleteOptionalParams): Promise<void>;
    /**
     * List secrets for a dapr component
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectedEnvironmentName Name of the connected environment.
     * @param componentName Name of the Dapr Component.
     * @param options The options parameters.
     */
    listSecrets(resourceGroupName: string, connectedEnvironmentName: string, componentName: string, options?: ConnectedEnvironmentsDaprComponentsListSecretsOptionalParams): Promise<ConnectedEnvironmentsDaprComponentsListSecretsResponse>;
    /**
     * ListNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectedEnvironmentName Name of the connected environment.
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=connectedEnvironmentsDaprComponents.d.ts.map