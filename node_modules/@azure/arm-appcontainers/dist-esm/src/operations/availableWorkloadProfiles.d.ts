import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { AvailableWorkloadProfiles } from "../operationsInterfaces";
import { ContainerAppsAPIClient } from "../containerAppsAPIClient";
import { AvailableWorkloadProfile, AvailableWorkloadProfilesGetOptionalParams } from "../models";
/** Class containing AvailableWorkloadProfiles operations. */
export declare class AvailableWorkloadProfilesImpl implements AvailableWorkloadProfiles {
    private readonly client;
    /**
     * Initialize a new instance of the class AvailableWorkloadProfiles class.
     * @param client Reference to the service client
     */
    constructor(client: ContainerAppsAPIClient);
    /**
     * Get all available workload profiles for a location.
     * @param location The name of Azure region.
     * @param options The options parameters.
     */
    list(location: string, options?: AvailableWorkloadProfilesGetOptionalParams): PagedAsyncIterableIterator<AvailableWorkloadProfile>;
    private getPagingPage;
    private getPagingAll;
    /**
     * Get all available workload profiles for a location.
     * @param location The name of Azure region.
     * @param options The options parameters.
     */
    private _get;
    /**
     * GetNext
     * @param location The name of Azure region.
     * @param nextLink The nextLink from the previous successful call to the Get method.
     * @param options The options parameters.
     */
    private _getNext;
}
//# sourceMappingURL=availableWorkloadProfiles.d.ts.map