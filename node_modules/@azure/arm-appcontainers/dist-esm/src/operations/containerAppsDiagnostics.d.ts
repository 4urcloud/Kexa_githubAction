import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { ContainerAppsDiagnostics } from "../operationsInterfaces";
import { ContainerAppsAPIClient } from "../containerAppsAPIClient";
import { Diagnostics, ContainerAppsDiagnosticsListDetectorsOptionalParams, Revision, ContainerAppsDiagnosticsListRevisionsOptionalParams, ContainerAppsDiagnosticsGetDetectorOptionalParams, ContainerAppsDiagnosticsGetDetectorResponse, ContainerAppsDiagnosticsGetRevisionOptionalParams, ContainerAppsDiagnosticsGetRevisionResponse, ContainerAppsDiagnosticsGetRootOptionalParams, ContainerAppsDiagnosticsGetRootResponse } from "../models";
/** Class containing ContainerAppsDiagnostics operations. */
export declare class ContainerAppsDiagnosticsImpl implements ContainerAppsDiagnostics {
    private readonly client;
    /**
     * Initialize a new instance of the class ContainerAppsDiagnostics class.
     * @param client Reference to the service client
     */
    constructor(client: ContainerAppsAPIClient);
    /**
     * Get the list of diagnostics for a given Container App.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param containerAppName Name of the Container App for which detector info is needed.
     * @param options The options parameters.
     */
    listDetectors(resourceGroupName: string, containerAppName: string, options?: ContainerAppsDiagnosticsListDetectorsOptionalParams): PagedAsyncIterableIterator<Diagnostics>;
    private listDetectorsPagingPage;
    private listDetectorsPagingAll;
    /**
     * Get the Revisions for a given Container App.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param containerAppName Name of the Container App for which Revisions are needed.
     * @param options The options parameters.
     */
    listRevisions(resourceGroupName: string, containerAppName: string, options?: ContainerAppsDiagnosticsListRevisionsOptionalParams): PagedAsyncIterableIterator<Revision>;
    private listRevisionsPagingPage;
    private listRevisionsPagingAll;
    /**
     * Get the list of diagnostics for a given Container App.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param containerAppName Name of the Container App for which detector info is needed.
     * @param options The options parameters.
     */
    private _listDetectors;
    /**
     * Get a diagnostics result of a Container App.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param containerAppName Name of the Container App.
     * @param detectorName Name of the Container App Detector.
     * @param options The options parameters.
     */
    getDetector(resourceGroupName: string, containerAppName: string, detectorName: string, options?: ContainerAppsDiagnosticsGetDetectorOptionalParams): Promise<ContainerAppsDiagnosticsGetDetectorResponse>;
    /**
     * Get the Revisions for a given Container App.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param containerAppName Name of the Container App for which Revisions are needed.
     * @param options The options parameters.
     */
    private _listRevisions;
    /**
     * Get a revision of a Container App.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param containerAppName Name of the Container App.
     * @param revisionName Name of the Container App Revision.
     * @param options The options parameters.
     */
    getRevision(resourceGroupName: string, containerAppName: string, revisionName: string, options?: ContainerAppsDiagnosticsGetRevisionOptionalParams): Promise<ContainerAppsDiagnosticsGetRevisionResponse>;
    /**
     * Get the properties of a Container App.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param containerAppName Name of the Container App.
     * @param options The options parameters.
     */
    getRoot(resourceGroupName: string, containerAppName: string, options?: ContainerAppsDiagnosticsGetRootOptionalParams): Promise<ContainerAppsDiagnosticsGetRootResponse>;
    /**
     * ListDetectorsNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param containerAppName Name of the Container App for which detector info is needed.
     * @param nextLink The nextLink from the previous successful call to the ListDetectors method.
     * @param options The options parameters.
     */
    private _listDetectorsNext;
    /**
     * ListRevisionsNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param containerAppName Name of the Container App for which Revisions are needed.
     * @param nextLink The nextLink from the previous successful call to the ListRevisions method.
     * @param options The options parameters.
     */
    private _listRevisionsNext;
}
//# sourceMappingURL=containerAppsDiagnostics.d.ts.map