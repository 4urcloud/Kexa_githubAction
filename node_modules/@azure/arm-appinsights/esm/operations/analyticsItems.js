/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import { __assign } from "tslib";
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/analyticsItemsMappers";
import * as Parameters from "../models/parameters";
/** Class representing a AnalyticsItems. */
var AnalyticsItems = /** @class */ (function () {
    /**
     * Create a AnalyticsItems.
     * @param {ApplicationInsightsManagementClientContext} client Reference to the service client.
     */
    function AnalyticsItems(client) {
        this.client = client;
    }
    AnalyticsItems.prototype.list = function (resourceGroupName, resourceName, scopePath, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            resourceName: resourceName,
            scopePath: scopePath,
            options: options
        }, listOperationSpec, callback);
    };
    AnalyticsItems.prototype.get = function (resourceGroupName, resourceName, scopePath, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            resourceName: resourceName,
            scopePath: scopePath,
            options: options
        }, getOperationSpec, callback);
    };
    AnalyticsItems.prototype.put = function (resourceGroupName, resourceName, scopePath, itemProperties, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            resourceName: resourceName,
            scopePath: scopePath,
            itemProperties: itemProperties,
            options: options
        }, putOperationSpec, callback);
    };
    AnalyticsItems.prototype.deleteMethod = function (resourceGroupName, resourceName, scopePath, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            resourceName: resourceName,
            scopePath: scopePath,
            options: options
        }, deleteMethodOperationSpec, callback);
    };
    return AnalyticsItems;
}());
export { AnalyticsItems };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var listOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.insights/components/{resourceName}/{scopePath}",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.resourceName,
        Parameters.scopePath
    ],
    queryParameters: [
        Parameters.apiVersion0,
        Parameters.scope,
        Parameters.type,
        Parameters.includeContent
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ApplicationInsightsComponentAnalyticsItem"
                        }
                    }
                }
            }
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var getOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.insights/components/{resourceName}/{scopePath}/item",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.resourceName,
        Parameters.scopePath
    ],
    queryParameters: [
        Parameters.apiVersion0,
        Parameters.id,
        Parameters.name
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.ApplicationInsightsComponentAnalyticsItem
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var putOperationSpec = {
    httpMethod: "PUT",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.insights/components/{resourceName}/{scopePath}/item",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.resourceName,
        Parameters.scopePath
    ],
    queryParameters: [
        Parameters.apiVersion0,
        Parameters.overrideItem
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: "itemProperties",
        mapper: __assign(__assign({}, Mappers.ApplicationInsightsComponentAnalyticsItem), { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.ApplicationInsightsComponentAnalyticsItem
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var deleteMethodOperationSpec = {
    httpMethod: "DELETE",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.insights/components/{resourceName}/{scopePath}/item",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.resourceName,
        Parameters.scopePath
    ],
    queryParameters: [
        Parameters.apiVersion0,
        Parameters.id,
        Parameters.name
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {},
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
//# sourceMappingURL=analyticsItems.js.map