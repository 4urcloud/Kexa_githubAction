import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { ApplicationInsightsManagementClientContext } from "../applicationInsightsManagementClientContext";
/** Class representing a ComponentLinkedStorageAccountsOperations. */
export declare class ComponentLinkedStorageAccountsOperations {
    private readonly client;
    /**
     * Create a ComponentLinkedStorageAccountsOperations.
     * @param {ApplicationInsightsManagementClientContext} client Reference to the service client.
     */
    constructor(client: ApplicationInsightsManagementClientContext);
    /**
     * Returns the current linked storage settings for an Application Insights component.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the Application Insights component resource.
     * @param [options] The optional parameters
     * @returns Promise<Models.ComponentLinkedStorageAccountsGetResponse>
     */
    get(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase): Promise<Models.ComponentLinkedStorageAccountsGetResponse>;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the Application Insights component resource.
     * @param callback The callback
     */
    get(resourceGroupName: string, resourceName: string, callback: msRest.ServiceCallback<Models.ComponentLinkedStorageAccounts>): void;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the Application Insights component resource.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, resourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ComponentLinkedStorageAccounts>): void;
    /**
     * Replace current linked storage account for an Application Insights component.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the Application Insights component resource.
     * @param linkedStorageAccountsProperties Properties that need to be specified to update linked
     * storage accounts for an Application Insights component.
     * @param [options] The optional parameters
     * @returns Promise<Models.ComponentLinkedStorageAccountsCreateAndUpdateResponse>
     */
    createAndUpdate(resourceGroupName: string, resourceName: string, linkedStorageAccountsProperties: Models.ComponentLinkedStorageAccounts, options?: msRest.RequestOptionsBase): Promise<Models.ComponentLinkedStorageAccountsCreateAndUpdateResponse>;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the Application Insights component resource.
     * @param linkedStorageAccountsProperties Properties that need to be specified to update linked
     * storage accounts for an Application Insights component.
     * @param callback The callback
     */
    createAndUpdate(resourceGroupName: string, resourceName: string, linkedStorageAccountsProperties: Models.ComponentLinkedStorageAccounts, callback: msRest.ServiceCallback<Models.ComponentLinkedStorageAccounts>): void;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the Application Insights component resource.
     * @param linkedStorageAccountsProperties Properties that need to be specified to update linked
     * storage accounts for an Application Insights component.
     * @param options The optional parameters
     * @param callback The callback
     */
    createAndUpdate(resourceGroupName: string, resourceName: string, linkedStorageAccountsProperties: Models.ComponentLinkedStorageAccounts, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ComponentLinkedStorageAccounts>): void;
    /**
     * Update linked storage accounts for an Application Insights component.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the Application Insights component resource.
     * @param linkedStorageAccountsProperties Properties that need to be specified to update a linked
     * storage accounts for an Application Insights component.
     * @param [options] The optional parameters
     * @returns Promise<Models.ComponentLinkedStorageAccountsUpdateResponse>
     */
    update(resourceGroupName: string, resourceName: string, linkedStorageAccountsProperties: Models.ComponentLinkedStorageAccountsPatch, options?: msRest.RequestOptionsBase): Promise<Models.ComponentLinkedStorageAccountsUpdateResponse>;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the Application Insights component resource.
     * @param linkedStorageAccountsProperties Properties that need to be specified to update a linked
     * storage accounts for an Application Insights component.
     * @param callback The callback
     */
    update(resourceGroupName: string, resourceName: string, linkedStorageAccountsProperties: Models.ComponentLinkedStorageAccountsPatch, callback: msRest.ServiceCallback<Models.ComponentLinkedStorageAccounts>): void;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the Application Insights component resource.
     * @param linkedStorageAccountsProperties Properties that need to be specified to update a linked
     * storage accounts for an Application Insights component.
     * @param options The optional parameters
     * @param callback The callback
     */
    update(resourceGroupName: string, resourceName: string, linkedStorageAccountsProperties: Models.ComponentLinkedStorageAccountsPatch, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ComponentLinkedStorageAccounts>): void;
    /**
     * Delete linked storage accounts for an Application Insights component.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the Application Insights component resource.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the Application Insights component resource.
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, resourceName: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the Application Insights component resource.
     * @param options The optional parameters
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, resourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
}
//# sourceMappingURL=componentLinkedStorageAccountsOperations.d.ts.map