import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { ApplicationInsightsManagementClientContext } from "../applicationInsightsManagementClientContext";
/** Class representing a LiveToken. */
export declare class LiveToken {
    private readonly client;
    /**
     * Create a LiveToken.
     * @param {ApplicationInsightsManagementClientContext} client Reference to the service client.
     */
    constructor(client: ApplicationInsightsManagementClientContext);
    /**
     * **Gets an access token for live metrics stream data.**
     * @param resourceUri The identifier of the resource.
     * @param [options] The optional parameters
     * @returns Promise<Models.LiveTokenGetResponse>
     */
    get(resourceUri: string, options?: msRest.RequestOptionsBase): Promise<Models.LiveTokenGetResponse>;
    /**
     * @param resourceUri The identifier of the resource.
     * @param callback The callback
     */
    get(resourceUri: string, callback: msRest.ServiceCallback<Models.LiveTokenResponse>): void;
    /**
     * @param resourceUri The identifier of the resource.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceUri: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.LiveTokenResponse>): void;
}
//# sourceMappingURL=liveToken.d.ts.map