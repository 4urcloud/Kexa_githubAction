import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { ApplicationInsightsManagementClientContext } from "../applicationInsightsManagementClientContext";
/** Class representing a Workbooks. */
export declare class Workbooks {
    private readonly client;
    /**
     * Create a Workbooks.
     * @param {ApplicationInsightsManagementClientContext} client Reference to the service client.
     */
    constructor(client: ApplicationInsightsManagementClientContext);
    /**
     * Get all private workbooks defined within a specified subscription and category.
     * @param category Category of workbook to return. Possible values include: 'workbook', 'TSG',
     * 'performance', 'retention'
     * @param [options] The optional parameters
     * @returns Promise<Models.WorkbooksListBySubscriptionResponse>
     */
    listBySubscription(category: Models.CategoryType, options?: Models.WorkbooksListBySubscriptionOptionalParams): Promise<Models.WorkbooksListBySubscriptionResponse>;
    /**
     * @param category Category of workbook to return. Possible values include: 'workbook', 'TSG',
     * 'performance', 'retention'
     * @param callback The callback
     */
    listBySubscription(category: Models.CategoryType, callback: msRest.ServiceCallback<Models.WorkbooksListResult>): void;
    /**
     * @param category Category of workbook to return. Possible values include: 'workbook', 'TSG',
     * 'performance', 'retention'
     * @param options The optional parameters
     * @param callback The callback
     */
    listBySubscription(category: Models.CategoryType, options: Models.WorkbooksListBySubscriptionOptionalParams, callback: msRest.ServiceCallback<Models.WorkbooksListResult>): void;
    /**
     * Get all Workbooks defined within a specified resource group and category.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param category Category of workbook to return. Possible values include: 'workbook', 'TSG',
     * 'performance', 'retention'
     * @param [options] The optional parameters
     * @returns Promise<Models.WorkbooksListByResourceGroupResponse>
     */
    listByResourceGroup(resourceGroupName: string, category: Models.CategoryType, options?: Models.WorkbooksListByResourceGroupOptionalParams): Promise<Models.WorkbooksListByResourceGroupResponse>;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param category Category of workbook to return. Possible values include: 'workbook', 'TSG',
     * 'performance', 'retention'
     * @param callback The callback
     */
    listByResourceGroup(resourceGroupName: string, category: Models.CategoryType, callback: msRest.ServiceCallback<Models.WorkbooksListResult>): void;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param category Category of workbook to return. Possible values include: 'workbook', 'TSG',
     * 'performance', 'retention'
     * @param options The optional parameters
     * @param callback The callback
     */
    listByResourceGroup(resourceGroupName: string, category: Models.CategoryType, options: Models.WorkbooksListByResourceGroupOptionalParams, callback: msRest.ServiceCallback<Models.WorkbooksListResult>): void;
    /**
     * Get a single workbook by its resourceName.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the Application Insights component resource.
     * @param [options] The optional parameters
     * @returns Promise<Models.WorkbooksGetResponse>
     */
    get(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase): Promise<Models.WorkbooksGetResponse>;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the Application Insights component resource.
     * @param callback The callback
     */
    get(resourceGroupName: string, resourceName: string, callback: msRest.ServiceCallback<Models.Workbook>): void;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the Application Insights component resource.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, resourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Workbook>): void;
    /**
     * Delete a workbook.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the Application Insights component resource.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the Application Insights component resource.
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, resourceName: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the Application Insights component resource.
     * @param options The optional parameters
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, resourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Create a new workbook.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the Application Insights component resource.
     * @param workbookProperties Properties that need to be specified to create a new workbook.
     * @param [options] The optional parameters
     * @returns Promise<Models.WorkbooksCreateOrUpdateResponse>
     */
    createOrUpdate(resourceGroupName: string, resourceName: string, workbookProperties: Models.Workbook, options?: Models.WorkbooksCreateOrUpdateOptionalParams): Promise<Models.WorkbooksCreateOrUpdateResponse>;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the Application Insights component resource.
     * @param workbookProperties Properties that need to be specified to create a new workbook.
     * @param callback The callback
     */
    createOrUpdate(resourceGroupName: string, resourceName: string, workbookProperties: Models.Workbook, callback: msRest.ServiceCallback<Models.Workbook>): void;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the Application Insights component resource.
     * @param workbookProperties Properties that need to be specified to create a new workbook.
     * @param options The optional parameters
     * @param callback The callback
     */
    createOrUpdate(resourceGroupName: string, resourceName: string, workbookProperties: Models.Workbook, options: Models.WorkbooksCreateOrUpdateOptionalParams, callback: msRest.ServiceCallback<Models.Workbook>): void;
    /**
     * Updates a workbook that has already been added.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the Application Insights component resource.
     * @param [options] The optional parameters
     * @returns Promise<Models.WorkbooksUpdateResponse>
     */
    update(resourceGroupName: string, resourceName: string, options?: Models.WorkbooksUpdateOptionalParams): Promise<Models.WorkbooksUpdateResponse>;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the Application Insights component resource.
     * @param callback The callback
     */
    update(resourceGroupName: string, resourceName: string, callback: msRest.ServiceCallback<Models.Workbook>): void;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the Application Insights component resource.
     * @param options The optional parameters
     * @param callback The callback
     */
    update(resourceGroupName: string, resourceName: string, options: Models.WorkbooksUpdateOptionalParams, callback: msRest.ServiceCallback<Models.Workbook>): void;
    /**
     * Get the revisions for the workbook defined by its resourceName.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the Application Insights component resource.
     * @param [options] The optional parameters
     * @returns Promise<Models.WorkbooksRevisionsListResponse>
     */
    revisionsList(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase): Promise<Models.WorkbooksRevisionsListResponse>;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the Application Insights component resource.
     * @param callback The callback
     */
    revisionsList(resourceGroupName: string, resourceName: string, callback: msRest.ServiceCallback<Models.WorkbooksListResult>): void;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the Application Insights component resource.
     * @param options The optional parameters
     * @param callback The callback
     */
    revisionsList(resourceGroupName: string, resourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.WorkbooksListResult>): void;
    /**
     * Get a single workbook revision defined by its revisionId.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the Application Insights component resource.
     * @param revisionId The id of the workbook's revision.
     * @param [options] The optional parameters
     * @returns Promise<Models.WorkbooksRevisionGetResponse>
     */
    revisionGet(resourceGroupName: string, resourceName: string, revisionId: string, options?: msRest.RequestOptionsBase): Promise<Models.WorkbooksRevisionGetResponse>;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the Application Insights component resource.
     * @param revisionId The id of the workbook's revision.
     * @param callback The callback
     */
    revisionGet(resourceGroupName: string, resourceName: string, revisionId: string, callback: msRest.ServiceCallback<Models.Workbook>): void;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the Application Insights component resource.
     * @param revisionId The id of the workbook's revision.
     * @param options The optional parameters
     * @param callback The callback
     */
    revisionGet(resourceGroupName: string, resourceName: string, revisionId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Workbook>): void;
    /**
     * Get all private workbooks defined within a specified subscription and category.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param category Category of workbook to return. Possible values include: 'workbook', 'TSG',
     * 'performance', 'retention'
     * @param [options] The optional parameters
     * @returns Promise<Models.WorkbooksListBySubscriptionNextResponse>
     */
    listBySubscriptionNext(nextPageLink: string, category: Models.CategoryType, options?: Models.WorkbooksListBySubscriptionNextOptionalParams): Promise<Models.WorkbooksListBySubscriptionNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param category Category of workbook to return. Possible values include: 'workbook', 'TSG',
     * 'performance', 'retention'
     * @param callback The callback
     */
    listBySubscriptionNext(nextPageLink: string, category: Models.CategoryType, callback: msRest.ServiceCallback<Models.WorkbooksListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param category Category of workbook to return. Possible values include: 'workbook', 'TSG',
     * 'performance', 'retention'
     * @param options The optional parameters
     * @param callback The callback
     */
    listBySubscriptionNext(nextPageLink: string, category: Models.CategoryType, options: Models.WorkbooksListBySubscriptionNextOptionalParams, callback: msRest.ServiceCallback<Models.WorkbooksListResult>): void;
    /**
     * Get all Workbooks defined within a specified resource group and category.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param category Category of workbook to return. Possible values include: 'workbook', 'TSG',
     * 'performance', 'retention'
     * @param [options] The optional parameters
     * @returns Promise<Models.WorkbooksListByResourceGroupNextResponse>
     */
    listByResourceGroupNext(nextPageLink: string, category: Models.CategoryType, options?: Models.WorkbooksListByResourceGroupNextOptionalParams): Promise<Models.WorkbooksListByResourceGroupNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param category Category of workbook to return. Possible values include: 'workbook', 'TSG',
     * 'performance', 'retention'
     * @param callback The callback
     */
    listByResourceGroupNext(nextPageLink: string, category: Models.CategoryType, callback: msRest.ServiceCallback<Models.WorkbooksListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param category Category of workbook to return. Possible values include: 'workbook', 'TSG',
     * 'performance', 'retention'
     * @param options The optional parameters
     * @param callback The callback
     */
    listByResourceGroupNext(nextPageLink: string, category: Models.CategoryType, options: Models.WorkbooksListByResourceGroupNextOptionalParams, callback: msRest.ServiceCallback<Models.WorkbooksListResult>): void;
    /**
     * Get the revisions for the workbook defined by its resourceName.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.WorkbooksRevisionsListNextResponse>
     */
    revisionsListNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.WorkbooksRevisionsListNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    revisionsListNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.WorkbooksListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    revisionsListNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.WorkbooksListResult>): void;
}
//# sourceMappingURL=workbooks.d.ts.map