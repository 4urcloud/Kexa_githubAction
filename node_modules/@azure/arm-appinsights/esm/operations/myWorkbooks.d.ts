import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { ApplicationInsightsManagementClientContext } from "../applicationInsightsManagementClientContext";
/** Class representing a MyWorkbooks. */
export declare class MyWorkbooks {
    private readonly client;
    /**
     * Create a MyWorkbooks.
     * @param {ApplicationInsightsManagementClientContext} client Reference to the service client.
     */
    constructor(client: ApplicationInsightsManagementClientContext);
    /**
     * Get all private workbooks defined within a specified resource group and category.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param category Category of workbook to return. Possible values include: 'workbook', 'TSG',
     * 'performance', 'retention'
     * @param [options] The optional parameters
     * @returns Promise<Models.MyWorkbooksListByResourceGroupResponse>
     */
    listByResourceGroup(resourceGroupName: string, category: Models.CategoryType, options?: Models.MyWorkbooksListByResourceGroupOptionalParams): Promise<Models.MyWorkbooksListByResourceGroupResponse>;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param category Category of workbook to return. Possible values include: 'workbook', 'TSG',
     * 'performance', 'retention'
     * @param callback The callback
     */
    listByResourceGroup(resourceGroupName: string, category: Models.CategoryType, callback: msRest.ServiceCallback<Models.MyWorkbooksListResult>): void;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param category Category of workbook to return. Possible values include: 'workbook', 'TSG',
     * 'performance', 'retention'
     * @param options The optional parameters
     * @param callback The callback
     */
    listByResourceGroup(resourceGroupName: string, category: Models.CategoryType, options: Models.MyWorkbooksListByResourceGroupOptionalParams, callback: msRest.ServiceCallback<Models.MyWorkbooksListResult>): void;
    /**
     * Get all private workbooks defined within a specified subscription and category.
     * @param category Category of workbook to return. Possible values include: 'workbook', 'TSG',
     * 'performance', 'retention'
     * @param [options] The optional parameters
     * @returns Promise<Models.MyWorkbooksListBySubscriptionResponse>
     */
    listBySubscription(category: Models.CategoryType, options?: Models.MyWorkbooksListBySubscriptionOptionalParams): Promise<Models.MyWorkbooksListBySubscriptionResponse>;
    /**
     * @param category Category of workbook to return. Possible values include: 'workbook', 'TSG',
     * 'performance', 'retention'
     * @param callback The callback
     */
    listBySubscription(category: Models.CategoryType, callback: msRest.ServiceCallback<Models.MyWorkbooksListResult>): void;
    /**
     * @param category Category of workbook to return. Possible values include: 'workbook', 'TSG',
     * 'performance', 'retention'
     * @param options The optional parameters
     * @param callback The callback
     */
    listBySubscription(category: Models.CategoryType, options: Models.MyWorkbooksListBySubscriptionOptionalParams, callback: msRest.ServiceCallback<Models.MyWorkbooksListResult>): void;
    /**
     * Get a single private workbook by its resourceName.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the Application Insights component resource.
     * @param [options] The optional parameters
     * @returns Promise<Models.MyWorkbooksGetResponse>
     */
    get(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase): Promise<Models.MyWorkbooksGetResponse>;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the Application Insights component resource.
     * @param callback The callback
     */
    get(resourceGroupName: string, resourceName: string, callback: msRest.ServiceCallback<Models.MyWorkbook>): void;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the Application Insights component resource.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, resourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.MyWorkbook>): void;
    /**
     * Delete a private workbook.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the Application Insights component resource.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the Application Insights component resource.
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, resourceName: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the Application Insights component resource.
     * @param options The optional parameters
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, resourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Create a new private workbook.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the Application Insights component resource.
     * @param workbookProperties Properties that need to be specified to create a new private workbook.
     * @param [options] The optional parameters
     * @returns Promise<Models.MyWorkbooksCreateOrUpdateResponse>
     */
    createOrUpdate(resourceGroupName: string, resourceName: string, workbookProperties: Models.MyWorkbook, options?: Models.MyWorkbooksCreateOrUpdateOptionalParams): Promise<Models.MyWorkbooksCreateOrUpdateResponse>;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the Application Insights component resource.
     * @param workbookProperties Properties that need to be specified to create a new private workbook.
     * @param callback The callback
     */
    createOrUpdate(resourceGroupName: string, resourceName: string, workbookProperties: Models.MyWorkbook, callback: msRest.ServiceCallback<Models.MyWorkbook>): void;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the Application Insights component resource.
     * @param workbookProperties Properties that need to be specified to create a new private workbook.
     * @param options The optional parameters
     * @param callback The callback
     */
    createOrUpdate(resourceGroupName: string, resourceName: string, workbookProperties: Models.MyWorkbook, options: Models.MyWorkbooksCreateOrUpdateOptionalParams, callback: msRest.ServiceCallback<Models.MyWorkbook>): void;
    /**
     * Updates a private workbook that has already been added.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the Application Insights component resource.
     * @param workbookProperties Properties that need to be specified to create a new private workbook.
     * @param [options] The optional parameters
     * @returns Promise<Models.MyWorkbooksUpdateResponse>
     */
    update(resourceGroupName: string, resourceName: string, workbookProperties: Models.MyWorkbook, options?: Models.MyWorkbooksUpdateOptionalParams): Promise<Models.MyWorkbooksUpdateResponse>;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the Application Insights component resource.
     * @param workbookProperties Properties that need to be specified to create a new private workbook.
     * @param callback The callback
     */
    update(resourceGroupName: string, resourceName: string, workbookProperties: Models.MyWorkbook, callback: msRest.ServiceCallback<Models.MyWorkbook>): void;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the Application Insights component resource.
     * @param workbookProperties Properties that need to be specified to create a new private workbook.
     * @param options The optional parameters
     * @param callback The callback
     */
    update(resourceGroupName: string, resourceName: string, workbookProperties: Models.MyWorkbook, options: Models.MyWorkbooksUpdateOptionalParams, callback: msRest.ServiceCallback<Models.MyWorkbook>): void;
    /**
     * Get all private workbooks defined within a specified resource group and category.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param category Category of workbook to return. Possible values include: 'workbook', 'TSG',
     * 'performance', 'retention'
     * @param [options] The optional parameters
     * @returns Promise<Models.MyWorkbooksListByResourceGroupNextResponse>
     */
    listByResourceGroupNext(nextPageLink: string, category: Models.CategoryType, options?: Models.MyWorkbooksListByResourceGroupNextOptionalParams): Promise<Models.MyWorkbooksListByResourceGroupNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param category Category of workbook to return. Possible values include: 'workbook', 'TSG',
     * 'performance', 'retention'
     * @param callback The callback
     */
    listByResourceGroupNext(nextPageLink: string, category: Models.CategoryType, callback: msRest.ServiceCallback<Models.MyWorkbooksListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param category Category of workbook to return. Possible values include: 'workbook', 'TSG',
     * 'performance', 'retention'
     * @param options The optional parameters
     * @param callback The callback
     */
    listByResourceGroupNext(nextPageLink: string, category: Models.CategoryType, options: Models.MyWorkbooksListByResourceGroupNextOptionalParams, callback: msRest.ServiceCallback<Models.MyWorkbooksListResult>): void;
    /**
     * Get all private workbooks defined within a specified subscription and category.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param category Category of workbook to return. Possible values include: 'workbook', 'TSG',
     * 'performance', 'retention'
     * @param [options] The optional parameters
     * @returns Promise<Models.MyWorkbooksListBySubscriptionNextResponse>
     */
    listBySubscriptionNext(nextPageLink: string, category: Models.CategoryType, options?: Models.MyWorkbooksListBySubscriptionNextOptionalParams): Promise<Models.MyWorkbooksListBySubscriptionNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param category Category of workbook to return. Possible values include: 'workbook', 'TSG',
     * 'performance', 'retention'
     * @param callback The callback
     */
    listBySubscriptionNext(nextPageLink: string, category: Models.CategoryType, callback: msRest.ServiceCallback<Models.MyWorkbooksListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param category Category of workbook to return. Possible values include: 'workbook', 'TSG',
     * 'performance', 'retention'
     * @param options The optional parameters
     * @param callback The callback
     */
    listBySubscriptionNext(nextPageLink: string, category: Models.CategoryType, options: Models.MyWorkbooksListBySubscriptionNextOptionalParams, callback: msRest.ServiceCallback<Models.MyWorkbooksListResult>): void;
}
//# sourceMappingURL=myWorkbooks.d.ts.map