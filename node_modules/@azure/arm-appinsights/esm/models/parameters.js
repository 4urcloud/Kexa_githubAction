/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import * as msRest from "@azure/ms-rest-js";
export var acceptLanguage = {
    parameterPath: "acceptLanguage",
    mapper: {
        serializedName: "accept-language",
        defaultValue: 'en-US',
        type: {
            name: "String"
        }
    }
};
export var annotationId = {
    parameterPath: "annotationId",
    mapper: {
        required: true,
        serializedName: "annotationId",
        type: {
            name: "String"
        }
    }
};
export var apiVersion0 = {
    parameterPath: "apiVersion",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "api-version",
        defaultValue: '2015-05-01',
        constraints: {
            MinLength: 1
        },
        type: {
            name: "String"
        }
    }
};
export var apiVersion1 = {
    parameterPath: "apiVersion",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "api-version",
        defaultValue: '2020-06-02-preview',
        constraints: {
            MinLength: 1
        },
        type: {
            name: "String"
        }
    }
};
export var apiVersion2 = {
    parameterPath: "apiVersion",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "api-version",
        defaultValue: '2020-11-20',
        constraints: {
            MinLength: 1
        },
        type: {
            name: "String"
        }
    }
};
export var apiVersion3 = {
    parameterPath: "apiVersion",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "api-version",
        defaultValue: '2021-03-08',
        constraints: {
            MinLength: 1
        },
        type: {
            name: "String"
        }
    }
};
export var apiVersion4 = {
    parameterPath: "apiVersion",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "api-version",
        defaultValue: '2021-08-01',
        constraints: {
            MinLength: 1
        },
        type: {
            name: "String"
        }
    }
};
export var apiVersion5 = {
    parameterPath: "apiVersion",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "api-version",
        defaultValue: '2018-05-01-preview',
        constraints: {
            MinLength: 1
        },
        type: {
            name: "String"
        }
    }
};
export var apiVersion6 = {
    parameterPath: "apiVersion",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "api-version",
        defaultValue: '2020-03-01-preview',
        constraints: {
            MinLength: 1
        },
        type: {
            name: "String"
        }
    }
};
export var canFetchContent = {
    parameterPath: [
        "options",
        "canFetchContent"
    ],
    mapper: {
        serializedName: "canFetchContent",
        type: {
            name: "Boolean"
        }
    }
};
export var category = {
    parameterPath: "category",
    mapper: {
        required: true,
        serializedName: "category",
        type: {
            name: "String"
        }
    }
};
export var componentName = {
    parameterPath: "componentName",
    mapper: {
        required: true,
        serializedName: "componentName",
        type: {
            name: "String"
        }
    }
};
export var configurationId = {
    parameterPath: "configurationId",
    mapper: {
        required: true,
        serializedName: "ConfigurationId",
        type: {
            name: "String"
        }
    }
};
export var end = {
    parameterPath: "end",
    mapper: {
        required: true,
        serializedName: "end",
        type: {
            name: "String"
        }
    }
};
export var exportId = {
    parameterPath: "exportId",
    mapper: {
        required: true,
        serializedName: "exportId",
        type: {
            name: "String"
        }
    }
};
export var favoriteId = {
    parameterPath: "favoriteId",
    mapper: {
        required: true,
        serializedName: "favoriteId",
        type: {
            name: "String"
        }
    }
};
export var favoriteType = {
    parameterPath: [
        "options",
        "favoriteType"
    ],
    mapper: {
        serializedName: "favoriteType",
        defaultValue: 'shared',
        type: {
            name: "Enum",
            allowedValues: [
                "shared",
                "user"
            ]
        }
    }
};
export var id = {
    parameterPath: [
        "options",
        "id"
    ],
    mapper: {
        serializedName: "id",
        type: {
            name: "String"
        }
    }
};
export var includeContent = {
    parameterPath: [
        "options",
        "includeContent"
    ],
    mapper: {
        serializedName: "includeContent",
        type: {
            name: "Boolean"
        }
    }
};
export var keyId = {
    parameterPath: "keyId",
    mapper: {
        required: true,
        serializedName: "keyId",
        type: {
            name: "String"
        }
    }
};
export var name = {
    parameterPath: [
        "options",
        "name"
    ],
    mapper: {
        serializedName: "name",
        type: {
            name: "String"
        }
    }
};
export var nextPageLink = {
    parameterPath: "nextPageLink",
    mapper: {
        required: true,
        serializedName: "nextLink",
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export var overrideItem = {
    parameterPath: [
        "options",
        "overrideItem"
    ],
    mapper: {
        serializedName: "overrideItem",
        type: {
            name: "Boolean"
        }
    }
};
export var purgeId = {
    parameterPath: "purgeId",
    mapper: {
        required: true,
        serializedName: "purgeId",
        type: {
            name: "String"
        }
    }
};
export var resourceGroupName = {
    parameterPath: "resourceGroupName",
    mapper: {
        required: true,
        serializedName: "resourceGroupName",
        constraints: {
            MaxLength: 90,
            MinLength: 1
        },
        type: {
            name: "String"
        }
    }
};
export var resourceName = {
    parameterPath: "resourceName",
    mapper: {
        required: true,
        serializedName: "resourceName",
        type: {
            name: "String"
        }
    }
};
export var resourceUri = {
    parameterPath: "resourceUri",
    mapper: {
        required: true,
        serializedName: "resourceUri",
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export var revisionId = {
    parameterPath: "revisionId",
    mapper: {
        required: true,
        serializedName: "revisionId",
        type: {
            name: "String"
        }
    }
};
export var scope = {
    parameterPath: [
        "options",
        "scope"
    ],
    mapper: {
        serializedName: "scope",
        defaultValue: 'shared',
        type: {
            name: "String"
        }
    }
};
export var scopePath = {
    parameterPath: "scopePath",
    mapper: {
        required: true,
        serializedName: "scopePath",
        type: {
            name: "String"
        }
    }
};
export var sourceId = {
    parameterPath: [
        "options",
        "sourceId"
    ],
    mapper: {
        serializedName: "sourceId",
        type: {
            name: "String"
        }
    }
};
export var sourceType = {
    parameterPath: [
        "options",
        "sourceType"
    ],
    mapper: {
        serializedName: "sourceType",
        type: {
            name: "String"
        }
    }
};
export var start = {
    parameterPath: "start",
    mapper: {
        required: true,
        serializedName: "start",
        type: {
            name: "String"
        }
    }
};
export var storageType = {
    parameterPath: "storageType",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "storageType",
        defaultValue: 'ServiceProfiler',
        type: {
            name: "String"
        }
    }
};
export var subscriptionId = {
    parameterPath: "subscriptionId",
    mapper: {
        required: true,
        serializedName: "subscriptionId",
        constraints: {
            MinLength: 1
        },
        type: {
            name: "String"
        }
    }
};
export var tags = {
    parameterPath: [
        "options",
        "tags"
    ],
    mapper: {
        serializedName: "tags",
        type: {
            name: "Sequence",
            element: {
                type: {
                    name: "String"
                }
            }
        }
    },
    collectionFormat: msRest.QueryCollectionFormat.Csv
};
export var type = {
    parameterPath: [
        "options",
        "type"
    ],
    mapper: {
        serializedName: "type",
        defaultValue: 'none',
        type: {
            name: "String"
        }
    }
};
export var webTestName = {
    parameterPath: "webTestName",
    mapper: {
        required: true,
        serializedName: "webTestName",
        type: {
            name: "String"
        }
    }
};
export var workItemConfigId = {
    parameterPath: "workItemConfigId",
    mapper: {
        required: true,
        serializedName: "workItemConfigId",
        type: {
            name: "String"
        }
    }
};
//# sourceMappingURL=parameters.js.map