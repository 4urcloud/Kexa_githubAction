import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { VisualStudioResourceProviderClientContext } from "../visualStudioResourceProviderClientContext";
/** Class representing a Accounts. */
export declare class Accounts {
    private readonly client;
    /**
     * Create a Accounts.
     * @param {VisualStudioResourceProviderClientContext} client Reference to the service client.
     */
    constructor(client: VisualStudioResourceProviderClientContext);
    /**
     * Checks if the specified Visual Studio Team Services account name is available. Resource name can
     * be either an account name or an account name and PUID.
     * @summary Accounts_CheckNameAvailability
     * @param body Parameters describing the name to check availability for.
     * @param [options] The optional parameters
     * @returns Promise<Models.AccountsCheckNameAvailabilityResponse>
     */
    checkNameAvailability(body: Models.CheckNameAvailabilityParameter, options?: msRest.RequestOptionsBase): Promise<Models.AccountsCheckNameAvailabilityResponse>;
    /**
     * @param body Parameters describing the name to check availability for.
     * @param callback The callback
     */
    checkNameAvailability(body: Models.CheckNameAvailabilityParameter, callback: msRest.ServiceCallback<Models.CheckNameAvailabilityResult>): void;
    /**
     * @param body Parameters describing the name to check availability for.
     * @param options The optional parameters
     * @param callback The callback
     */
    checkNameAvailability(body: Models.CheckNameAvailabilityParameter, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CheckNameAvailabilityResult>): void;
    /**
     * Gets all Visual Studio Team Services account resources under the resource group linked to the
     * specified Azure subscription.
     * @summary Accounts_ListByResourceGroup
     * @param resourceGroupName Name of the resource group within the Azure subscription.
     * @param [options] The optional parameters
     * @returns Promise<Models.AccountsListByResourceGroupResponse>
     */
    listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.AccountsListByResourceGroupResponse>;
    /**
     * @param resourceGroupName Name of the resource group within the Azure subscription.
     * @param callback The callback
     */
    listByResourceGroup(resourceGroupName: string, callback: msRest.ServiceCallback<Models.AccountResourceListResult>): void;
    /**
     * @param resourceGroupName Name of the resource group within the Azure subscription.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByResourceGroup(resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AccountResourceListResult>): void;
    /**
     * Creates or updates a Visual Studio Team Services account resource.
     * @summary Accounts_CreateOrUpdate
     * @param resourceGroupName Name of the resource group within the Azure subscription.
     * @param body The request data.
     * @param resourceName Name of the resource.
     * @param [options] The optional parameters
     * @returns Promise<Models.AccountsCreateOrUpdateResponse>
     */
    createOrUpdate(resourceGroupName: string, body: Models.AccountResourceRequest, resourceName: string, options?: msRest.RequestOptionsBase): Promise<Models.AccountsCreateOrUpdateResponse>;
    /**
     * @param resourceGroupName Name of the resource group within the Azure subscription.
     * @param body The request data.
     * @param resourceName Name of the resource.
     * @param callback The callback
     */
    createOrUpdate(resourceGroupName: string, body: Models.AccountResourceRequest, resourceName: string, callback: msRest.ServiceCallback<Models.AccountResource>): void;
    /**
     * @param resourceGroupName Name of the resource group within the Azure subscription.
     * @param body The request data.
     * @param resourceName Name of the resource.
     * @param options The optional parameters
     * @param callback The callback
     */
    createOrUpdate(resourceGroupName: string, body: Models.AccountResourceRequest, resourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AccountResource>): void;
    /**
     * Deletes a Visual Studio Team Services account resource.
     * @summary Accounts_Delete
     * @param resourceGroupName Name of the resource group within the Azure subscription.
     * @param resourceName Name of the resource.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName Name of the resource group within the Azure subscription.
     * @param resourceName Name of the resource.
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, resourceName: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName Name of the resource group within the Azure subscription.
     * @param resourceName Name of the resource.
     * @param options The optional parameters
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, resourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Gets the Visual Studio Team Services account resource details.
     * @summary Accounts_Get
     * @param resourceGroupName Name of the resource group within the Azure subscription.
     * @param resourceName Name of the resource.
     * @param [options] The optional parameters
     * @returns Promise<Models.AccountsGetResponse>
     */
    get(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase): Promise<Models.AccountsGetResponse>;
    /**
     * @param resourceGroupName Name of the resource group within the Azure subscription.
     * @param resourceName Name of the resource.
     * @param callback The callback
     */
    get(resourceGroupName: string, resourceName: string, callback: msRest.ServiceCallback<Models.AccountResource>): void;
    /**
     * @param resourceGroupName Name of the resource group within the Azure subscription.
     * @param resourceName Name of the resource.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, resourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AccountResource>): void;
    /**
     * Updates tags for Visual Studio Team Services account resource.
     * @summary Accounts_Update
     * @param resourceGroupName Name of the resource group within the Azure subscription.
     * @param body The request data.
     * @param resourceName Name of the resource.
     * @param [options] The optional parameters
     * @returns Promise<Models.AccountsUpdateResponse>
     */
    update(resourceGroupName: string, body: Models.AccountTagRequest, resourceName: string, options?: msRest.RequestOptionsBase): Promise<Models.AccountsUpdateResponse>;
    /**
     * @param resourceGroupName Name of the resource group within the Azure subscription.
     * @param body The request data.
     * @param resourceName Name of the resource.
     * @param callback The callback
     */
    update(resourceGroupName: string, body: Models.AccountTagRequest, resourceName: string, callback: msRest.ServiceCallback<Models.AccountResource>): void;
    /**
     * @param resourceGroupName Name of the resource group within the Azure subscription.
     * @param body The request data.
     * @param resourceName Name of the resource.
     * @param options The optional parameters
     * @param callback The callback
     */
    update(resourceGroupName: string, body: Models.AccountTagRequest, resourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AccountResource>): void;
}
//# sourceMappingURL=accounts.d.ts.map