import * as msRest from "@azure/ms-rest-js";
import { TokenCredential } from "@azure/core-auth";
import * as Models from "./models";
import * as Mappers from "./models/mappers";
import * as operations from "./operations";
import { VisualStudioResourceProviderClientContext } from "./visualStudioResourceProviderClientContext";
declare class VisualStudioResourceProviderClient extends VisualStudioResourceProviderClientContext {
    operations: operations.Operations;
    accounts: operations.Accounts;
    extensions: operations.Extensions;
    projects: operations.Projects;
    /**
     * Initializes a new instance of the VisualStudioResourceProviderClient class.
     * @param credentials Credentials needed for the client to connect to Azure. Credentials
     * implementing the TokenCredential interface from the @azure/identity package are recommended. For
     * more information about these credentials, see
     * {@link https://www.npmjs.com/package/@azure/identity}. Credentials implementing the
     * ServiceClientCredentials interface from the older packages @azure/ms-rest-nodeauth and
     * @azure/ms-rest-browserauth are also supported.
     * @param subscriptionId The Azure subscription identifier.
     * @param [options] The parameter options
     */
    constructor(credentials: msRest.ServiceClientCredentials | TokenCredential, subscriptionId: string, options?: Models.VisualStudioResourceProviderClientOptions);
}
export { VisualStudioResourceProviderClient, VisualStudioResourceProviderClientContext, Models as VisualStudioResourceProviderModels, Mappers as VisualStudioResourceProviderMappers };
export * from "./operations";
//# sourceMappingURL=visualStudioResourceProviderClient.d.ts.map