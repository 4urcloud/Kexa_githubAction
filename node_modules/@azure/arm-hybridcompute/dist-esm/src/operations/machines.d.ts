import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Machines } from "../operationsInterfaces";
import { HybridComputeManagementClient } from "../hybridComputeManagementClient";
import { Machine, MachinesListByResourceGroupOptionalParams, MachinesListBySubscriptionOptionalParams, MachinesDeleteOptionalParams, MachinesGetOptionalParams, MachinesGetResponse } from "../models";
/** Class containing Machines operations. */
export declare class MachinesImpl implements Machines {
    private readonly client;
    /**
     * Initialize a new instance of the class Machines class.
     * @param client Reference to the service client
     */
    constructor(client: HybridComputeManagementClient);
    /**
     * Lists all the hybrid machines in the specified resource group. Use the nextLink property in the
     * response to get the next page of hybrid machines.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: MachinesListByResourceGroupOptionalParams): PagedAsyncIterableIterator<Machine>;
    private listByResourceGroupPagingPage;
    private listByResourceGroupPagingAll;
    /**
     * Lists all the hybrid machines in the specified subscription. Use the nextLink property in the
     * response to get the next page of hybrid machines.
     * @param options The options parameters.
     */
    listBySubscription(options?: MachinesListBySubscriptionOptionalParams): PagedAsyncIterableIterator<Machine>;
    private listBySubscriptionPagingPage;
    private listBySubscriptionPagingAll;
    /**
     * The operation to remove a hybrid machine identity in Azure.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param machineName The name of the hybrid machine.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, machineName: string, options?: MachinesDeleteOptionalParams): Promise<void>;
    /**
     * Retrieves information about the model view or the instance view of a hybrid machine.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param machineName The name of the hybrid machine.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, machineName: string, options?: MachinesGetOptionalParams): Promise<MachinesGetResponse>;
    /**
     * Lists all the hybrid machines in the specified resource group. Use the nextLink property in the
     * response to get the next page of hybrid machines.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    private _listByResourceGroup;
    /**
     * Lists all the hybrid machines in the specified subscription. Use the nextLink property in the
     * response to get the next page of hybrid machines.
     * @param options The options parameters.
     */
    private _listBySubscription;
    /**
     * ListByResourceGroupNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.
     * @param options The options parameters.
     */
    private _listByResourceGroupNext;
    /**
     * ListBySubscriptionNext
     * @param nextLink The nextLink from the previous successful call to the ListBySubscription method.
     * @param options The options parameters.
     */
    private _listBySubscriptionNext;
}
//# sourceMappingURL=machines.d.ts.map