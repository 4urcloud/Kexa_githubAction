import * as coreClient from "@azure/core-client";
import * as coreAuth from "@azure/core-auth";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { Machines, MachineExtensions, Operations, PrivateLinkScopes, PrivateLinkResources, PrivateEndpointConnections } from "./operationsInterfaces";
import { HybridComputeManagementClientOptionalParams, MachineExtensionUpgrade, UpgradeExtensionsOptionalParams } from "./models";
export declare class HybridComputeManagementClient extends coreClient.ServiceClient {
    $host: string;
    apiVersion: string;
    subscriptionId: string;
    /**
     * Initializes a new instance of the HybridComputeManagementClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId The ID of the target subscription.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: HybridComputeManagementClientOptionalParams);
    /**
     * The operation to Upgrade Machine Extensions.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param machineName The name of the hybrid machine.
     * @param extensionUpgradeParameters Parameters supplied to the Upgrade Extensions operation.
     * @param options The options parameters.
     */
    beginUpgradeExtensions(resourceGroupName: string, machineName: string, extensionUpgradeParameters: MachineExtensionUpgrade, options?: UpgradeExtensionsOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * The operation to Upgrade Machine Extensions.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param machineName The name of the hybrid machine.
     * @param extensionUpgradeParameters Parameters supplied to the Upgrade Extensions operation.
     * @param options The options parameters.
     */
    beginUpgradeExtensionsAndWait(resourceGroupName: string, machineName: string, extensionUpgradeParameters: MachineExtensionUpgrade, options?: UpgradeExtensionsOptionalParams): Promise<void>;
    machines: Machines;
    machineExtensions: MachineExtensions;
    operations: Operations;
    privateLinkScopes: PrivateLinkScopes;
    privateLinkResources: PrivateLinkResources;
    privateEndpointConnections: PrivateEndpointConnections;
}
//# sourceMappingURL=hybridComputeManagementClient.d.ts.map