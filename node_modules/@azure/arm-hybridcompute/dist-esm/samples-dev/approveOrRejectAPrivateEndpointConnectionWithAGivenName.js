/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
/**
 * This sample demonstrates how to Approve or reject a private endpoint connection with a given name.
 *
 * @summary Approve or reject a private endpoint connection with a given name.
 * x-ms-original-file: specification/hybridcompute/resource-manager/Microsoft.HybridCompute/stable/2021-05-20/examples/PrivateEndpointConnectionUpdate.json
 */
import { HybridComputeManagementClient } from "@azure/arm-hybridcompute";
import { DefaultAzureCredential } from "@azure/identity";
function approveOrRejectAPrivateEndpointConnectionWithAGivenName() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "00000000-1111-2222-3333-444444444444";
        const resourceGroupName = "myResourceGroup";
        const scopeName = "myPrivateLinkScope";
        const privateEndpointConnectionName = "private-endpoint-connection-name";
        const parameters = {
            properties: {
                privateLinkServiceConnectionState: {
                    description: "Approved by johndoe@contoso.com",
                    status: "Approved"
                }
            }
        };
        const credential = new DefaultAzureCredential();
        const client = new HybridComputeManagementClient(credential, subscriptionId);
        const result = yield client.privateEndpointConnections.beginCreateOrUpdateAndWait(resourceGroupName, scopeName, privateEndpointConnectionName, parameters);
        console.log(result);
    });
}
approveOrRejectAPrivateEndpointConnectionWithAGivenName().catch(console.error);
//# sourceMappingURL=approveOrRejectAPrivateEndpointConnectionWithAGivenName.js.map