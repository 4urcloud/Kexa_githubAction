import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { VNetPeering } from "../operationsInterfaces";
import { AzureDatabricksManagementClient } from "../azureDatabricksManagementClient";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import { VirtualNetworkPeering, VNetPeeringListByWorkspaceOptionalParams, VNetPeeringGetOptionalParams, VNetPeeringGetResponse, VNetPeeringDeleteOptionalParams, VNetPeeringCreateOrUpdateOptionalParams, VNetPeeringCreateOrUpdateResponse } from "../models";
/** Class containing VNetPeering operations. */
export declare class VNetPeeringImpl implements VNetPeering {
    private readonly client;
    /**
     * Initialize a new instance of the class VNetPeering class.
     * @param client Reference to the service client
     */
    constructor(client: AzureDatabricksManagementClient);
    /**
     * Lists the workspace vNet Peerings.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param options The options parameters.
     */
    listByWorkspace(resourceGroupName: string, workspaceName: string, options?: VNetPeeringListByWorkspaceOptionalParams): PagedAsyncIterableIterator<VirtualNetworkPeering>;
    private listByWorkspacePagingPage;
    private listByWorkspacePagingAll;
    /**
     * Gets the workspace vNet Peering.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param peeringName The name of the workspace vNet peering.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, workspaceName: string, peeringName: string, options?: VNetPeeringGetOptionalParams): Promise<VNetPeeringGetResponse>;
    /**
     * Deletes the workspace vNetPeering.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param peeringName The name of the workspace vNet peering.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, workspaceName: string, peeringName: string, options?: VNetPeeringDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Deletes the workspace vNetPeering.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param peeringName The name of the workspace vNet peering.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, workspaceName: string, peeringName: string, options?: VNetPeeringDeleteOptionalParams): Promise<void>;
    /**
     * Creates vNet Peering for workspace.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param peeringName The name of the workspace vNet peering.
     * @param virtualNetworkPeeringParameters Parameters supplied to the create workspace vNet Peering.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, workspaceName: string, peeringName: string, virtualNetworkPeeringParameters: VirtualNetworkPeering, options?: VNetPeeringCreateOrUpdateOptionalParams): Promise<SimplePollerLike<OperationState<VNetPeeringCreateOrUpdateResponse>, VNetPeeringCreateOrUpdateResponse>>;
    /**
     * Creates vNet Peering for workspace.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param peeringName The name of the workspace vNet peering.
     * @param virtualNetworkPeeringParameters Parameters supplied to the create workspace vNet Peering.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, workspaceName: string, peeringName: string, virtualNetworkPeeringParameters: VirtualNetworkPeering, options?: VNetPeeringCreateOrUpdateOptionalParams): Promise<VNetPeeringCreateOrUpdateResponse>;
    /**
     * Lists the workspace vNet Peerings.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param options The options parameters.
     */
    private _listByWorkspace;
    /**
     * ListByWorkspaceNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param nextLink The nextLink from the previous successful call to the ListByWorkspace method.
     * @param options The options parameters.
     */
    private _listByWorkspaceNext;
}
//# sourceMappingURL=vNetPeering.d.ts.map