import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { AccessConnectors } from "../operationsInterfaces";
import { AzureDatabricksManagementClient } from "../azureDatabricksManagementClient";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import { AccessConnector, AccessConnectorsListByResourceGroupOptionalParams, AccessConnectorsListBySubscriptionOptionalParams, AccessConnectorsGetOptionalParams, AccessConnectorsGetResponse, AccessConnectorsDeleteOptionalParams, AccessConnectorsCreateOrUpdateOptionalParams, AccessConnectorsCreateOrUpdateResponse, AccessConnectorUpdate, AccessConnectorsUpdateOptionalParams, AccessConnectorsUpdateResponse } from "../models";
/** Class containing AccessConnectors operations. */
export declare class AccessConnectorsImpl implements AccessConnectors {
    private readonly client;
    /**
     * Initialize a new instance of the class AccessConnectors class.
     * @param client Reference to the service client
     */
    constructor(client: AzureDatabricksManagementClient);
    /**
     * Gets all the azure databricks accessConnectors within a resource group.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: AccessConnectorsListByResourceGroupOptionalParams): PagedAsyncIterableIterator<AccessConnector>;
    private listByResourceGroupPagingPage;
    private listByResourceGroupPagingAll;
    /**
     * Gets all the azure databricks accessConnectors within a subscription.
     * @param options The options parameters.
     */
    listBySubscription(options?: AccessConnectorsListBySubscriptionOptionalParams): PagedAsyncIterableIterator<AccessConnector>;
    private listBySubscriptionPagingPage;
    private listBySubscriptionPagingAll;
    /**
     * Gets an azure databricks accessConnector.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectorName The name of the azure databricks accessConnector.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, connectorName: string, options?: AccessConnectorsGetOptionalParams): Promise<AccessConnectorsGetResponse>;
    /**
     * Deletes the azure databricks accessConnector.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectorName The name of the azure databricks accessConnector.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, connectorName: string, options?: AccessConnectorsDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Deletes the azure databricks accessConnector.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectorName The name of the azure databricks accessConnector.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, connectorName: string, options?: AccessConnectorsDeleteOptionalParams): Promise<void>;
    /**
     * Creates or updates azure databricks accessConnector.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectorName The name of the azure databricks accessConnector.
     * @param parameters Parameters supplied to the create or update an azure databricks accessConnector.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, connectorName: string, parameters: AccessConnector, options?: AccessConnectorsCreateOrUpdateOptionalParams): Promise<SimplePollerLike<OperationState<AccessConnectorsCreateOrUpdateResponse>, AccessConnectorsCreateOrUpdateResponse>>;
    /**
     * Creates or updates azure databricks accessConnector.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectorName The name of the azure databricks accessConnector.
     * @param parameters Parameters supplied to the create or update an azure databricks accessConnector.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, connectorName: string, parameters: AccessConnector, options?: AccessConnectorsCreateOrUpdateOptionalParams): Promise<AccessConnectorsCreateOrUpdateResponse>;
    /**
     * Updates an azure databricks accessConnector.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectorName The name of the azure databricks accessConnector.
     * @param parameters The update to the azure databricks accessConnector.
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, connectorName: string, parameters: AccessConnectorUpdate, options?: AccessConnectorsUpdateOptionalParams): Promise<SimplePollerLike<OperationState<AccessConnectorsUpdateResponse>, AccessConnectorsUpdateResponse>>;
    /**
     * Updates an azure databricks accessConnector.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param connectorName The name of the azure databricks accessConnector.
     * @param parameters The update to the azure databricks accessConnector.
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, connectorName: string, parameters: AccessConnectorUpdate, options?: AccessConnectorsUpdateOptionalParams): Promise<AccessConnectorsUpdateResponse>;
    /**
     * Gets all the azure databricks accessConnectors within a resource group.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    private _listByResourceGroup;
    /**
     * Gets all the azure databricks accessConnectors within a subscription.
     * @param options The options parameters.
     */
    private _listBySubscription;
    /**
     * ListByResourceGroupNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.
     * @param options The options parameters.
     */
    private _listByResourceGroupNext;
    /**
     * ListBySubscriptionNext
     * @param nextLink The nextLink from the previous successful call to the ListBySubscription method.
     * @param options The options parameters.
     */
    private _listBySubscriptionNext;
}
//# sourceMappingURL=accessConnectors.d.ts.map