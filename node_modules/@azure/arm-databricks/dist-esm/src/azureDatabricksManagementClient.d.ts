import * as coreClient from "@azure/core-client";
import * as coreAuth from "@azure/core-auth";
import { Workspaces, Operations, PrivateLinkResources, PrivateEndpointConnections, OutboundNetworkDependenciesEndpoints, VNetPeering, AccessConnectors } from "./operationsInterfaces";
import { AzureDatabricksManagementClientOptionalParams } from "./models";
export declare class AzureDatabricksManagementClient extends coreClient.ServiceClient {
    $host: string;
    subscriptionId: string;
    /**
     * Initializes a new instance of the AzureDatabricksManagementClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId The ID of the target subscription.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: AzureDatabricksManagementClientOptionalParams);
    workspaces: Workspaces;
    operations: Operations;
    privateLinkResources: PrivateLinkResources;
    privateEndpointConnections: PrivateEndpointConnections;
    outboundNetworkDependenciesEndpoints: OutboundNetworkDependenciesEndpoints;
    vNetPeering: VNetPeering;
    accessConnectors: AccessConnectors;
}
//# sourceMappingURL=azureDatabricksManagementClient.d.ts.map