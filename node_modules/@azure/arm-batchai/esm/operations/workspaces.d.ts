import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import { BatchAIManagementClientContext } from "../batchAIManagementClientContext";
/** Class representing a Workspaces. */
export declare class Workspaces {
    private readonly client;
    /**
     * Create a Workspaces.
     * @param {BatchAIManagementClientContext} client Reference to the service client.
     */
    constructor(client: BatchAIManagementClientContext);
    /**
     * Gets a list of Workspaces associated with the given subscription.
     * @param [options] The optional parameters
     * @returns Promise<Models.WorkspacesListResponse>
     */
    list(options?: Models.WorkspacesListOptionalParams): Promise<Models.WorkspacesListResponse>;
    /**
     * @param callback The callback
     */
    list(callback: msRest.ServiceCallback<Models.WorkspaceListResult>): void;
    /**
     * @param options The optional parameters
     * @param callback The callback
     */
    list(options: Models.WorkspacesListOptionalParams, callback: msRest.ServiceCallback<Models.WorkspaceListResult>): void;
    /**
     * Gets a list of Workspaces within the specified resource group.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param [options] The optional parameters
     * @returns Promise<Models.WorkspacesListByResourceGroupResponse>
     */
    listByResourceGroup(resourceGroupName: string, options?: Models.WorkspacesListByResourceGroupOptionalParams): Promise<Models.WorkspacesListByResourceGroupResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param callback The callback
     */
    listByResourceGroup(resourceGroupName: string, callback: msRest.ServiceCallback<Models.WorkspaceListResult>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByResourceGroup(resourceGroupName: string, options: Models.WorkspacesListByResourceGroupOptionalParams, callback: msRest.ServiceCallback<Models.WorkspaceListResult>): void;
    /**
     * Creates a Workspace.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param workspaceName The name of the workspace. Workspace names can only contain a combination
     * of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1
     * through 64 characters long.
     * @param parameters Workspace creation parameters.
     * @param [options] The optional parameters
     * @returns Promise<Models.WorkspacesCreateResponse>
     */
    create(resourceGroupName: string, workspaceName: string, parameters: Models.WorkspaceCreateParameters, options?: msRest.RequestOptionsBase): Promise<Models.WorkspacesCreateResponse>;
    /**
     * Updates properties of a Workspace.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param workspaceName The name of the workspace. Workspace names can only contain a combination
     * of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1
     * through 64 characters long.
     * @param [options] The optional parameters
     * @returns Promise<Models.WorkspacesUpdateResponse>
     */
    update(resourceGroupName: string, workspaceName: string, options?: Models.WorkspacesUpdateOptionalParams): Promise<Models.WorkspacesUpdateResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param workspaceName The name of the workspace. Workspace names can only contain a combination
     * of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1
     * through 64 characters long.
     * @param callback The callback
     */
    update(resourceGroupName: string, workspaceName: string, callback: msRest.ServiceCallback<Models.Workspace>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param workspaceName The name of the workspace. Workspace names can only contain a combination
     * of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1
     * through 64 characters long.
     * @param options The optional parameters
     * @param callback The callback
     */
    update(resourceGroupName: string, workspaceName: string, options: Models.WorkspacesUpdateOptionalParams, callback: msRest.ServiceCallback<Models.Workspace>): void;
    /**
     * Deletes a Workspace.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param workspaceName The name of the workspace. Workspace names can only contain a combination
     * of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1
     * through 64 characters long.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroupName: string, workspaceName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * Gets information about a Workspace.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param workspaceName The name of the workspace. Workspace names can only contain a combination
     * of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1
     * through 64 characters long.
     * @param [options] The optional parameters
     * @returns Promise<Models.WorkspacesGetResponse>
     */
    get(resourceGroupName: string, workspaceName: string, options?: msRest.RequestOptionsBase): Promise<Models.WorkspacesGetResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param workspaceName The name of the workspace. Workspace names can only contain a combination
     * of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1
     * through 64 characters long.
     * @param callback The callback
     */
    get(resourceGroupName: string, workspaceName: string, callback: msRest.ServiceCallback<Models.Workspace>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param workspaceName The name of the workspace. Workspace names can only contain a combination
     * of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1
     * through 64 characters long.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, workspaceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Workspace>): void;
    /**
     * Creates a Workspace.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param workspaceName The name of the workspace. Workspace names can only contain a combination
     * of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1
     * through 64 characters long.
     * @param parameters Workspace creation parameters.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginCreate(resourceGroupName: string, workspaceName: string, parameters: Models.WorkspaceCreateParameters, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Deletes a Workspace.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param workspaceName The name of the workspace. Workspace names can only contain a combination
     * of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1
     * through 64 characters long.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginDeleteMethod(resourceGroupName: string, workspaceName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Gets a list of Workspaces associated with the given subscription.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.WorkspacesListNextResponse>
     */
    listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.WorkspacesListNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.WorkspaceListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.WorkspaceListResult>): void;
    /**
     * Gets a list of Workspaces within the specified resource group.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.WorkspacesListByResourceGroupNextResponse>
     */
    listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.WorkspacesListByResourceGroupNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByResourceGroupNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.WorkspaceListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByResourceGroupNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.WorkspaceListResult>): void;
}
//# sourceMappingURL=workspaces.d.ts.map