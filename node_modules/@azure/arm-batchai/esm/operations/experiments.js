/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/experimentsMappers";
import * as Parameters from "../models/parameters";
/** Class representing a Experiments. */
var Experiments = /** @class */ (function () {
    /**
     * Create a Experiments.
     * @param {BatchAIManagementClientContext} client Reference to the service client.
     */
    function Experiments(client) {
        this.client = client;
    }
    Experiments.prototype.listByWorkspace = function (resourceGroupName, workspaceName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            workspaceName: workspaceName,
            options: options
        }, listByWorkspaceOperationSpec, callback);
    };
    /**
     * Creates an Experiment.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param workspaceName The name of the workspace. Workspace names can only contain a combination
     * of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1
     * through 64 characters long.
     * @param experimentName The name of the experiment. Experiment names can only contain a
     * combination of alphanumeric characters along with dash (-) and underscore (_). The name must be
     * from 1 through 64 characters long.
     * @param [options] The optional parameters
     * @returns Promise<Models.ExperimentsCreateResponse>
     */
    Experiments.prototype.create = function (resourceGroupName, workspaceName, experimentName, options) {
        return this.beginCreate(resourceGroupName, workspaceName, experimentName, options)
            .then(function (lroPoller) { return lroPoller.pollUntilFinished(); });
    };
    /**
     * Deletes an Experiment.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param workspaceName The name of the workspace. Workspace names can only contain a combination
     * of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1
     * through 64 characters long.
     * @param experimentName The name of the experiment. Experiment names can only contain a
     * combination of alphanumeric characters along with dash (-) and underscore (_). The name must be
     * from 1 through 64 characters long.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    Experiments.prototype.deleteMethod = function (resourceGroupName, workspaceName, experimentName, options) {
        return this.beginDeleteMethod(resourceGroupName, workspaceName, experimentName, options)
            .then(function (lroPoller) { return lroPoller.pollUntilFinished(); });
    };
    Experiments.prototype.get = function (resourceGroupName, workspaceName, experimentName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            workspaceName: workspaceName,
            experimentName: experimentName,
            options: options
        }, getOperationSpec, callback);
    };
    /**
     * Creates an Experiment.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param workspaceName The name of the workspace. Workspace names can only contain a combination
     * of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1
     * through 64 characters long.
     * @param experimentName The name of the experiment. Experiment names can only contain a
     * combination of alphanumeric characters along with dash (-) and underscore (_). The name must be
     * from 1 through 64 characters long.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    Experiments.prototype.beginCreate = function (resourceGroupName, workspaceName, experimentName, options) {
        return this.client.sendLRORequest({
            resourceGroupName: resourceGroupName,
            workspaceName: workspaceName,
            experimentName: experimentName,
            options: options
        }, beginCreateOperationSpec, options);
    };
    /**
     * Deletes an Experiment.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param workspaceName The name of the workspace. Workspace names can only contain a combination
     * of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1
     * through 64 characters long.
     * @param experimentName The name of the experiment. Experiment names can only contain a
     * combination of alphanumeric characters along with dash (-) and underscore (_). The name must be
     * from 1 through 64 characters long.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    Experiments.prototype.beginDeleteMethod = function (resourceGroupName, workspaceName, experimentName, options) {
        return this.client.sendLRORequest({
            resourceGroupName: resourceGroupName,
            workspaceName: workspaceName,
            experimentName: experimentName,
            options: options
        }, beginDeleteMethodOperationSpec, options);
    };
    Experiments.prototype.listByWorkspaceNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listByWorkspaceNextOperationSpec, callback);
    };
    return Experiments;
}());
export { Experiments };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var listByWorkspaceOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/workspaces/{workspaceName}/experiments",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.workspaceName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion,
        Parameters.maxResults2
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.ExperimentListResult
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var getOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/workspaces/{workspaceName}/experiments/{experimentName}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.workspaceName,
        Parameters.experimentName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.Experiment
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var beginCreateOperationSpec = {
    httpMethod: "PUT",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/workspaces/{workspaceName}/experiments/{experimentName}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.workspaceName,
        Parameters.experimentName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.Experiment
        },
        202: {},
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var beginDeleteMethodOperationSpec = {
    httpMethod: "DELETE",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/workspaces/{workspaceName}/experiments/{experimentName}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.workspaceName,
        Parameters.experimentName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {},
        202: {},
        204: {},
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listByWorkspaceNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.ExperimentListResult
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
//# sourceMappingURL=experiments.js.map