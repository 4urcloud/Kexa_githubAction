import * as coreAuth from '@azure/core-auth';
import * as coreClient from '@azure/core-client';
import { PagedAsyncIterableIterator } from '@azure/core-paging';
import { PollerLike } from '@azure/core-lro';
import { PollOperationState } from '@azure/core-lro';

/** Defines values for AccessKeyName. */
export declare type AccessKeyName = "key1" | "key2";

export declare interface AzureSku {
    /** SKU name */
    name: AzureSkuName;
    /** SKU tier */
    tier: AzureSkuTier;
}

/**
 * Defines values for AzureSkuName. \
 * {@link KnownAzureSkuName} can be used interchangeably with AzureSkuName,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **S1**
 */
export declare type AzureSkuName = string;

/**
 * Defines values for AzureSkuTier. \
 * {@link KnownAzureSkuTier} can be used interchangeably with AzureSkuTier,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Standard**
 */
export declare type AzureSkuTier = string;

/**
 * Defines values for CheckNameReason. \
 * {@link KnownCheckNameReason} can be used interchangeably with CheckNameReason,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unavailable** \
 * **Invalid**
 */
export declare type CheckNameReason = string;

export declare interface CheckNameRequest {
    /** Workspace collection name */
    name?: string;
    /** Resource type */
    type?: string;
}

export declare interface CheckNameResponse {
    /** Specifies a Boolean value that indicates whether the specified Power BI Workspace Collection name is available to use. */
    nameAvailable?: boolean;
    /** Reason why the workspace collection name cannot be used. */
    reason?: CheckNameReason;
    /** Message indicating an unavailable name due to a conflict, or a description of the naming rules that are violated. */
    message?: string;
}

export declare interface CreateWorkspaceCollectionRequest {
    /** Azure location */
    location?: string;
    /** Dictionary of <string> */
    tags?: {
        [propertyName: string]: string;
    };
    sku?: AzureSku;
}

export declare interface Display {
    /** The localized friendly form of the resource provider name. This form is also expected to include the publisher/company responsible. Use Title Casing. Begin with "Microsoft" for 1st party services. */
    provider?: string;
    /** The localized friendly form of the resource type related to this action/operation. This form should match the public documentation for the resource provider. Use Title Casing. For examples, refer to the "name" section. */
    resource?: string;
    /** The localized friendly name for the operation as shown to the user. This name should be concise (to fit in drop downs), but clear (self-documenting). Use Title Casing and include the entity/resource to which it applies. */
    operation?: string;
    /** The localized friendly description for the operation as shown to the user. This description should be thorough, yet concise. It will be used in tool-tips and detailed views. */
    description?: string;
    /** The intended executor of the operation; governs the display of the operation in the RBAC UX and the audit logs UX. Default value is 'user,system' */
    origin?: string;
}

export declare interface ErrorDetail {
    code?: string;
    message?: string;
    target?: string;
}

export declare interface ErrorModel {
    code?: string;
    message?: string;
    target?: string;
    details?: ErrorDetail[];
}

/** Optional parameters. */
export declare interface GetAvailableOperationsOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getAvailableOperations operation. */
export declare type GetAvailableOperationsResponse = OperationList;

/**
 * Given a result page from a pageable operation, returns a
 * continuation token that can be used to begin paging from
 * that point later.
 * @param page A result object from calling .byPage() on a paged operation.
 * @returns The continuation token that can be passed into byPage().
 */
export declare function getContinuationToken(page: unknown): string | undefined;

/** Known values of {@link AzureSkuName} that the service accepts. */
export declare enum KnownAzureSkuName {
    /** S1 */
    S1 = "S1"
}

/** Known values of {@link AzureSkuTier} that the service accepts. */
export declare enum KnownAzureSkuTier {
    /** Standard */
    Standard = "Standard"
}

/** Known values of {@link CheckNameReason} that the service accepts. */
export declare enum KnownCheckNameReason {
    /** Unavailable */
    Unavailable = "Unavailable",
    /** Invalid */
    Invalid = "Invalid"
}

export declare interface MigrateWorkspaceCollectionRequest {
    /** Name of the resource group the Power BI workspace collections will be migrated to. */
    targetResourceGroup?: string;
    resources?: string[];
}

export declare interface Operation {
    /** The name of the operation being performed on this particular object. This name should match the action name that appears in RBAC / the event service. */
    name?: string;
    display?: Display;
}

export declare interface OperationList {
    value?: Operation[];
}

export declare class PowerBIEmbeddedManagementClient extends coreClient.ServiceClient {
    $host: string;
    subscriptionId: string;
    apiVersion: string;
    /**
     * Initializes a new instance of the PowerBIEmbeddedManagementClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId Gets subscription credentials which uniquely identify a Microsoft Azure
     *                       subscription. The subscription ID forms part of the URI for every service call.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: PowerBIEmbeddedManagementClientOptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    /**
     * Indicates which operations can be performed by the Power BI Resource Provider.
     * @param options The options parameters.
     */
    getAvailableOperations(options?: GetAvailableOperationsOptionalParams): Promise<GetAvailableOperationsResponse>;
    workspaceCollections: WorkspaceCollections;
    workspaces: Workspaces;
}

/** Optional parameters. */
export declare interface PowerBIEmbeddedManagementClientOptionalParams extends coreClient.ServiceClientOptions {
    /** server parameter */
    $host?: string;
    /** Api Version */
    apiVersion?: string;
    /** Overrides client endpoint. */
    endpoint?: string;
}

export declare interface UpdateWorkspaceCollectionRequest {
    /** Dictionary of <string> */
    tags?: {
        [propertyName: string]: string;
    };
    sku?: AzureSku;
}

export declare interface Workspace {
    /** Workspace id */
    id?: string;
    /** Workspace name */
    name?: string;
    /** Resource type */
    type?: string;
    /** Property bag */
    properties?: Record<string, unknown>;
}

export declare interface WorkspaceCollection {
    /** Resource id */
    id?: string;
    /** Workspace collection name */
    name?: string;
    /** Resource type */
    type?: string;
    /** Azure location */
    location?: string;
    /** Dictionary of <string> */
    tags?: {
        [propertyName: string]: string;
    };
    sku?: AzureSku;
    /** Properties */
    properties?: Record<string, unknown>;
}

export declare interface WorkspaceCollectionAccessKey {
    /** Key name */
    keyName?: AccessKeyName;
}

export declare interface WorkspaceCollectionAccessKeys {
    /** Access key 1 */
    key1?: string;
    /** Access key 2 */
    key2?: string;
}

export declare interface WorkspaceCollectionList {
    value?: WorkspaceCollection[];
}

/** Interface representing a WorkspaceCollections. */
export declare interface WorkspaceCollections {
    /**
     * Retrieves all existing Power BI workspace collections in the specified resource group.
     * @param resourceGroupName Azure resource group
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: WorkspaceCollectionsListByResourceGroupOptionalParams): PagedAsyncIterableIterator<WorkspaceCollection>;
    /**
     * Retrieves all existing Power BI workspace collections in the specified subscription.
     * @param options The options parameters.
     */
    listBySubscription(options?: WorkspaceCollectionsListBySubscriptionOptionalParams): PagedAsyncIterableIterator<WorkspaceCollection>;
    /**
     * Retrieves an existing Power BI Workspace Collection.
     * @param resourceGroupName Azure resource group
     * @param workspaceCollectionName Power BI Embedded Workspace Collection name
     * @param options The options parameters.
     */
    getByName(resourceGroupName: string, workspaceCollectionName: string, options?: WorkspaceCollectionsGetByNameOptionalParams): Promise<WorkspaceCollectionsGetByNameResponse>;
    /**
     * Creates a new Power BI Workspace Collection with the specified properties. A Power BI Workspace
     * Collection contains one or more workspaces, and can be used to provision keys that provide API
     * access to those workspaces.
     * @param resourceGroupName Azure resource group
     * @param workspaceCollectionName Power BI Embedded Workspace Collection name
     * @param body Create workspace collection request
     * @param options The options parameters.
     */
    create(resourceGroupName: string, workspaceCollectionName: string, body: CreateWorkspaceCollectionRequest, options?: WorkspaceCollectionsCreateOptionalParams): Promise<WorkspaceCollectionsCreateResponse>;
    /**
     * Update an existing Power BI Workspace Collection with the specified properties.
     * @param resourceGroupName Azure resource group
     * @param workspaceCollectionName Power BI Embedded Workspace Collection name
     * @param body Update workspace collection request
     * @param options The options parameters.
     */
    update(resourceGroupName: string, workspaceCollectionName: string, body: UpdateWorkspaceCollectionRequest, options?: WorkspaceCollectionsUpdateOptionalParams): Promise<WorkspaceCollectionsUpdateResponse>;
    /**
     * Delete a Power BI Workspace Collection.
     * @param resourceGroupName Azure resource group
     * @param workspaceCollectionName Power BI Embedded Workspace Collection name
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, workspaceCollectionName: string, options?: WorkspaceCollectionsDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Delete a Power BI Workspace Collection.
     * @param resourceGroupName Azure resource group
     * @param workspaceCollectionName Power BI Embedded Workspace Collection name
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, workspaceCollectionName: string, options?: WorkspaceCollectionsDeleteOptionalParams): Promise<void>;
    /**
     * Verify the specified Power BI Workspace Collection name is valid and not already in use.
     * @param location Azure location
     * @param body Check name availability request
     * @param options The options parameters.
     */
    checkNameAvailability(location: string, body: CheckNameRequest, options?: WorkspaceCollectionsCheckNameAvailabilityOptionalParams): Promise<WorkspaceCollectionsCheckNameAvailabilityResponse>;
    /**
     * Retrieves the primary and secondary access keys for the specified Power BI Workspace Collection.
     * @param resourceGroupName Azure resource group
     * @param workspaceCollectionName Power BI Embedded Workspace Collection name
     * @param options The options parameters.
     */
    getAccessKeys(resourceGroupName: string, workspaceCollectionName: string, options?: WorkspaceCollectionsGetAccessKeysOptionalParams): Promise<WorkspaceCollectionsGetAccessKeysResponse>;
    /**
     * Regenerates the primary or secondary access key for the specified Power BI Workspace Collection.
     * @param resourceGroupName Azure resource group
     * @param workspaceCollectionName Power BI Embedded Workspace Collection name
     * @param body Access key to regenerate
     * @param options The options parameters.
     */
    regenerateKey(resourceGroupName: string, workspaceCollectionName: string, body: WorkspaceCollectionAccessKey, options?: WorkspaceCollectionsRegenerateKeyOptionalParams): Promise<WorkspaceCollectionsRegenerateKeyResponse>;
    /**
     * Migrates an existing Power BI Workspace Collection to a different resource group and/or
     * subscription.
     * @param resourceGroupName Azure resource group
     * @param body Workspace migration request
     * @param options The options parameters.
     */
    migrate(resourceGroupName: string, body: MigrateWorkspaceCollectionRequest, options?: WorkspaceCollectionsMigrateOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface WorkspaceCollectionsCheckNameAvailabilityOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the checkNameAvailability operation. */
export declare type WorkspaceCollectionsCheckNameAvailabilityResponse = CheckNameResponse;

/** Optional parameters. */
export declare interface WorkspaceCollectionsCreateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the create operation. */
export declare type WorkspaceCollectionsCreateResponse = WorkspaceCollection;

/** Optional parameters. */
export declare interface WorkspaceCollectionsDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface WorkspaceCollectionsGetAccessKeysOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getAccessKeys operation. */
export declare type WorkspaceCollectionsGetAccessKeysResponse = WorkspaceCollectionAccessKeys;

/** Optional parameters. */
export declare interface WorkspaceCollectionsGetByNameOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getByName operation. */
export declare type WorkspaceCollectionsGetByNameResponse = WorkspaceCollection;

/** Optional parameters. */
export declare interface WorkspaceCollectionsListByResourceGroupOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroup operation. */
export declare type WorkspaceCollectionsListByResourceGroupResponse = WorkspaceCollectionList;

/** Optional parameters. */
export declare interface WorkspaceCollectionsListBySubscriptionOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listBySubscription operation. */
export declare type WorkspaceCollectionsListBySubscriptionResponse = WorkspaceCollectionList;

/** Optional parameters. */
export declare interface WorkspaceCollectionsMigrateOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface WorkspaceCollectionsRegenerateKeyOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the regenerateKey operation. */
export declare type WorkspaceCollectionsRegenerateKeyResponse = WorkspaceCollectionAccessKeys;

/** Optional parameters. */
export declare interface WorkspaceCollectionsUpdateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the update operation. */
export declare type WorkspaceCollectionsUpdateResponse = WorkspaceCollection;

export declare interface WorkspaceList {
    value?: Workspace[];
}

/** Interface representing a Workspaces. */
export declare interface Workspaces {
    /**
     * Retrieves all existing Power BI workspaces in the specified workspace collection.
     * @param resourceGroupName Azure resource group
     * @param workspaceCollectionName Power BI Embedded Workspace Collection name
     * @param options The options parameters.
     */
    list(resourceGroupName: string, workspaceCollectionName: string, options?: WorkspacesListOptionalParams): PagedAsyncIterableIterator<Workspace>;
}

/** Optional parameters. */
export declare interface WorkspacesListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type WorkspacesListResponse = WorkspaceList;

export { }
