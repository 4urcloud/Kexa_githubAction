import * as coreAuth from '@azure/core-auth';
import * as coreClient from '@azure/core-client';
import { PagedAsyncIterableIterator } from '@azure/core-paging';
import { PollerLike } from '@azure/core-lro';
import { PollOperationState } from '@azure/core-lro';

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export declare type CreatedByType = string;

/** Custom Locations definition. */
export declare interface CustomLocation extends TrackedResource {
    /** Identity for the resource. */
    identity?: Identity;
    /**
     * Metadata pertaining to creation and last modification of the resource
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
    /** This is optional input that contains the authentication that should be used to generate the namespace. */
    authentication?: CustomLocationPropertiesAuthentication;
    /** Contains the reference to the add-on that contains charts to deploy CRDs and operators. */
    clusterExtensionIds?: string[];
    /** Display name for the Custom Locations location. */
    displayName?: string;
    /** Connected Cluster or AKS Cluster. The Custom Locations RP will perform a checkAccess API for listAdminCredentials permissions. */
    hostResourceId?: string;
    /** Type of host the Custom Locations is referencing (Kubernetes, etc...). */
    hostType?: HostType;
    /** Kubernetes namespace that will be created on the specified cluster. */
    namespace?: string;
    /** Provisioning State for the Custom Location. */
    provisioningState?: string;
}

/** The Find Target Resource Group operation request. */
export declare interface CustomLocationFindTargetResourceGroupProperties {
    /** Labels of the custom resource, this is a map of {key,value} pairs. */
    labels?: {
        [propertyName: string]: string;
    };
}

/** The Find Target Resource Group operation response. */
export declare interface CustomLocationFindTargetResourceGroupResult {
    /**
     * The matching resource sync rule is the particular resource sync rule that matched the match expressions and labels and had lowest priority. This is the rule responsible for mapping the target resource to the target resource group.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly matchedResourceSyncRule?: string;
    /**
     * The target resource group of matching resource sync rule. The labels from the request will be used to find out matching resource sync rule against the selector property of the resource sync rule. The one with highest priority will be returned if there are multiple matching rules.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly targetResourceGroup?: string;
}

/** The List Custom Locations operation response. */
export declare interface CustomLocationListResult {
    /**
     * The URL to use for getting the next set of results.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
    /**
     * The list of Custom Locations.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: CustomLocation[];
}

/** Custom Locations operation. */
export declare interface CustomLocationOperation {
    /**
     * Is this Operation a data plane operation
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly isDataAction?: boolean;
    /**
     * The name of the compute operation.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * The origin of the compute operation.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly origin?: string;
    /**
     * The description of the operation.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly description?: string;
    /**
     * The display name of the compute operation.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly operation?: string;
    /**
     * The resource provider for the operation.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provider?: string;
    /**
     * The display name of the resource the operation applies to.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly resource?: string;
}

/** Lists of Custom Locations operations. */
export declare interface CustomLocationOperationsList {
    /** Next page of operations. */
    nextLink?: string;
    /** Array of customLocationOperation */
    value: CustomLocationOperation[];
}

/** This is optional input that contains the authentication that should be used to generate the namespace. */
export declare interface CustomLocationPropertiesAuthentication {
    /** The type of the Custom Locations authentication */
    type?: string;
    /** The kubeconfig value. */
    value?: string;
}

/** Interface representing a CustomLocations. */
export declare interface CustomLocations {
    /**
     * Lists all available Custom Locations operations.
     * @param options The options parameters.
     */
    listOperations(options?: CustomLocationsListOperationsOptionalParams): PagedAsyncIterableIterator<CustomLocationOperation>;
    /**
     * Gets a list of Custom Locations in the specified subscription. The operation returns properties of
     * each Custom Location
     * @param options The options parameters.
     */
    listBySubscription(options?: CustomLocationsListBySubscriptionOptionalParams): PagedAsyncIterableIterator<CustomLocation>;
    /**
     * Gets a list of Custom Locations in the specified subscription and resource group. The operation
     * returns properties of each Custom Location.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: CustomLocationsListByResourceGroupOptionalParams): PagedAsyncIterableIterator<CustomLocation>;
    /**
     * Gets the list of the Enabled Resource Types.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName Custom Locations name.
     * @param options The options parameters.
     */
    listEnabledResourceTypes(resourceGroupName: string, resourceName: string, options?: CustomLocationsListEnabledResourceTypesOptionalParams): PagedAsyncIterableIterator<EnabledResourceType>;
    /**
     * Gets the details of the customLocation with a specified resource group and name.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName Custom Locations name.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, resourceName: string, options?: CustomLocationsGetOptionalParams): Promise<CustomLocationsGetResponse>;
    /**
     * Creates or updates a Custom Location in the specified Subscription and Resource Group
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName Custom Locations name.
     * @param parameters Parameters supplied to create or update a Custom Location.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, resourceName: string, parameters: CustomLocation, options?: CustomLocationsCreateOrUpdateOptionalParams): Promise<PollerLike<PollOperationState<CustomLocationsCreateOrUpdateResponse>, CustomLocationsCreateOrUpdateResponse>>;
    /**
     * Creates or updates a Custom Location in the specified Subscription and Resource Group
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName Custom Locations name.
     * @param parameters Parameters supplied to create or update a Custom Location.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, resourceName: string, parameters: CustomLocation, options?: CustomLocationsCreateOrUpdateOptionalParams): Promise<CustomLocationsCreateOrUpdateResponse>;
    /**
     * Deletes the Custom Location with the specified Resource Name, Resource Group, and Subscription Id.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName Custom Locations name.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, resourceName: string, options?: CustomLocationsDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Deletes the Custom Location with the specified Resource Name, Resource Group, and Subscription Id.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName Custom Locations name.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, resourceName: string, options?: CustomLocationsDeleteOptionalParams): Promise<void>;
    /**
     * Updates a Custom Location with the specified Resource Name in the specified Resource Group and
     * Subscription.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName Custom Locations name.
     * @param options The options parameters.
     */
    update(resourceGroupName: string, resourceName: string, options?: CustomLocationsUpdateOptionalParams): Promise<CustomLocationsUpdateResponse>;
    /**
     * Returns the target resource group associated with the resource sync rules of the Custom Location
     * that match the rules passed in with the Find Target Resource Group Request.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName Custom Locations name.
     * @param parameters Parameters of the find target resource group request.
     * @param options The options parameters.
     */
    findTargetResourceGroup(resourceGroupName: string, resourceName: string, parameters: CustomLocationFindTargetResourceGroupProperties, options?: CustomLocationsFindTargetResourceGroupOptionalParams): Promise<CustomLocationsFindTargetResourceGroupResponse>;
}

/** Optional parameters. */
export declare interface CustomLocationsCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export declare type CustomLocationsCreateOrUpdateResponse = CustomLocation;

/** Optional parameters. */
export declare interface CustomLocationsDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface CustomLocationsFindTargetResourceGroupOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the findTargetResourceGroup operation. */
export declare type CustomLocationsFindTargetResourceGroupResponse = CustomLocationFindTargetResourceGroupResult;

/** Optional parameters. */
export declare interface CustomLocationsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type CustomLocationsGetResponse = CustomLocation;

/** Optional parameters. */
export declare interface CustomLocationsListByResourceGroupNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroupNext operation. */
export declare type CustomLocationsListByResourceGroupNextResponse = CustomLocationListResult;

/** Optional parameters. */
export declare interface CustomLocationsListByResourceGroupOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroup operation. */
export declare type CustomLocationsListByResourceGroupResponse = CustomLocationListResult;

/** Optional parameters. */
export declare interface CustomLocationsListBySubscriptionNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listBySubscriptionNext operation. */
export declare type CustomLocationsListBySubscriptionNextResponse = CustomLocationListResult;

/** Optional parameters. */
export declare interface CustomLocationsListBySubscriptionOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listBySubscription operation. */
export declare type CustomLocationsListBySubscriptionResponse = CustomLocationListResult;

/** Optional parameters. */
export declare interface CustomLocationsListEnabledResourceTypesNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listEnabledResourceTypesNext operation. */
export declare type CustomLocationsListEnabledResourceTypesNextResponse = EnabledResourceTypesListResult;

/** Optional parameters. */
export declare interface CustomLocationsListEnabledResourceTypesOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listEnabledResourceTypes operation. */
export declare type CustomLocationsListEnabledResourceTypesResponse = EnabledResourceTypesListResult;

/** Optional parameters. */
export declare interface CustomLocationsListOperationsNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listOperationsNext operation. */
export declare type CustomLocationsListOperationsNextResponse = CustomLocationOperationsList;

/** Optional parameters. */
export declare interface CustomLocationsListOperationsOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listOperations operation. */
export declare type CustomLocationsListOperationsResponse = CustomLocationOperationsList;

export declare class CustomLocationsManagementClient extends coreClient.ServiceClient {
    $host: string;
    apiVersion: string;
    subscriptionId: string;
    /**
     * Initializes a new instance of the CustomLocationsManagementClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId The ID of the target subscription.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: CustomLocationsManagementClientOptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    customLocations: CustomLocations;
    resourceSyncRules: ResourceSyncRules;
}

/** Optional parameters. */
export declare interface CustomLocationsManagementClientOptionalParams extends coreClient.ServiceClientOptions {
    /** server parameter */
    $host?: string;
    /** Api Version */
    apiVersion?: string;
    /** Overrides client endpoint. */
    endpoint?: string;
}

/** Optional parameters. */
export declare interface CustomLocationsUpdateOptionalParams extends coreClient.OperationOptions {
    /** Identity for the resource. */
    identity?: Identity;
    /** Resource tags */
    tags?: {
        [propertyName: string]: string;
    };
    /** This is optional input that contains the authentication that should be used to generate the namespace. */
    authentication?: CustomLocationPropertiesAuthentication;
    /** Contains the reference to the add-on that contains charts to deploy CRDs and operators. */
    clusterExtensionIds?: string[];
    /** Display name for the Custom Locations location. */
    displayName?: string;
    /** Connected Cluster or AKS Cluster. The Custom Locations RP will perform a checkAccess API for listAdminCredentials permissions. */
    hostResourceId?: string;
    /** Type of host the Custom Locations is referencing (Kubernetes, etc...). */
    hostType?: HostType;
    /** Kubernetes namespace that will be created on the specified cluster. */
    namespace?: string;
    /** Provisioning State for the Custom Location. */
    provisioningState?: string;
}

/** Contains response data for the update operation. */
export declare type CustomLocationsUpdateResponse = CustomLocation;

/** EnabledResourceType definition. */
export declare interface EnabledResourceType extends ProxyResource {
    /**
     * Metadata pertaining to creation and last modification of the resource
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
    /** Cluster Extension ID */
    clusterExtensionId?: string;
    /** Cluster Extension Type */
    extensionType?: string;
    /** Metadata of the Resource Type */
    typesMetadata?: EnabledResourceTypePropertiesTypesMetadataItem[];
}

/** Metadata of the Resource Type. */
export declare interface EnabledResourceTypePropertiesTypesMetadataItem {
    /** Api Version of Resource Type */
    apiVersion?: string;
    /** Resource Provider Namespace of Resource Type */
    resourceProviderNamespace?: string;
    /** Resource Type */
    resourceType?: string;
}

/** List of EnabledResourceTypes definition. */
export declare interface EnabledResourceTypesListResult {
    /**
     * The URL to use for getting the next set of results.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
    /**
     * The list of EnabledResourceTypes available for a customLocation.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: EnabledResourceType[];
}

/** The resource management error additional info. */
export declare interface ErrorAdditionalInfo {
    /**
     * The additional info type.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /**
     * The additional info.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly info?: Record<string, unknown>;
}

/** The error detail. */
export declare interface ErrorDetail {
    /**
     * The error code.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly code?: string;
    /**
     * The error message.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly message?: string;
    /**
     * The error target.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly target?: string;
    /**
     * The error details.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly details?: ErrorDetail[];
    /**
     * The error additional info.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export declare interface ErrorResponse {
    /** The error object. */
    error?: ErrorDetail;
}

/**
 * Given the last `.value` produced by the `byPage` iterator,
 * returns a continuation token that can be used to begin paging from
 * that point later.
 * @param page An object from accessing `value` on the IteratorResult from a `byPage` iterator.
 * @returns The continuation token that can be passed into byPage() during future calls.
 */
export declare function getContinuationToken(page: unknown): string | undefined;

/**
 * Defines values for HostType. \
 * {@link KnownHostType} can be used interchangeably with HostType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Kubernetes**
 */
export declare type HostType = string;

/** Identity for the resource. */
export declare interface Identity {
    /**
     * The principal ID of resource identity.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly principalId?: string;
    /**
     * The tenant ID of resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly tenantId?: string;
    /** The identity type. */
    type?: ResourceIdentityType;
}

/** Known values of {@link CreatedByType} that the service accepts. */
export declare enum KnownCreatedByType {
    /** User */
    User = "User",
    /** Application */
    Application = "Application",
    /** ManagedIdentity */
    ManagedIdentity = "ManagedIdentity",
    /** Key */
    Key = "Key"
}

/** Known values of {@link HostType} that the service accepts. */
export declare enum KnownHostType {
    /** Kubernetes */
    Kubernetes = "Kubernetes"
}

/** Known values of {@link ResourceIdentityType} that the service accepts. */
export declare enum KnownResourceIdentityType {
    /** SystemAssigned */
    SystemAssigned = "SystemAssigned",
    /** None */
    None = "None"
}

/** Resource Sync Rules matchExpression property definition. */
export declare interface MatchExpressionsProperties {
    /** Key is the label key that the selector applies to. */
    key?: string;
    /** The Operator field represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist. */
    operator?: string;
    /** The label value */
    values?: string[];
}

/** The Custom Locations patchable resource definition. */
export declare interface PatchableCustomLocations {
    /** Identity for the resource. */
    identity?: Identity;
    /** Resource tags */
    tags?: {
        [propertyName: string]: string;
    };
    /** This is optional input that contains the authentication that should be used to generate the namespace. */
    authentication?: CustomLocationPropertiesAuthentication;
    /** Contains the reference to the add-on that contains charts to deploy CRDs and operators. */
    clusterExtensionIds?: string[];
    /** Display name for the Custom Locations location. */
    displayName?: string;
    /** Connected Cluster or AKS Cluster. The Custom Locations RP will perform a checkAccess API for listAdminCredentials permissions. */
    hostResourceId?: string;
    /** Type of host the Custom Locations is referencing (Kubernetes, etc...). */
    hostType?: HostType;
    /** Kubernetes namespace that will be created on the specified cluster. */
    namespace?: string;
    /** Provisioning State for the Custom Location. */
    provisioningState?: string;
}

/** The Resource Sync Rules patchable resource definition. */
export declare interface PatchableResourceSyncRule {
    /** Resource tags */
    tags?: {
        [propertyName: string]: string;
    };
    /** Priority represents a priority of the Resource Sync Rule */
    priority?: number;
    /**
     * Provisioning State for the Resource Sync Rule.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: string;
    /** A label selector is composed of two parts, matchLabels and matchExpressions. The first part, matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is 'key', the operator is 'In', and the values array contains only 'value'. The second part, matchExpressions is a list of resource selector requirements. Valid operators include In, NotIn, Exists, and DoesNotExist. The values set must be non-empty in the case of In and NotIn. The values set must be empty in the case of Exists and DoesNotExist. All of the requirements, from both matchLabels and matchExpressions must all be satisfied in order to match. */
    selector?: ResourceSyncRulePropertiesSelector;
    /** For an unmapped custom resource, its labels will be used to find matching resource sync rules. If this resource sync rule is one of the matching rules with highest priority, then the unmapped custom resource will be projected to the target resource group associated with this resource sync rule. The user creating this resource sync rule should have write permissions on the target resource group and this write permission will be validated when creating the resource sync rule. */
    targetResourceGroup?: string;
}

/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */
export declare interface ProxyResource extends Resource {
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export declare interface Resource {
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /**
     * The name of the resource
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
}

/**
 * Defines values for ResourceIdentityType. \
 * {@link KnownResourceIdentityType} can be used interchangeably with ResourceIdentityType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **SystemAssigned** \
 * **None**
 */
export declare type ResourceIdentityType = string;

/** Resource Sync Rules definition. */
export declare interface ResourceSyncRule extends TrackedResource {
    /**
     * Metadata pertaining to creation and last modification of the resource
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
    /** Priority represents a priority of the Resource Sync Rule */
    priority?: number;
    /**
     * Provisioning State for the Resource Sync Rule.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: string;
    /** A label selector is composed of two parts, matchLabels and matchExpressions. The first part, matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is 'key', the operator is 'In', and the values array contains only 'value'. The second part, matchExpressions is a list of resource selector requirements. Valid operators include In, NotIn, Exists, and DoesNotExist. The values set must be non-empty in the case of In and NotIn. The values set must be empty in the case of Exists and DoesNotExist. All of the requirements, from both matchLabels and matchExpressions must all be satisfied in order to match. */
    selector?: ResourceSyncRulePropertiesSelector;
    /** For an unmapped custom resource, its labels will be used to find matching resource sync rules. If this resource sync rule is one of the matching rules with highest priority, then the unmapped custom resource will be projected to the target resource group associated with this resource sync rule. The user creating this resource sync rule should have write permissions on the target resource group and this write permission will be validated when creating the resource sync rule. */
    targetResourceGroup?: string;
}

/** The List Resource Sync Rules operation response. */
export declare interface ResourceSyncRuleListResult {
    /**
     * The URL to use for getting the next set of results.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
    /**
     * The list of Resource Sync Rules.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: ResourceSyncRule[];
}

/** A label selector is composed of two parts, matchLabels and matchExpressions. The first part, matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is 'key', the operator is 'In', and the values array contains only 'value'. The second part, matchExpressions is a list of resource selector requirements. Valid operators include In, NotIn, Exists, and DoesNotExist. The values set must be non-empty in the case of In and NotIn. The values set must be empty in the case of Exists and DoesNotExist. All of the requirements, from both matchLabels and matchExpressions must all be satisfied in order to match. */
export declare interface ResourceSyncRulePropertiesSelector {
    /** MatchExpressions is a list of resource selector requirements. Valid operators include In, NotIn, Exists, and DoesNotExist. The values set must be non-empty in the case of In and NotIn. The values set must be empty in the case of Exists and DoesNotExist. */
    matchExpressions?: MatchExpressionsProperties[];
    /** MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is 'key', the operator is 'In', and the values array contains only 'value'. */
    matchLabels?: {
        [propertyName: string]: string;
    };
}

/** Interface representing a ResourceSyncRules. */
export declare interface ResourceSyncRules {
    /**
     * Gets a list of Resource Sync Rules in the specified subscription. The operation returns properties
     * of each Resource Sync Rule
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName Custom Locations name.
     * @param options The options parameters.
     */
    listByCustomLocationID(resourceGroupName: string, resourceName: string, options?: ResourceSyncRulesListByCustomLocationIDOptionalParams): PagedAsyncIterableIterator<ResourceSyncRule>;
    /**
     * Gets the details of the resourceSyncRule with a specified resource group, subscription id Custom
     * Location resource name and Resource Sync Rule name.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName Custom Locations name.
     * @param childResourceName Resource Sync Rule name.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, resourceName: string, childResourceName: string, options?: ResourceSyncRulesGetOptionalParams): Promise<ResourceSyncRulesGetResponse>;
    /**
     * Creates or updates a Resource Sync Rule in the parent Custom Location, Subscription Id and Resource
     * Group
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName Custom Locations name.
     * @param childResourceName Resource Sync Rule name.
     * @param parameters Parameters supplied to create or update a Resource Sync Rule.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, resourceName: string, childResourceName: string, parameters: ResourceSyncRule, options?: ResourceSyncRulesCreateOrUpdateOptionalParams): Promise<PollerLike<PollOperationState<ResourceSyncRulesCreateOrUpdateResponse>, ResourceSyncRulesCreateOrUpdateResponse>>;
    /**
     * Creates or updates a Resource Sync Rule in the parent Custom Location, Subscription Id and Resource
     * Group
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName Custom Locations name.
     * @param childResourceName Resource Sync Rule name.
     * @param parameters Parameters supplied to create or update a Resource Sync Rule.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, resourceName: string, childResourceName: string, parameters: ResourceSyncRule, options?: ResourceSyncRulesCreateOrUpdateOptionalParams): Promise<ResourceSyncRulesCreateOrUpdateResponse>;
    /**
     * Deletes the Resource Sync Rule with the specified Resource Sync Rule Name, Custom Location Resource
     * Name, Resource Group, and Subscription Id.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName Custom Locations name.
     * @param childResourceName Resource Sync Rule name.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, resourceName: string, childResourceName: string, options?: ResourceSyncRulesDeleteOptionalParams): Promise<void>;
    /**
     * Updates a Resource Sync Rule with the specified Resource Sync Rule name in the specified Resource
     * Group, Subscription and Custom Location name.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName Custom Locations name.
     * @param childResourceName Resource Sync Rule name.
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, resourceName: string, childResourceName: string, options?: ResourceSyncRulesUpdateOptionalParams): Promise<PollerLike<PollOperationState<ResourceSyncRulesUpdateResponse>, ResourceSyncRulesUpdateResponse>>;
    /**
     * Updates a Resource Sync Rule with the specified Resource Sync Rule name in the specified Resource
     * Group, Subscription and Custom Location name.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName Custom Locations name.
     * @param childResourceName Resource Sync Rule name.
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, resourceName: string, childResourceName: string, options?: ResourceSyncRulesUpdateOptionalParams): Promise<ResourceSyncRulesUpdateResponse>;
}

/** Optional parameters. */
export declare interface ResourceSyncRulesCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export declare type ResourceSyncRulesCreateOrUpdateResponse = ResourceSyncRule;

/** Optional parameters. */
export declare interface ResourceSyncRulesDeleteOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface ResourceSyncRulesGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type ResourceSyncRulesGetResponse = ResourceSyncRule;

/** Optional parameters. */
export declare interface ResourceSyncRulesListByCustomLocationIDNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByCustomLocationIDNext operation. */
export declare type ResourceSyncRulesListByCustomLocationIDNextResponse = ResourceSyncRuleListResult;

/** Optional parameters. */
export declare interface ResourceSyncRulesListByCustomLocationIDOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByCustomLocationID operation. */
export declare type ResourceSyncRulesListByCustomLocationIDResponse = ResourceSyncRuleListResult;

/** Optional parameters. */
export declare interface ResourceSyncRulesUpdateOptionalParams extends coreClient.OperationOptions {
    /** Resource tags */
    tags?: {
        [propertyName: string]: string;
    };
    /** Priority represents a priority of the Resource Sync Rule */
    priority?: number;
    /** A label selector is composed of two parts, matchLabels and matchExpressions. The first part, matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is 'key', the operator is 'In', and the values array contains only 'value'. The second part, matchExpressions is a list of resource selector requirements. Valid operators include In, NotIn, Exists, and DoesNotExist. The values set must be non-empty in the case of In and NotIn. The values set must be empty in the case of Exists and DoesNotExist. All of the requirements, from both matchLabels and matchExpressions must all be satisfied in order to match. */
    selector?: ResourceSyncRulePropertiesSelector;
    /** For an unmapped custom resource, its labels will be used to find matching resource sync rules. If this resource sync rule is one of the matching rules with highest priority, then the unmapped custom resource will be projected to the target resource group associated with this resource sync rule. The user creating this resource sync rule should have write permissions on the target resource group and this write permission will be validated when creating the resource sync rule. */
    targetResourceGroup?: string;
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the update operation. */
export declare type ResourceSyncRulesUpdateResponse = ResourceSyncRule;

/** Metadata pertaining to creation and last modification of the resource. */
export declare interface SystemData {
    /** The identity that created the resource. */
    createdBy?: string;
    /** The type of identity that created the resource. */
    createdByType?: CreatedByType;
    /** The timestamp of resource creation (UTC). */
    createdAt?: Date;
    /** The identity that last modified the resource. */
    lastModifiedBy?: string;
    /** The type of identity that last modified the resource. */
    lastModifiedByType?: CreatedByType;
    /** The timestamp of resource last modification (UTC) */
    lastModifiedAt?: Date;
}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export declare interface TrackedResource extends Resource {
    /** Resource tags. */
    tags?: {
        [propertyName: string]: string;
    };
    /** The geo-location where the resource lives */
    location: string;
}

export { }
