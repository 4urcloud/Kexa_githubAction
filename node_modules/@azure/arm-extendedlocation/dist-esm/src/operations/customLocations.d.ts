import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { CustomLocations } from "../operationsInterfaces";
import { CustomLocationsManagementClient } from "../customLocationsManagementClient";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { CustomLocationOperation, CustomLocationsListOperationsOptionalParams, CustomLocation, CustomLocationsListBySubscriptionOptionalParams, CustomLocationsListByResourceGroupOptionalParams, EnabledResourceType, CustomLocationsListEnabledResourceTypesOptionalParams, CustomLocationsGetOptionalParams, CustomLocationsGetResponse, CustomLocationsCreateOrUpdateOptionalParams, CustomLocationsCreateOrUpdateResponse, CustomLocationsDeleteOptionalParams, CustomLocationsUpdateOptionalParams, CustomLocationsUpdateResponse, CustomLocationFindTargetResourceGroupProperties, CustomLocationsFindTargetResourceGroupOptionalParams, CustomLocationsFindTargetResourceGroupResponse } from "../models";
/** Class containing CustomLocations operations. */
export declare class CustomLocationsImpl implements CustomLocations {
    private readonly client;
    /**
     * Initialize a new instance of the class CustomLocations class.
     * @param client Reference to the service client
     */
    constructor(client: CustomLocationsManagementClient);
    /**
     * Lists all available Custom Locations operations.
     * @param options The options parameters.
     */
    listOperations(options?: CustomLocationsListOperationsOptionalParams): PagedAsyncIterableIterator<CustomLocationOperation>;
    private listOperationsPagingPage;
    private listOperationsPagingAll;
    /**
     * Gets a list of Custom Locations in the specified subscription. The operation returns properties of
     * each Custom Location
     * @param options The options parameters.
     */
    listBySubscription(options?: CustomLocationsListBySubscriptionOptionalParams): PagedAsyncIterableIterator<CustomLocation>;
    private listBySubscriptionPagingPage;
    private listBySubscriptionPagingAll;
    /**
     * Gets a list of Custom Locations in the specified subscription and resource group. The operation
     * returns properties of each Custom Location.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: CustomLocationsListByResourceGroupOptionalParams): PagedAsyncIterableIterator<CustomLocation>;
    private listByResourceGroupPagingPage;
    private listByResourceGroupPagingAll;
    /**
     * Gets the list of the Enabled Resource Types.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName Custom Locations name.
     * @param options The options parameters.
     */
    listEnabledResourceTypes(resourceGroupName: string, resourceName: string, options?: CustomLocationsListEnabledResourceTypesOptionalParams): PagedAsyncIterableIterator<EnabledResourceType>;
    private listEnabledResourceTypesPagingPage;
    private listEnabledResourceTypesPagingAll;
    /**
     * Lists all available Custom Locations operations.
     * @param options The options parameters.
     */
    private _listOperations;
    /**
     * Gets a list of Custom Locations in the specified subscription. The operation returns properties of
     * each Custom Location
     * @param options The options parameters.
     */
    private _listBySubscription;
    /**
     * Gets a list of Custom Locations in the specified subscription and resource group. The operation
     * returns properties of each Custom Location.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    private _listByResourceGroup;
    /**
     * Gets the details of the customLocation with a specified resource group and name.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName Custom Locations name.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, resourceName: string, options?: CustomLocationsGetOptionalParams): Promise<CustomLocationsGetResponse>;
    /**
     * Creates or updates a Custom Location in the specified Subscription and Resource Group
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName Custom Locations name.
     * @param parameters Parameters supplied to create or update a Custom Location.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, resourceName: string, parameters: CustomLocation, options?: CustomLocationsCreateOrUpdateOptionalParams): Promise<PollerLike<PollOperationState<CustomLocationsCreateOrUpdateResponse>, CustomLocationsCreateOrUpdateResponse>>;
    /**
     * Creates or updates a Custom Location in the specified Subscription and Resource Group
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName Custom Locations name.
     * @param parameters Parameters supplied to create or update a Custom Location.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, resourceName: string, parameters: CustomLocation, options?: CustomLocationsCreateOrUpdateOptionalParams): Promise<CustomLocationsCreateOrUpdateResponse>;
    /**
     * Deletes the Custom Location with the specified Resource Name, Resource Group, and Subscription Id.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName Custom Locations name.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, resourceName: string, options?: CustomLocationsDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Deletes the Custom Location with the specified Resource Name, Resource Group, and Subscription Id.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName Custom Locations name.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, resourceName: string, options?: CustomLocationsDeleteOptionalParams): Promise<void>;
    /**
     * Updates a Custom Location with the specified Resource Name in the specified Resource Group and
     * Subscription.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName Custom Locations name.
     * @param options The options parameters.
     */
    update(resourceGroupName: string, resourceName: string, options?: CustomLocationsUpdateOptionalParams): Promise<CustomLocationsUpdateResponse>;
    /**
     * Gets the list of the Enabled Resource Types.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName Custom Locations name.
     * @param options The options parameters.
     */
    private _listEnabledResourceTypes;
    /**
     * Returns the target resource group associated with the resource sync rules of the Custom Location
     * that match the rules passed in with the Find Target Resource Group Request.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName Custom Locations name.
     * @param parameters Parameters of the find target resource group request.
     * @param options The options parameters.
     */
    findTargetResourceGroup(resourceGroupName: string, resourceName: string, parameters: CustomLocationFindTargetResourceGroupProperties, options?: CustomLocationsFindTargetResourceGroupOptionalParams): Promise<CustomLocationsFindTargetResourceGroupResponse>;
    /**
     * ListOperationsNext
     * @param nextLink The nextLink from the previous successful call to the ListOperations method.
     * @param options The options parameters.
     */
    private _listOperationsNext;
    /**
     * ListBySubscriptionNext
     * @param nextLink The nextLink from the previous successful call to the ListBySubscription method.
     * @param options The options parameters.
     */
    private _listBySubscriptionNext;
    /**
     * ListByResourceGroupNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.
     * @param options The options parameters.
     */
    private _listByResourceGroupNext;
    /**
     * ListEnabledResourceTypesNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName Custom Locations name.
     * @param nextLink The nextLink from the previous successful call to the ListEnabledResourceTypes
     *                 method.
     * @param options The options parameters.
     */
    private _listEnabledResourceTypesNext;
}
//# sourceMappingURL=customLocations.d.ts.map