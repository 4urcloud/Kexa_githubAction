import * as coreAuth from '@azure/core-auth';
import * as coreClient from '@azure/core-client';
import { OperationState } from '@azure/core-lro';
import { PagedAsyncIterableIterator } from '@azure/core-paging';
import { SimplePollerLike } from '@azure/core-lro';

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Internal**
 */
export declare type ActionType = string;

/**
 * Defines values for ApiKey. \
 * {@link KnownApiKey} can be used interchangeably with ApiKey,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Disabled** \
 * **Enabled**
 */
export declare type ApiKey = string;

/**
 * Defines values for AutoGeneratedDomainNameLabelScope. \
 * {@link KnownAutoGeneratedDomainNameLabelScope} can be used interchangeably with AutoGeneratedDomainNameLabelScope,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **TenantReuse**
 */
export declare type AutoGeneratedDomainNameLabelScope = string;

/**
 * Defines values for AvailablePromotion. \
 * {@link KnownAvailablePromotion} can be used interchangeably with AvailablePromotion,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **FreeTrial**
 */
export declare type AvailablePromotion = string;

/** Integrations for Azure Monitor Workspace. */
export declare interface AzureMonitorWorkspaceIntegration {
    /** The resource Id of the connected Azure Monitor Workspace. */
    azureMonitorWorkspaceResourceId?: string;
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export declare type CreatedByType = string;

export declare class DashboardManagementClient extends coreClient.ServiceClient {
    $host: string;
    apiVersion: string;
    subscriptionId: string;
    /**
     * Initializes a new instance of the DashboardManagementClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId The ID of the target subscription.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: DashboardManagementClientOptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    operations: Operations;
    grafana: Grafana;
    privateEndpointConnections: PrivateEndpointConnections;
    privateLinkResources: PrivateLinkResources;
    managedPrivateEndpoints: ManagedPrivateEndpoints;
}

/** Optional parameters. */
export declare interface DashboardManagementClientOptionalParams extends coreClient.ServiceClientOptions {
    /** server parameter */
    $host?: string;
    /** Api Version */
    apiVersion?: string;
    /** Overrides client endpoint. */
    endpoint?: string;
}

/**
 * Defines values for DeterministicOutboundIP. \
 * {@link KnownDeterministicOutboundIP} can be used interchangeably with DeterministicOutboundIP,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Disabled** \
 * **Enabled**
 */
export declare type DeterministicOutboundIP = string;

/** Enterprise settings of a Grafana instance */
export declare interface EnterpriseConfigurations {
    /** The Plan Id of the Azure Marketplace subscription for the Enterprise plugins */
    marketplacePlanId?: string;
    /** The AutoRenew setting of the Enterprise subscription */
    marketplaceAutoRenew?: MarketplaceAutoRenew;
}

/** Enterprise details of a Grafana instance */
export declare interface EnterpriseDetails {
    /** SaaS subscription details of a Grafana instance */
    saasSubscriptionDetails?: SaasSubscriptionDetails;
    /** The allocation details of the per subscription free trial slot of the subscription. */
    marketplaceTrialQuota?: MarketplaceTrialQuota;
}

/** The resource management error additional info. */
export declare interface ErrorAdditionalInfo {
    /**
     * The additional info type.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /**
     * The additional info.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly info?: Record<string, unknown>;
}

/** The error detail. */
export declare interface ErrorDetail {
    /**
     * The error code.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly code?: string;
    /**
     * The error message.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly message?: string;
    /**
     * The error target.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly target?: string;
    /**
     * The error details.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly details?: ErrorDetail[];
    /**
     * The error additional info.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export declare interface ErrorResponse {
    /** The error object. */
    error?: ErrorDetail;
}

/**
 * Given the last `.value` produced by the `byPage` iterator,
 * returns a continuation token that can be used to begin paging from
 * that point later.
 * @param page An object from accessing `value` on the IteratorResult from a `byPage` iterator.
 * @returns The continuation token that can be passed into byPage() during future calls.
 */
export declare function getContinuationToken(page: unknown): string | undefined;

/** Interface representing a Grafana. */
export declare interface Grafana {
    /**
     * List all resources of workspaces for Grafana under the specified subscription.
     * @param options The options parameters.
     */
    list(options?: GrafanaListOptionalParams): PagedAsyncIterableIterator<ManagedGrafana>;
    /**
     * List all resources of workspaces for Grafana under the specified resource group.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: GrafanaListByResourceGroupOptionalParams): PagedAsyncIterableIterator<ManagedGrafana>;
    /**
     * Get the properties of a specific workspace for Grafana resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The workspace name of Azure Managed Grafana.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, workspaceName: string, options?: GrafanaGetOptionalParams): Promise<GrafanaGetResponse>;
    /**
     * Create or update a workspace for Grafana resource. This API is idempotent, so user can either create
     * a new grafana or update an existing grafana.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The workspace name of Azure Managed Grafana.
     * @param requestBodyParameters The grafana resource type.
     * @param options The options parameters.
     */
    beginCreate(resourceGroupName: string, workspaceName: string, requestBodyParameters: ManagedGrafana, options?: GrafanaCreateOptionalParams): Promise<SimplePollerLike<OperationState<GrafanaCreateResponse>, GrafanaCreateResponse>>;
    /**
     * Create or update a workspace for Grafana resource. This API is idempotent, so user can either create
     * a new grafana or update an existing grafana.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The workspace name of Azure Managed Grafana.
     * @param requestBodyParameters The grafana resource type.
     * @param options The options parameters.
     */
    beginCreateAndWait(resourceGroupName: string, workspaceName: string, requestBodyParameters: ManagedGrafana, options?: GrafanaCreateOptionalParams): Promise<GrafanaCreateResponse>;
    /**
     * Update a workspace for Grafana resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The workspace name of Azure Managed Grafana.
     * @param requestBodyParameters The parameters for a PATCH request to a grafana resource.
     * @param options The options parameters.
     */
    update(resourceGroupName: string, workspaceName: string, requestBodyParameters: ManagedGrafanaUpdateParameters, options?: GrafanaUpdateOptionalParams): Promise<GrafanaUpdateResponse>;
    /**
     * Delete a workspace for Grafana resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The workspace name of Azure Managed Grafana.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, workspaceName: string, options?: GrafanaDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Delete a workspace for Grafana resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The workspace name of Azure Managed Grafana.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, workspaceName: string, options?: GrafanaDeleteOptionalParams): Promise<void>;
    /**
     * Retrieve enterprise add-on details information
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The workspace name of Azure Managed Grafana.
     * @param options The options parameters.
     */
    checkEnterpriseDetails(resourceGroupName: string, workspaceName: string, options?: GrafanaCheckEnterpriseDetailsOptionalParams): Promise<GrafanaCheckEnterpriseDetailsResponse>;
    /**
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The workspace name of Azure Managed Grafana.
     * @param options The options parameters.
     */
    fetchAvailablePlugins(resourceGroupName: string, workspaceName: string, options?: GrafanaFetchAvailablePluginsOptionalParams): Promise<GrafanaFetchAvailablePluginsResponse>;
}

/** Available plugins of grafana */
export declare interface GrafanaAvailablePlugin {
    /**
     * Grafana plugin id
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly pluginId?: string;
    /**
     * Grafana plugin display name
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
}

export declare interface GrafanaAvailablePluginListResponse {
    value?: GrafanaAvailablePlugin[];
    nextLink?: string;
}

/** Optional parameters. */
export declare interface GrafanaCheckEnterpriseDetailsOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the checkEnterpriseDetails operation. */
export declare type GrafanaCheckEnterpriseDetailsResponse = EnterpriseDetails;

/** Server configurations of a Grafana instance */
export declare interface GrafanaConfigurations {
    /**
     * Email server settings.
     * https://grafana.com/docs/grafana/v9.0/setup-grafana/configure-grafana/#smtp
     */
    smtp?: Smtp;
}

/** Defines headers for Grafana_create operation. */
export declare interface GrafanaCreateHeaders {
    /** Operation URI for long running operation. */
    azureAsyncOperation?: string;
}

/** Optional parameters. */
export declare interface GrafanaCreateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the create operation. */
export declare type GrafanaCreateResponse = ManagedGrafana;

/** Defines headers for Grafana_delete operation. */
export declare interface GrafanaDeleteHeaders {
    /** Operation URI for long running operation. */
    azureAsyncOperation?: string;
}

/** Optional parameters. */
export declare interface GrafanaDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface GrafanaFetchAvailablePluginsOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the fetchAvailablePlugins operation. */
export declare type GrafanaFetchAvailablePluginsResponse = GrafanaAvailablePluginListResponse;

/** Optional parameters. */
export declare interface GrafanaGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type GrafanaGetResponse = ManagedGrafana;

/** GrafanaIntegrations is a bundled observability experience (e.g. pre-configured data source, tailored Grafana dashboards, alerting defaults) for common monitoring scenarios. */
export declare interface GrafanaIntegrations {
    azureMonitorWorkspaceIntegrations?: AzureMonitorWorkspaceIntegration[];
}

/** Optional parameters. */
export declare interface GrafanaListByResourceGroupNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroupNext operation. */
export declare type GrafanaListByResourceGroupNextResponse = ManagedGrafanaListResponse;

/** Optional parameters. */
export declare interface GrafanaListByResourceGroupOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroup operation. */
export declare type GrafanaListByResourceGroupResponse = ManagedGrafanaListResponse;

/** Optional parameters. */
export declare interface GrafanaListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type GrafanaListNextResponse = ManagedGrafanaListResponse;

/** Optional parameters. */
export declare interface GrafanaListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type GrafanaListResponse = ManagedGrafanaListResponse;

/** Plugin of Grafana */
export declare interface GrafanaPlugin {
    /**
     * Grafana plugin id
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly pluginId?: string;
}

/** Defines headers for Grafana_update operation. */
export declare interface GrafanaUpdateHeaders {
    /** Operation URI for long running operation. */
    azureAsyncOperation?: string;
}

/** Optional parameters. */
export declare interface GrafanaUpdateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the update operation. */
export declare type GrafanaUpdateResponse = ManagedGrafana;

/** Known values of {@link ActionType} that the service accepts. */
export declare enum KnownActionType {
    /** Internal */
    Internal = "Internal"
}

/** Known values of {@link ApiKey} that the service accepts. */
export declare enum KnownApiKey {
    /** Disabled */
    Disabled = "Disabled",
    /** Enabled */
    Enabled = "Enabled"
}

/** Known values of {@link AutoGeneratedDomainNameLabelScope} that the service accepts. */
export declare enum KnownAutoGeneratedDomainNameLabelScope {
    /** TenantReuse */
    TenantReuse = "TenantReuse"
}

/** Known values of {@link AvailablePromotion} that the service accepts. */
export declare enum KnownAvailablePromotion {
    /** None */
    None = "None",
    /** FreeTrial */
    FreeTrial = "FreeTrial"
}

/** Known values of {@link CreatedByType} that the service accepts. */
export declare enum KnownCreatedByType {
    /** User */
    User = "User",
    /** Application */
    Application = "Application",
    /** ManagedIdentity */
    ManagedIdentity = "ManagedIdentity",
    /** Key */
    Key = "Key"
}

/** Known values of {@link DeterministicOutboundIP} that the service accepts. */
export declare enum KnownDeterministicOutboundIP {
    /** Disabled */
    Disabled = "Disabled",
    /** Enabled */
    Enabled = "Enabled"
}

/** Known values of {@link ManagedPrivateEndpointConnectionStatus} that the service accepts. */
export declare enum KnownManagedPrivateEndpointConnectionStatus {
    /** Pending */
    Pending = "Pending",
    /** Approved */
    Approved = "Approved",
    /** Rejected */
    Rejected = "Rejected",
    /** Disconnected */
    Disconnected = "Disconnected"
}

/** Known values of {@link ManagedServiceIdentityType} that the service accepts. */
export declare enum KnownManagedServiceIdentityType {
    /** None */
    None = "None",
    /** SystemAssigned */
    SystemAssigned = "SystemAssigned",
    /** UserAssigned */
    UserAssigned = "UserAssigned",
    /** SystemAssignedUserAssigned */
    SystemAssignedUserAssigned = "SystemAssigned,UserAssigned"
}

/** Known values of {@link MarketplaceAutoRenew} that the service accepts. */
export declare enum KnownMarketplaceAutoRenew {
    /** Disabled */
    Disabled = "Disabled",
    /** Enabled */
    Enabled = "Enabled"
}

/** Known values of {@link Origin} that the service accepts. */
export declare enum KnownOrigin {
    /** User */
    User = "user",
    /** System */
    System = "system",
    /** UserSystem */
    UserSystem = "user,system"
}

/** Known values of {@link PrivateEndpointConnectionProvisioningState} that the service accepts. */
export declare enum KnownPrivateEndpointConnectionProvisioningState {
    /** Succeeded */
    Succeeded = "Succeeded",
    /** Creating */
    Creating = "Creating",
    /** Deleting */
    Deleting = "Deleting",
    /** Failed */
    Failed = "Failed"
}

/** Known values of {@link PrivateEndpointServiceConnectionStatus} that the service accepts. */
export declare enum KnownPrivateEndpointServiceConnectionStatus {
    /** Pending */
    Pending = "Pending",
    /** Approved */
    Approved = "Approved",
    /** Rejected */
    Rejected = "Rejected"
}

/** Known values of {@link ProvisioningState} that the service accepts. */
export declare enum KnownProvisioningState {
    /** Accepted */
    Accepted = "Accepted",
    /** Creating */
    Creating = "Creating",
    /** Updating */
    Updating = "Updating",
    /** Deleting */
    Deleting = "Deleting",
    /** Succeeded */
    Succeeded = "Succeeded",
    /** Failed */
    Failed = "Failed",
    /** Canceled */
    Canceled = "Canceled",
    /** Deleted */
    Deleted = "Deleted",
    /** NotSpecified */
    NotSpecified = "NotSpecified"
}

/** Known values of {@link PublicNetworkAccess} that the service accepts. */
export declare enum KnownPublicNetworkAccess {
    /** Enabled */
    Enabled = "Enabled",
    /** Disabled */
    Disabled = "Disabled"
}

/** Known values of {@link StartTLSPolicy} that the service accepts. */
export declare enum KnownStartTLSPolicy {
    /** OpportunisticStartTLS */
    OpportunisticStartTLS = "OpportunisticStartTLS",
    /** MandatoryStartTLS */
    MandatoryStartTLS = "MandatoryStartTLS",
    /** NoStartTLS */
    NoStartTLS = "NoStartTLS"
}

/** Known values of {@link ZoneRedundancy} that the service accepts. */
export declare enum KnownZoneRedundancy {
    /** Disabled */
    Disabled = "Disabled",
    /** Enabled */
    Enabled = "Enabled"
}

/** The grafana resource type. */
export declare interface ManagedGrafana {
    /**
     * ARM id of the grafana resource
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /**
     * Name of the grafana resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * The type of the grafana resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /** The Sku of the grafana resource. */
    sku?: ResourceSku;
    /** Properties specific to the grafana resource. */
    properties?: ManagedGrafanaProperties;
    /** The managed identity of the grafana resource. */
    identity?: ManagedServiceIdentity;
    /**
     * The system meta data relating to this grafana resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
    /** The tags for grafana resource. */
    tags?: {
        [propertyName: string]: string;
    };
    /** The geo-location where the grafana resource lives */
    location?: string;
}

export declare interface ManagedGrafanaListResponse {
    value?: ManagedGrafana[];
    nextLink?: string;
}

/** Properties specific to the grafana resource. */
export declare interface ManagedGrafanaProperties {
    /**
     * Provisioning state of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: ProvisioningState;
    /**
     * The Grafana software version.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly grafanaVersion?: string;
    /**
     * The endpoint of the Grafana instance.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly endpoint?: string;
    /** Indicate the state for enable or disable traffic over the public interface. */
    publicNetworkAccess?: PublicNetworkAccess;
    /** The zone redundancy setting of the Grafana instance. */
    zoneRedundancy?: ZoneRedundancy;
    /** The api key setting of the Grafana instance. */
    apiKey?: ApiKey;
    /** Whether a Grafana instance uses deterministic outbound IPs. */
    deterministicOutboundIP?: DeterministicOutboundIP;
    /**
     * List of outbound IPs if deterministicOutboundIP is enabled.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly outboundIPs?: string[];
    /**
     * The private endpoint connections of the Grafana instance.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly privateEndpointConnections?: PrivateEndpointConnection[];
    /** Scope for dns deterministic name hash calculation. */
    autoGeneratedDomainNameLabelScope?: AutoGeneratedDomainNameLabelScope;
    /** GrafanaIntegrations is a bundled observability experience (e.g. pre-configured data source, tailored Grafana dashboards, alerting defaults) for common monitoring scenarios. */
    grafanaIntegrations?: GrafanaIntegrations;
    /** Enterprise settings of a Grafana instance */
    enterpriseConfigurations?: EnterpriseConfigurations;
    /** Server configurations of a Grafana instance */
    grafanaConfigurations?: GrafanaConfigurations;
    /** Installed plugin list of the Grafana instance. Key is plugin id, value is plugin definition. */
    grafanaPlugins?: {
        [propertyName: string]: GrafanaPlugin;
    };
    /** The major Grafana software version to target. */
    grafanaMajorVersion?: string;
}

/** The properties parameters for a PATCH request to a grafana resource. */
export declare interface ManagedGrafanaPropertiesUpdateParameters {
    /** The zone redundancy setting of the Grafana instance. */
    zoneRedundancy?: ZoneRedundancy;
    /** The api key setting of the Grafana instance. */
    apiKey?: ApiKey;
    /** Whether a Grafana instance uses deterministic outbound IPs. */
    deterministicOutboundIP?: DeterministicOutboundIP;
    /** Indicate the state for enable or disable traffic over the public interface. */
    publicNetworkAccess?: PublicNetworkAccess;
    /** GrafanaIntegrations is a bundled observability experience (e.g. pre-configured data source, tailored Grafana dashboards, alerting defaults) for common monitoring scenarios. */
    grafanaIntegrations?: GrafanaIntegrations;
    /** Enterprise settings of a Grafana instance */
    enterpriseConfigurations?: EnterpriseConfigurations;
    /** Server configurations of a Grafana instance */
    grafanaConfigurations?: GrafanaConfigurations;
    /** Update of Grafana plugin. Key is plugin id, value is plugin definition. If plugin definition is null, plugin with given plugin id will be removed. Otherwise, given plugin will be installed. */
    grafanaPlugins?: {
        [propertyName: string]: GrafanaPlugin;
    };
    /** The major Grafana software version to target. */
    grafanaMajorVersion?: string;
}

/** The parameters for a PATCH request to a grafana resource. */
export declare interface ManagedGrafanaUpdateParameters {
    sku?: ResourceSku;
    /** The managed identity of the grafana resource. */
    identity?: ManagedServiceIdentity;
    /** The new tags of the grafana resource. */
    tags?: {
        [propertyName: string]: string;
    };
    /** Properties specific to the managed grafana resource. */
    properties?: ManagedGrafanaPropertiesUpdateParameters;
}

/** The state of managed private endpoint connection. */
export declare interface ManagedPrivateEndpointConnectionState {
    /**
     * The approval/rejection status of managed private endpoint connection.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly status?: ManagedPrivateEndpointConnectionStatus;
    /**
     * Gets or sets the reason for approval/rejection of the connection.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly description?: string;
}

/**
 * Defines values for ManagedPrivateEndpointConnectionStatus. \
 * {@link KnownManagedPrivateEndpointConnectionStatus} can be used interchangeably with ManagedPrivateEndpointConnectionStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Pending** \
 * **Approved** \
 * **Rejected** \
 * **Disconnected**
 */
export declare type ManagedPrivateEndpointConnectionStatus = string;

/** The managed private endpoint resource type. */
export declare interface ManagedPrivateEndpointModel extends TrackedResource {
    /**
     * Provisioning state of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: ProvisioningState;
    /** The ARM resource ID of the resource for which the managed private endpoint is pointing to. */
    privateLinkResourceId?: string;
    /** The region of the resource to which the managed private endpoint is pointing to. */
    privateLinkResourceRegion?: string;
    /** The group Ids of the managed private endpoint. */
    groupIds?: string[];
    /** User input request message of the managed private endpoint. */
    requestMessage?: string;
    /**
     * The state of managed private endpoint connection.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly connectionState?: ManagedPrivateEndpointConnectionState;
    /** The URL of the data store behind the private link service. It would be the URL in the Grafana data source configuration page without the protocol and port. */
    privateLinkServiceUrl?: string;
    /**
     * The private IP of private endpoint after approval. This property is empty before connection is approved.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly privateLinkServicePrivateIP?: string;
}

/** The list of managed private endpoints of a grafana resource */
export declare interface ManagedPrivateEndpointModelListResponse {
    value?: ManagedPrivateEndpointModel[];
    nextLink?: string;
}

/** Interface representing a ManagedPrivateEndpoints. */
export declare interface ManagedPrivateEndpoints {
    /**
     * List all managed private endpoints of a grafana resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The workspace name of Azure Managed Grafana.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, workspaceName: string, options?: ManagedPrivateEndpointsListOptionalParams): PagedAsyncIterableIterator<ManagedPrivateEndpointModel>;
    /**
     * Refresh and sync managed private endpoints of a grafana resource to latest state.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The workspace name of Azure Managed Grafana.
     * @param options The options parameters.
     */
    beginRefresh(resourceGroupName: string, workspaceName: string, options?: ManagedPrivateEndpointsRefreshOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Refresh and sync managed private endpoints of a grafana resource to latest state.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The workspace name of Azure Managed Grafana.
     * @param options The options parameters.
     */
    beginRefreshAndWait(resourceGroupName: string, workspaceName: string, options?: ManagedPrivateEndpointsRefreshOptionalParams): Promise<void>;
    /**
     * Get a specific managed private endpoint of a grafana resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The workspace name of Azure Managed Grafana.
     * @param managedPrivateEndpointName The managed private endpoint name of Azure Managed Grafana.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, workspaceName: string, managedPrivateEndpointName: string, options?: ManagedPrivateEndpointsGetOptionalParams): Promise<ManagedPrivateEndpointsGetResponse>;
    /**
     * Create or update a managed private endpoint for a grafana resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The workspace name of Azure Managed Grafana.
     * @param managedPrivateEndpointName The managed private endpoint name of Azure Managed Grafana.
     * @param requestBodyParameters The managed private endpoint to be created or updated.
     * @param options The options parameters.
     */
    beginCreate(resourceGroupName: string, workspaceName: string, managedPrivateEndpointName: string, requestBodyParameters: ManagedPrivateEndpointModel, options?: ManagedPrivateEndpointsCreateOptionalParams): Promise<SimplePollerLike<OperationState<ManagedPrivateEndpointsCreateResponse>, ManagedPrivateEndpointsCreateResponse>>;
    /**
     * Create or update a managed private endpoint for a grafana resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The workspace name of Azure Managed Grafana.
     * @param managedPrivateEndpointName The managed private endpoint name of Azure Managed Grafana.
     * @param requestBodyParameters The managed private endpoint to be created or updated.
     * @param options The options parameters.
     */
    beginCreateAndWait(resourceGroupName: string, workspaceName: string, managedPrivateEndpointName: string, requestBodyParameters: ManagedPrivateEndpointModel, options?: ManagedPrivateEndpointsCreateOptionalParams): Promise<ManagedPrivateEndpointsCreateResponse>;
    /**
     * Update a managed private endpoint for an existing grafana resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The workspace name of Azure Managed Grafana.
     * @param managedPrivateEndpointName The managed private endpoint name of Azure Managed Grafana.
     * @param requestBodyParameters Properties that can be updated to an existing managed private endpoint.
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, workspaceName: string, managedPrivateEndpointName: string, requestBodyParameters: ManagedPrivateEndpointUpdateParameters, options?: ManagedPrivateEndpointsUpdateOptionalParams): Promise<SimplePollerLike<OperationState<ManagedPrivateEndpointsUpdateResponse>, ManagedPrivateEndpointsUpdateResponse>>;
    /**
     * Update a managed private endpoint for an existing grafana resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The workspace name of Azure Managed Grafana.
     * @param managedPrivateEndpointName The managed private endpoint name of Azure Managed Grafana.
     * @param requestBodyParameters Properties that can be updated to an existing managed private endpoint.
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, workspaceName: string, managedPrivateEndpointName: string, requestBodyParameters: ManagedPrivateEndpointUpdateParameters, options?: ManagedPrivateEndpointsUpdateOptionalParams): Promise<ManagedPrivateEndpointsUpdateResponse>;
    /**
     * Delete a managed private endpoint for a grafana resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The workspace name of Azure Managed Grafana.
     * @param managedPrivateEndpointName The managed private endpoint name of Azure Managed Grafana.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, workspaceName: string, managedPrivateEndpointName: string, options?: ManagedPrivateEndpointsDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Delete a managed private endpoint for a grafana resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The workspace name of Azure Managed Grafana.
     * @param managedPrivateEndpointName The managed private endpoint name of Azure Managed Grafana.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, workspaceName: string, managedPrivateEndpointName: string, options?: ManagedPrivateEndpointsDeleteOptionalParams): Promise<void>;
}

/** Defines headers for ManagedPrivateEndpoints_create operation. */
export declare interface ManagedPrivateEndpointsCreateHeaders {
    /** Operation URI for long running operation. */
    azureAsyncOperation?: string;
}

/** Optional parameters. */
export declare interface ManagedPrivateEndpointsCreateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the create operation. */
export declare type ManagedPrivateEndpointsCreateResponse = ManagedPrivateEndpointModel;

/** Defines headers for ManagedPrivateEndpoints_delete operation. */
export declare interface ManagedPrivateEndpointsDeleteHeaders {
    /** Operation URI for long running operation. */
    azureAsyncOperation?: string;
}

/** Optional parameters. */
export declare interface ManagedPrivateEndpointsDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface ManagedPrivateEndpointsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type ManagedPrivateEndpointsGetResponse = ManagedPrivateEndpointModel;

/** Optional parameters. */
export declare interface ManagedPrivateEndpointsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type ManagedPrivateEndpointsListNextResponse = ManagedPrivateEndpointModelListResponse;

/** Optional parameters. */
export declare interface ManagedPrivateEndpointsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type ManagedPrivateEndpointsListResponse = ManagedPrivateEndpointModelListResponse;

/** Defines headers for ManagedPrivateEndpoints_refresh operation. */
export declare interface ManagedPrivateEndpointsRefreshHeaders {
    /** Operation URI for long running operation. */
    azureAsyncOperation?: string;
}

/** Optional parameters. */
export declare interface ManagedPrivateEndpointsRefreshOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Defines headers for ManagedPrivateEndpoints_update operation. */
export declare interface ManagedPrivateEndpointsUpdateHeaders {
    /** Operation URI for long running operation. */
    azureAsyncOperation?: string;
}

/** Optional parameters. */
export declare interface ManagedPrivateEndpointsUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the update operation. */
export declare type ManagedPrivateEndpointsUpdateResponse = ManagedPrivateEndpointModel;

/** The parameters for a PATCH request to a managed private endpoint. */
export declare interface ManagedPrivateEndpointUpdateParameters {
    /** The new tags of the managed private endpoint. */
    tags?: {
        [propertyName: string]: string;
    };
}

/** Managed service identity (system assigned and/or user assigned identities) */
export declare interface ManagedServiceIdentity {
    /**
     * The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly principalId?: string;
    /**
     * The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly tenantId?: string;
    /** Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed). */
    type: ManagedServiceIdentityType;
    /** The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests. */
    userAssignedIdentities?: {
        [propertyName: string]: UserAssignedIdentity;
    };
}

/**
 * Defines values for ManagedServiceIdentityType. \
 * {@link KnownManagedServiceIdentityType} can be used interchangeably with ManagedServiceIdentityType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **SystemAssigned** \
 * **UserAssigned** \
 * **SystemAssigned,UserAssigned**
 */
export declare type ManagedServiceIdentityType = string;

/**
 * Defines values for MarketplaceAutoRenew. \
 * {@link KnownMarketplaceAutoRenew} can be used interchangeably with MarketplaceAutoRenew,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Disabled** \
 * **Enabled**
 */
export declare type MarketplaceAutoRenew = string;

/** The allocation details of the per subscription free trial slot of the subscription. */
export declare interface MarketplaceTrialQuota {
    /** Available enterprise promotion for the subscription */
    availablePromotion?: AvailablePromotion;
    /** Resource Id of the Grafana resource which is doing the trial. */
    grafanaResourceId?: string;
    /** The date and time in UTC of when the trial starts. */
    trialStartAt?: Date;
    /** The date and time in UTC of when the trial ends. */
    trialEndAt?: Date;
}

/** Details of a REST API operation, returned from the Resource Provider Operations API */
export declare interface Operation {
    /**
     * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly isDataAction?: boolean;
    /** Localized display information for this particular operation. */
    display?: OperationDisplay;
    /**
     * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly origin?: Origin;
    /**
     * Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly actionType?: ActionType;
}

/** Localized display information for this particular operation. */
export declare interface OperationDisplay {
    /**
     * The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provider?: string;
    /**
     * The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly resource?: string;
    /**
     * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly operation?: string;
    /**
     * The short, localized friendly description of the operation; suitable for tool tips and detailed views.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly description?: string;
}

/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */
export declare interface OperationListResult {
    /**
     * List of operations supported by the resource provider
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: Operation[];
    /**
     * URL to get the next set of operation list results (if there are any).
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Interface representing a Operations. */
export declare interface Operations {
    /**
     * List all available API operations provided by Microsoft.Dashboard.
     * @param options The options parameters.
     */
    list(options?: OperationsListOptionalParams): PagedAsyncIterableIterator<Operation>;
}

/** Optional parameters. */
export declare interface OperationsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export declare interface OperationsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type OperationsListResponse = OperationListResult;

/**
 * Defines values for Origin. \
 * {@link KnownOrigin} can be used interchangeably with Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **system** \
 * **user,system**
 */
export declare type Origin = string;

/** The Private Endpoint resource. */
export declare interface PrivateEndpoint {
    /**
     * The ARM identifier for Private Endpoint
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
}

/** The Private Endpoint Connection resource. */
export declare interface PrivateEndpointConnection extends Resource {
    /** The resource of private end point. */
    privateEndpoint?: PrivateEndpoint;
    /** A collection of information about the state of the connection between service consumer and provider. */
    privateLinkServiceConnectionState?: PrivateLinkServiceConnectionState;
    /** The private endpoint connection group ids. */
    groupIds?: string[];
    /**
     * The provisioning state of the private endpoint connection resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: PrivateEndpointConnectionProvisioningState;
}

/** List of private endpoint connection associated with the specified storage account */
export declare interface PrivateEndpointConnectionListResult {
    /** Array of private endpoint connections */
    value?: PrivateEndpointConnection[];
    /**
     * URL to get the next set of operation list results (if there are any).
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/**
 * Defines values for PrivateEndpointConnectionProvisioningState. \
 * {@link KnownPrivateEndpointConnectionProvisioningState} can be used interchangeably with PrivateEndpointConnectionProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded** \
 * **Creating** \
 * **Deleting** \
 * **Failed**
 */
export declare type PrivateEndpointConnectionProvisioningState = string;

/** Interface representing a PrivateEndpointConnections. */
export declare interface PrivateEndpointConnections {
    /**
     * Get private endpoint connection
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The workspace name of Azure Managed Grafana.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, workspaceName: string, options?: PrivateEndpointConnectionsListOptionalParams): PagedAsyncIterableIterator<PrivateEndpointConnection>;
    /**
     * Get private endpoint connections.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The workspace name of Azure Managed Grafana.
     * @param privateEndpointConnectionName The private endpoint connection name of Azure Managed Grafana.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, workspaceName: string, privateEndpointConnectionName: string, options?: PrivateEndpointConnectionsGetOptionalParams): Promise<PrivateEndpointConnectionsGetResponse>;
    /**
     * Manual approve private endpoint connection
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The workspace name of Azure Managed Grafana.
     * @param privateEndpointConnectionName The private endpoint connection name of Azure Managed Grafana.
     * @param options The options parameters.
     */
    beginApprove(resourceGroupName: string, workspaceName: string, privateEndpointConnectionName: string, options?: PrivateEndpointConnectionsApproveOptionalParams): Promise<SimplePollerLike<OperationState<PrivateEndpointConnectionsApproveResponse>, PrivateEndpointConnectionsApproveResponse>>;
    /**
     * Manual approve private endpoint connection
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The workspace name of Azure Managed Grafana.
     * @param privateEndpointConnectionName The private endpoint connection name of Azure Managed Grafana.
     * @param options The options parameters.
     */
    beginApproveAndWait(resourceGroupName: string, workspaceName: string, privateEndpointConnectionName: string, options?: PrivateEndpointConnectionsApproveOptionalParams): Promise<PrivateEndpointConnectionsApproveResponse>;
    /**
     * Delete private endpoint connection
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The workspace name of Azure Managed Grafana.
     * @param privateEndpointConnectionName The private endpoint connection name of Azure Managed Grafana.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, workspaceName: string, privateEndpointConnectionName: string, options?: PrivateEndpointConnectionsDeleteOptionalParams): Promise<SimplePollerLike<OperationState<PrivateEndpointConnectionsDeleteResponse>, PrivateEndpointConnectionsDeleteResponse>>;
    /**
     * Delete private endpoint connection
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The workspace name of Azure Managed Grafana.
     * @param privateEndpointConnectionName The private endpoint connection name of Azure Managed Grafana.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, workspaceName: string, privateEndpointConnectionName: string, options?: PrivateEndpointConnectionsDeleteOptionalParams): Promise<PrivateEndpointConnectionsDeleteResponse>;
}

/** Defines headers for PrivateEndpointConnections_approve operation. */
export declare interface PrivateEndpointConnectionsApproveHeaders {
    /** Operation URI for long running operation. */
    azureAsyncOperation?: string;
}

/** Optional parameters. */
export declare interface PrivateEndpointConnectionsApproveOptionalParams extends coreClient.OperationOptions {
    /** The Private Endpoint Connection resource. */
    body?: PrivateEndpointConnection;
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the approve operation. */
export declare type PrivateEndpointConnectionsApproveResponse = PrivateEndpointConnectionsApproveHeaders & PrivateEndpointConnection;

/** Defines headers for PrivateEndpointConnections_delete operation. */
export declare interface PrivateEndpointConnectionsDeleteHeaders {
    /** Operation URI for long running operation. */
    azureAsyncOperation?: string;
}

/** Optional parameters. */
export declare interface PrivateEndpointConnectionsDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export declare type PrivateEndpointConnectionsDeleteResponse = PrivateEndpointConnectionsDeleteHeaders;

/** Optional parameters. */
export declare interface PrivateEndpointConnectionsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type PrivateEndpointConnectionsGetResponse = PrivateEndpointConnection;

/** Optional parameters. */
export declare interface PrivateEndpointConnectionsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type PrivateEndpointConnectionsListNextResponse = PrivateEndpointConnectionListResult;

/** Optional parameters. */
export declare interface PrivateEndpointConnectionsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type PrivateEndpointConnectionsListResponse = PrivateEndpointConnectionListResult;

/**
 * Defines values for PrivateEndpointServiceConnectionStatus. \
 * {@link KnownPrivateEndpointServiceConnectionStatus} can be used interchangeably with PrivateEndpointServiceConnectionStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Pending** \
 * **Approved** \
 * **Rejected**
 */
export declare type PrivateEndpointServiceConnectionStatus = string;

/** A private link resource */
export declare interface PrivateLinkResource extends Resource {
    /**
     * Provisioning state of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: ProvisioningState;
    /**
     * The private link resource group id.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly groupId?: string;
    /**
     * The private link resource required member names.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly requiredMembers?: string[];
    /** The private link resource Private link DNS zone name. */
    requiredZoneNames?: string[];
}

/** A list of private link resources */
export declare interface PrivateLinkResourceListResult {
    /** Array of private link resources */
    value?: PrivateLinkResource[];
    /**
     * URL to get the next set of operation list results (if there are any).
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Interface representing a PrivateLinkResources. */
export declare interface PrivateLinkResources {
    /**
     * List all private link resources information for this grafana resource
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The workspace name of Azure Managed Grafana.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, workspaceName: string, options?: PrivateLinkResourcesListOptionalParams): PagedAsyncIterableIterator<PrivateLinkResource>;
    /**
     * Get specific private link resource information for this grafana resource
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The workspace name of Azure Managed Grafana.
     * @param privateLinkResourceName
     * @param options The options parameters.
     */
    get(resourceGroupName: string, workspaceName: string, privateLinkResourceName: string, options?: PrivateLinkResourcesGetOptionalParams): Promise<PrivateLinkResourcesGetResponse>;
}

/** Optional parameters. */
export declare interface PrivateLinkResourcesGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type PrivateLinkResourcesGetResponse = PrivateLinkResource;

/** Optional parameters. */
export declare interface PrivateLinkResourcesListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type PrivateLinkResourcesListNextResponse = PrivateLinkResourceListResult;

/** Optional parameters. */
export declare interface PrivateLinkResourcesListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type PrivateLinkResourcesListResponse = PrivateLinkResourceListResult;

/** A collection of information about the state of the connection between service consumer and provider. */
export declare interface PrivateLinkServiceConnectionState {
    /** Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service. */
    status?: PrivateEndpointServiceConnectionStatus;
    /** The reason for approval/rejection of the connection. */
    description?: string;
    /** A message indicating if changes on the service provider require any updates on the consumer. */
    actionsRequired?: string;
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Accepted** \
 * **Creating** \
 * **Updating** \
 * **Deleting** \
 * **Succeeded** \
 * **Failed** \
 * **Canceled** \
 * **Deleted** \
 * **NotSpecified**
 */
export declare type ProvisioningState = string;

/**
 * Defines values for PublicNetworkAccess. \
 * {@link KnownPublicNetworkAccess} can be used interchangeably with PublicNetworkAccess,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled** \
 * **Disabled**
 */
export declare type PublicNetworkAccess = string;

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export declare interface Resource {
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /**
     * The name of the resource
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
}

export declare interface ResourceSku {
    name: string;
}

/** SaaS subscription details of a Grafana instance */
export declare interface SaasSubscriptionDetails {
    /** The plan Id of the SaaS subscription. */
    planId?: string;
    /** The offer Id of the SaaS subscription. */
    offerId?: string;
    /** The publisher Id of the SaaS subscription. */
    publisherId?: string;
    /** The billing term of the SaaS Subscription. */
    term?: SubscriptionTerm;
}

/**
 * Email server settings.
 * https://grafana.com/docs/grafana/v9.0/setup-grafana/configure-grafana/#smtp
 */
export declare interface Smtp {
    /** Enable this to allow Grafana to send email. Default is false */
    enabled?: boolean;
    /** SMTP server hostname with port, e.g. test.email.net:587 */
    host?: string;
    /** User of SMTP auth */
    user?: string;
    /** Password of SMTP auth. If the password contains # or ;, then you have to wrap it with triple quotes */
    password?: string;
    /**
     * Address used when sending out emails
     * https://pkg.go.dev/net/mail#Address
     */
    fromAddress?: string;
    /**
     * Name to be used when sending out emails. Default is "Azure Managed Grafana Notification"
     * https://pkg.go.dev/net/mail#Address
     */
    fromName?: string;
    /**
     * The StartTLSPolicy setting of the SMTP configuration
     * https://pkg.go.dev/github.com/go-mail/mail#StartTLSPolicy
     */
    startTLSPolicy?: StartTLSPolicy;
    /**
     * Verify SSL for SMTP server. Default is false
     * https://pkg.go.dev/crypto/tls#Config
     */
    skipVerify?: boolean;
}

/**
 * Defines values for StartTLSPolicy. \
 * {@link KnownStartTLSPolicy} can be used interchangeably with StartTLSPolicy,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **OpportunisticStartTLS** \
 * **MandatoryStartTLS** \
 * **NoStartTLS**
 */
export declare type StartTLSPolicy = string;

/** The current billing term of the SaaS Subscription. */
export declare interface SubscriptionTerm {
    /** The unit of the billing term. */
    termUnit?: string;
    /** The date and time in UTC of when the billing term starts. */
    startDate?: Date;
    /** The date and time in UTC of when the billing term ends. */
    endDate?: Date;
}

/** Metadata pertaining to creation and last modification of the resource. */
export declare interface SystemData {
    /** The identity that created the resource. */
    createdBy?: string;
    /** The type of identity that created the resource. */
    createdByType?: CreatedByType;
    /** The timestamp of resource creation (UTC). */
    createdAt?: Date;
    /** The identity that last modified the resource. */
    lastModifiedBy?: string;
    /** The type of identity that last modified the resource. */
    lastModifiedByType?: CreatedByType;
    /** The timestamp of resource last modification (UTC) */
    lastModifiedAt?: Date;
}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export declare interface TrackedResource extends Resource {
    /** Resource tags. */
    tags?: {
        [propertyName: string]: string;
    };
    /** The geo-location where the resource lives */
    location: string;
}

/** User assigned identity properties */
export declare interface UserAssignedIdentity {
    /**
     * The principal ID of the assigned identity.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly principalId?: string;
    /**
     * The client ID of the assigned identity.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly clientId?: string;
}

/**
 * Defines values for ZoneRedundancy. \
 * {@link KnownZoneRedundancy} can be used interchangeably with ZoneRedundancy,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Disabled** \
 * **Enabled**
 */
export declare type ZoneRedundancy = string;

export { }
