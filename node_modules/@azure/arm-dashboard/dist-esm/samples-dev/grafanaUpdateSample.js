/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { DashboardManagementClient } from "@azure/arm-dashboard";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Update a workspace for Grafana resource.
 *
 * @summary Update a workspace for Grafana resource.
 * x-ms-original-file: specification/dashboard/resource-manager/Microsoft.Dashboard/stable/2023-09-01/examples/Grafana_Update.json
 */
function grafanaUpdate() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["DASHBOARD_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const resourceGroupName = process.env["DASHBOARD_RESOURCE_GROUP"] || "myResourceGroup";
        const workspaceName = "myWorkspace";
        const requestBodyParameters = {
            properties: {
                apiKey: "Enabled",
                deterministicOutboundIP: "Enabled",
                enterpriseConfigurations: {
                    marketplaceAutoRenew: "Enabled",
                    marketplacePlanId: "myPlanId"
                },
                grafanaConfigurations: {
                    smtp: {
                        enabled: true,
                        fromAddress: "test@sendemail.com",
                        fromName: "emailsender",
                        host: "smtp.sendemail.com:587",
                        password: "<password>",
                        skipVerify: true,
                        startTLSPolicy: "OpportunisticStartTLS",
                        user: "username"
                    }
                },
                grafanaIntegrations: {
                    azureMonitorWorkspaceIntegrations: [
                        {
                            azureMonitorWorkspaceResourceId: "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/myResourceGroup/providers/microsoft.monitor/accounts/myAzureMonitorWorkspace"
                        }
                    ]
                },
                grafanaMajorVersion: "9",
                grafanaPlugins: { samplePluginId: {} }
            },
            sku: { name: "Standard" },
            tags: { environment: "Dev 2" }
        };
        const credential = new DefaultAzureCredential();
        const client = new DashboardManagementClient(credential, subscriptionId);
        const result = yield client.grafana.update(resourceGroupName, workspaceName, requestBodyParameters);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        grafanaUpdate();
    });
}
main().catch(console.error);
//# sourceMappingURL=grafanaUpdateSample.js.map