import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { UnresolvedDependencies } from "../operationsInterfaces";
import { ResourceMoverServiceAPI } from "../resourceMoverServiceAPI";
import { UnresolvedDependency, UnresolvedDependenciesGetOptionalParams } from "../models";
/** Class containing UnresolvedDependencies operations. */
export declare class UnresolvedDependenciesImpl implements UnresolvedDependencies {
    private readonly client;
    /**
     * Initialize a new instance of the class UnresolvedDependencies class.
     * @param client Reference to the service client
     */
    constructor(client: ResourceMoverServiceAPI);
    /**
     * Gets a list of unresolved dependencies.
     * @param resourceGroupName The Resource Group Name.
     * @param moveCollectionName The Move Collection Name.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, moveCollectionName: string, options?: UnresolvedDependenciesGetOptionalParams): PagedAsyncIterableIterator<UnresolvedDependency>;
    private getPagingPage;
    private getPagingAll;
    /**
     * Gets a list of unresolved dependencies.
     * @param resourceGroupName The Resource Group Name.
     * @param moveCollectionName The Move Collection Name.
     * @param options The options parameters.
     */
    private _get;
    /**
     * GetNext
     * @param resourceGroupName The Resource Group Name.
     * @param moveCollectionName The Move Collection Name.
     * @param nextLink The nextLink from the previous successful call to the Get method.
     * @param options The options parameters.
     */
    private _getNext;
}
//# sourceMappingURL=unresolvedDependencies.d.ts.map