import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { MoveResources } from "../operationsInterfaces";
import { ResourceMoverServiceAPI } from "../resourceMoverServiceAPI";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import { MoveResource, MoveResourcesListOptionalParams, MoveResourcesCreateOptionalParams, MoveResourcesCreateResponse, MoveResourcesDeleteOptionalParams, MoveResourcesDeleteResponse, MoveResourcesGetOptionalParams, MoveResourcesGetResponse } from "../models";
/** Class containing MoveResources operations. */
export declare class MoveResourcesImpl implements MoveResources {
    private readonly client;
    /**
     * Initialize a new instance of the class MoveResources class.
     * @param client Reference to the service client
     */
    constructor(client: ResourceMoverServiceAPI);
    /**
     * Lists the Move Resources in the move collection.
     * @param resourceGroupName The Resource Group Name.
     * @param moveCollectionName The Move Collection Name.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, moveCollectionName: string, options?: MoveResourcesListOptionalParams): PagedAsyncIterableIterator<MoveResource>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Lists the Move Resources in the move collection.
     * @param resourceGroupName The Resource Group Name.
     * @param moveCollectionName The Move Collection Name.
     * @param options The options parameters.
     */
    private _list;
    /**
     * Creates or updates a Move Resource in the move collection.
     * @param resourceGroupName The Resource Group Name.
     * @param moveCollectionName The Move Collection Name.
     * @param moveResourceName The Move Resource Name.
     * @param options The options parameters.
     */
    beginCreate(resourceGroupName: string, moveCollectionName: string, moveResourceName: string, options?: MoveResourcesCreateOptionalParams): Promise<SimplePollerLike<OperationState<MoveResourcesCreateResponse>, MoveResourcesCreateResponse>>;
    /**
     * Creates or updates a Move Resource in the move collection.
     * @param resourceGroupName The Resource Group Name.
     * @param moveCollectionName The Move Collection Name.
     * @param moveResourceName The Move Resource Name.
     * @param options The options parameters.
     */
    beginCreateAndWait(resourceGroupName: string, moveCollectionName: string, moveResourceName: string, options?: MoveResourcesCreateOptionalParams): Promise<MoveResourcesCreateResponse>;
    /**
     * Deletes a Move Resource from the move collection.
     * @param resourceGroupName The Resource Group Name.
     * @param moveCollectionName The Move Collection Name.
     * @param moveResourceName The Move Resource Name.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, moveCollectionName: string, moveResourceName: string, options?: MoveResourcesDeleteOptionalParams): Promise<SimplePollerLike<OperationState<MoveResourcesDeleteResponse>, MoveResourcesDeleteResponse>>;
    /**
     * Deletes a Move Resource from the move collection.
     * @param resourceGroupName The Resource Group Name.
     * @param moveCollectionName The Move Collection Name.
     * @param moveResourceName The Move Resource Name.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, moveCollectionName: string, moveResourceName: string, options?: MoveResourcesDeleteOptionalParams): Promise<MoveResourcesDeleteResponse>;
    /**
     * Gets the Move Resource.
     * @param resourceGroupName The Resource Group Name.
     * @param moveCollectionName The Move Collection Name.
     * @param moveResourceName The Move Resource Name.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, moveCollectionName: string, moveResourceName: string, options?: MoveResourcesGetOptionalParams): Promise<MoveResourcesGetResponse>;
    /**
     * ListNext
     * @param resourceGroupName The Resource Group Name.
     * @param moveCollectionName The Move Collection Name.
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=moveResources.d.ts.map