import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { ScriptCmdlets } from "../operationsInterfaces";
import { AzureVMwareSolutionAPI } from "../azureVMwareSolutionAPI";
import { ScriptCmdlet, ScriptCmdletsListOptionalParams, ScriptCmdletsGetOptionalParams, ScriptCmdletsGetResponse } from "../models";
/** Class containing ScriptCmdlets operations. */
export declare class ScriptCmdletsImpl implements ScriptCmdlets {
    private readonly client;
    /**
     * Initialize a new instance of the class ScriptCmdlets class.
     * @param client Reference to the service client
     */
    constructor(client: AzureVMwareSolutionAPI);
    /**
     * List script cmdlet resources available for a private cloud to create a script execution resource on
     * a private cloud
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud
     * @param scriptPackageName Name of the script package in the private cloud
     * @param options The options parameters.
     */
    list(resourceGroupName: string, privateCloudName: string, scriptPackageName: string, options?: ScriptCmdletsListOptionalParams): PagedAsyncIterableIterator<ScriptCmdlet>;
    private listPagingPage;
    private listPagingAll;
    /**
     * List script cmdlet resources available for a private cloud to create a script execution resource on
     * a private cloud
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud
     * @param scriptPackageName Name of the script package in the private cloud
     * @param options The options parameters.
     */
    private _list;
    /**
     * Return information about a script cmdlet resource in a specific package on a private cloud
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud
     * @param scriptPackageName Name of the script package in the private cloud
     * @param scriptCmdletName Name of the script cmdlet resource in the script package in the private
     *                         cloud
     * @param options The options parameters.
     */
    get(resourceGroupName: string, privateCloudName: string, scriptPackageName: string, scriptCmdletName: string, options?: ScriptCmdletsGetOptionalParams): Promise<ScriptCmdletsGetResponse>;
    /**
     * ListNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud
     * @param scriptPackageName Name of the script package in the private cloud
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=scriptCmdlets.d.ts.map