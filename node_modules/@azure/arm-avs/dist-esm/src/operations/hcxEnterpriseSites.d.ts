import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { HcxEnterpriseSites } from "../operationsInterfaces";
import { AzureVMwareSolutionAPI } from "../azureVMwareSolutionAPI";
import { HcxEnterpriseSite, HcxEnterpriseSitesListOptionalParams, HcxEnterpriseSitesGetOptionalParams, HcxEnterpriseSitesGetResponse, HcxEnterpriseSitesCreateOrUpdateOptionalParams, HcxEnterpriseSitesCreateOrUpdateResponse, HcxEnterpriseSitesDeleteOptionalParams } from "../models";
/** Class containing HcxEnterpriseSites operations. */
export declare class HcxEnterpriseSitesImpl implements HcxEnterpriseSites {
    private readonly client;
    /**
     * Initialize a new instance of the class HcxEnterpriseSites class.
     * @param client Reference to the service client
     */
    constructor(client: AzureVMwareSolutionAPI);
    /**
     * List HCX on-premises key in a private cloud
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud
     * @param options The options parameters.
     */
    list(resourceGroupName: string, privateCloudName: string, options?: HcxEnterpriseSitesListOptionalParams): PagedAsyncIterableIterator<HcxEnterpriseSite>;
    private listPagingPage;
    private listPagingAll;
    /**
     * List HCX on-premises key in a private cloud
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud
     * @param options The options parameters.
     */
    private _list;
    /**
     * Get an HCX on-premises key by name in a private cloud
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud
     * @param hcxEnterpriseSiteName Name of the HCX Enterprise Site in the private cloud
     * @param options The options parameters.
     */
    get(resourceGroupName: string, privateCloudName: string, hcxEnterpriseSiteName: string, options?: HcxEnterpriseSitesGetOptionalParams): Promise<HcxEnterpriseSitesGetResponse>;
    /**
     * Create or update an activation key for on-premises HCX site
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName The name of the private cloud.
     * @param hcxEnterpriseSiteName Name of the HCX Enterprise Site in the private cloud
     * @param hcxEnterpriseSite The HCX Enterprise Site
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, privateCloudName: string, hcxEnterpriseSiteName: string, hcxEnterpriseSite: HcxEnterpriseSite, options?: HcxEnterpriseSitesCreateOrUpdateOptionalParams): Promise<HcxEnterpriseSitesCreateOrUpdateResponse>;
    /**
     * Delete HCX on-premises key in a private cloud
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud
     * @param hcxEnterpriseSiteName Name of the HCX Enterprise Site in the private cloud
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, privateCloudName: string, hcxEnterpriseSiteName: string, options?: HcxEnterpriseSitesDeleteOptionalParams): Promise<void>;
    /**
     * ListNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=hcxEnterpriseSites.d.ts.map