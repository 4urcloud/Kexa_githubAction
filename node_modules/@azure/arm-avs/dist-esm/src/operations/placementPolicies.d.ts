import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PlacementPolicies } from "../operationsInterfaces";
import { AzureVMwareSolutionAPI } from "../azureVMwareSolutionAPI";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import { PlacementPolicy, PlacementPoliciesListOptionalParams, PlacementPoliciesGetOptionalParams, PlacementPoliciesGetResponse, PlacementPoliciesCreateOrUpdateOptionalParams, PlacementPoliciesCreateOrUpdateResponse, PlacementPolicyUpdate, PlacementPoliciesUpdateOptionalParams, PlacementPoliciesUpdateResponse, PlacementPoliciesDeleteOptionalParams } from "../models";
/** Class containing PlacementPolicies operations. */
export declare class PlacementPoliciesImpl implements PlacementPolicies {
    private readonly client;
    /**
     * Initialize a new instance of the class PlacementPolicies class.
     * @param client Reference to the service client
     */
    constructor(client: AzureVMwareSolutionAPI);
    /**
     * List placement policies in a private cloud cluster
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud
     * @param clusterName Name of the cluster in the private cloud
     * @param options The options parameters.
     */
    list(resourceGroupName: string, privateCloudName: string, clusterName: string, options?: PlacementPoliciesListOptionalParams): PagedAsyncIterableIterator<PlacementPolicy>;
    private listPagingPage;
    private listPagingAll;
    /**
     * List placement policies in a private cloud cluster
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud
     * @param clusterName Name of the cluster in the private cloud
     * @param options The options parameters.
     */
    private _list;
    /**
     * Get a placement policy by name in a private cloud cluster
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud
     * @param clusterName Name of the cluster in the private cloud
     * @param placementPolicyName Name of the VMware vSphere Distributed Resource Scheduler (DRS) placement
     *                            policy
     * @param options The options parameters.
     */
    get(resourceGroupName: string, privateCloudName: string, clusterName: string, placementPolicyName: string, options?: PlacementPoliciesGetOptionalParams): Promise<PlacementPoliciesGetResponse>;
    /**
     * Create or update a placement policy in a private cloud cluster
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud
     * @param clusterName Name of the cluster in the private cloud
     * @param placementPolicyName Name of the VMware vSphere Distributed Resource Scheduler (DRS) placement
     *                            policy
     * @param placementPolicy A placement policy in the private cloud cluster
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, privateCloudName: string, clusterName: string, placementPolicyName: string, placementPolicy: PlacementPolicy, options?: PlacementPoliciesCreateOrUpdateOptionalParams): Promise<SimplePollerLike<OperationState<PlacementPoliciesCreateOrUpdateResponse>, PlacementPoliciesCreateOrUpdateResponse>>;
    /**
     * Create or update a placement policy in a private cloud cluster
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud
     * @param clusterName Name of the cluster in the private cloud
     * @param placementPolicyName Name of the VMware vSphere Distributed Resource Scheduler (DRS) placement
     *                            policy
     * @param placementPolicy A placement policy in the private cloud cluster
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, privateCloudName: string, clusterName: string, placementPolicyName: string, placementPolicy: PlacementPolicy, options?: PlacementPoliciesCreateOrUpdateOptionalParams): Promise<PlacementPoliciesCreateOrUpdateResponse>;
    /**
     * Update a placement policy in a private cloud cluster
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud
     * @param clusterName Name of the cluster in the private cloud
     * @param placementPolicyName Name of the VMware vSphere Distributed Resource Scheduler (DRS) placement
     *                            policy
     * @param placementPolicyUpdate The placement policy properties that may be updated
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, privateCloudName: string, clusterName: string, placementPolicyName: string, placementPolicyUpdate: PlacementPolicyUpdate, options?: PlacementPoliciesUpdateOptionalParams): Promise<SimplePollerLike<OperationState<PlacementPoliciesUpdateResponse>, PlacementPoliciesUpdateResponse>>;
    /**
     * Update a placement policy in a private cloud cluster
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud
     * @param clusterName Name of the cluster in the private cloud
     * @param placementPolicyName Name of the VMware vSphere Distributed Resource Scheduler (DRS) placement
     *                            policy
     * @param placementPolicyUpdate The placement policy properties that may be updated
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, privateCloudName: string, clusterName: string, placementPolicyName: string, placementPolicyUpdate: PlacementPolicyUpdate, options?: PlacementPoliciesUpdateOptionalParams): Promise<PlacementPoliciesUpdateResponse>;
    /**
     * Delete a placement policy in a private cloud cluster
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud
     * @param clusterName Name of the cluster in the private cloud
     * @param placementPolicyName Name of the VMware vSphere Distributed Resource Scheduler (DRS) placement
     *                            policy
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, privateCloudName: string, clusterName: string, placementPolicyName: string, options?: PlacementPoliciesDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Delete a placement policy in a private cloud cluster
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud
     * @param clusterName Name of the cluster in the private cloud
     * @param placementPolicyName Name of the VMware vSphere Distributed Resource Scheduler (DRS) placement
     *                            policy
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, privateCloudName: string, clusterName: string, placementPolicyName: string, options?: PlacementPoliciesDeleteOptionalParams): Promise<void>;
    /**
     * ListNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud
     * @param clusterName Name of the cluster in the private cloud
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=placementPolicies.d.ts.map