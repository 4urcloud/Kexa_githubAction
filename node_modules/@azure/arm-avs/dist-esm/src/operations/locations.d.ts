import { Locations } from "../operationsInterfaces";
import { AzureVMwareSolutionAPI } from "../azureVMwareSolutionAPI";
import { LocationsCheckTrialAvailabilityOptionalParams, LocationsCheckTrialAvailabilityResponse, LocationsCheckQuotaAvailabilityOptionalParams, LocationsCheckQuotaAvailabilityResponse } from "../models";
/** Class containing Locations operations. */
export declare class LocationsImpl implements Locations {
    private readonly client;
    /**
     * Initialize a new instance of the class Locations class.
     * @param client Reference to the service client
     */
    constructor(client: AzureVMwareSolutionAPI);
    /**
     * Return trial status for subscription by region
     * @param location Azure region
     * @param options The options parameters.
     */
    checkTrialAvailability(location: string, options?: LocationsCheckTrialAvailabilityOptionalParams): Promise<LocationsCheckTrialAvailabilityResponse>;
    /**
     * Return quota for subscription by region
     * @param location Azure region
     * @param options The options parameters.
     */
    checkQuotaAvailability(location: string, options?: LocationsCheckQuotaAvailabilityOptionalParams): Promise<LocationsCheckQuotaAvailabilityResponse>;
}
//# sourceMappingURL=locations.d.ts.map