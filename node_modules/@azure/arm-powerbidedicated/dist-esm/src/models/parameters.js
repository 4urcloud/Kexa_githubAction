/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { DedicatedCapacity as DedicatedCapacityMapper, DedicatedCapacityUpdateParameters as DedicatedCapacityUpdateParametersMapper, CheckCapacityNameAvailabilityParameters as CheckCapacityNameAvailabilityParametersMapper, AutoScaleVCore as AutoScaleVCoreMapper, AutoScaleVCoreUpdateParameters as AutoScaleVCoreUpdateParametersMapper } from "../models/mappers";
export const accept = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String"
        }
    }
};
export const $host = {
    parameterPath: "$host",
    mapper: {
        serializedName: "$host",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const resourceGroupName = {
    parameterPath: "resourceGroupName",
    mapper: {
        constraints: {
            Pattern: new RegExp("^[-\\w\\._\\(\\)]+$"),
            MaxLength: 90,
            MinLength: 1
        },
        serializedName: "resourceGroupName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const dedicatedCapacityName = {
    parameterPath: "dedicatedCapacityName",
    mapper: {
        constraints: {
            Pattern: new RegExp("^[a-z][a-z0-9]*$"),
            MaxLength: 63,
            MinLength: 3
        },
        serializedName: "dedicatedCapacityName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const apiVersion = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2021-01-01",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
export const subscriptionId = {
    parameterPath: "subscriptionId",
    mapper: {
        serializedName: "subscriptionId",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const contentType = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String"
        }
    }
};
export const capacityParameters = {
    parameterPath: "capacityParameters",
    mapper: DedicatedCapacityMapper
};
export const capacityUpdateParameters = {
    parameterPath: "capacityUpdateParameters",
    mapper: DedicatedCapacityUpdateParametersMapper
};
export const capacityParameters1 = {
    parameterPath: "capacityParameters",
    mapper: CheckCapacityNameAvailabilityParametersMapper
};
export const location = {
    parameterPath: "location",
    mapper: {
        serializedName: "location",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const nextLink = {
    parameterPath: "nextLink",
    mapper: {
        serializedName: "nextLink",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const vcoreName = {
    parameterPath: "vcoreName",
    mapper: {
        constraints: {
            Pattern: new RegExp("^[-a-zA-Z0-9_]+$"),
            MaxLength: 63,
            MinLength: 3
        },
        serializedName: "vcoreName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const vCoreParameters = {
    parameterPath: "vCoreParameters",
    mapper: AutoScaleVCoreMapper
};
export const vCoreUpdateParameters = {
    parameterPath: "vCoreUpdateParameters",
    mapper: AutoScaleVCoreUpdateParametersMapper
};
//# sourceMappingURL=parameters.js.map