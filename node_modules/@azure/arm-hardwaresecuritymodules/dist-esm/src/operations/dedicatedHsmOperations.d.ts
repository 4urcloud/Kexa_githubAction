import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { DedicatedHsmOperations } from "../operationsInterfaces";
import { AzureDedicatedHSMResourceProvider } from "../azureDedicatedHSMResourceProvider";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { DedicatedHsm, DedicatedHsmListByResourceGroupOptionalParams, DedicatedHsmListBySubscriptionOptionalParams, OutboundEnvironmentEndpoint, DedicatedHsmListOutboundNetworkDependenciesEndpointsOptionalParams, DedicatedHsmCreateOrUpdateOptionalParams, DedicatedHsmCreateOrUpdateResponse, DedicatedHsmUpdateOptionalParams, DedicatedHsmUpdateResponse, DedicatedHsmDeleteOptionalParams, DedicatedHsmGetOptionalParams, DedicatedHsmGetResponse } from "../models";
/** Class containing DedicatedHsmOperations operations. */
export declare class DedicatedHsmOperationsImpl implements DedicatedHsmOperations {
    private readonly client;
    /**
     * Initialize a new instance of the class DedicatedHsmOperations class.
     * @param client Reference to the service client
     */
    constructor(client: AzureDedicatedHSMResourceProvider);
    /**
     * The List operation gets information about the dedicated hsms associated with the subscription and
     * within the specified resource group.
     * @param resourceGroupName The name of the Resource Group to which the dedicated HSM belongs.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: DedicatedHsmListByResourceGroupOptionalParams): PagedAsyncIterableIterator<DedicatedHsm>;
    private listByResourceGroupPagingPage;
    private listByResourceGroupPagingAll;
    /**
     * The List operation gets information about the dedicated HSMs associated with the subscription.
     * @param options The options parameters.
     */
    listBySubscription(options?: DedicatedHsmListBySubscriptionOptionalParams): PagedAsyncIterableIterator<DedicatedHsm>;
    private listBySubscriptionPagingPage;
    private listBySubscriptionPagingAll;
    /**
     * Gets a list of egress endpoints (network endpoints of all outbound dependencies) in the specified
     * dedicated hsm resource. The operation returns properties of each egress endpoint.
     * @param resourceGroupName The name of the Resource Group to which the dedicated hsm belongs.
     * @param name The name of the dedicated HSM.
     * @param options The options parameters.
     */
    listOutboundNetworkDependenciesEndpoints(resourceGroupName: string, name: string, options?: DedicatedHsmListOutboundNetworkDependenciesEndpointsOptionalParams): PagedAsyncIterableIterator<OutboundEnvironmentEndpoint>;
    private listOutboundNetworkDependenciesEndpointsPagingPage;
    private listOutboundNetworkDependenciesEndpointsPagingAll;
    /**
     * Create or Update a dedicated HSM in the specified subscription.
     * @param resourceGroupName The name of the Resource Group to which the resource belongs.
     * @param name Name of the dedicated Hsm
     * @param parameters Parameters to create or update the dedicated hsm
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, name: string, parameters: DedicatedHsm, options?: DedicatedHsmCreateOrUpdateOptionalParams): Promise<PollerLike<PollOperationState<DedicatedHsmCreateOrUpdateResponse>, DedicatedHsmCreateOrUpdateResponse>>;
    /**
     * Create or Update a dedicated HSM in the specified subscription.
     * @param resourceGroupName The name of the Resource Group to which the resource belongs.
     * @param name Name of the dedicated Hsm
     * @param parameters Parameters to create or update the dedicated hsm
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, name: string, parameters: DedicatedHsm, options?: DedicatedHsmCreateOrUpdateOptionalParams): Promise<DedicatedHsmCreateOrUpdateResponse>;
    /**
     * Update a dedicated HSM in the specified subscription.
     * @param resourceGroupName The name of the Resource Group to which the server belongs.
     * @param name Name of the dedicated HSM
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, name: string, options?: DedicatedHsmUpdateOptionalParams): Promise<PollerLike<PollOperationState<DedicatedHsmUpdateResponse>, DedicatedHsmUpdateResponse>>;
    /**
     * Update a dedicated HSM in the specified subscription.
     * @param resourceGroupName The name of the Resource Group to which the server belongs.
     * @param name Name of the dedicated HSM
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, name: string, options?: DedicatedHsmUpdateOptionalParams): Promise<DedicatedHsmUpdateResponse>;
    /**
     * Deletes the specified Azure Dedicated HSM.
     * @param resourceGroupName The name of the Resource Group to which the dedicated HSM belongs.
     * @param name The name of the dedicated HSM to delete
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, name: string, options?: DedicatedHsmDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Deletes the specified Azure Dedicated HSM.
     * @param resourceGroupName The name of the Resource Group to which the dedicated HSM belongs.
     * @param name The name of the dedicated HSM to delete
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, name: string, options?: DedicatedHsmDeleteOptionalParams): Promise<void>;
    /**
     * Gets the specified Azure dedicated HSM.
     * @param resourceGroupName The name of the Resource Group to which the dedicated hsm belongs.
     * @param name The name of the dedicated HSM.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, name: string, options?: DedicatedHsmGetOptionalParams): Promise<DedicatedHsmGetResponse>;
    /**
     * The List operation gets information about the dedicated hsms associated with the subscription and
     * within the specified resource group.
     * @param resourceGroupName The name of the Resource Group to which the dedicated HSM belongs.
     * @param options The options parameters.
     */
    private _listByResourceGroup;
    /**
     * The List operation gets information about the dedicated HSMs associated with the subscription.
     * @param options The options parameters.
     */
    private _listBySubscription;
    /**
     * Gets a list of egress endpoints (network endpoints of all outbound dependencies) in the specified
     * dedicated hsm resource. The operation returns properties of each egress endpoint.
     * @param resourceGroupName The name of the Resource Group to which the dedicated hsm belongs.
     * @param name The name of the dedicated HSM.
     * @param options The options parameters.
     */
    private _listOutboundNetworkDependenciesEndpoints;
    /**
     * ListByResourceGroupNext
     * @param resourceGroupName The name of the Resource Group to which the dedicated HSM belongs.
     * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.
     * @param options The options parameters.
     */
    private _listByResourceGroupNext;
    /**
     * ListBySubscriptionNext
     * @param nextLink The nextLink from the previous successful call to the ListBySubscription method.
     * @param options The options parameters.
     */
    private _listBySubscriptionNext;
    /**
     * ListOutboundNetworkDependenciesEndpointsNext
     * @param resourceGroupName The name of the Resource Group to which the dedicated hsm belongs.
     * @param name The name of the dedicated HSM.
     * @param nextLink The nextLink from the previous successful call to the
     *                 ListOutboundNetworkDependenciesEndpoints method.
     * @param options The options parameters.
     */
    private _listOutboundNetworkDependenciesEndpointsNext;
}
//# sourceMappingURL=dedicatedHsmOperations.d.ts.map