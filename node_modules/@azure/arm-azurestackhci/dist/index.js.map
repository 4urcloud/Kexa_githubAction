{"version":3,"file":"index.js","sources":["../src/pagingHelper.ts","../src/models/index.ts","../src/models/mappers.ts","../src/models/parameters.ts","../src/lroImpl.ts","../src/operations/arcSettings.ts","../src/operations/clusters.ts","../src/operations/extensions.ts","../src/operations/operations.ts","../src/azureStackHCIClient.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport interface PageInfo {\n  continuationToken?: string;\n}\n\nconst pageMap = new WeakMap<object, PageInfo>();\n\n/**\n * Given a result page from a pageable operation, returns a\n * continuation token that can be used to begin paging from\n * that point later.\n * @param page A result object from calling .byPage() on a paged operation.\n * @returns The continuation token that can be passed into byPage().\n */\nexport function getContinuationToken(page: unknown): string | undefined {\n  if (typeof page !== \"object\" || page === null) {\n    return undefined;\n  }\n  return pageMap.get(page)?.continuationToken;\n}\n\nexport function setContinuationToken(\n  page: unknown,\n  continuationToken: string | undefined\n): void {\n  if (typeof page !== \"object\" || page === null || !continuationToken) {\n    return;\n  }\n  const pageInfo = pageMap.get(page) ?? {};\n  pageInfo.continuationToken = continuationToken;\n  pageMap.set(page, pageInfo);\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\n/** List of ArcSetting proxy resources for the HCI cluster. */\nexport interface ArcSettingList {\n  /**\n   * List of ArcSetting proxy resources.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ArcSetting[];\n  /**\n   * Link to the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Status of Arc agent for a particular node in HCI Cluster. */\nexport interface PerNodeState {\n  /**\n   * Name of the Node in HCI Cluster\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Fully qualified resource ID for the Arc agent of this node.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly arcInstance?: string;\n  /**\n   * State of Arc agent in this node.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly state?: NodeArcState;\n}\n\n/** Common fields that are returned in the response for all Azure Resource Manager resources */\nexport interface Resource {\n  /**\n   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The name of the resource\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n}\n\n/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */\nexport interface ErrorResponse {\n  /** The error object. */\n  error?: ErrorDetail;\n}\n\n/** The error detail. */\nexport interface ErrorDetail {\n  /**\n   * The error code.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly code?: string;\n  /**\n   * The error message.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n  /**\n   * The error target.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly target?: string;\n  /**\n   * The error details.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly details?: ErrorDetail[];\n  /**\n   * The error additional info.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly additionalInfo?: ErrorAdditionalInfo[];\n}\n\n/** The resource management error additional info. */\nexport interface ErrorAdditionalInfo {\n  /**\n   * The additional info type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * The additional info.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly info?: Record<string, unknown>;\n}\n\n/** ArcSetting details to update. */\nexport interface ArcSettingsPatch {\n  /** Resource tags. */\n  tags?: { [propertyName: string]: string };\n  /** contains connectivity related configuration for ARC resources */\n  connectivityProperties?: Record<string, unknown>;\n}\n\nexport interface PasswordCredential {\n  secretText?: string;\n  keyId?: string;\n  startDateTime?: Date;\n  endDateTime?: Date;\n}\n\n/** ArcIdentity details. */\nexport interface ArcIdentityResponse {\n  arcApplicationClientId?: string;\n  arcApplicationTenantId?: string;\n  arcServicePrincipalObjectId?: string;\n  arcApplicationObjectId?: string;\n}\n\n/** List of clusters. */\nexport interface ClusterList {\n  /** List of clusters. */\n  value?: Cluster[];\n  /**\n   * Link to the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Desired properties of the cluster. */\nexport interface ClusterDesiredProperties {\n  /** Desired state of Windows Server Subscription. */\n  windowsServerSubscription?: WindowsServerSubscription;\n  /** Desired level of diagnostic data emitted by the cluster. */\n  diagnosticLevel?: DiagnosticLevel;\n}\n\n/** Properties reported by cluster agent. */\nexport interface ClusterReportedProperties {\n  /**\n   * Name of the on-prem cluster connected to this resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly clusterName?: string;\n  /**\n   * Unique id generated by the on-prem cluster.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly clusterId?: string;\n  /**\n   * Version of the cluster software.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly clusterVersion?: string;\n  /**\n   * List of nodes reported by the cluster.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nodes?: ClusterNode[];\n  /**\n   * Last time the cluster reported the data.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastUpdated?: Date;\n  /**\n   * IMDS attestation status of the cluster.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly imdsAttestation?: ImdsAttestation;\n  /** Level of diagnostic data emitted by the cluster. */\n  diagnosticLevel?: DiagnosticLevel;\n}\n\n/** Cluster node details. */\nexport interface ClusterNode {\n  /**\n   * Name of the cluster node.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Id of the node in the cluster.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: number;\n  /**\n   * State of Windows Server Subscription.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly windowsServerSubscription?: WindowsServerSubscription;\n  /**\n   * Manufacturer of the cluster node hardware.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly manufacturer?: string;\n  /**\n   * Model name of the cluster node hardware.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly model?: string;\n  /**\n   * Operating system running on the cluster node.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly osName?: string;\n  /**\n   * Version of the operating system running on the cluster node.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly osVersion?: string;\n  /**\n   * Immutable id of the cluster node.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly serialNumber?: string;\n  /**\n   * Number of physical cores on the cluster node.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly coreCount?: number;\n  /**\n   * Total available memory on the cluster node (in GiB).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly memoryInGiB?: number;\n}\n\n/** Cluster details to update. */\nexport interface ClusterPatch {\n  /** Resource tags. */\n  tags?: { [propertyName: string]: string };\n  /** Endpoint configured for management from the Azure portal */\n  cloudManagementEndpoint?: string;\n  /** App id of cluster AAD identity. */\n  aadClientId?: string;\n  /** Tenant id of cluster AAD identity. */\n  aadTenantId?: string;\n  /** Desired properties of the cluster. */\n  desiredProperties?: ClusterDesiredProperties;\n}\n\nexport interface UploadCertificateRequest {\n  properties?: RawCertificateData;\n}\n\nexport interface RawCertificateData {\n  certificates?: string[];\n}\n\n/** Cluster Identity details. */\nexport interface ClusterIdentityResponse {\n  aadClientId?: string;\n  aadTenantId?: string;\n  aadServicePrincipalObjectId?: string;\n  aadApplicationObjectId?: string;\n}\n\n/** List of Extensions in HCI cluster. */\nexport interface ExtensionList {\n  /**\n   * List of Extensions in HCI cluster.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: Extension[];\n  /**\n   * Link to the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Status of Arc Extension for a particular node in HCI Cluster. */\nexport interface PerNodeExtensionState {\n  /**\n   * Name of the node in HCI Cluster.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Fully qualified resource ID for the particular Arc Extension on this node.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly extension?: string;\n  /**\n   * State of Arc Extension in this node.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly state?: NodeExtensionState;\n}\n\n/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */\nexport interface OperationListResult {\n  /**\n   * List of operations supported by the resource provider\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: Operation[];\n  /**\n   * URL to get the next set of operation list results (if there are any).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Details of a REST API operation, returned from the Resource Provider Operations API */\nexport interface Operation {\n  /**\n   * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isDataAction?: boolean;\n  /** Localized display information for this particular operation. */\n  display?: OperationDisplay;\n  /**\n   * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly origin?: Origin;\n  /**\n   * Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly actionType?: ActionType;\n}\n\n/** Localized display information for this particular operation. */\nexport interface OperationDisplay {\n  /**\n   * The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provider?: string;\n  /**\n   * The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resource?: string;\n  /**\n   * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly operation?: string;\n  /**\n   * The short, localized friendly description of the operation; suitable for tool tips and detailed views.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly description?: string;\n}\n\n/** Connectivity related configuration required by arc server. */\nexport interface ArcConnectivityProperties {\n  /** True indicates ARC connectivity is enabled */\n  enabled?: boolean;\n}\n\n/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */\nexport interface ProxyResource extends Resource {}\n\n/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */\nexport interface TrackedResource extends Resource {\n  /** Resource tags. */\n  tags?: { [propertyName: string]: string };\n  /** The geo-location where the resource lives */\n  location: string;\n}\n\n/** ArcSetting details. */\nexport interface ArcSetting extends ProxyResource {\n  /**\n   * Provisioning state of the ArcSetting proxy resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** The resource group that hosts the Arc agents, ie. Hybrid Compute Machine resources. */\n  arcInstanceResourceGroup?: string;\n  /** App id of arc AAD identity. */\n  arcApplicationClientId?: string;\n  /** Tenant id of arc AAD identity. */\n  arcApplicationTenantId?: string;\n  /** Object id of arc AAD service principal. */\n  arcServicePrincipalObjectId?: string;\n  /** Object id of arc AAD identity. */\n  arcApplicationObjectId?: string;\n  /**\n   * Aggregate state of Arc agent across the nodes in this HCI cluster.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly aggregateState?: ArcSettingAggregateState;\n  /**\n   * State of Arc agent in each of the nodes.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly perNodeDetails?: PerNodeState[];\n  /** contains connectivity related configuration for ARC resources */\n  connectivityProperties?: Record<string, unknown>;\n  /** The identity that created the resource. */\n  createdBy?: string;\n  /** The type of identity that created the resource. */\n  createdByType?: CreatedByType;\n  /** The timestamp of resource creation (UTC). */\n  createdAt?: Date;\n  /** The identity that last modified the resource. */\n  lastModifiedBy?: string;\n  /** The type of identity that last modified the resource. */\n  lastModifiedByType?: CreatedByType;\n  /** The timestamp of resource last modification (UTC) */\n  lastModifiedAt?: Date;\n}\n\n/** Details of a particular extension in HCI Cluster. */\nexport interface Extension extends ProxyResource {\n  /**\n   * Provisioning state of the Extension proxy resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /**\n   * Aggregate state of Arc Extensions across the nodes in this HCI cluster.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly aggregateState?: ExtensionAggregateState;\n  /**\n   * State of Arc Extension in each of the nodes.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly perNodeExtensionDetails?: PerNodeExtensionState[];\n  /** How the extension handler should be forced to update even if the extension configuration has not changed. */\n  forceUpdateTag?: string;\n  /** The name of the extension handler publisher. */\n  publisher?: string;\n  /** Specifies the type of the extension; an example is \"CustomScriptExtension\". */\n  typePropertiesExtensionParametersType?: string;\n  /** Specifies the version of the script handler. */\n  typeHandlerVersion?: string;\n  /** Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true. */\n  autoUpgradeMinorVersion?: boolean;\n  /** Json formatted public settings for the extension. */\n  settings?: Record<string, unknown>;\n  /** Protected settings (may contain secrets). */\n  protectedSettings?: Record<string, unknown>;\n  /** The identity that created the resource. */\n  createdBy?: string;\n  /** The type of identity that created the resource. */\n  createdByType?: CreatedByType;\n  /** The timestamp of resource creation (UTC). */\n  createdAt?: Date;\n  /** The identity that last modified the resource. */\n  lastModifiedBy?: string;\n  /** The type of identity that last modified the resource. */\n  lastModifiedByType?: CreatedByType;\n  /** The timestamp of resource last modification (UTC) */\n  lastModifiedAt?: Date;\n}\n\n/** Cluster details. */\nexport interface Cluster extends TrackedResource {\n  /**\n   * Provisioning state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /**\n   * Status of the cluster agent.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: Status;\n  /**\n   * Unique, immutable resource id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly cloudId?: string;\n  /** Endpoint configured for management from the Azure portal. */\n  cloudManagementEndpoint?: string;\n  /** App id of cluster AAD identity. */\n  aadClientId?: string;\n  /** Tenant id of cluster AAD identity. */\n  aadTenantId?: string;\n  /** Object id of cluster AAD identity. */\n  aadApplicationObjectId?: string;\n  /** Id of cluster identity service principal. */\n  aadServicePrincipalObjectId?: string;\n  /** Desired properties of the cluster. */\n  desiredProperties?: ClusterDesiredProperties;\n  /**\n   * Properties reported by cluster agent.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly reportedProperties?: ClusterReportedProperties;\n  /**\n   * Number of days remaining in the trial period.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly trialDaysRemaining?: number;\n  /**\n   * Type of billing applied to the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly billingModel?: string;\n  /**\n   * First cluster sync timestamp.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly registrationTimestamp?: Date;\n  /**\n   * Most recent cluster sync timestamp.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastSyncTimestamp?: Date;\n  /**\n   * Most recent billing meter timestamp.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastBillingTimestamp?: Date;\n  /**\n   * Region specific DataPath Endpoint of the cluster.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly serviceEndpoint?: string;\n  /** The identity that created the resource. */\n  createdBy?: string;\n  /** The type of identity that created the resource. */\n  createdByType?: CreatedByType;\n  /** The timestamp of resource creation (UTC). */\n  createdAt?: Date;\n  /** The identity that last modified the resource. */\n  lastModifiedBy?: string;\n  /** The type of identity that last modified the resource. */\n  lastModifiedByType?: CreatedByType;\n  /** The timestamp of resource last modification (UTC) */\n  lastModifiedAt?: Date;\n}\n\n/** Known values of {@link CreatedByType} that the service accepts. */\nexport enum KnownCreatedByType {\n  /** User */\n  User = \"User\",\n  /** Application */\n  Application = \"Application\",\n  /** ManagedIdentity */\n  ManagedIdentity = \"ManagedIdentity\",\n  /** Key */\n  Key = \"Key\"\n}\n\n/**\n * Defines values for CreatedByType. \\\n * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **User** \\\n * **Application** \\\n * **ManagedIdentity** \\\n * **Key**\n */\nexport type CreatedByType = string;\n\n/** Known values of {@link ProvisioningState} that the service accepts. */\nexport enum KnownProvisioningState {\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Canceled */\n  Canceled = \"Canceled\",\n  /** Accepted */\n  Accepted = \"Accepted\",\n  /** Provisioning */\n  Provisioning = \"Provisioning\"\n}\n\n/**\n * Defines values for ProvisioningState. \\\n * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Succeeded** \\\n * **Failed** \\\n * **Canceled** \\\n * **Accepted** \\\n * **Provisioning**\n */\nexport type ProvisioningState = string;\n\n/** Known values of {@link ArcSettingAggregateState} that the service accepts. */\nexport enum KnownArcSettingAggregateState {\n  /** NotSpecified */\n  NotSpecified = \"NotSpecified\",\n  /** Error */\n  Error = \"Error\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Canceled */\n  Canceled = \"Canceled\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Connected */\n  Connected = \"Connected\",\n  /** Disconnected */\n  Disconnected = \"Disconnected\",\n  /** Deleted */\n  Deleted = \"Deleted\",\n  /** Creating */\n  Creating = \"Creating\",\n  /** Updating */\n  Updating = \"Updating\",\n  /** Deleting */\n  Deleting = \"Deleting\",\n  /** Moving */\n  Moving = \"Moving\",\n  /** PartiallySucceeded */\n  PartiallySucceeded = \"PartiallySucceeded\",\n  /** PartiallyConnected */\n  PartiallyConnected = \"PartiallyConnected\",\n  /** InProgress */\n  InProgress = \"InProgress\"\n}\n\n/**\n * Defines values for ArcSettingAggregateState. \\\n * {@link KnownArcSettingAggregateState} can be used interchangeably with ArcSettingAggregateState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NotSpecified** \\\n * **Error** \\\n * **Succeeded** \\\n * **Canceled** \\\n * **Failed** \\\n * **Connected** \\\n * **Disconnected** \\\n * **Deleted** \\\n * **Creating** \\\n * **Updating** \\\n * **Deleting** \\\n * **Moving** \\\n * **PartiallySucceeded** \\\n * **PartiallyConnected** \\\n * **InProgress**\n */\nexport type ArcSettingAggregateState = string;\n\n/** Known values of {@link NodeArcState} that the service accepts. */\nexport enum KnownNodeArcState {\n  /** NotSpecified */\n  NotSpecified = \"NotSpecified\",\n  /** Error */\n  Error = \"Error\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Canceled */\n  Canceled = \"Canceled\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Connected */\n  Connected = \"Connected\",\n  /** Disconnected */\n  Disconnected = \"Disconnected\",\n  /** Deleted */\n  Deleted = \"Deleted\",\n  /** Creating */\n  Creating = \"Creating\",\n  /** Updating */\n  Updating = \"Updating\",\n  /** Deleting */\n  Deleting = \"Deleting\",\n  /** Moving */\n  Moving = \"Moving\"\n}\n\n/**\n * Defines values for NodeArcState. \\\n * {@link KnownNodeArcState} can be used interchangeably with NodeArcState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NotSpecified** \\\n * **Error** \\\n * **Succeeded** \\\n * **Canceled** \\\n * **Failed** \\\n * **Connected** \\\n * **Disconnected** \\\n * **Deleted** \\\n * **Creating** \\\n * **Updating** \\\n * **Deleting** \\\n * **Moving**\n */\nexport type NodeArcState = string;\n\n/** Known values of {@link Status} that the service accepts. */\nexport enum KnownStatus {\n  /** NotYetRegistered */\n  NotYetRegistered = \"NotYetRegistered\",\n  /** ConnectedRecently */\n  ConnectedRecently = \"ConnectedRecently\",\n  /** NotConnectedRecently */\n  NotConnectedRecently = \"NotConnectedRecently\",\n  /** Disconnected */\n  Disconnected = \"Disconnected\",\n  /** Error */\n  Error = \"Error\"\n}\n\n/**\n * Defines values for Status. \\\n * {@link KnownStatus} can be used interchangeably with Status,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NotYetRegistered** \\\n * **ConnectedRecently** \\\n * **NotConnectedRecently** \\\n * **Disconnected** \\\n * **Error**\n */\nexport type Status = string;\n\n/** Known values of {@link WindowsServerSubscription} that the service accepts. */\nexport enum KnownWindowsServerSubscription {\n  /** Disabled */\n  Disabled = \"Disabled\",\n  /** Enabled */\n  Enabled = \"Enabled\"\n}\n\n/**\n * Defines values for WindowsServerSubscription. \\\n * {@link KnownWindowsServerSubscription} can be used interchangeably with WindowsServerSubscription,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Disabled** \\\n * **Enabled**\n */\nexport type WindowsServerSubscription = string;\n\n/** Known values of {@link DiagnosticLevel} that the service accepts. */\nexport enum KnownDiagnosticLevel {\n  /** Off */\n  Off = \"Off\",\n  /** Basic */\n  Basic = \"Basic\",\n  /** Enhanced */\n  Enhanced = \"Enhanced\"\n}\n\n/**\n * Defines values for DiagnosticLevel. \\\n * {@link KnownDiagnosticLevel} can be used interchangeably with DiagnosticLevel,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Off** \\\n * **Basic** \\\n * **Enhanced**\n */\nexport type DiagnosticLevel = string;\n\n/** Known values of {@link ImdsAttestation} that the service accepts. */\nexport enum KnownImdsAttestation {\n  /** Disabled */\n  Disabled = \"Disabled\",\n  /** Enabled */\n  Enabled = \"Enabled\"\n}\n\n/**\n * Defines values for ImdsAttestation. \\\n * {@link KnownImdsAttestation} can be used interchangeably with ImdsAttestation,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Disabled** \\\n * **Enabled**\n */\nexport type ImdsAttestation = string;\n\n/** Known values of {@link ExtensionAggregateState} that the service accepts. */\nexport enum KnownExtensionAggregateState {\n  /** NotSpecified */\n  NotSpecified = \"NotSpecified\",\n  /** Error */\n  Error = \"Error\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Canceled */\n  Canceled = \"Canceled\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Connected */\n  Connected = \"Connected\",\n  /** Disconnected */\n  Disconnected = \"Disconnected\",\n  /** Deleted */\n  Deleted = \"Deleted\",\n  /** Creating */\n  Creating = \"Creating\",\n  /** Updating */\n  Updating = \"Updating\",\n  /** Deleting */\n  Deleting = \"Deleting\",\n  /** Moving */\n  Moving = \"Moving\",\n  /** PartiallySucceeded */\n  PartiallySucceeded = \"PartiallySucceeded\",\n  /** PartiallyConnected */\n  PartiallyConnected = \"PartiallyConnected\",\n  /** InProgress */\n  InProgress = \"InProgress\"\n}\n\n/**\n * Defines values for ExtensionAggregateState. \\\n * {@link KnownExtensionAggregateState} can be used interchangeably with ExtensionAggregateState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NotSpecified** \\\n * **Error** \\\n * **Succeeded** \\\n * **Canceled** \\\n * **Failed** \\\n * **Connected** \\\n * **Disconnected** \\\n * **Deleted** \\\n * **Creating** \\\n * **Updating** \\\n * **Deleting** \\\n * **Moving** \\\n * **PartiallySucceeded** \\\n * **PartiallyConnected** \\\n * **InProgress**\n */\nexport type ExtensionAggregateState = string;\n\n/** Known values of {@link NodeExtensionState} that the service accepts. */\nexport enum KnownNodeExtensionState {\n  /** NotSpecified */\n  NotSpecified = \"NotSpecified\",\n  /** Error */\n  Error = \"Error\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Canceled */\n  Canceled = \"Canceled\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Connected */\n  Connected = \"Connected\",\n  /** Disconnected */\n  Disconnected = \"Disconnected\",\n  /** Deleted */\n  Deleted = \"Deleted\",\n  /** Creating */\n  Creating = \"Creating\",\n  /** Updating */\n  Updating = \"Updating\",\n  /** Deleting */\n  Deleting = \"Deleting\",\n  /** Moving */\n  Moving = \"Moving\"\n}\n\n/**\n * Defines values for NodeExtensionState. \\\n * {@link KnownNodeExtensionState} can be used interchangeably with NodeExtensionState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NotSpecified** \\\n * **Error** \\\n * **Succeeded** \\\n * **Canceled** \\\n * **Failed** \\\n * **Connected** \\\n * **Disconnected** \\\n * **Deleted** \\\n * **Creating** \\\n * **Updating** \\\n * **Deleting** \\\n * **Moving**\n */\nexport type NodeExtensionState = string;\n\n/** Known values of {@link Origin} that the service accepts. */\nexport enum KnownOrigin {\n  /** User */\n  User = \"user\",\n  /** System */\n  System = \"system\",\n  /** UserSystem */\n  UserSystem = \"user,system\"\n}\n\n/**\n * Defines values for Origin. \\\n * {@link KnownOrigin} can be used interchangeably with Origin,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **user** \\\n * **system** \\\n * **user,system**\n */\nexport type Origin = string;\n\n/** Known values of {@link ActionType} that the service accepts. */\nexport enum KnownActionType {\n  /** Internal */\n  Internal = \"Internal\"\n}\n\n/**\n * Defines values for ActionType. \\\n * {@link KnownActionType} can be used interchangeably with ActionType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Internal**\n */\nexport type ActionType = string;\n\n/** Optional parameters. */\nexport interface ArcSettingsListByClusterOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByCluster operation. */\nexport type ArcSettingsListByClusterResponse = ArcSettingList;\n\n/** Optional parameters. */\nexport interface ArcSettingsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ArcSettingsGetResponse = ArcSetting;\n\n/** Optional parameters. */\nexport interface ArcSettingsCreateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the create operation. */\nexport type ArcSettingsCreateResponse = ArcSetting;\n\n/** Optional parameters. */\nexport interface ArcSettingsUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the update operation. */\nexport type ArcSettingsUpdateResponse = ArcSetting;\n\n/** Optional parameters. */\nexport interface ArcSettingsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ArcSettingsGeneratePasswordOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the generatePassword operation. */\nexport type ArcSettingsGeneratePasswordResponse = PasswordCredential;\n\n/** Optional parameters. */\nexport interface ArcSettingsCreateIdentityOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createIdentity operation. */\nexport type ArcSettingsCreateIdentityResponse = ArcIdentityResponse;\n\n/** Optional parameters. */\nexport interface ArcSettingsListByClusterNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByClusterNext operation. */\nexport type ArcSettingsListByClusterNextResponse = ArcSettingList;\n\n/** Optional parameters. */\nexport interface ClustersListBySubscriptionOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBySubscription operation. */\nexport type ClustersListBySubscriptionResponse = ClusterList;\n\n/** Optional parameters. */\nexport interface ClustersListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type ClustersListByResourceGroupResponse = ClusterList;\n\n/** Optional parameters. */\nexport interface ClustersGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ClustersGetResponse = Cluster;\n\n/** Optional parameters. */\nexport interface ClustersCreateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the create operation. */\nexport type ClustersCreateResponse = Cluster;\n\n/** Optional parameters. */\nexport interface ClustersUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the update operation. */\nexport type ClustersUpdateResponse = Cluster;\n\n/** Optional parameters. */\nexport interface ClustersDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ClustersUploadCertificateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ClustersCreateIdentityOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createIdentity operation. */\nexport type ClustersCreateIdentityResponse = ClusterIdentityResponse;\n\n/** Optional parameters. */\nexport interface ClustersListBySubscriptionNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBySubscriptionNext operation. */\nexport type ClustersListBySubscriptionNextResponse = ClusterList;\n\n/** Optional parameters. */\nexport interface ClustersListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type ClustersListByResourceGroupNextResponse = ClusterList;\n\n/** Optional parameters. */\nexport interface ExtensionsListByArcSettingOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByArcSetting operation. */\nexport type ExtensionsListByArcSettingResponse = ExtensionList;\n\n/** Optional parameters. */\nexport interface ExtensionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ExtensionsGetResponse = Extension;\n\n/** Optional parameters. */\nexport interface ExtensionsCreateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the create operation. */\nexport type ExtensionsCreateResponse = Extension;\n\n/** Optional parameters. */\nexport interface ExtensionsUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type ExtensionsUpdateResponse = Extension;\n\n/** Optional parameters. */\nexport interface ExtensionsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ExtensionsListByArcSettingNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByArcSettingNext operation. */\nexport type ExtensionsListByArcSettingNextResponse = ExtensionList;\n\n/** Optional parameters. */\nexport interface OperationsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type OperationsListResponse = OperationListResult;\n\n/** Optional parameters. */\nexport interface AzureStackHCIClientOptionalParams\n  extends coreClient.ServiceClientOptions {\n  /** server parameter */\n  $host?: string;\n  /** Api Version */\n  apiVersion?: string;\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport const ArcSettingList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ArcSettingList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ArcSetting\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PerNodeState: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PerNodeState\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      arcInstance: {\n        serializedName: \"arcInstance\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      state: {\n        serializedName: \"state\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Resource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Resource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorResponse\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorDetail\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorDetail: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorDetail\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      target: {\n        serializedName: \"target\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      details: {\n        serializedName: \"details\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorDetail\"\n            }\n          }\n        }\n      },\n      additionalInfo: {\n        serializedName: \"additionalInfo\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorAdditionalInfo\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorAdditionalInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorAdditionalInfo\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      info: {\n        serializedName: \"info\",\n        readOnly: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const ArcSettingsPatch: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ArcSettingsPatch\",\n    modelProperties: {\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      connectivityProperties: {\n        serializedName: \"properties.connectivityProperties\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const PasswordCredential: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PasswordCredential\",\n    modelProperties: {\n      secretText: {\n        serializedName: \"secretText\",\n        type: {\n          name: \"String\"\n        }\n      },\n      keyId: {\n        serializedName: \"keyId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      startDateTime: {\n        serializedName: \"startDateTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endDateTime: {\n        serializedName: \"endDateTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const ArcIdentityResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ArcIdentityResponse\",\n    modelProperties: {\n      arcApplicationClientId: {\n        serializedName: \"properties.arcApplicationClientId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      arcApplicationTenantId: {\n        serializedName: \"properties.arcApplicationTenantId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      arcServicePrincipalObjectId: {\n        serializedName: \"properties.arcServicePrincipalObjectId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      arcApplicationObjectId: {\n        serializedName: \"properties.arcApplicationObjectId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ClusterList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ClusterList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Cluster\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ClusterDesiredProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ClusterDesiredProperties\",\n    modelProperties: {\n      windowsServerSubscription: {\n        serializedName: \"windowsServerSubscription\",\n        type: {\n          name: \"String\"\n        }\n      },\n      diagnosticLevel: {\n        serializedName: \"diagnosticLevel\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ClusterReportedProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ClusterReportedProperties\",\n    modelProperties: {\n      clusterName: {\n        serializedName: \"clusterName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      clusterId: {\n        serializedName: \"clusterId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      clusterVersion: {\n        serializedName: \"clusterVersion\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nodes: {\n        serializedName: \"nodes\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ClusterNode\"\n            }\n          }\n        }\n      },\n      lastUpdated: {\n        serializedName: \"lastUpdated\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      imdsAttestation: {\n        serializedName: \"imdsAttestation\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      diagnosticLevel: {\n        serializedName: \"diagnosticLevel\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ClusterNode: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ClusterNode\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      windowsServerSubscription: {\n        serializedName: \"windowsServerSubscription\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      manufacturer: {\n        serializedName: \"manufacturer\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      model: {\n        serializedName: \"model\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      osName: {\n        serializedName: \"osName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      osVersion: {\n        serializedName: \"osVersion\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      serialNumber: {\n        serializedName: \"serialNumber\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      coreCount: {\n        serializedName: \"coreCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      memoryInGiB: {\n        serializedName: \"memoryInGiB\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ClusterPatch: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ClusterPatch\",\n    modelProperties: {\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      cloudManagementEndpoint: {\n        serializedName: \"properties.cloudManagementEndpoint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      aadClientId: {\n        serializedName: \"properties.aadClientId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      aadTenantId: {\n        serializedName: \"properties.aadTenantId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      desiredProperties: {\n        serializedName: \"properties.desiredProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"ClusterDesiredProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const UploadCertificateRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UploadCertificateRequest\",\n    modelProperties: {\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"RawCertificateData\"\n        }\n      }\n    }\n  }\n};\n\nexport const RawCertificateData: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RawCertificateData\",\n    modelProperties: {\n      certificates: {\n        serializedName: \"certificates\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ClusterIdentityResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ClusterIdentityResponse\",\n    modelProperties: {\n      aadClientId: {\n        serializedName: \"properties.aadClientId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      aadTenantId: {\n        serializedName: \"properties.aadTenantId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      aadServicePrincipalObjectId: {\n        serializedName: \"properties.aadServicePrincipalObjectId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      aadApplicationObjectId: {\n        serializedName: \"properties.aadApplicationObjectId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ExtensionList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExtensionList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Extension\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PerNodeExtensionState: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PerNodeExtensionState\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      extension: {\n        serializedName: \"extension\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      state: {\n        serializedName: \"state\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Operation\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Operation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Operation\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      isDataAction: {\n        serializedName: \"isDataAction\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      display: {\n        serializedName: \"display\",\n        type: {\n          name: \"Composite\",\n          className: \"OperationDisplay\"\n        }\n      },\n      origin: {\n        serializedName: \"origin\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      actionType: {\n        serializedName: \"actionType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationDisplay: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationDisplay\",\n    modelProperties: {\n      provider: {\n        serializedName: \"provider\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resource: {\n        serializedName: \"resource\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      operation: {\n        serializedName: \"operation\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ArcConnectivityProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ArcConnectivityProperties\",\n    modelProperties: {\n      enabled: {\n        serializedName: \"enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const ProxyResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProxyResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties\n    }\n  }\n};\n\nexport const TrackedResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TrackedResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ArcSetting: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ArcSetting\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      arcInstanceResourceGroup: {\n        serializedName: \"properties.arcInstanceResourceGroup\",\n        type: {\n          name: \"String\"\n        }\n      },\n      arcApplicationClientId: {\n        serializedName: \"properties.arcApplicationClientId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      arcApplicationTenantId: {\n        serializedName: \"properties.arcApplicationTenantId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      arcServicePrincipalObjectId: {\n        serializedName: \"properties.arcServicePrincipalObjectId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      arcApplicationObjectId: {\n        serializedName: \"properties.arcApplicationObjectId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      aggregateState: {\n        serializedName: \"properties.aggregateState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      perNodeDetails: {\n        serializedName: \"properties.perNodeDetails\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PerNodeState\"\n            }\n          }\n        }\n      },\n      connectivityProperties: {\n        serializedName: \"properties.connectivityProperties\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      createdBy: {\n        serializedName: \"systemData.createdBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdByType: {\n        serializedName: \"systemData.createdByType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdAt: {\n        serializedName: \"systemData.createdAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastModifiedBy: {\n        serializedName: \"systemData.lastModifiedBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedByType: {\n        serializedName: \"systemData.lastModifiedByType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedAt: {\n        serializedName: \"systemData.lastModifiedAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const Extension: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Extension\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      aggregateState: {\n        serializedName: \"properties.aggregateState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      perNodeExtensionDetails: {\n        serializedName: \"properties.perNodeExtensionDetails\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PerNodeExtensionState\"\n            }\n          }\n        }\n      },\n      forceUpdateTag: {\n        serializedName: \"properties.extensionParameters.forceUpdateTag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      publisher: {\n        serializedName: \"properties.extensionParameters.publisher\",\n        type: {\n          name: \"String\"\n        }\n      },\n      typePropertiesExtensionParametersType: {\n        serializedName: \"properties.extensionParameters.type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      typeHandlerVersion: {\n        serializedName: \"properties.extensionParameters.typeHandlerVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      autoUpgradeMinorVersion: {\n        serializedName:\n          \"properties.extensionParameters.autoUpgradeMinorVersion\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      settings: {\n        serializedName: \"properties.extensionParameters.settings\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      protectedSettings: {\n        serializedName: \"properties.extensionParameters.protectedSettings\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      createdBy: {\n        serializedName: \"systemData.createdBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdByType: {\n        serializedName: \"systemData.createdByType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdAt: {\n        serializedName: \"systemData.createdAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastModifiedBy: {\n        serializedName: \"systemData.lastModifiedBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedByType: {\n        serializedName: \"systemData.lastModifiedByType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedAt: {\n        serializedName: \"systemData.lastModifiedAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const Cluster: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Cluster\",\n    modelProperties: {\n      ...TrackedResource.type.modelProperties,\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"properties.status\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      cloudId: {\n        serializedName: \"properties.cloudId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      cloudManagementEndpoint: {\n        serializedName: \"properties.cloudManagementEndpoint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      aadClientId: {\n        serializedName: \"properties.aadClientId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      aadTenantId: {\n        serializedName: \"properties.aadTenantId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      aadApplicationObjectId: {\n        serializedName: \"properties.aadApplicationObjectId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      aadServicePrincipalObjectId: {\n        serializedName: \"properties.aadServicePrincipalObjectId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      desiredProperties: {\n        serializedName: \"properties.desiredProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"ClusterDesiredProperties\"\n        }\n      },\n      reportedProperties: {\n        serializedName: \"properties.reportedProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"ClusterReportedProperties\"\n        }\n      },\n      trialDaysRemaining: {\n        serializedName: \"properties.trialDaysRemaining\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      billingModel: {\n        serializedName: \"properties.billingModel\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      registrationTimestamp: {\n        serializedName: \"properties.registrationTimestamp\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastSyncTimestamp: {\n        serializedName: \"properties.lastSyncTimestamp\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastBillingTimestamp: {\n        serializedName: \"properties.lastBillingTimestamp\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      serviceEndpoint: {\n        serializedName: \"properties.serviceEndpoint\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      createdBy: {\n        serializedName: \"systemData.createdBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdByType: {\n        serializedName: \"systemData.createdByType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdAt: {\n        serializedName: \"systemData.createdAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastModifiedBy: {\n        serializedName: \"systemData.lastModifiedBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedByType: {\n        serializedName: \"systemData.lastModifiedByType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedAt: {\n        serializedName: \"systemData.lastModifiedAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter\n} from \"@azure/core-client\";\nimport {\n  ArcSetting as ArcSettingMapper,\n  ArcSettingsPatch as ArcSettingsPatchMapper,\n  Cluster as ClusterMapper,\n  ClusterPatch as ClusterPatchMapper,\n  UploadCertificateRequest as UploadCertificateRequestMapper,\n  Extension as ExtensionMapper\n} from \"../models/mappers\";\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const subscriptionId: OperationURLParameter = {\n  parameterPath: \"subscriptionId\",\n  mapper: {\n    constraints: {\n      MinLength: 1\n    },\n    serializedName: \"subscriptionId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const resourceGroupName: OperationURLParameter = {\n  parameterPath: \"resourceGroupName\",\n  mapper: {\n    constraints: {\n      MaxLength: 90,\n      MinLength: 1\n    },\n    serializedName: \"resourceGroupName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const clusterName: OperationURLParameter = {\n  parameterPath: \"clusterName\",\n  mapper: {\n    serializedName: \"clusterName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2022-05-01\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const arcSettingName: OperationURLParameter = {\n  parameterPath: \"arcSettingName\",\n  mapper: {\n    serializedName: \"arcSettingName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const arcSetting: OperationParameter = {\n  parameterPath: \"arcSetting\",\n  mapper: ArcSettingMapper\n};\n\nexport const arcSetting1: OperationParameter = {\n  parameterPath: \"arcSetting\",\n  mapper: ArcSettingsPatchMapper\n};\n\nexport const nextLink: OperationURLParameter = {\n  parameterPath: \"nextLink\",\n  mapper: {\n    serializedName: \"nextLink\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const cluster: OperationParameter = {\n  parameterPath: \"cluster\",\n  mapper: ClusterMapper\n};\n\nexport const cluster1: OperationParameter = {\n  parameterPath: \"cluster\",\n  mapper: ClusterPatchMapper\n};\n\nexport const uploadCertificateRequest: OperationParameter = {\n  parameterPath: \"uploadCertificateRequest\",\n  mapper: UploadCertificateRequestMapper\n};\n\nexport const extensionName: OperationURLParameter = {\n  parameterPath: \"extensionName\",\n  mapper: {\n    serializedName: \"extensionName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const extension: OperationParameter = {\n  parameterPath: \"extension\",\n  mapper: ExtensionMapper\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { LongRunningOperation, LroResponse } from \"@azure/core-lro\";\n\nexport class LroImpl<T> implements LongRunningOperation<T> {\n  constructor(\n    private sendOperationFn: (args: any, spec: any) => Promise<LroResponse<T>>,\n    private args: Record<string, unknown>,\n    private spec: {\n      readonly requestBody?: unknown;\n      readonly path?: string;\n      readonly httpMethod: string;\n    } & Record<string, any>,\n    public requestPath: string = spec.path!,\n    public requestMethod: string = spec.httpMethod\n  ) {}\n  public async sendInitialRequest(): Promise<LroResponse<T>> {\n    return this.sendOperationFn(this.args, this.spec);\n  }\n  public async sendPollRequest(path: string): Promise<LroResponse<T>> {\n    const { requestBody, ...restSpec } = this.spec;\n    return this.sendOperationFn(this.args, {\n      ...restSpec,\n      path,\n      httpMethod: \"GET\"\n    });\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ArcSettings } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureStackHCIClient } from \"../azureStackHCIClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  ArcSetting,\n  ArcSettingsListByClusterNextOptionalParams,\n  ArcSettingsListByClusterOptionalParams,\n  ArcSettingsListByClusterResponse,\n  ArcSettingsGetOptionalParams,\n  ArcSettingsGetResponse,\n  ArcSettingsCreateOptionalParams,\n  ArcSettingsCreateResponse,\n  ArcSettingsPatch,\n  ArcSettingsUpdateOptionalParams,\n  ArcSettingsUpdateResponse,\n  ArcSettingsDeleteOptionalParams,\n  ArcSettingsGeneratePasswordOptionalParams,\n  ArcSettingsGeneratePasswordResponse,\n  ArcSettingsCreateIdentityOptionalParams,\n  ArcSettingsCreateIdentityResponse,\n  ArcSettingsListByClusterNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ArcSettings operations. */\nexport class ArcSettingsImpl implements ArcSettings {\n  private readonly client: AzureStackHCIClient;\n\n  /**\n   * Initialize a new instance of the class ArcSettings class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureStackHCIClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get ArcSetting resources of HCI Cluster.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the cluster.\n   * @param options The options parameters.\n   */\n  public listByCluster(\n    resourceGroupName: string,\n    clusterName: string,\n    options?: ArcSettingsListByClusterOptionalParams\n  ): PagedAsyncIterableIterator<ArcSetting> {\n    const iter = this.listByClusterPagingAll(\n      resourceGroupName,\n      clusterName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByClusterPagingPage(\n          resourceGroupName,\n          clusterName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByClusterPagingPage(\n    resourceGroupName: string,\n    clusterName: string,\n    options?: ArcSettingsListByClusterOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ArcSetting[]> {\n    let result: ArcSettingsListByClusterResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByCluster(\n        resourceGroupName,\n        clusterName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByClusterNext(\n        resourceGroupName,\n        clusterName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByClusterPagingAll(\n    resourceGroupName: string,\n    clusterName: string,\n    options?: ArcSettingsListByClusterOptionalParams\n  ): AsyncIterableIterator<ArcSetting> {\n    for await (const page of this.listByClusterPagingPage(\n      resourceGroupName,\n      clusterName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get ArcSetting resources of HCI Cluster.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the cluster.\n   * @param options The options parameters.\n   */\n  private _listByCluster(\n    resourceGroupName: string,\n    clusterName: string,\n    options?: ArcSettingsListByClusterOptionalParams\n  ): Promise<ArcSettingsListByClusterResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, clusterName, options },\n      listByClusterOperationSpec\n    );\n  }\n\n  /**\n   * Get ArcSetting resource details of HCI Cluster.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the cluster.\n   * @param arcSettingName The name of the proxy resource holding details of HCI ArcSetting information.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    clusterName: string,\n    arcSettingName: string,\n    options?: ArcSettingsGetOptionalParams\n  ): Promise<ArcSettingsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, clusterName, arcSettingName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create ArcSetting for HCI cluster.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the cluster.\n   * @param arcSettingName The name of the proxy resource holding details of HCI ArcSetting information.\n   * @param arcSetting Parameters supplied to the Create ArcSetting resource for this HCI cluster.\n   * @param options The options parameters.\n   */\n  create(\n    resourceGroupName: string,\n    clusterName: string,\n    arcSettingName: string,\n    arcSetting: ArcSetting,\n    options?: ArcSettingsCreateOptionalParams\n  ): Promise<ArcSettingsCreateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, clusterName, arcSettingName, arcSetting, options },\n      createOperationSpec\n    );\n  }\n\n  /**\n   * Update ArcSettings for HCI cluster.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the cluster.\n   * @param arcSettingName The name of the proxy resource holding details of HCI ArcSetting information.\n   * @param arcSetting ArcSettings parameters that needs to be updated\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    clusterName: string,\n    arcSettingName: string,\n    arcSetting: ArcSettingsPatch,\n    options?: ArcSettingsUpdateOptionalParams\n  ): Promise<ArcSettingsUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, clusterName, arcSettingName, arcSetting, options },\n      updateOperationSpec\n    );\n  }\n\n  /**\n   * Delete ArcSetting resource details of HCI Cluster.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the cluster.\n   * @param arcSettingName The name of the proxy resource holding details of HCI ArcSetting information.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    clusterName: string,\n    arcSettingName: string,\n    options?: ArcSettingsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, clusterName, arcSettingName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"azure-async-operation\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Delete ArcSetting resource details of HCI Cluster.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the cluster.\n   * @param arcSettingName The name of the proxy resource holding details of HCI ArcSetting information.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    clusterName: string,\n    arcSettingName: string,\n    options?: ArcSettingsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      clusterName,\n      arcSettingName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Generate password for arc settings.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the cluster.\n   * @param arcSettingName The name of the proxy resource holding details of HCI ArcSetting information.\n   * @param options The options parameters.\n   */\n  generatePassword(\n    resourceGroupName: string,\n    clusterName: string,\n    arcSettingName: string,\n    options?: ArcSettingsGeneratePasswordOptionalParams\n  ): Promise<ArcSettingsGeneratePasswordResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, clusterName, arcSettingName, options },\n      generatePasswordOperationSpec\n    );\n  }\n\n  /**\n   * Create Aad identity for arc settings.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the cluster.\n   * @param arcSettingName The name of the proxy resource holding details of HCI ArcSetting information.\n   * @param options The options parameters.\n   */\n  async beginCreateIdentity(\n    resourceGroupName: string,\n    clusterName: string,\n    arcSettingName: string,\n    options?: ArcSettingsCreateIdentityOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<ArcSettingsCreateIdentityResponse>,\n      ArcSettingsCreateIdentityResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ArcSettingsCreateIdentityResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, clusterName, arcSettingName, options },\n      createIdentityOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"azure-async-operation\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Create Aad identity for arc settings.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the cluster.\n   * @param arcSettingName The name of the proxy resource holding details of HCI ArcSetting information.\n   * @param options The options parameters.\n   */\n  async beginCreateIdentityAndWait(\n    resourceGroupName: string,\n    clusterName: string,\n    arcSettingName: string,\n    options?: ArcSettingsCreateIdentityOptionalParams\n  ): Promise<ArcSettingsCreateIdentityResponse> {\n    const poller = await this.beginCreateIdentity(\n      resourceGroupName,\n      clusterName,\n      arcSettingName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListByClusterNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the cluster.\n   * @param nextLink The nextLink from the previous successful call to the ListByCluster method.\n   * @param options The options parameters.\n   */\n  private _listByClusterNext(\n    resourceGroupName: string,\n    clusterName: string,\n    nextLink: string,\n    options?: ArcSettingsListByClusterNextOptionalParams\n  ): Promise<ArcSettingsListByClusterNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, clusterName, nextLink, options },\n      listByClusterNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByClusterOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/arcSettings\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ArcSettingList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.clusterName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/arcSettings/{arcSettingName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ArcSetting\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.clusterName,\n    Parameters.arcSettingName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/arcSettings/{arcSettingName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ArcSetting\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.arcSetting,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.clusterName,\n    Parameters.arcSettingName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/arcSettings/{arcSettingName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ArcSetting\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.arcSetting1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.clusterName,\n    Parameters.arcSettingName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/arcSettings/{arcSettingName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.clusterName,\n    Parameters.arcSettingName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst generatePasswordOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/arcSettings/{arcSettingName}/generatePassword\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PasswordCredential\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.clusterName,\n    Parameters.arcSettingName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createIdentityOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/arcSettings/{arcSettingName}/createArcIdentity\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ArcIdentityResponse\n    },\n    201: {\n      bodyMapper: Mappers.ArcIdentityResponse\n    },\n    202: {\n      bodyMapper: Mappers.ArcIdentityResponse\n    },\n    204: {\n      bodyMapper: Mappers.ArcIdentityResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.clusterName,\n    Parameters.arcSettingName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByClusterNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ArcSettingList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.clusterName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Clusters } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureStackHCIClient } from \"../azureStackHCIClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  Cluster,\n  ClustersListBySubscriptionNextOptionalParams,\n  ClustersListBySubscriptionOptionalParams,\n  ClustersListBySubscriptionResponse,\n  ClustersListByResourceGroupNextOptionalParams,\n  ClustersListByResourceGroupOptionalParams,\n  ClustersListByResourceGroupResponse,\n  ClustersGetOptionalParams,\n  ClustersGetResponse,\n  ClustersCreateOptionalParams,\n  ClustersCreateResponse,\n  ClusterPatch,\n  ClustersUpdateOptionalParams,\n  ClustersUpdateResponse,\n  ClustersDeleteOptionalParams,\n  UploadCertificateRequest,\n  ClustersUploadCertificateOptionalParams,\n  ClustersCreateIdentityOptionalParams,\n  ClustersCreateIdentityResponse,\n  ClustersListBySubscriptionNextResponse,\n  ClustersListByResourceGroupNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Clusters operations. */\nexport class ClustersImpl implements Clusters {\n  private readonly client: AzureStackHCIClient;\n\n  /**\n   * Initialize a new instance of the class Clusters class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureStackHCIClient) {\n    this.client = client;\n  }\n\n  /**\n   * List all HCI clusters in a subscription.\n   * @param options The options parameters.\n   */\n  public listBySubscription(\n    options?: ClustersListBySubscriptionOptionalParams\n  ): PagedAsyncIterableIterator<Cluster> {\n    const iter = this.listBySubscriptionPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listBySubscriptionPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listBySubscriptionPagingPage(\n    options?: ClustersListBySubscriptionOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Cluster[]> {\n    let result: ClustersListBySubscriptionResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listBySubscription(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listBySubscriptionNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listBySubscriptionPagingAll(\n    options?: ClustersListBySubscriptionOptionalParams\n  ): AsyncIterableIterator<Cluster> {\n    for await (const page of this.listBySubscriptionPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List all HCI clusters in a resource group.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  public listByResourceGroup(\n    resourceGroupName: string,\n    options?: ClustersListByResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<Cluster> {\n    const iter = this.listByResourceGroupPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByResourceGroupPagingPage(\n          resourceGroupName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: ClustersListByResourceGroupOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Cluster[]> {\n    let result: ClustersListByResourceGroupResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByResourceGroup(resourceGroupName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByResourceGroupNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: ClustersListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<Cluster> {\n    for await (const page of this.listByResourceGroupPagingPage(\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List all HCI clusters in a subscription.\n   * @param options The options parameters.\n   */\n  private _listBySubscription(\n    options?: ClustersListBySubscriptionOptionalParams\n  ): Promise<ClustersListBySubscriptionResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      listBySubscriptionOperationSpec\n    );\n  }\n\n  /**\n   * List all HCI clusters in a resource group.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroup(\n    resourceGroupName: string,\n    options?: ClustersListByResourceGroupOptionalParams\n  ): Promise<ClustersListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listByResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Get HCI cluster.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the cluster.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    clusterName: string,\n    options?: ClustersGetOptionalParams\n  ): Promise<ClustersGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, clusterName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create an HCI cluster.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the cluster.\n   * @param cluster Details of the HCI cluster.\n   * @param options The options parameters.\n   */\n  create(\n    resourceGroupName: string,\n    clusterName: string,\n    cluster: Cluster,\n    options?: ClustersCreateOptionalParams\n  ): Promise<ClustersCreateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, clusterName, cluster, options },\n      createOperationSpec\n    );\n  }\n\n  /**\n   * Update an HCI cluster.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the cluster.\n   * @param cluster Details of the HCI cluster.\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    clusterName: string,\n    cluster: ClusterPatch,\n    options?: ClustersUpdateOptionalParams\n  ): Promise<ClustersUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, clusterName, cluster, options },\n      updateOperationSpec\n    );\n  }\n\n  /**\n   * Delete an HCI cluster.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the cluster.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    clusterName: string,\n    options?: ClustersDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, clusterName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Delete an HCI cluster.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the cluster.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    clusterName: string,\n    options?: ClustersDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      clusterName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Upload certificate.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the cluster.\n   * @param uploadCertificateRequest Upload certificate request.\n   * @param options The options parameters.\n   */\n  async beginUploadCertificate(\n    resourceGroupName: string,\n    clusterName: string,\n    uploadCertificateRequest: UploadCertificateRequest,\n    options?: ClustersUploadCertificateOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, clusterName, uploadCertificateRequest, options },\n      uploadCertificateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"azure-async-operation\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Upload certificate.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the cluster.\n   * @param uploadCertificateRequest Upload certificate request.\n   * @param options The options parameters.\n   */\n  async beginUploadCertificateAndWait(\n    resourceGroupName: string,\n    clusterName: string,\n    uploadCertificateRequest: UploadCertificateRequest,\n    options?: ClustersUploadCertificateOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginUploadCertificate(\n      resourceGroupName,\n      clusterName,\n      uploadCertificateRequest,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Create cluster identity.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the cluster.\n   * @param options The options parameters.\n   */\n  async beginCreateIdentity(\n    resourceGroupName: string,\n    clusterName: string,\n    options?: ClustersCreateIdentityOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<ClustersCreateIdentityResponse>,\n      ClustersCreateIdentityResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ClustersCreateIdentityResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, clusterName, options },\n      createIdentityOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"azure-async-operation\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Create cluster identity.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the cluster.\n   * @param options The options parameters.\n   */\n  async beginCreateIdentityAndWait(\n    resourceGroupName: string,\n    clusterName: string,\n    options?: ClustersCreateIdentityOptionalParams\n  ): Promise<ClustersCreateIdentityResponse> {\n    const poller = await this.beginCreateIdentity(\n      resourceGroupName,\n      clusterName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListBySubscriptionNext\n   * @param nextLink The nextLink from the previous successful call to the ListBySubscription method.\n   * @param options The options parameters.\n   */\n  private _listBySubscriptionNext(\n    nextLink: string,\n    options?: ClustersListBySubscriptionNextOptionalParams\n  ): Promise<ClustersListBySubscriptionNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listBySubscriptionNextOperationSpec\n    );\n  }\n\n  /**\n   * ListByResourceGroupNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: ClustersListByResourceGroupNextOptionalParams\n  ): Promise<ClustersListByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listByResourceGroupNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listBySubscriptionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.AzureStackHCI/clusters\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ClusterList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ClusterList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Cluster\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.clusterName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Cluster\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.cluster,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.clusterName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Cluster\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.cluster1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.clusterName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.clusterName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst uploadCertificateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/uploadCertificate\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.uploadCertificateRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.clusterName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst createIdentityOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/createClusterIdentity\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ClusterIdentityResponse\n    },\n    201: {\n      bodyMapper: Mappers.ClusterIdentityResponse\n    },\n    202: {\n      bodyMapper: Mappers.ClusterIdentityResponse\n    },\n    204: {\n      bodyMapper: Mappers.ClusterIdentityResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.clusterName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listBySubscriptionNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ClusterList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ClusterList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Extensions } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureStackHCIClient } from \"../azureStackHCIClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  Extension,\n  ExtensionsListByArcSettingNextOptionalParams,\n  ExtensionsListByArcSettingOptionalParams,\n  ExtensionsListByArcSettingResponse,\n  ExtensionsGetOptionalParams,\n  ExtensionsGetResponse,\n  ExtensionsCreateOptionalParams,\n  ExtensionsCreateResponse,\n  ExtensionsUpdateOptionalParams,\n  ExtensionsUpdateResponse,\n  ExtensionsDeleteOptionalParams,\n  ExtensionsListByArcSettingNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Extensions operations. */\nexport class ExtensionsImpl implements Extensions {\n  private readonly client: AzureStackHCIClient;\n\n  /**\n   * Initialize a new instance of the class Extensions class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureStackHCIClient) {\n    this.client = client;\n  }\n\n  /**\n   * List all Extensions under ArcSetting resource.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the cluster.\n   * @param arcSettingName The name of the proxy resource holding details of HCI ArcSetting information.\n   * @param options The options parameters.\n   */\n  public listByArcSetting(\n    resourceGroupName: string,\n    clusterName: string,\n    arcSettingName: string,\n    options?: ExtensionsListByArcSettingOptionalParams\n  ): PagedAsyncIterableIterator<Extension> {\n    const iter = this.listByArcSettingPagingAll(\n      resourceGroupName,\n      clusterName,\n      arcSettingName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByArcSettingPagingPage(\n          resourceGroupName,\n          clusterName,\n          arcSettingName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByArcSettingPagingPage(\n    resourceGroupName: string,\n    clusterName: string,\n    arcSettingName: string,\n    options?: ExtensionsListByArcSettingOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Extension[]> {\n    let result: ExtensionsListByArcSettingResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByArcSetting(\n        resourceGroupName,\n        clusterName,\n        arcSettingName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByArcSettingNext(\n        resourceGroupName,\n        clusterName,\n        arcSettingName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByArcSettingPagingAll(\n    resourceGroupName: string,\n    clusterName: string,\n    arcSettingName: string,\n    options?: ExtensionsListByArcSettingOptionalParams\n  ): AsyncIterableIterator<Extension> {\n    for await (const page of this.listByArcSettingPagingPage(\n      resourceGroupName,\n      clusterName,\n      arcSettingName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List all Extensions under ArcSetting resource.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the cluster.\n   * @param arcSettingName The name of the proxy resource holding details of HCI ArcSetting information.\n   * @param options The options parameters.\n   */\n  private _listByArcSetting(\n    resourceGroupName: string,\n    clusterName: string,\n    arcSettingName: string,\n    options?: ExtensionsListByArcSettingOptionalParams\n  ): Promise<ExtensionsListByArcSettingResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, clusterName, arcSettingName, options },\n      listByArcSettingOperationSpec\n    );\n  }\n\n  /**\n   * Get particular Arc Extension of HCI Cluster.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the cluster.\n   * @param arcSettingName The name of the proxy resource holding details of HCI ArcSetting information.\n   * @param extensionName The name of the machine extension.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    clusterName: string,\n    arcSettingName: string,\n    extensionName: string,\n    options?: ExtensionsGetOptionalParams\n  ): Promise<ExtensionsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        clusterName,\n        arcSettingName,\n        extensionName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create Extension for HCI cluster.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the cluster.\n   * @param arcSettingName The name of the proxy resource holding details of HCI ArcSetting information.\n   * @param extensionName The name of the machine extension.\n   * @param extension Details of the Machine Extension to be created.\n   * @param options The options parameters.\n   */\n  async beginCreate(\n    resourceGroupName: string,\n    clusterName: string,\n    arcSettingName: string,\n    extensionName: string,\n    extension: Extension,\n    options?: ExtensionsCreateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<ExtensionsCreateResponse>,\n      ExtensionsCreateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ExtensionsCreateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        clusterName,\n        arcSettingName,\n        extensionName,\n        extension,\n        options\n      },\n      createOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"azure-async-operation\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Create Extension for HCI cluster.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the cluster.\n   * @param arcSettingName The name of the proxy resource holding details of HCI ArcSetting information.\n   * @param extensionName The name of the machine extension.\n   * @param extension Details of the Machine Extension to be created.\n   * @param options The options parameters.\n   */\n  async beginCreateAndWait(\n    resourceGroupName: string,\n    clusterName: string,\n    arcSettingName: string,\n    extensionName: string,\n    extension: Extension,\n    options?: ExtensionsCreateOptionalParams\n  ): Promise<ExtensionsCreateResponse> {\n    const poller = await this.beginCreate(\n      resourceGroupName,\n      clusterName,\n      arcSettingName,\n      extensionName,\n      extension,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Update Extension for HCI cluster.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the cluster.\n   * @param arcSettingName The name of the proxy resource holding details of HCI ArcSetting information.\n   * @param extensionName The name of the machine extension.\n   * @param extension Details of the Machine Extension to be created.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    clusterName: string,\n    arcSettingName: string,\n    extensionName: string,\n    extension: Extension,\n    options?: ExtensionsUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<ExtensionsUpdateResponse>,\n      ExtensionsUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ExtensionsUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        clusterName,\n        arcSettingName,\n        extensionName,\n        extension,\n        options\n      },\n      updateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"original-uri\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Update Extension for HCI cluster.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the cluster.\n   * @param arcSettingName The name of the proxy resource holding details of HCI ArcSetting information.\n   * @param extensionName The name of the machine extension.\n   * @param extension Details of the Machine Extension to be created.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    clusterName: string,\n    arcSettingName: string,\n    extensionName: string,\n    extension: Extension,\n    options?: ExtensionsUpdateOptionalParams\n  ): Promise<ExtensionsUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      clusterName,\n      arcSettingName,\n      extensionName,\n      extension,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Delete particular Arc Extension of HCI Cluster.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the cluster.\n   * @param arcSettingName The name of the proxy resource holding details of HCI ArcSetting information.\n   * @param extensionName The name of the machine extension.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    clusterName: string,\n    arcSettingName: string,\n    extensionName: string,\n    options?: ExtensionsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        clusterName,\n        arcSettingName,\n        extensionName,\n        options\n      },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"azure-async-operation\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Delete particular Arc Extension of HCI Cluster.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the cluster.\n   * @param arcSettingName The name of the proxy resource holding details of HCI ArcSetting information.\n   * @param extensionName The name of the machine extension.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    clusterName: string,\n    arcSettingName: string,\n    extensionName: string,\n    options?: ExtensionsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      clusterName,\n      arcSettingName,\n      extensionName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListByArcSettingNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the cluster.\n   * @param arcSettingName The name of the proxy resource holding details of HCI ArcSetting information.\n   * @param nextLink The nextLink from the previous successful call to the ListByArcSetting method.\n   * @param options The options parameters.\n   */\n  private _listByArcSettingNext(\n    resourceGroupName: string,\n    clusterName: string,\n    arcSettingName: string,\n    nextLink: string,\n    options?: ExtensionsListByArcSettingNextOptionalParams\n  ): Promise<ExtensionsListByArcSettingNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, clusterName, arcSettingName, nextLink, options },\n      listByArcSettingNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByArcSettingOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/arcSettings/{arcSettingName}/extensions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ExtensionList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.clusterName,\n    Parameters.arcSettingName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/arcSettings/{arcSettingName}/extensions/{extensionName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Extension\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.clusterName,\n    Parameters.arcSettingName,\n    Parameters.extensionName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/arcSettings/{arcSettingName}/extensions/{extensionName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Extension\n    },\n    201: {\n      bodyMapper: Mappers.Extension\n    },\n    202: {\n      bodyMapper: Mappers.Extension\n    },\n    204: {\n      bodyMapper: Mappers.Extension\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.extension,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.clusterName,\n    Parameters.arcSettingName,\n    Parameters.extensionName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/arcSettings/{arcSettingName}/extensions/{extensionName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Extension\n    },\n    201: {\n      bodyMapper: Mappers.Extension\n    },\n    202: {\n      bodyMapper: Mappers.Extension\n    },\n    204: {\n      bodyMapper: Mappers.Extension\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.extension,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.clusterName,\n    Parameters.arcSettingName,\n    Parameters.extensionName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/arcSettings/{arcSettingName}/extensions/{extensionName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.clusterName,\n    Parameters.arcSettingName,\n    Parameters.extensionName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByArcSettingNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ExtensionList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.clusterName,\n    Parameters.arcSettingName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { Operations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureStackHCIClient } from \"../azureStackHCIClient\";\nimport {\n  OperationsListOptionalParams,\n  OperationsListResponse\n} from \"../models\";\n\n/** Class containing Operations operations. */\nexport class OperationsImpl implements Operations {\n  private readonly client: AzureStackHCIClient;\n\n  /**\n   * Initialize a new instance of the class Operations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureStackHCIClient) {\n    this.client = client;\n  }\n\n  /**\n   * List all available Microsoft.AzureStackHCI provider operations\n   * @param options The options parameters.\n   */\n  list(\n    options?: OperationsListOptionalParams\n  ): Promise<OperationsListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.AzureStackHCI/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\nimport {\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest\n} from \"@azure/core-rest-pipeline\";\nimport * as coreAuth from \"@azure/core-auth\";\nimport {\n  ArcSettingsImpl,\n  ClustersImpl,\n  ExtensionsImpl,\n  OperationsImpl\n} from \"./operations\";\nimport {\n  ArcSettings,\n  Clusters,\n  Extensions,\n  Operations\n} from \"./operationsInterfaces\";\nimport { AzureStackHCIClientOptionalParams } from \"./models\";\n\nexport class AzureStackHCIClient extends coreClient.ServiceClient {\n  $host: string;\n  subscriptionId: string;\n  apiVersion: string;\n\n  /**\n   * Initializes a new instance of the AzureStackHCIClient class.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param subscriptionId The ID of the target subscription.\n   * @param options The parameter options\n   */\n  constructor(\n    credentials: coreAuth.TokenCredential,\n    subscriptionId: string,\n    options?: AzureStackHCIClientOptionalParams\n  ) {\n    if (credentials === undefined) {\n      throw new Error(\"'credentials' cannot be null\");\n    }\n    if (subscriptionId === undefined) {\n      throw new Error(\"'subscriptionId' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: AzureStackHCIClientOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\",\n      credential: credentials\n    };\n\n    const packageDetails = `azsdk-js-arm-azurestackhci/3.1.0`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      endpoint:\n        options.endpoint ?? options.baseUri ?? \"https://management.azure.com\"\n    };\n    super(optionsWithDefaults);\n\n    let bearerTokenAuthenticationPolicyFound: boolean = false;\n    if (options?.pipeline && options.pipeline.getOrderedPolicies().length > 0) {\n      const pipelinePolicies: coreRestPipeline.PipelinePolicy[] = options.pipeline.getOrderedPolicies();\n      bearerTokenAuthenticationPolicyFound = pipelinePolicies.some(\n        (pipelinePolicy) =>\n          pipelinePolicy.name ===\n          coreRestPipeline.bearerTokenAuthenticationPolicyName\n      );\n    }\n    if (\n      !options ||\n      !options.pipeline ||\n      options.pipeline.getOrderedPolicies().length == 0 ||\n      !bearerTokenAuthenticationPolicyFound\n    ) {\n      this.pipeline.removePolicy({\n        name: coreRestPipeline.bearerTokenAuthenticationPolicyName\n      });\n      this.pipeline.addPolicy(\n        coreRestPipeline.bearerTokenAuthenticationPolicy({\n          credential: credentials,\n          scopes:\n            optionsWithDefaults.credentialScopes ??\n            `${optionsWithDefaults.endpoint}/.default`,\n          challengeCallbacks: {\n            authorizeRequestOnChallenge:\n              coreClient.authorizeRequestOnClaimChallenge\n          }\n        })\n      );\n    }\n    // Parameter assignments\n    this.subscriptionId = subscriptionId;\n\n    // Assigning values to Constant parameters\n    this.$host = options.$host || \"https://management.azure.com\";\n    this.apiVersion = options.apiVersion || \"2022-05-01\";\n    this.arcSettings = new ArcSettingsImpl(this);\n    this.clusters = new ClustersImpl(this);\n    this.extensions = new ExtensionsImpl(this);\n    this.operations = new OperationsImpl(this);\n    this.addCustomApiVersionPolicy(options.apiVersion);\n  }\n\n  /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */\n  private addCustomApiVersionPolicy(apiVersion?: string) {\n    if (!apiVersion) {\n      return;\n    }\n    const apiVersionPolicy = {\n      name: \"CustomApiVersionPolicy\",\n      async sendRequest(\n        request: PipelineRequest,\n        next: SendRequest\n      ): Promise<PipelineResponse> {\n        const param = request.url.split(\"?\");\n        if (param.length > 1) {\n          const newParams = param[1].split(\"&\").map((item) => {\n            if (item.indexOf(\"api-version\") > -1) {\n              return \"api-version=\" + apiVersion;\n            } else {\n              return item;\n            }\n          });\n          request.url = param[0] + \"?\" + newParams.join(\"&\");\n        }\n        return next(request);\n      }\n    };\n    this.pipeline.addPolicy(apiVersionPolicy);\n  }\n\n  arcSettings: ArcSettings;\n  clusters: Clusters;\n  extensions: Extensions;\n  operations: Operations;\n}\n"],"names":["KnownCreatedByType","KnownProvisioningState","KnownArcSettingAggregateState","KnownNodeArcState","KnownStatus","KnownWindowsServerSubscription","KnownDiagnosticLevel","KnownImdsAttestation","KnownExtensionAggregateState","KnownNodeExtensionState","KnownOrigin","KnownActionType","ArcSettingMapper","ArcSettingsPatchMapper","ClusterMapper","ClusterPatchMapper","UploadCertificateRequestMapper","ExtensionMapper","__rest","__await","__asyncValues","__asyncDelegator","getOperationSpec","createOperationSpec","updateOperationSpec","__awaiter","deleteOperationSpec","LroEngine","createIdentityOperationSpec","serializer","coreClient","Mappers.ArcSettingList","Mappers.ErrorResponse","Parameters.apiVersion","Parameters.$host","Parameters.subscriptionId","Parameters.resourceGroupName","Parameters.clusterName","Parameters.accept","Mappers.ArcSetting","Parameters.arcSettingName","Parameters.arcSetting","Parameters.contentType","Parameters.arcSetting1","Mappers.PasswordCredential","Mappers.ArcIdentityResponse","Parameters.nextLink","Mappers.ClusterList","Mappers.Cluster","Parameters.cluster","Parameters.cluster1","Parameters.uploadCertificateRequest","Mappers.ClusterIdentityResponse","Mappers.ExtensionList","Mappers.Extension","Parameters.extensionName","Parameters.extension","Mappers.OperationListResult","coreRestPipeline"],"mappings":"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"}