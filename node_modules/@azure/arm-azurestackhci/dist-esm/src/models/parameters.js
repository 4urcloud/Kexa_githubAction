/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { ArcSetting as ArcSettingMapper, ArcSettingsPatch as ArcSettingsPatchMapper, Cluster as ClusterMapper, ClusterPatch as ClusterPatchMapper, UploadCertificateRequest as UploadCertificateRequestMapper, Extension as ExtensionMapper } from "../models/mappers";
export const accept = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String"
        }
    }
};
export const $host = {
    parameterPath: "$host",
    mapper: {
        serializedName: "$host",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const subscriptionId = {
    parameterPath: "subscriptionId",
    mapper: {
        constraints: {
            MinLength: 1
        },
        serializedName: "subscriptionId",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const resourceGroupName = {
    parameterPath: "resourceGroupName",
    mapper: {
        constraints: {
            MaxLength: 90,
            MinLength: 1
        },
        serializedName: "resourceGroupName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const clusterName = {
    parameterPath: "clusterName",
    mapper: {
        serializedName: "clusterName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const apiVersion = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2022-05-01",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
export const arcSettingName = {
    parameterPath: "arcSettingName",
    mapper: {
        serializedName: "arcSettingName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const contentType = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String"
        }
    }
};
export const arcSetting = {
    parameterPath: "arcSetting",
    mapper: ArcSettingMapper
};
export const arcSetting1 = {
    parameterPath: "arcSetting",
    mapper: ArcSettingsPatchMapper
};
export const nextLink = {
    parameterPath: "nextLink",
    mapper: {
        serializedName: "nextLink",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const cluster = {
    parameterPath: "cluster",
    mapper: ClusterMapper
};
export const cluster1 = {
    parameterPath: "cluster",
    mapper: ClusterPatchMapper
};
export const uploadCertificateRequest = {
    parameterPath: "uploadCertificateRequest",
    mapper: UploadCertificateRequestMapper
};
export const extensionName = {
    parameterPath: "extensionName",
    mapper: {
        serializedName: "extensionName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const extension = {
    parameterPath: "extension",
    mapper: ExtensionMapper
};
//# sourceMappingURL=parameters.js.map