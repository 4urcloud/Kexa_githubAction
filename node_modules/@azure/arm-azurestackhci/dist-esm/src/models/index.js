/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
/** Known values of {@link CreatedByType} that the service accepts. */
export var KnownCreatedByType;
(function (KnownCreatedByType) {
    /** User */
    KnownCreatedByType["User"] = "User";
    /** Application */
    KnownCreatedByType["Application"] = "Application";
    /** ManagedIdentity */
    KnownCreatedByType["ManagedIdentity"] = "ManagedIdentity";
    /** Key */
    KnownCreatedByType["Key"] = "Key";
})(KnownCreatedByType || (KnownCreatedByType = {}));
/** Known values of {@link ProvisioningState} that the service accepts. */
export var KnownProvisioningState;
(function (KnownProvisioningState) {
    /** Succeeded */
    KnownProvisioningState["Succeeded"] = "Succeeded";
    /** Failed */
    KnownProvisioningState["Failed"] = "Failed";
    /** Canceled */
    KnownProvisioningState["Canceled"] = "Canceled";
    /** Accepted */
    KnownProvisioningState["Accepted"] = "Accepted";
    /** Provisioning */
    KnownProvisioningState["Provisioning"] = "Provisioning";
})(KnownProvisioningState || (KnownProvisioningState = {}));
/** Known values of {@link ArcSettingAggregateState} that the service accepts. */
export var KnownArcSettingAggregateState;
(function (KnownArcSettingAggregateState) {
    /** NotSpecified */
    KnownArcSettingAggregateState["NotSpecified"] = "NotSpecified";
    /** Error */
    KnownArcSettingAggregateState["Error"] = "Error";
    /** Succeeded */
    KnownArcSettingAggregateState["Succeeded"] = "Succeeded";
    /** Canceled */
    KnownArcSettingAggregateState["Canceled"] = "Canceled";
    /** Failed */
    KnownArcSettingAggregateState["Failed"] = "Failed";
    /** Connected */
    KnownArcSettingAggregateState["Connected"] = "Connected";
    /** Disconnected */
    KnownArcSettingAggregateState["Disconnected"] = "Disconnected";
    /** Deleted */
    KnownArcSettingAggregateState["Deleted"] = "Deleted";
    /** Creating */
    KnownArcSettingAggregateState["Creating"] = "Creating";
    /** Updating */
    KnownArcSettingAggregateState["Updating"] = "Updating";
    /** Deleting */
    KnownArcSettingAggregateState["Deleting"] = "Deleting";
    /** Moving */
    KnownArcSettingAggregateState["Moving"] = "Moving";
    /** PartiallySucceeded */
    KnownArcSettingAggregateState["PartiallySucceeded"] = "PartiallySucceeded";
    /** PartiallyConnected */
    KnownArcSettingAggregateState["PartiallyConnected"] = "PartiallyConnected";
    /** InProgress */
    KnownArcSettingAggregateState["InProgress"] = "InProgress";
})(KnownArcSettingAggregateState || (KnownArcSettingAggregateState = {}));
/** Known values of {@link NodeArcState} that the service accepts. */
export var KnownNodeArcState;
(function (KnownNodeArcState) {
    /** NotSpecified */
    KnownNodeArcState["NotSpecified"] = "NotSpecified";
    /** Error */
    KnownNodeArcState["Error"] = "Error";
    /** Succeeded */
    KnownNodeArcState["Succeeded"] = "Succeeded";
    /** Canceled */
    KnownNodeArcState["Canceled"] = "Canceled";
    /** Failed */
    KnownNodeArcState["Failed"] = "Failed";
    /** Connected */
    KnownNodeArcState["Connected"] = "Connected";
    /** Disconnected */
    KnownNodeArcState["Disconnected"] = "Disconnected";
    /** Deleted */
    KnownNodeArcState["Deleted"] = "Deleted";
    /** Creating */
    KnownNodeArcState["Creating"] = "Creating";
    /** Updating */
    KnownNodeArcState["Updating"] = "Updating";
    /** Deleting */
    KnownNodeArcState["Deleting"] = "Deleting";
    /** Moving */
    KnownNodeArcState["Moving"] = "Moving";
})(KnownNodeArcState || (KnownNodeArcState = {}));
/** Known values of {@link Status} that the service accepts. */
export var KnownStatus;
(function (KnownStatus) {
    /** NotYetRegistered */
    KnownStatus["NotYetRegistered"] = "NotYetRegistered";
    /** ConnectedRecently */
    KnownStatus["ConnectedRecently"] = "ConnectedRecently";
    /** NotConnectedRecently */
    KnownStatus["NotConnectedRecently"] = "NotConnectedRecently";
    /** Disconnected */
    KnownStatus["Disconnected"] = "Disconnected";
    /** Error */
    KnownStatus["Error"] = "Error";
})(KnownStatus || (KnownStatus = {}));
/** Known values of {@link WindowsServerSubscription} that the service accepts. */
export var KnownWindowsServerSubscription;
(function (KnownWindowsServerSubscription) {
    /** Disabled */
    KnownWindowsServerSubscription["Disabled"] = "Disabled";
    /** Enabled */
    KnownWindowsServerSubscription["Enabled"] = "Enabled";
})(KnownWindowsServerSubscription || (KnownWindowsServerSubscription = {}));
/** Known values of {@link DiagnosticLevel} that the service accepts. */
export var KnownDiagnosticLevel;
(function (KnownDiagnosticLevel) {
    /** Off */
    KnownDiagnosticLevel["Off"] = "Off";
    /** Basic */
    KnownDiagnosticLevel["Basic"] = "Basic";
    /** Enhanced */
    KnownDiagnosticLevel["Enhanced"] = "Enhanced";
})(KnownDiagnosticLevel || (KnownDiagnosticLevel = {}));
/** Known values of {@link ImdsAttestation} that the service accepts. */
export var KnownImdsAttestation;
(function (KnownImdsAttestation) {
    /** Disabled */
    KnownImdsAttestation["Disabled"] = "Disabled";
    /** Enabled */
    KnownImdsAttestation["Enabled"] = "Enabled";
})(KnownImdsAttestation || (KnownImdsAttestation = {}));
/** Known values of {@link ExtensionAggregateState} that the service accepts. */
export var KnownExtensionAggregateState;
(function (KnownExtensionAggregateState) {
    /** NotSpecified */
    KnownExtensionAggregateState["NotSpecified"] = "NotSpecified";
    /** Error */
    KnownExtensionAggregateState["Error"] = "Error";
    /** Succeeded */
    KnownExtensionAggregateState["Succeeded"] = "Succeeded";
    /** Canceled */
    KnownExtensionAggregateState["Canceled"] = "Canceled";
    /** Failed */
    KnownExtensionAggregateState["Failed"] = "Failed";
    /** Connected */
    KnownExtensionAggregateState["Connected"] = "Connected";
    /** Disconnected */
    KnownExtensionAggregateState["Disconnected"] = "Disconnected";
    /** Deleted */
    KnownExtensionAggregateState["Deleted"] = "Deleted";
    /** Creating */
    KnownExtensionAggregateState["Creating"] = "Creating";
    /** Updating */
    KnownExtensionAggregateState["Updating"] = "Updating";
    /** Deleting */
    KnownExtensionAggregateState["Deleting"] = "Deleting";
    /** Moving */
    KnownExtensionAggregateState["Moving"] = "Moving";
    /** PartiallySucceeded */
    KnownExtensionAggregateState["PartiallySucceeded"] = "PartiallySucceeded";
    /** PartiallyConnected */
    KnownExtensionAggregateState["PartiallyConnected"] = "PartiallyConnected";
    /** InProgress */
    KnownExtensionAggregateState["InProgress"] = "InProgress";
})(KnownExtensionAggregateState || (KnownExtensionAggregateState = {}));
/** Known values of {@link NodeExtensionState} that the service accepts. */
export var KnownNodeExtensionState;
(function (KnownNodeExtensionState) {
    /** NotSpecified */
    KnownNodeExtensionState["NotSpecified"] = "NotSpecified";
    /** Error */
    KnownNodeExtensionState["Error"] = "Error";
    /** Succeeded */
    KnownNodeExtensionState["Succeeded"] = "Succeeded";
    /** Canceled */
    KnownNodeExtensionState["Canceled"] = "Canceled";
    /** Failed */
    KnownNodeExtensionState["Failed"] = "Failed";
    /** Connected */
    KnownNodeExtensionState["Connected"] = "Connected";
    /** Disconnected */
    KnownNodeExtensionState["Disconnected"] = "Disconnected";
    /** Deleted */
    KnownNodeExtensionState["Deleted"] = "Deleted";
    /** Creating */
    KnownNodeExtensionState["Creating"] = "Creating";
    /** Updating */
    KnownNodeExtensionState["Updating"] = "Updating";
    /** Deleting */
    KnownNodeExtensionState["Deleting"] = "Deleting";
    /** Moving */
    KnownNodeExtensionState["Moving"] = "Moving";
})(KnownNodeExtensionState || (KnownNodeExtensionState = {}));
/** Known values of {@link Origin} that the service accepts. */
export var KnownOrigin;
(function (KnownOrigin) {
    /** User */
    KnownOrigin["User"] = "user";
    /** System */
    KnownOrigin["System"] = "system";
    /** UserSystem */
    KnownOrigin["UserSystem"] = "user,system";
})(KnownOrigin || (KnownOrigin = {}));
/** Known values of {@link ActionType} that the service accepts. */
export var KnownActionType;
(function (KnownActionType) {
    /** Internal */
    KnownActionType["Internal"] = "Internal";
})(KnownActionType || (KnownActionType = {}));
//# sourceMappingURL=index.js.map