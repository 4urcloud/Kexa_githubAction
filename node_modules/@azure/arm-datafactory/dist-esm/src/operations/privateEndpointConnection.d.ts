import { PrivateEndpointConnection } from "../operationsInterfaces";
import { DataFactoryManagementClient } from "../dataFactoryManagementClient";
import { PrivateLinkConnectionApprovalRequestResource, PrivateEndpointConnectionCreateOrUpdateOptionalParams, PrivateEndpointConnectionCreateOrUpdateResponse, PrivateEndpointConnectionGetOptionalParams, PrivateEndpointConnectionGetResponse, PrivateEndpointConnectionDeleteOptionalParams } from "../models";
/** Class containing PrivateEndpointConnection operations. */
export declare class PrivateEndpointConnectionImpl implements PrivateEndpointConnection {
    private readonly client;
    /**
     * Initialize a new instance of the class PrivateEndpointConnection class.
     * @param client Reference to the service client
     */
    constructor(client: DataFactoryManagementClient);
    /**
     * Approves or rejects a private endpoint connection
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param privateEndpointConnectionName The private endpoint connection name.
     * @param privateEndpointWrapper Private Endpoint Connection Approval ARM resource.
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, factoryName: string, privateEndpointConnectionName: string, privateEndpointWrapper: PrivateLinkConnectionApprovalRequestResource, options?: PrivateEndpointConnectionCreateOrUpdateOptionalParams): Promise<PrivateEndpointConnectionCreateOrUpdateResponse>;
    /**
     * Gets a private endpoint connection
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param privateEndpointConnectionName The private endpoint connection name.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, factoryName: string, privateEndpointConnectionName: string, options?: PrivateEndpointConnectionGetOptionalParams): Promise<PrivateEndpointConnectionGetResponse>;
    /**
     * Deletes a private endpoint connection
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param privateEndpointConnectionName The private endpoint connection name.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, factoryName: string, privateEndpointConnectionName: string, options?: PrivateEndpointConnectionDeleteOptionalParams): Promise<void>;
}
//# sourceMappingURL=privateEndpointConnection.d.ts.map