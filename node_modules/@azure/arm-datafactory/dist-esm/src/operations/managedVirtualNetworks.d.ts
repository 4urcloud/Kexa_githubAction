import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { ManagedVirtualNetworks } from "../operationsInterfaces";
import { DataFactoryManagementClient } from "../dataFactoryManagementClient";
import { ManagedVirtualNetworkResource, ManagedVirtualNetworksListByFactoryOptionalParams, ManagedVirtualNetworksCreateOrUpdateOptionalParams, ManagedVirtualNetworksCreateOrUpdateResponse, ManagedVirtualNetworksGetOptionalParams, ManagedVirtualNetworksGetResponse } from "../models";
/** Class containing ManagedVirtualNetworks operations. */
export declare class ManagedVirtualNetworksImpl implements ManagedVirtualNetworks {
    private readonly client;
    /**
     * Initialize a new instance of the class ManagedVirtualNetworks class.
     * @param client Reference to the service client
     */
    constructor(client: DataFactoryManagementClient);
    /**
     * Lists managed Virtual Networks.
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param options The options parameters.
     */
    listByFactory(resourceGroupName: string, factoryName: string, options?: ManagedVirtualNetworksListByFactoryOptionalParams): PagedAsyncIterableIterator<ManagedVirtualNetworkResource>;
    private listByFactoryPagingPage;
    private listByFactoryPagingAll;
    /**
     * Lists managed Virtual Networks.
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param options The options parameters.
     */
    private _listByFactory;
    /**
     * Creates or updates a managed Virtual Network.
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param managedVirtualNetworkName Managed virtual network name
     * @param managedVirtualNetwork Managed Virtual Network resource definition.
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, factoryName: string, managedVirtualNetworkName: string, managedVirtualNetwork: ManagedVirtualNetworkResource, options?: ManagedVirtualNetworksCreateOrUpdateOptionalParams): Promise<ManagedVirtualNetworksCreateOrUpdateResponse>;
    /**
     * Gets a managed Virtual Network.
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param managedVirtualNetworkName Managed virtual network name
     * @param options The options parameters.
     */
    get(resourceGroupName: string, factoryName: string, managedVirtualNetworkName: string, options?: ManagedVirtualNetworksGetOptionalParams): Promise<ManagedVirtualNetworksGetResponse>;
    /**
     * ListByFactoryNext
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param nextLink The nextLink from the previous successful call to the ListByFactory method.
     * @param options The options parameters.
     */
    private _listByFactoryNext;
}
//# sourceMappingURL=managedVirtualNetworks.d.ts.map