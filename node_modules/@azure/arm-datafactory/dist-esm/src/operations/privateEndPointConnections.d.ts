import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PrivateEndPointConnections } from "../operationsInterfaces";
import { DataFactoryManagementClient } from "../dataFactoryManagementClient";
import { PrivateEndpointConnectionResource, PrivateEndPointConnectionsListByFactoryOptionalParams } from "../models";
/** Class containing PrivateEndPointConnections operations. */
export declare class PrivateEndPointConnectionsImpl implements PrivateEndPointConnections {
    private readonly client;
    /**
     * Initialize a new instance of the class PrivateEndPointConnections class.
     * @param client Reference to the service client
     */
    constructor(client: DataFactoryManagementClient);
    /**
     * Lists Private endpoint connections
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param options The options parameters.
     */
    listByFactory(resourceGroupName: string, factoryName: string, options?: PrivateEndPointConnectionsListByFactoryOptionalParams): PagedAsyncIterableIterator<PrivateEndpointConnectionResource>;
    private listByFactoryPagingPage;
    private listByFactoryPagingAll;
    /**
     * Lists Private endpoint connections
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param options The options parameters.
     */
    private _listByFactory;
    /**
     * ListByFactoryNext
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param nextLink The nextLink from the previous successful call to the ListByFactory method.
     * @param options The options parameters.
     */
    private _listByFactoryNext;
}
//# sourceMappingURL=privateEndPointConnections.d.ts.map