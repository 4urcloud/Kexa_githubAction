import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { GlobalParameters } from "../operationsInterfaces";
import { DataFactoryManagementClient } from "../dataFactoryManagementClient";
import { GlobalParameterResource, GlobalParametersListByFactoryOptionalParams, GlobalParametersGetOptionalParams, GlobalParametersGetResponse, GlobalParametersCreateOrUpdateOptionalParams, GlobalParametersCreateOrUpdateResponse, GlobalParametersDeleteOptionalParams } from "../models";
/** Class containing GlobalParameters operations. */
export declare class GlobalParametersImpl implements GlobalParameters {
    private readonly client;
    /**
     * Initialize a new instance of the class GlobalParameters class.
     * @param client Reference to the service client
     */
    constructor(client: DataFactoryManagementClient);
    /**
     * Lists Global parameters
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param options The options parameters.
     */
    listByFactory(resourceGroupName: string, factoryName: string, options?: GlobalParametersListByFactoryOptionalParams): PagedAsyncIterableIterator<GlobalParameterResource>;
    private listByFactoryPagingPage;
    private listByFactoryPagingAll;
    /**
     * Lists Global parameters
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param options The options parameters.
     */
    private _listByFactory;
    /**
     * Gets a Global parameter
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param globalParameterName The global parameter name.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, factoryName: string, globalParameterName: string, options?: GlobalParametersGetOptionalParams): Promise<GlobalParametersGetResponse>;
    /**
     * Creates or updates a Global parameter
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param globalParameterName The global parameter name.
     * @param defaultParam Global parameter resource definition.
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, factoryName: string, globalParameterName: string, defaultParam: GlobalParameterResource, options?: GlobalParametersCreateOrUpdateOptionalParams): Promise<GlobalParametersCreateOrUpdateResponse>;
    /**
     * Deletes a Global parameter
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param globalParameterName The global parameter name.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, factoryName: string, globalParameterName: string, options?: GlobalParametersDeleteOptionalParams): Promise<void>;
    /**
     * ListByFactoryNext
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param nextLink The nextLink from the previous successful call to the ListByFactory method.
     * @param options The options parameters.
     */
    private _listByFactoryNext;
}
//# sourceMappingURL=globalParameters.d.ts.map