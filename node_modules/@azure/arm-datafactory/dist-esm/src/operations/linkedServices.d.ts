import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { LinkedServices } from "../operationsInterfaces";
import { DataFactoryManagementClient } from "../dataFactoryManagementClient";
import { LinkedServiceResource, LinkedServicesListByFactoryOptionalParams, LinkedServicesCreateOrUpdateOptionalParams, LinkedServicesCreateOrUpdateResponse, LinkedServicesGetOptionalParams, LinkedServicesGetResponse, LinkedServicesDeleteOptionalParams } from "../models";
/** Class containing LinkedServices operations. */
export declare class LinkedServicesImpl implements LinkedServices {
    private readonly client;
    /**
     * Initialize a new instance of the class LinkedServices class.
     * @param client Reference to the service client
     */
    constructor(client: DataFactoryManagementClient);
    /**
     * Lists linked services.
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param options The options parameters.
     */
    listByFactory(resourceGroupName: string, factoryName: string, options?: LinkedServicesListByFactoryOptionalParams): PagedAsyncIterableIterator<LinkedServiceResource>;
    private listByFactoryPagingPage;
    private listByFactoryPagingAll;
    /**
     * Lists linked services.
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param options The options parameters.
     */
    private _listByFactory;
    /**
     * Creates or updates a linked service.
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param linkedServiceName The linked service name.
     * @param linkedService Linked service resource definition.
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, factoryName: string, linkedServiceName: string, linkedService: LinkedServiceResource, options?: LinkedServicesCreateOrUpdateOptionalParams): Promise<LinkedServicesCreateOrUpdateResponse>;
    /**
     * Gets a linked service.
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param linkedServiceName The linked service name.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, factoryName: string, linkedServiceName: string, options?: LinkedServicesGetOptionalParams): Promise<LinkedServicesGetResponse>;
    /**
     * Deletes a linked service.
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param linkedServiceName The linked service name.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, factoryName: string, linkedServiceName: string, options?: LinkedServicesDeleteOptionalParams): Promise<void>;
    /**
     * ListByFactoryNext
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param nextLink The nextLink from the previous successful call to the ListByFactory method.
     * @param options The options parameters.
     */
    private _listByFactoryNext;
}
//# sourceMappingURL=linkedServices.d.ts.map