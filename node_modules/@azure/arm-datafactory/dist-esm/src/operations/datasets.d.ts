import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Datasets } from "../operationsInterfaces";
import { DataFactoryManagementClient } from "../dataFactoryManagementClient";
import { DatasetResource, DatasetsListByFactoryOptionalParams, DatasetsCreateOrUpdateOptionalParams, DatasetsCreateOrUpdateResponse, DatasetsGetOptionalParams, DatasetsGetResponse, DatasetsDeleteOptionalParams } from "../models";
/** Class containing Datasets operations. */
export declare class DatasetsImpl implements Datasets {
    private readonly client;
    /**
     * Initialize a new instance of the class Datasets class.
     * @param client Reference to the service client
     */
    constructor(client: DataFactoryManagementClient);
    /**
     * Lists datasets.
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param options The options parameters.
     */
    listByFactory(resourceGroupName: string, factoryName: string, options?: DatasetsListByFactoryOptionalParams): PagedAsyncIterableIterator<DatasetResource>;
    private listByFactoryPagingPage;
    private listByFactoryPagingAll;
    /**
     * Lists datasets.
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param options The options parameters.
     */
    private _listByFactory;
    /**
     * Creates or updates a dataset.
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param datasetName The dataset name.
     * @param dataset Dataset resource definition.
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, factoryName: string, datasetName: string, dataset: DatasetResource, options?: DatasetsCreateOrUpdateOptionalParams): Promise<DatasetsCreateOrUpdateResponse>;
    /**
     * Gets a dataset.
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param datasetName The dataset name.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, factoryName: string, datasetName: string, options?: DatasetsGetOptionalParams): Promise<DatasetsGetResponse>;
    /**
     * Deletes a dataset.
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param datasetName The dataset name.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, factoryName: string, datasetName: string, options?: DatasetsDeleteOptionalParams): Promise<void>;
    /**
     * ListByFactoryNext
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param nextLink The nextLink from the previous successful call to the ListByFactory method.
     * @param options The options parameters.
     */
    private _listByFactoryNext;
}
//# sourceMappingURL=datasets.d.ts.map