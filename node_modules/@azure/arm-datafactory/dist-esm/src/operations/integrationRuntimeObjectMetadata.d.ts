import { IntegrationRuntimeObjectMetadata } from "../operationsInterfaces";
import { DataFactoryManagementClient } from "../dataFactoryManagementClient";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import { IntegrationRuntimeObjectMetadataRefreshOptionalParams, IntegrationRuntimeObjectMetadataRefreshResponse, IntegrationRuntimeObjectMetadataGetOptionalParams, IntegrationRuntimeObjectMetadataGetResponse } from "../models";
/** Class containing IntegrationRuntimeObjectMetadata operations. */
export declare class IntegrationRuntimeObjectMetadataImpl implements IntegrationRuntimeObjectMetadata {
    private readonly client;
    /**
     * Initialize a new instance of the class IntegrationRuntimeObjectMetadata class.
     * @param client Reference to the service client
     */
    constructor(client: DataFactoryManagementClient);
    /**
     * Refresh a SSIS integration runtime object metadata.
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param integrationRuntimeName The integration runtime name.
     * @param options The options parameters.
     */
    beginRefresh(resourceGroupName: string, factoryName: string, integrationRuntimeName: string, options?: IntegrationRuntimeObjectMetadataRefreshOptionalParams): Promise<SimplePollerLike<OperationState<IntegrationRuntimeObjectMetadataRefreshResponse>, IntegrationRuntimeObjectMetadataRefreshResponse>>;
    /**
     * Refresh a SSIS integration runtime object metadata.
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param integrationRuntimeName The integration runtime name.
     * @param options The options parameters.
     */
    beginRefreshAndWait(resourceGroupName: string, factoryName: string, integrationRuntimeName: string, options?: IntegrationRuntimeObjectMetadataRefreshOptionalParams): Promise<IntegrationRuntimeObjectMetadataRefreshResponse>;
    /**
     * Get a SSIS integration runtime object metadata by specified path. The return is pageable metadata
     * list.
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param integrationRuntimeName The integration runtime name.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, factoryName: string, integrationRuntimeName: string, options?: IntegrationRuntimeObjectMetadataGetOptionalParams): Promise<IntegrationRuntimeObjectMetadataGetResponse>;
}
//# sourceMappingURL=integrationRuntimeObjectMetadata.d.ts.map