import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { ManagedPrivateEndpoints } from "../operationsInterfaces";
import { DataFactoryManagementClient } from "../dataFactoryManagementClient";
import { ManagedPrivateEndpointResource, ManagedPrivateEndpointsListByFactoryOptionalParams, ManagedPrivateEndpointsCreateOrUpdateOptionalParams, ManagedPrivateEndpointsCreateOrUpdateResponse, ManagedPrivateEndpointsGetOptionalParams, ManagedPrivateEndpointsGetResponse, ManagedPrivateEndpointsDeleteOptionalParams } from "../models";
/** Class containing ManagedPrivateEndpoints operations. */
export declare class ManagedPrivateEndpointsImpl implements ManagedPrivateEndpoints {
    private readonly client;
    /**
     * Initialize a new instance of the class ManagedPrivateEndpoints class.
     * @param client Reference to the service client
     */
    constructor(client: DataFactoryManagementClient);
    /**
     * Lists managed private endpoints.
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param managedVirtualNetworkName Managed virtual network name
     * @param options The options parameters.
     */
    listByFactory(resourceGroupName: string, factoryName: string, managedVirtualNetworkName: string, options?: ManagedPrivateEndpointsListByFactoryOptionalParams): PagedAsyncIterableIterator<ManagedPrivateEndpointResource>;
    private listByFactoryPagingPage;
    private listByFactoryPagingAll;
    /**
     * Lists managed private endpoints.
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param managedVirtualNetworkName Managed virtual network name
     * @param options The options parameters.
     */
    private _listByFactory;
    /**
     * Creates or updates a managed private endpoint.
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param managedVirtualNetworkName Managed virtual network name
     * @param managedPrivateEndpointName Managed private endpoint name
     * @param managedPrivateEndpoint Managed private endpoint resource definition.
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, factoryName: string, managedVirtualNetworkName: string, managedPrivateEndpointName: string, managedPrivateEndpoint: ManagedPrivateEndpointResource, options?: ManagedPrivateEndpointsCreateOrUpdateOptionalParams): Promise<ManagedPrivateEndpointsCreateOrUpdateResponse>;
    /**
     * Gets a managed private endpoint.
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param managedVirtualNetworkName Managed virtual network name
     * @param managedPrivateEndpointName Managed private endpoint name
     * @param options The options parameters.
     */
    get(resourceGroupName: string, factoryName: string, managedVirtualNetworkName: string, managedPrivateEndpointName: string, options?: ManagedPrivateEndpointsGetOptionalParams): Promise<ManagedPrivateEndpointsGetResponse>;
    /**
     * Deletes a managed private endpoint.
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param managedVirtualNetworkName Managed virtual network name
     * @param managedPrivateEndpointName Managed private endpoint name
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, factoryName: string, managedVirtualNetworkName: string, managedPrivateEndpointName: string, options?: ManagedPrivateEndpointsDeleteOptionalParams): Promise<void>;
    /**
     * ListByFactoryNext
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param managedVirtualNetworkName Managed virtual network name
     * @param nextLink The nextLink from the previous successful call to the ListByFactory method.
     * @param options The options parameters.
     */
    private _listByFactoryNext;
}
//# sourceMappingURL=managedPrivateEndpoints.d.ts.map