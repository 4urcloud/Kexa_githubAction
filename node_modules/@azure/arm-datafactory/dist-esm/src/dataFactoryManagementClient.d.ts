import * as coreClient from "@azure/core-client";
import * as coreAuth from "@azure/core-auth";
import { Operations, Factories, ExposureControl, IntegrationRuntimes, IntegrationRuntimeObjectMetadata, IntegrationRuntimeNodes, LinkedServices, Datasets, Pipelines, PipelineRuns, ActivityRuns, Triggers, TriggerRuns, DataFlows, DataFlowDebugSession, ManagedVirtualNetworks, ManagedPrivateEndpoints, CredentialOperations, PrivateEndPointConnections, PrivateEndpointConnection, PrivateLinkResources, GlobalParameters, ChangeDataCapture } from "./operationsInterfaces";
import { DataFactoryManagementClientOptionalParams } from "./models";
export declare class DataFactoryManagementClient extends coreClient.ServiceClient {
    $host: string;
    apiVersion: string;
    subscriptionId: string;
    /**
     * Initializes a new instance of the DataFactoryManagementClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId The subscription identifier.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: DataFactoryManagementClientOptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    operations: Operations;
    factories: Factories;
    exposureControl: ExposureControl;
    integrationRuntimes: IntegrationRuntimes;
    integrationRuntimeObjectMetadata: IntegrationRuntimeObjectMetadata;
    integrationRuntimeNodes: IntegrationRuntimeNodes;
    linkedServices: LinkedServices;
    datasets: Datasets;
    pipelines: Pipelines;
    pipelineRuns: PipelineRuns;
    activityRuns: ActivityRuns;
    triggers: Triggers;
    triggerRuns: TriggerRuns;
    dataFlows: DataFlows;
    dataFlowDebugSession: DataFlowDebugSession;
    managedVirtualNetworks: ManagedVirtualNetworks;
    managedPrivateEndpoints: ManagedPrivateEndpoints;
    credentialOperations: CredentialOperations;
    privateEndPointConnections: PrivateEndPointConnections;
    privateEndpointConnection: PrivateEndpointConnection;
    privateLinkResources: PrivateLinkResources;
    globalParameters: GlobalParameters;
    changeDataCapture: ChangeDataCapture;
}
//# sourceMappingURL=dataFactoryManagementClient.d.ts.map