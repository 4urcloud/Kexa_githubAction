"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var tslib=require("tslib"),coreClient=require("@azure/core-client"),coreRestPipeline=require("@azure/core-rest-pipeline"),coreLro=require("@azure/core-lro");function _interopNamespace(a){var r;return a&&a.__esModule?a:(r=Object.create(null),a&&Object.keys(a).forEach(function(e){var t;"default"!==e&&(t=Object.getOwnPropertyDescriptor(a,e),Object.defineProperty(r,e,t.get?t:{enumerable:!0,get:function(){return a[e]}}))}),r.default=a,Object.freeze(r))}var coreClient__namespace=_interopNamespace(coreClient),coreRestPipeline__namespace=_interopNamespace(coreRestPipeline);const pageMap=new WeakMap;function getContinuationToken(e){return"object"!=typeof e||null===e||null==(e=pageMap.get(e))?void 0:e.continuationToken}function setContinuationToken(e,t){var a;"object"==typeof e&&null!==e&&t&&((a=null!=(a=pageMap.get(e))?a:{}).continuationToken=t,pageMap.set(e,a))}exports.KnownIdentityType=void 0,function(e){e.User="User",e.Application="Application",e.ManagedIdentity="ManagedIdentity",e.Key="Key"}(exports.KnownIdentityType||(exports.KnownIdentityType={}));const Sku={type:{name:"Composite",className:"Sku",modelProperties:{name:{serializedName:"name",required:!0,type:{name:"Enum",allowedValues:["F0","S1","C0"]}}}}},Identity={type:{name:"Composite",className:"Identity",modelProperties:{principalId:{serializedName:"principalId",readOnly:!0,type:{name:"String"}},tenantId:{serializedName:"tenantId",readOnly:!0,type:{name:"String"}},type:{serializedName:"type",type:{name:"Enum",allowedValues:["SystemAssigned","UserAssigned","SystemAssigned, UserAssigned","None"]}},userAssignedIdentities:{serializedName:"userAssignedIdentities",type:{name:"Dictionary",value:{type:{name:"Composite",className:"UserAssignedIdentity"}}}}}}},UserAssignedIdentity={type:{name:"Composite",className:"UserAssignedIdentity",modelProperties:{principalId:{serializedName:"principalId",readOnly:!0,type:{name:"String"}},clientId:{serializedName:"clientId",readOnly:!0,type:{name:"String"}}}}},HealthBotProperties={type:{name:"Composite",className:"HealthBotProperties",modelProperties:{provisioningState:{serializedName:"provisioningState",readOnly:!0,type:{name:"String"}},botManagementPortalLink:{serializedName:"botManagementPortalLink",readOnly:!0,type:{name:"String"}}}}},Resource={type:{name:"Composite",className:"Resource",modelProperties:{id:{serializedName:"id",readOnly:!0,type:{name:"String"}},name:{serializedName:"name",readOnly:!0,type:{name:"String"}},type:{serializedName:"type",readOnly:!0,type:{name:"String"}},systemData:{serializedName:"systemData",type:{name:"Composite",className:"SystemData"}}}}},SystemData={type:{name:"Composite",className:"SystemData",modelProperties:{createdBy:{serializedName:"createdBy",type:{name:"String"}},createdByType:{serializedName:"createdByType",type:{name:"String"}},createdAt:{serializedName:"createdAt",type:{name:"DateTime"}},lastModifiedBy:{serializedName:"lastModifiedBy",type:{name:"String"}},lastModifiedByType:{serializedName:"lastModifiedByType",type:{name:"String"}},lastModifiedAt:{serializedName:"lastModifiedAt",type:{name:"DateTime"}}}}},ErrorModel={type:{name:"Composite",className:"ErrorModel",modelProperties:{error:{serializedName:"error",type:{name:"Composite",className:"ErrorError"}}}}},ErrorError={type:{name:"Composite",className:"ErrorError",modelProperties:{code:{serializedName:"code",readOnly:!0,type:{name:"String"}},message:{serializedName:"message",readOnly:!0,type:{name:"String"}},target:{serializedName:"target",readOnly:!0,type:{name:"String"}},details:{serializedName:"details",readOnly:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"ErrorModel"}}}},additionalInfo:{serializedName:"additionalInfo",readOnly:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"ErrorAdditionalInfo"}}}}}}},ErrorAdditionalInfo={type:{name:"Composite",className:"ErrorAdditionalInfo",modelProperties:{type:{serializedName:"type",readOnly:!0,type:{name:"String"}},info:{serializedName:"info",readOnly:!0,type:{name:"Dictionary",value:{type:{name:"any"}}}}}}},HealthBotUpdateParameters={type:{name:"Composite",className:"HealthBotUpdateParameters",modelProperties:{tags:{serializedName:"tags",type:{name:"Dictionary",value:{type:{name:"String"}}}},sku:{serializedName:"sku",type:{name:"Composite",className:"Sku"}},identity:{serializedName:"identity",type:{name:"Composite",className:"Identity"}},location:{serializedName:"location",type:{name:"String"}}}}},BotResponseList={type:{name:"Composite",className:"BotResponseList",modelProperties:{nextLink:{serializedName:"nextLink",readOnly:!0,type:{name:"String"}},value:{serializedName:"value",readOnly:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"HealthBot"}}}}}}},AvailableOperations={type:{name:"Composite",className:"AvailableOperations",modelProperties:{value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"OperationDetail"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},OperationDetail={type:{name:"Composite",className:"OperationDetail",modelProperties:{name:{serializedName:"name",type:{name:"String"}},isDataAction:{serializedName:"isDataAction",type:{name:"Boolean"}},display:{serializedName:"display",type:{name:"Composite",className:"OperationDisplay"}},origin:{serializedName:"origin",type:{name:"String"}},properties:{serializedName:"properties",type:{name:"Dictionary",value:{type:{name:"any"}}}}}}},OperationDisplay={type:{name:"Composite",className:"OperationDisplay",modelProperties:{provider:{serializedName:"provider",type:{name:"String"}},resource:{serializedName:"resource",type:{name:"String"}},operation:{serializedName:"operation",type:{name:"String"}},description:{serializedName:"description",type:{name:"String"}}}}},ValidationResult={type:{name:"Composite",className:"ValidationResult",modelProperties:{status:{serializedName:"status",type:{name:"String"}}}}},TrackedResource={type:{name:"Composite",className:"TrackedResource",modelProperties:Object.assign(Object.assign({},Resource.type.modelProperties),{tags:{serializedName:"tags",type:{name:"Dictionary",value:{type:{name:"String"}}}},location:{serializedName:"location",required:!0,type:{name:"String"}}})}},HealthBot={type:{name:"Composite",className:"HealthBot",modelProperties:Object.assign(Object.assign({},TrackedResource.type.modelProperties),{sku:{serializedName:"sku",type:{name:"Composite",className:"Sku"}},identity:{serializedName:"identity",type:{name:"Composite",className:"Identity"}},properties:{serializedName:"properties",type:{name:"Composite",className:"HealthBotProperties"}}})}};var Mappers=Object.freeze({__proto__:null,Sku:Sku,Identity:Identity,UserAssignedIdentity:UserAssignedIdentity,HealthBotProperties:HealthBotProperties,Resource:Resource,SystemData:SystemData,ErrorModel:ErrorModel,ErrorError:ErrorError,ErrorAdditionalInfo:ErrorAdditionalInfo,HealthBotUpdateParameters:HealthBotUpdateParameters,BotResponseList:BotResponseList,AvailableOperations:AvailableOperations,OperationDetail:OperationDetail,OperationDisplay:OperationDisplay,ValidationResult:ValidationResult,TrackedResource:TrackedResource,HealthBot:HealthBot});const contentType={parameterPath:["options","contentType"],mapper:{defaultValue:"application/json",isConstant:!0,serializedName:"Content-Type",type:{name:"String"}}},parameters={parameterPath:"parameters",mapper:HealthBot},accept={parameterPath:"accept",mapper:{defaultValue:"application/json",isConstant:!0,serializedName:"Accept",type:{name:"String"}}},$host={parameterPath:"$host",mapper:{serializedName:"$host",required:!0,type:{name:"String"}},skipEncoding:!0},subscriptionId={parameterPath:"subscriptionId",mapper:{serializedName:"subscriptionId",required:!0,type:{name:"String"}}},resourceGroupName={parameterPath:"resourceGroupName",mapper:{constraints:{Pattern:new RegExp("^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"),MaxLength:64,MinLength:2},serializedName:"resourceGroupName",required:!0,type:{name:"String"}}},botName={parameterPath:"botName",mapper:{constraints:{Pattern:new RegExp("^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"),MaxLength:64,MinLength:2},serializedName:"botName",required:!0,type:{name:"String"}}},apiVersion={parameterPath:"apiVersion",mapper:{defaultValue:"2021-06-10",isConstant:!0,serializedName:"api-version",type:{name:"String"}}},parameters1={parameterPath:"parameters",mapper:HealthBotUpdateParameters},nextLink={parameterPath:"nextLink",mapper:{serializedName:"nextLink",required:!0,type:{name:"String"}},skipEncoding:!0};class LroImpl{constructor(e,t,a,r=a.path,i=a.httpMethod){this.sendOperationFn=e,this.args=t,this.spec=a,this.requestPath=r,this.requestMethod=i}sendInitialRequest(){return tslib.__awaiter(this,void 0,void 0,function*(){return this.sendOperationFn(this.args,this.spec)})}sendPollRequest(t){return tslib.__awaiter(this,void 0,void 0,function*(){var e=this.spec,e=tslib.__rest(e,["requestBody"]);return this.sendOperationFn(this.args,Object.assign(Object.assign({},e),{path:t,httpMethod:"GET"}))})}}class BotsImpl{constructor(e){this.client=e}listByResourceGroup(t,a){const e=this.listByResourceGroupPagingAll(t,a);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listByResourceGroupPagingPage(t,a,e)}}}listByResourceGroupPagingPage(i,s,n){return tslib.__asyncGenerator(this,arguments,function*(){let e,t=null==n?void 0:n.continuationToken;var a;for(t||(setContinuationToken(a=(e=yield tslib.__await(this._listByResourceGroup(i,s))).value||[],t=e.nextLink),yield yield tslib.__await(a));t;){e=yield tslib.__await(this._listByResourceGroupNext(i,t,s)),t=e.nextLink;var r=e.value||[];setContinuationToken(r,t),yield yield tslib.__await(r)}})}listByResourceGroupPagingAll(s,n){return tslib.__asyncGenerator(this,arguments,function*(){var t,e;try{for(var a,r=tslib.__asyncValues(this.listByResourceGroupPagingPage(s,n));!(a=yield tslib.__await(r.next())).done;){var i=a.value;yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(i)))}}catch(e){t={error:e}}finally{try{a&&!a.done&&(e=r.return)&&(yield tslib.__await(e.call(r)))}finally{if(t)throw t.error}}})}list(t){const e=this.listPagingAll(t);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listPagingPage(t,e)}}}listPagingPage(i,s){return tslib.__asyncGenerator(this,arguments,function*(){let e,t=null==s?void 0:s.continuationToken;var a;for(t||(setContinuationToken(a=(e=yield tslib.__await(this._list(i))).value||[],t=e.nextLink),yield yield tslib.__await(a));t;){e=yield tslib.__await(this._listNext(t,i)),t=e.nextLink;var r=e.value||[];setContinuationToken(r,t),yield yield tslib.__await(r)}})}listPagingAll(s){return tslib.__asyncGenerator(this,arguments,function*(){var t,e;try{for(var a,r=tslib.__asyncValues(this.listPagingPage(s));!(a=yield tslib.__await(r.next())).done;){var i=a.value;yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(i)))}}catch(e){t={error:e}}finally{try{a&&!a.done&&(e=r.return)&&(yield tslib.__await(e.call(r)))}finally{if(t)throw t.error}}})}beginCreate(t,a,r,i){return tslib.__awaiter(this,void 0,void 0,function*(){const s=(e,t)=>tslib.__awaiter(this,void 0,void 0,function*(){return this.client.sendOperationRequest(e,t)});var e=new LroImpl((t,i)=>tslib.__awaiter(this,void 0,void 0,function*(){let a=void 0;const r=null==(e=t.options)?void 0:e.onResponse;var e=Object.assign(Object.assign({},t),{options:Object.assign(Object.assign({},t.options),{onResponse:(e,t)=>{a=e,null!==r&&void 0!==r&&r(e,t)}})});return{flatResponse:yield s(e,i),rawResponse:{statusCode:a.status,body:a.parsedBody,headers:a.headers.toJSON()}}}),{resourceGroupName:t,botName:a,parameters:r,options:i},createOperationSpec),e=new coreLro.LroEngine(e,{resumeFrom:null==i?void 0:i.resumeFrom,intervalInMs:null==i?void 0:i.updateIntervalInMs,lroResourceLocationConfig:"azure-async-operation"});return yield e.poll(),e})}beginCreateAndWait(e,t,a,r){return tslib.__awaiter(this,void 0,void 0,function*(){return(yield this.beginCreate(e,t,a,r)).pollUntilDone()})}get(e,t,a){return this.client.sendOperationRequest({resourceGroupName:e,botName:t,options:a},getOperationSpec)}update(e,t,a,r){return this.client.sendOperationRequest({resourceGroupName:e,botName:t,parameters:a,options:r},updateOperationSpec)}beginDelete(t,a,r){return tslib.__awaiter(this,void 0,void 0,function*(){const s=(e,t)=>tslib.__awaiter(this,void 0,void 0,function*(){return this.client.sendOperationRequest(e,t)});var e=new LroImpl((t,i)=>tslib.__awaiter(this,void 0,void 0,function*(){let a=void 0;const r=null==(e=t.options)?void 0:e.onResponse;var e=Object.assign(Object.assign({},t),{options:Object.assign(Object.assign({},t.options),{onResponse:(e,t)=>{a=e,null!==r&&void 0!==r&&r(e,t)}})});return{flatResponse:yield s(e,i),rawResponse:{statusCode:a.status,body:a.parsedBody,headers:a.headers.toJSON()}}}),{resourceGroupName:t,botName:a,options:r},deleteOperationSpec),e=new coreLro.LroEngine(e,{resumeFrom:null==r?void 0:r.resumeFrom,intervalInMs:null==r?void 0:r.updateIntervalInMs});return yield e.poll(),e})}beginDeleteAndWait(e,t,a){return tslib.__awaiter(this,void 0,void 0,function*(){return(yield this.beginDelete(e,t,a)).pollUntilDone()})}_listByResourceGroup(e,t){return this.client.sendOperationRequest({resourceGroupName:e,options:t},listByResourceGroupOperationSpec)}_list(e){return this.client.sendOperationRequest({options:e},listOperationSpec$1)}_listByResourceGroupNext(e,t,a){return this.client.sendOperationRequest({resourceGroupName:e,nextLink:t,options:a},listByResourceGroupNextOperationSpec)}_listNext(e,t){return this.client.sendOperationRequest({nextLink:e,options:t},listNextOperationSpec$1)}}const serializer$1=coreClient__namespace.createSerializer(Mappers,!1),createOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthBot/healthBots/{botName}",httpMethod:"PUT",responses:{200:{bodyMapper:HealthBot},201:{bodyMapper:HealthBot},202:{bodyMapper:HealthBot},204:{bodyMapper:HealthBot},default:{bodyMapper:ErrorModel}},requestBody:parameters,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,botName],headerParameters:[contentType,accept],mediaType:"json",serializer:serializer$1},getOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthBot/healthBots/{botName}",httpMethod:"GET",responses:{200:{bodyMapper:HealthBot},default:{bodyMapper:ErrorModel}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,botName],headerParameters:[accept],serializer:serializer$1},updateOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthBot/healthBots/{botName}",httpMethod:"PATCH",responses:{200:{bodyMapper:HealthBot},201:{bodyMapper:HealthBot},default:{bodyMapper:ErrorModel}},requestBody:parameters1,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,botName],headerParameters:[contentType,accept],mediaType:"json",serializer:serializer$1},deleteOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthBot/healthBots/{botName}",httpMethod:"DELETE",responses:{200:{},201:{},202:{},204:{},default:{bodyMapper:ErrorModel}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,botName],headerParameters:[accept],serializer:serializer$1},listByResourceGroupOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthBot/healthBots",httpMethod:"GET",responses:{200:{bodyMapper:BotResponseList},default:{bodyMapper:ErrorModel}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName],headerParameters:[accept],serializer:serializer$1},listOperationSpec$1={path:"/subscriptions/{subscriptionId}/providers/Microsoft.HealthBot/healthBots",httpMethod:"GET",responses:{200:{bodyMapper:BotResponseList},default:{bodyMapper:ErrorModel}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId],headerParameters:[accept],serializer:serializer$1},listByResourceGroupNextOperationSpec={path:"{nextLink}",httpMethod:"GET",responses:{200:{bodyMapper:BotResponseList},default:{bodyMapper:ErrorModel}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,nextLink],headerParameters:[accept],serializer:serializer$1},listNextOperationSpec$1={path:"{nextLink}",httpMethod:"GET",responses:{200:{bodyMapper:BotResponseList},default:{bodyMapper:ErrorModel}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,nextLink],headerParameters:[accept],serializer:serializer$1};class OperationsImpl{constructor(e){this.client=e}list(t){const e=this.listPagingAll(t);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listPagingPage(t,e)}}}listPagingPage(i,s){return tslib.__asyncGenerator(this,arguments,function*(){let e,t=null==s?void 0:s.continuationToken;var a;for(t||(setContinuationToken(a=(e=yield tslib.__await(this._list(i))).value||[],t=e.nextLink),yield yield tslib.__await(a));t;){e=yield tslib.__await(this._listNext(t,i)),t=e.nextLink;var r=e.value||[];setContinuationToken(r,t),yield yield tslib.__await(r)}})}listPagingAll(s){return tslib.__asyncGenerator(this,arguments,function*(){var t,e;try{for(var a,r=tslib.__asyncValues(this.listPagingPage(s));!(a=yield tslib.__await(r.next())).done;){var i=a.value;yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(i)))}}catch(e){t={error:e}}finally{try{a&&!a.done&&(e=r.return)&&(yield tslib.__await(e.call(r)))}finally{if(t)throw t.error}}})}_list(e){return this.client.sendOperationRequest({options:e},listOperationSpec)}_listNext(e,t){return this.client.sendOperationRequest({nextLink:e,options:t},listNextOperationSpec)}}const serializer=coreClient__namespace.createSerializer(Mappers,!1),listOperationSpec={path:"/providers/Microsoft.HealthBot/operations",httpMethod:"GET",responses:{200:{bodyMapper:AvailableOperations},default:{bodyMapper:ErrorModel}},queryParameters:[apiVersion],urlParameters:[$host],headerParameters:[accept],serializer:serializer},listNextOperationSpec={path:"{nextLink}",httpMethod:"GET",responses:{200:{bodyMapper:AvailableOperations},default:{bodyMapper:ErrorModel}},queryParameters:[apiVersion],urlParameters:[$host,nextLink],headerParameters:[accept],serializer:serializer};class HealthbotClient extends coreClient__namespace.ServiceClient{constructor(e,t,a){if(void 0===e)throw new Error("'credentials' cannot be null");if(void 0===t)throw new Error("'subscriptionId' cannot be null");var r,i="azsdk-js-arm-healthbot/2.1.0",i=(a=a||{}).userAgentOptions&&a.userAgentOptions.userAgentPrefix?a.userAgentOptions.userAgentPrefix+" "+i:i,i=Object.assign(Object.assign(Object.assign({},{requestContentType:"application/json; charset=utf-8",credential:e}),a),{userAgentOptions:{userAgentPrefix:i},endpoint:null!=(i=null!=(i=a.endpoint)?i:a.baseUri)?i:"https://management.azure.com"});super(i);let s=!1;null!=a&&a.pipeline&&0<a.pipeline.getOrderedPolicies().length&&(r=a.pipeline.getOrderedPolicies(),s=r.some(e=>e.name===coreRestPipeline__namespace.bearerTokenAuthenticationPolicyName)),a&&a.pipeline&&0!=a.pipeline.getOrderedPolicies().length&&s||(this.pipeline.removePolicy({name:coreRestPipeline__namespace.bearerTokenAuthenticationPolicyName}),this.pipeline.addPolicy(coreRestPipeline__namespace.bearerTokenAuthenticationPolicy({credential:e,scopes:null!=(r=i.credentialScopes)?r:i.endpoint+"/.default",challengeCallbacks:{authorizeRequestOnChallenge:coreClient__namespace.authorizeRequestOnClaimChallenge}}))),this.subscriptionId=t,this.$host=a.$host||"https://management.azure.com",this.apiVersion=a.apiVersion||"2021-06-10",this.bots=new BotsImpl(this),this.operations=new OperationsImpl(this),this.addCustomApiVersionPolicy(a.apiVersion)}addCustomApiVersionPolicy(i){i&&this.pipeline.addPolicy({name:"CustomApiVersionPolicy",sendRequest(a,r){return tslib.__awaiter(this,void 0,void 0,function*(){var e,t=a.url.split("?");return 1<t.length&&(e=t[1].split("&").map(e=>-1<e.indexOf("api-version")?"api-version="+i:e),a.url=t[0]+"?"+e.join("&")),r(a)})}})}}exports.HealthbotClient=HealthbotClient,exports.getContinuationToken=getContinuationToken;