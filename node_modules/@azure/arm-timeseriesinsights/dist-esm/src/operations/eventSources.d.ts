import { EventSources } from "../operationsInterfaces";
import { TimeSeriesInsightsClient } from "../timeSeriesInsightsClient";
import { EventSourceCreateOrUpdateParametersUnion, EventSourcesCreateOrUpdateOptionalParams, EventSourcesCreateOrUpdateResponse, EventSourcesGetOptionalParams, EventSourcesGetResponse, EventSourceUpdateParametersUnion, EventSourcesUpdateOptionalParams, EventSourcesUpdateResponse, EventSourcesDeleteOptionalParams, EventSourcesListByEnvironmentOptionalParams, EventSourcesListByEnvironmentResponse } from "../models";
/** Class containing EventSources operations. */
export declare class EventSourcesImpl implements EventSources {
    private readonly client;
    /**
     * Initialize a new instance of the class EventSources class.
     * @param client Reference to the service client
     */
    constructor(client: TimeSeriesInsightsClient);
    /**
     * Create or update an event source under the specified environment.
     * @param resourceGroupName Name of an Azure Resource group.
     * @param environmentName The name of the Time Series Insights environment associated with the
     *                        specified resource group.
     * @param eventSourceName Name of the event source.
     * @param parameters Parameters for creating an event source resource.
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, environmentName: string, eventSourceName: string, parameters: EventSourceCreateOrUpdateParametersUnion, options?: EventSourcesCreateOrUpdateOptionalParams): Promise<EventSourcesCreateOrUpdateResponse>;
    /**
     * Gets the event source with the specified name in the specified environment.
     * @param resourceGroupName Name of an Azure Resource group.
     * @param environmentName The name of the Time Series Insights environment associated with the
     *                        specified resource group.
     * @param eventSourceName The name of the Time Series Insights event source associated with the
     *                        specified environment.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, environmentName: string, eventSourceName: string, options?: EventSourcesGetOptionalParams): Promise<EventSourcesGetResponse>;
    /**
     * Updates the event source with the specified name in the specified subscription, resource group, and
     * environment.
     * @param resourceGroupName Name of an Azure Resource group.
     * @param environmentName The name of the Time Series Insights environment associated with the
     *                        specified resource group.
     * @param eventSourceName The name of the Time Series Insights event source associated with the
     *                        specified environment.
     * @param eventSourceUpdateParameters Request object that contains the updated information for the
     *                                    event source.
     * @param options The options parameters.
     */
    update(resourceGroupName: string, environmentName: string, eventSourceName: string, eventSourceUpdateParameters: EventSourceUpdateParametersUnion, options?: EventSourcesUpdateOptionalParams): Promise<EventSourcesUpdateResponse>;
    /**
     * Deletes the event source with the specified name in the specified subscription, resource group, and
     * environment
     * @param resourceGroupName Name of an Azure Resource group.
     * @param environmentName The name of the Time Series Insights environment associated with the
     *                        specified resource group.
     * @param eventSourceName The name of the Time Series Insights event source associated with the
     *                        specified environment.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, environmentName: string, eventSourceName: string, options?: EventSourcesDeleteOptionalParams): Promise<void>;
    /**
     * Lists all the available event sources associated with the subscription and within the specified
     * resource group and environment.
     * @param resourceGroupName Name of an Azure Resource group.
     * @param environmentName The name of the Time Series Insights environment associated with the
     *                        specified resource group.
     * @param options The options parameters.
     */
    listByEnvironment(resourceGroupName: string, environmentName: string, options?: EventSourcesListByEnvironmentOptionalParams): Promise<EventSourcesListByEnvironmentResponse>;
}
//# sourceMappingURL=eventSources.d.ts.map