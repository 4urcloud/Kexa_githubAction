/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
/** Known values of {@link EnvironmentKind} that the service accepts. */
export var KnownEnvironmentKind;
(function (KnownEnvironmentKind) {
    KnownEnvironmentKind["Gen1"] = "Gen1";
    KnownEnvironmentKind["Gen2"] = "Gen2";
})(KnownEnvironmentKind || (KnownEnvironmentKind = {}));
/** Known values of {@link SkuName} that the service accepts. */
export var KnownSkuName;
(function (KnownSkuName) {
    KnownSkuName["S1"] = "S1";
    KnownSkuName["S2"] = "S2";
    KnownSkuName["P1"] = "P1";
    KnownSkuName["L1"] = "L1";
})(KnownSkuName || (KnownSkuName = {}));
/** Known values of {@link EnvironmentResourceKind} that the service accepts. */
export var KnownEnvironmentResourceKind;
(function (KnownEnvironmentResourceKind) {
    KnownEnvironmentResourceKind["Gen1"] = "Gen1";
    KnownEnvironmentResourceKind["Gen2"] = "Gen2";
})(KnownEnvironmentResourceKind || (KnownEnvironmentResourceKind = {}));
/** Known values of {@link EventSourceKind} that the service accepts. */
export var KnownEventSourceKind;
(function (KnownEventSourceKind) {
    KnownEventSourceKind["MicrosoftEventHub"] = "Microsoft.EventHub";
    KnownEventSourceKind["MicrosoftIoTHub"] = "Microsoft.IoTHub";
})(KnownEventSourceKind || (KnownEventSourceKind = {}));
/** Known values of {@link LocalTimestampFormat} that the service accepts. */
export var KnownLocalTimestampFormat;
(function (KnownLocalTimestampFormat) {
    KnownLocalTimestampFormat["Embedded"] = "Embedded";
})(KnownLocalTimestampFormat || (KnownLocalTimestampFormat = {}));
/** Known values of {@link EventSourceResourceKind} that the service accepts. */
export var KnownEventSourceResourceKind;
(function (KnownEventSourceResourceKind) {
    KnownEventSourceResourceKind["MicrosoftEventHub"] = "Microsoft.EventHub";
    KnownEventSourceResourceKind["MicrosoftIoTHub"] = "Microsoft.IoTHub";
})(KnownEventSourceResourceKind || (KnownEventSourceResourceKind = {}));
/** Known values of {@link ReferenceDataKeyPropertyType} that the service accepts. */
export var KnownReferenceDataKeyPropertyType;
(function (KnownReferenceDataKeyPropertyType) {
    KnownReferenceDataKeyPropertyType["String"] = "String";
    KnownReferenceDataKeyPropertyType["Double"] = "Double";
    KnownReferenceDataKeyPropertyType["Bool"] = "Bool";
    KnownReferenceDataKeyPropertyType["DateTime"] = "DateTime";
})(KnownReferenceDataKeyPropertyType || (KnownReferenceDataKeyPropertyType = {}));
/** Known values of {@link DataStringComparisonBehavior} that the service accepts. */
export var KnownDataStringComparisonBehavior;
(function (KnownDataStringComparisonBehavior) {
    KnownDataStringComparisonBehavior["Ordinal"] = "Ordinal";
    KnownDataStringComparisonBehavior["OrdinalIgnoreCase"] = "OrdinalIgnoreCase";
})(KnownDataStringComparisonBehavior || (KnownDataStringComparisonBehavior = {}));
/** Known values of {@link ProvisioningState} that the service accepts. */
export var KnownProvisioningState;
(function (KnownProvisioningState) {
    KnownProvisioningState["Accepted"] = "Accepted";
    KnownProvisioningState["Creating"] = "Creating";
    KnownProvisioningState["Updating"] = "Updating";
    KnownProvisioningState["Succeeded"] = "Succeeded";
    KnownProvisioningState["Failed"] = "Failed";
    KnownProvisioningState["Deleting"] = "Deleting";
})(KnownProvisioningState || (KnownProvisioningState = {}));
/** Known values of {@link AccessPolicyRole} that the service accepts. */
export var KnownAccessPolicyRole;
(function (KnownAccessPolicyRole) {
    KnownAccessPolicyRole["Reader"] = "Reader";
    KnownAccessPolicyRole["Contributor"] = "Contributor";
})(KnownAccessPolicyRole || (KnownAccessPolicyRole = {}));
/** Known values of {@link StorageLimitExceededBehavior} that the service accepts. */
export var KnownStorageLimitExceededBehavior;
(function (KnownStorageLimitExceededBehavior) {
    KnownStorageLimitExceededBehavior["PurgeOldData"] = "PurgeOldData";
    KnownStorageLimitExceededBehavior["PauseIngress"] = "PauseIngress";
})(KnownStorageLimitExceededBehavior || (KnownStorageLimitExceededBehavior = {}));
/** Known values of {@link PropertyType} that the service accepts. */
export var KnownPropertyType;
(function (KnownPropertyType) {
    KnownPropertyType["String"] = "String";
})(KnownPropertyType || (KnownPropertyType = {}));
/** Known values of {@link IngressState} that the service accepts. */
export var KnownIngressState;
(function (KnownIngressState) {
    KnownIngressState["Disabled"] = "Disabled";
    KnownIngressState["Ready"] = "Ready";
    KnownIngressState["Running"] = "Running";
    KnownIngressState["Paused"] = "Paused";
    KnownIngressState["Unknown"] = "Unknown";
})(KnownIngressState || (KnownIngressState = {}));
/** Known values of {@link WarmStoragePropertiesState} that the service accepts. */
export var KnownWarmStoragePropertiesState;
(function (KnownWarmStoragePropertiesState) {
    KnownWarmStoragePropertiesState["Ok"] = "Ok";
    KnownWarmStoragePropertiesState["Error"] = "Error";
    KnownWarmStoragePropertiesState["Unknown"] = "Unknown";
})(KnownWarmStoragePropertiesState || (KnownWarmStoragePropertiesState = {}));
/** Known values of {@link IngressStartAtType} that the service accepts. */
export var KnownIngressStartAtType;
(function (KnownIngressStartAtType) {
    KnownIngressStartAtType["EarliestAvailable"] = "EarliestAvailable";
    KnownIngressStartAtType["EventSourceCreationTime"] = "EventSourceCreationTime";
    KnownIngressStartAtType["CustomEnqueuedTime"] = "CustomEnqueuedTime";
})(KnownIngressStartAtType || (KnownIngressStartAtType = {}));
//# sourceMappingURL=index.js.map