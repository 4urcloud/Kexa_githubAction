import * as coreClient from "@azure/core-client";
import * as coreAuth from "@azure/core-auth";
import { SystemAssignedIdentities, Operations, UserAssignedIdentities, FederatedIdentityCredentials } from "./operationsInterfaces";
import { ManagedServiceIdentityClientOptionalParams } from "./models";
export declare class ManagedServiceIdentityClient extends coreClient.ServiceClient {
    $host: string;
    apiVersion: string;
    subscriptionId: string;
    /**
     * Initializes a new instance of the ManagedServiceIdentityClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId The Id of the Subscription to which the identity belongs.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: ManagedServiceIdentityClientOptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    systemAssignedIdentities: SystemAssignedIdentities;
    operations: Operations;
    userAssignedIdentities: UserAssignedIdentities;
    federatedIdentityCredentials: FederatedIdentityCredentials;
}
//# sourceMappingURL=managedServiceIdentityClient.d.ts.map