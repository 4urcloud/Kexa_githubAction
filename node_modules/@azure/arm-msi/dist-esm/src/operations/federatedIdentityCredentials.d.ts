import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { FederatedIdentityCredentials } from "../operationsInterfaces";
import { ManagedServiceIdentityClient } from "../managedServiceIdentityClient";
import { FederatedIdentityCredential, FederatedIdentityCredentialsListOptionalParams, FederatedIdentityCredentialsCreateOrUpdateOptionalParams, FederatedIdentityCredentialsCreateOrUpdateResponse, FederatedIdentityCredentialsGetOptionalParams, FederatedIdentityCredentialsGetResponse, FederatedIdentityCredentialsDeleteOptionalParams } from "../models";
/** Class containing FederatedIdentityCredentials operations. */
export declare class FederatedIdentityCredentialsImpl implements FederatedIdentityCredentials {
    private readonly client;
    /**
     * Initialize a new instance of the class FederatedIdentityCredentials class.
     * @param client Reference to the service client
     */
    constructor(client: ManagedServiceIdentityClient);
    /**
     * Lists all the federated identity credentials under the specified user assigned identity.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the identity resource.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, resourceName: string, options?: FederatedIdentityCredentialsListOptionalParams): PagedAsyncIterableIterator<FederatedIdentityCredential>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Lists all the federated identity credentials under the specified user assigned identity.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the identity resource.
     * @param options The options parameters.
     */
    private _list;
    /**
     * Create or update a federated identity credential under the specified user assigned identity.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the identity resource.
     * @param federatedIdentityCredentialResourceName The name of the federated identity credential
     *                                                resource.
     * @param parameters Parameters to create or update the federated identity credential.
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, resourceName: string, federatedIdentityCredentialResourceName: string, parameters: FederatedIdentityCredential, options?: FederatedIdentityCredentialsCreateOrUpdateOptionalParams): Promise<FederatedIdentityCredentialsCreateOrUpdateResponse>;
    /**
     * Gets the federated identity credential.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the identity resource.
     * @param federatedIdentityCredentialResourceName The name of the federated identity credential
     *                                                resource.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, resourceName: string, federatedIdentityCredentialResourceName: string, options?: FederatedIdentityCredentialsGetOptionalParams): Promise<FederatedIdentityCredentialsGetResponse>;
    /**
     * Deletes the federated identity credential.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the identity resource.
     * @param federatedIdentityCredentialResourceName The name of the federated identity credential
     *                                                resource.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, resourceName: string, federatedIdentityCredentialResourceName: string, options?: FederatedIdentityCredentialsDeleteOptionalParams): Promise<void>;
    /**
     * ListNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the identity resource.
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=federatedIdentityCredentials.d.ts.map