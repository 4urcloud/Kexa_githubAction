import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Videos } from "../operationsInterfaces";
import { VideoAnalyzerManagementClient } from "../videoAnalyzerManagementClient";
import { VideoEntity, VideosListOptionalParams, VideosGetOptionalParams, VideosGetResponse, VideosCreateOrUpdateOptionalParams, VideosCreateOrUpdateResponse, VideosDeleteOptionalParams, VideosUpdateOptionalParams, VideosUpdateResponse, VideosListContentTokenOptionalParams, VideosListContentTokenResponse } from "../models";
/** Class containing Videos operations. */
export declare class VideosImpl implements Videos {
    private readonly client;
    /**
     * Initialize a new instance of the class Videos class.
     * @param client Reference to the service client
     */
    constructor(client: VideoAnalyzerManagementClient);
    /**
     * Retrieves a list of video resources that have been created, along with their JSON representations.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The Azure Video Analyzer account name.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, accountName: string, options?: VideosListOptionalParams): PagedAsyncIterableIterator<VideoEntity>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Retrieves a list of video resources that have been created, along with their JSON representations.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The Azure Video Analyzer account name.
     * @param options The options parameters.
     */
    private _list;
    /**
     * Retrieves an existing video resource with the given name.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The Azure Video Analyzer account name.
     * @param videoName The Video name.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, accountName: string, videoName: string, options?: VideosGetOptionalParams): Promise<VideosGetResponse>;
    /**
     * Creates a new video resource or updates an existing video resource with the given name.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The Azure Video Analyzer account name.
     * @param videoName The Video name.
     * @param parameters The request parameters
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, accountName: string, videoName: string, parameters: VideoEntity, options?: VideosCreateOrUpdateOptionalParams): Promise<VideosCreateOrUpdateResponse>;
    /**
     * Deletes an existing video resource and its underlying data. This operation is irreversible.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The Azure Video Analyzer account name.
     * @param videoName The Video name.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, accountName: string, videoName: string, options?: VideosDeleteOptionalParams): Promise<void>;
    /**
     * Updates individual properties of an existing video resource with the given name.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The Azure Video Analyzer account name.
     * @param videoName The Video name.
     * @param parameters The request parameters
     * @param options The options parameters.
     */
    update(resourceGroupName: string, accountName: string, videoName: string, parameters: VideoEntity, options?: VideosUpdateOptionalParams): Promise<VideosUpdateResponse>;
    /**
     * Generates a streaming token which can be used for accessing content from video content URLs, for a
     * video resource with the given name.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The Azure Video Analyzer account name.
     * @param videoName The Video name.
     * @param options The options parameters.
     */
    listContentToken(resourceGroupName: string, accountName: string, videoName: string, options?: VideosListContentTokenOptionalParams): Promise<VideosListContentTokenResponse>;
    /**
     * ListNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The Azure Video Analyzer account name.
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=videos.d.ts.map