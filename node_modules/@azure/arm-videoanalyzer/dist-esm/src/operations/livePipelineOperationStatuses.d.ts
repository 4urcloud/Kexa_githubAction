import { LivePipelineOperationStatuses } from "../operationsInterfaces";
import { VideoAnalyzerManagementClient } from "../videoAnalyzerManagementClient";
import { LivePipelineOperationStatusesGetOptionalParams, LivePipelineOperationStatusesGetResponse } from "../models";
/** Class containing LivePipelineOperationStatuses operations. */
export declare class LivePipelineOperationStatusesImpl implements LivePipelineOperationStatuses {
    private readonly client;
    /**
     * Initialize a new instance of the class LivePipelineOperationStatuses class.
     * @param client Reference to the service client
     */
    constructor(client: VideoAnalyzerManagementClient);
    /**
     * Get the operation status of a live pipeline.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The Azure Video Analyzer account name.
     * @param livePipelineName Live pipeline unique identifier.
     * @param operationId The operation ID.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, accountName: string, livePipelineName: string, operationId: string, options?: LivePipelineOperationStatusesGetOptionalParams): Promise<LivePipelineOperationStatusesGetResponse>;
}
//# sourceMappingURL=livePipelineOperationStatuses.d.ts.map