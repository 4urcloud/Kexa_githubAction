import * as coreClient from "@azure/core-client";
import * as coreAuth from "@azure/core-auth";
import { EdgeModules, PipelineTopologies, LivePipelines, PipelineJobs, LivePipelineOperationStatuses, PipelineJobOperationStatuses, Operations, VideoAnalyzers, PrivateLinkResources, PrivateEndpointConnections, OperationStatuses, OperationResults, VideoAnalyzerOperationStatuses, VideoAnalyzerOperationResults, Locations, Videos, AccessPolicies } from "./operationsInterfaces";
import { VideoAnalyzerManagementClientOptionalParams } from "./models";
export declare class VideoAnalyzerManagementClient extends coreClient.ServiceClient {
    $host: string;
    subscriptionId: string;
    apiVersion: string;
    /**
     * Initializes a new instance of the VideoAnalyzerManagementClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId The ID of the target subscription.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: VideoAnalyzerManagementClientOptionalParams);
    edgeModules: EdgeModules;
    pipelineTopologies: PipelineTopologies;
    livePipelines: LivePipelines;
    pipelineJobs: PipelineJobs;
    livePipelineOperationStatuses: LivePipelineOperationStatuses;
    pipelineJobOperationStatuses: PipelineJobOperationStatuses;
    operations: Operations;
    videoAnalyzers: VideoAnalyzers;
    privateLinkResources: PrivateLinkResources;
    privateEndpointConnections: PrivateEndpointConnections;
    operationStatuses: OperationStatuses;
    operationResults: OperationResults;
    videoAnalyzerOperationStatuses: VideoAnalyzerOperationStatuses;
    videoAnalyzerOperationResults: VideoAnalyzerOperationResults;
    locations: Locations;
    videos: Videos;
    accessPolicies: AccessPolicies;
}
//# sourceMappingURL=videoAnalyzerManagementClient.d.ts.map