import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { UsageManagementClientContext } from "../usageManagementClientContext";
/** Class representing a UsageAggregates. */
export declare class UsageAggregates {
    private readonly client;
    /**
     * Create a UsageAggregates.
     * @param {UsageManagementClientContext} client Reference to the service client.
     */
    constructor(client: UsageManagementClientContext);
    /**
     * Query aggregated Azure subscription consumption data for a date range.
     * @param reportedStartTime The start of the time range to retrieve data for.
     * @param reportedEndTime The end of the time range to retrieve data for.
     * @param [options] The optional parameters
     * @returns Promise<Models.UsageAggregatesListResponse>
     */
    list(reportedStartTime: Date | string, reportedEndTime: Date | string, options?: Models.UsageAggregatesListOptionalParams): Promise<Models.UsageAggregatesListResponse>;
    /**
     * @param reportedStartTime The start of the time range to retrieve data for.
     * @param reportedEndTime The end of the time range to retrieve data for.
     * @param callback The callback
     */
    list(reportedStartTime: Date | string, reportedEndTime: Date | string, callback: msRest.ServiceCallback<Models.UsageAggregationListResult>): void;
    /**
     * @param reportedStartTime The start of the time range to retrieve data for.
     * @param reportedEndTime The end of the time range to retrieve data for.
     * @param options The optional parameters
     * @param callback The callback
     */
    list(reportedStartTime: Date | string, reportedEndTime: Date | string, options: Models.UsageAggregatesListOptionalParams, callback: msRest.ServiceCallback<Models.UsageAggregationListResult>): void;
    /**
     * Query aggregated Azure subscription consumption data for a date range.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param reportedStartTime The start of the time range to retrieve data for.
     * @param reportedEndTime The end of the time range to retrieve data for.
     * @param [options] The optional parameters
     * @returns Promise<Models.UsageAggregatesListNextResponse>
     */
    listNext(nextPageLink: string, reportedStartTime: Date | string, reportedEndTime: Date | string, options?: Models.UsageAggregatesListNextOptionalParams): Promise<Models.UsageAggregatesListNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param reportedStartTime The start of the time range to retrieve data for.
     * @param reportedEndTime The end of the time range to retrieve data for.
     * @param callback The callback
     */
    listNext(nextPageLink: string, reportedStartTime: Date | string, reportedEndTime: Date | string, callback: msRest.ServiceCallback<Models.UsageAggregationListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param reportedStartTime The start of the time range to retrieve data for.
     * @param reportedEndTime The end of the time range to retrieve data for.
     * @param options The optional parameters
     * @param callback The callback
     */
    listNext(nextPageLink: string, reportedStartTime: Date | string, reportedEndTime: Date | string, options: Models.UsageAggregatesListNextOptionalParams, callback: msRest.ServiceCallback<Models.UsageAggregationListResult>): void;
}
//# sourceMappingURL=usageAggregates.d.ts.map