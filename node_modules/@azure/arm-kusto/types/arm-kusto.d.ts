import * as coreAuth from '@azure/core-auth';
import * as coreClient from '@azure/core-client';
import { OperationState } from '@azure/core-lro';
import { PagedAsyncIterableIterator } from '@azure/core-paging';
import { SimplePollerLike } from '@azure/core-lro';

/** Represents an accepted audience trusted by the cluster. */
export declare interface AcceptedAudiences {
    /** GUID or valid URL representing an accepted audience. */
    value?: string;
}

/** Class representing an attached database configuration. */
export declare interface AttachedDatabaseConfiguration extends ProxyResource {
    /** Resource location. */
    location?: string;
    /**
     * The provisioned state of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: ProvisioningState;
    /** The name of the database which you would like to attach, use * if you want to follow all current and future databases. */
    databaseName?: string;
    /** The resource id of the cluster where the databases you would like to attach reside. */
    clusterResourceId?: string;
    /**
     * The list of databases from the clusterResourceId which are currently attached to the cluster.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly attachedDatabaseNames?: string[];
    /** The default principals modification kind */
    defaultPrincipalsModificationKind?: DefaultPrincipalsModificationKind;
    /** Table level sharing specifications */
    tableLevelSharingProperties?: TableLevelSharingProperties;
    /** Overrides the original database name. Relevant only when attaching to a specific database. */
    databaseNameOverride?: string;
    /** Adds a prefix to the attached databases name. When following an entire cluster, that prefix would be added to all of the databases original names from leader cluster. */
    databaseNamePrefix?: string;
}

/** The list attached database configurations operation response. */
export declare interface AttachedDatabaseConfigurationListResult {
    /** The list of attached database configurations. */
    value?: AttachedDatabaseConfiguration[];
}

/** Interface representing a AttachedDatabaseConfigurations. */
export declare interface AttachedDatabaseConfigurations {
    /**
     * Returns the list of attached database configurations of the given Kusto cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param options The options parameters.
     */
    listByCluster(resourceGroupName: string, clusterName: string, options?: AttachedDatabaseConfigurationsListByClusterOptionalParams): PagedAsyncIterableIterator<AttachedDatabaseConfiguration>;
    /**
     * Checks that the attached database configuration resource name is valid and is not already in use.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param resourceName The name of the resource.
     * @param options The options parameters.
     */
    checkNameAvailability(resourceGroupName: string, clusterName: string, resourceName: AttachedDatabaseConfigurationsCheckNameRequest, options?: AttachedDatabaseConfigurationsCheckNameAvailabilityOptionalParams): Promise<AttachedDatabaseConfigurationsCheckNameAvailabilityResponse>;
    /**
     * Returns an attached database configuration.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param attachedDatabaseConfigurationName The name of the attached database configuration.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, clusterName: string, attachedDatabaseConfigurationName: string, options?: AttachedDatabaseConfigurationsGetOptionalParams): Promise<AttachedDatabaseConfigurationsGetResponse>;
    /**
     * Creates or updates an attached database configuration.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param attachedDatabaseConfigurationName The name of the attached database configuration.
     * @param parameters The database parameters supplied to the CreateOrUpdate operation.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, clusterName: string, attachedDatabaseConfigurationName: string, parameters: AttachedDatabaseConfiguration, options?: AttachedDatabaseConfigurationsCreateOrUpdateOptionalParams): Promise<SimplePollerLike<OperationState<AttachedDatabaseConfigurationsCreateOrUpdateResponse>, AttachedDatabaseConfigurationsCreateOrUpdateResponse>>;
    /**
     * Creates or updates an attached database configuration.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param attachedDatabaseConfigurationName The name of the attached database configuration.
     * @param parameters The database parameters supplied to the CreateOrUpdate operation.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, clusterName: string, attachedDatabaseConfigurationName: string, parameters: AttachedDatabaseConfiguration, options?: AttachedDatabaseConfigurationsCreateOrUpdateOptionalParams): Promise<AttachedDatabaseConfigurationsCreateOrUpdateResponse>;
    /**
     * Deletes the attached database configuration with the given name.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param attachedDatabaseConfigurationName The name of the attached database configuration.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, clusterName: string, attachedDatabaseConfigurationName: string, options?: AttachedDatabaseConfigurationsDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Deletes the attached database configuration with the given name.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param attachedDatabaseConfigurationName The name of the attached database configuration.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, clusterName: string, attachedDatabaseConfigurationName: string, options?: AttachedDatabaseConfigurationsDeleteOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface AttachedDatabaseConfigurationsCheckNameAvailabilityOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the checkNameAvailability operation. */
export declare type AttachedDatabaseConfigurationsCheckNameAvailabilityResponse = CheckNameResult;

/** The result returned from a AttachedDatabaseConfigurations check name availability request. */
export declare interface AttachedDatabaseConfigurationsCheckNameRequest {
    /** Attached database resource name. */
    name: string;
    /** The type of resource, for instance Microsoft.Kusto/clusters/attachedDatabaseConfigurations. */
    type: "Microsoft.Kusto/clusters/attachedDatabaseConfigurations";
}

/** Defines headers for AttachedDatabaseConfigurations_createOrUpdate operation. */
export declare interface AttachedDatabaseConfigurationsCreateOrUpdateHeaders {
    /** URL to query the status of the operation. */
    azureAsyncOperation?: string;
}

/** Optional parameters. */
export declare interface AttachedDatabaseConfigurationsCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export declare type AttachedDatabaseConfigurationsCreateOrUpdateResponse = AttachedDatabaseConfiguration;

/** Defines headers for AttachedDatabaseConfigurations_delete operation. */
export declare interface AttachedDatabaseConfigurationsDeleteHeaders {
    /** URL to query the status of the operation. */
    location?: string;
    /** URL to query the status of the operation. */
    azureAsyncOperation?: string;
}

/** Optional parameters. */
export declare interface AttachedDatabaseConfigurationsDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface AttachedDatabaseConfigurationsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type AttachedDatabaseConfigurationsGetResponse = AttachedDatabaseConfiguration;

/** Optional parameters. */
export declare interface AttachedDatabaseConfigurationsListByClusterOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByCluster operation. */
export declare type AttachedDatabaseConfigurationsListByClusterResponse = AttachedDatabaseConfigurationListResult;

/** Azure capacity definition. */
export declare interface AzureCapacity {
    /** Scale type. */
    scaleType: AzureScaleType;
    /** Minimum allowed capacity. */
    minimum: number;
    /** Maximum allowed capacity. */
    maximum: number;
    /** The default capacity that would be used. */
    default: number;
}

/** Azure resource SKU definition. */
export declare interface AzureResourceSku {
    /** Resource Namespace and Type. */
    resourceType?: string;
    /** The SKU details. */
    sku?: AzureSku;
    /** The number of instances of the cluster. */
    capacity?: AzureCapacity;
}

/**
 * Defines values for AzureScaleType. \
 * {@link KnownAzureScaleType} can be used interchangeably with AzureScaleType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **automatic** \
 * **manual** \
 * **none**
 */
export declare type AzureScaleType = string;

/** Azure SKU definition. */
export declare interface AzureSku {
    /** SKU name. */
    name: AzureSkuName;
    /** The number of instances of the cluster. */
    capacity?: number;
    /** SKU tier. */
    tier: AzureSkuTier;
}

/**
 * Defines values for AzureSkuName. \
 * {@link KnownAzureSkuName} can be used interchangeably with AzureSkuName,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Dev(No SLA)_Standard_D11_v2** \
 * **Dev(No SLA)_Standard_E2a_v4** \
 * **Standard_D11_v2** \
 * **Standard_D12_v2** \
 * **Standard_D13_v2** \
 * **Standard_D14_v2** \
 * **Standard_D32d_v4** \
 * **Standard_D16d_v5** \
 * **Standard_D32d_v5** \
 * **Standard_DS13_v2+1TB_PS** \
 * **Standard_DS13_v2+2TB_PS** \
 * **Standard_DS14_v2+3TB_PS** \
 * **Standard_DS14_v2+4TB_PS** \
 * **Standard_L4s** \
 * **Standard_L8s** \
 * **Standard_L16s** \
 * **Standard_L8s_v2** \
 * **Standard_L16s_v2** \
 * **Standard_L8s_v3** \
 * **Standard_L16s_v3** \
 * **Standard_L32s_v3** \
 * **Standard_L8as_v3** \
 * **Standard_L16as_v3** \
 * **Standard_L32as_v3** \
 * **Standard_E64i_v3** \
 * **Standard_E80ids_v4** \
 * **Standard_E2a_v4** \
 * **Standard_E4a_v4** \
 * **Standard_E8a_v4** \
 * **Standard_E16a_v4** \
 * **Standard_E8as_v4+1TB_PS** \
 * **Standard_E8as_v4+2TB_PS** \
 * **Standard_E16as_v4+3TB_PS** \
 * **Standard_E16as_v4+4TB_PS** \
 * **Standard_E8as_v5+1TB_PS** \
 * **Standard_E8as_v5+2TB_PS** \
 * **Standard_E16as_v5+3TB_PS** \
 * **Standard_E16as_v5+4TB_PS** \
 * **Standard_E2ads_v5** \
 * **Standard_E4ads_v5** \
 * **Standard_E8ads_v5** \
 * **Standard_E16ads_v5** \
 * **Standard_EC8as_v5+1TB_PS** \
 * **Standard_EC8as_v5+2TB_PS** \
 * **Standard_EC16as_v5+3TB_PS** \
 * **Standard_EC16as_v5+4TB_PS** \
 * **Standard_EC8ads_v5** \
 * **Standard_EC16ads_v5** \
 * **Standard_E8s_v4+1TB_PS** \
 * **Standard_E8s_v4+2TB_PS** \
 * **Standard_E16s_v4+3TB_PS** \
 * **Standard_E16s_v4+4TB_PS** \
 * **Standard_E8s_v5+1TB_PS** \
 * **Standard_E8s_v5+2TB_PS** \
 * **Standard_E16s_v5+3TB_PS** \
 * **Standard_E16s_v5+4TB_PS** \
 * **Standard_E2d_v4** \
 * **Standard_E4d_v4** \
 * **Standard_E8d_v4** \
 * **Standard_E16d_v4** \
 * **Standard_E2d_v5** \
 * **Standard_E4d_v5** \
 * **Standard_E8d_v5** \
 * **Standard_E16d_v5**
 */
export declare type AzureSkuName = string;

/**
 * Defines values for AzureSkuTier. \
 * {@link KnownAzureSkuTier} can be used interchangeably with AzureSkuTier,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Basic** \
 * **Standard**
 */
export declare type AzureSkuTier = string;

/**
 * Defines values for BlobStorageEventType. \
 * {@link KnownBlobStorageEventType} can be used interchangeably with BlobStorageEventType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Microsoft.Storage.BlobCreated** \
 * **Microsoft.Storage.BlobRenamed**
 */
export declare type BlobStorageEventType = string;

/**
 * Defines values for CallerRole. \
 * {@link KnownCallerRole} can be used interchangeably with CallerRole,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Admin** \
 * **None**
 */
export declare type CallerRole = string;

/** The result returned from a database check name availability request. */
export declare interface CheckNameRequest {
    /** Resource name. */
    name: string;
    /** The type of resource, for instance Microsoft.Kusto/clusters/databases. */
    type: Type;
}

/** The result returned from a check name availability request. */
export declare interface CheckNameResult {
    /** Specifies a Boolean value that indicates if the name is available. */
    nameAvailable?: boolean;
    /** The name that was checked. */
    name?: string;
    /** Message indicating an unavailable name due to a conflict, or a description of the naming rules that are violated. */
    message?: string;
    /** Message providing the reason why the given name is invalid. */
    reason?: Reason;
}

/** Class representing a Kusto cluster. */
export declare interface Cluster extends TrackedResource {
    /** The SKU of the cluster. */
    sku: AzureSku;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
    /** The availability zones of the cluster. */
    zones?: string[];
    /** The identity of the cluster, if configured. */
    identity?: Identity;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly etag?: string;
    /**
     * The state of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly state?: State;
    /**
     * The provisioned state of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: ProvisioningState;
    /**
     * The cluster URI.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly uri?: string;
    /**
     * The cluster data ingestion URI.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly dataIngestionUri?: string;
    /**
     * The reason for the cluster's current state.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly stateReason?: string;
    /** The cluster's external tenants. */
    trustedExternalTenants?: TrustedExternalTenant[];
    /** Optimized auto scale definition. */
    optimizedAutoscale?: OptimizedAutoscale;
    /** A boolean value that indicates if the cluster's disks are encrypted. */
    enableDiskEncryption?: boolean;
    /** A boolean value that indicates if the streaming ingest is enabled. */
    enableStreamingIngest?: boolean;
    /** Virtual network definition. */
    virtualNetworkConfiguration?: VirtualNetworkConfiguration;
    /** KeyVault properties for the cluster encryption. */
    keyVaultProperties?: KeyVaultProperties;
    /** A boolean value that indicates if the purge operations are enabled. */
    enablePurge?: boolean;
    /** List of the cluster's language extensions. */
    languageExtensions?: LanguageExtensionsList;
    /** A boolean value that indicates if double encryption is enabled. */
    enableDoubleEncryption?: boolean;
    /** Public network access to the cluster is enabled by default. When disabled, only private endpoint connection to the cluster is allowed */
    publicNetworkAccess?: PublicNetworkAccess;
    /** The list of ips in the format of CIDR allowed to connect to the cluster. */
    allowedIpRangeList?: string[];
    /** The engine type */
    engineType?: EngineType;
    /** The cluster's accepted audiences. */
    acceptedAudiences?: AcceptedAudiences[];
    /** A boolean value that indicates if the cluster could be automatically stopped (due to lack of data or no activity for many days). */
    enableAutoStop?: boolean;
    /** Whether or not to restrict outbound network access.  Value is optional but if passed in, must be 'Enabled' or 'Disabled' */
    restrictOutboundNetworkAccess?: ClusterNetworkAccessFlag;
    /** List of allowed FQDNs(Fully Qualified Domain Name) for egress from Cluster. */
    allowedFqdnList?: string[];
    /** Indicates what public IP type to create - IPv4 (default), or DualStack (both IPv4 and IPv6) */
    publicIPType?: PublicIPType;
    /** Virtual Cluster graduation properties */
    virtualClusterGraduationProperties?: string;
    /**
     * A list of private endpoint connections.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly privateEndpointConnections?: PrivateEndpointConnection[];
    /**
     * Properties of the peer cluster involved in a migration to/from this cluster.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly migrationCluster?: MigrationClusterProperties;
}

/** The result returned from a cluster check name availability request. */
export declare interface ClusterCheckNameRequest {
    /** Cluster name. */
    name: string;
    /** The type of resource, Microsoft.Kusto/clusters. */
    type: "Microsoft.Kusto/clusters";
}

/** The list Kusto clusters operation response. */
export declare interface ClusterListResult {
    /** The list of Kusto clusters. */
    value?: Cluster[];
}

/** A cluster migrate request. */
export declare interface ClusterMigrateRequest {
    /** Resource ID of the destination cluster or kusto pool. */
    clusterResourceId: string;
}

/**
 * Defines values for ClusterNetworkAccessFlag. \
 * {@link KnownClusterNetworkAccessFlag} can be used interchangeably with ClusterNetworkAccessFlag,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled** \
 * **Disabled**
 */
export declare type ClusterNetworkAccessFlag = string;

/** Class representing a cluster principal assignment. */
export declare interface ClusterPrincipalAssignment extends ProxyResource {
    /** The principal ID assigned to the cluster principal. It can be a user email, application ID, or security group name. */
    principalId?: string;
    /** Cluster principal role. */
    role?: ClusterPrincipalRole;
    /** The tenant id of the principal */
    tenantId?: string;
    /** Principal type. */
    principalType?: PrincipalType;
    /**
     * The tenant name of the principal
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly tenantName?: string;
    /**
     * The principal name
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly principalName?: string;
    /**
     * The provisioned state of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: ProvisioningState;
    /**
     * The service principal object id in AAD (Azure active directory)
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly aadObjectId?: string;
}

/** A principal assignment check name availability request. */
export declare interface ClusterPrincipalAssignmentCheckNameRequest {
    /** Principal Assignment resource name. */
    name: string;
    /** The type of resource, Microsoft.Kusto/clusters/principalAssignments. */
    type: "Microsoft.Kusto/clusters/principalAssignments";
}

/** The list Kusto cluster principal assignments operation response. */
export declare interface ClusterPrincipalAssignmentListResult {
    /** The list of Kusto cluster principal assignments. */
    value?: ClusterPrincipalAssignment[];
}

/** Interface representing a ClusterPrincipalAssignments. */
export declare interface ClusterPrincipalAssignments {
    /**
     * Lists all Kusto cluster principalAssignments.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, clusterName: string, options?: ClusterPrincipalAssignmentsListOptionalParams): PagedAsyncIterableIterator<ClusterPrincipalAssignment>;
    /**
     * Checks that the principal assignment name is valid and is not already in use.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param principalAssignmentName The name of the principal assignment.
     * @param options The options parameters.
     */
    checkNameAvailability(resourceGroupName: string, clusterName: string, principalAssignmentName: ClusterPrincipalAssignmentCheckNameRequest, options?: ClusterPrincipalAssignmentsCheckNameAvailabilityOptionalParams): Promise<ClusterPrincipalAssignmentsCheckNameAvailabilityResponse>;
    /**
     * Gets a Kusto cluster principalAssignment.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param principalAssignmentName The name of the Kusto principalAssignment.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, clusterName: string, principalAssignmentName: string, options?: ClusterPrincipalAssignmentsGetOptionalParams): Promise<ClusterPrincipalAssignmentsGetResponse>;
    /**
     * Create a Kusto cluster principalAssignment.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param principalAssignmentName The name of the Kusto principalAssignment.
     * @param parameters The Kusto cluster principalAssignment's parameters supplied for the operation.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, clusterName: string, principalAssignmentName: string, parameters: ClusterPrincipalAssignment, options?: ClusterPrincipalAssignmentsCreateOrUpdateOptionalParams): Promise<SimplePollerLike<OperationState<ClusterPrincipalAssignmentsCreateOrUpdateResponse>, ClusterPrincipalAssignmentsCreateOrUpdateResponse>>;
    /**
     * Create a Kusto cluster principalAssignment.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param principalAssignmentName The name of the Kusto principalAssignment.
     * @param parameters The Kusto cluster principalAssignment's parameters supplied for the operation.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, clusterName: string, principalAssignmentName: string, parameters: ClusterPrincipalAssignment, options?: ClusterPrincipalAssignmentsCreateOrUpdateOptionalParams): Promise<ClusterPrincipalAssignmentsCreateOrUpdateResponse>;
    /**
     * Deletes a Kusto cluster principalAssignment.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param principalAssignmentName The name of the Kusto principalAssignment.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, clusterName: string, principalAssignmentName: string, options?: ClusterPrincipalAssignmentsDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Deletes a Kusto cluster principalAssignment.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param principalAssignmentName The name of the Kusto principalAssignment.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, clusterName: string, principalAssignmentName: string, options?: ClusterPrincipalAssignmentsDeleteOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface ClusterPrincipalAssignmentsCheckNameAvailabilityOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the checkNameAvailability operation. */
export declare type ClusterPrincipalAssignmentsCheckNameAvailabilityResponse = CheckNameResult;

/** Optional parameters. */
export declare interface ClusterPrincipalAssignmentsCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export declare type ClusterPrincipalAssignmentsCreateOrUpdateResponse = ClusterPrincipalAssignment;

/** Defines headers for ClusterPrincipalAssignments_delete operation. */
export declare interface ClusterPrincipalAssignmentsDeleteHeaders {
    /** URL to query the status of the operation. */
    location?: string;
    /** URL to query the status of the operation. */
    azureAsyncOperation?: string;
}

/** Optional parameters. */
export declare interface ClusterPrincipalAssignmentsDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface ClusterPrincipalAssignmentsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type ClusterPrincipalAssignmentsGetResponse = ClusterPrincipalAssignment;

/** Optional parameters. */
export declare interface ClusterPrincipalAssignmentsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type ClusterPrincipalAssignmentsListResponse = ClusterPrincipalAssignmentListResult;

/**
 * Defines values for ClusterPrincipalRole. \
 * {@link KnownClusterPrincipalRole} can be used interchangeably with ClusterPrincipalRole,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **AllDatabasesAdmin** \
 * **AllDatabasesViewer**
 */
export declare type ClusterPrincipalRole = string;

/** Interface representing a Clusters. */
export declare interface Clusters {
    /**
     * Returns a list of databases that are owned by this cluster and were followed by another cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param options The options parameters.
     */
    listFollowerDatabases(resourceGroupName: string, clusterName: string, options?: ClustersListFollowerDatabasesOptionalParams): PagedAsyncIterableIterator<FollowerDatabaseDefinition>;
    /**
     * Lists all Kusto clusters within a resource group.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: ClustersListByResourceGroupOptionalParams): PagedAsyncIterableIterator<Cluster>;
    /**
     * Lists all Kusto clusters within a subscription.
     * @param options The options parameters.
     */
    list(options?: ClustersListOptionalParams): PagedAsyncIterableIterator<Cluster>;
    /**
     * Lists eligible SKUs for Kusto resource provider.
     * @param options The options parameters.
     */
    listSkus(options?: ClustersListSkusOptionalParams): PagedAsyncIterableIterator<SkuDescription>;
    /**
     * Returns the SKUs available for the provided resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param options The options parameters.
     */
    listSkusByResource(resourceGroupName: string, clusterName: string, options?: ClustersListSkusByResourceOptionalParams): PagedAsyncIterableIterator<AzureResourceSku>;
    /**
     * Gets the network endpoints of all outbound dependencies of a Kusto cluster
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param options The options parameters.
     */
    listOutboundNetworkDependenciesEndpoints(resourceGroupName: string, clusterName: string, options?: ClustersListOutboundNetworkDependenciesEndpointsOptionalParams): PagedAsyncIterableIterator<OutboundNetworkDependenciesEndpoint>;
    /**
     * Returns a list of language extensions that can run within KQL queries.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param options The options parameters.
     */
    listLanguageExtensions(resourceGroupName: string, clusterName: string, options?: ClustersListLanguageExtensionsOptionalParams): PagedAsyncIterableIterator<LanguageExtension>;
    /**
     * Gets a Kusto cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, clusterName: string, options?: ClustersGetOptionalParams): Promise<ClustersGetResponse>;
    /**
     * Create or update a Kusto cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param parameters The Kusto cluster parameters supplied to the CreateOrUpdate operation.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, clusterName: string, parameters: Cluster, options?: ClustersCreateOrUpdateOptionalParams): Promise<SimplePollerLike<OperationState<ClustersCreateOrUpdateResponse>, ClustersCreateOrUpdateResponse>>;
    /**
     * Create or update a Kusto cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param parameters The Kusto cluster parameters supplied to the CreateOrUpdate operation.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, clusterName: string, parameters: Cluster, options?: ClustersCreateOrUpdateOptionalParams): Promise<ClustersCreateOrUpdateResponse>;
    /**
     * Update a Kusto cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param parameters The Kusto cluster parameters supplied to the Update operation.
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, clusterName: string, parameters: ClusterUpdate, options?: ClustersUpdateOptionalParams): Promise<SimplePollerLike<OperationState<ClustersUpdateResponse>, ClustersUpdateResponse>>;
    /**
     * Update a Kusto cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param parameters The Kusto cluster parameters supplied to the Update operation.
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, clusterName: string, parameters: ClusterUpdate, options?: ClustersUpdateOptionalParams): Promise<ClustersUpdateResponse>;
    /**
     * Deletes a Kusto cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, clusterName: string, options?: ClustersDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Deletes a Kusto cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, clusterName: string, options?: ClustersDeleteOptionalParams): Promise<void>;
    /**
     * Stops a Kusto cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param options The options parameters.
     */
    beginStop(resourceGroupName: string, clusterName: string, options?: ClustersStopOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Stops a Kusto cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param options The options parameters.
     */
    beginStopAndWait(resourceGroupName: string, clusterName: string, options?: ClustersStopOptionalParams): Promise<void>;
    /**
     * Starts a Kusto cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param options The options parameters.
     */
    beginStart(resourceGroupName: string, clusterName: string, options?: ClustersStartOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Starts a Kusto cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param options The options parameters.
     */
    beginStartAndWait(resourceGroupName: string, clusterName: string, options?: ClustersStartOptionalParams): Promise<void>;
    /**
     * Migrate data from a Kusto cluster to another cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param clusterMigrateRequest The cluster migrate request parameters.
     * @param options The options parameters.
     */
    beginMigrate(resourceGroupName: string, clusterName: string, clusterMigrateRequest: ClusterMigrateRequest, options?: ClustersMigrateOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Migrate data from a Kusto cluster to another cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param clusterMigrateRequest The cluster migrate request parameters.
     * @param options The options parameters.
     */
    beginMigrateAndWait(resourceGroupName: string, clusterName: string, clusterMigrateRequest: ClusterMigrateRequest, options?: ClustersMigrateOptionalParams): Promise<void>;
    /**
     * Detaches all followers of a database owned by this cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param followerDatabaseToRemove The follower databases properties to remove.
     * @param options The options parameters.
     */
    beginDetachFollowerDatabases(resourceGroupName: string, clusterName: string, followerDatabaseToRemove: FollowerDatabaseDefinition, options?: ClustersDetachFollowerDatabasesOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Detaches all followers of a database owned by this cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param followerDatabaseToRemove The follower databases properties to remove.
     * @param options The options parameters.
     */
    beginDetachFollowerDatabasesAndWait(resourceGroupName: string, clusterName: string, followerDatabaseToRemove: FollowerDatabaseDefinition, options?: ClustersDetachFollowerDatabasesOptionalParams): Promise<void>;
    /**
     * Diagnoses network connectivity status for external resources on which the service is dependent on.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param options The options parameters.
     */
    beginDiagnoseVirtualNetwork(resourceGroupName: string, clusterName: string, options?: ClustersDiagnoseVirtualNetworkOptionalParams): Promise<SimplePollerLike<OperationState<ClustersDiagnoseVirtualNetworkResponse>, ClustersDiagnoseVirtualNetworkResponse>>;
    /**
     * Diagnoses network connectivity status for external resources on which the service is dependent on.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param options The options parameters.
     */
    beginDiagnoseVirtualNetworkAndWait(resourceGroupName: string, clusterName: string, options?: ClustersDiagnoseVirtualNetworkOptionalParams): Promise<ClustersDiagnoseVirtualNetworkResponse>;
    /**
     * Checks that the cluster name is valid and is not already in use.
     * @param location The name of Azure region.
     * @param clusterName The name of the cluster.
     * @param options The options parameters.
     */
    checkNameAvailability(location: string, clusterName: ClusterCheckNameRequest, options?: ClustersCheckNameAvailabilityOptionalParams): Promise<ClustersCheckNameAvailabilityResponse>;
    /**
     * Add a list of language extensions that can run within KQL queries.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param languageExtensionsToAdd The language extensions to add.
     * @param options The options parameters.
     */
    beginAddLanguageExtensions(resourceGroupName: string, clusterName: string, languageExtensionsToAdd: LanguageExtensionsList, options?: ClustersAddLanguageExtensionsOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Add a list of language extensions that can run within KQL queries.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param languageExtensionsToAdd The language extensions to add.
     * @param options The options parameters.
     */
    beginAddLanguageExtensionsAndWait(resourceGroupName: string, clusterName: string, languageExtensionsToAdd: LanguageExtensionsList, options?: ClustersAddLanguageExtensionsOptionalParams): Promise<void>;
    /**
     * Remove a list of language extensions that can run within KQL queries.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param languageExtensionsToRemove The language extensions to remove.
     * @param options The options parameters.
     */
    beginRemoveLanguageExtensions(resourceGroupName: string, clusterName: string, languageExtensionsToRemove: LanguageExtensionsList, options?: ClustersRemoveLanguageExtensionsOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Remove a list of language extensions that can run within KQL queries.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param languageExtensionsToRemove The language extensions to remove.
     * @param options The options parameters.
     */
    beginRemoveLanguageExtensionsAndWait(resourceGroupName: string, clusterName: string, languageExtensionsToRemove: LanguageExtensionsList, options?: ClustersRemoveLanguageExtensionsOptionalParams): Promise<void>;
}

/** Defines headers for Clusters_addLanguageExtensions operation. */
export declare interface ClustersAddLanguageExtensionsHeaders {
    /** URL to query the status of the operation. */
    location?: string;
    /** URL to query the status of the operation. */
    azureAsyncOperation?: string;
}

/** Optional parameters. */
export declare interface ClustersAddLanguageExtensionsOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface ClustersCheckNameAvailabilityOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the checkNameAvailability operation. */
export declare type ClustersCheckNameAvailabilityResponse = CheckNameResult;

/** Optional parameters. */
export declare interface ClustersCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
    /** The ETag of the cluster. Omit this value to always overwrite the current cluster. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes. */
    ifMatch?: string;
    /** Set to '*' to allow a new cluster to be created, but to prevent updating an existing cluster. Other values will result in a 412 Pre-condition Failed response. */
    ifNoneMatch?: string;
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export declare type ClustersCreateOrUpdateResponse = Cluster;

/** Defines headers for Clusters_delete operation. */
export declare interface ClustersDeleteHeaders {
    /** URL to query the status of the operation. */
    location?: string;
    /** URL to query the status of the operation. */
    azureAsyncOperation?: string;
}

/** Optional parameters. */
export declare interface ClustersDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Defines headers for Clusters_detachFollowerDatabases operation. */
export declare interface ClustersDetachFollowerDatabasesHeaders {
    /** URL to query the status of the operation. */
    location?: string;
    /** URL to query the status of the operation. */
    azureAsyncOperation?: string;
}

/** Optional parameters. */
export declare interface ClustersDetachFollowerDatabasesOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Defines headers for Clusters_diagnoseVirtualNetwork operation. */
export declare interface ClustersDiagnoseVirtualNetworkHeaders {
    /** URL to query the status of the operation. */
    location?: string;
    /** URL to query the status of the operation. */
    azureAsyncOperation?: string;
}

/** Optional parameters. */
export declare interface ClustersDiagnoseVirtualNetworkOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the diagnoseVirtualNetwork operation. */
export declare type ClustersDiagnoseVirtualNetworkResponse = DiagnoseVirtualNetworkResult;

/** Optional parameters. */
export declare interface ClustersGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type ClustersGetResponse = Cluster;

/** Optional parameters. */
export declare interface ClustersListByResourceGroupOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroup operation. */
export declare type ClustersListByResourceGroupResponse = ClusterListResult;

/** Optional parameters. */
export declare interface ClustersListFollowerDatabasesOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listFollowerDatabases operation. */
export declare type ClustersListFollowerDatabasesResponse = FollowerDatabaseListResult;

/** Optional parameters. */
export declare interface ClustersListLanguageExtensionsOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listLanguageExtensions operation. */
export declare type ClustersListLanguageExtensionsResponse = LanguageExtensionsList;

/** Optional parameters. */
export declare interface ClustersListOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface ClustersListOutboundNetworkDependenciesEndpointsNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listOutboundNetworkDependenciesEndpointsNext operation. */
export declare type ClustersListOutboundNetworkDependenciesEndpointsNextResponse = OutboundNetworkDependenciesEndpointListResult;

/** Optional parameters. */
export declare interface ClustersListOutboundNetworkDependenciesEndpointsOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listOutboundNetworkDependenciesEndpoints operation. */
export declare type ClustersListOutboundNetworkDependenciesEndpointsResponse = OutboundNetworkDependenciesEndpointListResult;

/** Contains response data for the list operation. */
export declare type ClustersListResponse = ClusterListResult;

/** Optional parameters. */
export declare interface ClustersListSkusByResourceOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listSkusByResource operation. */
export declare type ClustersListSkusByResourceResponse = ListResourceSkusResult;

/** Optional parameters. */
export declare interface ClustersListSkusOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listSkus operation. */
export declare type ClustersListSkusResponse = SkuDescriptionList;

/** Defines headers for Clusters_migrate operation. */
export declare interface ClustersMigrateHeaders {
    /** URL to query the status of the operation. */
    location?: string;
    /** URL to query the status of the operation. */
    azureAsyncOperation?: string;
}

/** Optional parameters. */
export declare interface ClustersMigrateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Defines headers for Clusters_removeLanguageExtensions operation. */
export declare interface ClustersRemoveLanguageExtensionsHeaders {
    /** URL to query the status of the operation. */
    location?: string;
    /** URL to query the status of the operation. */
    azureAsyncOperation?: string;
}

/** Optional parameters. */
export declare interface ClustersRemoveLanguageExtensionsOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Defines headers for Clusters_start operation. */
export declare interface ClustersStartHeaders {
    /** URL to query the status of the operation. */
    location?: string;
    /** URL to query the status of the operation. */
    azureAsyncOperation?: string;
}

/** Optional parameters. */
export declare interface ClustersStartOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Defines headers for Clusters_stop operation. */
export declare interface ClustersStopHeaders {
    /** URL to query the status of the operation. */
    location?: string;
    /** URL to query the status of the operation. */
    azureAsyncOperation?: string;
}

/** Optional parameters. */
export declare interface ClustersStopOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Defines headers for Clusters_update operation. */
export declare interface ClustersUpdateHeaders {
    /** URL to query the status of the operation. */
    location?: string;
    /** URL to query the status of the operation. */
    azureAsyncOperation?: string;
}

/** Optional parameters. */
export declare interface ClustersUpdateOptionalParams extends coreClient.OperationOptions {
    /** The ETag of the cluster. Omit this value to always overwrite the current cluster. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes. */
    ifMatch?: string;
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the update operation. */
export declare type ClustersUpdateResponse = Cluster;

/** Class representing an update to a Kusto cluster. */
export declare interface ClusterUpdate extends Resource {
    /** Resource tags. */
    tags?: {
        [propertyName: string]: string;
    };
    /** Resource location. */
    location?: string;
    /** The SKU of the cluster. */
    sku?: AzureSku;
    /** The availability zones of the cluster. */
    zones?: string[];
    /** The identity of the cluster, if configured. */
    identity?: Identity;
    /**
     * The state of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly state?: State;
    /**
     * The provisioned state of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: ProvisioningState;
    /**
     * The cluster URI.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly uri?: string;
    /**
     * The cluster data ingestion URI.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly dataIngestionUri?: string;
    /**
     * The reason for the cluster's current state.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly stateReason?: string;
    /** The cluster's external tenants. */
    trustedExternalTenants?: TrustedExternalTenant[];
    /** Optimized auto scale definition. */
    optimizedAutoscale?: OptimizedAutoscale;
    /** A boolean value that indicates if the cluster's disks are encrypted. */
    enableDiskEncryption?: boolean;
    /** A boolean value that indicates if the streaming ingest is enabled. */
    enableStreamingIngest?: boolean;
    /** Virtual network definition. */
    virtualNetworkConfiguration?: VirtualNetworkConfiguration;
    /** KeyVault properties for the cluster encryption. */
    keyVaultProperties?: KeyVaultProperties;
    /** A boolean value that indicates if the purge operations are enabled. */
    enablePurge?: boolean;
    /** List of the cluster's language extensions. */
    languageExtensions?: LanguageExtensionsList;
    /** A boolean value that indicates if double encryption is enabled. */
    enableDoubleEncryption?: boolean;
    /** Public network access to the cluster is enabled by default. When disabled, only private endpoint connection to the cluster is allowed */
    publicNetworkAccess?: PublicNetworkAccess;
    /** The list of ips in the format of CIDR allowed to connect to the cluster. */
    allowedIpRangeList?: string[];
    /** The engine type */
    engineType?: EngineType;
    /** The cluster's accepted audiences. */
    acceptedAudiences?: AcceptedAudiences[];
    /** A boolean value that indicates if the cluster could be automatically stopped (due to lack of data or no activity for many days). */
    enableAutoStop?: boolean;
    /** Whether or not to restrict outbound network access.  Value is optional but if passed in, must be 'Enabled' or 'Disabled' */
    restrictOutboundNetworkAccess?: ClusterNetworkAccessFlag;
    /** List of allowed FQDNs(Fully Qualified Domain Name) for egress from Cluster. */
    allowedFqdnList?: string[];
    /** Indicates what public IP type to create - IPv4 (default), or DualStack (both IPv4 and IPv6) */
    publicIPType?: PublicIPType;
    /** Virtual Cluster graduation properties */
    virtualClusterGraduationProperties?: string;
    /**
     * A list of private endpoint connections.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly privateEndpointConnections?: PrivateEndpointConnection[];
    /**
     * Properties of the peer cluster involved in a migration to/from this cluster.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly migrationCluster?: MigrationClusterProperties;
}

export declare interface ComponentsSgqdofSchemasIdentityPropertiesUserassignedidentitiesAdditionalproperties {
    /**
     * The principal id of user assigned identity.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly principalId?: string;
    /**
     * The client id of user assigned identity.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly clientId?: string;
}

/**
 * Defines values for Compression. \
 * {@link KnownCompression} can be used interchangeably with Compression,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **GZip**
 */
export declare type Compression = string;

/** Class representing a CosmosDb data connection. */
export declare interface CosmosDbDataConnection extends DataConnection {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    kind: "CosmosDb";
    /** The case-sensitive name of the existing target table in your cluster. Retrieved data is ingested into this table. */
    tableName?: string;
    /** The name of an existing mapping rule to use when ingesting the retrieved data. */
    mappingRuleName?: string;
    /** The resource ID of a managed system or user-assigned identity. The identity is used to authenticate with Cosmos DB. */
    managedIdentityResourceId?: string;
    /**
     * The object ID of the managed identity resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly managedIdentityObjectId?: string;
    /** The resource ID of the Cosmos DB account used to create the data connection. */
    cosmosDbAccountResourceId?: string;
    /** The name of an existing database in the Cosmos DB account. */
    cosmosDbDatabase?: string;
    /** The name of an existing container in the Cosmos DB database. */
    cosmosDbContainer?: string;
    /** Optional. If defined, the data connection retrieves Cosmos DB documents created or updated after the specified retrieval start date. */
    retrievalStartDate?: Date;
    /**
     * The provisioned state of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: ProvisioningState;
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export declare type CreatedByType = string;

/** Class representing a Kusto database. */
export declare interface Database extends ProxyResource {
    /** Resource location. */
    location?: string;
    /** Kind of the database */
    kind: Kind;
}

/** Optional parameters. */
export declare interface DatabaseInviteFollowerOptionalParams extends coreClient.OperationOptions {
}

/** The request to invite a follower to a database. */
export declare interface DatabaseInviteFollowerRequest {
    /** The email of the invited user for which the follower invitation is generated. */
    inviteeEmail: string;
    /** Table level sharing specifications */
    tableLevelSharingProperties?: TableLevelSharingProperties;
}

/** Contains response data for the inviteFollower operation. */
export declare type DatabaseInviteFollowerResponse = DatabaseInviteFollowerResult;

/** The result returned from a follower invitation generation request. */
export declare interface DatabaseInviteFollowerResult {
    /** The generated invitation token. */
    generatedInvitation?: string;
}

/** The list Kusto databases operation response. */
export declare interface DatabaseListResult {
    /** Link to the next page of results */
    nextLink?: string;
    /** The list of Kusto databases. */
    value?: DatabaseUnion[];
}

/** Interface representing a DatabaseOperations. */
export declare interface DatabaseOperations {
    /**
     * Generates an invitation token that allows attaching a follower database to this database.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param databaseName The name of the database in the Kusto cluster.
     * @param parameters The follower invitation request parameters.
     * @param options The options parameters.
     */
    inviteFollower(resourceGroupName: string, clusterName: string, databaseName: string, parameters: DatabaseInviteFollowerRequest, options?: DatabaseInviteFollowerOptionalParams): Promise<DatabaseInviteFollowerResponse>;
}

/** A class representing database principal entity. */
export declare interface DatabasePrincipal {
    /** Database principal role. */
    role: DatabasePrincipalRole;
    /** Database principal name. */
    name: string;
    /** Database principal type. */
    type: DatabasePrincipalType;
    /** Database principal fully qualified name. */
    fqn?: string;
    /** Database principal email if exists. */
    email?: string;
    /** Application id - relevant only for application principal type. */
    appId?: string;
    /**
     * The tenant name of the principal
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly tenantName?: string;
}

/** Class representing a database principal assignment. */
export declare interface DatabasePrincipalAssignment extends ProxyResource {
    /** The principal ID assigned to the database principal. It can be a user email, application ID, or security group name. */
    principalId?: string;
    /** Database principal role. */
    role?: DatabasePrincipalRole;
    /** The tenant id of the principal */
    tenantId?: string;
    /** Principal type. */
    principalType?: PrincipalType;
    /**
     * The tenant name of the principal
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly tenantName?: string;
    /**
     * The principal name
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly principalName?: string;
    /**
     * The provisioned state of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: ProvisioningState;
    /**
     * The service principal object id in AAD (Azure active directory)
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly aadObjectId?: string;
}

/** A principal assignment check name availability request. */
export declare interface DatabasePrincipalAssignmentCheckNameRequest {
    /** Principal Assignment resource name. */
    name: string;
    /** The type of resource, Microsoft.Kusto/clusters/databases/principalAssignments. */
    type: "Microsoft.Kusto/clusters/databases/principalAssignments";
}

/** The list Kusto database principal assignments operation response. */
export declare interface DatabasePrincipalAssignmentListResult {
    /** The list of Kusto database principal assignments. */
    value?: DatabasePrincipalAssignment[];
}

/** Interface representing a DatabasePrincipalAssignments. */
export declare interface DatabasePrincipalAssignments {
    /**
     * Lists all Kusto cluster database principalAssignments.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param databaseName The name of the database in the Kusto cluster.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, clusterName: string, databaseName: string, options?: DatabasePrincipalAssignmentsListOptionalParams): PagedAsyncIterableIterator<DatabasePrincipalAssignment>;
    /**
     * Checks that the database principal assignment is valid and is not already in use.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param databaseName The name of the database in the Kusto cluster.
     * @param principalAssignmentName The name of the resource.
     * @param options The options parameters.
     */
    checkNameAvailability(resourceGroupName: string, clusterName: string, databaseName: string, principalAssignmentName: DatabasePrincipalAssignmentCheckNameRequest, options?: DatabasePrincipalAssignmentsCheckNameAvailabilityOptionalParams): Promise<DatabasePrincipalAssignmentsCheckNameAvailabilityResponse>;
    /**
     * Gets a Kusto cluster database principalAssignment.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param databaseName The name of the database in the Kusto cluster.
     * @param principalAssignmentName The name of the Kusto principalAssignment.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, clusterName: string, databaseName: string, principalAssignmentName: string, options?: DatabasePrincipalAssignmentsGetOptionalParams): Promise<DatabasePrincipalAssignmentsGetResponse>;
    /**
     * Creates a Kusto cluster database principalAssignment.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param databaseName The name of the database in the Kusto cluster.
     * @param principalAssignmentName The name of the Kusto principalAssignment.
     * @param parameters The Kusto principalAssignments parameters supplied for the operation.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, clusterName: string, databaseName: string, principalAssignmentName: string, parameters: DatabasePrincipalAssignment, options?: DatabasePrincipalAssignmentsCreateOrUpdateOptionalParams): Promise<SimplePollerLike<OperationState<DatabasePrincipalAssignmentsCreateOrUpdateResponse>, DatabasePrincipalAssignmentsCreateOrUpdateResponse>>;
    /**
     * Creates a Kusto cluster database principalAssignment.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param databaseName The name of the database in the Kusto cluster.
     * @param principalAssignmentName The name of the Kusto principalAssignment.
     * @param parameters The Kusto principalAssignments parameters supplied for the operation.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, clusterName: string, databaseName: string, principalAssignmentName: string, parameters: DatabasePrincipalAssignment, options?: DatabasePrincipalAssignmentsCreateOrUpdateOptionalParams): Promise<DatabasePrincipalAssignmentsCreateOrUpdateResponse>;
    /**
     * Deletes a Kusto principalAssignment.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param databaseName The name of the database in the Kusto cluster.
     * @param principalAssignmentName The name of the Kusto principalAssignment.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, clusterName: string, databaseName: string, principalAssignmentName: string, options?: DatabasePrincipalAssignmentsDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Deletes a Kusto principalAssignment.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param databaseName The name of the database in the Kusto cluster.
     * @param principalAssignmentName The name of the Kusto principalAssignment.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, clusterName: string, databaseName: string, principalAssignmentName: string, options?: DatabasePrincipalAssignmentsDeleteOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface DatabasePrincipalAssignmentsCheckNameAvailabilityOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the checkNameAvailability operation. */
export declare type DatabasePrincipalAssignmentsCheckNameAvailabilityResponse = CheckNameResult;

/** Optional parameters. */
export declare interface DatabasePrincipalAssignmentsCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export declare type DatabasePrincipalAssignmentsCreateOrUpdateResponse = DatabasePrincipalAssignment;

/** Defines headers for DatabasePrincipalAssignments_delete operation. */
export declare interface DatabasePrincipalAssignmentsDeleteHeaders {
    /** URL to query the status of the operation. */
    location?: string;
    /** URL to query the status of the operation. */
    azureAsyncOperation?: string;
}

/** Optional parameters. */
export declare interface DatabasePrincipalAssignmentsDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface DatabasePrincipalAssignmentsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type DatabasePrincipalAssignmentsGetResponse = DatabasePrincipalAssignment;

/** Optional parameters. */
export declare interface DatabasePrincipalAssignmentsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type DatabasePrincipalAssignmentsListResponse = DatabasePrincipalAssignmentListResult;

/** The list Kusto database principals operation request. */
export declare interface DatabasePrincipalListRequest {
    /** The list of Kusto database principals. */
    value?: DatabasePrincipal[];
}

/** The list Kusto database principals operation response. */
export declare interface DatabasePrincipalListResult {
    /** The list of Kusto database principals. */
    value?: DatabasePrincipal[];
}

/**
 * Defines values for DatabasePrincipalRole. \
 * {@link KnownDatabasePrincipalRole} can be used interchangeably with DatabasePrincipalRole,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Admin** \
 * **Ingestor** \
 * **Monitor** \
 * **User** \
 * **UnrestrictedViewer** \
 * **Viewer**
 */
export declare type DatabasePrincipalRole = string;

/**
 * Defines values for DatabasePrincipalType. \
 * {@link KnownDatabasePrincipalType} can be used interchangeably with DatabasePrincipalType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **App** \
 * **Group** \
 * **User**
 */
export declare type DatabasePrincipalType = string;

/**
 * Defines values for DatabaseRouting. \
 * {@link KnownDatabaseRouting} can be used interchangeably with DatabaseRouting,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Single** \
 * **Multi**
 */
export declare type DatabaseRouting = string;

/** Interface representing a Databases. */
export declare interface Databases {
    /**
     * Returns the list of databases of the given Kusto cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param options The options parameters.
     */
    listByCluster(resourceGroupName: string, clusterName: string, options?: DatabasesListByClusterOptionalParams): PagedAsyncIterableIterator<DatabaseUnion>;
    /**
     * Returns a list of database principals of the given Kusto cluster and database.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param databaseName The name of the database in the Kusto cluster.
     * @param options The options parameters.
     */
    listPrincipals(resourceGroupName: string, clusterName: string, databaseName: string, options?: DatabasesListPrincipalsOptionalParams): PagedAsyncIterableIterator<DatabasePrincipal>;
    /**
     * Checks that the databases resource name is valid and is not already in use.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param resourceName The name of the resource.
     * @param options The options parameters.
     */
    checkNameAvailability(resourceGroupName: string, clusterName: string, resourceName: CheckNameRequest, options?: DatabasesCheckNameAvailabilityOptionalParams): Promise<DatabasesCheckNameAvailabilityResponse>;
    /**
     * Returns a database.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param databaseName The name of the database in the Kusto cluster.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, clusterName: string, databaseName: string, options?: DatabasesGetOptionalParams): Promise<DatabasesGetResponse>;
    /**
     * Creates or updates a database.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param databaseName The name of the database in the Kusto cluster.
     * @param parameters The database parameters supplied to the CreateOrUpdate operation.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, clusterName: string, databaseName: string, parameters: DatabaseUnion, options?: DatabasesCreateOrUpdateOptionalParams): Promise<SimplePollerLike<OperationState<DatabasesCreateOrUpdateResponse>, DatabasesCreateOrUpdateResponse>>;
    /**
     * Creates or updates a database.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param databaseName The name of the database in the Kusto cluster.
     * @param parameters The database parameters supplied to the CreateOrUpdate operation.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, clusterName: string, databaseName: string, parameters: DatabaseUnion, options?: DatabasesCreateOrUpdateOptionalParams): Promise<DatabasesCreateOrUpdateResponse>;
    /**
     * Updates a database.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param databaseName The name of the database in the Kusto cluster.
     * @param parameters The database parameters supplied to the Update operation.
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, clusterName: string, databaseName: string, parameters: DatabaseUnion, options?: DatabasesUpdateOptionalParams): Promise<SimplePollerLike<OperationState<DatabasesUpdateResponse>, DatabasesUpdateResponse>>;
    /**
     * Updates a database.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param databaseName The name of the database in the Kusto cluster.
     * @param parameters The database parameters supplied to the Update operation.
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, clusterName: string, databaseName: string, parameters: DatabaseUnion, options?: DatabasesUpdateOptionalParams): Promise<DatabasesUpdateResponse>;
    /**
     * Deletes the database with the given name.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param databaseName The name of the database in the Kusto cluster.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, clusterName: string, databaseName: string, options?: DatabasesDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Deletes the database with the given name.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param databaseName The name of the database in the Kusto cluster.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, clusterName: string, databaseName: string, options?: DatabasesDeleteOptionalParams): Promise<void>;
    /**
     * Add Database principals permissions.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param databaseName The name of the database in the Kusto cluster.
     * @param databasePrincipalsToAdd List of database principals to add.
     * @param options The options parameters.
     */
    addPrincipals(resourceGroupName: string, clusterName: string, databaseName: string, databasePrincipalsToAdd: DatabasePrincipalListRequest, options?: DatabasesAddPrincipalsOptionalParams): Promise<DatabasesAddPrincipalsResponse>;
    /**
     * Remove Database principals permissions.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param databaseName The name of the database in the Kusto cluster.
     * @param databasePrincipalsToRemove List of database principals to remove.
     * @param options The options parameters.
     */
    removePrincipals(resourceGroupName: string, clusterName: string, databaseName: string, databasePrincipalsToRemove: DatabasePrincipalListRequest, options?: DatabasesRemovePrincipalsOptionalParams): Promise<DatabasesRemovePrincipalsResponse>;
}

/** Optional parameters. */
export declare interface DatabasesAddPrincipalsOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the addPrincipals operation. */
export declare type DatabasesAddPrincipalsResponse = DatabasePrincipalListResult;

/** Optional parameters. */
export declare interface DatabasesCheckNameAvailabilityOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the checkNameAvailability operation. */
export declare type DatabasesCheckNameAvailabilityResponse = CheckNameResult;

/** Defines headers for Databases_createOrUpdate operation. */
export declare interface DatabasesCreateOrUpdateHeaders {
    /** URL to query the status of the operation. */
    azureAsyncOperation?: string;
}

/** Optional parameters. */
export declare interface DatabasesCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
    /** By default, any user who run operation on a database become an Admin on it. This property allows the caller to exclude the caller from Admins list. */
    callerRole?: CallerRole;
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export declare type DatabasesCreateOrUpdateResponse = DatabaseUnion;

/** Defines headers for Databases_delete operation. */
export declare interface DatabasesDeleteHeaders {
    /** URL to query the status of the operation. */
    location?: string;
    /** URL to query the status of the operation. */
    azureAsyncOperation?: string;
}

/** Optional parameters. */
export declare interface DatabasesDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface DatabasesGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type DatabasesGetResponse = DatabaseUnion;

/**
 * Defines values for DatabaseShareOrigin. \
 * {@link KnownDatabaseShareOrigin} can be used interchangeably with DatabaseShareOrigin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Direct** \
 * **DataShare** \
 * **Other**
 */
export declare type DatabaseShareOrigin = string;

/** Optional parameters. */
export declare interface DatabasesListByClusterNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByClusterNext operation. */
export declare type DatabasesListByClusterNextResponse = DatabaseListResult;

/** Optional parameters. */
export declare interface DatabasesListByClusterOptionalParams extends coreClient.OperationOptions {
    /** limit the number of results */
    top?: number;
    /** Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. */
    skiptoken?: string;
}

/** Contains response data for the listByCluster operation. */
export declare type DatabasesListByClusterResponse = DatabaseListResult;

/** Optional parameters. */
export declare interface DatabasesListPrincipalsOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listPrincipals operation. */
export declare type DatabasesListPrincipalsResponse = DatabasePrincipalListResult;

/** Optional parameters. */
export declare interface DatabasesRemovePrincipalsOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the removePrincipals operation. */
export declare type DatabasesRemovePrincipalsResponse = DatabasePrincipalListResult;

/** A class that contains database statistics information. */
export declare interface DatabaseStatistics {
    /** The database size - the total size of compressed data and index in bytes. */
    size?: number;
}

/** Defines headers for Databases_update operation. */
export declare interface DatabasesUpdateHeaders {
    /** URL to query the status of the operation. */
    location?: string;
    /** URL to query the status of the operation. */
    azureAsyncOperation?: string;
}

/** Optional parameters. */
export declare interface DatabasesUpdateOptionalParams extends coreClient.OperationOptions {
    /** By default, any user who run operation on a database become an Admin on it. This property allows the caller to exclude the caller from Admins list. */
    callerRole?: CallerRole;
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the update operation. */
export declare type DatabasesUpdateResponse = DatabaseUnion;

export declare type DatabaseUnion = Database | ReadWriteDatabase | ReadOnlyFollowingDatabase;

/** Class representing an data connection. */
export declare interface DataConnection extends ProxyResource {
    /** Resource location. */
    location?: string;
    /** Kind of the endpoint for the data connection */
    kind: DataConnectionKind;
}

/** A data connection check name availability request. */
export declare interface DataConnectionCheckNameRequest {
    /** Data Connection name. */
    name: string;
    /** The type of resource, Microsoft.Kusto/clusters/databases/dataConnections. */
    type: "Microsoft.Kusto/clusters/databases/dataConnections";
}

/**
 * Defines values for DataConnectionKind. \
 * {@link KnownDataConnectionKind} can be used interchangeably with DataConnectionKind,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **EventHub** \
 * **EventGrid** \
 * **IotHub** \
 * **CosmosDb**
 */
export declare type DataConnectionKind = string;

/** The list Kusto data connections operation response. */
export declare interface DataConnectionListResult {
    /** The list of Kusto data connections. */
    value?: DataConnectionUnion[];
}

/** Interface representing a DataConnections. */
export declare interface DataConnections {
    /**
     * Returns the list of data connections of the given Kusto database.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param databaseName The name of the database in the Kusto cluster.
     * @param options The options parameters.
     */
    listByDatabase(resourceGroupName: string, clusterName: string, databaseName: string, options?: DataConnectionsListByDatabaseOptionalParams): PagedAsyncIterableIterator<DataConnectionUnion>;
    /**
     * Checks that the data connection parameters are valid.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param databaseName The name of the database in the Kusto cluster.
     * @param parameters The data connection parameters supplied to the CreateOrUpdate operation.
     * @param options The options parameters.
     */
    beginDataConnectionValidation(resourceGroupName: string, clusterName: string, databaseName: string, parameters: DataConnectionValidation, options?: DataConnectionsDataConnectionValidationOptionalParams): Promise<SimplePollerLike<OperationState<DataConnectionsDataConnectionValidationResponse>, DataConnectionsDataConnectionValidationResponse>>;
    /**
     * Checks that the data connection parameters are valid.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param databaseName The name of the database in the Kusto cluster.
     * @param parameters The data connection parameters supplied to the CreateOrUpdate operation.
     * @param options The options parameters.
     */
    beginDataConnectionValidationAndWait(resourceGroupName: string, clusterName: string, databaseName: string, parameters: DataConnectionValidation, options?: DataConnectionsDataConnectionValidationOptionalParams): Promise<DataConnectionsDataConnectionValidationResponse>;
    /**
     * Checks that the data connection name is valid and is not already in use.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param databaseName The name of the database in the Kusto cluster.
     * @param dataConnectionName The name of the data connection.
     * @param options The options parameters.
     */
    checkNameAvailability(resourceGroupName: string, clusterName: string, databaseName: string, dataConnectionName: DataConnectionCheckNameRequest, options?: DataConnectionsCheckNameAvailabilityOptionalParams): Promise<DataConnectionsCheckNameAvailabilityResponse>;
    /**
     * Returns a data connection.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param databaseName The name of the database in the Kusto cluster.
     * @param dataConnectionName The name of the data connection.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, clusterName: string, databaseName: string, dataConnectionName: string, options?: DataConnectionsGetOptionalParams): Promise<DataConnectionsGetResponse>;
    /**
     * Creates or updates a data connection.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param databaseName The name of the database in the Kusto cluster.
     * @param dataConnectionName The name of the data connection.
     * @param parameters The data connection parameters supplied to the CreateOrUpdate operation.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, clusterName: string, databaseName: string, dataConnectionName: string, parameters: DataConnectionUnion, options?: DataConnectionsCreateOrUpdateOptionalParams): Promise<SimplePollerLike<OperationState<DataConnectionsCreateOrUpdateResponse>, DataConnectionsCreateOrUpdateResponse>>;
    /**
     * Creates or updates a data connection.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param databaseName The name of the database in the Kusto cluster.
     * @param dataConnectionName The name of the data connection.
     * @param parameters The data connection parameters supplied to the CreateOrUpdate operation.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, clusterName: string, databaseName: string, dataConnectionName: string, parameters: DataConnectionUnion, options?: DataConnectionsCreateOrUpdateOptionalParams): Promise<DataConnectionsCreateOrUpdateResponse>;
    /**
     * Updates a data connection.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param databaseName The name of the database in the Kusto cluster.
     * @param dataConnectionName The name of the data connection.
     * @param parameters The data connection parameters supplied to the Update operation.
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, clusterName: string, databaseName: string, dataConnectionName: string, parameters: DataConnectionUnion, options?: DataConnectionsUpdateOptionalParams): Promise<SimplePollerLike<OperationState<DataConnectionsUpdateResponse>, DataConnectionsUpdateResponse>>;
    /**
     * Updates a data connection.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param databaseName The name of the database in the Kusto cluster.
     * @param dataConnectionName The name of the data connection.
     * @param parameters The data connection parameters supplied to the Update operation.
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, clusterName: string, databaseName: string, dataConnectionName: string, parameters: DataConnectionUnion, options?: DataConnectionsUpdateOptionalParams): Promise<DataConnectionsUpdateResponse>;
    /**
     * Deletes the data connection with the given name.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param databaseName The name of the database in the Kusto cluster.
     * @param dataConnectionName The name of the data connection.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, clusterName: string, databaseName: string, dataConnectionName: string, options?: DataConnectionsDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Deletes the data connection with the given name.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param databaseName The name of the database in the Kusto cluster.
     * @param dataConnectionName The name of the data connection.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, clusterName: string, databaseName: string, dataConnectionName: string, options?: DataConnectionsDeleteOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface DataConnectionsCheckNameAvailabilityOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the checkNameAvailability operation. */
export declare type DataConnectionsCheckNameAvailabilityResponse = CheckNameResult;

/** Defines headers for DataConnections_createOrUpdate operation. */
export declare interface DataConnectionsCreateOrUpdateHeaders {
    /** URL to query the status of the operation. */
    azureAsyncOperation?: string;
}

/** Optional parameters. */
export declare interface DataConnectionsCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export declare type DataConnectionsCreateOrUpdateResponse = DataConnectionUnion;

/** Defines headers for DataConnections_dataConnectionValidation operation. */
export declare interface DataConnectionsDataConnectionValidationHeaders {
    /** URL to query the status of the operation. */
    location?: string;
    /** URL to query the status of the operation. */
    azureAsyncOperation?: string;
}

/** Optional parameters. */
export declare interface DataConnectionsDataConnectionValidationOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the dataConnectionValidation operation. */
export declare type DataConnectionsDataConnectionValidationResponse = DataConnectionValidationListResult;

/** Defines headers for DataConnections_delete operation. */
export declare interface DataConnectionsDeleteHeaders {
    /** URL to query the status of the operation. */
    location?: string;
    /** URL to query the status of the operation. */
    azureAsyncOperation?: string;
}

/** Optional parameters. */
export declare interface DataConnectionsDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface DataConnectionsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type DataConnectionsGetResponse = DataConnectionUnion;

/** Optional parameters. */
export declare interface DataConnectionsListByDatabaseOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByDatabase operation. */
export declare type DataConnectionsListByDatabaseResponse = DataConnectionListResult;

/** Defines headers for DataConnections_update operation. */
export declare interface DataConnectionsUpdateHeaders {
    /** URL to query the status of the operation. */
    location?: string;
    /** URL to query the status of the operation. */
    azureAsyncOperation?: string;
}

/** Optional parameters. */
export declare interface DataConnectionsUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the update operation. */
export declare type DataConnectionsUpdateResponse = DataConnectionUnion;

export declare type DataConnectionUnion = DataConnection | EventHubDataConnection | IotHubDataConnection | EventGridDataConnection | CosmosDbDataConnection;

/** Class representing an data connection validation. */
export declare interface DataConnectionValidation {
    /** The name of the data connection. */
    dataConnectionName?: string;
    /** The data connection properties to validate. */
    properties?: DataConnectionUnion;
}

/** The list Kusto data connection validation result. */
export declare interface DataConnectionValidationListResult {
    /** The list of Kusto data connection validation errors. */
    value?: DataConnectionValidationResult[];
}

/** The result returned from a data connection validation request. */
export declare interface DataConnectionValidationResult {
    /** A message which indicates a problem in data connection validation. */
    errorMessage?: string;
}

/**
 * Defines values for DefaultPrincipalsModificationKind. \
 * {@link KnownDefaultPrincipalsModificationKind} can be used interchangeably with DefaultPrincipalsModificationKind,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Union** \
 * **Replace** \
 * **None**
 */
export declare type DefaultPrincipalsModificationKind = string;

export declare interface DiagnoseVirtualNetworkResult {
    /** The list of network connectivity diagnostic finding */
    findings?: string[];
}

/** A domain name that a service is reached at, including details of the current connection status. */
export declare interface EndpointDependency {
    /** The domain name of the dependency. */
    domainName?: string;
    /** The ports used when connecting to DomainName. */
    endpointDetails?: EndpointDetail[];
}

/** Current TCP connectivity information from the Kusto cluster to a single endpoint. */
export declare interface EndpointDetail {
    /** The port an endpoint is connected to. */
    port?: number;
    /** The ip address of the endpoint. */
    ipAddress?: string;
}

/**
 * Defines values for EngineType. \
 * {@link KnownEngineType} can be used interchangeably with EngineType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **V2** \
 * **V3**
 */
export declare type EngineType = string;

/** The resource management error additional info. */
export declare interface ErrorAdditionalInfo {
    /**
     * The additional info type.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /**
     * The additional info.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly info?: Record<string, unknown>;
}

/** The error detail. */
export declare interface ErrorDetail {
    /**
     * The error code.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly code?: string;
    /**
     * The error message.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly message?: string;
    /**
     * The error target.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly target?: string;
    /**
     * The error details.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly details?: ErrorDetail[];
    /**
     * The error additional info.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export declare interface ErrorResponse {
    /** The error object. */
    error?: ErrorDetail;
}

/** Class representing an Event Grid data connection. */
export declare interface EventGridDataConnection extends DataConnection {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    kind: "EventGrid";
    /** The resource ID of the storage account where the data resides. */
    storageAccountResourceId?: string;
    /** The resource ID of the event grid that is subscribed to the storage account events. */
    eventGridResourceId?: string;
    /** The resource ID where the event grid is configured to send events. */
    eventHubResourceId?: string;
    /** The event hub consumer group. */
    consumerGroup?: string;
    /** The table where the data should be ingested. Optionally the table information can be added to each message. */
    tableName?: string;
    /** The mapping rule to be used to ingest the data. Optionally the mapping information can be added to each message. */
    mappingRuleName?: string;
    /** The data format of the message. Optionally the data format can be added to each message. */
    dataFormat?: EventGridDataFormat;
    /** A Boolean value that, if set to true, indicates that ingestion should ignore the first record of every file */
    ignoreFirstRecord?: boolean;
    /** The name of blob storage event type to process. */
    blobStorageEventType?: BlobStorageEventType;
    /** The resource ID of a managed identity (system or user assigned) to be used to authenticate with event hub and storage account. */
    managedIdentityResourceId?: string;
    /**
     * The object ID of managedIdentityResourceId
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly managedIdentityObjectId?: string;
    /** Indication for database routing information from the data connection, by default only database routing information is allowed */
    databaseRouting?: DatabaseRouting;
    /**
     * The provisioned state of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: ProvisioningState;
}

/**
 * Defines values for EventGridDataFormat. \
 * {@link KnownEventGridDataFormat} can be used interchangeably with EventGridDataFormat,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **MULTIJSON** \
 * **JSON** \
 * **CSV** \
 * **TSV** \
 * **SCSV** \
 * **SOHSV** \
 * **PSV** \
 * **TXT** \
 * **RAW** \
 * **SINGLEJSON** \
 * **AVRO** \
 * **TSVE** \
 * **PARQUET** \
 * **ORC** \
 * **APACHEAVRO** \
 * **W3CLOGFILE**
 */
export declare type EventGridDataFormat = string;

/** Class representing an event hub data connection. */
export declare interface EventHubDataConnection extends DataConnection {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    kind: "EventHub";
    /** The resource ID of the event hub to be used to create a data connection. */
    eventHubResourceId?: string;
    /** The event hub consumer group. */
    consumerGroup?: string;
    /** The table where the data should be ingested. Optionally the table information can be added to each message. */
    tableName?: string;
    /** The mapping rule to be used to ingest the data. Optionally the mapping information can be added to each message. */
    mappingRuleName?: string;
    /** The data format of the message. Optionally the data format can be added to each message. */
    dataFormat?: EventHubDataFormat;
    /** System properties of the event hub */
    eventSystemProperties?: string[];
    /** The event hub messages compression type */
    compression?: Compression;
    /**
     * The provisioned state of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: ProvisioningState;
    /** The resource ID of a managed identity (system or user assigned) to be used to authenticate with event hub. */
    managedIdentityResourceId?: string;
    /**
     * The object ID of the managedIdentityResourceId
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly managedIdentityObjectId?: string;
    /** Indication for database routing information from the data connection, by default only database routing information is allowed */
    databaseRouting?: DatabaseRouting;
    /** When defined, the data connection retrieves existing Event hub events created since the Retrieval start date. It can only retrieve events retained by the Event hub, based on its retention period. */
    retrievalStartDate?: Date;
}

/**
 * Defines values for EventHubDataFormat. \
 * {@link KnownEventHubDataFormat} can be used interchangeably with EventHubDataFormat,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **MULTIJSON** \
 * **JSON** \
 * **CSV** \
 * **TSV** \
 * **SCSV** \
 * **SOHSV** \
 * **PSV** \
 * **TXT** \
 * **RAW** \
 * **SINGLEJSON** \
 * **AVRO** \
 * **TSVE** \
 * **PARQUET** \
 * **ORC** \
 * **APACHEAVRO** \
 * **W3CLOGFILE**
 */
export declare type EventHubDataFormat = string;

/** A class representing follower database request. */
export declare interface FollowerDatabaseDefinition {
    /** Resource id of the cluster that follows a database owned by this cluster. */
    clusterResourceId: string;
    /** Resource name of the attached database configuration in the follower cluster. */
    attachedDatabaseConfigurationName: string;
    /**
     * The database name owned by this cluster that was followed. * in case following all databases.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly databaseName?: string;
    /**
     * Table level sharing specifications
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly tableLevelSharingProperties?: TableLevelSharingProperties;
    /**
     * The origin of the following setup.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly databaseShareOrigin?: DatabaseShareOrigin;
}

/** The list Kusto database principals operation response. */
export declare interface FollowerDatabaseListResult {
    /** The list of follower database result. */
    value?: FollowerDatabaseDefinition[];
}

/**
 * Given the last `.value` produced by the `byPage` iterator,
 * returns a continuation token that can be used to begin paging from
 * that point later.
 * @param page An object from accessing `value` on the IteratorResult from a `byPage` iterator.
 * @returns The continuation token that can be passed into byPage() during future calls.
 */
export declare function getContinuationToken(page: unknown): string | undefined;

/** Identity for the resource. */
export declare interface Identity {
    /**
     * The principal ID of resource identity.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly principalId?: string;
    /**
     * The tenant ID of resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly tenantId?: string;
    /** The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove all identities. */
    type: IdentityType;
    /** The list of user identities associated with the Kusto cluster. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'. */
    userAssignedIdentities?: {
        [propertyName: string]: ComponentsSgqdofSchemasIdentityPropertiesUserassignedidentitiesAdditionalproperties;
    };
}

/**
 * Defines values for IdentityType. \
 * {@link KnownIdentityType} can be used interchangeably with IdentityType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **SystemAssigned** \
 * **UserAssigned** \
 * **SystemAssigned, UserAssigned**
 */
export declare type IdentityType = string;

/** Class representing an iot hub data connection. */
export declare interface IotHubDataConnection extends DataConnection {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    kind: "IotHub";
    /** The resource ID of the Iot hub to be used to create a data connection. */
    iotHubResourceId?: string;
    /** The iot hub consumer group. */
    consumerGroup?: string;
    /** The table where the data should be ingested. Optionally the table information can be added to each message. */
    tableName?: string;
    /** The mapping rule to be used to ingest the data. Optionally the mapping information can be added to each message. */
    mappingRuleName?: string;
    /** The data format of the message. Optionally the data format can be added to each message. */
    dataFormat?: IotHubDataFormat;
    /** System properties of the iot hub */
    eventSystemProperties?: string[];
    /** The name of the share access policy */
    sharedAccessPolicyName?: string;
    /** Indication for database routing information from the data connection, by default only database routing information is allowed */
    databaseRouting?: DatabaseRouting;
    /** When defined, the data connection retrieves existing Event hub events created since the Retrieval start date. It can only retrieve events retained by the Event hub, based on its retention period. */
    retrievalStartDate?: Date;
    /**
     * The provisioned state of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: ProvisioningState;
}

/**
 * Defines values for IotHubDataFormat. \
 * {@link KnownIotHubDataFormat} can be used interchangeably with IotHubDataFormat,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **MULTIJSON** \
 * **JSON** \
 * **CSV** \
 * **TSV** \
 * **SCSV** \
 * **SOHSV** \
 * **PSV** \
 * **TXT** \
 * **RAW** \
 * **SINGLEJSON** \
 * **AVRO** \
 * **TSVE** \
 * **PARQUET** \
 * **ORC** \
 * **APACHEAVRO** \
 * **W3CLOGFILE**
 */
export declare type IotHubDataFormat = string;

/** Properties of the key vault. */
export declare interface KeyVaultProperties {
    /** The name of the key vault key. */
    keyName?: string;
    /** The version of the key vault key. */
    keyVersion?: string;
    /** The Uri of the key vault. */
    keyVaultUri?: string;
    /** The user assigned identity (ARM resource id) that has access to the key. */
    userIdentity?: string;
}

/**
 * Defines values for Kind. \
 * {@link KnownKind} can be used interchangeably with Kind,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ReadWrite** \
 * **ReadOnlyFollowing**
 */
export declare type Kind = string;

/** Known values of {@link AzureScaleType} that the service accepts. */
export declare enum KnownAzureScaleType {
    /** Automatic */
    Automatic = "automatic",
    /** Manual */
    Manual = "manual",
    /** None */
    None = "none"
}

/** Known values of {@link AzureSkuName} that the service accepts. */
export declare enum KnownAzureSkuName {
    /** DevNoSLAStandardD11V2 */
    DevNoSLAStandardD11V2 = "Dev(No SLA)_Standard_D11_v2",
    /** DevNoSLAStandardE2AV4 */
    DevNoSLAStandardE2AV4 = "Dev(No SLA)_Standard_E2a_v4",
    /** StandardD11V2 */
    StandardD11V2 = "Standard_D11_v2",
    /** StandardD12V2 */
    StandardD12V2 = "Standard_D12_v2",
    /** StandardD13V2 */
    StandardD13V2 = "Standard_D13_v2",
    /** StandardD14V2 */
    StandardD14V2 = "Standard_D14_v2",
    /** StandardD32DV4 */
    StandardD32DV4 = "Standard_D32d_v4",
    /** StandardD16DV5 */
    StandardD16DV5 = "Standard_D16d_v5",
    /** StandardD32DV5 */
    StandardD32DV5 = "Standard_D32d_v5",
    /** StandardDS13V21TBPS */
    StandardDS13V21TBPS = "Standard_DS13_v2+1TB_PS",
    /** StandardDS13V22TBPS */
    StandardDS13V22TBPS = "Standard_DS13_v2+2TB_PS",
    /** StandardDS14V23TBPS */
    StandardDS14V23TBPS = "Standard_DS14_v2+3TB_PS",
    /** StandardDS14V24TBPS */
    StandardDS14V24TBPS = "Standard_DS14_v2+4TB_PS",
    /** StandardL4S */
    StandardL4S = "Standard_L4s",
    /** StandardL8S */
    StandardL8S = "Standard_L8s",
    /** StandardL16S */
    StandardL16S = "Standard_L16s",
    /** StandardL8SV2 */
    StandardL8SV2 = "Standard_L8s_v2",
    /** StandardL16SV2 */
    StandardL16SV2 = "Standard_L16s_v2",
    /** StandardL8SV3 */
    StandardL8SV3 = "Standard_L8s_v3",
    /** StandardL16SV3 */
    StandardL16SV3 = "Standard_L16s_v3",
    /** StandardL32SV3 */
    StandardL32SV3 = "Standard_L32s_v3",
    /** StandardL8AsV3 */
    StandardL8AsV3 = "Standard_L8as_v3",
    /** StandardL16AsV3 */
    StandardL16AsV3 = "Standard_L16as_v3",
    /** StandardL32AsV3 */
    StandardL32AsV3 = "Standard_L32as_v3",
    /** StandardE64IV3 */
    StandardE64IV3 = "Standard_E64i_v3",
    /** StandardE80IdsV4 */
    StandardE80IdsV4 = "Standard_E80ids_v4",
    /** StandardE2AV4 */
    StandardE2AV4 = "Standard_E2a_v4",
    /** StandardE4AV4 */
    StandardE4AV4 = "Standard_E4a_v4",
    /** StandardE8AV4 */
    StandardE8AV4 = "Standard_E8a_v4",
    /** StandardE16AV4 */
    StandardE16AV4 = "Standard_E16a_v4",
    /** StandardE8AsV41TBPS */
    StandardE8AsV41TBPS = "Standard_E8as_v4+1TB_PS",
    /** StandardE8AsV42TBPS */
    StandardE8AsV42TBPS = "Standard_E8as_v4+2TB_PS",
    /** StandardE16AsV43TBPS */
    StandardE16AsV43TBPS = "Standard_E16as_v4+3TB_PS",
    /** StandardE16AsV44TBPS */
    StandardE16AsV44TBPS = "Standard_E16as_v4+4TB_PS",
    /** StandardE8AsV51TBPS */
    StandardE8AsV51TBPS = "Standard_E8as_v5+1TB_PS",
    /** StandardE8AsV52TBPS */
    StandardE8AsV52TBPS = "Standard_E8as_v5+2TB_PS",
    /** StandardE16AsV53TBPS */
    StandardE16AsV53TBPS = "Standard_E16as_v5+3TB_PS",
    /** StandardE16AsV54TBPS */
    StandardE16AsV54TBPS = "Standard_E16as_v5+4TB_PS",
    /** StandardE2AdsV5 */
    StandardE2AdsV5 = "Standard_E2ads_v5",
    /** StandardE4AdsV5 */
    StandardE4AdsV5 = "Standard_E4ads_v5",
    /** StandardE8AdsV5 */
    StandardE8AdsV5 = "Standard_E8ads_v5",
    /** StandardE16AdsV5 */
    StandardE16AdsV5 = "Standard_E16ads_v5",
    /** StandardEC8AsV51TBPS */
    StandardEC8AsV51TBPS = "Standard_EC8as_v5+1TB_PS",
    /** StandardEC8AsV52TBPS */
    StandardEC8AsV52TBPS = "Standard_EC8as_v5+2TB_PS",
    /** StandardEC16AsV53TBPS */
    StandardEC16AsV53TBPS = "Standard_EC16as_v5+3TB_PS",
    /** StandardEC16AsV54TBPS */
    StandardEC16AsV54TBPS = "Standard_EC16as_v5+4TB_PS",
    /** StandardEC8AdsV5 */
    StandardEC8AdsV5 = "Standard_EC8ads_v5",
    /** StandardEC16AdsV5 */
    StandardEC16AdsV5 = "Standard_EC16ads_v5",
    /** StandardE8SV41TBPS */
    StandardE8SV41TBPS = "Standard_E8s_v4+1TB_PS",
    /** StandardE8SV42TBPS */
    StandardE8SV42TBPS = "Standard_E8s_v4+2TB_PS",
    /** StandardE16SV43TBPS */
    StandardE16SV43TBPS = "Standard_E16s_v4+3TB_PS",
    /** StandardE16SV44TBPS */
    StandardE16SV44TBPS = "Standard_E16s_v4+4TB_PS",
    /** StandardE8SV51TBPS */
    StandardE8SV51TBPS = "Standard_E8s_v5+1TB_PS",
    /** StandardE8SV52TBPS */
    StandardE8SV52TBPS = "Standard_E8s_v5+2TB_PS",
    /** StandardE16SV53TBPS */
    StandardE16SV53TBPS = "Standard_E16s_v5+3TB_PS",
    /** StandardE16SV54TBPS */
    StandardE16SV54TBPS = "Standard_E16s_v5+4TB_PS",
    /** StandardE2DV4 */
    StandardE2DV4 = "Standard_E2d_v4",
    /** StandardE4DV4 */
    StandardE4DV4 = "Standard_E4d_v4",
    /** StandardE8DV4 */
    StandardE8DV4 = "Standard_E8d_v4",
    /** StandardE16DV4 */
    StandardE16DV4 = "Standard_E16d_v4",
    /** StandardE2DV5 */
    StandardE2DV5 = "Standard_E2d_v5",
    /** StandardE4DV5 */
    StandardE4DV5 = "Standard_E4d_v5",
    /** StandardE8DV5 */
    StandardE8DV5 = "Standard_E8d_v5",
    /** StandardE16DV5 */
    StandardE16DV5 = "Standard_E16d_v5"
}

/** Known values of {@link AzureSkuTier} that the service accepts. */
export declare enum KnownAzureSkuTier {
    /** Basic */
    Basic = "Basic",
    /** Standard */
    Standard = "Standard"
}

/** Known values of {@link BlobStorageEventType} that the service accepts. */
export declare enum KnownBlobStorageEventType {
    /** MicrosoftStorageBlobCreated */
    MicrosoftStorageBlobCreated = "Microsoft.Storage.BlobCreated",
    /** MicrosoftStorageBlobRenamed */
    MicrosoftStorageBlobRenamed = "Microsoft.Storage.BlobRenamed"
}

/** Known values of {@link CallerRole} that the service accepts. */
export declare enum KnownCallerRole {
    /** Admin */
    Admin = "Admin",
    /** None */
    None = "None"
}

/** Known values of {@link ClusterNetworkAccessFlag} that the service accepts. */
export declare enum KnownClusterNetworkAccessFlag {
    /** Enabled */
    Enabled = "Enabled",
    /** Disabled */
    Disabled = "Disabled"
}

/** Known values of {@link ClusterPrincipalRole} that the service accepts. */
export declare enum KnownClusterPrincipalRole {
    /** AllDatabasesAdmin */
    AllDatabasesAdmin = "AllDatabasesAdmin",
    /** AllDatabasesViewer */
    AllDatabasesViewer = "AllDatabasesViewer"
}

/** Known values of {@link Compression} that the service accepts. */
export declare enum KnownCompression {
    /** None */
    None = "None",
    /** GZip */
    GZip = "GZip"
}

/** Known values of {@link CreatedByType} that the service accepts. */
export declare enum KnownCreatedByType {
    /** User */
    User = "User",
    /** Application */
    Application = "Application",
    /** ManagedIdentity */
    ManagedIdentity = "ManagedIdentity",
    /** Key */
    Key = "Key"
}

/** Known values of {@link DatabasePrincipalRole} that the service accepts. */
export declare enum KnownDatabasePrincipalRole {
    /** Admin */
    Admin = "Admin",
    /** Ingestor */
    Ingestor = "Ingestor",
    /** Monitor */
    Monitor = "Monitor",
    /** User */
    User = "User",
    /** UnrestrictedViewer */
    UnrestrictedViewer = "UnrestrictedViewer",
    /** Viewer */
    Viewer = "Viewer"
}

/** Known values of {@link DatabasePrincipalType} that the service accepts. */
export declare enum KnownDatabasePrincipalType {
    /** App */
    App = "App",
    /** Group */
    Group = "Group",
    /** User */
    User = "User"
}

/** Known values of {@link DatabaseRouting} that the service accepts. */
export declare enum KnownDatabaseRouting {
    /** Single */
    Single = "Single",
    /** Multi */
    Multi = "Multi"
}

/** Known values of {@link DatabaseShareOrigin} that the service accepts. */
export declare enum KnownDatabaseShareOrigin {
    /** Direct */
    Direct = "Direct",
    /** DataShare */
    DataShare = "DataShare",
    /** Other */
    Other = "Other"
}

/** Known values of {@link DataConnectionKind} that the service accepts. */
export declare enum KnownDataConnectionKind {
    /** EventHub */
    EventHub = "EventHub",
    /** EventGrid */
    EventGrid = "EventGrid",
    /** IotHub */
    IotHub = "IotHub",
    /** CosmosDb */
    CosmosDb = "CosmosDb"
}

/** Known values of {@link DefaultPrincipalsModificationKind} that the service accepts. */
export declare enum KnownDefaultPrincipalsModificationKind {
    /** Union */
    Union = "Union",
    /** Replace */
    Replace = "Replace",
    /** None */
    None = "None"
}

/** Known values of {@link EngineType} that the service accepts. */
export declare enum KnownEngineType {
    /** V2 */
    V2 = "V2",
    /** V3 */
    V3 = "V3"
}

/** Known values of {@link EventGridDataFormat} that the service accepts. */
export declare enum KnownEventGridDataFormat {
    /** Multijson */
    Multijson = "MULTIJSON",
    /** Json */
    Json = "JSON",
    /** CSV */
    CSV = "CSV",
    /** TSV */
    TSV = "TSV",
    /** Scsv */
    Scsv = "SCSV",
    /** Sohsv */
    Sohsv = "SOHSV",
    /** PSV */
    PSV = "PSV",
    /** TXT */
    TXT = "TXT",
    /** RAW */
    RAW = "RAW",
    /** Singlejson */
    Singlejson = "SINGLEJSON",
    /** Avro */
    Avro = "AVRO",
    /** Tsve */
    Tsve = "TSVE",
    /** Parquet */
    Parquet = "PARQUET",
    /** ORC */
    ORC = "ORC",
    /** Apacheavro */
    Apacheavro = "APACHEAVRO",
    /** W3Clogfile */
    W3Clogfile = "W3CLOGFILE"
}

/** Known values of {@link EventHubDataFormat} that the service accepts. */
export declare enum KnownEventHubDataFormat {
    /** Multijson */
    Multijson = "MULTIJSON",
    /** Json */
    Json = "JSON",
    /** CSV */
    CSV = "CSV",
    /** TSV */
    TSV = "TSV",
    /** Scsv */
    Scsv = "SCSV",
    /** Sohsv */
    Sohsv = "SOHSV",
    /** PSV */
    PSV = "PSV",
    /** TXT */
    TXT = "TXT",
    /** RAW */
    RAW = "RAW",
    /** Singlejson */
    Singlejson = "SINGLEJSON",
    /** Avro */
    Avro = "AVRO",
    /** Tsve */
    Tsve = "TSVE",
    /** Parquet */
    Parquet = "PARQUET",
    /** ORC */
    ORC = "ORC",
    /** Apacheavro */
    Apacheavro = "APACHEAVRO",
    /** W3Clogfile */
    W3Clogfile = "W3CLOGFILE"
}

/** Known values of {@link IdentityType} that the service accepts. */
export declare enum KnownIdentityType {
    /** None */
    None = "None",
    /** SystemAssigned */
    SystemAssigned = "SystemAssigned",
    /** UserAssigned */
    UserAssigned = "UserAssigned",
    /** SystemAssignedUserAssigned */
    SystemAssignedUserAssigned = "SystemAssigned, UserAssigned"
}

/** Known values of {@link IotHubDataFormat} that the service accepts. */
export declare enum KnownIotHubDataFormat {
    /** Multijson */
    Multijson = "MULTIJSON",
    /** Json */
    Json = "JSON",
    /** CSV */
    CSV = "CSV",
    /** TSV */
    TSV = "TSV",
    /** Scsv */
    Scsv = "SCSV",
    /** Sohsv */
    Sohsv = "SOHSV",
    /** PSV */
    PSV = "PSV",
    /** TXT */
    TXT = "TXT",
    /** RAW */
    RAW = "RAW",
    /** Singlejson */
    Singlejson = "SINGLEJSON",
    /** Avro */
    Avro = "AVRO",
    /** Tsve */
    Tsve = "TSVE",
    /** Parquet */
    Parquet = "PARQUET",
    /** ORC */
    ORC = "ORC",
    /** Apacheavro */
    Apacheavro = "APACHEAVRO",
    /** W3Clogfile */
    W3Clogfile = "W3CLOGFILE"
}

/** Known values of {@link Kind} that the service accepts. */
export declare enum KnownKind {
    /** ReadWrite */
    ReadWrite = "ReadWrite",
    /** ReadOnlyFollowing */
    ReadOnlyFollowing = "ReadOnlyFollowing"
}

/** Known values of {@link Language} that the service accepts. */
export declare enum KnownLanguage {
    /** Python */
    Python = "Python"
}

/** Known values of {@link LanguageExtensionImageName} that the service accepts. */
export declare enum KnownLanguageExtensionImageName {
    /** R */
    R = "R",
    /** Python365 */
    Python365 = "Python3_6_5",
    /** Python3108 */
    Python3108 = "Python3_10_8",
    /** Python3108DL */
    Python3108DL = "Python3_10_8_DL",
    /** PythonCustomImage */
    PythonCustomImage = "PythonCustomImage"
}

/** Known values of {@link LanguageExtensionName} that the service accepts. */
export declare enum KnownLanguageExtensionName {
    /** Python */
    Python = "PYTHON",
    /** R */
    R = "R"
}

/** Known values of {@link MigrationClusterRole} that the service accepts. */
export declare enum KnownMigrationClusterRole {
    /** Source */
    Source = "Source",
    /** Destination */
    Destination = "Destination"
}

/** Known values of {@link PrincipalsModificationKind} that the service accepts. */
export declare enum KnownPrincipalsModificationKind {
    /** Union */
    Union = "Union",
    /** Replace */
    Replace = "Replace",
    /** None */
    None = "None"
}

/** Known values of {@link PrincipalType} that the service accepts. */
export declare enum KnownPrincipalType {
    /** App */
    App = "App",
    /** Group */
    Group = "Group",
    /** User */
    User = "User"
}

/** Known values of {@link ProvisioningState} that the service accepts. */
export declare enum KnownProvisioningState {
    /** Running */
    Running = "Running",
    /** Creating */
    Creating = "Creating",
    /** Deleting */
    Deleting = "Deleting",
    /** Succeeded */
    Succeeded = "Succeeded",
    /** Failed */
    Failed = "Failed",
    /** Moving */
    Moving = "Moving",
    /** Canceled */
    Canceled = "Canceled"
}

/** Known values of {@link PublicIPType} that the service accepts. */
export declare enum KnownPublicIPType {
    /** IPv4 */
    IPv4 = "IPv4",
    /** DualStack */
    DualStack = "DualStack"
}

/** Known values of {@link PublicNetworkAccess} that the service accepts. */
export declare enum KnownPublicNetworkAccess {
    /** Enabled */
    Enabled = "Enabled",
    /** Disabled */
    Disabled = "Disabled"
}

/** Known values of {@link Reason} that the service accepts. */
export declare enum KnownReason {
    /** Invalid */
    Invalid = "Invalid",
    /** AlreadyExists */
    AlreadyExists = "AlreadyExists"
}

/** Known values of {@link State} that the service accepts. */
export declare enum KnownState {
    /** Creating */
    Creating = "Creating",
    /** Unavailable */
    Unavailable = "Unavailable",
    /** Running */
    Running = "Running",
    /** Deleting */
    Deleting = "Deleting",
    /** Deleted */
    Deleted = "Deleted",
    /** Stopping */
    Stopping = "Stopping",
    /** Stopped */
    Stopped = "Stopped",
    /** Starting */
    Starting = "Starting",
    /** Updating */
    Updating = "Updating",
    /** Migrated */
    Migrated = "Migrated"
}

/** Known values of {@link Status} that the service accepts. */
export declare enum KnownStatus {
    /** Succeeded */
    Succeeded = "Succeeded",
    /** Canceled */
    Canceled = "Canceled",
    /** Failed */
    Failed = "Failed",
    /** Running */
    Running = "Running"
}

/** Known values of {@link VnetState} that the service accepts. */
export declare enum KnownVnetState {
    /** Enabled */
    Enabled = "Enabled",
    /** Disabled */
    Disabled = "Disabled"
}

export declare class KustoManagementClient extends coreClient.ServiceClient {
    $host: string;
    subscriptionId: string;
    apiVersion: string;
    /**
     * Initializes a new instance of the KustoManagementClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId The ID of the target subscription.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: KustoManagementClientOptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    clusters: Clusters;
    clusterPrincipalAssignments: ClusterPrincipalAssignments;
    skus: Skus;
    databases: Databases;
    attachedDatabaseConfigurations: AttachedDatabaseConfigurations;
    managedPrivateEndpoints: ManagedPrivateEndpoints;
    databaseOperations: DatabaseOperations;
    databasePrincipalAssignments: DatabasePrincipalAssignments;
    scripts: Scripts;
    sandboxCustomImages: SandboxCustomImages;
    privateEndpointConnections: PrivateEndpointConnections;
    privateLinkResources: PrivateLinkResources;
    dataConnections: DataConnections;
    operations: Operations;
    operationsResults: OperationsResults;
    operationsResultsLocation: OperationsResultsLocation;
}

/** Optional parameters. */
export declare interface KustoManagementClientOptionalParams extends coreClient.ServiceClientOptions {
    /** server parameter */
    $host?: string;
    /** Api Version */
    apiVersion?: string;
    /** Overrides client endpoint. */
    endpoint?: string;
}

/**
 * Defines values for Language. \
 * {@link KnownLanguage} can be used interchangeably with Language,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Python**
 */
export declare type Language = string;

/** The language extension object. */
export declare interface LanguageExtension {
    /** The language extension name. */
    languageExtensionName?: LanguageExtensionName;
    /** The language extension image name. */
    languageExtensionImageName?: LanguageExtensionImageName;
    /** The language extension custom image name. */
    languageExtensionCustomImageName?: string;
}

/**
 * Defines values for LanguageExtensionImageName. \
 * {@link KnownLanguageExtensionImageName} can be used interchangeably with LanguageExtensionImageName,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **R** \
 * **Python3_6_5** \
 * **Python3_10_8** \
 * **Python3_10_8_DL** \
 * **PythonCustomImage**
 */
export declare type LanguageExtensionImageName = string;

/**
 * Defines values for LanguageExtensionName. \
 * {@link KnownLanguageExtensionName} can be used interchangeably with LanguageExtensionName,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **PYTHON** \
 * **R**
 */
export declare type LanguageExtensionName = string;

/** The list of language extension objects. */
export declare interface LanguageExtensionsList {
    /** The list of language extensions. */
    value?: LanguageExtension[];
}

/** List of available SKUs for a Kusto Cluster. */
export declare interface ListResourceSkusResult {
    /** The collection of available SKUs for an existing resource. */
    value?: AzureResourceSku[];
}

/** Class representing a managed private endpoint. */
export declare interface ManagedPrivateEndpoint extends ProxyResource {
    /**
     * Metadata pertaining to creation and last modification of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
    /** The ARM resource ID of the resource for which the managed private endpoint is created. */
    privateLinkResourceId?: string;
    /** The region of the resource to which the managed private endpoint is created. */
    privateLinkResourceRegion?: string;
    /** The groupId in which the managed private endpoint is created. */
    groupId?: string;
    /** The user request message. */
    requestMessage?: string;
    /**
     * The provisioned state of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: ProvisioningState;
}

/** The list managed private endpoints operation response. */
export declare interface ManagedPrivateEndpointListResult {
    /** The list of managed private endpoints. */
    value?: ManagedPrivateEndpoint[];
}

/** Interface representing a ManagedPrivateEndpoints. */
export declare interface ManagedPrivateEndpoints {
    /**
     * Returns the list of managed private endpoints.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, clusterName: string, options?: ManagedPrivateEndpointsListOptionalParams): PagedAsyncIterableIterator<ManagedPrivateEndpoint>;
    /**
     * Checks that the managed private endpoints resource name is valid and is not already in use.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param resourceName The name of the resource.
     * @param options The options parameters.
     */
    checkNameAvailability(resourceGroupName: string, clusterName: string, resourceName: ManagedPrivateEndpointsCheckNameRequest, options?: ManagedPrivateEndpointsCheckNameAvailabilityOptionalParams): Promise<ManagedPrivateEndpointsCheckNameAvailabilityResponse>;
    /**
     * Gets a managed private endpoint.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param managedPrivateEndpointName The name of the managed private endpoint.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, clusterName: string, managedPrivateEndpointName: string, options?: ManagedPrivateEndpointsGetOptionalParams): Promise<ManagedPrivateEndpointsGetResponse>;
    /**
     * Creates a managed private endpoint.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param managedPrivateEndpointName The name of the managed private endpoint.
     * @param parameters The managed private endpoint parameters.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, clusterName: string, managedPrivateEndpointName: string, parameters: ManagedPrivateEndpoint, options?: ManagedPrivateEndpointsCreateOrUpdateOptionalParams): Promise<SimplePollerLike<OperationState<ManagedPrivateEndpointsCreateOrUpdateResponse>, ManagedPrivateEndpointsCreateOrUpdateResponse>>;
    /**
     * Creates a managed private endpoint.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param managedPrivateEndpointName The name of the managed private endpoint.
     * @param parameters The managed private endpoint parameters.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, clusterName: string, managedPrivateEndpointName: string, parameters: ManagedPrivateEndpoint, options?: ManagedPrivateEndpointsCreateOrUpdateOptionalParams): Promise<ManagedPrivateEndpointsCreateOrUpdateResponse>;
    /**
     * Updates a managed private endpoint.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param managedPrivateEndpointName The name of the managed private endpoint.
     * @param parameters The managed private endpoint parameters.
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, clusterName: string, managedPrivateEndpointName: string, parameters: ManagedPrivateEndpoint, options?: ManagedPrivateEndpointsUpdateOptionalParams): Promise<SimplePollerLike<OperationState<ManagedPrivateEndpointsUpdateResponse>, ManagedPrivateEndpointsUpdateResponse>>;
    /**
     * Updates a managed private endpoint.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param managedPrivateEndpointName The name of the managed private endpoint.
     * @param parameters The managed private endpoint parameters.
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, clusterName: string, managedPrivateEndpointName: string, parameters: ManagedPrivateEndpoint, options?: ManagedPrivateEndpointsUpdateOptionalParams): Promise<ManagedPrivateEndpointsUpdateResponse>;
    /**
     * Deletes a managed private endpoint.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param managedPrivateEndpointName The name of the managed private endpoint.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, clusterName: string, managedPrivateEndpointName: string, options?: ManagedPrivateEndpointsDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Deletes a managed private endpoint.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param managedPrivateEndpointName The name of the managed private endpoint.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, clusterName: string, managedPrivateEndpointName: string, options?: ManagedPrivateEndpointsDeleteOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface ManagedPrivateEndpointsCheckNameAvailabilityOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the checkNameAvailability operation. */
export declare type ManagedPrivateEndpointsCheckNameAvailabilityResponse = CheckNameResult;

/** The result returned from a managedPrivateEndpoints check name availability request. */
export declare interface ManagedPrivateEndpointsCheckNameRequest {
    /** Managed private endpoint resource name. */
    name: string;
    /** The type of resource, for instance Microsoft.Kusto/clusters/managedPrivateEndpoints. */
    type: "Microsoft.Kusto/clusters/managedPrivateEndpoints";
}

/** Defines headers for ManagedPrivateEndpoints_createOrUpdate operation. */
export declare interface ManagedPrivateEndpointsCreateOrUpdateHeaders {
    /** URL to query the status of the operation. */
    azureAsyncOperation?: string;
}

/** Optional parameters. */
export declare interface ManagedPrivateEndpointsCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export declare type ManagedPrivateEndpointsCreateOrUpdateResponse = ManagedPrivateEndpoint;

/** Defines headers for ManagedPrivateEndpoints_delete operation. */
export declare interface ManagedPrivateEndpointsDeleteHeaders {
    /** URL to query the status of the operation. */
    location?: string;
    /** URL to query the status of the operation. */
    azureAsyncOperation?: string;
}

/** Optional parameters. */
export declare interface ManagedPrivateEndpointsDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface ManagedPrivateEndpointsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type ManagedPrivateEndpointsGetResponse = ManagedPrivateEndpoint;

/** Optional parameters. */
export declare interface ManagedPrivateEndpointsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type ManagedPrivateEndpointsListResponse = ManagedPrivateEndpointListResult;

/** Defines headers for ManagedPrivateEndpoints_update operation. */
export declare interface ManagedPrivateEndpointsUpdateHeaders {
    /** URL to query the status of the operation. */
    location?: string;
    /** URL to query the status of the operation. */
    azureAsyncOperation?: string;
}

/** Optional parameters. */
export declare interface ManagedPrivateEndpointsUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the update operation. */
export declare type ManagedPrivateEndpointsUpdateResponse = ManagedPrivateEndpoint;

/** Represents a properties of a cluster that is part of a migration. */
export declare interface MigrationClusterProperties {
    /**
     * The resource ID of the cluster.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /**
     * The public URL of the cluster.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly uri?: string;
    /**
     * The public data ingestion URL of the cluster.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly dataIngestionUri?: string;
    /**
     * The role of the cluster in the migration process.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly role?: MigrationClusterRole;
}

/**
 * Defines values for MigrationClusterRole. \
 * {@link KnownMigrationClusterRole} can be used interchangeably with MigrationClusterRole,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Source** \
 * **Destination**
 */
export declare type MigrationClusterRole = string;

/** A REST API operation */
export declare interface Operation {
    /** This is of the format {provider}/{resource}/{operation}. */
    name?: string;
    /** The object that describes the operation. */
    display?: OperationDisplay;
    /** The intended executor of the operation. */
    origin?: string;
    /** Properties of the operation. */
    properties?: Record<string, unknown>;
}

/** The object that describes the operation. */
export declare interface OperationDisplay {
    /** Friendly name of the resource provider. */
    provider?: string;
    /** For example: read, write, delete. */
    operation?: string;
    /** The resource type on which the operation is performed. */
    resource?: string;
    /** The friendly name of the operation. */
    description?: string;
}

/** Result of the request to list REST API operations. It contains a list of operations and a URL nextLink to get the next set of results. */
export declare interface OperationListResult {
    /** The list of operations supported by the resource provider. */
    value?: Operation[];
    /** The URL to get the next set of operation list results if there are any. */
    nextLink?: string;
}

/** Operation Result Entity. */
export declare interface OperationResult {
    /**
     * ID of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /**
     * Name of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * status of the Operation result.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly status?: Status;
    /** The operation start time */
    startTime?: Date;
    /** The operation end time */
    endTime?: Date;
    /** Percentage completed. */
    percentComplete?: number;
    /** The code of the error. */
    code?: string;
    /** The error message. */
    message?: string;
    /** The kind of the operation. */
    operationKind?: string;
    /**
     * The provisioned state of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: ProvisioningState;
    /** The state of the operation. */
    operationState?: string;
}

/** Interface representing a Operations. */
export declare interface Operations {
    /**
     * Lists available operations for the Microsoft.Kusto provider.
     * @param options The options parameters.
     */
    list(options?: OperationsListOptionalParams): PagedAsyncIterableIterator<Operation>;
}

/** Optional parameters. */
export declare interface OperationsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export declare interface OperationsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type OperationsListResponse = OperationListResult;

/** Interface representing a OperationsResults. */
export declare interface OperationsResults {
    /**
     * Returns operation results.
     * @param location The name of Azure region.
     * @param operationId The ID of an ongoing async operation.
     * @param options The options parameters.
     */
    get(location: string, operationId: string, options?: OperationsResultsGetOptionalParams): Promise<OperationsResultsGetResponse>;
}

/** Optional parameters. */
export declare interface OperationsResultsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type OperationsResultsGetResponse = OperationResult;

/** Interface representing a OperationsResultsLocation. */
export declare interface OperationsResultsLocation {
    /**
     * Returns operation results.
     * @param location The name of Azure region.
     * @param operationId The ID of an ongoing async operation.
     * @param options The options parameters.
     */
    get(location: string, operationId: string, options?: OperationsResultsLocationGetOptionalParams): Promise<OperationsResultsLocationGetResponse>;
}

/** Defines headers for OperationsResultsLocation_get operation. */
export declare interface OperationsResultsLocationGetHeaders {
    /** URL to query the status of the operation. */
    azureAsyncOperation?: string;
}

/** Optional parameters. */
export declare interface OperationsResultsLocationGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type OperationsResultsLocationGetResponse = OperationsResultsLocationGetHeaders;

/** A class that contains the optimized auto scale definition. */
export declare interface OptimizedAutoscale {
    /** The version of the template defined, for instance 1. */
    version: number;
    /** A boolean value that indicate if the optimized autoscale feature is enabled or not. */
    isEnabled: boolean;
    /** Minimum allowed instances count. */
    minimum: number;
    /** Maximum allowed instances count. */
    maximum: number;
}

/** Endpoints accessed for a common purpose that the Kusto Service Environment requires outbound network access to. */
export declare interface OutboundNetworkDependenciesEndpoint extends ProxyResource {
    /**
     * A unique read-only string that changes whenever the resource is updated.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly etag?: string;
    /** The type of service accessed by the Kusto Service Environment, e.g., Azure Storage, Azure SQL Database, and Azure Active Directory. */
    category?: string;
    /** The endpoints that the Kusto Service Environment reaches the service at. */
    endpoints?: EndpointDependency[];
    /**
     * The provisioned state of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: ProvisioningState;
}

/** Collection of Outbound Environment Endpoints */
export declare interface OutboundNetworkDependenciesEndpointListResult {
    /** Collection of resources. */
    value: OutboundNetworkDependenciesEndpoint[];
    /**
     * Link to next page of resources.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/**
 * Defines values for PrincipalsModificationKind. \
 * {@link KnownPrincipalsModificationKind} can be used interchangeably with PrincipalsModificationKind,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Union** \
 * **Replace** \
 * **None**
 */
export declare type PrincipalsModificationKind = string;

/**
 * Defines values for PrincipalType. \
 * {@link KnownPrincipalType} can be used interchangeably with PrincipalType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **App** \
 * **Group** \
 * **User**
 */
export declare type PrincipalType = string;

/** A private endpoint connection */
export declare interface PrivateEndpointConnection extends ProxyResource {
    /**
     * Metadata pertaining to creation and last modification of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
    /**
     * Private endpoint which the connection belongs to.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly privateEndpoint?: PrivateEndpointProperty;
    /** Connection State of the Private Endpoint Connection. */
    privateLinkServiceConnectionState?: PrivateLinkServiceConnectionStateProperty;
    /**
     * Group id of the private endpoint.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly groupId?: string;
    /**
     * Provisioning state of the private endpoint.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: string;
}

/** A list of private endpoint connections */
export declare interface PrivateEndpointConnectionListResult {
    /** Array of private endpoint connections */
    value?: PrivateEndpointConnection[];
}

/** Interface representing a PrivateEndpointConnections. */
export declare interface PrivateEndpointConnections {
    /**
     * Returns the list of private endpoint connections.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, clusterName: string, options?: PrivateEndpointConnectionsListOptionalParams): PagedAsyncIterableIterator<PrivateEndpointConnection>;
    /**
     * Gets a private endpoint connection.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param privateEndpointConnectionName The name of the private endpoint connection.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, clusterName: string, privateEndpointConnectionName: string, options?: PrivateEndpointConnectionsGetOptionalParams): Promise<PrivateEndpointConnectionsGetResponse>;
    /**
     * Approve or reject a private endpoint connection with a given name.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param privateEndpointConnectionName The name of the private endpoint connection.
     * @param parameters A private endpoint connection
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, clusterName: string, privateEndpointConnectionName: string, parameters: PrivateEndpointConnection, options?: PrivateEndpointConnectionsCreateOrUpdateOptionalParams): Promise<SimplePollerLike<OperationState<PrivateEndpointConnectionsCreateOrUpdateResponse>, PrivateEndpointConnectionsCreateOrUpdateResponse>>;
    /**
     * Approve or reject a private endpoint connection with a given name.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param privateEndpointConnectionName The name of the private endpoint connection.
     * @param parameters A private endpoint connection
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, clusterName: string, privateEndpointConnectionName: string, parameters: PrivateEndpointConnection, options?: PrivateEndpointConnectionsCreateOrUpdateOptionalParams): Promise<PrivateEndpointConnectionsCreateOrUpdateResponse>;
    /**
     * Deletes a private endpoint connection with a given name.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param privateEndpointConnectionName The name of the private endpoint connection.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, clusterName: string, privateEndpointConnectionName: string, options?: PrivateEndpointConnectionsDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Deletes a private endpoint connection with a given name.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param privateEndpointConnectionName The name of the private endpoint connection.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, clusterName: string, privateEndpointConnectionName: string, options?: PrivateEndpointConnectionsDeleteOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface PrivateEndpointConnectionsCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export declare type PrivateEndpointConnectionsCreateOrUpdateResponse = PrivateEndpointConnection;

/** Defines headers for PrivateEndpointConnections_delete operation. */
export declare interface PrivateEndpointConnectionsDeleteHeaders {
    /** URL to query the status of the operation. */
    location?: string;
    /** URL to query the status of the operation. */
    azureAsyncOperation?: string;
}

/** Optional parameters. */
export declare interface PrivateEndpointConnectionsDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface PrivateEndpointConnectionsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type PrivateEndpointConnectionsGetResponse = PrivateEndpointConnection;

/** Optional parameters. */
export declare interface PrivateEndpointConnectionsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type PrivateEndpointConnectionsListResponse = PrivateEndpointConnectionListResult;

/** Private endpoint which the connection belongs to. */
export declare interface PrivateEndpointProperty {
    /**
     * Resource id of the private endpoint.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
}

/** A private link resource */
export declare interface PrivateLinkResource extends Resource {
    /**
     * Metadata pertaining to creation and last modification of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
    /**
     * The private link resource group id.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly groupId?: string;
    /**
     * The private link resource required member names.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly requiredMembers?: string[];
    /**
     * The private link resource required zone names.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly requiredZoneNames?: string[];
}

/** A list of private link resources */
export declare interface PrivateLinkResourceListResult {
    /** Array of private link resources */
    value?: PrivateLinkResource[];
}

/** Interface representing a PrivateLinkResources. */
export declare interface PrivateLinkResources {
    /**
     * Returns the list of private link resources.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, clusterName: string, options?: PrivateLinkResourcesListOptionalParams): PagedAsyncIterableIterator<PrivateLinkResource>;
    /**
     * Gets a private link resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param privateLinkResourceName The name of the private link resource.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, clusterName: string, privateLinkResourceName: string, options?: PrivateLinkResourcesGetOptionalParams): Promise<PrivateLinkResourcesGetResponse>;
}

/** Optional parameters. */
export declare interface PrivateLinkResourcesGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type PrivateLinkResourcesGetResponse = PrivateLinkResource;

/** Optional parameters. */
export declare interface PrivateLinkResourcesListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type PrivateLinkResourcesListResponse = PrivateLinkResourceListResult;

/** Connection State of the Private Endpoint Connection. */
export declare interface PrivateLinkServiceConnectionStateProperty {
    /** The private link service connection status. */
    status?: string;
    /** The private link service connection description. */
    description?: string;
    /**
     * Any action that is required beyond basic workflow (approve/ reject/ disconnect)
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly actionsRequired?: string;
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Running** \
 * **Creating** \
 * **Deleting** \
 * **Succeeded** \
 * **Failed** \
 * **Moving** \
 * **Canceled**
 */
export declare type ProvisioningState = string;

/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */
export declare interface ProxyResource extends Resource {
}

/**
 * Defines values for PublicIPType. \
 * {@link KnownPublicIPType} can be used interchangeably with PublicIPType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **IPv4** \
 * **DualStack**
 */
export declare type PublicIPType = string;

/**
 * Defines values for PublicNetworkAccess. \
 * {@link KnownPublicNetworkAccess} can be used interchangeably with PublicNetworkAccess,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled** \
 * **Disabled**
 */
export declare type PublicNetworkAccess = string;

/** Class representing a read only following database. */
export declare interface ReadOnlyFollowingDatabase extends Database {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    kind: "ReadOnlyFollowing";
    /**
     * The provisioned state of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: ProvisioningState;
    /**
     * The time the data should be kept before it stops being accessible to queries in TimeSpan.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly softDeletePeriod?: string;
    /** The time the data should be kept in cache for fast queries in TimeSpan. */
    hotCachePeriod?: string;
    /**
     * The statistics of the database.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly statistics?: DatabaseStatistics;
    /**
     * The name of the leader cluster
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly leaderClusterResourceId?: string;
    /**
     * The name of the attached database configuration cluster
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly attachedDatabaseConfigurationName?: string;
    /**
     * The principals modification kind of the database
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly principalsModificationKind?: PrincipalsModificationKind;
    /**
     * Table level sharing specifications
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly tableLevelSharingProperties?: TableLevelSharingProperties;
    /**
     * The original database name, before databaseNameOverride or databaseNamePrefix where applied.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly originalDatabaseName?: string;
    /**
     * The origin of the following setup.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly databaseShareOrigin?: DatabaseShareOrigin;
    /**
     * The database suspension details. If the database is suspended, this object contains information related to the database's suspension state.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly suspensionDetails?: SuspensionDetails;
}

/** Class representing a read write database. */
export declare interface ReadWriteDatabase extends Database {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    kind: "ReadWrite";
    /**
     * The provisioned state of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: ProvisioningState;
    /** The time the data should be kept before it stops being accessible to queries in TimeSpan. */
    softDeletePeriod?: string;
    /** The time the data should be kept in cache for fast queries in TimeSpan. */
    hotCachePeriod?: string;
    /**
     * The statistics of the database.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly statistics?: DatabaseStatistics;
    /**
     * Indicates whether the database is followed.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly isFollowed?: boolean;
    /** KeyVault properties for the database encryption. */
    keyVaultProperties?: KeyVaultProperties;
    /**
     * The database suspension details. If the database is suspended, this object contains information related to the database's suspension state.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly suspensionDetails?: SuspensionDetails;
}

/**
 * Defines values for Reason. \
 * {@link KnownReason} can be used interchangeably with Reason,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **AlreadyExists**
 */
export declare type Reason = string;

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export declare interface Resource {
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /**
     * The name of the resource
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
}

/** Describes The SKU capabilities object. */
export declare interface ResourceSkuCapabilities {
    /**
     * An invariant to describe the feature.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * An invariant if the feature is measured by quantity.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: string;
}

/** Describes The zonal capabilities of a SKU. */
export declare interface ResourceSkuZoneDetails {
    /**
     * The set of zones that the SKU is available in with the specified capabilities.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string[];
    /**
     * A list of capabilities that are available for the SKU in the specified list of zones.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly capabilities?: ResourceSkuCapabilities[];
}

/** Class representing a Kusto sandbox custom image. */
export declare interface SandboxCustomImage extends ProxyResource {
    /** The language name, for example Python. */
    language?: Language;
    /** The version of the language. */
    languageVersion?: string;
    /** The requirements file content. */
    requirementsFileContent?: string;
    /**
     * The provisioned state of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: ProvisioningState;
}

/** Interface representing a SandboxCustomImages. */
export declare interface SandboxCustomImages {
    /**
     * Returns the list of the existing sandbox custom images of the given Kusto cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param options The options parameters.
     */
    listByCluster(resourceGroupName: string, clusterName: string, options?: SandboxCustomImagesListByClusterOptionalParams): PagedAsyncIterableIterator<SandboxCustomImage>;
    /**
     * Returns a sandbox custom image
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param sandboxCustomImageName The name of the sandbox custom image.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, clusterName: string, sandboxCustomImageName: string, options?: SandboxCustomImagesGetOptionalParams): Promise<SandboxCustomImagesGetResponse>;
    /**
     * Creates or updates a sandbox custom image.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param sandboxCustomImageName The name of the sandbox custom image.
     * @param parameters The sandbox custom image parameters.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, clusterName: string, sandboxCustomImageName: string, parameters: SandboxCustomImage, options?: SandboxCustomImagesCreateOrUpdateOptionalParams): Promise<SimplePollerLike<OperationState<SandboxCustomImagesCreateOrUpdateResponse>, SandboxCustomImagesCreateOrUpdateResponse>>;
    /**
     * Creates or updates a sandbox custom image.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param sandboxCustomImageName The name of the sandbox custom image.
     * @param parameters The sandbox custom image parameters.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, clusterName: string, sandboxCustomImageName: string, parameters: SandboxCustomImage, options?: SandboxCustomImagesCreateOrUpdateOptionalParams): Promise<SandboxCustomImagesCreateOrUpdateResponse>;
    /**
     * Updates a sandbox custom image.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param sandboxCustomImageName The name of the sandbox custom image.
     * @param parameters The sandbox custom image parameters.
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, clusterName: string, sandboxCustomImageName: string, parameters: SandboxCustomImage, options?: SandboxCustomImagesUpdateOptionalParams): Promise<SimplePollerLike<OperationState<SandboxCustomImagesUpdateResponse>, SandboxCustomImagesUpdateResponse>>;
    /**
     * Updates a sandbox custom image.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param sandboxCustomImageName The name of the sandbox custom image.
     * @param parameters The sandbox custom image parameters.
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, clusterName: string, sandboxCustomImageName: string, parameters: SandboxCustomImage, options?: SandboxCustomImagesUpdateOptionalParams): Promise<SandboxCustomImagesUpdateResponse>;
    /**
     * Deletes a sandbox custom image.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param sandboxCustomImageName The name of the sandbox custom image.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, clusterName: string, sandboxCustomImageName: string, options?: SandboxCustomImagesDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Deletes a sandbox custom image.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param sandboxCustomImageName The name of the sandbox custom image.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, clusterName: string, sandboxCustomImageName: string, options?: SandboxCustomImagesDeleteOptionalParams): Promise<void>;
    /**
     * Checks that the sandbox custom image resource name is valid and is not already in use.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param resourceName The name of the resource.
     * @param options The options parameters.
     */
    checkNameAvailability(resourceGroupName: string, clusterName: string, resourceName: SandboxCustomImagesCheckNameRequest, options?: SandboxCustomImagesCheckNameAvailabilityOptionalParams): Promise<SandboxCustomImagesCheckNameAvailabilityResponse>;
}

/** Optional parameters. */
export declare interface SandboxCustomImagesCheckNameAvailabilityOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the checkNameAvailability operation. */
export declare type SandboxCustomImagesCheckNameAvailabilityResponse = CheckNameResult;

/** The result returned from a sandboxCustomImage check name availability request. */
export declare interface SandboxCustomImagesCheckNameRequest {
    /** Sandbox custom image resource name. */
    name: string;
    /** The type of resource, for instance Microsoft.Kusto/clusters/sandboxCustomImages. */
    type: "Microsoft.Kusto/clusters/sandboxCustomImages";
}

/** Optional parameters. */
export declare interface SandboxCustomImagesCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export declare type SandboxCustomImagesCreateOrUpdateResponse = SandboxCustomImage;

/** Defines headers for SandboxCustomImages_delete operation. */
export declare interface SandboxCustomImagesDeleteHeaders {
    /** URL to query the status of the operation. */
    location?: string;
    /** URL to query the status of the operation. */
    azureAsyncOperation?: string;
}

/** Optional parameters. */
export declare interface SandboxCustomImagesDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface SandboxCustomImagesGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type SandboxCustomImagesGetResponse = SandboxCustomImage;

/** Optional parameters. */
export declare interface SandboxCustomImagesListByClusterOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByCluster operation. */
export declare type SandboxCustomImagesListByClusterResponse = SandboxCustomImagesListResult;

/** The list Kusto sandbox custom images operation response. */
export declare interface SandboxCustomImagesListResult {
    /** Link to the next page of results */
    nextLink?: string;
    /** The list of Kusto sandbox custom images. */
    value?: SandboxCustomImage[];
}

/** Defines headers for SandboxCustomImages_update operation. */
export declare interface SandboxCustomImagesUpdateHeaders {
    /** URL to query the status of the operation. */
    location?: string;
    /** URL to query the status of the operation. */
    azureAsyncOperation?: string;
}

/** Optional parameters. */
export declare interface SandboxCustomImagesUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the update operation. */
export declare type SandboxCustomImagesUpdateResponse = SandboxCustomImage;

/** Class representing a database script. */
export declare interface Script extends ProxyResource {
    /**
     * Metadata pertaining to creation and last modification of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
    /** The url to the KQL script blob file. Must not be used together with scriptContent property */
    scriptUrl?: string;
    /** The SaS token that provide read access to the file which contain the script. Must be provided when using scriptUrl property. */
    scriptUrlSasToken?: string;
    /** The script content. This property should be used when the script is provide inline and not through file in a SA. Must not be used together with scriptUrl and scriptUrlSasToken properties. */
    scriptContent?: string;
    /** A unique string. If changed the script will be applied again. */
    forceUpdateTag?: string;
    /** Flag that indicates whether to continue if one of the command fails. */
    continueOnErrors?: boolean;
    /**
     * The provisioned state of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: ProvisioningState;
}

/** A script name availability request. */
export declare interface ScriptCheckNameRequest {
    /** Script name. */
    name: string;
    /** The type of resource, Microsoft.Kusto/clusters/databases/scripts. */
    type: "Microsoft.Kusto/clusters/databases/scripts";
}

/** The list Kusto database script operation response. */
export declare interface ScriptListResult {
    /** The list of Kusto scripts. */
    value?: Script[];
}

/** Interface representing a Scripts. */
export declare interface Scripts {
    /**
     * Returns the list of database scripts for given database.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param databaseName The name of the database in the Kusto cluster.
     * @param options The options parameters.
     */
    listByDatabase(resourceGroupName: string, clusterName: string, databaseName: string, options?: ScriptsListByDatabaseOptionalParams): PagedAsyncIterableIterator<Script>;
    /**
     * Gets a Kusto cluster database script.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param databaseName The name of the database in the Kusto cluster.
     * @param scriptName The name of the Kusto database script.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, clusterName: string, databaseName: string, scriptName: string, options?: ScriptsGetOptionalParams): Promise<ScriptsGetResponse>;
    /**
     * Creates a Kusto database script.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param databaseName The name of the database in the Kusto cluster.
     * @param scriptName The name of the Kusto database script.
     * @param parameters The Kusto Script parameters contains the KQL to run.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, clusterName: string, databaseName: string, scriptName: string, parameters: Script, options?: ScriptsCreateOrUpdateOptionalParams): Promise<SimplePollerLike<OperationState<ScriptsCreateOrUpdateResponse>, ScriptsCreateOrUpdateResponse>>;
    /**
     * Creates a Kusto database script.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param databaseName The name of the database in the Kusto cluster.
     * @param scriptName The name of the Kusto database script.
     * @param parameters The Kusto Script parameters contains the KQL to run.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, clusterName: string, databaseName: string, scriptName: string, parameters: Script, options?: ScriptsCreateOrUpdateOptionalParams): Promise<ScriptsCreateOrUpdateResponse>;
    /**
     * Updates a database script.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param databaseName The name of the database in the Kusto cluster.
     * @param scriptName The name of the Kusto database script.
     * @param parameters The Kusto Script parameters contains to the KQL to run.
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, clusterName: string, databaseName: string, scriptName: string, parameters: Script, options?: ScriptsUpdateOptionalParams): Promise<SimplePollerLike<OperationState<ScriptsUpdateResponse>, ScriptsUpdateResponse>>;
    /**
     * Updates a database script.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param databaseName The name of the database in the Kusto cluster.
     * @param scriptName The name of the Kusto database script.
     * @param parameters The Kusto Script parameters contains to the KQL to run.
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, clusterName: string, databaseName: string, scriptName: string, parameters: Script, options?: ScriptsUpdateOptionalParams): Promise<ScriptsUpdateResponse>;
    /**
     * Deletes a Kusto database script.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param databaseName The name of the database in the Kusto cluster.
     * @param scriptName The name of the Kusto database script.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, clusterName: string, databaseName: string, scriptName: string, options?: ScriptsDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Deletes a Kusto database script.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param databaseName The name of the database in the Kusto cluster.
     * @param scriptName The name of the Kusto database script.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, clusterName: string, databaseName: string, scriptName: string, options?: ScriptsDeleteOptionalParams): Promise<void>;
    /**
     * Checks that the script name is valid and is not already in use.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param databaseName The name of the database in the Kusto cluster.
     * @param scriptName The name of the script.
     * @param options The options parameters.
     */
    checkNameAvailability(resourceGroupName: string, clusterName: string, databaseName: string, scriptName: ScriptCheckNameRequest, options?: ScriptsCheckNameAvailabilityOptionalParams): Promise<ScriptsCheckNameAvailabilityResponse>;
}

/** Optional parameters. */
export declare interface ScriptsCheckNameAvailabilityOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the checkNameAvailability operation. */
export declare type ScriptsCheckNameAvailabilityResponse = CheckNameResult;

/** Defines headers for Scripts_createOrUpdate operation. */
export declare interface ScriptsCreateOrUpdateHeaders {
    /** URL to query the status of the operation. */
    azureAsyncOperation?: string;
}

/** Optional parameters. */
export declare interface ScriptsCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export declare type ScriptsCreateOrUpdateResponse = Script;

/** Defines headers for Scripts_delete operation. */
export declare interface ScriptsDeleteHeaders {
    /** URL to query the status of the operation. */
    location?: string;
    /** URL to query the status of the operation. */
    azureAsyncOperation?: string;
}

/** Optional parameters. */
export declare interface ScriptsDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface ScriptsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type ScriptsGetResponse = Script;

/** Optional parameters. */
export declare interface ScriptsListByDatabaseOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByDatabase operation. */
export declare type ScriptsListByDatabaseResponse = ScriptListResult;

/** Defines headers for Scripts_update operation. */
export declare interface ScriptsUpdateHeaders {
    /** URL to query the status of the operation. */
    location?: string;
    /** URL to query the status of the operation. */
    azureAsyncOperation?: string;
}

/** Optional parameters. */
export declare interface ScriptsUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the update operation. */
export declare type ScriptsUpdateResponse = Script;

/** The Kusto SKU description of given resource type */
export declare interface SkuDescription {
    /**
     * The resource type
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly resourceType?: string;
    /**
     * The name of the SKU
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * The tier of the SKU
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly tier?: string;
    /**
     * The set of locations that the SKU is available
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly locations?: string[];
    /**
     * Locations and zones
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly locationInfo?: SkuLocationInfoItem[];
    /**
     * The restrictions because of which SKU cannot be used
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly restrictions?: Record<string, unknown>[];
}

/** The list of the EngagementFabric SKU descriptions */
export declare interface SkuDescriptionList {
    /**
     * SKU descriptions
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: SkuDescription[];
}

/** The locations and zones info for SKU. */
export declare interface SkuLocationInfoItem {
    /** The available location of the SKU. */
    location: string;
    /** The available zone of the SKU. */
    zones?: string[];
    /** Gets details of capabilities available to a SKU in specific zones. */
    zoneDetails?: ResourceSkuZoneDetails[];
}

/** Interface representing a Skus. */
export declare interface Skus {
    /**
     * Lists eligible region SKUs for Kusto resource provider by Azure region.
     * @param location The name of Azure region.
     * @param options The options parameters.
     */
    list(location: string, options?: SkusListOptionalParams): PagedAsyncIterableIterator<SkuDescription>;
}

/** Optional parameters. */
export declare interface SkusListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type SkusListResponse = SkuDescriptionList;

/**
 * Defines values for State. \
 * {@link KnownState} can be used interchangeably with State,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Creating** \
 * **Unavailable** \
 * **Running** \
 * **Deleting** \
 * **Deleted** \
 * **Stopping** \
 * **Stopped** \
 * **Starting** \
 * **Updating** \
 * **Migrated**
 */
export declare type State = string;

/**
 * Defines values for Status. \
 * {@link KnownStatus} can be used interchangeably with Status,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded** \
 * **Canceled** \
 * **Failed** \
 * **Running**
 */
export declare type Status = string;

/** The database suspension details. If the database is suspended, this object contains information related to the database's suspension state. */
export declare interface SuspensionDetails {
    /** The starting date and time of the suspension state. */
    suspensionStartDate?: Date;
}

/** Metadata pertaining to creation and last modification of the resource. */
export declare interface SystemData {
    /** The identity that created the resource. */
    createdBy?: string;
    /** The type of identity that created the resource. */
    createdByType?: CreatedByType;
    /** The timestamp of resource creation (UTC). */
    createdAt?: Date;
    /** The identity that last modified the resource. */
    lastModifiedBy?: string;
    /** The type of identity that last modified the resource. */
    lastModifiedByType?: CreatedByType;
    /** The timestamp of resource last modification (UTC) */
    lastModifiedAt?: Date;
}

/** Tables that will be included and excluded in the follower database */
export declare interface TableLevelSharingProperties {
    /** List of tables to include in the follower database */
    tablesToInclude?: string[];
    /** List of tables to exclude from the follower database */
    tablesToExclude?: string[];
    /** List of external tables to include in the follower database */
    externalTablesToInclude?: string[];
    /** List of external tables to exclude from the follower database */
    externalTablesToExclude?: string[];
    /** List of materialized views to include in the follower database */
    materializedViewsToInclude?: string[];
    /** List of materialized views to exclude from the follower database */
    materializedViewsToExclude?: string[];
    /** List of functions to include in the follower database */
    functionsToInclude?: string[];
    /** List of functions to exclude from the follower database */
    functionsToExclude?: string[];
}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export declare interface TrackedResource extends Resource {
    /** Resource tags. */
    tags?: {
        [propertyName: string]: string;
    };
    /** The geo-location where the resource lives */
    location: string;
}

/** Represents a tenant ID that is trusted by the cluster. */
export declare interface TrustedExternalTenant {
    /** GUID representing an external tenant. */
    value?: string;
}

/** Defines values for Type. */
export declare type Type = "Microsoft.Kusto/clusters/databases" | "Microsoft.Kusto/clusters/attachedDatabaseConfigurations";

/** A class that contains virtual network definition. */
export declare interface VirtualNetworkConfiguration {
    /** The subnet resource id. */
    subnetId: string;
    /** Engine service's public IP address resource id. */
    enginePublicIpId: string;
    /** Data management's service public IP address resource id. */
    dataManagementPublicIpId: string;
    /** When enabled, the cluster is deployed into the configured subnet, when disabled it will be removed from the subnet. */
    state?: VnetState;
}

/**
 * Defines values for VnetState. \
 * {@link KnownVnetState} can be used interchangeably with VnetState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled** \
 * **Disabled**
 */
export declare type VnetState = string;

export { }
