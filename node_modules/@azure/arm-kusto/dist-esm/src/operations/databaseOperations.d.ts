import { DatabaseOperations } from "../operationsInterfaces";
import { KustoManagementClient } from "../kustoManagementClient";
import { DatabaseInviteFollowerRequest, DatabaseInviteFollowerOptionalParams, DatabaseInviteFollowerResponse } from "../models";
/** Class containing DatabaseOperations operations. */
export declare class DatabaseOperationsImpl implements DatabaseOperations {
    private readonly client;
    /**
     * Initialize a new instance of the class DatabaseOperations class.
     * @param client Reference to the service client
     */
    constructor(client: KustoManagementClient);
    /**
     * Generates an invitation token that allows attaching a follower database to this database.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param databaseName The name of the database in the Kusto cluster.
     * @param parameters The follower invitation request parameters.
     * @param options The options parameters.
     */
    inviteFollower(resourceGroupName: string, clusterName: string, databaseName: string, parameters: DatabaseInviteFollowerRequest, options?: DatabaseInviteFollowerOptionalParams): Promise<DatabaseInviteFollowerResponse>;
}
//# sourceMappingURL=databaseOperations.d.ts.map