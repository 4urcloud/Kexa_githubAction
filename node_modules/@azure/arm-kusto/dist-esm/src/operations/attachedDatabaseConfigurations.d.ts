import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { AttachedDatabaseConfigurations } from "../operationsInterfaces";
import { KustoManagementClient } from "../kustoManagementClient";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import { AttachedDatabaseConfiguration, AttachedDatabaseConfigurationsListByClusterOptionalParams, AttachedDatabaseConfigurationsCheckNameRequest, AttachedDatabaseConfigurationsCheckNameAvailabilityOptionalParams, AttachedDatabaseConfigurationsCheckNameAvailabilityResponse, AttachedDatabaseConfigurationsGetOptionalParams, AttachedDatabaseConfigurationsGetResponse, AttachedDatabaseConfigurationsCreateOrUpdateOptionalParams, AttachedDatabaseConfigurationsCreateOrUpdateResponse, AttachedDatabaseConfigurationsDeleteOptionalParams } from "../models";
/** Class containing AttachedDatabaseConfigurations operations. */
export declare class AttachedDatabaseConfigurationsImpl implements AttachedDatabaseConfigurations {
    private readonly client;
    /**
     * Initialize a new instance of the class AttachedDatabaseConfigurations class.
     * @param client Reference to the service client
     */
    constructor(client: KustoManagementClient);
    /**
     * Returns the list of attached database configurations of the given Kusto cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param options The options parameters.
     */
    listByCluster(resourceGroupName: string, clusterName: string, options?: AttachedDatabaseConfigurationsListByClusterOptionalParams): PagedAsyncIterableIterator<AttachedDatabaseConfiguration>;
    private listByClusterPagingPage;
    private listByClusterPagingAll;
    /**
     * Checks that the attached database configuration resource name is valid and is not already in use.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param resourceName The name of the resource.
     * @param options The options parameters.
     */
    checkNameAvailability(resourceGroupName: string, clusterName: string, resourceName: AttachedDatabaseConfigurationsCheckNameRequest, options?: AttachedDatabaseConfigurationsCheckNameAvailabilityOptionalParams): Promise<AttachedDatabaseConfigurationsCheckNameAvailabilityResponse>;
    /**
     * Returns the list of attached database configurations of the given Kusto cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param options The options parameters.
     */
    private _listByCluster;
    /**
     * Returns an attached database configuration.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param attachedDatabaseConfigurationName The name of the attached database configuration.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, clusterName: string, attachedDatabaseConfigurationName: string, options?: AttachedDatabaseConfigurationsGetOptionalParams): Promise<AttachedDatabaseConfigurationsGetResponse>;
    /**
     * Creates or updates an attached database configuration.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param attachedDatabaseConfigurationName The name of the attached database configuration.
     * @param parameters The database parameters supplied to the CreateOrUpdate operation.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, clusterName: string, attachedDatabaseConfigurationName: string, parameters: AttachedDatabaseConfiguration, options?: AttachedDatabaseConfigurationsCreateOrUpdateOptionalParams): Promise<SimplePollerLike<OperationState<AttachedDatabaseConfigurationsCreateOrUpdateResponse>, AttachedDatabaseConfigurationsCreateOrUpdateResponse>>;
    /**
     * Creates or updates an attached database configuration.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param attachedDatabaseConfigurationName The name of the attached database configuration.
     * @param parameters The database parameters supplied to the CreateOrUpdate operation.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, clusterName: string, attachedDatabaseConfigurationName: string, parameters: AttachedDatabaseConfiguration, options?: AttachedDatabaseConfigurationsCreateOrUpdateOptionalParams): Promise<AttachedDatabaseConfigurationsCreateOrUpdateResponse>;
    /**
     * Deletes the attached database configuration with the given name.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param attachedDatabaseConfigurationName The name of the attached database configuration.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, clusterName: string, attachedDatabaseConfigurationName: string, options?: AttachedDatabaseConfigurationsDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Deletes the attached database configuration with the given name.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param attachedDatabaseConfigurationName The name of the attached database configuration.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, clusterName: string, attachedDatabaseConfigurationName: string, options?: AttachedDatabaseConfigurationsDeleteOptionalParams): Promise<void>;
}
//# sourceMappingURL=attachedDatabaseConfigurations.d.ts.map