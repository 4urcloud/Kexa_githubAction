import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SandboxCustomImages } from "../operationsInterfaces";
import { KustoManagementClient } from "../kustoManagementClient";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import { SandboxCustomImage, SandboxCustomImagesListByClusterOptionalParams, SandboxCustomImagesGetOptionalParams, SandboxCustomImagesGetResponse, SandboxCustomImagesCreateOrUpdateOptionalParams, SandboxCustomImagesCreateOrUpdateResponse, SandboxCustomImagesUpdateOptionalParams, SandboxCustomImagesUpdateResponse, SandboxCustomImagesDeleteOptionalParams, SandboxCustomImagesCheckNameRequest, SandboxCustomImagesCheckNameAvailabilityOptionalParams, SandboxCustomImagesCheckNameAvailabilityResponse } from "../models";
/** Class containing SandboxCustomImages operations. */
export declare class SandboxCustomImagesImpl implements SandboxCustomImages {
    private readonly client;
    /**
     * Initialize a new instance of the class SandboxCustomImages class.
     * @param client Reference to the service client
     */
    constructor(client: KustoManagementClient);
    /**
     * Returns the list of the existing sandbox custom images of the given Kusto cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param options The options parameters.
     */
    listByCluster(resourceGroupName: string, clusterName: string, options?: SandboxCustomImagesListByClusterOptionalParams): PagedAsyncIterableIterator<SandboxCustomImage>;
    private listByClusterPagingPage;
    private listByClusterPagingAll;
    /**
     * Returns the list of the existing sandbox custom images of the given Kusto cluster.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param options The options parameters.
     */
    private _listByCluster;
    /**
     * Returns a sandbox custom image
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param sandboxCustomImageName The name of the sandbox custom image.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, clusterName: string, sandboxCustomImageName: string, options?: SandboxCustomImagesGetOptionalParams): Promise<SandboxCustomImagesGetResponse>;
    /**
     * Creates or updates a sandbox custom image.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param sandboxCustomImageName The name of the sandbox custom image.
     * @param parameters The sandbox custom image parameters.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, clusterName: string, sandboxCustomImageName: string, parameters: SandboxCustomImage, options?: SandboxCustomImagesCreateOrUpdateOptionalParams): Promise<SimplePollerLike<OperationState<SandboxCustomImagesCreateOrUpdateResponse>, SandboxCustomImagesCreateOrUpdateResponse>>;
    /**
     * Creates or updates a sandbox custom image.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param sandboxCustomImageName The name of the sandbox custom image.
     * @param parameters The sandbox custom image parameters.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, clusterName: string, sandboxCustomImageName: string, parameters: SandboxCustomImage, options?: SandboxCustomImagesCreateOrUpdateOptionalParams): Promise<SandboxCustomImagesCreateOrUpdateResponse>;
    /**
     * Updates a sandbox custom image.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param sandboxCustomImageName The name of the sandbox custom image.
     * @param parameters The sandbox custom image parameters.
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, clusterName: string, sandboxCustomImageName: string, parameters: SandboxCustomImage, options?: SandboxCustomImagesUpdateOptionalParams): Promise<SimplePollerLike<OperationState<SandboxCustomImagesUpdateResponse>, SandboxCustomImagesUpdateResponse>>;
    /**
     * Updates a sandbox custom image.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param sandboxCustomImageName The name of the sandbox custom image.
     * @param parameters The sandbox custom image parameters.
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, clusterName: string, sandboxCustomImageName: string, parameters: SandboxCustomImage, options?: SandboxCustomImagesUpdateOptionalParams): Promise<SandboxCustomImagesUpdateResponse>;
    /**
     * Deletes a sandbox custom image.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param sandboxCustomImageName The name of the sandbox custom image.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, clusterName: string, sandboxCustomImageName: string, options?: SandboxCustomImagesDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Deletes a sandbox custom image.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param sandboxCustomImageName The name of the sandbox custom image.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, clusterName: string, sandboxCustomImageName: string, options?: SandboxCustomImagesDeleteOptionalParams): Promise<void>;
    /**
     * Checks that the sandbox custom image resource name is valid and is not already in use.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param resourceName The name of the resource.
     * @param options The options parameters.
     */
    checkNameAvailability(resourceGroupName: string, clusterName: string, resourceName: SandboxCustomImagesCheckNameRequest, options?: SandboxCustomImagesCheckNameAvailabilityOptionalParams): Promise<SandboxCustomImagesCheckNameAvailabilityResponse>;
}
//# sourceMappingURL=sandboxCustomImages.d.ts.map