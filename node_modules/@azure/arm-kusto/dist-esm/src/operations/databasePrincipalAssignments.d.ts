import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { DatabasePrincipalAssignments } from "../operationsInterfaces";
import { KustoManagementClient } from "../kustoManagementClient";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import { DatabasePrincipalAssignment, DatabasePrincipalAssignmentsListOptionalParams, DatabasePrincipalAssignmentCheckNameRequest, DatabasePrincipalAssignmentsCheckNameAvailabilityOptionalParams, DatabasePrincipalAssignmentsCheckNameAvailabilityResponse, DatabasePrincipalAssignmentsGetOptionalParams, DatabasePrincipalAssignmentsGetResponse, DatabasePrincipalAssignmentsCreateOrUpdateOptionalParams, DatabasePrincipalAssignmentsCreateOrUpdateResponse, DatabasePrincipalAssignmentsDeleteOptionalParams } from "../models";
/** Class containing DatabasePrincipalAssignments operations. */
export declare class DatabasePrincipalAssignmentsImpl implements DatabasePrincipalAssignments {
    private readonly client;
    /**
     * Initialize a new instance of the class DatabasePrincipalAssignments class.
     * @param client Reference to the service client
     */
    constructor(client: KustoManagementClient);
    /**
     * Lists all Kusto cluster database principalAssignments.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param databaseName The name of the database in the Kusto cluster.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, clusterName: string, databaseName: string, options?: DatabasePrincipalAssignmentsListOptionalParams): PagedAsyncIterableIterator<DatabasePrincipalAssignment>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Checks that the database principal assignment is valid and is not already in use.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param databaseName The name of the database in the Kusto cluster.
     * @param principalAssignmentName The name of the resource.
     * @param options The options parameters.
     */
    checkNameAvailability(resourceGroupName: string, clusterName: string, databaseName: string, principalAssignmentName: DatabasePrincipalAssignmentCheckNameRequest, options?: DatabasePrincipalAssignmentsCheckNameAvailabilityOptionalParams): Promise<DatabasePrincipalAssignmentsCheckNameAvailabilityResponse>;
    /**
     * Gets a Kusto cluster database principalAssignment.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param databaseName The name of the database in the Kusto cluster.
     * @param principalAssignmentName The name of the Kusto principalAssignment.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, clusterName: string, databaseName: string, principalAssignmentName: string, options?: DatabasePrincipalAssignmentsGetOptionalParams): Promise<DatabasePrincipalAssignmentsGetResponse>;
    /**
     * Creates a Kusto cluster database principalAssignment.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param databaseName The name of the database in the Kusto cluster.
     * @param principalAssignmentName The name of the Kusto principalAssignment.
     * @param parameters The Kusto principalAssignments parameters supplied for the operation.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, clusterName: string, databaseName: string, principalAssignmentName: string, parameters: DatabasePrincipalAssignment, options?: DatabasePrincipalAssignmentsCreateOrUpdateOptionalParams): Promise<SimplePollerLike<OperationState<DatabasePrincipalAssignmentsCreateOrUpdateResponse>, DatabasePrincipalAssignmentsCreateOrUpdateResponse>>;
    /**
     * Creates a Kusto cluster database principalAssignment.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param databaseName The name of the database in the Kusto cluster.
     * @param principalAssignmentName The name of the Kusto principalAssignment.
     * @param parameters The Kusto principalAssignments parameters supplied for the operation.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, clusterName: string, databaseName: string, principalAssignmentName: string, parameters: DatabasePrincipalAssignment, options?: DatabasePrincipalAssignmentsCreateOrUpdateOptionalParams): Promise<DatabasePrincipalAssignmentsCreateOrUpdateResponse>;
    /**
     * Deletes a Kusto principalAssignment.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param databaseName The name of the database in the Kusto cluster.
     * @param principalAssignmentName The name of the Kusto principalAssignment.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, clusterName: string, databaseName: string, principalAssignmentName: string, options?: DatabasePrincipalAssignmentsDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Deletes a Kusto principalAssignment.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param databaseName The name of the database in the Kusto cluster.
     * @param principalAssignmentName The name of the Kusto principalAssignment.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, clusterName: string, databaseName: string, principalAssignmentName: string, options?: DatabasePrincipalAssignmentsDeleteOptionalParams): Promise<void>;
    /**
     * Lists all Kusto cluster database principalAssignments.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kusto cluster.
     * @param databaseName The name of the database in the Kusto cluster.
     * @param options The options parameters.
     */
    private _list;
}
//# sourceMappingURL=databasePrincipalAssignments.d.ts.map