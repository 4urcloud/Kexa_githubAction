/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import { __assign } from "tslib";
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/commitmentPlansMappers";
import * as Parameters from "../models/parameters";
/** Class representing a CommitmentPlans. */
var CommitmentPlans = /** @class */ (function () {
    /**
     * Create a CommitmentPlans.
     * @param {AzureMLCommitmentPlansManagementClientContext} client Reference to the service client.
     */
    function CommitmentPlans(client) {
        this.client = client;
    }
    CommitmentPlans.prototype.get = function (resourceGroupName, commitmentPlanName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            commitmentPlanName: commitmentPlanName,
            options: options
        }, getOperationSpec, callback);
    };
    CommitmentPlans.prototype.createOrUpdate = function (createOrUpdatePayload, resourceGroupName, commitmentPlanName, options, callback) {
        return this.client.sendOperationRequest({
            createOrUpdatePayload: createOrUpdatePayload,
            resourceGroupName: resourceGroupName,
            commitmentPlanName: commitmentPlanName,
            options: options
        }, createOrUpdateOperationSpec, callback);
    };
    CommitmentPlans.prototype.remove = function (resourceGroupName, commitmentPlanName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            commitmentPlanName: commitmentPlanName,
            options: options
        }, removeOperationSpec, callback);
    };
    CommitmentPlans.prototype.patch = function (patchPayload, resourceGroupName, commitmentPlanName, options, callback) {
        return this.client.sendOperationRequest({
            patchPayload: patchPayload,
            resourceGroupName: resourceGroupName,
            commitmentPlanName: commitmentPlanName,
            options: options
        }, patchOperationSpec, callback);
    };
    CommitmentPlans.prototype.list = function (options, callback) {
        return this.client.sendOperationRequest({
            options: options
        }, listOperationSpec, callback);
    };
    CommitmentPlans.prototype.listInResourceGroup = function (resourceGroupName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            options: options
        }, listInResourceGroupOperationSpec, callback);
    };
    CommitmentPlans.prototype.listNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listNextOperationSpec, callback);
    };
    CommitmentPlans.prototype.listInResourceGroupNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listInResourceGroupNextOperationSpec, callback);
    };
    return CommitmentPlans;
}());
export { CommitmentPlans };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var getOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/commitmentPlans/{commitmentPlanName}",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.commitmentPlanName
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.CommitmentPlan
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var createOrUpdateOperationSpec = {
    httpMethod: "PUT",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/commitmentPlans/{commitmentPlanName}",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.commitmentPlanName
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: "createOrUpdatePayload",
        mapper: __assign(__assign({}, Mappers.CommitmentPlan), { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.CommitmentPlan
        },
        201: {
            bodyMapper: Mappers.CommitmentPlan
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var removeOperationSpec = {
    httpMethod: "DELETE",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/commitmentPlans/{commitmentPlanName}",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.commitmentPlanName
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {},
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var patchOperationSpec = {
    httpMethod: "PATCH",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/commitmentPlans/{commitmentPlanName}",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.commitmentPlanName
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: "patchPayload",
        mapper: __assign(__assign({}, Mappers.CommitmentPlanPatchPayload), { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.CommitmentPlan
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/providers/Microsoft.MachineLearning/commitmentPlans",
    urlParameters: [
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.skipToken,
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.CommitmentPlanListResult
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listInResourceGroupOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/commitmentPlans",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName
    ],
    queryParameters: [
        Parameters.skipToken,
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.CommitmentPlanListResult
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.CommitmentPlanListResult
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listInResourceGroupNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.CommitmentPlanListResult
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
//# sourceMappingURL=commitmentPlans.js.map