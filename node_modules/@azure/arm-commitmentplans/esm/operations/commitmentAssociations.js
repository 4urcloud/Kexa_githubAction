/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import { __assign } from "tslib";
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/commitmentAssociationsMappers";
import * as Parameters from "../models/parameters";
/** Class representing a CommitmentAssociations. */
var CommitmentAssociations = /** @class */ (function () {
    /**
     * Create a CommitmentAssociations.
     * @param {AzureMLCommitmentPlansManagementClientContext} client Reference to the service client.
     */
    function CommitmentAssociations(client) {
        this.client = client;
    }
    CommitmentAssociations.prototype.get = function (resourceGroupName, commitmentPlanName, commitmentAssociationName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            commitmentPlanName: commitmentPlanName,
            commitmentAssociationName: commitmentAssociationName,
            options: options
        }, getOperationSpec, callback);
    };
    CommitmentAssociations.prototype.list = function (resourceGroupName, commitmentPlanName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            commitmentPlanName: commitmentPlanName,
            options: options
        }, listOperationSpec, callback);
    };
    CommitmentAssociations.prototype.move = function (resourceGroupName, commitmentPlanName, commitmentAssociationName, movePayload, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            commitmentPlanName: commitmentPlanName,
            commitmentAssociationName: commitmentAssociationName,
            movePayload: movePayload,
            options: options
        }, moveOperationSpec, callback);
    };
    CommitmentAssociations.prototype.listNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listNextOperationSpec, callback);
    };
    return CommitmentAssociations;
}());
export { CommitmentAssociations };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var getOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/commitmentPlans/{commitmentPlanName}/commitmentAssociations/{commitmentAssociationName}",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.commitmentPlanName,
        Parameters.commitmentAssociationName
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.CommitmentAssociation
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/commitmentPlans/{commitmentPlanName}/commitmentAssociations",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.commitmentPlanName
    ],
    queryParameters: [
        Parameters.skipToken,
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.CommitmentAssociationListResult
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var moveOperationSpec = {
    httpMethod: "POST",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/commitmentPlans/{commitmentPlanName}/commitmentAssociations/{commitmentAssociationName}/move",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.commitmentPlanName,
        Parameters.commitmentAssociationName
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: "movePayload",
        mapper: __assign(__assign({}, Mappers.MoveCommitmentAssociationRequest), { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.CommitmentAssociation
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.CommitmentAssociationListResult
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
//# sourceMappingURL=commitmentAssociations.js.map