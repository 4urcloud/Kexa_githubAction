/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import { __assign } from "tslib";
import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
export var CloudError = CloudErrorMapper;
export var BaseResource = BaseResourceMapper;
export var Resource = {
    serializedName: "Resource",
    type: {
        name: "Composite",
        className: "Resource",
        modelProperties: {
            id: {
                readOnly: true,
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            name: {
                readOnly: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            type: {
                readOnly: true,
                serializedName: "type",
                type: {
                    name: "String"
                }
            },
            location: {
                required: true,
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export var Workspace = {
    serializedName: "Workspace",
    type: {
        name: "Composite",
        className: "Workspace",
        modelProperties: __assign(__assign({}, Resource.type.modelProperties), { description: {
                serializedName: "properties.description",
                type: {
                    name: "String"
                }
            }, accountId: {
                readOnly: true,
                serializedName: "properties.accountId",
                type: {
                    name: "String"
                }
            }, workspaceId: {
                readOnly: true,
                serializedName: "properties.workspaceId",
                type: {
                    name: "String"
                }
            }, friendlyName: {
                required: true,
                serializedName: "properties.friendlyName",
                type: {
                    name: "String"
                }
            }, creationDate: {
                readOnly: true,
                serializedName: "properties.creationDate",
                type: {
                    name: "DateTime"
                }
            }, provisioningState: {
                readOnly: true,
                serializedName: "properties.provisioningState",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Creating",
                        "Succeeded",
                        "Updating",
                        "Deleting",
                        "Failed"
                    ]
                }
            } })
    }
};
export var WorkspaceUpdateParameters = {
    serializedName: "WorkspaceUpdateParameters",
    type: {
        name: "Composite",
        className: "WorkspaceUpdateParameters",
        modelProperties: {
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            friendlyName: {
                serializedName: "properties.friendlyName",
                type: {
                    name: "String"
                }
            },
            description: {
                serializedName: "properties.description",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var Project = {
    serializedName: "Project",
    type: {
        name: "Composite",
        className: "Project",
        modelProperties: __assign(__assign({}, Resource.type.modelProperties), { description: {
                serializedName: "properties.description",
                type: {
                    name: "String"
                }
            }, accountId: {
                readOnly: true,
                serializedName: "properties.accountId",
                type: {
                    name: "String"
                }
            }, workspaceId: {
                readOnly: true,
                serializedName: "properties.workspaceId",
                type: {
                    name: "String"
                }
            }, projectId: {
                readOnly: true,
                serializedName: "properties.projectId",
                type: {
                    name: "String"
                }
            }, gitrepo: {
                serializedName: "properties.gitrepo",
                type: {
                    name: "String"
                }
            }, friendlyName: {
                required: true,
                serializedName: "properties.friendlyName",
                type: {
                    name: "String"
                }
            }, creationDate: {
                readOnly: true,
                serializedName: "properties.creationDate",
                type: {
                    name: "DateTime"
                }
            }, provisioningState: {
                readOnly: true,
                serializedName: "properties.provisioningState",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Creating",
                        "Succeeded",
                        "Updating",
                        "Deleting",
                        "Failed"
                    ]
                }
            } })
    }
};
export var ProjectUpdateParameters = {
    serializedName: "ProjectUpdateParameters",
    type: {
        name: "Composite",
        className: "ProjectUpdateParameters",
        modelProperties: {
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            friendlyName: {
                serializedName: "properties.friendlyName",
                type: {
                    name: "String"
                }
            },
            description: {
                serializedName: "properties.description",
                type: {
                    name: "String"
                }
            },
            gitrepo: {
                serializedName: "properties.gitrepo",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ErrorResponse = {
    serializedName: "ErrorResponse",
    type: {
        name: "Composite",
        className: "ErrorResponse",
        modelProperties: {
            code: {
                required: true,
                serializedName: "code",
                type: {
                    name: "String"
                }
            },
            message: {
                required: true,
                serializedName: "message",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var StorageAccountProperties = {
    serializedName: "StorageAccountProperties",
    type: {
        name: "Composite",
        className: "StorageAccountProperties",
        modelProperties: {
            storageAccountId: {
                required: true,
                serializedName: "storageAccountId",
                type: {
                    name: "String"
                }
            },
            accessKey: {
                required: true,
                serializedName: "accessKey",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var Account = {
    serializedName: "Account",
    type: {
        name: "Composite",
        className: "Account",
        modelProperties: __assign(__assign({}, Resource.type.modelProperties), { vsoAccountId: {
                required: true,
                serializedName: "properties.vsoAccountId",
                type: {
                    name: "String"
                }
            }, accountId: {
                readOnly: true,
                serializedName: "properties.accountId",
                type: {
                    name: "String"
                }
            }, description: {
                serializedName: "properties.description",
                type: {
                    name: "String"
                }
            }, friendlyName: {
                serializedName: "properties.friendlyName",
                type: {
                    name: "String"
                }
            }, keyVaultId: {
                required: true,
                serializedName: "properties.keyVaultId",
                type: {
                    name: "String"
                }
            }, seats: {
                serializedName: "properties.seats",
                type: {
                    name: "String"
                }
            }, discoveryUri: {
                readOnly: true,
                serializedName: "properties.discoveryUri",
                type: {
                    name: "String"
                }
            }, creationDate: {
                readOnly: true,
                serializedName: "properties.creationDate",
                type: {
                    name: "DateTime"
                }
            }, storageAccount: {
                required: true,
                serializedName: "properties.storageAccount",
                type: {
                    name: "Composite",
                    className: "StorageAccountProperties"
                }
            }, provisioningState: {
                readOnly: true,
                serializedName: "properties.provisioningState",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Creating",
                        "Succeeded",
                        "Updating",
                        "Deleting",
                        "Failed"
                    ]
                }
            } })
    }
};
export var AccountUpdateParameters = {
    serializedName: "AccountUpdateParameters",
    type: {
        name: "Composite",
        className: "AccountUpdateParameters",
        modelProperties: {
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            description: {
                serializedName: "properties.description",
                type: {
                    name: "String"
                }
            },
            friendlyName: {
                serializedName: "properties.friendlyName",
                type: {
                    name: "String"
                }
            },
            seats: {
                serializedName: "properties.seats",
                type: {
                    name: "String"
                }
            },
            storageAccountKey: {
                serializedName: "properties.storageAccountKey",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var OperationDisplay = {
    serializedName: "Operation_display",
    type: {
        name: "Composite",
        className: "OperationDisplay",
        modelProperties: {
            provider: {
                serializedName: "provider",
                type: {
                    name: "String"
                }
            },
            resource: {
                serializedName: "resource",
                type: {
                    name: "String"
                }
            },
            operation: {
                serializedName: "operation",
                type: {
                    name: "String"
                }
            },
            description: {
                serializedName: "description",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var Operation = {
    serializedName: "Operation",
    type: {
        name: "Composite",
        className: "Operation",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            display: {
                serializedName: "display",
                type: {
                    name: "Composite",
                    className: "OperationDisplay"
                }
            }
        }
    }
};
export var OperationListResult = {
    serializedName: "OperationListResult",
    type: {
        name: "Composite",
        className: "OperationListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Operation"
                        }
                    }
                }
            }
        }
    }
};
export var AccountListResult = {
    serializedName: "AccountListResult",
    type: {
        name: "Composite",
        className: "AccountListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Account"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var WorkspaceListResult = {
    serializedName: "WorkspaceListResult",
    type: {
        name: "Composite",
        className: "WorkspaceListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Workspace"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ProjectListResult = {
    serializedName: "ProjectListResult",
    type: {
        name: "Composite",
        className: "ProjectListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Project"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
//# sourceMappingURL=mappers.js.map