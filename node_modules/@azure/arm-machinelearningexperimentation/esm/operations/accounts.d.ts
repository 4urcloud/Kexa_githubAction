import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { MLTeamAccountManagementClientContext } from "../mLTeamAccountManagementClientContext";
/** Class representing a Accounts. */
export declare class Accounts {
    private readonly client;
    /**
     * Create a Accounts.
     * @param {MLTeamAccountManagementClientContext} client Reference to the service client.
     */
    constructor(client: MLTeamAccountManagementClientContext);
    /**
     * Gets the properties of the specified machine learning team account.
     * @param resourceGroupName The name of the resource group to which the machine learning team
     * account belongs.
     * @param accountName The name of the machine learning team account.
     * @param [options] The optional parameters
     * @returns Promise<Models.AccountsGetResponse>
     */
    get(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase): Promise<Models.AccountsGetResponse>;
    /**
     * @param resourceGroupName The name of the resource group to which the machine learning team
     * account belongs.
     * @param accountName The name of the machine learning team account.
     * @param callback The callback
     */
    get(resourceGroupName: string, accountName: string, callback: msRest.ServiceCallback<Models.Account>): void;
    /**
     * @param resourceGroupName The name of the resource group to which the machine learning team
     * account belongs.
     * @param accountName The name of the machine learning team account.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, accountName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Account>): void;
    /**
     * Creates or updates a team account with the specified parameters.
     * @param resourceGroupName The name of the resource group to which the machine learning team
     * account belongs.
     * @param accountName The name of the machine learning team account.
     * @param parameters The parameters for creating or updating a machine learning team account.
     * @param [options] The optional parameters
     * @returns Promise<Models.AccountsCreateOrUpdateResponse>
     */
    createOrUpdate(resourceGroupName: string, accountName: string, parameters: Models.Account, options?: msRest.RequestOptionsBase): Promise<Models.AccountsCreateOrUpdateResponse>;
    /**
     * @param resourceGroupName The name of the resource group to which the machine learning team
     * account belongs.
     * @param accountName The name of the machine learning team account.
     * @param parameters The parameters for creating or updating a machine learning team account.
     * @param callback The callback
     */
    createOrUpdate(resourceGroupName: string, accountName: string, parameters: Models.Account, callback: msRest.ServiceCallback<Models.Account>): void;
    /**
     * @param resourceGroupName The name of the resource group to which the machine learning team
     * account belongs.
     * @param accountName The name of the machine learning team account.
     * @param parameters The parameters for creating or updating a machine learning team account.
     * @param options The optional parameters
     * @param callback The callback
     */
    createOrUpdate(resourceGroupName: string, accountName: string, parameters: Models.Account, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Account>): void;
    /**
     * Deletes a machine learning team account.
     * @param resourceGroupName The name of the resource group to which the machine learning team
     * account belongs.
     * @param accountName The name of the machine learning team account.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName The name of the resource group to which the machine learning team
     * account belongs.
     * @param accountName The name of the machine learning team account.
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, accountName: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName The name of the resource group to which the machine learning team
     * account belongs.
     * @param accountName The name of the machine learning team account.
     * @param options The optional parameters
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, accountName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Updates a machine learning team account with the specified parameters.
     * @param resourceGroupName The name of the resource group to which the machine learning team
     * account belongs.
     * @param accountName The name of the machine learning team account.
     * @param parameters The parameters for updating a machine learning team account.
     * @param [options] The optional parameters
     * @returns Promise<Models.AccountsUpdateResponse>
     */
    update(resourceGroupName: string, accountName: string, parameters: Models.AccountUpdateParameters, options?: msRest.RequestOptionsBase): Promise<Models.AccountsUpdateResponse>;
    /**
     * @param resourceGroupName The name of the resource group to which the machine learning team
     * account belongs.
     * @param accountName The name of the machine learning team account.
     * @param parameters The parameters for updating a machine learning team account.
     * @param callback The callback
     */
    update(resourceGroupName: string, accountName: string, parameters: Models.AccountUpdateParameters, callback: msRest.ServiceCallback<Models.Account>): void;
    /**
     * @param resourceGroupName The name of the resource group to which the machine learning team
     * account belongs.
     * @param accountName The name of the machine learning team account.
     * @param parameters The parameters for updating a machine learning team account.
     * @param options The optional parameters
     * @param callback The callback
     */
    update(resourceGroupName: string, accountName: string, parameters: Models.AccountUpdateParameters, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Account>): void;
    /**
     * Lists all the available machine learning team accounts under the specified resource group.
     * @param resourceGroupName The name of the resource group to which the machine learning team
     * account belongs.
     * @param [options] The optional parameters
     * @returns Promise<Models.AccountsListByResourceGroupResponse>
     */
    listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.AccountsListByResourceGroupResponse>;
    /**
     * @param resourceGroupName The name of the resource group to which the machine learning team
     * account belongs.
     * @param callback The callback
     */
    listByResourceGroup(resourceGroupName: string, callback: msRest.ServiceCallback<Models.AccountListResult>): void;
    /**
     * @param resourceGroupName The name of the resource group to which the machine learning team
     * account belongs.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByResourceGroup(resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AccountListResult>): void;
    /**
     * Lists all the available machine learning team accounts under the specified subscription.
     * @param [options] The optional parameters
     * @returns Promise<Models.AccountsListResponse>
     */
    list(options?: msRest.RequestOptionsBase): Promise<Models.AccountsListResponse>;
    /**
     * @param callback The callback
     */
    list(callback: msRest.ServiceCallback<Models.AccountListResult>): void;
    /**
     * @param options The optional parameters
     * @param callback The callback
     */
    list(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AccountListResult>): void;
    /**
     * Lists all the available machine learning team accounts under the specified resource group.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.AccountsListByResourceGroupNextResponse>
     */
    listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AccountsListByResourceGroupNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByResourceGroupNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.AccountListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByResourceGroupNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AccountListResult>): void;
    /**
     * Lists all the available machine learning team accounts under the specified subscription.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.AccountsListNextResponse>
     */
    listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AccountsListNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.AccountListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AccountListResult>): void;
}
//# sourceMappingURL=accounts.d.ts.map