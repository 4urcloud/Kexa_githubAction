import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { MLTeamAccountManagementClientContext } from "../mLTeamAccountManagementClientContext";
/** Class representing a Workspaces. */
export declare class Workspaces {
    private readonly client;
    /**
     * Create a Workspaces.
     * @param {MLTeamAccountManagementClientContext} client Reference to the service client.
     */
    constructor(client: MLTeamAccountManagementClientContext);
    /**
     * Gets the properties of the specified machine learning workspace.
     * @param resourceGroupName The name of the resource group to which the machine learning team
     * account belongs.
     * @param accountName The name of the machine learning team account.
     * @param workspaceName The name of the machine learning team account workspace.
     * @param [options] The optional parameters
     * @returns Promise<Models.WorkspacesGetResponse>
     */
    get(resourceGroupName: string, accountName: string, workspaceName: string, options?: msRest.RequestOptionsBase): Promise<Models.WorkspacesGetResponse>;
    /**
     * @param resourceGroupName The name of the resource group to which the machine learning team
     * account belongs.
     * @param accountName The name of the machine learning team account.
     * @param workspaceName The name of the machine learning team account workspace.
     * @param callback The callback
     */
    get(resourceGroupName: string, accountName: string, workspaceName: string, callback: msRest.ServiceCallback<Models.Workspace>): void;
    /**
     * @param resourceGroupName The name of the resource group to which the machine learning team
     * account belongs.
     * @param accountName The name of the machine learning team account.
     * @param workspaceName The name of the machine learning team account workspace.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, accountName: string, workspaceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Workspace>): void;
    /**
     * Creates or updates a machine learning workspace with the specified parameters.
     * @param resourceGroupName The name of the resource group to which the machine learning team
     * account belongs.
     * @param accountName The name of the machine learning team account.
     * @param workspaceName The name of the machine learning team account workspace.
     * @param parameters The parameters for creating or updating a machine learning workspace.
     * @param [options] The optional parameters
     * @returns Promise<Models.WorkspacesCreateOrUpdateResponse>
     */
    createOrUpdate(resourceGroupName: string, accountName: string, workspaceName: string, parameters: Models.Workspace, options?: msRest.RequestOptionsBase): Promise<Models.WorkspacesCreateOrUpdateResponse>;
    /**
     * @param resourceGroupName The name of the resource group to which the machine learning team
     * account belongs.
     * @param accountName The name of the machine learning team account.
     * @param workspaceName The name of the machine learning team account workspace.
     * @param parameters The parameters for creating or updating a machine learning workspace.
     * @param callback The callback
     */
    createOrUpdate(resourceGroupName: string, accountName: string, workspaceName: string, parameters: Models.Workspace, callback: msRest.ServiceCallback<Models.Workspace>): void;
    /**
     * @param resourceGroupName The name of the resource group to which the machine learning team
     * account belongs.
     * @param accountName The name of the machine learning team account.
     * @param workspaceName The name of the machine learning team account workspace.
     * @param parameters The parameters for creating or updating a machine learning workspace.
     * @param options The optional parameters
     * @param callback The callback
     */
    createOrUpdate(resourceGroupName: string, accountName: string, workspaceName: string, parameters: Models.Workspace, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Workspace>): void;
    /**
     * Deletes a machine learning workspace.
     * @param resourceGroupName The name of the resource group to which the machine learning team
     * account belongs.
     * @param accountName The name of the machine learning team account.
     * @param workspaceName The name of the machine learning team account workspace.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroupName: string, accountName: string, workspaceName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName The name of the resource group to which the machine learning team
     * account belongs.
     * @param accountName The name of the machine learning team account.
     * @param workspaceName The name of the machine learning team account workspace.
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, accountName: string, workspaceName: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName The name of the resource group to which the machine learning team
     * account belongs.
     * @param accountName The name of the machine learning team account.
     * @param workspaceName The name of the machine learning team account workspace.
     * @param options The optional parameters
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, accountName: string, workspaceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Updates a machine learning workspace with the specified parameters.
     * @param resourceGroupName The name of the resource group to which the machine learning team
     * account belongs.
     * @param accountName The name of the machine learning team account.
     * @param workspaceName The name of the machine learning team account workspace.
     * @param parameters The parameters for updating a machine learning workspace.
     * @param [options] The optional parameters
     * @returns Promise<Models.WorkspacesUpdateResponse>
     */
    update(resourceGroupName: string, accountName: string, workspaceName: string, parameters: Models.WorkspaceUpdateParameters, options?: msRest.RequestOptionsBase): Promise<Models.WorkspacesUpdateResponse>;
    /**
     * @param resourceGroupName The name of the resource group to which the machine learning team
     * account belongs.
     * @param accountName The name of the machine learning team account.
     * @param workspaceName The name of the machine learning team account workspace.
     * @param parameters The parameters for updating a machine learning workspace.
     * @param callback The callback
     */
    update(resourceGroupName: string, accountName: string, workspaceName: string, parameters: Models.WorkspaceUpdateParameters, callback: msRest.ServiceCallback<Models.Workspace>): void;
    /**
     * @param resourceGroupName The name of the resource group to which the machine learning team
     * account belongs.
     * @param accountName The name of the machine learning team account.
     * @param workspaceName The name of the machine learning team account workspace.
     * @param parameters The parameters for updating a machine learning workspace.
     * @param options The optional parameters
     * @param callback The callback
     */
    update(resourceGroupName: string, accountName: string, workspaceName: string, parameters: Models.WorkspaceUpdateParameters, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Workspace>): void;
    /**
     * Lists all the available machine learning workspaces under the specified team account.
     * @param accountName The name of the machine learning team account.
     * @param resourceGroupName The name of the resource group to which the machine learning team
     * account belongs.
     * @param [options] The optional parameters
     * @returns Promise<Models.WorkspacesListByAccountsResponse>
     */
    listByAccounts(accountName: string, resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.WorkspacesListByAccountsResponse>;
    /**
     * @param accountName The name of the machine learning team account.
     * @param resourceGroupName The name of the resource group to which the machine learning team
     * account belongs.
     * @param callback The callback
     */
    listByAccounts(accountName: string, resourceGroupName: string, callback: msRest.ServiceCallback<Models.WorkspaceListResult>): void;
    /**
     * @param accountName The name of the machine learning team account.
     * @param resourceGroupName The name of the resource group to which the machine learning team
     * account belongs.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByAccounts(accountName: string, resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.WorkspaceListResult>): void;
    /**
     * Lists all the available machine learning workspaces under the specified team account.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.WorkspacesListByAccountsNextResponse>
     */
    listByAccountsNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.WorkspacesListByAccountsNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByAccountsNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.WorkspaceListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByAccountsNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.WorkspaceListResult>): void;
}
//# sourceMappingURL=workspaces.d.ts.map