import * as coreAuth from '@azure/core-auth';
import * as coreClient from '@azure/core-client';
import { OperationState } from '@azure/core-lro';
import { PagedAsyncIterableIterator } from '@azure/core-paging';
import { SimplePollerLike } from '@azure/core-lro';

/** Device Update account details. */
export declare interface Account extends TrackedResource {
    /** The type of identity used for the resource. */
    identity?: ManagedServiceIdentity;
    /**
     * Provisioning state.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: ProvisioningState;
    /**
     * API host name.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly hostName?: string;
    /** Whether or not public network access is allowed for the account. */
    publicNetworkAccess?: PublicNetworkAccess;
    /** List of private endpoint connections associated with the account. */
    privateEndpointConnections?: PrivateEndpointConnection[];
    /** Device Update Sku */
    sku?: Sku;
    /** CMK encryption at rest properties */
    encryption?: Encryption;
    /**
     * Device Update account primary and failover location details
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly locations?: Location_2[];
}

/** List of Accounts. */
export declare interface AccountList {
    /** The link used to get the next page of Accounts list. */
    nextLink?: string;
    /** List of Accounts. */
    value?: Account[];
}

/** Interface representing a Accounts. */
export declare interface Accounts {
    /**
     * Returns list of Accounts.
     * @param options The options parameters.
     */
    listBySubscription(options?: AccountsListBySubscriptionOptionalParams): PagedAsyncIterableIterator<Account>;
    /**
     * Returns list of Accounts.
     * @param resourceGroupName The resource group name.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: AccountsListByResourceGroupOptionalParams): PagedAsyncIterableIterator<Account>;
    /**
     * Returns account details for the given account name.
     * @param resourceGroupName The resource group name.
     * @param accountName Account name.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, accountName: string, options?: AccountsGetOptionalParams): Promise<AccountsGetResponse>;
    /**
     * Checks whether account exists.
     * @param resourceGroupName The resource group name.
     * @param accountName Account name.
     * @param options The options parameters.
     */
    head(resourceGroupName: string, accountName: string, options?: AccountsHeadOptionalParams): Promise<AccountsHeadResponse>;
    /**
     * Creates or updates Account.
     * @param resourceGroupName The resource group name.
     * @param accountName Account name.
     * @param account Account details.
     * @param options The options parameters.
     */
    beginCreate(resourceGroupName: string, accountName: string, account: Account, options?: AccountsCreateOptionalParams): Promise<SimplePollerLike<OperationState<AccountsCreateResponse>, AccountsCreateResponse>>;
    /**
     * Creates or updates Account.
     * @param resourceGroupName The resource group name.
     * @param accountName Account name.
     * @param account Account details.
     * @param options The options parameters.
     */
    beginCreateAndWait(resourceGroupName: string, accountName: string, account: Account, options?: AccountsCreateOptionalParams): Promise<AccountsCreateResponse>;
    /**
     * Deletes account.
     * @param resourceGroupName The resource group name.
     * @param accountName Account name.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, accountName: string, options?: AccountsDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Deletes account.
     * @param resourceGroupName The resource group name.
     * @param accountName Account name.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, accountName: string, options?: AccountsDeleteOptionalParams): Promise<void>;
    /**
     * Updates account's patchable properties
     * @param resourceGroupName The resource group name.
     * @param accountName Account name.
     * @param accountUpdatePayload Updated Account.
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, accountName: string, accountUpdatePayload: AccountUpdate, options?: AccountsUpdateOptionalParams): Promise<SimplePollerLike<OperationState<AccountsUpdateResponse>, AccountsUpdateResponse>>;
    /**
     * Updates account's patchable properties
     * @param resourceGroupName The resource group name.
     * @param accountName Account name.
     * @param accountUpdatePayload Updated Account.
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, accountName: string, accountUpdatePayload: AccountUpdate, options?: AccountsUpdateOptionalParams): Promise<AccountsUpdateResponse>;
}

/** Optional parameters. */
export declare interface AccountsCreateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the create operation. */
export declare type AccountsCreateResponse = Account;

/** Defines headers for Accounts_delete operation. */
export declare interface AccountsDeleteHeaders {
    /** Operation Status Location URI */
    location?: string;
}

/** Optional parameters. */
export declare interface AccountsDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface AccountsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type AccountsGetResponse = Account;

/** Optional parameters. */
export declare interface AccountsHeadOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the head operation. */
export declare type AccountsHeadResponse = {
    body: boolean;
};

/** Optional parameters. */
export declare interface AccountsListByResourceGroupNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroupNext operation. */
export declare type AccountsListByResourceGroupNextResponse = AccountList;

/** Optional parameters. */
export declare interface AccountsListByResourceGroupOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroup operation. */
export declare type AccountsListByResourceGroupResponse = AccountList;

/** Optional parameters. */
export declare interface AccountsListBySubscriptionNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listBySubscriptionNext operation. */
export declare type AccountsListBySubscriptionNextResponse = AccountList;

/** Optional parameters. */
export declare interface AccountsListBySubscriptionOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listBySubscription operation. */
export declare type AccountsListBySubscriptionResponse = AccountList;

/** Optional parameters. */
export declare interface AccountsUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the update operation. */
export declare type AccountsUpdateResponse = Account;

/** Request payload used to update and existing Accounts. */
export declare interface AccountUpdate extends TagUpdate {
    /** The type of identity used for the resource. */
    identity?: ManagedServiceIdentity;
    /** The geo-location where the resource lives */
    location?: string;
}

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Internal**
 */
export declare type ActionType = string;

/**
 * Defines values for AuthenticationType. \
 * {@link KnownAuthenticationType} can be used interchangeably with AuthenticationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **KeyBased**
 */
export declare type AuthenticationType = string;

/** Contains response data for the checkNameAvailability operation. */
export declare type CheckNameAvailabilityOperationResponse = CheckNameAvailabilityResponse;

/** Optional parameters. */
export declare interface CheckNameAvailabilityOptionalParams extends coreClient.OperationOptions {
}

/**
 * Defines values for CheckNameAvailabilityReason. \
 * {@link KnownCheckNameAvailabilityReason} can be used interchangeably with CheckNameAvailabilityReason,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **AlreadyExists**
 */
export declare type CheckNameAvailabilityReason = string;

/** The check availability request body. */
export declare interface CheckNameAvailabilityRequest {
    /** The name of the resource for which availability needs to be checked. */
    name?: string;
    /** The resource type. */
    type?: string;
}

/** The check availability result. */
export declare interface CheckNameAvailabilityResponse {
    /** Indicates if the resource name is available. */
    nameAvailable?: boolean;
    /** The reason why the given name is not available. */
    reason?: CheckNameAvailabilityReason;
    /** Detailed reason why the given name is available. */
    message?: string;
}

/** Private endpoint connection proxy object properties. */
export declare interface ConnectionDetails {
    /**
     * Connection details ID.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /**
     * Private IP address.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly privateIpAddress?: string;
    /**
     * Link ID.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly linkIdentifier?: string;
    /**
     * Group ID.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly groupId?: string;
    /**
     * Member name.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly memberName?: string;
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export declare type CreatedByType = string;

export declare class DeviceUpdate extends coreClient.ServiceClient {
    $host: string;
    apiVersion: string;
    subscriptionId: string;
    /**
     * Initializes a new instance of the DeviceUpdate class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId The Azure subscription ID.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: DeviceUpdateOptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    /**
     * Checks ADU resource name availability.
     * @param request Check Name Availability Request.
     * @param options The options parameters.
     */
    checkNameAvailability(request: CheckNameAvailabilityRequest, options?: CheckNameAvailabilityOptionalParams): Promise<CheckNameAvailabilityOperationResponse>;
    accounts: Accounts;
    instances: Instances;
    privateEndpointConnections: PrivateEndpointConnections;
    privateLinkResources: PrivateLinkResources;
    privateEndpointConnectionProxies: PrivateEndpointConnectionProxies;
    operations: Operations;
}

/** Optional parameters. */
export declare interface DeviceUpdateOptionalParams extends coreClient.ServiceClientOptions {
    /** server parameter */
    $host?: string;
    /** Api Version */
    apiVersion?: string;
    /** Overrides client endpoint. */
    endpoint?: string;
}

/** Customer-initiated diagnostic log collection storage properties */
export declare interface DiagnosticStorageProperties {
    /** Authentication Type */
    authenticationType: AuthenticationType;
    /** ConnectionString of the diagnostic storage account */
    connectionString?: string;
    /** ResourceId of the diagnostic storage account */
    resourceId: string;
}

/** The CMK encryption settings on the Device Update account. */
export declare interface Encryption {
    /** The URI of the key vault */
    keyVaultKeyUri?: string;
    /** The full resourceId of the user assigned identity to be used for key vault access. Identity has to be also assigned to the Account */
    userAssignedIdentity?: string;
}

/** The resource management error additional info. */
export declare interface ErrorAdditionalInfo {
    /**
     * The additional info type.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /**
     * The additional info.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly info?: Record<string, unknown>;
}

/** The error detail. */
export declare interface ErrorDetail {
    /**
     * The error code.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly code?: string;
    /**
     * The error message.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly message?: string;
    /**
     * The error target.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly target?: string;
    /**
     * The error details.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly details?: ErrorDetail[];
    /**
     * The error additional info.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export declare interface ErrorResponse {
    /** The error object. */
    error?: ErrorDetail;
}

/**
 * Given the last `.value` produced by the `byPage` iterator,
 * returns a continuation token that can be used to begin paging from
 * that point later.
 * @param page An object from accessing `value` on the IteratorResult from a `byPage` iterator.
 * @returns The continuation token that can be passed into byPage() during future calls.
 */
export declare function getContinuationToken(page: unknown): string | undefined;

/** Group connectivity details. */
export declare interface GroupConnectivityInformation {
    /**
     * Group ID.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly groupId?: string;
    /**
     * Member name.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly memberName?: string;
    /** List of customer visible FQDNs. */
    customerVisibleFqdns?: string[];
    /**
     * Internal FQDN.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly internalFqdn?: string;
    /** Redirect map ID. */
    redirectMapId?: string;
    /** PrivateLinkService ARM region. */
    privateLinkServiceArmRegion?: string;
}

/**
 * Defines values for GroupIdProvisioningState. \
 * {@link KnownGroupIdProvisioningState} can be used interchangeably with GroupIdProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded** \
 * **Failed** \
 * **Canceled**
 */
export declare type GroupIdProvisioningState = string;

/** The group information for creating a private endpoint on an Account */
export declare interface GroupInformation extends ProxyResource {
    /**
     * The private link resource group id.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly groupId?: string;
    /**
     * The private link resource required member names.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly requiredMembers?: string[];
    /** The private link resource Private link DNS zone name. */
    requiredZoneNames?: string[];
    /**
     * The provisioning state of private link group ID.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: GroupIdProvisioningState;
}

/** The properties for a group information object */
export declare interface GroupInformationProperties extends PrivateLinkResourceProperties {
    /**
     * The provisioning state of private link group ID.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: GroupIdProvisioningState;
}

/** Device Update instance details. */
export declare interface Instance extends TrackedResource {
    /**
     * Provisioning state.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: ProvisioningState;
    /**
     * Parent Device Update Account name which Instance belongs to.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly accountName?: string;
    /** List of IoT Hubs associated with the account. */
    iotHubs?: IotHubSettings[];
    /** Enables or Disables the diagnostic logs collection */
    enableDiagnostics?: boolean;
    /** Customer-initiated diagnostic log collection storage properties */
    diagnosticStorageProperties?: DiagnosticStorageProperties;
}

/** List of Instances. */
export declare interface InstanceList {
    /** The link used to get the next page of Instances list. */
    nextLink?: string;
    /** List of Instances. */
    value?: Instance[];
}

/** Interface representing a Instances. */
export declare interface Instances {
    /**
     * Returns instances for the given account name.
     * @param resourceGroupName The resource group name.
     * @param accountName Account name.
     * @param options The options parameters.
     */
    listByAccount(resourceGroupName: string, accountName: string, options?: InstancesListByAccountOptionalParams): PagedAsyncIterableIterator<Instance>;
    /**
     * Returns instance details for the given instance and account name.
     * @param resourceGroupName The resource group name.
     * @param accountName Account name.
     * @param instanceName Instance name.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, accountName: string, instanceName: string, options?: InstancesGetOptionalParams): Promise<InstancesGetResponse>;
    /**
     * Checks whether instance exists.
     * @param resourceGroupName The resource group name.
     * @param accountName Account name.
     * @param instanceName Instance name.
     * @param options The options parameters.
     */
    head(resourceGroupName: string, accountName: string, instanceName: string, options?: InstancesHeadOptionalParams): Promise<InstancesHeadResponse>;
    /**
     * Creates or updates instance.
     * @param resourceGroupName The resource group name.
     * @param accountName Account name.
     * @param instanceName Instance name.
     * @param instance Instance details.
     * @param options The options parameters.
     */
    beginCreate(resourceGroupName: string, accountName: string, instanceName: string, instance: Instance, options?: InstancesCreateOptionalParams): Promise<SimplePollerLike<OperationState<InstancesCreateResponse>, InstancesCreateResponse>>;
    /**
     * Creates or updates instance.
     * @param resourceGroupName The resource group name.
     * @param accountName Account name.
     * @param instanceName Instance name.
     * @param instance Instance details.
     * @param options The options parameters.
     */
    beginCreateAndWait(resourceGroupName: string, accountName: string, instanceName: string, instance: Instance, options?: InstancesCreateOptionalParams): Promise<InstancesCreateResponse>;
    /**
     * Deletes instance.
     * @param resourceGroupName The resource group name.
     * @param accountName Account name.
     * @param instanceName Instance name.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, accountName: string, instanceName: string, options?: InstancesDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Deletes instance.
     * @param resourceGroupName The resource group name.
     * @param accountName Account name.
     * @param instanceName Instance name.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, accountName: string, instanceName: string, options?: InstancesDeleteOptionalParams): Promise<void>;
    /**
     * Updates instance's tags.
     * @param resourceGroupName The resource group name.
     * @param accountName Account name.
     * @param instanceName Instance name.
     * @param tagUpdatePayload Updated tags.
     * @param options The options parameters.
     */
    update(resourceGroupName: string, accountName: string, instanceName: string, tagUpdatePayload: TagUpdate, options?: InstancesUpdateOptionalParams): Promise<InstancesUpdateResponse>;
}

/** Optional parameters. */
export declare interface InstancesCreateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the create operation. */
export declare type InstancesCreateResponse = Instance;

/** Defines headers for Instances_delete operation. */
export declare interface InstancesDeleteHeaders {
    /** Operation Status Location URI */
    location?: string;
}

/** Optional parameters. */
export declare interface InstancesDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface InstancesGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type InstancesGetResponse = Instance;

/** Optional parameters. */
export declare interface InstancesHeadOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the head operation. */
export declare type InstancesHeadResponse = {
    body: boolean;
};

/** Optional parameters. */
export declare interface InstancesListByAccountNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByAccountNext operation. */
export declare type InstancesListByAccountNextResponse = InstanceList;

/** Optional parameters. */
export declare interface InstancesListByAccountOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByAccount operation. */
export declare type InstancesListByAccountResponse = InstanceList;

/** Optional parameters. */
export declare interface InstancesUpdateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the update operation. */
export declare type InstancesUpdateResponse = Instance;

/** Device Update account integration with IoT Hub settings. */
export declare interface IotHubSettings {
    /** IoTHub resource ID */
    resourceId: string;
}

/** Known values of {@link ActionType} that the service accepts. */
export declare enum KnownActionType {
    /** Internal */
    Internal = "Internal"
}

/** Known values of {@link AuthenticationType} that the service accepts. */
export declare enum KnownAuthenticationType {
    /** KeyBased */
    KeyBased = "KeyBased"
}

/** Known values of {@link CheckNameAvailabilityReason} that the service accepts. */
export declare enum KnownCheckNameAvailabilityReason {
    /** Invalid */
    Invalid = "Invalid",
    /** AlreadyExists */
    AlreadyExists = "AlreadyExists"
}

/** Known values of {@link CreatedByType} that the service accepts. */
export declare enum KnownCreatedByType {
    /** User */
    User = "User",
    /** Application */
    Application = "Application",
    /** ManagedIdentity */
    ManagedIdentity = "ManagedIdentity",
    /** Key */
    Key = "Key"
}

/** Known values of {@link GroupIdProvisioningState} that the service accepts. */
export declare enum KnownGroupIdProvisioningState {
    /** Succeeded */
    Succeeded = "Succeeded",
    /** Failed */
    Failed = "Failed",
    /** Canceled */
    Canceled = "Canceled"
}

/** Known values of {@link ManagedServiceIdentityType} that the service accepts. */
export declare enum KnownManagedServiceIdentityType {
    /** None */
    None = "None",
    /** SystemAssigned */
    SystemAssigned = "SystemAssigned",
    /** UserAssigned */
    UserAssigned = "UserAssigned",
    /** SystemAssignedUserAssigned */
    SystemAssignedUserAssigned = "SystemAssigned,UserAssigned"
}

/** Known values of {@link Origin} that the service accepts. */
export declare enum KnownOrigin {
    /** User */
    User = "user",
    /** System */
    System = "system",
    /** UserSystem */
    UserSystem = "user,system"
}

/** Known values of {@link PrivateEndpointConnectionProvisioningState} that the service accepts. */
export declare enum KnownPrivateEndpointConnectionProvisioningState {
    /** Succeeded */
    Succeeded = "Succeeded",
    /** Creating */
    Creating = "Creating",
    /** Deleting */
    Deleting = "Deleting",
    /** Failed */
    Failed = "Failed"
}

/** Known values of {@link PrivateEndpointConnectionProxyProvisioningState} that the service accepts. */
export declare enum KnownPrivateEndpointConnectionProxyProvisioningState {
    /** Succeeded */
    Succeeded = "Succeeded",
    /** Creating */
    Creating = "Creating",
    /** Deleting */
    Deleting = "Deleting",
    /** Failed */
    Failed = "Failed"
}

/** Known values of {@link PrivateEndpointServiceConnectionStatus} that the service accepts. */
export declare enum KnownPrivateEndpointServiceConnectionStatus {
    /** Pending */
    Pending = "Pending",
    /** Approved */
    Approved = "Approved",
    /** Rejected */
    Rejected = "Rejected"
}

/** Known values of {@link ProvisioningState} that the service accepts. */
export declare enum KnownProvisioningState {
    /** Succeeded */
    Succeeded = "Succeeded",
    /** Deleted */
    Deleted = "Deleted",
    /** Failed */
    Failed = "Failed",
    /** Canceled */
    Canceled = "Canceled",
    /** Accepted */
    Accepted = "Accepted",
    /** Creating */
    Creating = "Creating"
}

/** Known values of {@link PublicNetworkAccess} that the service accepts. */
export declare enum KnownPublicNetworkAccess {
    /** Enabled */
    Enabled = "Enabled",
    /** Disabled */
    Disabled = "Disabled"
}

/** Known values of {@link Role} that the service accepts. */
export declare enum KnownRole {
    /** Primary */
    Primary = "Primary",
    /** Failover */
    Failover = "Failover"
}

/** Known values of {@link Sku} that the service accepts. */
export declare enum KnownSku {
    /** Free */
    Free = "Free",
    /** Standard */
    Standard = "Standard"
}

declare interface Location_2 {
    name?: string;
    /** Whether the location is primary or failover */
    role?: Role;
}
export { Location_2 as Location }

/** Managed service identity (system assigned and/or user assigned identities) */
export declare interface ManagedServiceIdentity {
    /**
     * The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly principalId?: string;
    /**
     * The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly tenantId?: string;
    /** Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed). */
    type: ManagedServiceIdentityType;
    /** The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests. */
    userAssignedIdentities?: {
        [propertyName: string]: UserAssignedIdentity;
    };
}

/**
 * Defines values for ManagedServiceIdentityType. \
 * {@link KnownManagedServiceIdentityType} can be used interchangeably with ManagedServiceIdentityType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **SystemAssigned** \
 * **UserAssigned** \
 * **SystemAssigned,UserAssigned**
 */
export declare type ManagedServiceIdentityType = string;

/** Details of a REST API operation, returned from the Resource Provider Operations API */
export declare interface Operation {
    /**
     * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly isDataAction?: boolean;
    /** Localized display information for this particular operation. */
    display?: OperationDisplay;
    /**
     * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly origin?: Origin;
    /**
     * Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly actionType?: ActionType;
}

/** Localized display information for this particular operation. */
export declare interface OperationDisplay {
    /**
     * The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provider?: string;
    /**
     * The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly resource?: string;
    /**
     * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly operation?: string;
    /**
     * The short, localized friendly description of the operation; suitable for tool tips and detailed views.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly description?: string;
}

/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */
export declare interface OperationListResult {
    /**
     * List of operations supported by the resource provider
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: Operation[];
    /**
     * URL to get the next set of operation list results (if there are any).
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Interface representing a Operations. */
export declare interface Operations {
    /**
     * Returns list of operations for Microsoft.DeviceUpdate resource provider.
     * @param options The options parameters.
     */
    list(options?: OperationsListOptionalParams): PagedAsyncIterableIterator<Operation>;
}

/** Optional parameters. */
export declare interface OperationsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export declare interface OperationsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type OperationsListResponse = OperationListResult;

/**
 * Defines values for Origin. \
 * {@link KnownOrigin} can be used interchangeably with Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **system** \
 * **user,system**
 */
export declare type Origin = string;

/** The Private Endpoint resource. */
export declare interface PrivateEndpoint {
    /**
     * The ARM identifier for Private Endpoint
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
}

/** The Private Endpoint Connection resource. */
export declare interface PrivateEndpointConnection extends Resource {
    /** The resource of private end point. */
    privateEndpoint?: PrivateEndpoint;
    /** A collection of information about the state of the connection between service consumer and provider. */
    privateLinkServiceConnectionState: PrivateLinkServiceConnectionState;
    /** Array of group IDs. */
    groupIds?: string[];
    /**
     * The provisioning state of the private endpoint connection resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: PrivateEndpointConnectionProvisioningState;
}

/** List of private endpoint connection associated with the specified storage account */
export declare interface PrivateEndpointConnectionListResult {
    /** Array of private endpoint connections */
    value?: PrivateEndpointConnection[];
}

/**
 * Defines values for PrivateEndpointConnectionProvisioningState. \
 * {@link KnownPrivateEndpointConnectionProvisioningState} can be used interchangeably with PrivateEndpointConnectionProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded** \
 * **Creating** \
 * **Deleting** \
 * **Failed**
 */
export declare type PrivateEndpointConnectionProvisioningState = string;

/** Interface representing a PrivateEndpointConnectionProxies. */
export declare interface PrivateEndpointConnectionProxies {
    /**
     * (INTERNAL - DO NOT USE) List all private endpoint connection proxies in a device update account.
     * @param resourceGroupName The resource group name.
     * @param accountName Account name.
     * @param options The options parameters.
     */
    listByAccount(resourceGroupName: string, accountName: string, options?: PrivateEndpointConnectionProxiesListByAccountOptionalParams): PagedAsyncIterableIterator<PrivateEndpointConnectionProxy>;
    /**
     * (INTERNAL - DO NOT USE) Validates a private endpoint connection proxy object.
     * @param resourceGroupName The resource group name.
     * @param accountName Account name.
     * @param privateEndpointConnectionProxyId The ID of the private endpoint connection proxy object.
     * @param privateEndpointConnectionProxy The parameters for creating a private endpoint connection
     *                                       proxy.
     * @param options The options parameters.
     */
    validate(resourceGroupName: string, accountName: string, privateEndpointConnectionProxyId: string, privateEndpointConnectionProxy: PrivateEndpointConnectionProxy, options?: PrivateEndpointConnectionProxiesValidateOptionalParams): Promise<void>;
    /**
     * (INTERNAL - DO NOT USE) Updates a private endpoint inside the private endpoint connection proxy
     * object.
     * @param resourceGroupName The resource group name.
     * @param accountName Account name.
     * @param privateEndpointConnectionProxyId The ID of the private endpoint connection proxy object.
     * @param privateEndpointUpdate The parameters for updating a private endpoint connection proxy.
     * @param options The options parameters.
     */
    updatePrivateEndpointProperties(resourceGroupName: string, accountName: string, privateEndpointConnectionProxyId: string, privateEndpointUpdate: PrivateEndpointUpdate, options?: PrivateEndpointConnectionProxiesUpdatePrivateEndpointPropertiesOptionalParams): Promise<void>;
    /**
     * (INTERNAL - DO NOT USE) Get the specified private endpoint connection proxy associated with the
     * device update account.
     * @param resourceGroupName The resource group name.
     * @param accountName Account name.
     * @param privateEndpointConnectionProxyId The ID of the private endpoint connection proxy object.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, accountName: string, privateEndpointConnectionProxyId: string, options?: PrivateEndpointConnectionProxiesGetOptionalParams): Promise<PrivateEndpointConnectionProxiesGetResponse>;
    /**
     * (INTERNAL - DO NOT USE) Creates or updates the specified private endpoint connection proxy resource
     * associated with the device update account.
     * @param resourceGroupName The resource group name.
     * @param accountName Account name.
     * @param privateEndpointConnectionProxyId The ID of the private endpoint connection proxy object.
     * @param privateEndpointConnectionProxy The parameters for creating a private endpoint connection
     *                                       proxy.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, accountName: string, privateEndpointConnectionProxyId: string, privateEndpointConnectionProxy: PrivateEndpointConnectionProxy, options?: PrivateEndpointConnectionProxiesCreateOrUpdateOptionalParams): Promise<SimplePollerLike<OperationState<PrivateEndpointConnectionProxiesCreateOrUpdateResponse>, PrivateEndpointConnectionProxiesCreateOrUpdateResponse>>;
    /**
     * (INTERNAL - DO NOT USE) Creates or updates the specified private endpoint connection proxy resource
     * associated with the device update account.
     * @param resourceGroupName The resource group name.
     * @param accountName Account name.
     * @param privateEndpointConnectionProxyId The ID of the private endpoint connection proxy object.
     * @param privateEndpointConnectionProxy The parameters for creating a private endpoint connection
     *                                       proxy.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, accountName: string, privateEndpointConnectionProxyId: string, privateEndpointConnectionProxy: PrivateEndpointConnectionProxy, options?: PrivateEndpointConnectionProxiesCreateOrUpdateOptionalParams): Promise<PrivateEndpointConnectionProxiesCreateOrUpdateResponse>;
    /**
     * (INTERNAL - DO NOT USE) Deletes the specified private endpoint connection proxy associated with the
     * device update account.
     * @param resourceGroupName The resource group name.
     * @param accountName Account name.
     * @param privateEndpointConnectionProxyId The ID of the private endpoint connection proxy object.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, accountName: string, privateEndpointConnectionProxyId: string, options?: PrivateEndpointConnectionProxiesDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * (INTERNAL - DO NOT USE) Deletes the specified private endpoint connection proxy associated with the
     * device update account.
     * @param resourceGroupName The resource group name.
     * @param accountName Account name.
     * @param privateEndpointConnectionProxyId The ID of the private endpoint connection proxy object.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, accountName: string, privateEndpointConnectionProxyId: string, options?: PrivateEndpointConnectionProxiesDeleteOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface PrivateEndpointConnectionProxiesCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export declare type PrivateEndpointConnectionProxiesCreateOrUpdateResponse = PrivateEndpointConnectionProxy;

/** Defines headers for PrivateEndpointConnectionProxies_delete operation. */
export declare interface PrivateEndpointConnectionProxiesDeleteHeaders {
    /** Operation Status Location URI */
    location?: string;
}

/** Optional parameters. */
export declare interface PrivateEndpointConnectionProxiesDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface PrivateEndpointConnectionProxiesGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type PrivateEndpointConnectionProxiesGetResponse = PrivateEndpointConnectionProxy;

/** Optional parameters. */
export declare interface PrivateEndpointConnectionProxiesListByAccountOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByAccount operation. */
export declare type PrivateEndpointConnectionProxiesListByAccountResponse = PrivateEndpointConnectionProxyListResult;

/** Optional parameters. */
export declare interface PrivateEndpointConnectionProxiesUpdatePrivateEndpointPropertiesOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface PrivateEndpointConnectionProxiesValidateOptionalParams extends coreClient.OperationOptions {
}

/** Private endpoint connection proxy details. */
export declare interface PrivateEndpointConnectionProxy extends ProxyResource, PrivateEndpointConnectionProxyProperties {
    /**
     * The provisioning state of the private endpoint connection proxy resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: PrivateEndpointConnectionProxyProvisioningState;
}

/** The available private endpoint connection proxies for an Account (not to be used by anyone, here because of ARM requirements) */
export declare interface PrivateEndpointConnectionProxyListResult {
    /** The list of available private endpoint connection proxies for an Account */
    value?: PrivateEndpointConnectionProxy[];
    /** The URI that can be used to request the next list of private endpoint connection proxies. */
    nextLink?: string;
}

/** Private endpoint connection proxy object properties. */
export declare interface PrivateEndpointConnectionProxyProperties {
    /**
     * ETag from NRP.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly eTag?: string;
    /** Remote private endpoint details. */
    remotePrivateEndpoint?: RemotePrivateEndpoint;
    /** Operation status. */
    status?: string;
}

/**
 * Defines values for PrivateEndpointConnectionProxyProvisioningState. \
 * {@link KnownPrivateEndpointConnectionProxyProvisioningState} can be used interchangeably with PrivateEndpointConnectionProxyProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded** \
 * **Creating** \
 * **Deleting** \
 * **Failed**
 */
export declare type PrivateEndpointConnectionProxyProvisioningState = string;

/** Interface representing a PrivateEndpointConnections. */
export declare interface PrivateEndpointConnections {
    /**
     * List all private endpoint connections in a device update account.
     * @param resourceGroupName The resource group name.
     * @param accountName Account name.
     * @param options The options parameters.
     */
    listByAccount(resourceGroupName: string, accountName: string, options?: PrivateEndpointConnectionsListByAccountOptionalParams): PagedAsyncIterableIterator<PrivateEndpointConnection>;
    /**
     * Get the specified private endpoint connection associated with the device update account.
     * @param resourceGroupName The resource group name.
     * @param accountName Account name.
     * @param privateEndpointConnectionName The name of the private endpoint connection associated with the
     *                                      Azure resource
     * @param options The options parameters.
     */
    get(resourceGroupName: string, accountName: string, privateEndpointConnectionName: string, options?: PrivateEndpointConnectionsGetOptionalParams): Promise<PrivateEndpointConnectionsGetResponse>;
    /**
     * Update the state of specified private endpoint connection associated with the device update account.
     * @param resourceGroupName The resource group name.
     * @param accountName Account name.
     * @param privateEndpointConnectionName The name of the private endpoint connection associated with the
     *                                      Azure resource
     * @param privateEndpointConnection The parameters for creating a private endpoint connection.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, accountName: string, privateEndpointConnectionName: string, privateEndpointConnection: PrivateEndpointConnection, options?: PrivateEndpointConnectionsCreateOrUpdateOptionalParams): Promise<SimplePollerLike<OperationState<PrivateEndpointConnectionsCreateOrUpdateResponse>, PrivateEndpointConnectionsCreateOrUpdateResponse>>;
    /**
     * Update the state of specified private endpoint connection associated with the device update account.
     * @param resourceGroupName The resource group name.
     * @param accountName Account name.
     * @param privateEndpointConnectionName The name of the private endpoint connection associated with the
     *                                      Azure resource
     * @param privateEndpointConnection The parameters for creating a private endpoint connection.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, accountName: string, privateEndpointConnectionName: string, privateEndpointConnection: PrivateEndpointConnection, options?: PrivateEndpointConnectionsCreateOrUpdateOptionalParams): Promise<PrivateEndpointConnectionsCreateOrUpdateResponse>;
    /**
     * Deletes the specified private endpoint connection associated with the device update account.
     * @param resourceGroupName The resource group name.
     * @param accountName Account name.
     * @param privateEndpointConnectionName The name of the private endpoint connection associated with the
     *                                      Azure resource
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, accountName: string, privateEndpointConnectionName: string, options?: PrivateEndpointConnectionsDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Deletes the specified private endpoint connection associated with the device update account.
     * @param resourceGroupName The resource group name.
     * @param accountName Account name.
     * @param privateEndpointConnectionName The name of the private endpoint connection associated with the
     *                                      Azure resource
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, accountName: string, privateEndpointConnectionName: string, options?: PrivateEndpointConnectionsDeleteOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface PrivateEndpointConnectionsCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export declare type PrivateEndpointConnectionsCreateOrUpdateResponse = PrivateEndpointConnection;

/** Defines headers for PrivateEndpointConnections_delete operation. */
export declare interface PrivateEndpointConnectionsDeleteHeaders {
    /** Operation Status Location URI */
    location?: string;
}

/** Optional parameters. */
export declare interface PrivateEndpointConnectionsDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface PrivateEndpointConnectionsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type PrivateEndpointConnectionsGetResponse = PrivateEndpointConnection;

/** Optional parameters. */
export declare interface PrivateEndpointConnectionsListByAccountOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByAccount operation. */
export declare type PrivateEndpointConnectionsListByAccountResponse = PrivateEndpointConnectionListResult;

/**
 * Defines values for PrivateEndpointServiceConnectionStatus. \
 * {@link KnownPrivateEndpointServiceConnectionStatus} can be used interchangeably with PrivateEndpointServiceConnectionStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Pending** \
 * **Approved** \
 * **Rejected**
 */
export declare type PrivateEndpointServiceConnectionStatus = string;

/** Private endpoint update details. */
export declare interface PrivateEndpointUpdate {
    /** Remote endpoint resource ID. */
    id?: string;
    /** ARM location of the remote private endpoint. */
    location?: string;
    /** Original subscription ID needed by Microsoft.Network. */
    immutableSubscriptionId?: string;
    /** Original resource ID needed by Microsoft.Network. */
    immutableResourceId?: string;
    /** Virtual network traffic tag. */
    vnetTrafficTag?: string;
}

/** The available private link resources for an Account */
export declare interface PrivateLinkResourceListResult {
    /** The list of available private link resources for an Account */
    value?: GroupInformation[];
    /** The URI that can be used to request the next list of private link resources. */
    nextLink?: string;
}

/** Properties of a private link resource. */
export declare interface PrivateLinkResourceProperties {
    /**
     * The private link resource group id.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly groupId?: string;
    /**
     * The private link resource required member names.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly requiredMembers?: string[];
    /** The private link resource Private link DNS zone name. */
    requiredZoneNames?: string[];
}

/** Interface representing a PrivateLinkResources. */
export declare interface PrivateLinkResources {
    /**
     * List all private link resources in a device update account.
     * @param resourceGroupName The resource group name.
     * @param accountName Account name.
     * @param options The options parameters.
     */
    listByAccount(resourceGroupName: string, accountName: string, options?: PrivateLinkResourcesListByAccountOptionalParams): PagedAsyncIterableIterator<GroupInformation>;
    /**
     * Get the specified private link resource associated with the device update account.
     * @param resourceGroupName The resource group name.
     * @param accountName Account name.
     * @param groupId The group ID of the private link resource.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, accountName: string, groupId: string, options?: PrivateLinkResourcesGetOptionalParams): Promise<PrivateLinkResourcesGetResponse>;
}

/** Optional parameters. */
export declare interface PrivateLinkResourcesGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type PrivateLinkResourcesGetResponse = GroupInformation;

/** Optional parameters. */
export declare interface PrivateLinkResourcesListByAccountOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByAccount operation. */
export declare type PrivateLinkResourcesListByAccountResponse = PrivateLinkResourceListResult;

/** Private link service connection details. */
export declare interface PrivateLinkServiceConnection {
    /** Private link service connection name. */
    name?: string;
    /** List of group IDs. */
    groupIds?: string[];
    /** Request message. */
    requestMessage?: string;
}

/** A collection of information about the state of the connection between service consumer and provider. */
export declare interface PrivateLinkServiceConnectionState {
    /** Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service. */
    status?: PrivateEndpointServiceConnectionStatus;
    /** The reason for approval/rejection of the connection. */
    description?: string;
    /** A message indicating if changes on the service provider require any updates on the consumer. */
    actionsRequired?: string;
}

/** Private link service proxy details. */
export declare interface PrivateLinkServiceProxy {
    /** NRP resource ID. */
    id?: string;
    /** Remote private link service connection state */
    remotePrivateLinkServiceConnectionState?: PrivateLinkServiceConnectionState;
    /** Remote private endpoint connection details. */
    remotePrivateEndpointConnection?: PrivateLinkServiceProxyRemotePrivateEndpointConnection;
    /** Group connectivity information. */
    groupConnectivityInformation?: GroupConnectivityInformation[];
}

/** Remote private endpoint connection details. */
export declare interface PrivateLinkServiceProxyRemotePrivateEndpointConnection extends RemotePrivateEndpointConnection {
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded** \
 * **Deleted** \
 * **Failed** \
 * **Canceled** \
 * **Accepted** \
 * **Creating**
 */
export declare type ProvisioningState = string;

/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */
export declare interface ProxyResource extends Resource {
}

/**
 * Defines values for PublicNetworkAccess. \
 * {@link KnownPublicNetworkAccess} can be used interchangeably with PublicNetworkAccess,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled** \
 * **Disabled**
 */
export declare type PublicNetworkAccess = string;

/** Remote private endpoint details. */
export declare interface RemotePrivateEndpoint {
    /** Remote endpoint resource ID. */
    id?: string;
    /** ARM location of the remote private endpoint. */
    location?: string;
    /** Original subscription ID needed by Microsoft.Network. */
    immutableSubscriptionId?: string;
    /** Original resource ID needed by Microsoft.Network. */
    immutableResourceId?: string;
    /** Virtual network traffic tag. */
    vnetTrafficTag?: string;
    /** List of private link service connections that need manual approval. */
    manualPrivateLinkServiceConnections?: PrivateLinkServiceConnection[];
    /** List of automatically approved private link service connections. */
    privateLinkServiceConnections?: PrivateLinkServiceConnection[];
    /** List of private link service proxies. */
    privateLinkServiceProxies?: PrivateLinkServiceProxy[];
    /** List of connection details. */
    connectionDetails?: ConnectionDetails[];
}

/** Remote private endpoint connection details. */
export declare interface RemotePrivateEndpointConnection {
    /**
     * Remote private endpoint connection ID.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export declare interface Resource {
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /**
     * The name of the resource
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
}

/**
 * Defines values for Role. \
 * {@link KnownRole} can be used interchangeably with Role,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Primary** \
 * **Failover**
 */
export declare type Role = string;

/**
 * Defines values for Sku. \
 * {@link KnownSku} can be used interchangeably with Sku,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Free** \
 * **Standard**
 */
export declare type Sku = string;

/** Metadata pertaining to creation and last modification of the resource. */
export declare interface SystemData {
    /** The identity that created the resource. */
    createdBy?: string;
    /** The type of identity that created the resource. */
    createdByType?: CreatedByType;
    /** The timestamp of resource creation (UTC). */
    createdAt?: Date;
    /** The identity that last modified the resource. */
    lastModifiedBy?: string;
    /** The type of identity that last modified the resource. */
    lastModifiedByType?: CreatedByType;
    /** The timestamp of resource last modification (UTC) */
    lastModifiedAt?: Date;
}

/** Request payload used to update an existing resource's tags. */
export declare interface TagUpdate {
    /** List of key value pairs that describe the resource. This will overwrite the existing tags. */
    tags?: {
        [propertyName: string]: string;
    };
}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export declare interface TrackedResource extends Resource {
    /** Resource tags. */
    tags?: {
        [propertyName: string]: string;
    };
    /** The geo-location where the resource lives */
    location: string;
}

/** User assigned identity properties */
export declare interface UserAssignedIdentity {
    /**
     * The principal ID of the assigned identity.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly principalId?: string;
    /**
     * The client ID of the assigned identity.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly clientId?: string;
}

export { }
