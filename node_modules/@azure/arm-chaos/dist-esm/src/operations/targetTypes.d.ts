import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { TargetTypes } from "../operationsInterfaces";
import { ChaosManagementClient } from "../chaosManagementClient";
import { TargetType, TargetTypesListOptionalParams, TargetTypesGetOptionalParams, TargetTypesGetResponse } from "../models";
/** Class containing TargetTypes operations. */
export declare class TargetTypesImpl implements TargetTypes {
    private readonly client;
    /**
     * Initialize a new instance of the class TargetTypes class.
     * @param client Reference to the service client
     */
    constructor(client: ChaosManagementClient);
    /**
     * Get a list of Target Type resources for given location.
     * @param locationName String that represents a Location resource name.
     * @param options The options parameters.
     */
    list(locationName: string, options?: TargetTypesListOptionalParams): PagedAsyncIterableIterator<TargetType>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Get a list of Target Type resources for given location.
     * @param locationName String that represents a Location resource name.
     * @param options The options parameters.
     */
    private _list;
    /**
     * Get a Target Type resources for given location.
     * @param locationName String that represents a Location resource name.
     * @param targetTypeName String that represents a Target Type resource name.
     * @param options The options parameters.
     */
    get(locationName: string, targetTypeName: string, options?: TargetTypesGetOptionalParams): Promise<TargetTypesGetResponse>;
    /**
     * ListNext
     * @param locationName String that represents a Location resource name.
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=targetTypes.d.ts.map