import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Experiments } from "../operationsInterfaces";
import { ChaosManagementClient } from "../chaosManagementClient";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import { Experiment, ExperimentsListAllOptionalParams, ExperimentsListOptionalParams, ExperimentExecution, ExperimentsListAllExecutionsOptionalParams, ExperimentsDeleteOptionalParams, ExperimentsGetOptionalParams, ExperimentsGetResponse, ExperimentsCreateOrUpdateOptionalParams, ExperimentsCreateOrUpdateResponse, ExperimentUpdate, ExperimentsUpdateOptionalParams, ExperimentsUpdateResponse, ExperimentsCancelOptionalParams, ExperimentsStartOptionalParams, ExperimentsGetExecutionOptionalParams, ExperimentsGetExecutionResponse, ExperimentsExecutionDetailsOptionalParams, ExperimentsExecutionDetailsResponse } from "../models";
/** Class containing Experiments operations. */
export declare class ExperimentsImpl implements Experiments {
    private readonly client;
    /**
     * Initialize a new instance of the class Experiments class.
     * @param client Reference to the service client
     */
    constructor(client: ChaosManagementClient);
    /**
     * Get a list of Experiment resources in a subscription.
     * @param options The options parameters.
     */
    listAll(options?: ExperimentsListAllOptionalParams): PagedAsyncIterableIterator<Experiment>;
    private listAllPagingPage;
    private listAllPagingAll;
    /**
     * Get a list of Experiment resources in a resource group.
     * @param resourceGroupName String that represents an Azure resource group.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, options?: ExperimentsListOptionalParams): PagedAsyncIterableIterator<Experiment>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Get a list of executions of an Experiment resource.
     * @param resourceGroupName String that represents an Azure resource group.
     * @param experimentName String that represents a Experiment resource name.
     * @param options The options parameters.
     */
    listAllExecutions(resourceGroupName: string, experimentName: string, options?: ExperimentsListAllExecutionsOptionalParams): PagedAsyncIterableIterator<ExperimentExecution>;
    private listAllExecutionsPagingPage;
    private listAllExecutionsPagingAll;
    /**
     * Get a list of Experiment resources in a subscription.
     * @param options The options parameters.
     */
    private _listAll;
    /**
     * Get a list of Experiment resources in a resource group.
     * @param resourceGroupName String that represents an Azure resource group.
     * @param options The options parameters.
     */
    private _list;
    /**
     * Delete a Experiment resource.
     * @param resourceGroupName String that represents an Azure resource group.
     * @param experimentName String that represents a Experiment resource name.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, experimentName: string, options?: ExperimentsDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Delete a Experiment resource.
     * @param resourceGroupName String that represents an Azure resource group.
     * @param experimentName String that represents a Experiment resource name.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, experimentName: string, options?: ExperimentsDeleteOptionalParams): Promise<void>;
    /**
     * Get a Experiment resource.
     * @param resourceGroupName String that represents an Azure resource group.
     * @param experimentName String that represents a Experiment resource name.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, experimentName: string, options?: ExperimentsGetOptionalParams): Promise<ExperimentsGetResponse>;
    /**
     * Create or update a Experiment resource.
     * @param resourceGroupName String that represents an Azure resource group.
     * @param experimentName String that represents a Experiment resource name.
     * @param experiment Experiment resource to be created or updated.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, experimentName: string, experiment: Experiment, options?: ExperimentsCreateOrUpdateOptionalParams): Promise<SimplePollerLike<OperationState<ExperimentsCreateOrUpdateResponse>, ExperimentsCreateOrUpdateResponse>>;
    /**
     * Create or update a Experiment resource.
     * @param resourceGroupName String that represents an Azure resource group.
     * @param experimentName String that represents a Experiment resource name.
     * @param experiment Experiment resource to be created or updated.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, experimentName: string, experiment: Experiment, options?: ExperimentsCreateOrUpdateOptionalParams): Promise<ExperimentsCreateOrUpdateResponse>;
    /**
     * The operation to update an experiment.
     * @param resourceGroupName String that represents an Azure resource group.
     * @param experimentName String that represents a Experiment resource name.
     * @param experiment Parameters supplied to the Update experiment operation.
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, experimentName: string, experiment: ExperimentUpdate, options?: ExperimentsUpdateOptionalParams): Promise<SimplePollerLike<OperationState<ExperimentsUpdateResponse>, ExperimentsUpdateResponse>>;
    /**
     * The operation to update an experiment.
     * @param resourceGroupName String that represents an Azure resource group.
     * @param experimentName String that represents a Experiment resource name.
     * @param experiment Parameters supplied to the Update experiment operation.
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, experimentName: string, experiment: ExperimentUpdate, options?: ExperimentsUpdateOptionalParams): Promise<ExperimentsUpdateResponse>;
    /**
     * Cancel a running Experiment resource.
     * @param resourceGroupName String that represents an Azure resource group.
     * @param experimentName String that represents a Experiment resource name.
     * @param options The options parameters.
     */
    beginCancel(resourceGroupName: string, experimentName: string, options?: ExperimentsCancelOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Cancel a running Experiment resource.
     * @param resourceGroupName String that represents an Azure resource group.
     * @param experimentName String that represents a Experiment resource name.
     * @param options The options parameters.
     */
    beginCancelAndWait(resourceGroupName: string, experimentName: string, options?: ExperimentsCancelOptionalParams): Promise<void>;
    /**
     * Start a Experiment resource.
     * @param resourceGroupName String that represents an Azure resource group.
     * @param experimentName String that represents a Experiment resource name.
     * @param options The options parameters.
     */
    beginStart(resourceGroupName: string, experimentName: string, options?: ExperimentsStartOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Start a Experiment resource.
     * @param resourceGroupName String that represents an Azure resource group.
     * @param experimentName String that represents a Experiment resource name.
     * @param options The options parameters.
     */
    beginStartAndWait(resourceGroupName: string, experimentName: string, options?: ExperimentsStartOptionalParams): Promise<void>;
    /**
     * Get a list of executions of an Experiment resource.
     * @param resourceGroupName String that represents an Azure resource group.
     * @param experimentName String that represents a Experiment resource name.
     * @param options The options parameters.
     */
    private _listAllExecutions;
    /**
     * Get an execution of an Experiment resource.
     * @param resourceGroupName String that represents an Azure resource group.
     * @param experimentName String that represents a Experiment resource name.
     * @param executionId GUID that represents a Experiment execution detail.
     * @param options The options parameters.
     */
    getExecution(resourceGroupName: string, experimentName: string, executionId: string, options?: ExperimentsGetExecutionOptionalParams): Promise<ExperimentsGetExecutionResponse>;
    /**
     * Execution details of an experiment resource.
     * @param resourceGroupName String that represents an Azure resource group.
     * @param experimentName String that represents a Experiment resource name.
     * @param executionId GUID that represents a Experiment execution detail.
     * @param options The options parameters.
     */
    executionDetails(resourceGroupName: string, experimentName: string, executionId: string, options?: ExperimentsExecutionDetailsOptionalParams): Promise<ExperimentsExecutionDetailsResponse>;
    /**
     * ListAllNext
     * @param nextLink The nextLink from the previous successful call to the ListAll method.
     * @param options The options parameters.
     */
    private _listAllNext;
    /**
     * ListNext
     * @param resourceGroupName String that represents an Azure resource group.
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
    /**
     * ListAllExecutionsNext
     * @param resourceGroupName String that represents an Azure resource group.
     * @param experimentName String that represents a Experiment resource name.
     * @param nextLink The nextLink from the previous successful call to the ListAllExecutions method.
     * @param options The options parameters.
     */
    private _listAllExecutionsNext;
}
//# sourceMappingURL=experiments.d.ts.map