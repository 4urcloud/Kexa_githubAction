import * as coreClient from "@azure/core-client";
import * as coreAuth from "@azure/core-auth";
import { Capabilities, CapabilityTypes, Experiments, OperationStatuses, Operations, TargetTypes, Targets } from "./operationsInterfaces";
import { ChaosManagementClientOptionalParams } from "./models";
export declare class ChaosManagementClient extends coreClient.ServiceClient {
    $host: string;
    apiVersion: string;
    subscriptionId?: string;
    /**
     * Initializes a new instance of the ChaosManagementClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId GUID that represents an Azure subscription ID.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: ChaosManagementClientOptionalParams);
    constructor(credentials: coreAuth.TokenCredential, options?: ChaosManagementClientOptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    capabilities: Capabilities;
    capabilityTypes: CapabilityTypes;
    experiments: Experiments;
    operationStatuses: OperationStatuses;
    operations: Operations;
    targetTypes: TargetTypes;
    targets: Targets;
}
//# sourceMappingURL=chaosManagementClient.d.ts.map