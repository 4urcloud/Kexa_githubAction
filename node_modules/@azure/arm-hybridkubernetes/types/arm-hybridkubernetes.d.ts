import * as coreAuth from '@azure/core-auth';
import * as coreClient from '@azure/core-client';
import { PagedAsyncIterableIterator } from '@azure/core-paging';
import { PollerLike } from '@azure/core-lro';
import { PollOperationState } from '@azure/core-lro';

/**
 * Defines values for AuthenticationMethod. \
 * {@link KnownAuthenticationMethod} can be used interchangeably with AuthenticationMethod,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Token** \
 * **AAD**
 */
export declare type AuthenticationMethod = string;

/** Represents a connected cluster. */
export declare interface ConnectedCluster extends TrackedResource {
    /** The identity of the connected cluster. */
    identity: ConnectedClusterIdentity;
    /**
     * Metadata pertaining to creation and last modification of the resource
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
    /** Base64 encoded public certificate used by the agent to do the initial handshake to the backend services in Azure. */
    agentPublicKeyCertificate: string;
    /**
     * The Kubernetes version of the connected cluster resource
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly kubernetesVersion?: string;
    /**
     * Number of nodes present in the connected cluster resource
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly totalNodeCount?: number;
    /**
     * Number of CPU cores present in the connected cluster resource
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly totalCoreCount?: number;
    /**
     * Version of the agent running on the connected cluster resource
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly agentVersion?: string;
    /** Provisioning state of the connected cluster resource. */
    provisioningState?: ProvisioningState;
    /** The Kubernetes distribution running on this connected cluster. */
    distribution?: string;
    /** The infrastructure on which the Kubernetes cluster represented by this connected cluster is running on. */
    infrastructure?: string;
    /**
     * Connected cluster offering
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly offering?: string;
    /**
     * Expiration time of the managed identity certificate
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly managedIdentityCertificateExpirationTime?: Date;
    /**
     * Time representing the last instance when heart beat was received from the cluster
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly lastConnectivityTime?: Date;
    /**
     * Represents the connectivity status of the connected cluster.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly connectivityStatus?: ConnectivityStatus;
}

/** Optional parameters. */
export declare interface ConnectedClusterCreateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the create operation. */
export declare type ConnectedClusterCreateResponse = ConnectedCluster;

/** Optional parameters. */
export declare interface ConnectedClusterDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface ConnectedClusterGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type ConnectedClusterGetResponse = ConnectedCluster;

/** Identity for the connected cluster. */
export declare interface ConnectedClusterIdentity {
    /**
     * The principal id of connected cluster identity. This property will only be provided for a system assigned identity.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly principalId?: string;
    /**
     * The tenant id associated with the connected cluster. This property will only be provided for a system assigned identity.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly tenantId?: string;
    /** The type of identity used for the connected cluster. The type 'SystemAssigned, includes a system created identity. The type 'None' means no identity is assigned to the connected cluster. */
    type: ResourceIdentityType;
}

/** The paginated list of connected Clusters */
export declare interface ConnectedClusterList {
    /** The list of connected clusters */
    value?: ConnectedCluster[];
    /** The link to fetch the next page of connected cluster */
    nextLink?: string;
}

/** Optional parameters. */
export declare interface ConnectedClusterListByResourceGroupNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroupNext operation. */
export declare type ConnectedClusterListByResourceGroupNextResponse = ConnectedClusterList;

/** Optional parameters. */
export declare interface ConnectedClusterListByResourceGroupOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroup operation. */
export declare type ConnectedClusterListByResourceGroupResponse = ConnectedClusterList;

/** Optional parameters. */
export declare interface ConnectedClusterListBySubscriptionNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listBySubscriptionNext operation. */
export declare type ConnectedClusterListBySubscriptionNextResponse = ConnectedClusterList;

/** Optional parameters. */
export declare interface ConnectedClusterListBySubscriptionOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listBySubscription operation. */
export declare type ConnectedClusterListBySubscriptionResponse = ConnectedClusterList;

/** Optional parameters. */
export declare interface ConnectedClusterListClusterUserCredentialOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listClusterUserCredential operation. */
export declare type ConnectedClusterListClusterUserCredentialResponse = CredentialResults;

/** Interface representing a ConnectedClusterOperations. */
export declare interface ConnectedClusterOperations {
    /**
     * API to enumerate registered connected K8s clusters under a Resource Group
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: ConnectedClusterListByResourceGroupOptionalParams): PagedAsyncIterableIterator<ConnectedCluster>;
    /**
     * API to enumerate registered connected K8s clusters under a Subscription
     * @param options The options parameters.
     */
    listBySubscription(options?: ConnectedClusterListBySubscriptionOptionalParams): PagedAsyncIterableIterator<ConnectedCluster>;
    /**
     * API to register a new Kubernetes cluster and create a tracked resource in Azure Resource Manager
     * (ARM).
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kubernetes cluster on which get is called.
     * @param connectedCluster Parameters supplied to Create a Connected Cluster.
     * @param options The options parameters.
     */
    beginCreate(resourceGroupName: string, clusterName: string, connectedCluster: ConnectedCluster, options?: ConnectedClusterCreateOptionalParams): Promise<PollerLike<PollOperationState<ConnectedClusterCreateResponse>, ConnectedClusterCreateResponse>>;
    /**
     * API to register a new Kubernetes cluster and create a tracked resource in Azure Resource Manager
     * (ARM).
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kubernetes cluster on which get is called.
     * @param connectedCluster Parameters supplied to Create a Connected Cluster.
     * @param options The options parameters.
     */
    beginCreateAndWait(resourceGroupName: string, clusterName: string, connectedCluster: ConnectedCluster, options?: ConnectedClusterCreateOptionalParams): Promise<ConnectedClusterCreateResponse>;
    /**
     * API to update certain properties of the connected cluster resource
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kubernetes cluster on which get is called.
     * @param connectedClusterPatch Parameters supplied to update Connected Cluster.
     * @param options The options parameters.
     */
    update(resourceGroupName: string, clusterName: string, connectedClusterPatch: ConnectedClusterPatch, options?: ConnectedClusterUpdateOptionalParams): Promise<ConnectedClusterUpdateResponse>;
    /**
     * Returns the properties of the specified connected cluster, including name, identity, properties, and
     * additional cluster details.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kubernetes cluster on which get is called.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, clusterName: string, options?: ConnectedClusterGetOptionalParams): Promise<ConnectedClusterGetResponse>;
    /**
     * Delete a connected cluster, removing the tracked resource in Azure Resource Manager (ARM).
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kubernetes cluster on which get is called.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, clusterName: string, options?: ConnectedClusterDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Delete a connected cluster, removing the tracked resource in Azure Resource Manager (ARM).
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kubernetes cluster on which get is called.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, clusterName: string, options?: ConnectedClusterDeleteOptionalParams): Promise<void>;
    /**
     * Gets cluster user credentials of the connected cluster with a specified resource group and name.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param clusterName The name of the Kubernetes cluster on which get is called.
     * @param properties ListClusterUserCredential properties
     * @param options The options parameters.
     */
    listClusterUserCredential(resourceGroupName: string, clusterName: string, properties: ListClusterUserCredentialProperties, options?: ConnectedClusterListClusterUserCredentialOptionalParams): Promise<ConnectedClusterListClusterUserCredentialResponse>;
}

/** Object containing updates for patch operations. */
export declare interface ConnectedClusterPatch {
    /** Resource tags. */
    tags?: {
        [propertyName: string]: string;
    };
    /** Describes the connected cluster resource properties that can be updated during PATCH operation. */
    properties?: Record<string, unknown>;
}

/** Optional parameters. */
export declare interface ConnectedClusterUpdateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the update operation. */
export declare type ConnectedClusterUpdateResponse = ConnectedCluster;

export declare class ConnectedKubernetesClient extends coreClient.ServiceClient {
    $host: string;
    apiVersion: string;
    subscriptionId: string;
    /**
     * Initializes a new instance of the ConnectedKubernetesClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId The ID of the target subscription.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: ConnectedKubernetesClientOptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    connectedClusterOperations: ConnectedClusterOperations;
    operations: Operations;
}

/** Optional parameters. */
export declare interface ConnectedKubernetesClientOptionalParams extends coreClient.ServiceClientOptions {
    /** server parameter */
    $host?: string;
    /** Api Version */
    apiVersion?: string;
    /** Overrides client endpoint. */
    endpoint?: string;
}

/**
 * Defines values for ConnectivityStatus. \
 * {@link KnownConnectivityStatus} can be used interchangeably with ConnectivityStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Connecting** \
 * **Connected** \
 * **Offline** \
 * **Expired**
 */
export declare type ConnectivityStatus = string;

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export declare type CreatedByType = string;

/** The credential result response. */
export declare interface CredentialResult {
    /**
     * The name of the credential.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * Base64-encoded Kubernetes configuration file.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: Uint8Array;
}

/** The list of credential result response. */
export declare interface CredentialResults {
    /**
     * Contains the REP (rendezvous endpoint) and “Sender” access token.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly hybridConnectionConfig?: HybridConnectionConfig;
    /**
     * Base64-encoded Kubernetes configuration file.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly kubeconfigs?: CredentialResult[];
}

/** The resource management error additional info. */
export declare interface ErrorAdditionalInfo {
    /**
     * The additional info type.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /**
     * The additional info.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly info?: Record<string, unknown>;
}

/** The error detail. */
export declare interface ErrorDetail {
    /**
     * The error code.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly code?: string;
    /**
     * The error message.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly message?: string;
    /**
     * The error target.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly target?: string;
    /**
     * The error details.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly details?: ErrorDetail[];
    /**
     * The error additional info.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export declare interface ErrorResponse {
    /** The error object. */
    error?: ErrorDetail;
}

/**
 * Given a result page from a pageable operation, returns a
 * continuation token that can be used to begin paging from
 * that point later.
 * @param page A result object from calling .byPage() on a paged operation.
 * @returns The continuation token that can be passed into byPage().
 */
export declare function getContinuationToken(page: unknown): string | undefined;

/** Contains the REP (rendezvous endpoint) and “Sender” access token. */
export declare interface HybridConnectionConfig {
    /**
     * Timestamp when this token will be expired.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly expirationTime?: number;
    /**
     * Name of the connection
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly hybridConnectionName?: string;
    /**
     * Name of the relay.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly relay?: string;
    /**
     * Sender access token
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly token?: string;
}

/** Known values of {@link AuthenticationMethod} that the service accepts. */
export declare enum KnownAuthenticationMethod {
    /** Token */
    Token = "Token",
    /** AAD */
    AAD = "AAD"
}

/** Known values of {@link ConnectivityStatus} that the service accepts. */
export declare enum KnownConnectivityStatus {
    /** Connecting */
    Connecting = "Connecting",
    /** Connected */
    Connected = "Connected",
    /** Offline */
    Offline = "Offline",
    /** Expired */
    Expired = "Expired"
}

/** Known values of {@link CreatedByType} that the service accepts. */
export declare enum KnownCreatedByType {
    /** User */
    User = "User",
    /** Application */
    Application = "Application",
    /** ManagedIdentity */
    ManagedIdentity = "ManagedIdentity",
    /** Key */
    Key = "Key"
}

/** Known values of {@link LastModifiedByType} that the service accepts. */
export declare enum KnownLastModifiedByType {
    /** User */
    User = "User",
    /** Application */
    Application = "Application",
    /** ManagedIdentity */
    ManagedIdentity = "ManagedIdentity",
    /** Key */
    Key = "Key"
}

/** Known values of {@link ProvisioningState} that the service accepts. */
export declare enum KnownProvisioningState {
    /** Succeeded */
    Succeeded = "Succeeded",
    /** Failed */
    Failed = "Failed",
    /** Canceled */
    Canceled = "Canceled",
    /** Provisioning */
    Provisioning = "Provisioning",
    /** Updating */
    Updating = "Updating",
    /** Deleting */
    Deleting = "Deleting",
    /** Accepted */
    Accepted = "Accepted"
}

/**
 * Defines values for LastModifiedByType. \
 * {@link KnownLastModifiedByType} can be used interchangeably with LastModifiedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export declare type LastModifiedByType = string;

export declare interface ListClusterUserCredentialProperties {
    /** The mode of client authentication. */
    authenticationMethod: AuthenticationMethod;
    /** Boolean value to indicate whether the request is for client side proxy or not */
    clientProxy: boolean;
}

/** The Connected cluster API operation */
export declare interface Operation {
    /**
     * Operation name: {Microsoft.Kubernetes}/{resource}/{operation}
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * The object that represents the operation.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly display?: OperationDisplay;
}

/** The object that represents the operation. */
export declare interface OperationDisplay {
    /** Service provider: Microsoft.connectedClusters */
    provider?: string;
    /** Connected Cluster Resource on which the operation is performed */
    resource?: string;
    /** Operation type: Read, write, delete, etc. */
    operation?: string;
    /** Description of the operation. */
    description?: string;
}

/** The paginated list of connected cluster API operations. */
export declare interface OperationList {
    /**
     * The list of connected cluster API operations.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: Operation[];
    /** The link to fetch the next page of connected cluster API operations. */
    nextLink?: string;
}

/** Interface representing a Operations. */
export declare interface Operations {
    /**
     * Lists all of the available API operations for Connected Cluster resource.
     * @param options The options parameters.
     */
    list(options?: OperationsGetOptionalParams): PagedAsyncIterableIterator<Operation>;
}

/** Optional parameters. */
export declare interface OperationsGetNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getNext operation. */
export declare type OperationsGetNextResponse = OperationList;

/** Optional parameters. */
export declare interface OperationsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type OperationsGetResponse = OperationList;

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded** \
 * **Failed** \
 * **Canceled** \
 * **Provisioning** \
 * **Updating** \
 * **Deleting** \
 * **Accepted**
 */
export declare type ProvisioningState = string;

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export declare interface Resource {
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /**
     * The name of the resource
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
}

/** Defines values for ResourceIdentityType. */
export declare type ResourceIdentityType = "None" | "SystemAssigned";

/** Metadata pertaining to creation and last modification of the resource. */
export declare interface SystemData {
    /** The identity that created the resource. */
    createdBy?: string;
    /** The type of identity that created the resource. */
    createdByType?: CreatedByType;
    /** The timestamp of resource creation (UTC). */
    createdAt?: Date;
    /** The identity that last modified the resource. */
    lastModifiedBy?: string;
    /** The type of identity that last modified the resource. */
    lastModifiedByType?: LastModifiedByType;
    /** The timestamp of resource modification (UTC). */
    lastModifiedAt?: Date;
}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export declare interface TrackedResource extends Resource {
    /** Resource tags. */
    tags?: {
        [propertyName: string]: string;
    };
    /** The geo-location where the resource lives */
    location: string;
}

export { }
