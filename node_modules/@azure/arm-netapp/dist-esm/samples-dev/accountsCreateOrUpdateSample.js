/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { NetAppManagementClient } from "@azure/arm-netapp";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Create or update the specified NetApp account within the resource group
 *
 * @summary Create or update the specified NetApp account within the resource group
 * x-ms-original-file: specification/netapp/resource-manager/Microsoft.NetApp/stable/2023-05-01/examples/Accounts_CreateOrUpdate.json
 */
function accountsCreateOrUpdate() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["NETAPP_SUBSCRIPTION_ID"] ||
            "D633CC2E-722B-4AE1-B636-BBD9E4C60ED9";
        const resourceGroupName = process.env["NETAPP_RESOURCE_GROUP"] || "myRG";
        const accountName = "account1";
        const body = { location: "eastus" };
        const credential = new DefaultAzureCredential();
        const client = new NetAppManagementClient(credential, subscriptionId);
        const result = yield client.accounts.beginCreateOrUpdateAndWait(resourceGroupName, accountName, body);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Create or update the specified NetApp account within the resource group
 *
 * @summary Create or update the specified NetApp account within the resource group
 * x-ms-original-file: specification/netapp/resource-manager/Microsoft.NetApp/stable/2023-05-01/examples/Accounts_CreateOrUpdateAD.json
 */
function accountsCreateOrUpdateWithActiveDirectory() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["NETAPP_SUBSCRIPTION_ID"] ||
            "D633CC2E-722B-4AE1-B636-BBD9E4C60ED9";
        const resourceGroupName = process.env["NETAPP_RESOURCE_GROUP"] || "myRG";
        const accountName = "account1";
        const body = {
            activeDirectories: [
                {
                    aesEncryption: true,
                    dns: "10.10.10.3, 10.10.10.4",
                    domain: "10.10.10.3",
                    ldapOverTLS: false,
                    ldapSigning: false,
                    organizationalUnit: "OU=Engineering",
                    password: "ad_password",
                    site: "SiteName",
                    smbServerName: "SMBServer",
                    username: "ad_user_name"
                }
            ],
            location: "eastus"
        };
        const credential = new DefaultAzureCredential();
        const client = new NetAppManagementClient(credential, subscriptionId);
        const result = yield client.accounts.beginCreateOrUpdateAndWait(resourceGroupName, accountName, body);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        accountsCreateOrUpdate();
        accountsCreateOrUpdateWithActiveDirectory();
    });
}
main().catch(console.error);
//# sourceMappingURL=accountsCreateOrUpdateSample.js.map