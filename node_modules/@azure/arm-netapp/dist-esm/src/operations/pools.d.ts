import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Pools } from "../operationsInterfaces";
import { NetAppManagementClient } from "../netAppManagementClient";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import { CapacityPool, PoolsListOptionalParams, PoolsGetOptionalParams, PoolsGetResponse, PoolsCreateOrUpdateOptionalParams, PoolsCreateOrUpdateResponse, CapacityPoolPatch, PoolsUpdateOptionalParams, PoolsUpdateResponse, PoolsDeleteOptionalParams } from "../models";
/** Class containing Pools operations. */
export declare class PoolsImpl implements Pools {
    private readonly client;
    /**
     * Initialize a new instance of the class Pools class.
     * @param client Reference to the service client
     */
    constructor(client: NetAppManagementClient);
    /**
     * List all capacity pools in the NetApp Account
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of the NetApp account
     * @param options The options parameters.
     */
    list(resourceGroupName: string, accountName: string, options?: PoolsListOptionalParams): PagedAsyncIterableIterator<CapacityPool>;
    private listPagingPage;
    private listPagingAll;
    /**
     * List all capacity pools in the NetApp Account
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of the NetApp account
     * @param options The options parameters.
     */
    private _list;
    /**
     * Get details of the specified capacity pool
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of the NetApp account
     * @param poolName The name of the capacity pool
     * @param options The options parameters.
     */
    get(resourceGroupName: string, accountName: string, poolName: string, options?: PoolsGetOptionalParams): Promise<PoolsGetResponse>;
    /**
     * Create or Update a capacity pool
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of the NetApp account
     * @param poolName The name of the capacity pool
     * @param body Capacity pool object supplied in the body of the operation.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, accountName: string, poolName: string, body: CapacityPool, options?: PoolsCreateOrUpdateOptionalParams): Promise<SimplePollerLike<OperationState<PoolsCreateOrUpdateResponse>, PoolsCreateOrUpdateResponse>>;
    /**
     * Create or Update a capacity pool
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of the NetApp account
     * @param poolName The name of the capacity pool
     * @param body Capacity pool object supplied in the body of the operation.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, accountName: string, poolName: string, body: CapacityPool, options?: PoolsCreateOrUpdateOptionalParams): Promise<PoolsCreateOrUpdateResponse>;
    /**
     * Patch the specified capacity pool
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of the NetApp account
     * @param poolName The name of the capacity pool
     * @param body Capacity pool object supplied in the body of the operation.
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, accountName: string, poolName: string, body: CapacityPoolPatch, options?: PoolsUpdateOptionalParams): Promise<SimplePollerLike<OperationState<PoolsUpdateResponse>, PoolsUpdateResponse>>;
    /**
     * Patch the specified capacity pool
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of the NetApp account
     * @param poolName The name of the capacity pool
     * @param body Capacity pool object supplied in the body of the operation.
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, accountName: string, poolName: string, body: CapacityPoolPatch, options?: PoolsUpdateOptionalParams): Promise<PoolsUpdateResponse>;
    /**
     * Delete the specified capacity pool
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of the NetApp account
     * @param poolName The name of the capacity pool
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, accountName: string, poolName: string, options?: PoolsDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Delete the specified capacity pool
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of the NetApp account
     * @param poolName The name of the capacity pool
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, accountName: string, poolName: string, options?: PoolsDeleteOptionalParams): Promise<void>;
    /**
     * ListNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of the NetApp account
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=pools.d.ts.map