import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { NetAppResourceQuotaLimits } from "../operationsInterfaces";
import { NetAppManagementClient } from "../netAppManagementClient";
import { SubscriptionQuotaItem, NetAppResourceQuotaLimitsListOptionalParams, NetAppResourceQuotaLimitsGetOptionalParams, NetAppResourceQuotaLimitsGetResponse } from "../models";
/** Class containing NetAppResourceQuotaLimits operations. */
export declare class NetAppResourceQuotaLimitsImpl implements NetAppResourceQuotaLimits {
    private readonly client;
    /**
     * Initialize a new instance of the class NetAppResourceQuotaLimits class.
     * @param client Reference to the service client
     */
    constructor(client: NetAppManagementClient);
    /**
     * Get the default and current limits for quotas
     * @param location The name of Azure region.
     * @param options The options parameters.
     */
    list(location: string, options?: NetAppResourceQuotaLimitsListOptionalParams): PagedAsyncIterableIterator<SubscriptionQuotaItem>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Get the default and current limits for quotas
     * @param location The name of Azure region.
     * @param options The options parameters.
     */
    private _list;
    /**
     * Get the default and current subscription quota limit
     * @param location The name of Azure region.
     * @param quotaLimitName The name of the Quota Limit
     * @param options The options parameters.
     */
    get(location: string, quotaLimitName: string, options?: NetAppResourceQuotaLimitsGetOptionalParams): Promise<NetAppResourceQuotaLimitsGetResponse>;
}
//# sourceMappingURL=netAppResourceQuotaLimits.d.ts.map