import * as coreClient from "@azure/core-client";
import * as coreAuth from "@azure/core-auth";
import { Operations, NetAppResource, NetAppResourceQuotaLimits, Accounts, Pools, Volumes, Snapshots, SnapshotPolicies, Backups, BackupPolicies, VolumeQuotaRules, VolumeGroups, Subvolumes } from "./operationsInterfaces";
import { NetAppManagementClientOptionalParams } from "./models";
export declare class NetAppManagementClient extends coreClient.ServiceClient {
    $host: string;
    apiVersion: string;
    subscriptionId: string;
    /**
     * Initializes a new instance of the NetAppManagementClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId The ID of the target subscription.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: NetAppManagementClientOptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    operations: Operations;
    netAppResource: NetAppResource;
    netAppResourceQuotaLimits: NetAppResourceQuotaLimits;
    accounts: Accounts;
    pools: Pools;
    volumes: Volumes;
    snapshots: Snapshots;
    snapshotPolicies: SnapshotPolicies;
    backups: Backups;
    backupPolicies: BackupPolicies;
    volumeQuotaRules: VolumeQuotaRules;
    volumeGroups: VolumeGroups;
    subvolumes: Subvolumes;
}
//# sourceMappingURL=netAppManagementClient.d.ts.map