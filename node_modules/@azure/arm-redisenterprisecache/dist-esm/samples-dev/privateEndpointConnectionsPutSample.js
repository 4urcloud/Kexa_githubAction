/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { RedisEnterpriseManagementClient } from "@azure/arm-redisenterprisecache";
import { DefaultAzureCredential } from "@azure/identity";
/**
 * This sample demonstrates how to Updates the state of the specified private endpoint connection associated with the RedisEnterprise cluster.
 *
 * @summary Updates the state of the specified private endpoint connection associated with the RedisEnterprise cluster.
 * x-ms-original-file: specification/redisenterprise/resource-manager/Microsoft.Cache/stable/2022-01-01/examples/RedisEnterprisePutPrivateEndpointConnection.json
 */
function redisEnterprisePutPrivateEndpointConnection() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const clusterName = "cache1";
        const privateEndpointConnectionName = "pectest01";
        const properties = {
            privateLinkServiceConnectionState: {
                description: "Auto-Approved",
                status: "Approved"
            }
        };
        const credential = new DefaultAzureCredential();
        const client = new RedisEnterpriseManagementClient(credential, subscriptionId);
        const result = yield client.privateEndpointConnections.beginPutAndWait(resourceGroupName, clusterName, privateEndpointConnectionName, properties);
        console.log(result);
    });
}
redisEnterprisePutPrivateEndpointConnection().catch(console.error);
//# sourceMappingURL=privateEndpointConnectionsPutSample.js.map