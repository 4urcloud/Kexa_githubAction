import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Service } from "../operationsInterfaces";
import { DataBoxManagementClient } from "../dataBoxManagementClient";
import { SkuInformation, AvailableSkuRequest, ServiceListAvailableSkusByResourceGroupOptionalParams, ValidateAddress, ServiceValidateAddressOptionalParams, ServiceValidateAddressResponse, ValidationRequestUnion, ServiceValidateInputsByResourceGroupOptionalParams, ServiceValidateInputsByResourceGroupResponse, ServiceValidateInputsOptionalParams, ServiceValidateInputsResponse, RegionConfigurationRequest, ServiceRegionConfigurationOptionalParams, ServiceRegionConfigurationResponse, ServiceRegionConfigurationByResourceGroupOptionalParams, ServiceRegionConfigurationByResourceGroupResponse } from "../models";
/** Class containing Service operations. */
export declare class ServiceImpl implements Service {
    private readonly client;
    /**
     * Initialize a new instance of the class Service class.
     * @param client Reference to the service client
     */
    constructor(client: DataBoxManagementClient);
    /**
     * This method provides the list of available skus for the given subscription, resource group and
     * location.
     * @param resourceGroupName The Resource Group Name
     * @param location The location of the resource
     * @param availableSkuRequest Filters for showing the available skus.
     * @param options The options parameters.
     */
    listAvailableSkusByResourceGroup(resourceGroupName: string, location: string, availableSkuRequest: AvailableSkuRequest, options?: ServiceListAvailableSkusByResourceGroupOptionalParams): PagedAsyncIterableIterator<SkuInformation>;
    private listAvailableSkusByResourceGroupPagingPage;
    private listAvailableSkusByResourceGroupPagingAll;
    /**
     * This method provides the list of available skus for the given subscription, resource group and
     * location.
     * @param resourceGroupName The Resource Group Name
     * @param location The location of the resource
     * @param availableSkuRequest Filters for showing the available skus.
     * @param options The options parameters.
     */
    private _listAvailableSkusByResourceGroup;
    /**
     * [DEPRECATED NOTICE: This operation will soon be removed]. This method validates the customer
     * shipping address and provide alternate addresses if any.
     * @param location The location of the resource
     * @param validateAddress Shipping address of the customer.
     * @param options The options parameters.
     */
    validateAddress(location: string, validateAddress: ValidateAddress, options?: ServiceValidateAddressOptionalParams): Promise<ServiceValidateAddressResponse>;
    /**
     * This method does all necessary pre-job creation validation under resource group.
     * @param resourceGroupName The Resource Group Name
     * @param location The location of the resource
     * @param validationRequest Inputs of the customer.
     * @param options The options parameters.
     */
    validateInputsByResourceGroup(resourceGroupName: string, location: string, validationRequest: ValidationRequestUnion, options?: ServiceValidateInputsByResourceGroupOptionalParams): Promise<ServiceValidateInputsByResourceGroupResponse>;
    /**
     * This method does all necessary pre-job creation validation under subscription.
     * @param location The location of the resource
     * @param validationRequest Inputs of the customer.
     * @param options The options parameters.
     */
    validateInputs(location: string, validationRequest: ValidationRequestUnion, options?: ServiceValidateInputsOptionalParams): Promise<ServiceValidateInputsResponse>;
    /**
     * This API provides configuration details specific to given region/location at Subscription level.
     * @param location The location of the resource
     * @param regionConfigurationRequest Request body to get the configuration for the region.
     * @param options The options parameters.
     */
    regionConfiguration(location: string, regionConfigurationRequest: RegionConfigurationRequest, options?: ServiceRegionConfigurationOptionalParams): Promise<ServiceRegionConfigurationResponse>;
    /**
     * This API provides configuration details specific to given region/location at Resource group level.
     * @param resourceGroupName The Resource Group Name
     * @param location The location of the resource
     * @param regionConfigurationRequest Request body to get the configuration for the region at resource
     *                                   group level.
     * @param options The options parameters.
     */
    regionConfigurationByResourceGroup(resourceGroupName: string, location: string, regionConfigurationRequest: RegionConfigurationRequest, options?: ServiceRegionConfigurationByResourceGroupOptionalParams): Promise<ServiceRegionConfigurationByResourceGroupResponse>;
    /**
     * ListAvailableSkusByResourceGroupNext
     * @param resourceGroupName The Resource Group Name
     * @param location The location of the resource
     * @param availableSkuRequest Filters for showing the available skus.
     * @param nextLink The nextLink from the previous successful call to the
     *                 ListAvailableSkusByResourceGroup method.
     * @param options The options parameters.
     */
    private _listAvailableSkusByResourceGroupNext;
}
//# sourceMappingURL=service.d.ts.map