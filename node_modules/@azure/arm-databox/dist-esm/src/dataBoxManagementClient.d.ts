import * as coreClient from "@azure/core-client";
import * as coreAuth from "@azure/core-auth";
import { Operations, Jobs, Service } from "./operationsInterfaces";
import { DataBoxManagementClientOptionalParams, MitigateJobRequest, MitigateOptionalParams } from "./models";
export declare class DataBoxManagementClient extends coreClient.ServiceClient {
    $host: string;
    apiVersion: string;
    subscriptionId: string;
    /**
     * Initializes a new instance of the DataBoxManagementClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId The Subscription Id
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: DataBoxManagementClientOptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    /**
     * Request to mitigate for a given job
     * @param jobName The name of the job Resource within the specified resource group. job names must be
     *                between 3 and 24 characters in length and use any alphanumeric and underscore only
     * @param resourceGroupName The Resource Group Name
     * @param mitigateJobRequest Mitigation Request
     * @param options The options parameters.
     */
    mitigate(jobName: string, resourceGroupName: string, mitigateJobRequest: MitigateJobRequest, options?: MitigateOptionalParams): Promise<void>;
    operations: Operations;
    jobs: Jobs;
    service: Service;
}
//# sourceMappingURL=dataBoxManagementClient.d.ts.map