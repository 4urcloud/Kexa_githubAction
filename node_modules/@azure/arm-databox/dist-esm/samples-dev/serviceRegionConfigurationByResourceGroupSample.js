/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { DataBoxManagementClient } from "@azure/arm-databox";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to This API provides configuration details specific to given region/location at Resource group level.
 *
 * @summary This API provides configuration details specific to given region/location at Resource group level.
 * x-ms-original-file: specification/databox/resource-manager/Microsoft.DataBox/stable/2022-12-01/examples/RegionConfigurationByResourceGroup.json
 */
function regionConfigurationByResourceGroup() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["DATABOX_SUBSCRIPTION_ID"] || "YourSubscriptionId";
        const resourceGroupName = process.env["DATABOX_RESOURCE_GROUP"] || "YourResourceGroupName";
        const location = "westus";
        const regionConfigurationRequest = {
            scheduleAvailabilityRequest: {
                skuName: "DataBox",
                storageLocation: "westus"
            }
        };
        const credential = new DefaultAzureCredential();
        const client = new DataBoxManagementClient(credential, subscriptionId);
        const result = yield client.service.regionConfigurationByResourceGroup(resourceGroupName, location, regionConfigurationRequest);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        regionConfigurationByResourceGroup();
    });
}
main().catch(console.error);
//# sourceMappingURL=serviceRegionConfigurationByResourceGroupSample.js.map