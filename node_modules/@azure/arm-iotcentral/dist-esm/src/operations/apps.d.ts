import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Apps } from "../operationsInterfaces";
import { IotCentralClient } from "../iotCentralClient";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { App, AppsListBySubscriptionOptionalParams, AppsListByResourceGroupOptionalParams, AppTemplate, AppsListTemplatesOptionalParams, AppsGetOptionalParams, AppsGetResponse, AppsCreateOrUpdateOptionalParams, AppsCreateOrUpdateResponse, AppPatch, AppsUpdateOptionalParams, AppsUpdateResponse, AppsDeleteOptionalParams, OperationInputs, AppsCheckNameAvailabilityOptionalParams, AppsCheckNameAvailabilityResponse, AppsCheckSubdomainAvailabilityOptionalParams, AppsCheckSubdomainAvailabilityResponse } from "../models";
/** Class containing Apps operations. */
export declare class AppsImpl implements Apps {
    private readonly client;
    /**
     * Initialize a new instance of the class Apps class.
     * @param client Reference to the service client
     */
    constructor(client: IotCentralClient);
    /**
     * Get all IoT Central Applications in a subscription.
     * @param options The options parameters.
     */
    listBySubscription(options?: AppsListBySubscriptionOptionalParams): PagedAsyncIterableIterator<App>;
    private listBySubscriptionPagingPage;
    private listBySubscriptionPagingAll;
    /**
     * Get all the IoT Central Applications in a resource group.
     * @param resourceGroupName The name of the resource group that contains the IoT Central application.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: AppsListByResourceGroupOptionalParams): PagedAsyncIterableIterator<App>;
    private listByResourceGroupPagingPage;
    private listByResourceGroupPagingAll;
    /**
     * Get all available application templates.
     * @param options The options parameters.
     */
    listTemplates(options?: AppsListTemplatesOptionalParams): PagedAsyncIterableIterator<AppTemplate>;
    private listTemplatesPagingPage;
    private listTemplatesPagingAll;
    /**
     * Get the metadata of an IoT Central application.
     * @param resourceGroupName The name of the resource group that contains the IoT Central application.
     * @param resourceName The ARM resource name of the IoT Central application.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, resourceName: string, options?: AppsGetOptionalParams): Promise<AppsGetResponse>;
    /**
     * Create or update the metadata of an IoT Central application. The usual pattern to modify a property
     * is to retrieve the IoT Central application metadata and security metadata, and then combine them
     * with the modified values in a new body to update the IoT Central application.
     * @param resourceGroupName The name of the resource group that contains the IoT Central application.
     * @param resourceName The ARM resource name of the IoT Central application.
     * @param app The IoT Central application metadata and security metadata.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, resourceName: string, app: App, options?: AppsCreateOrUpdateOptionalParams): Promise<PollerLike<PollOperationState<AppsCreateOrUpdateResponse>, AppsCreateOrUpdateResponse>>;
    /**
     * Create or update the metadata of an IoT Central application. The usual pattern to modify a property
     * is to retrieve the IoT Central application metadata and security metadata, and then combine them
     * with the modified values in a new body to update the IoT Central application.
     * @param resourceGroupName The name of the resource group that contains the IoT Central application.
     * @param resourceName The ARM resource name of the IoT Central application.
     * @param app The IoT Central application metadata and security metadata.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, resourceName: string, app: App, options?: AppsCreateOrUpdateOptionalParams): Promise<AppsCreateOrUpdateResponse>;
    /**
     * Update the metadata of an IoT Central application.
     * @param resourceGroupName The name of the resource group that contains the IoT Central application.
     * @param resourceName The ARM resource name of the IoT Central application.
     * @param appPatch The IoT Central application metadata and security metadata.
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, resourceName: string, appPatch: AppPatch, options?: AppsUpdateOptionalParams): Promise<PollerLike<PollOperationState<AppsUpdateResponse>, AppsUpdateResponse>>;
    /**
     * Update the metadata of an IoT Central application.
     * @param resourceGroupName The name of the resource group that contains the IoT Central application.
     * @param resourceName The ARM resource name of the IoT Central application.
     * @param appPatch The IoT Central application metadata and security metadata.
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, resourceName: string, appPatch: AppPatch, options?: AppsUpdateOptionalParams): Promise<AppsUpdateResponse>;
    /**
     * Delete an IoT Central application.
     * @param resourceGroupName The name of the resource group that contains the IoT Central application.
     * @param resourceName The ARM resource name of the IoT Central application.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, resourceName: string, options?: AppsDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Delete an IoT Central application.
     * @param resourceGroupName The name of the resource group that contains the IoT Central application.
     * @param resourceName The ARM resource name of the IoT Central application.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, resourceName: string, options?: AppsDeleteOptionalParams): Promise<void>;
    /**
     * Get all IoT Central Applications in a subscription.
     * @param options The options parameters.
     */
    private _listBySubscription;
    /**
     * Get all the IoT Central Applications in a resource group.
     * @param resourceGroupName The name of the resource group that contains the IoT Central application.
     * @param options The options parameters.
     */
    private _listByResourceGroup;
    /**
     * Check if an IoT Central application name is available.
     * @param operationInputs Set the name parameter in the OperationInputs structure to the name of the
     *                        IoT Central application to check.
     * @param options The options parameters.
     */
    checkNameAvailability(operationInputs: OperationInputs, options?: AppsCheckNameAvailabilityOptionalParams): Promise<AppsCheckNameAvailabilityResponse>;
    /**
     * Check if an IoT Central application subdomain is available.
     * @param operationInputs Set the name parameter in the OperationInputs structure to the subdomain of
     *                        the IoT Central application to check.
     * @param options The options parameters.
     */
    checkSubdomainAvailability(operationInputs: OperationInputs, options?: AppsCheckSubdomainAvailabilityOptionalParams): Promise<AppsCheckSubdomainAvailabilityResponse>;
    /**
     * Get all available application templates.
     * @param options The options parameters.
     */
    private _listTemplates;
    /**
     * ListBySubscriptionNext
     * @param nextLink The nextLink from the previous successful call to the ListBySubscription method.
     * @param options The options parameters.
     */
    private _listBySubscriptionNext;
    /**
     * ListByResourceGroupNext
     * @param resourceGroupName The name of the resource group that contains the IoT Central application.
     * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.
     * @param options The options parameters.
     */
    private _listByResourceGroupNext;
    /**
     * ListTemplatesNext
     * @param nextLink The nextLink from the previous successful call to the ListTemplates method.
     * @param options The options parameters.
     */
    private _listTemplatesNext;
}
//# sourceMappingURL=apps.d.ts.map