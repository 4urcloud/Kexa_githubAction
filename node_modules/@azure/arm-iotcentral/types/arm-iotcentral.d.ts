import * as coreAuth from '@azure/core-auth';
import * as coreClient from '@azure/core-client';
import { PagedAsyncIterableIterator } from '@azure/core-paging';
import { PollerLike } from '@azure/core-lro';
import { PollOperationState } from '@azure/core-lro';

/** The IoT Central application. */
export declare type App = Resource & {
    /** A valid instance SKU. */
    sku: AppSkuInfo;
    /** The managed identities for the IoT Central application. */
    identity?: SystemAssignedServiceIdentity;
    /**
     * The ID of the application.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly applicationId?: string;
    /** The display name of the application. */
    displayName?: string;
    /** The subdomain of the application. */
    subdomain?: string;
    /** The ID of the application template, which is a blueprint that defines the characteristics and behaviors of an application. Optional; if not specified, defaults to a blank blueprint and allows the application to be defined from scratch. */
    template?: string;
    /**
     * The current state of the application.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly state?: AppState;
};

/** The properties indicating whether a given IoT Central application name or subdomain is available. */
export declare interface AppAvailabilityInfo {
    /**
     * The value which indicates whether the provided name is available.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nameAvailable?: boolean;
    /**
     * The reason for unavailability.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly reason?: string;
    /**
     * The detailed reason message.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly message?: string;
}

/** A list of IoT Central Applications with a next link. */
export declare interface AppListResult {
    /** The link used to get the next page of IoT Central Applications. */
    nextLink?: string;
    /** A list of IoT Central Applications. */
    value?: App[];
}

/** The description of the IoT Central application. */
export declare interface AppPatch {
    /** Instance tags */
    tags?: {
        [propertyName: string]: string;
    };
    /** A valid instance SKU. */
    sku?: AppSkuInfo;
    /** The managed identities for the IoT Central application. */
    identity?: SystemAssignedServiceIdentity;
    /**
     * The ID of the application.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly applicationId?: string;
    /** The display name of the application. */
    displayName?: string;
    /** The subdomain of the application. */
    subdomain?: string;
    /** The ID of the application template, which is a blueprint that defines the characteristics and behaviors of an application. Optional; if not specified, defaults to a blank blueprint and allows the application to be defined from scratch. */
    template?: string;
    /**
     * The current state of the application.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly state?: AppState;
}

/** Interface representing a Apps. */
export declare interface Apps {
    /**
     * Get all IoT Central Applications in a subscription.
     * @param options The options parameters.
     */
    listBySubscription(options?: AppsListBySubscriptionOptionalParams): PagedAsyncIterableIterator<App>;
    /**
     * Get all the IoT Central Applications in a resource group.
     * @param resourceGroupName The name of the resource group that contains the IoT Central application.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: AppsListByResourceGroupOptionalParams): PagedAsyncIterableIterator<App>;
    /**
     * Get all available application templates.
     * @param options The options parameters.
     */
    listTemplates(options?: AppsListTemplatesOptionalParams): PagedAsyncIterableIterator<AppTemplate>;
    /**
     * Get the metadata of an IoT Central application.
     * @param resourceGroupName The name of the resource group that contains the IoT Central application.
     * @param resourceName The ARM resource name of the IoT Central application.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, resourceName: string, options?: AppsGetOptionalParams): Promise<AppsGetResponse>;
    /**
     * Create or update the metadata of an IoT Central application. The usual pattern to modify a property
     * is to retrieve the IoT Central application metadata and security metadata, and then combine them
     * with the modified values in a new body to update the IoT Central application.
     * @param resourceGroupName The name of the resource group that contains the IoT Central application.
     * @param resourceName The ARM resource name of the IoT Central application.
     * @param app The IoT Central application metadata and security metadata.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, resourceName: string, app: App, options?: AppsCreateOrUpdateOptionalParams): Promise<PollerLike<PollOperationState<AppsCreateOrUpdateResponse>, AppsCreateOrUpdateResponse>>;
    /**
     * Create or update the metadata of an IoT Central application. The usual pattern to modify a property
     * is to retrieve the IoT Central application metadata and security metadata, and then combine them
     * with the modified values in a new body to update the IoT Central application.
     * @param resourceGroupName The name of the resource group that contains the IoT Central application.
     * @param resourceName The ARM resource name of the IoT Central application.
     * @param app The IoT Central application metadata and security metadata.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, resourceName: string, app: App, options?: AppsCreateOrUpdateOptionalParams): Promise<AppsCreateOrUpdateResponse>;
    /**
     * Update the metadata of an IoT Central application.
     * @param resourceGroupName The name of the resource group that contains the IoT Central application.
     * @param resourceName The ARM resource name of the IoT Central application.
     * @param appPatch The IoT Central application metadata and security metadata.
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, resourceName: string, appPatch: AppPatch, options?: AppsUpdateOptionalParams): Promise<PollerLike<PollOperationState<AppsUpdateResponse>, AppsUpdateResponse>>;
    /**
     * Update the metadata of an IoT Central application.
     * @param resourceGroupName The name of the resource group that contains the IoT Central application.
     * @param resourceName The ARM resource name of the IoT Central application.
     * @param appPatch The IoT Central application metadata and security metadata.
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, resourceName: string, appPatch: AppPatch, options?: AppsUpdateOptionalParams): Promise<AppsUpdateResponse>;
    /**
     * Delete an IoT Central application.
     * @param resourceGroupName The name of the resource group that contains the IoT Central application.
     * @param resourceName The ARM resource name of the IoT Central application.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, resourceName: string, options?: AppsDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Delete an IoT Central application.
     * @param resourceGroupName The name of the resource group that contains the IoT Central application.
     * @param resourceName The ARM resource name of the IoT Central application.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, resourceName: string, options?: AppsDeleteOptionalParams): Promise<void>;
    /**
     * Check if an IoT Central application name is available.
     * @param operationInputs Set the name parameter in the OperationInputs structure to the name of the
     *                        IoT Central application to check.
     * @param options The options parameters.
     */
    checkNameAvailability(operationInputs: OperationInputs, options?: AppsCheckNameAvailabilityOptionalParams): Promise<AppsCheckNameAvailabilityResponse>;
    /**
     * Check if an IoT Central application subdomain is available.
     * @param operationInputs Set the name parameter in the OperationInputs structure to the subdomain of
     *                        the IoT Central application to check.
     * @param options The options parameters.
     */
    checkSubdomainAvailability(operationInputs: OperationInputs, options?: AppsCheckSubdomainAvailabilityOptionalParams): Promise<AppsCheckSubdomainAvailabilityResponse>;
}

/** Optional parameters. */
export declare interface AppsCheckNameAvailabilityOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the checkNameAvailability operation. */
export declare type AppsCheckNameAvailabilityResponse = AppAvailabilityInfo;

/** Optional parameters. */
export declare interface AppsCheckSubdomainAvailabilityOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the checkSubdomainAvailability operation. */
export declare type AppsCheckSubdomainAvailabilityResponse = AppAvailabilityInfo;

/** Optional parameters. */
export declare interface AppsCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export declare type AppsCreateOrUpdateResponse = App;

/** Optional parameters. */
export declare interface AppsDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface AppsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type AppsGetResponse = App;

/**
 * Defines values for AppSku. \
 * {@link KnownAppSku} can be used interchangeably with AppSku,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ST0** \
 * **ST1** \
 * **ST2**
 */
export declare type AppSku = string;

/** Information about the SKU of the IoT Central application. */
export declare interface AppSkuInfo {
    /** The name of the SKU. */
    name: AppSku;
}

/** Optional parameters. */
export declare interface AppsListByResourceGroupNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroupNext operation. */
export declare type AppsListByResourceGroupNextResponse = AppListResult;

/** Optional parameters. */
export declare interface AppsListByResourceGroupOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroup operation. */
export declare type AppsListByResourceGroupResponse = AppListResult;

/** Optional parameters. */
export declare interface AppsListBySubscriptionNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listBySubscriptionNext operation. */
export declare type AppsListBySubscriptionNextResponse = AppListResult;

/** Optional parameters. */
export declare interface AppsListBySubscriptionOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listBySubscription operation. */
export declare type AppsListBySubscriptionResponse = AppListResult;

/** Optional parameters. */
export declare interface AppsListTemplatesNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listTemplatesNext operation. */
export declare type AppsListTemplatesNextResponse = AppTemplatesResult;

/** Optional parameters. */
export declare interface AppsListTemplatesOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listTemplates operation. */
export declare type AppsListTemplatesResponse = AppTemplatesResult;

/**
 * Defines values for AppState. \
 * {@link KnownAppState} can be used interchangeably with AppState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **created** \
 * **suspended**
 */
export declare type AppState = string;

/** Optional parameters. */
export declare interface AppsUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the update operation. */
export declare type AppsUpdateResponse = App;

/** IoT Central Application Template. */
export declare interface AppTemplate {
    /**
     * The ID of the template.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly manifestId?: string;
    /**
     * The version of the template.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly manifestVersion?: string;
    /**
     * The name of the template.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * The title of the template.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly title?: string;
    /**
     * The order of the template in the templates list.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly order?: number;
    /**
     * The description of the template.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly description?: string;
    /**
     * The industry of the template.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly industry?: string;
    /**
     * A list of locations that support the template.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly locations?: AppTemplateLocations[];
}

/** IoT Central Application Template Locations. */
export declare interface AppTemplateLocations {
    /**
     * The ID of the location.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /**
     * The display name of the location.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly displayName?: string;
}

/** A list of IoT Central Application Templates with a next link. */
export declare interface AppTemplatesResult {
    /** The link used to get the next page of IoT Central application templates. */
    nextLink?: string;
    /**
     * A list of IoT Central Application Templates.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: AppTemplate[];
}

/** Error details. */
export declare interface CloudError {
    /**
     * The error code.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly code?: string;
    /**
     * The error message.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly message?: string;
    /**
     * The target of the particular error.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly target?: string;
    /** A list of additional details about the error. */
    details?: CloudErrorBody[];
}

/** Details of error response. */
export declare interface CloudErrorBody {
    /**
     * The error code.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly code?: string;
    /**
     * The error message.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly message?: string;
    /**
     * The target of the particular error.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly target?: string;
    /** A list of additional details about the error. */
    details?: CloudErrorBody[];
}

export declare class IotCentralClient extends coreClient.ServiceClient {
    $host: string;
    apiVersion: string;
    subscriptionId: string;
    /**
     * Initializes a new instance of the IotCentralClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId The subscription identifier.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: IotCentralClientOptionalParams);
    apps: Apps;
    operations: Operations;
}

/** Optional parameters. */
export declare interface IotCentralClientOptionalParams extends coreClient.ServiceClientOptions {
    /** server parameter */
    $host?: string;
    /** Api Version */
    apiVersion?: string;
    /** Overrides client endpoint. */
    endpoint?: string;
}

/** Known values of {@link AppSku} that the service accepts. */
export declare enum KnownAppSku {
    ST0 = "ST0",
    ST1 = "ST1",
    ST2 = "ST2"
}

/** Known values of {@link AppState} that the service accepts. */
export declare enum KnownAppState {
    Created = "created",
    Suspended = "suspended"
}

/** Known values of {@link SystemAssignedServiceIdentityType} that the service accepts. */
export declare enum KnownSystemAssignedServiceIdentityType {
    None = "None",
    SystemAssigned = "SystemAssigned"
}

/** IoT Central REST API operation */
export declare interface Operation {
    /**
     * Operation name: {provider}/{resource}/{read | write | action | delete}
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /** The object that represents the operation. */
    display?: OperationDisplay;
    /**
     * The intended executor of the operation.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly origin?: string;
    /**
     * Additional descriptions for the operation.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly properties?: Record<string, unknown>;
}

/** The object that represents the operation. */
export declare interface OperationDisplay {
    /**
     * Service provider: Microsoft IoT Central
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provider?: string;
    /**
     * Resource Type: IoT Central
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly resource?: string;
    /**
     * Name of the operation
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly operation?: string;
    /**
     * Friendly description for the operation,
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly description?: string;
}

/** Input values. */
export declare interface OperationInputs {
    /** The name of the IoT Central application instance to check. */
    name: string;
    /** The type of the IoT Central resource to query. */
    type?: string;
}

/** A list of IoT Central operations. It contains a list of operations and a URL link to get the next set of results. */
export declare interface OperationListResult {
    /** The link used to get the next page of IoT Central description objects. */
    nextLink?: string;
    /**
     * A list of operations supported by the Microsoft.IoTCentral resource provider.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: Operation[];
}

/** Interface representing a Operations. */
export declare interface Operations {
    /**
     * Lists all of the available IoT Central Resource Provider operations.
     * @param options The options parameters.
     */
    list(options?: OperationsListOptionalParams): PagedAsyncIterableIterator<Operation>;
}

/** Optional parameters. */
export declare interface OperationsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export declare interface OperationsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type OperationsListResponse = OperationListResult;

/** The common properties of an ARM resource. */
export declare interface Resource {
    /**
     * The ARM resource identifier.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /**
     * The ARM resource name.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * The resource type.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /** The resource location. */
    location: string;
    /** The resource tags. */
    tags?: {
        [propertyName: string]: string;
    };
}

/** Managed service identity (either system assigned, or none) */
export declare interface SystemAssignedServiceIdentity {
    /**
     * The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly principalId?: string;
    /**
     * The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly tenantId?: string;
    /** Type of managed service identity (either system assigned, or none). */
    type: SystemAssignedServiceIdentityType;
}

/**
 * Defines values for SystemAssignedServiceIdentityType. \
 * {@link KnownSystemAssignedServiceIdentityType} can be used interchangeably with SystemAssignedServiceIdentityType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **SystemAssigned**
 */
export declare type SystemAssignedServiceIdentityType = string;

export { }
