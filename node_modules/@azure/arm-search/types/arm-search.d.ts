import * as coreAuth from '@azure/core-auth';
import * as coreClient from '@azure/core-client';
import { OperationState } from '@azure/core-lro';
import { PagedAsyncIterableIterator } from '@azure/core-paging';
import { SimplePollerLike } from '@azure/core-lro';

/** Defines values for AadAuthFailureMode. */
export declare type AadAuthFailureMode = "http403" | "http401WithBearerChallenge";

/** Defines values for AdminKeyKind. */
export declare type AdminKeyKind = "primary" | "secondary";

/** Response containing the primary and secondary admin API keys for a given Azure Cognitive Search service. */
export declare interface AdminKeyResult {
    /**
     * The primary admin API key of the search service.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly primaryKey?: string;
    /**
     * The secondary admin API key of the search service.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly secondaryKey?: string;
}

/** Interface representing a AdminKeys. */
export declare interface AdminKeys {
    /**
     * Gets the primary and secondary admin API keys for the specified Azure Cognitive Search service.
     * @param resourceGroupName The name of the resource group within the current subscription. You can
     *                          obtain this value from the Azure Resource Manager API or the portal.
     * @param searchServiceName The name of the Azure Cognitive Search service associated with the
     *                          specified resource group.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, searchServiceName: string, options?: AdminKeysGetOptionalParams): Promise<AdminKeysGetResponse>;
    /**
     * Regenerates either the primary or secondary admin API key. You can only regenerate one key at a
     * time.
     * @param resourceGroupName The name of the resource group within the current subscription. You can
     *                          obtain this value from the Azure Resource Manager API or the portal.
     * @param searchServiceName The name of the Azure Cognitive Search service associated with the
     *                          specified resource group.
     * @param keyKind Specifies which key to regenerate. Valid values include 'primary' and 'secondary'.
     * @param options The options parameters.
     */
    regenerate(resourceGroupName: string, searchServiceName: string, keyKind: AdminKeyKind, options?: AdminKeysRegenerateOptionalParams): Promise<AdminKeysRegenerateResponse>;
}

/** Optional parameters. */
export declare interface AdminKeysGetOptionalParams extends coreClient.OperationOptions {
    /** Parameter group */
    searchManagementRequestOptions?: SearchManagementRequestOptions;
}

/** Contains response data for the get operation. */
export declare type AdminKeysGetResponse = AdminKeyResult;

/** Optional parameters. */
export declare interface AdminKeysRegenerateOptionalParams extends coreClient.OperationOptions {
    /** Parameter group */
    searchManagementRequestOptions?: SearchManagementRequestOptions;
}

/** Contains response data for the regenerate operation. */
export declare type AdminKeysRegenerateResponse = AdminKeyResult;

/** The details of a long running asynchronous shared private link resource operation */
export declare interface AsyncOperationResult {
    /** The current status of the long running asynchronous shared private link resource operation. */
    status?: SharedPrivateLinkResourceAsyncOperationResult;
}

/** Input of check name availability API. */
export declare interface CheckNameAvailabilityInput {
    /** The search service name to validate. Search service names must only contain lowercase letters, digits or dashes, cannot use dash as the first two or last one characters, cannot contain consecutive dashes, and must be between 2 and 60 characters in length. */
    name: string;
    /** The type of the resource whose name is to be validated. This value must always be 'searchServices'. */
    type: "searchServices";
}

/** Output of check name availability API. */
export declare interface CheckNameAvailabilityOutput {
    /**
     * A value indicating whether the name is available.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly isNameAvailable?: boolean;
    /**
     * The reason why the name is not available. 'Invalid' indicates the name provided does not match the naming requirements (incorrect length, unsupported characters, etc.). 'AlreadyExists' indicates that the name is already in use and is therefore unavailable.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly reason?: UnavailableNameReason;
    /**
     * A message that explains why the name is invalid and provides resource naming requirements. Available only if 'Invalid' is returned in the 'reason' property.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly message?: string;
}

/** Contains information about an API error. */
export declare interface CloudError {
    /** Describes a particular API error with an error code and a message. */
    error?: CloudErrorBody;
}

/** Describes a particular API error with an error code and a message. */
export declare interface CloudErrorBody {
    /** An error code that describes the error condition more precisely than an HTTP status code. Can be used to programmatically handle specific error cases. */
    code?: string;
    /** A message that describes the error in detail and provides debugging information. */
    message?: string;
    /** The target of the particular error (for example, the name of the property in error). */
    target?: string;
    /** Contains nested errors that are related to this error. */
    details?: CloudErrorBody[];
}

/** Indicates that either the API key or an access token from Azure Active Directory can be used for authentication. */
export declare interface DataPlaneAadOrApiKeyAuthOption {
    /** Describes what response the data plane API of a Search service would send for requests that failed authentication. */
    aadAuthFailureMode?: AadAuthFailureMode;
}

/** Defines the options for how the data plane API of a Search service authenticates requests. This cannot be set if 'disableLocalAuth' is set to true. */
export declare interface DataPlaneAuthOptions {
    /** Indicates that only the API key needs to be used for authentication. */
    apiKeyOnly?: Record<string, unknown>;
    /** Indicates that either the API key or an access token from Azure Active Directory can be used for authentication. */
    aadOrApiKey?: DataPlaneAadOrApiKeyAuthOption;
}

/** Describes a policy that determines how resources within the search service are to be encrypted with Customer Managed Keys. */
export declare interface EncryptionWithCmk {
    /** Describes how a search service should enforce having one or more non customer encrypted resources. */
    enforcement?: SearchEncryptionWithCmk;
    /**
     * Describes whether the search service is compliant or not with respect to having non customer encrypted resources. If a service has more than one non customer encrypted resource and 'Enforcement' is 'enabled' then the service will be marked as 'nonCompliant'.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly encryptionComplianceStatus?: SearchEncryptionComplianceStatus;
}

/**
 * Given the last `.value` produced by the `byPage` iterator,
 * returns a continuation token that can be used to begin paging from
 * that point later.
 * @param page An object from accessing `value` on the IteratorResult from a `byPage` iterator.
 * @returns The continuation token that can be passed into byPage() during future calls.
 */
export declare function getContinuationToken(page: unknown): string | undefined;

/** Defines values for HostingMode. */
export declare type HostingMode = "default" | "highDensity";

/** Identity for the resource. */
export declare interface Identity {
    /**
     * The principal ID of the system-assigned identity of the search service.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly principalId?: string;
    /**
     * The tenant ID of the system-assigned identity of the search service.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly tenantId?: string;
    /** The identity type. */
    type: IdentityType;
}

/** Defines values for IdentityType. */
export declare type IdentityType = "None" | "SystemAssigned";

/** The IP restriction rule of the Azure Cognitive Search service. */
export declare interface IpRule {
    /** Value corresponding to a single IPv4 address (eg., 123.1.2.3) or an IP range in CIDR format (eg., 123.1.2.3/24) to be allowed. */
    value?: string;
}

/** Known values of {@link PrivateLinkServiceConnectionProvisioningState} that the service accepts. */
export declare enum KnownPrivateLinkServiceConnectionProvisioningState {
    /** The private link service connection is in the process of being created along with other resources for it to be fully functional. */
    Updating = "Updating",
    /** The private link service connection is in the process of being deleted. */
    Deleting = "Deleting",
    /** The private link service connection has failed to be provisioned or deleted. */
    Failed = "Failed",
    /** The private link service connection has finished provisioning and is ready for approval. */
    Succeeded = "Succeeded",
    /** Provisioning request for the private link service connection resource has been accepted but the process of creation has not commenced yet. */
    Incomplete = "Incomplete",
    /** Provisioning request for the private link service connection resource has been canceled */
    Canceled = "Canceled"
}

/** Known values of {@link SearchSemanticSearch} that the service accepts. */
export declare enum KnownSearchSemanticSearch {
    /** Indicates that semantic search is disabled for the search service. */
    Disabled = "disabled",
    /** Enables semantic search on a search service and indicates that it is to be used within the limits of the free tier. This would cap the volume of semantic search requests and is offered at no extra charge. This is the default for newly provisioned search services. */
    Free = "free",
    /** Enables semantic search on a search service as a billable feature, with higher throughput and volume of semantic search queries. */
    Standard = "standard"
}

/** Known values of {@link SharedPrivateLinkResourceAsyncOperationResult} that the service accepts. */
export declare enum KnownSharedPrivateLinkResourceAsyncOperationResult {
    /** Running */
    Running = "Running",
    /** Succeeded */
    Succeeded = "Succeeded",
    /** Failed */
    Failed = "Failed"
}

/** Known values of {@link UnavailableNameReason} that the service accepts. */
export declare enum KnownUnavailableNameReason {
    /** The search service name does not match naming requirements. */
    Invalid = "Invalid",
    /** The search service name is already assigned to a different search service. */
    AlreadyExists = "AlreadyExists"
}

/** Response containing the query API keys for a given Azure Cognitive Search service. */
export declare interface ListQueryKeysResult {
    /**
     * The query keys for the Azure Cognitive Search service.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: QueryKey[];
    /**
     * Request URL that can be used to query next page of query keys. Returned when the total number of requested query keys exceed maximum page size.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Network specific rules that determine how the Azure Cognitive Search service may be reached. */
export declare interface NetworkRuleSet {
    /** A list of IP restriction rules that defines the inbound network(s) with allowing access to the search service endpoint. At the meantime, all other public IP networks are blocked by the firewall. These restriction rules are applied only when the 'publicNetworkAccess' of the search service is 'enabled'; otherwise, traffic over public interface is not allowed even with any public IP rules, and private endpoint connections would be the exclusive access method. */
    ipRules?: IpRule[];
}

/** Describes a REST API operation. */
export declare interface Operation {
    /**
     * The name of the operation. This name is of the form {provider}/{resource}/{operation}.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * The object that describes the operation.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly display?: OperationDisplay;
}

/** The object that describes the operation. */
export declare interface OperationDisplay {
    /**
     * The friendly name of the resource provider.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provider?: string;
    /**
     * The operation type: read, write, delete, listKeys/action, etc.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly operation?: string;
    /**
     * The resource type on which the operation is performed.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly resource?: string;
    /**
     * The friendly name of the operation.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly description?: string;
}

/** The result of the request to list REST API operations. It contains a list of operations and a URL  to get the next set of results. */
export declare interface OperationListResult {
    /**
     * The list of operations supported by the resource provider.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: Operation[];
    /**
     * The URL to get the next set of operation list results, if any.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Interface representing a Operations. */
export declare interface Operations {
    /**
     * Lists all of the available REST API operations of the Microsoft.Search provider.
     * @param options The options parameters.
     */
    list(options?: OperationsListOptionalParams): PagedAsyncIterableIterator<Operation>;
}

/** Optional parameters. */
export declare interface OperationsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type OperationsListResponse = OperationListResult;

/** Describes an existing Private Endpoint connection to the Azure Cognitive Search service. */
export declare interface PrivateEndpointConnection extends Resource {
    /** Describes the properties of an existing Private Endpoint connection to the Azure Cognitive Search service. */
    properties?: PrivateEndpointConnectionProperties;
}

/** Response containing a list of Private Endpoint connections. */
export declare interface PrivateEndpointConnectionListResult {
    /**
     * The list of Private Endpoint connections.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: PrivateEndpointConnection[];
    /**
     * Request URL that can be used to query next page of private endpoint connections. Returned when the total number of requested private endpoint connections exceed maximum page size.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Describes the properties of an existing Private Endpoint connection to the Azure Cognitive Search service. */
export declare interface PrivateEndpointConnectionProperties {
    /** The private endpoint resource from Microsoft.Network provider. */
    privateEndpoint?: PrivateEndpointConnectionPropertiesPrivateEndpoint;
    /** Describes the current state of an existing Private Link Service connection to the Azure Private Endpoint. */
    privateLinkServiceConnectionState?: PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionState;
    /** The group id from the provider of resource the private link service connection is for. */
    groupId?: string;
    /** The provisioning state of the private link service connection. Can be Updating, Deleting, Failed, Succeeded, or Incomplete */
    provisioningState?: PrivateLinkServiceConnectionProvisioningState;
}

/** The private endpoint resource from Microsoft.Network provider. */
export declare interface PrivateEndpointConnectionPropertiesPrivateEndpoint {
    /** The resource id of the private endpoint resource from Microsoft.Network provider. */
    id?: string;
}

/** Describes the current state of an existing Private Link Service connection to the Azure Private Endpoint. */
export declare interface PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionState {
    /** Status of the the private link service connection. Can be Pending, Approved, Rejected, or Disconnected. */
    status?: PrivateLinkServiceConnectionStatus;
    /** The description for the private link service connection state. */
    description?: string;
    /** A description of any extra actions that may be required. */
    actionsRequired?: string;
}

/** Interface representing a PrivateEndpointConnections. */
export declare interface PrivateEndpointConnections {
    /**
     * Gets a list of all private endpoint connections in the given service.
     * @param resourceGroupName The name of the resource group within the current subscription. You can
     *                          obtain this value from the Azure Resource Manager API or the portal.
     * @param searchServiceName The name of the Azure Cognitive Search service associated with the
     *                          specified resource group.
     * @param options The options parameters.
     */
    listByService(resourceGroupName: string, searchServiceName: string, options?: PrivateEndpointConnectionsListByServiceOptionalParams): PagedAsyncIterableIterator<PrivateEndpointConnection>;
    /**
     * Updates a Private Endpoint connection to the search service in the given resource group.
     * @param resourceGroupName The name of the resource group within the current subscription. You can
     *                          obtain this value from the Azure Resource Manager API or the portal.
     * @param searchServiceName The name of the Azure Cognitive Search service associated with the
     *                          specified resource group.
     * @param privateEndpointConnectionName The name of the private endpoint connection to the Azure
     *                                      Cognitive Search service with the specified resource group.
     * @param privateEndpointConnection The definition of the private endpoint connection to update.
     * @param options The options parameters.
     */
    update(resourceGroupName: string, searchServiceName: string, privateEndpointConnectionName: string, privateEndpointConnection: PrivateEndpointConnection, options?: PrivateEndpointConnectionsUpdateOptionalParams): Promise<PrivateEndpointConnectionsUpdateResponse>;
    /**
     * Gets the details of the private endpoint connection to the search service in the given resource
     * group.
     * @param resourceGroupName The name of the resource group within the current subscription. You can
     *                          obtain this value from the Azure Resource Manager API or the portal.
     * @param searchServiceName The name of the Azure Cognitive Search service associated with the
     *                          specified resource group.
     * @param privateEndpointConnectionName The name of the private endpoint connection to the Azure
     *                                      Cognitive Search service with the specified resource group.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, searchServiceName: string, privateEndpointConnectionName: string, options?: PrivateEndpointConnectionsGetOptionalParams): Promise<PrivateEndpointConnectionsGetResponse>;
    /**
     * Disconnects the private endpoint connection and deletes it from the search service.
     * @param resourceGroupName The name of the resource group within the current subscription. You can
     *                          obtain this value from the Azure Resource Manager API or the portal.
     * @param searchServiceName The name of the Azure Cognitive Search service associated with the
     *                          specified resource group.
     * @param privateEndpointConnectionName The name of the private endpoint connection to the Azure
     *                                      Cognitive Search service with the specified resource group.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, searchServiceName: string, privateEndpointConnectionName: string, options?: PrivateEndpointConnectionsDeleteOptionalParams): Promise<PrivateEndpointConnectionsDeleteResponse>;
}

/** Optional parameters. */
export declare interface PrivateEndpointConnectionsDeleteOptionalParams extends coreClient.OperationOptions {
    /** Parameter group */
    searchManagementRequestOptions?: SearchManagementRequestOptions;
}

/** Contains response data for the delete operation. */
export declare type PrivateEndpointConnectionsDeleteResponse = PrivateEndpointConnection;

/** Optional parameters. */
export declare interface PrivateEndpointConnectionsGetOptionalParams extends coreClient.OperationOptions {
    /** Parameter group */
    searchManagementRequestOptions?: SearchManagementRequestOptions;
}

/** Contains response data for the get operation. */
export declare type PrivateEndpointConnectionsGetResponse = PrivateEndpointConnection;

/** Optional parameters. */
export declare interface PrivateEndpointConnectionsListByServiceNextOptionalParams extends coreClient.OperationOptions {
    /** Parameter group */
    searchManagementRequestOptions?: SearchManagementRequestOptions;
}

/** Contains response data for the listByServiceNext operation. */
export declare type PrivateEndpointConnectionsListByServiceNextResponse = PrivateEndpointConnectionListResult;

/** Optional parameters. */
export declare interface PrivateEndpointConnectionsListByServiceOptionalParams extends coreClient.OperationOptions {
    /** Parameter group */
    searchManagementRequestOptions?: SearchManagementRequestOptions;
}

/** Contains response data for the listByService operation. */
export declare type PrivateEndpointConnectionsListByServiceResponse = PrivateEndpointConnectionListResult;

/** Optional parameters. */
export declare interface PrivateEndpointConnectionsUpdateOptionalParams extends coreClient.OperationOptions {
    /** Parameter group */
    searchManagementRequestOptions?: SearchManagementRequestOptions;
}

/** Contains response data for the update operation. */
export declare type PrivateEndpointConnectionsUpdateResponse = PrivateEndpointConnection;

/** Describes a supported private link resource for the Azure Cognitive Search service. */
export declare interface PrivateLinkResource extends Resource {
    /**
     * Describes the properties of a supported private link resource for the Azure Cognitive Search service.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly properties?: PrivateLinkResourceProperties;
}

/** Describes the properties of a supported private link resource for the Azure Cognitive Search service. For a given API version, this represents the 'supported' groupIds when creating a shared private link resource. */
export declare interface PrivateLinkResourceProperties {
    /**
     * The group ID of the private link resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly groupId?: string;
    /**
     * The list of required members of the private link resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly requiredMembers?: string[];
    /**
     * The list of required DNS zone names of the private link resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly requiredZoneNames?: string[];
    /**
     * The list of resources that are onboarded to private link service, that are supported by Azure Cognitive Search.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly shareablePrivateLinkResourceTypes?: ShareablePrivateLinkResourceType[];
}

/** Interface representing a PrivateLinkResources. */
export declare interface PrivateLinkResources {
    /**
     * Gets a list of all supported private link resource types for the given service.
     * @param resourceGroupName The name of the resource group within the current subscription. You can
     *                          obtain this value from the Azure Resource Manager API or the portal.
     * @param searchServiceName The name of the Azure Cognitive Search service associated with the
     *                          specified resource group.
     * @param options The options parameters.
     */
    listSupported(resourceGroupName: string, searchServiceName: string, options?: PrivateLinkResourcesListSupportedOptionalParams): PagedAsyncIterableIterator<PrivateLinkResource>;
}

/** Optional parameters. */
export declare interface PrivateLinkResourcesListSupportedOptionalParams extends coreClient.OperationOptions {
    /** Parameter group */
    searchManagementRequestOptions?: SearchManagementRequestOptions;
}

/** Contains response data for the listSupported operation. */
export declare type PrivateLinkResourcesListSupportedResponse = PrivateLinkResourcesResult;

/** Response containing a list of supported Private Link Resources. */
export declare interface PrivateLinkResourcesResult {
    /**
     * The list of supported Private Link Resources.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: PrivateLinkResource[];
}

/**
 * Defines values for PrivateLinkServiceConnectionProvisioningState. \
 * {@link KnownPrivateLinkServiceConnectionProvisioningState} can be used interchangeably with PrivateLinkServiceConnectionProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Updating**: The private link service connection is in the process of being created along with other resources for it to be fully functional. \
 * **Deleting**: The private link service connection is in the process of being deleted. \
 * **Failed**: The private link service connection has failed to be provisioned or deleted. \
 * **Succeeded**: The private link service connection has finished provisioning and is ready for approval. \
 * **Incomplete**: Provisioning request for the private link service connection resource has been accepted but the process of creation has not commenced yet. \
 * **Canceled**: Provisioning request for the private link service connection resource has been canceled
 */
export declare type PrivateLinkServiceConnectionProvisioningState = string;

/** Defines values for PrivateLinkServiceConnectionStatus. */
export declare type PrivateLinkServiceConnectionStatus = "Pending" | "Approved" | "Rejected" | "Disconnected";

/** Defines values for ProvisioningState. */
export declare type ProvisioningState = "succeeded" | "provisioning" | "failed";

/** Defines values for PublicNetworkAccess. */
export declare type PublicNetworkAccess = "enabled" | "disabled";

/** Describes an API key for a given Azure Cognitive Search service that has permissions for query operations only. */
export declare interface QueryKey {
    /**
     * The name of the query API key; may be empty.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * The value of the query API key.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly key?: string;
}

/** Interface representing a QueryKeys. */
export declare interface QueryKeys {
    /**
     * Returns the list of query API keys for the given Azure Cognitive Search service.
     * @param resourceGroupName The name of the resource group within the current subscription. You can
     *                          obtain this value from the Azure Resource Manager API or the portal.
     * @param searchServiceName The name of the Azure Cognitive Search service associated with the
     *                          specified resource group.
     * @param options The options parameters.
     */
    listBySearchService(resourceGroupName: string, searchServiceName: string, options?: QueryKeysListBySearchServiceOptionalParams): PagedAsyncIterableIterator<QueryKey>;
    /**
     * Generates a new query key for the specified search service. You can create up to 50 query keys per
     * service.
     * @param resourceGroupName The name of the resource group within the current subscription. You can
     *                          obtain this value from the Azure Resource Manager API or the portal.
     * @param searchServiceName The name of the Azure Cognitive Search service associated with the
     *                          specified resource group.
     * @param name The name of the new query API key.
     * @param options The options parameters.
     */
    create(resourceGroupName: string, searchServiceName: string, name: string, options?: QueryKeysCreateOptionalParams): Promise<QueryKeysCreateResponse>;
    /**
     * Deletes the specified query key. Unlike admin keys, query keys are not regenerated. The process for
     * regenerating a query key is to delete and then recreate it.
     * @param resourceGroupName The name of the resource group within the current subscription. You can
     *                          obtain this value from the Azure Resource Manager API or the portal.
     * @param searchServiceName The name of the Azure Cognitive Search service associated with the
     *                          specified resource group.
     * @param key The query key to be deleted. Query keys are identified by value, not by name.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, searchServiceName: string, key: string, options?: QueryKeysDeleteOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface QueryKeysCreateOptionalParams extends coreClient.OperationOptions {
    /** Parameter group */
    searchManagementRequestOptions?: SearchManagementRequestOptions;
}

/** Contains response data for the create operation. */
export declare type QueryKeysCreateResponse = QueryKey;

/** Optional parameters. */
export declare interface QueryKeysDeleteOptionalParams extends coreClient.OperationOptions {
    /** Parameter group */
    searchManagementRequestOptions?: SearchManagementRequestOptions;
}

/** Optional parameters. */
export declare interface QueryKeysListBySearchServiceNextOptionalParams extends coreClient.OperationOptions {
    /** Parameter group */
    searchManagementRequestOptions?: SearchManagementRequestOptions;
}

/** Contains response data for the listBySearchServiceNext operation. */
export declare type QueryKeysListBySearchServiceNextResponse = ListQueryKeysResult;

/** Optional parameters. */
export declare interface QueryKeysListBySearchServiceOptionalParams extends coreClient.OperationOptions {
    /** Parameter group */
    searchManagementRequestOptions?: SearchManagementRequestOptions;
}

/** Contains response data for the listBySearchService operation. */
export declare type QueryKeysListBySearchServiceResponse = ListQueryKeysResult;

/** Describes the quota usage for a particular sku supported by Azure Cognitive Search. */
export declare interface QuotaUsageResult {
    /** The resource id of the quota usage sku endpoint for Microsoft.Search provider. */
    id?: string;
    /** The unit of measurement for the search sku. */
    unit?: string;
    /** The currently used up value for the particular search sku. */
    currentValue?: number;
    /** The quota limit for the particular search sku. */
    limit?: number;
    /**
     * The name of the sku supported by Azure Cognitive Search.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: QuotaUsageResultName;
}

/** The name of the sku supported by Azure Cognitive Search. */
export declare interface QuotaUsageResultName {
    /** The sku name supported by Azure Cognitive Search. */
    value?: string;
    /** The localized string value for the sku supported by Azure Cognitive Search. */
    localizedValue?: string;
}

/** Response containing the quota usage information for all the supported skus of Azure Cognitive Search service. */
export declare interface QuotaUsagesListResult {
    /**
     * The quota usages for the SKUs supported by Azure Cognitive Search.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: QuotaUsageResult[];
    /**
     * Request URL that can be used to query next page of quota usages. Returned when the total number of requested quota usages exceed maximum page size.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export declare interface Resource {
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /**
     * The name of the resource
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
}

/** Defines values for SearchEncryptionComplianceStatus. */
export declare type SearchEncryptionComplianceStatus = "Compliant" | "NonCompliant";

/** Defines values for SearchEncryptionWithCmk. */
export declare type SearchEncryptionWithCmk = "Disabled" | "Enabled" | "Unspecified";

export declare class SearchManagementClient extends coreClient.ServiceClient {
    $host: string;
    apiVersion: string;
    subscriptionId: string;
    /**
     * Initializes a new instance of the SearchManagementClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId The unique identifier for a Microsoft Azure subscription. You can obtain this
     *                       value from the Azure Resource Manager API or the portal.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: SearchManagementClientOptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    /**
     * Gets the quota usage for a search sku in the given subscription.
     * @param location The unique location name for a Microsoft Azure geographic region.
     * @param skuName The unique search service sku name supported by Azure Cognitive Search.
     * @param options The options parameters.
     */
    usageBySubscriptionSku(location: string, skuName: string, options?: UsageBySubscriptionSkuOptionalParams): Promise<UsageBySubscriptionSkuResponse>;
    operations: Operations;
    adminKeys: AdminKeys;
    queryKeys: QueryKeys;
    services: Services;
    privateLinkResources: PrivateLinkResources;
    privateEndpointConnections: PrivateEndpointConnections;
    sharedPrivateLinkResources: SharedPrivateLinkResources;
    usages: Usages;
}

/** Optional parameters. */
export declare interface SearchManagementClientOptionalParams extends coreClient.ServiceClientOptions {
    /** server parameter */
    $host?: string;
    /** Api Version */
    apiVersion?: string;
    /** Overrides client endpoint. */
    endpoint?: string;
}

/** Parameter group */
export declare interface SearchManagementRequestOptions {
    /** A client-generated GUID value that identifies this request. If specified, this will be included in response information as a way to track the request. */
    clientRequestId?: string;
}

/**
 * Defines values for SearchSemanticSearch. \
 * {@link KnownSearchSemanticSearch} can be used interchangeably with SearchSemanticSearch,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **disabled**: Indicates that semantic search is disabled for the search service. \
 * **free**: Enables semantic search on a search service and indicates that it is to be used within the limits of the free tier. This would cap the volume of semantic search requests and is offered at no extra charge. This is the default for newly provisioned search services. \
 * **standard**: Enables semantic search on a search service as a billable feature, with higher throughput and volume of semantic search queries.
 */
export declare type SearchSemanticSearch = string;

/** Describes an Azure Cognitive Search service and its current state. */
export declare interface SearchService extends TrackedResource {
    /** The SKU of the Search Service, which determines price tier and capacity limits. This property is required when creating a new Search Service. */
    sku?: Sku;
    /** The identity of the resource. */
    identity?: Identity;
    /** The number of replicas in the search service. If specified, it must be a value between 1 and 12 inclusive for standard SKUs or between 1 and 3 inclusive for basic SKU. */
    replicaCount?: number;
    /** The number of partitions in the search service; if specified, it can be 1, 2, 3, 4, 6, or 12. Values greater than 1 are only valid for standard SKUs. For 'standard3' services with hostingMode set to 'highDensity', the allowed values are between 1 and 3. */
    partitionCount?: number;
    /** Applicable only for the standard3 SKU. You can set this property to enable up to 3 high density partitions that allow up to 1000 indexes, which is much higher than the maximum indexes allowed for any other SKU. For the standard3 SKU, the value is either 'default' or 'highDensity'. For all other SKUs, this value must be 'default'. */
    hostingMode?: HostingMode;
    /** This value can be set to 'enabled' to avoid breaking changes on existing customer resources and templates. If set to 'disabled', traffic over public interface is not allowed, and private endpoint connections would be the exclusive access method. */
    publicNetworkAccess?: PublicNetworkAccess;
    /**
     * The status of the search service. Possible values include: 'running': The search service is running and no provisioning operations are underway. 'provisioning': The search service is being provisioned or scaled up or down. 'deleting': The search service is being deleted. 'degraded': The search service is degraded. This can occur when the underlying search units are not healthy. The search service is most likely operational, but performance might be slow and some requests might be dropped. 'disabled': The search service is disabled. In this state, the service will reject all API requests. 'error': The search service is in an error state. If your service is in the degraded, disabled, or error states, it means the Azure Cognitive Search team is actively investigating the underlying issue. Dedicated services in these states are still chargeable based on the number of search units provisioned.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly status?: SearchServiceStatus;
    /**
     * The details of the search service status.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly statusDetails?: string;
    /**
     * The state of the last provisioning operation performed on the search service. Provisioning is an intermediate state that occurs while service capacity is being established. After capacity is set up, provisioningState changes to either 'succeeded' or 'failed'. Client applications can poll provisioning status (the recommended polling interval is from 30 seconds to one minute) by using the Get Search Service operation to see when an operation is completed. If you are using the free service, this value tends to come back as 'succeeded' directly in the call to Create search service. This is because the free service uses capacity that is already set up.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: ProvisioningState;
    /** Network specific rules that determine how the Azure Cognitive Search service may be reached. */
    networkRuleSet?: NetworkRuleSet;
    /** Specifies any policy regarding encryption of resources (such as indexes) using customer manager keys within a search service. */
    encryptionWithCmk?: EncryptionWithCmk;
    /** When set to true, calls to the search service will not be permitted to utilize API keys for authentication. This cannot be set to true if 'dataPlaneAuthOptions' are defined. */
    disableLocalAuth?: boolean;
    /** Defines the options for how the data plane API of a search service authenticates requests. This cannot be set if 'disableLocalAuth' is set to true. */
    authOptions?: DataPlaneAuthOptions;
    /**
     * The list of private endpoint connections to the Azure Cognitive Search service.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly privateEndpointConnections?: PrivateEndpointConnection[];
    /** Sets options that control the availability of semantic search. This configuration is only possible for certain Azure Cognitive Search SKUs in certain locations. */
    semanticSearch?: SearchSemanticSearch;
    /**
     * The list of shared private link resources managed by the Azure Cognitive Search service.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly sharedPrivateLinkResources?: SharedPrivateLinkResource[];
}

/** Response containing a list of Azure Cognitive Search services. */
export declare interface SearchServiceListResult {
    /**
     * The list of Search services.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: SearchService[];
    /**
     * Request URL that can be used to query next page of search services. Returned when the total number of requested search services exceed maximum page size.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Defines values for SearchServiceStatus. */
export declare type SearchServiceStatus = "running" | "provisioning" | "deleting" | "degraded" | "disabled" | "error";

/** The parameters used to update an Azure Cognitive Search service. */
export declare interface SearchServiceUpdate extends Resource {
    /** The SKU of the Search Service, which determines price tier and capacity limits. This property is required when creating a new Search Service. */
    sku?: Sku;
    /** The geographic location of the resource. This must be one of the supported and registered Azure Geo Regions (for example, West US, East US, Southeast Asia, and so forth). This property is required when creating a new resource. */
    location?: string;
    /** Tags to help categorize the resource in the Azure portal. */
    tags?: {
        [propertyName: string]: string;
    };
    /** The identity of the resource. */
    identity?: Identity;
    /** The number of replicas in the search service. If specified, it must be a value between 1 and 12 inclusive for standard SKUs or between 1 and 3 inclusive for basic SKU. */
    replicaCount?: number;
    /** The number of partitions in the search service; if specified, it can be 1, 2, 3, 4, 6, or 12. Values greater than 1 are only valid for standard SKUs. For 'standard3' services with hostingMode set to 'highDensity', the allowed values are between 1 and 3. */
    partitionCount?: number;
    /** Applicable only for the standard3 SKU. You can set this property to enable up to 3 high density partitions that allow up to 1000 indexes, which is much higher than the maximum indexes allowed for any other SKU. For the standard3 SKU, the value is either 'default' or 'highDensity'. For all other SKUs, this value must be 'default'. */
    hostingMode?: HostingMode;
    /** This value can be set to 'enabled' to avoid breaking changes on existing customer resources and templates. If set to 'disabled', traffic over public interface is not allowed, and private endpoint connections would be the exclusive access method. */
    publicNetworkAccess?: PublicNetworkAccess;
    /**
     * The status of the search service. Possible values include: 'running': The search service is running and no provisioning operations are underway. 'provisioning': The search service is being provisioned or scaled up or down. 'deleting': The search service is being deleted. 'degraded': The search service is degraded. This can occur when the underlying search units are not healthy. The search service is most likely operational, but performance might be slow and some requests might be dropped. 'disabled': The search service is disabled. In this state, the service will reject all API requests. 'error': The search service is in an error state. If your service is in the degraded, disabled, or error states, it means the Azure Cognitive Search team is actively investigating the underlying issue. Dedicated services in these states are still chargeable based on the number of search units provisioned.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly status?: SearchServiceStatus;
    /**
     * The details of the search service status.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly statusDetails?: string;
    /**
     * The state of the last provisioning operation performed on the search service. Provisioning is an intermediate state that occurs while service capacity is being established. After capacity is set up, provisioningState changes to either 'succeeded' or 'failed'. Client applications can poll provisioning status (the recommended polling interval is from 30 seconds to one minute) by using the Get Search Service operation to see when an operation is completed. If you are using the free service, this value tends to come back as 'succeeded' directly in the call to Create search service. This is because the free service uses capacity that is already set up.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: ProvisioningState;
    /** Network specific rules that determine how the Azure Cognitive Search service may be reached. */
    networkRuleSet?: NetworkRuleSet;
    /** Specifies any policy regarding encryption of resources (such as indexes) using customer manager keys within a search service. */
    encryptionWithCmk?: EncryptionWithCmk;
    /** When set to true, calls to the search service will not be permitted to utilize API keys for authentication. This cannot be set to true if 'dataPlaneAuthOptions' are defined. */
    disableLocalAuth?: boolean;
    /** Defines the options for how the data plane API of a search service authenticates requests. This cannot be set if 'disableLocalAuth' is set to true. */
    authOptions?: DataPlaneAuthOptions;
    /**
     * The list of private endpoint connections to the Azure Cognitive Search service.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly privateEndpointConnections?: PrivateEndpointConnection[];
    /** Sets options that control the availability of semantic search. This configuration is only possible for certain Azure Cognitive Search SKUs in certain locations. */
    semanticSearch?: SearchSemanticSearch;
    /**
     * The list of shared private link resources managed by the Azure Cognitive Search service.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly sharedPrivateLinkResources?: SharedPrivateLinkResource[];
}

/** Interface representing a Services. */
export declare interface Services {
    /**
     * Gets a list of all Search services in the given resource group.
     * @param resourceGroupName The name of the resource group within the current subscription. You can
     *                          obtain this value from the Azure Resource Manager API or the portal.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: ServicesListByResourceGroupOptionalParams): PagedAsyncIterableIterator<SearchService>;
    /**
     * Gets a list of all Search services in the given subscription.
     * @param options The options parameters.
     */
    listBySubscription(options?: ServicesListBySubscriptionOptionalParams): PagedAsyncIterableIterator<SearchService>;
    /**
     * Creates or updates a search service in the given resource group. If the search service already
     * exists, all properties will be updated with the given values.
     * @param resourceGroupName The name of the resource group within the current subscription. You can
     *                          obtain this value from the Azure Resource Manager API or the portal.
     * @param searchServiceName The name of the Azure Cognitive Search service to create or update. Search
     *                          service names must only contain lowercase letters, digits or dashes, cannot use dash as the first
     *                          two or last one characters, cannot contain consecutive dashes, and must be between 2 and 60
     *                          characters in length. Search service names must be globally unique since they are part of the
     *                          service URI (https://<name>.search.windows.net). You cannot change the service name after the
     *                          service is created.
     * @param service The definition of the search service to create or update.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, searchServiceName: string, service: SearchService, options?: ServicesCreateOrUpdateOptionalParams): Promise<SimplePollerLike<OperationState<ServicesCreateOrUpdateResponse>, ServicesCreateOrUpdateResponse>>;
    /**
     * Creates or updates a search service in the given resource group. If the search service already
     * exists, all properties will be updated with the given values.
     * @param resourceGroupName The name of the resource group within the current subscription. You can
     *                          obtain this value from the Azure Resource Manager API or the portal.
     * @param searchServiceName The name of the Azure Cognitive Search service to create or update. Search
     *                          service names must only contain lowercase letters, digits or dashes, cannot use dash as the first
     *                          two or last one characters, cannot contain consecutive dashes, and must be between 2 and 60
     *                          characters in length. Search service names must be globally unique since they are part of the
     *                          service URI (https://<name>.search.windows.net). You cannot change the service name after the
     *                          service is created.
     * @param service The definition of the search service to create or update.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, searchServiceName: string, service: SearchService, options?: ServicesCreateOrUpdateOptionalParams): Promise<ServicesCreateOrUpdateResponse>;
    /**
     * Updates an existing search service in the given resource group.
     * @param resourceGroupName The name of the resource group within the current subscription. You can
     *                          obtain this value from the Azure Resource Manager API or the portal.
     * @param searchServiceName The name of the Azure Cognitive Search service to update.
     * @param service The definition of the search service to update.
     * @param options The options parameters.
     */
    update(resourceGroupName: string, searchServiceName: string, service: SearchServiceUpdate, options?: ServicesUpdateOptionalParams): Promise<ServicesUpdateResponse>;
    /**
     * Gets the search service with the given name in the given resource group.
     * @param resourceGroupName The name of the resource group within the current subscription. You can
     *                          obtain this value from the Azure Resource Manager API or the portal.
     * @param searchServiceName The name of the Azure Cognitive Search service associated with the
     *                          specified resource group.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, searchServiceName: string, options?: ServicesGetOptionalParams): Promise<ServicesGetResponse>;
    /**
     * Deletes a search service in the given resource group, along with its associated resources.
     * @param resourceGroupName The name of the resource group within the current subscription. You can
     *                          obtain this value from the Azure Resource Manager API or the portal.
     * @param searchServiceName The name of the Azure Cognitive Search service associated with the
     *                          specified resource group.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, searchServiceName: string, options?: ServicesDeleteOptionalParams): Promise<void>;
    /**
     * Checks whether or not the given search service name is available for use. Search service names must
     * be globally unique since they are part of the service URI (https://<name>.search.windows.net).
     * @param name The search service name to validate. Search service names must only contain lowercase
     *             letters, digits or dashes, cannot use dash as the first two or last one characters, cannot contain
     *             consecutive dashes, and must be between 2 and 60 characters in length.
     * @param options The options parameters.
     */
    checkNameAvailability(name: string, options?: ServicesCheckNameAvailabilityOptionalParams): Promise<ServicesCheckNameAvailabilityResponse>;
}

/** Optional parameters. */
export declare interface ServicesCheckNameAvailabilityOptionalParams extends coreClient.OperationOptions {
    /** Parameter group */
    searchManagementRequestOptions?: SearchManagementRequestOptions;
}

/** Contains response data for the checkNameAvailability operation. */
export declare type ServicesCheckNameAvailabilityResponse = CheckNameAvailabilityOutput;

/** Optional parameters. */
export declare interface ServicesCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
    /** Parameter group */
    searchManagementRequestOptions?: SearchManagementRequestOptions;
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export declare type ServicesCreateOrUpdateResponse = SearchService;

/** Optional parameters. */
export declare interface ServicesDeleteOptionalParams extends coreClient.OperationOptions {
    /** Parameter group */
    searchManagementRequestOptions?: SearchManagementRequestOptions;
}

/** Optional parameters. */
export declare interface ServicesGetOptionalParams extends coreClient.OperationOptions {
    /** Parameter group */
    searchManagementRequestOptions?: SearchManagementRequestOptions;
}

/** Contains response data for the get operation. */
export declare type ServicesGetResponse = SearchService;

/** Optional parameters. */
export declare interface ServicesListByResourceGroupNextOptionalParams extends coreClient.OperationOptions {
    /** Parameter group */
    searchManagementRequestOptions?: SearchManagementRequestOptions;
}

/** Contains response data for the listByResourceGroupNext operation. */
export declare type ServicesListByResourceGroupNextResponse = SearchServiceListResult;

/** Optional parameters. */
export declare interface ServicesListByResourceGroupOptionalParams extends coreClient.OperationOptions {
    /** Parameter group */
    searchManagementRequestOptions?: SearchManagementRequestOptions;
}

/** Contains response data for the listByResourceGroup operation. */
export declare type ServicesListByResourceGroupResponse = SearchServiceListResult;

/** Optional parameters. */
export declare interface ServicesListBySubscriptionNextOptionalParams extends coreClient.OperationOptions {
    /** Parameter group */
    searchManagementRequestOptions?: SearchManagementRequestOptions;
}

/** Contains response data for the listBySubscriptionNext operation. */
export declare type ServicesListBySubscriptionNextResponse = SearchServiceListResult;

/** Optional parameters. */
export declare interface ServicesListBySubscriptionOptionalParams extends coreClient.OperationOptions {
    /** Parameter group */
    searchManagementRequestOptions?: SearchManagementRequestOptions;
}

/** Contains response data for the listBySubscription operation. */
export declare type ServicesListBySubscriptionResponse = SearchServiceListResult;

/** Optional parameters. */
export declare interface ServicesUpdateOptionalParams extends coreClient.OperationOptions {
    /** Parameter group */
    searchManagementRequestOptions?: SearchManagementRequestOptions;
}

/** Contains response data for the update operation. */
export declare type ServicesUpdateResponse = SearchService;

/** Describes the properties of a resource type that has been onboarded to private link service, supported by Azure Cognitive Search. */
export declare interface ShareablePrivateLinkResourceProperties {
    /**
     * The resource provider type for the resource that has been onboarded to private link service, supported by Azure Cognitive Search.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /**
     * The resource provider group id for the resource that has been onboarded to private link service, supported by Azure Cognitive Search.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly groupId?: string;
    /**
     * The description of the resource type that has been onboarded to private link service, supported by Azure Cognitive Search.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly description?: string;
}

/** Describes an resource type that has been onboarded to private link service, supported by Azure Cognitive Search. */
export declare interface ShareablePrivateLinkResourceType {
    /**
     * The name of the resource type that has been onboarded to private link service, supported by Azure Cognitive Search.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * Describes the properties of a resource type that has been onboarded to private link service, supported by Azure Cognitive Search.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly properties?: ShareablePrivateLinkResourceProperties;
}

/** Describes a Shared Private Link Resource managed by the Azure Cognitive Search service. */
export declare interface SharedPrivateLinkResource extends Resource {
    /** Describes the properties of a Shared Private Link Resource managed by the Azure Cognitive Search service. */
    properties?: SharedPrivateLinkResourceProperties;
}

/**
 * Defines values for SharedPrivateLinkResourceAsyncOperationResult. \
 * {@link KnownSharedPrivateLinkResourceAsyncOperationResult} can be used interchangeably with SharedPrivateLinkResourceAsyncOperationResult,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Running** \
 * **Succeeded** \
 * **Failed**
 */
export declare type SharedPrivateLinkResourceAsyncOperationResult = string;

/** Response containing a list of Shared Private Link Resources. */
export declare interface SharedPrivateLinkResourceListResult {
    /**
     * The list of Shared Private Link Resources.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: SharedPrivateLinkResource[];
    /** The URL to get the next set of shared private link resources, if there are any. */
    nextLink?: string;
}

/** Describes the properties of an existing Shared Private Link Resource managed by the Azure Cognitive Search service. */
export declare interface SharedPrivateLinkResourceProperties {
    /** The resource id of the resource the shared private link resource is for. */
    privateLinkResourceId?: string;
    /** The group id from the provider of resource the shared private link resource is for. */
    groupId?: string;
    /** The request message for requesting approval of the shared private link resource. */
    requestMessage?: string;
    /** Optional. Can be used to specify the Azure Resource Manager location of the resource to which a shared private link is to be created. This is only required for those resources whose DNS configuration are regional (such as Azure Kubernetes Service). */
    resourceRegion?: string;
    /** Status of the shared private link resource. Can be Pending, Approved, Rejected or Disconnected. */
    status?: SharedPrivateLinkResourceStatus;
    /** The provisioning state of the shared private link resource. Can be Updating, Deleting, Failed, Succeeded or Incomplete. */
    provisioningState?: SharedPrivateLinkResourceProvisioningState;
}

/** Defines values for SharedPrivateLinkResourceProvisioningState. */
export declare type SharedPrivateLinkResourceProvisioningState = "Updating" | "Deleting" | "Failed" | "Succeeded" | "Incomplete";

/** Interface representing a SharedPrivateLinkResources. */
export declare interface SharedPrivateLinkResources {
    /**
     * Gets a list of all shared private link resources managed by the given service.
     * @param resourceGroupName The name of the resource group within the current subscription. You can
     *                          obtain this value from the Azure Resource Manager API or the portal.
     * @param searchServiceName The name of the Azure Cognitive Search service associated with the
     *                          specified resource group.
     * @param options The options parameters.
     */
    listByService(resourceGroupName: string, searchServiceName: string, options?: SharedPrivateLinkResourcesListByServiceOptionalParams): PagedAsyncIterableIterator<SharedPrivateLinkResource>;
    /**
     * Initiates the creation or update of a shared private link resource managed by the search service in
     * the given resource group.
     * @param resourceGroupName The name of the resource group within the current subscription. You can
     *                          obtain this value from the Azure Resource Manager API or the portal.
     * @param searchServiceName The name of the Azure Cognitive Search service associated with the
     *                          specified resource group.
     * @param sharedPrivateLinkResourceName The name of the shared private link resource managed by the
     *                                      Azure Cognitive Search service within the specified resource group.
     * @param sharedPrivateLinkResource The definition of the shared private link resource to create or
     *                                  update.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, searchServiceName: string, sharedPrivateLinkResourceName: string, sharedPrivateLinkResource: SharedPrivateLinkResource, options?: SharedPrivateLinkResourcesCreateOrUpdateOptionalParams): Promise<SimplePollerLike<OperationState<SharedPrivateLinkResourcesCreateOrUpdateResponse>, SharedPrivateLinkResourcesCreateOrUpdateResponse>>;
    /**
     * Initiates the creation or update of a shared private link resource managed by the search service in
     * the given resource group.
     * @param resourceGroupName The name of the resource group within the current subscription. You can
     *                          obtain this value from the Azure Resource Manager API or the portal.
     * @param searchServiceName The name of the Azure Cognitive Search service associated with the
     *                          specified resource group.
     * @param sharedPrivateLinkResourceName The name of the shared private link resource managed by the
     *                                      Azure Cognitive Search service within the specified resource group.
     * @param sharedPrivateLinkResource The definition of the shared private link resource to create or
     *                                  update.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, searchServiceName: string, sharedPrivateLinkResourceName: string, sharedPrivateLinkResource: SharedPrivateLinkResource, options?: SharedPrivateLinkResourcesCreateOrUpdateOptionalParams): Promise<SharedPrivateLinkResourcesCreateOrUpdateResponse>;
    /**
     * Gets the details of the shared private link resource managed by the search service in the given
     * resource group.
     * @param resourceGroupName The name of the resource group within the current subscription. You can
     *                          obtain this value from the Azure Resource Manager API or the portal.
     * @param searchServiceName The name of the Azure Cognitive Search service associated with the
     *                          specified resource group.
     * @param sharedPrivateLinkResourceName The name of the shared private link resource managed by the
     *                                      Azure Cognitive Search service within the specified resource group.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, searchServiceName: string, sharedPrivateLinkResourceName: string, options?: SharedPrivateLinkResourcesGetOptionalParams): Promise<SharedPrivateLinkResourcesGetResponse>;
    /**
     * Initiates the deletion of the shared private link resource from the search service.
     * @param resourceGroupName The name of the resource group within the current subscription. You can
     *                          obtain this value from the Azure Resource Manager API or the portal.
     * @param searchServiceName The name of the Azure Cognitive Search service associated with the
     *                          specified resource group.
     * @param sharedPrivateLinkResourceName The name of the shared private link resource managed by the
     *                                      Azure Cognitive Search service within the specified resource group.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, searchServiceName: string, sharedPrivateLinkResourceName: string, options?: SharedPrivateLinkResourcesDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Initiates the deletion of the shared private link resource from the search service.
     * @param resourceGroupName The name of the resource group within the current subscription. You can
     *                          obtain this value from the Azure Resource Manager API or the portal.
     * @param searchServiceName The name of the Azure Cognitive Search service associated with the
     *                          specified resource group.
     * @param sharedPrivateLinkResourceName The name of the shared private link resource managed by the
     *                                      Azure Cognitive Search service within the specified resource group.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, searchServiceName: string, sharedPrivateLinkResourceName: string, options?: SharedPrivateLinkResourcesDeleteOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface SharedPrivateLinkResourcesCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
    /** Parameter group */
    searchManagementRequestOptions?: SearchManagementRequestOptions;
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export declare type SharedPrivateLinkResourcesCreateOrUpdateResponse = SharedPrivateLinkResource;

/** Optional parameters. */
export declare interface SharedPrivateLinkResourcesDeleteOptionalParams extends coreClient.OperationOptions {
    /** Parameter group */
    searchManagementRequestOptions?: SearchManagementRequestOptions;
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface SharedPrivateLinkResourcesGetOptionalParams extends coreClient.OperationOptions {
    /** Parameter group */
    searchManagementRequestOptions?: SearchManagementRequestOptions;
}

/** Contains response data for the get operation. */
export declare type SharedPrivateLinkResourcesGetResponse = SharedPrivateLinkResource;

/** Optional parameters. */
export declare interface SharedPrivateLinkResourcesListByServiceNextOptionalParams extends coreClient.OperationOptions {
    /** Parameter group */
    searchManagementRequestOptions?: SearchManagementRequestOptions;
}

/** Contains response data for the listByServiceNext operation. */
export declare type SharedPrivateLinkResourcesListByServiceNextResponse = SharedPrivateLinkResourceListResult;

/** Optional parameters. */
export declare interface SharedPrivateLinkResourcesListByServiceOptionalParams extends coreClient.OperationOptions {
    /** Parameter group */
    searchManagementRequestOptions?: SearchManagementRequestOptions;
}

/** Contains response data for the listByService operation. */
export declare type SharedPrivateLinkResourcesListByServiceResponse = SharedPrivateLinkResourceListResult;

/** Defines values for SharedPrivateLinkResourceStatus. */
export declare type SharedPrivateLinkResourceStatus = "Pending" | "Approved" | "Rejected" | "Disconnected";

/** Defines the SKU of an Azure Cognitive Search Service, which determines price tier and capacity limits. */
export declare interface Sku {
    /** The SKU of the search service. Valid values include: 'free': Shared service. 'basic': Dedicated service with up to 3 replicas. 'standard': Dedicated service with up to 12 partitions and 12 replicas. 'standard2': Similar to standard, but with more capacity per search unit. 'standard3': The largest Standard offering with up to 12 partitions and 12 replicas (or up to 3 partitions with more indexes if you also set the hostingMode property to 'highDensity'). 'storage_optimized_l1': Supports 1TB per partition, up to 12 partitions. 'storage_optimized_l2': Supports 2TB per partition, up to 12 partitions.' */
    name?: SkuName;
}

/** Defines values for SkuName. */
export declare type SkuName = "free" | "basic" | "standard" | "standard2" | "standard3" | "storage_optimized_l1" | "storage_optimized_l2";

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export declare interface TrackedResource extends Resource {
    /** Resource tags. */
    tags?: {
        [propertyName: string]: string;
    };
    /** The geo-location where the resource lives */
    location: string;
}

/**
 * Defines values for UnavailableNameReason. \
 * {@link KnownUnavailableNameReason} can be used interchangeably with UnavailableNameReason,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid**: The search service name does not match naming requirements. \
 * **AlreadyExists**: The search service name is already assigned to a different search service.
 */
export declare type UnavailableNameReason = string;

/** Optional parameters. */
export declare interface UsageBySubscriptionSkuOptionalParams extends coreClient.OperationOptions {
    /** Parameter group */
    searchManagementRequestOptions?: SearchManagementRequestOptions;
}

/** Contains response data for the usageBySubscriptionSku operation. */
export declare type UsageBySubscriptionSkuResponse = QuotaUsageResult;

/** Interface representing a Usages. */
export declare interface Usages {
    /**
     * Gets a list of all Search quota usages in the given subscription.
     * @param location The unique location name for a Microsoft Azure geographic region.
     * @param options The options parameters.
     */
    listBySubscription(location: string, options?: UsagesListBySubscriptionOptionalParams): PagedAsyncIterableIterator<QuotaUsageResult>;
}

/** Optional parameters. */
export declare interface UsagesListBySubscriptionNextOptionalParams extends coreClient.OperationOptions {
    /** Parameter group */
    searchManagementRequestOptions?: SearchManagementRequestOptions;
}

/** Contains response data for the listBySubscriptionNext operation. */
export declare type UsagesListBySubscriptionNextResponse = QuotaUsagesListResult;

/** Optional parameters. */
export declare interface UsagesListBySubscriptionOptionalParams extends coreClient.OperationOptions {
    /** Parameter group */
    searchManagementRequestOptions?: SearchManagementRequestOptions;
}

/** Contains response data for the listBySubscription operation. */
export declare type UsagesListBySubscriptionResponse = QuotaUsagesListResult;

export { }
