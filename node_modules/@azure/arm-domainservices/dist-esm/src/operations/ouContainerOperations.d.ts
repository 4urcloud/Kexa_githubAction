import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { OuContainerOperations } from "../operationsInterfaces";
import { DomainServicesResourceProvider } from "../domainServicesResourceProvider";
import { OperationEntity, OuContainerOperationsListOptionalParams } from "../models";
/** Class containing OuContainerOperations operations. */
export declare class OuContainerOperationsImpl implements OuContainerOperations {
    private readonly client;
    /**
     * Initialize a new instance of the class OuContainerOperations class.
     * @param client Reference to the service client
     */
    constructor(client: DomainServicesResourceProvider);
    /**
     * Lists all the available OuContainer operations.
     * @param options The options parameters.
     */
    list(options?: OuContainerOperationsListOptionalParams): PagedAsyncIterableIterator<OperationEntity>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Lists all the available OuContainer operations.
     * @param options The options parameters.
     */
    private _list;
    /**
     * ListNext
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=ouContainerOperations.d.ts.map