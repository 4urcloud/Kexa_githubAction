import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { DataLakeAnalyticsAccountManagementClientContext } from "../dataLakeAnalyticsAccountManagementClientContext";
/** Class representing a DataLakeStoreAccounts. */
export declare class DataLakeStoreAccounts {
    private readonly client;
    /**
     * Create a DataLakeStoreAccounts.
     * @param {DataLakeAnalyticsAccountManagementClientContext} client Reference to the service client.
     */
    constructor(client: DataLakeAnalyticsAccountManagementClientContext);
    /**
     * Gets the first page of Data Lake Store accounts linked to the specified Data Lake Analytics
     * account. The response includes a link to the next page, if any.
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Analytics account.
     * @param [options] The optional parameters
     * @returns Promise<Models.DataLakeStoreAccountsListByAccountResponse>
     */
    listByAccount(resourceGroupName: string, accountName: string, options?: Models.DataLakeStoreAccountsListByAccountOptionalParams): Promise<Models.DataLakeStoreAccountsListByAccountResponse>;
    /**
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Analytics account.
     * @param callback The callback
     */
    listByAccount(resourceGroupName: string, accountName: string, callback: msRest.ServiceCallback<Models.DataLakeStoreAccountInformationListResult>): void;
    /**
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Analytics account.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByAccount(resourceGroupName: string, accountName: string, options: Models.DataLakeStoreAccountsListByAccountOptionalParams, callback: msRest.ServiceCallback<Models.DataLakeStoreAccountInformationListResult>): void;
    /**
     * Updates the specified Data Lake Analytics account to include the additional Data Lake Store
     * account.
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Analytics account.
     * @param dataLakeStoreAccountName The name of the Data Lake Store account to add.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    add(resourceGroupName: string, accountName: string, dataLakeStoreAccountName: string, options?: Models.DataLakeStoreAccountsAddOptionalParams): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Analytics account.
     * @param dataLakeStoreAccountName The name of the Data Lake Store account to add.
     * @param callback The callback
     */
    add(resourceGroupName: string, accountName: string, dataLakeStoreAccountName: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Analytics account.
     * @param dataLakeStoreAccountName The name of the Data Lake Store account to add.
     * @param options The optional parameters
     * @param callback The callback
     */
    add(resourceGroupName: string, accountName: string, dataLakeStoreAccountName: string, options: Models.DataLakeStoreAccountsAddOptionalParams, callback: msRest.ServiceCallback<void>): void;
    /**
     * Gets the specified Data Lake Store account details in the specified Data Lake Analytics account.
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Analytics account.
     * @param dataLakeStoreAccountName The name of the Data Lake Store account to retrieve
     * @param [options] The optional parameters
     * @returns Promise<Models.DataLakeStoreAccountsGetResponse>
     */
    get(resourceGroupName: string, accountName: string, dataLakeStoreAccountName: string, options?: msRest.RequestOptionsBase): Promise<Models.DataLakeStoreAccountsGetResponse>;
    /**
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Analytics account.
     * @param dataLakeStoreAccountName The name of the Data Lake Store account to retrieve
     * @param callback The callback
     */
    get(resourceGroupName: string, accountName: string, dataLakeStoreAccountName: string, callback: msRest.ServiceCallback<Models.DataLakeStoreAccountInformation>): void;
    /**
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Analytics account.
     * @param dataLakeStoreAccountName The name of the Data Lake Store account to retrieve
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, accountName: string, dataLakeStoreAccountName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DataLakeStoreAccountInformation>): void;
    /**
     * Updates the Data Lake Analytics account specified to remove the specified Data Lake Store
     * account.
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Analytics account.
     * @param dataLakeStoreAccountName The name of the Data Lake Store account to remove
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroupName: string, accountName: string, dataLakeStoreAccountName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Analytics account.
     * @param dataLakeStoreAccountName The name of the Data Lake Store account to remove
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, accountName: string, dataLakeStoreAccountName: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Analytics account.
     * @param dataLakeStoreAccountName The name of the Data Lake Store account to remove
     * @param options The optional parameters
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, accountName: string, dataLakeStoreAccountName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Gets the first page of Data Lake Store accounts linked to the specified Data Lake Analytics
     * account. The response includes a link to the next page, if any.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.DataLakeStoreAccountsListByAccountNextResponse>
     */
    listByAccountNext(nextPageLink: string, options?: Models.DataLakeStoreAccountsListByAccountNextOptionalParams): Promise<Models.DataLakeStoreAccountsListByAccountNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByAccountNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.DataLakeStoreAccountInformationListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByAccountNext(nextPageLink: string, options: Models.DataLakeStoreAccountsListByAccountNextOptionalParams, callback: msRest.ServiceCallback<Models.DataLakeStoreAccountInformationListResult>): void;
}
//# sourceMappingURL=dataLakeStoreAccounts.d.ts.map