import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { DataLakeAnalyticsAccountManagementClientContext } from "../dataLakeAnalyticsAccountManagementClientContext";
/** Class representing a StorageAccounts. */
export declare class StorageAccounts {
    private readonly client;
    /**
     * Create a StorageAccounts.
     * @param {DataLakeAnalyticsAccountManagementClientContext} client Reference to the service client.
     */
    constructor(client: DataLakeAnalyticsAccountManagementClientContext);
    /**
     * Gets the first page of Azure Storage accounts, if any, linked to the specified Data Lake
     * Analytics account. The response includes a link to the next page, if any.
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Analytics account.
     * @param [options] The optional parameters
     * @returns Promise<Models.StorageAccountsListByAccountResponse>
     */
    listByAccount(resourceGroupName: string, accountName: string, options?: Models.StorageAccountsListByAccountOptionalParams): Promise<Models.StorageAccountsListByAccountResponse>;
    /**
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Analytics account.
     * @param callback The callback
     */
    listByAccount(resourceGroupName: string, accountName: string, callback: msRest.ServiceCallback<Models.StorageAccountInformationListResult>): void;
    /**
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Analytics account.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByAccount(resourceGroupName: string, accountName: string, options: Models.StorageAccountsListByAccountOptionalParams, callback: msRest.ServiceCallback<Models.StorageAccountInformationListResult>): void;
    /**
     * Updates the specified Data Lake Analytics account to add an Azure Storage account.
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Analytics account.
     * @param storageAccountName The name of the Azure Storage account to add
     * @param parameters The parameters containing the access key and optional suffix for the Azure
     * Storage Account.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    add(resourceGroupName: string, accountName: string, storageAccountName: string, parameters: Models.AddStorageAccountParameters, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Analytics account.
     * @param storageAccountName The name of the Azure Storage account to add
     * @param parameters The parameters containing the access key and optional suffix for the Azure
     * Storage Account.
     * @param callback The callback
     */
    add(resourceGroupName: string, accountName: string, storageAccountName: string, parameters: Models.AddStorageAccountParameters, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Analytics account.
     * @param storageAccountName The name of the Azure Storage account to add
     * @param parameters The parameters containing the access key and optional suffix for the Azure
     * Storage Account.
     * @param options The optional parameters
     * @param callback The callback
     */
    add(resourceGroupName: string, accountName: string, storageAccountName: string, parameters: Models.AddStorageAccountParameters, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Gets the specified Azure Storage account linked to the given Data Lake Analytics account.
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Analytics account.
     * @param storageAccountName The name of the Azure Storage account for which to retrieve the
     * details.
     * @param [options] The optional parameters
     * @returns Promise<Models.StorageAccountsGetResponse>
     */
    get(resourceGroupName: string, accountName: string, storageAccountName: string, options?: msRest.RequestOptionsBase): Promise<Models.StorageAccountsGetResponse>;
    /**
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Analytics account.
     * @param storageAccountName The name of the Azure Storage account for which to retrieve the
     * details.
     * @param callback The callback
     */
    get(resourceGroupName: string, accountName: string, storageAccountName: string, callback: msRest.ServiceCallback<Models.StorageAccountInformation>): void;
    /**
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Analytics account.
     * @param storageAccountName The name of the Azure Storage account for which to retrieve the
     * details.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, accountName: string, storageAccountName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.StorageAccountInformation>): void;
    /**
     * Updates the Data Lake Analytics account to replace Azure Storage blob account details, such as
     * the access key and/or suffix.
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Analytics account.
     * @param storageAccountName The Azure Storage account to modify
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    update(resourceGroupName: string, accountName: string, storageAccountName: string, options?: Models.StorageAccountsUpdateOptionalParams): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Analytics account.
     * @param storageAccountName The Azure Storage account to modify
     * @param callback The callback
     */
    update(resourceGroupName: string, accountName: string, storageAccountName: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Analytics account.
     * @param storageAccountName The Azure Storage account to modify
     * @param options The optional parameters
     * @param callback The callback
     */
    update(resourceGroupName: string, accountName: string, storageAccountName: string, options: Models.StorageAccountsUpdateOptionalParams, callback: msRest.ServiceCallback<void>): void;
    /**
     * Updates the specified Data Lake Analytics account to remove an Azure Storage account.
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Analytics account.
     * @param storageAccountName The name of the Azure Storage account to remove
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroupName: string, accountName: string, storageAccountName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Analytics account.
     * @param storageAccountName The name of the Azure Storage account to remove
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, accountName: string, storageAccountName: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Analytics account.
     * @param storageAccountName The name of the Azure Storage account to remove
     * @param options The optional parameters
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, accountName: string, storageAccountName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Lists the Azure Storage containers, if any, associated with the specified Data Lake Analytics
     * and Azure Storage account combination. The response includes a link to the next page of results,
     * if any.
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Analytics account.
     * @param storageAccountName The name of the Azure storage account from which to list blob
     * containers.
     * @param [options] The optional parameters
     * @returns Promise<Models.StorageAccountsListStorageContainersResponse>
     */
    listStorageContainers(resourceGroupName: string, accountName: string, storageAccountName: string, options?: msRest.RequestOptionsBase): Promise<Models.StorageAccountsListStorageContainersResponse>;
    /**
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Analytics account.
     * @param storageAccountName The name of the Azure storage account from which to list blob
     * containers.
     * @param callback The callback
     */
    listStorageContainers(resourceGroupName: string, accountName: string, storageAccountName: string, callback: msRest.ServiceCallback<Models.StorageContainerListResult>): void;
    /**
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Analytics account.
     * @param storageAccountName The name of the Azure storage account from which to list blob
     * containers.
     * @param options The optional parameters
     * @param callback The callback
     */
    listStorageContainers(resourceGroupName: string, accountName: string, storageAccountName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.StorageContainerListResult>): void;
    /**
     * Gets the specified Azure Storage container associated with the given Data Lake Analytics and
     * Azure Storage accounts.
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Analytics account.
     * @param storageAccountName The name of the Azure storage account from which to retrieve the blob
     * container.
     * @param containerName The name of the Azure storage container to retrieve
     * @param [options] The optional parameters
     * @returns Promise<Models.StorageAccountsGetStorageContainerResponse>
     */
    getStorageContainer(resourceGroupName: string, accountName: string, storageAccountName: string, containerName: string, options?: msRest.RequestOptionsBase): Promise<Models.StorageAccountsGetStorageContainerResponse>;
    /**
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Analytics account.
     * @param storageAccountName The name of the Azure storage account from which to retrieve the blob
     * container.
     * @param containerName The name of the Azure storage container to retrieve
     * @param callback The callback
     */
    getStorageContainer(resourceGroupName: string, accountName: string, storageAccountName: string, containerName: string, callback: msRest.ServiceCallback<Models.StorageContainer>): void;
    /**
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Analytics account.
     * @param storageAccountName The name of the Azure storage account from which to retrieve the blob
     * container.
     * @param containerName The name of the Azure storage container to retrieve
     * @param options The optional parameters
     * @param callback The callback
     */
    getStorageContainer(resourceGroupName: string, accountName: string, storageAccountName: string, containerName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.StorageContainer>): void;
    /**
     * Gets the SAS token associated with the specified Data Lake Analytics and Azure Storage account
     * and container combination.
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Analytics account.
     * @param storageAccountName The name of the Azure storage account for which the SAS token is being
     * requested.
     * @param containerName The name of the Azure storage container for which the SAS token is being
     * requested.
     * @param [options] The optional parameters
     * @returns Promise<Models.StorageAccountsListSasTokensResponse>
     */
    listSasTokens(resourceGroupName: string, accountName: string, storageAccountName: string, containerName: string, options?: msRest.RequestOptionsBase): Promise<Models.StorageAccountsListSasTokensResponse>;
    /**
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Analytics account.
     * @param storageAccountName The name of the Azure storage account for which the SAS token is being
     * requested.
     * @param containerName The name of the Azure storage container for which the SAS token is being
     * requested.
     * @param callback The callback
     */
    listSasTokens(resourceGroupName: string, accountName: string, storageAccountName: string, containerName: string, callback: msRest.ServiceCallback<Models.SasTokenInformationListResult>): void;
    /**
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Analytics account.
     * @param storageAccountName The name of the Azure storage account for which the SAS token is being
     * requested.
     * @param containerName The name of the Azure storage container for which the SAS token is being
     * requested.
     * @param options The optional parameters
     * @param callback The callback
     */
    listSasTokens(resourceGroupName: string, accountName: string, storageAccountName: string, containerName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SasTokenInformationListResult>): void;
    /**
     * Gets the first page of Azure Storage accounts, if any, linked to the specified Data Lake
     * Analytics account. The response includes a link to the next page, if any.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.StorageAccountsListByAccountNextResponse>
     */
    listByAccountNext(nextPageLink: string, options?: Models.StorageAccountsListByAccountNextOptionalParams): Promise<Models.StorageAccountsListByAccountNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByAccountNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.StorageAccountInformationListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByAccountNext(nextPageLink: string, options: Models.StorageAccountsListByAccountNextOptionalParams, callback: msRest.ServiceCallback<Models.StorageAccountInformationListResult>): void;
    /**
     * Lists the Azure Storage containers, if any, associated with the specified Data Lake Analytics
     * and Azure Storage account combination. The response includes a link to the next page of results,
     * if any.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.StorageAccountsListStorageContainersNextResponse>
     */
    listStorageContainersNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.StorageAccountsListStorageContainersNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listStorageContainersNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.StorageContainerListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listStorageContainersNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.StorageContainerListResult>): void;
    /**
     * Gets the SAS token associated with the specified Data Lake Analytics and Azure Storage account
     * and container combination.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.StorageAccountsListSasTokensNextResponse>
     */
    listSasTokensNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.StorageAccountsListSasTokensNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listSasTokensNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.SasTokenInformationListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listSasTokensNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SasTokenInformationListResult>): void;
}
//# sourceMappingURL=storageAccounts.d.ts.map