import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import { DataLakeAnalyticsAccountManagementClientContext } from "../dataLakeAnalyticsAccountManagementClientContext";
/** Class representing a Accounts. */
export declare class Accounts {
    private readonly client;
    /**
     * Create a Accounts.
     * @param {DataLakeAnalyticsAccountManagementClientContext} client Reference to the service client.
     */
    constructor(client: DataLakeAnalyticsAccountManagementClientContext);
    /**
     * Gets the first page of Data Lake Analytics accounts, if any, within the current subscription.
     * This includes a link to the next page, if any.
     * @param [options] The optional parameters
     * @returns Promise<Models.AccountsListResponse>
     */
    list(options?: Models.AccountsListOptionalParams): Promise<Models.AccountsListResponse>;
    /**
     * @param callback The callback
     */
    list(callback: msRest.ServiceCallback<Models.DataLakeAnalyticsAccountListResult>): void;
    /**
     * @param options The optional parameters
     * @param callback The callback
     */
    list(options: Models.AccountsListOptionalParams, callback: msRest.ServiceCallback<Models.DataLakeAnalyticsAccountListResult>): void;
    /**
     * Gets the first page of Data Lake Analytics accounts, if any, within a specific resource group.
     * This includes a link to the next page, if any.
     * @param resourceGroupName The name of the Azure resource group.
     * @param [options] The optional parameters
     * @returns Promise<Models.AccountsListByResourceGroupResponse>
     */
    listByResourceGroup(resourceGroupName: string, options?: Models.AccountsListByResourceGroupOptionalParams): Promise<Models.AccountsListByResourceGroupResponse>;
    /**
     * @param resourceGroupName The name of the Azure resource group.
     * @param callback The callback
     */
    listByResourceGroup(resourceGroupName: string, callback: msRest.ServiceCallback<Models.DataLakeAnalyticsAccountListResult>): void;
    /**
     * @param resourceGroupName The name of the Azure resource group.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByResourceGroup(resourceGroupName: string, options: Models.AccountsListByResourceGroupOptionalParams, callback: msRest.ServiceCallback<Models.DataLakeAnalyticsAccountListResult>): void;
    /**
     * Creates the specified Data Lake Analytics account. This supplies the user with computation
     * services for Data Lake Analytics workloads.
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Analytics account.
     * @param parameters Parameters supplied to create a new Data Lake Analytics account.
     * @param [options] The optional parameters
     * @returns Promise<Models.AccountsCreateResponse>
     */
    create(resourceGroupName: string, accountName: string, parameters: Models.CreateDataLakeAnalyticsAccountParameters, options?: msRest.RequestOptionsBase): Promise<Models.AccountsCreateResponse>;
    /**
     * Gets details of the specified Data Lake Analytics account.
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Analytics account.
     * @param [options] The optional parameters
     * @returns Promise<Models.AccountsGetResponse>
     */
    get(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase): Promise<Models.AccountsGetResponse>;
    /**
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Analytics account.
     * @param callback The callback
     */
    get(resourceGroupName: string, accountName: string, callback: msRest.ServiceCallback<Models.DataLakeAnalyticsAccount>): void;
    /**
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Analytics account.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, accountName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DataLakeAnalyticsAccount>): void;
    /**
     * Updates the Data Lake Analytics account object specified by the accountName with the contents of
     * the account object.
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Analytics account.
     * @param [options] The optional parameters
     * @returns Promise<Models.AccountsUpdateResponse>
     */
    update(resourceGroupName: string, accountName: string, options?: Models.AccountsUpdateOptionalParams): Promise<Models.AccountsUpdateResponse>;
    /**
     * Begins the delete process for the Data Lake Analytics account object specified by the account
     * name.
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Analytics account.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * Checks whether the specified account name is available or taken.
     * @param location The resource location without whitespace.
     * @param parameters Parameters supplied to check the Data Lake Analytics account name
     * availability.
     * @param [options] The optional parameters
     * @returns Promise<Models.AccountsCheckNameAvailabilityResponse>
     */
    checkNameAvailability(location: string, parameters: Models.CheckNameAvailabilityParameters, options?: msRest.RequestOptionsBase): Promise<Models.AccountsCheckNameAvailabilityResponse>;
    /**
     * @param location The resource location without whitespace.
     * @param parameters Parameters supplied to check the Data Lake Analytics account name
     * availability.
     * @param callback The callback
     */
    checkNameAvailability(location: string, parameters: Models.CheckNameAvailabilityParameters, callback: msRest.ServiceCallback<Models.NameAvailabilityInformation>): void;
    /**
     * @param location The resource location without whitespace.
     * @param parameters Parameters supplied to check the Data Lake Analytics account name
     * availability.
     * @param options The optional parameters
     * @param callback The callback
     */
    checkNameAvailability(location: string, parameters: Models.CheckNameAvailabilityParameters, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.NameAvailabilityInformation>): void;
    /**
     * Creates the specified Data Lake Analytics account. This supplies the user with computation
     * services for Data Lake Analytics workloads.
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Analytics account.
     * @param parameters Parameters supplied to create a new Data Lake Analytics account.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginCreate(resourceGroupName: string, accountName: string, parameters: Models.CreateDataLakeAnalyticsAccountParameters, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Updates the Data Lake Analytics account object specified by the accountName with the contents of
     * the account object.
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Analytics account.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginUpdate(resourceGroupName: string, accountName: string, options?: Models.AccountsBeginUpdateOptionalParams): Promise<msRestAzure.LROPoller>;
    /**
     * Begins the delete process for the Data Lake Analytics account object specified by the account
     * name.
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Analytics account.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginDeleteMethod(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Gets the first page of Data Lake Analytics accounts, if any, within the current subscription.
     * This includes a link to the next page, if any.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.AccountsListNextResponse>
     */
    listNext(nextPageLink: string, options?: Models.AccountsListNextOptionalParams): Promise<Models.AccountsListNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.DataLakeAnalyticsAccountListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listNext(nextPageLink: string, options: Models.AccountsListNextOptionalParams, callback: msRest.ServiceCallback<Models.DataLakeAnalyticsAccountListResult>): void;
    /**
     * Gets the first page of Data Lake Analytics accounts, if any, within a specific resource group.
     * This includes a link to the next page, if any.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.AccountsListByResourceGroupNextResponse>
     */
    listByResourceGroupNext(nextPageLink: string, options?: Models.AccountsListByResourceGroupNextOptionalParams): Promise<Models.AccountsListByResourceGroupNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByResourceGroupNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.DataLakeAnalyticsAccountListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByResourceGroupNext(nextPageLink: string, options: Models.AccountsListByResourceGroupNextOptionalParams, callback: msRest.ServiceCallback<Models.DataLakeAnalyticsAccountListResult>): void;
}
//# sourceMappingURL=accounts.d.ts.map