import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { DataLakeAnalyticsAccountManagementClientContext } from "../dataLakeAnalyticsAccountManagementClientContext";
/** Class representing a Locations. */
export declare class Locations {
    private readonly client;
    /**
     * Create a Locations.
     * @param {DataLakeAnalyticsAccountManagementClientContext} client Reference to the service client.
     */
    constructor(client: DataLakeAnalyticsAccountManagementClientContext);
    /**
     * Gets subscription-level properties and limits for Data Lake Analytics specified by resource
     * location.
     * @param location The resource location without whitespace.
     * @param [options] The optional parameters
     * @returns Promise<Models.LocationsGetCapabilityResponse>
     */
    getCapability(location: string, options?: msRest.RequestOptionsBase): Promise<Models.LocationsGetCapabilityResponse>;
    /**
     * @param location The resource location without whitespace.
     * @param callback The callback
     */
    getCapability(location: string, callback: msRest.ServiceCallback<Models.CapabilityInformation>): void;
    /**
     * @param location The resource location without whitespace.
     * @param options The optional parameters
     * @param callback The callback
     */
    getCapability(location: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CapabilityInformation>): void;
}
//# sourceMappingURL=locations.d.ts.map