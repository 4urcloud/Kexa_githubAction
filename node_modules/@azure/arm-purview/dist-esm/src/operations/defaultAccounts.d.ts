import { DefaultAccounts } from "../operationsInterfaces";
import { PurviewManagementClient } from "../purviewManagementClient";
import { ScopeType, DefaultAccountsGetOptionalParams, DefaultAccountsGetResponse, DefaultAccountPayload, DefaultAccountsSetModelOptionalParams, DefaultAccountsSetModelResponse, DefaultAccountsRemoveOptionalParams } from "../models";
/** Class containing DefaultAccounts operations. */
export declare class DefaultAccountsImpl implements DefaultAccounts {
    private readonly client;
    /**
     * Initialize a new instance of the class DefaultAccounts class.
     * @param client Reference to the service client
     */
    constructor(client: PurviewManagementClient);
    /**
     * Get the default account for the scope.
     * @param scopeTenantId The tenant ID.
     * @param scopeType The scope for the default account.
     * @param options The options parameters.
     */
    get(scopeTenantId: string, scopeType: ScopeType, options?: DefaultAccountsGetOptionalParams): Promise<DefaultAccountsGetResponse>;
    /**
     * Sets the default account for the scope.
     * @param defaultAccountPayload The payload containing the default account information and the scope.
     * @param options The options parameters.
     */
    set(defaultAccountPayload: DefaultAccountPayload, options?: DefaultAccountsSetModelOptionalParams): Promise<DefaultAccountsSetModelResponse>;
    /**
     * Removes the default account from the scope.
     * @param scopeTenantId The tenant ID.
     * @param scopeType The scope for the default account.
     * @param options The options parameters.
     */
    remove(scopeTenantId: string, scopeType: ScopeType, options?: DefaultAccountsRemoveOptionalParams): Promise<void>;
}
//# sourceMappingURL=defaultAccounts.d.ts.map