import * as coreAuth from '@azure/core-auth';
import * as coreClient from '@azure/core-client';
import { PagedAsyncIterableIterator } from '@azure/core-paging';
import { PollerLike } from '@azure/core-lro';
import { PollOperationState } from '@azure/core-lro';

/** The Account access keys. */
export declare interface AccessKeys {
    /** Gets or sets the primary connection string. */
    atlasKafkaPrimaryEndpoint?: string;
    /** Gets or sets the secondary connection string. */
    atlasKafkaSecondaryEndpoint?: string;
}

/** Account resource */
export declare interface Account extends TrackedResource {
    /**
     * Gets or sets the Sku.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly sku?: AccountSku;
    /**
     * Cloud connectors.
     * External cloud identifier used as part of scanning configuration.
     */
    cloudConnectors?: CloudConnectors;
    /**
     * Gets the time at which the entity was created.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly createdAt?: Date;
    /**
     * Gets the creator of the entity.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly createdBy?: string;
    /**
     * Gets the creators of the entity's object id.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly createdByObjectId?: string;
    /**
     * The URIs that are the public endpoints of the account.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly endpoints?: AccountPropertiesEndpoints;
    /**
     * Gets or sets the friendly name.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly friendlyName?: string;
    /** Gets or sets the managed resource group name */
    managedResourceGroupName?: string;
    /**
     * Gets the resource identifiers of the managed resources.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly managedResources?: AccountPropertiesManagedResources;
    /**
     * Gets the private endpoint connections information.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly privateEndpointConnections?: PrivateEndpointConnection[];
    /**
     * Gets or sets the state of the provisioning.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: ProvisioningState;
    /** Gets or sets the public network access. */
    publicNetworkAccess?: PublicNetworkAccess;
}

/** The account endpoints */
export declare interface AccountEndpoints {
    /**
     * Gets the catalog endpoint.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly catalog?: string;
    /**
     * Gets the guardian endpoint.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly guardian?: string;
    /**
     * Gets the scan endpoint.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly scan?: string;
}

/** Paged list of account resources */
export declare interface AccountList {
    /** Total item count. */
    count?: number;
    /** The Url of next result page. */
    nextLink?: string;
    /** Collection of items of type results. */
    value: Account[];
}

/** The account properties */
export declare interface AccountProperties {
    /**
     * Cloud connectors.
     * External cloud identifier used as part of scanning configuration.
     */
    cloudConnectors?: CloudConnectors;
    /**
     * Gets the time at which the entity was created.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly createdAt?: Date;
    /**
     * Gets the creator of the entity.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly createdBy?: string;
    /**
     * Gets the creators of the entity's object id.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly createdByObjectId?: string;
    /**
     * The URIs that are the public endpoints of the account.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly endpoints?: AccountPropertiesEndpoints;
    /**
     * Gets or sets the friendly name.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly friendlyName?: string;
    /** Gets or sets the managed resource group name */
    managedResourceGroupName?: string;
    /**
     * Gets the resource identifiers of the managed resources.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly managedResources?: AccountPropertiesManagedResources;
    /**
     * Gets the private endpoint connections information.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly privateEndpointConnections?: PrivateEndpointConnection[];
    /**
     * Gets or sets the state of the provisioning.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: ProvisioningState;
    /** Gets or sets the public network access. */
    publicNetworkAccess?: PublicNetworkAccess;
}

/** The URIs that are the public endpoints of the account. */
export declare interface AccountPropertiesEndpoints extends AccountEndpoints {
}

/** Gets the resource identifiers of the managed resources. */
export declare interface AccountPropertiesManagedResources extends ManagedResources {
}

/** Interface representing a Accounts. */
export declare interface Accounts {
    /**
     * List accounts in ResourceGroup
     * @param resourceGroupName The resource group name.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: AccountsListByResourceGroupOptionalParams): PagedAsyncIterableIterator<Account>;
    /**
     * List accounts in Subscription
     * @param options The options parameters.
     */
    listBySubscription(options?: AccountsListBySubscriptionOptionalParams): PagedAsyncIterableIterator<Account>;
    /**
     * Get an account
     * @param resourceGroupName The resource group name.
     * @param accountName The name of the account.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, accountName: string, options?: AccountsGetOptionalParams): Promise<AccountsGetResponse>;
    /**
     * Creates or updates an account
     * @param resourceGroupName The resource group name.
     * @param accountName The name of the account.
     * @param account The account.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, accountName: string, account: Account, options?: AccountsCreateOrUpdateOptionalParams): Promise<PollerLike<PollOperationState<AccountsCreateOrUpdateResponse>, AccountsCreateOrUpdateResponse>>;
    /**
     * Creates or updates an account
     * @param resourceGroupName The resource group name.
     * @param accountName The name of the account.
     * @param account The account.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, accountName: string, account: Account, options?: AccountsCreateOrUpdateOptionalParams): Promise<AccountsCreateOrUpdateResponse>;
    /**
     * Deletes an account resource
     * @param resourceGroupName The resource group name.
     * @param accountName The name of the account.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, accountName: string, options?: AccountsDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Deletes an account resource
     * @param resourceGroupName The resource group name.
     * @param accountName The name of the account.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, accountName: string, options?: AccountsDeleteOptionalParams): Promise<void>;
    /**
     * Updates an account
     * @param resourceGroupName The resource group name.
     * @param accountName The name of the account.
     * @param accountUpdateParameters The account update parameters.
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, accountName: string, accountUpdateParameters: AccountUpdateParameters, options?: AccountsUpdateOptionalParams): Promise<PollerLike<PollOperationState<AccountsUpdateResponse>, AccountsUpdateResponse>>;
    /**
     * Updates an account
     * @param resourceGroupName The resource group name.
     * @param accountName The name of the account.
     * @param accountUpdateParameters The account update parameters.
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, accountName: string, accountUpdateParameters: AccountUpdateParameters, options?: AccountsUpdateOptionalParams): Promise<AccountsUpdateResponse>;
    /**
     * List the authorization keys associated with this account.
     * @param resourceGroupName The resource group name.
     * @param accountName The name of the account.
     * @param options The options parameters.
     */
    listKeys(resourceGroupName: string, accountName: string, options?: AccountsListKeysOptionalParams): Promise<AccountsListKeysResponse>;
    /**
     * Add the administrator for root collection associated with this account.
     * @param resourceGroupName The resource group name.
     * @param accountName The name of the account.
     * @param collectionAdminUpdate The collection admin update payload.
     * @param options The options parameters.
     */
    addRootCollectionAdmin(resourceGroupName: string, accountName: string, collectionAdminUpdate: CollectionAdminUpdate, options?: AccountsAddRootCollectionAdminOptionalParams): Promise<void>;
    /**
     * Checks if account name is available.
     * @param checkNameAvailabilityRequest The check name availability request.
     * @param options The options parameters.
     */
    checkNameAvailability(checkNameAvailabilityRequest: CheckNameAvailabilityRequest, options?: AccountsCheckNameAvailabilityOptionalParams): Promise<AccountsCheckNameAvailabilityResponse>;
}

/** Optional parameters. */
export declare interface AccountsAddRootCollectionAdminOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface AccountsCheckNameAvailabilityOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the checkNameAvailability operation. */
export declare type AccountsCheckNameAvailabilityResponse = CheckNameAvailabilityResult;

/** Optional parameters. */
export declare interface AccountsCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export declare type AccountsCreateOrUpdateResponse = Account;

/** Optional parameters. */
export declare interface AccountsDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface AccountsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type AccountsGetResponse = Account;

/** Gets or sets the Sku. */
export declare interface AccountSku extends AccountSkuAutoGenerated {
}

/** The Sku */
export declare interface AccountSkuAutoGenerated {
    /** Gets or sets the sku capacity. */
    capacity?: number;
    /** Gets or sets the sku name. */
    name?: Name;
}

/** Optional parameters. */
export declare interface AccountsListByResourceGroupNextOptionalParams extends coreClient.OperationOptions {
    /** The skip token. */
    skipToken?: string;
}

/** Contains response data for the listByResourceGroupNext operation. */
export declare type AccountsListByResourceGroupNextResponse = AccountList;

/** Optional parameters. */
export declare interface AccountsListByResourceGroupOptionalParams extends coreClient.OperationOptions {
    /** The skip token. */
    skipToken?: string;
}

/** Contains response data for the listByResourceGroup operation. */
export declare type AccountsListByResourceGroupResponse = AccountList;

/** Optional parameters. */
export declare interface AccountsListBySubscriptionNextOptionalParams extends coreClient.OperationOptions {
    /** The skip token. */
    skipToken?: string;
}

/** Contains response data for the listBySubscriptionNext operation. */
export declare type AccountsListBySubscriptionNextResponse = AccountList;

/** Optional parameters. */
export declare interface AccountsListBySubscriptionOptionalParams extends coreClient.OperationOptions {
    /** The skip token. */
    skipToken?: string;
}

/** Contains response data for the listBySubscription operation. */
export declare type AccountsListBySubscriptionResponse = AccountList;

/** Optional parameters. */
export declare interface AccountsListKeysOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listKeys operation. */
export declare type AccountsListKeysResponse = AccessKeys;

/** Optional parameters. */
export declare interface AccountsUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the update operation. */
export declare type AccountsUpdateResponse = Account;

/** The account update properties. */
export declare interface AccountUpdateParameters {
    /** Identity related info to add/remove userAssignedIdentities. */
    identity?: Identity;
    /** The account properties. */
    properties?: AccountProperties;
    /** Tags on the azure resource. */
    tags?: {
        [propertyName: string]: string;
    };
}

/** The request payload for CheckNameAvailability API */
export declare interface CheckNameAvailabilityRequest {
    /** Resource name to verify for availability */
    name?: string;
    /** Fully qualified resource type which includes provider namespace */
    type?: string;
}

/** The response payload for CheckNameAvailability API */
export declare interface CheckNameAvailabilityResult {
    /** Error message */
    message?: string;
    /** Indicates if name is valid and available. */
    nameAvailable?: boolean;
    /** The reason the name is not available. */
    reason?: Reason;
}

/** External Cloud Service connectors */
export declare interface CloudConnectors {
    /**
     * AWS external identifier.
     * Configured in AWS to allow use of the role arn used for scanning
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly awsExternalId?: string;
}

/** Collection administrator update. */
export declare interface CollectionAdminUpdate {
    /** Gets or sets the object identifier of the admin. */
    objectId?: string;
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export declare type CreatedByType = string;

/** Payload to get and set the default account in the given scope */
export declare interface DefaultAccountPayload {
    /** The name of the account that is set as the default. */
    accountName?: string;
    /** The resource group name of the account that is set as the default. */
    resourceGroupName?: string;
    /** The scope object ID. For example, sub ID or tenant ID. */
    scope?: string;
    /** The scope tenant in which the default account is set. */
    scopeTenantId?: string;
    /** The scope where the default account is set. */
    scopeType?: ScopeType;
    /** The subscription ID of the account that is set as the default. */
    subscriptionId?: string;
}

/** Interface representing a DefaultAccounts. */
export declare interface DefaultAccounts {
    /**
     * Get the default account for the scope.
     * @param scopeTenantId The tenant ID.
     * @param scopeType The scope for the default account.
     * @param options The options parameters.
     */
    get(scopeTenantId: string, scopeType: ScopeType, options?: DefaultAccountsGetOptionalParams): Promise<DefaultAccountsGetResponse>;
    /**
     * Sets the default account for the scope.
     * @param defaultAccountPayload The payload containing the default account information and the scope.
     * @param options The options parameters.
     */
    set(defaultAccountPayload: DefaultAccountPayload, options?: DefaultAccountsSetModelOptionalParams): Promise<DefaultAccountsSetModelResponse>;
    /**
     * Removes the default account from the scope.
     * @param scopeTenantId The tenant ID.
     * @param scopeType The scope for the default account.
     * @param options The options parameters.
     */
    remove(scopeTenantId: string, scopeType: ScopeType, options?: DefaultAccountsRemoveOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface DefaultAccountsGetOptionalParams extends coreClient.OperationOptions {
    /** The Id of the scope object, for example if the scope is "Subscription" then it is the ID of that subscription. */
    scope?: string;
}

/** Contains response data for the get operation. */
export declare type DefaultAccountsGetResponse = DefaultAccountPayload;

/** Optional parameters. */
export declare interface DefaultAccountsRemoveOptionalParams extends coreClient.OperationOptions {
    /** The Id of the scope object, for example if the scope is "Subscription" then it is the ID of that subscription. */
    scope?: string;
}

/** Optional parameters. */
export declare interface DefaultAccountsSetModelOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the set operation. */
export declare type DefaultAccountsSetModelResponse = DefaultAccountPayload;

/** properties for dimension */
export declare interface DimensionProperties {
    /** localized display name of the dimension to customer */
    displayName?: string;
    /** dimension name */
    name?: string;
    /** flag indicating whether this dimension should be included to the customer in Azure Monitor logs (aka Shoebox) */
    toBeExportedForCustomer?: boolean;
}

/** Default error model */
export declare interface ErrorModel {
    /**
     * Gets or sets the code.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly code?: string;
    /**
     * Gets or sets the details.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly details?: ErrorModel[];
    /**
     * Gets or sets the messages.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly message?: string;
    /**
     * Gets or sets the target.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly target?: string;
}

/** Default error response model */
export declare interface ErrorResponseModel {
    /**
     * Gets or sets the error.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly error?: ErrorResponseModelError;
}

/** Gets or sets the error. */
export declare interface ErrorResponseModelError extends ErrorModel {
}

/**
 * Given a result page from a pageable operation, returns a
 * continuation token that can be used to begin paging from
 * that point later.
 * @param page A result object from calling .byPage() on a paged operation.
 * @returns The continuation token that can be passed into byPage().
 */
export declare function getContinuationToken(page: unknown): string | undefined;

/** The Managed Identity of the resource */
export declare interface Identity {
    /**
     * Service principal object Id
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly principalId?: string;
    /**
     * Tenant Id
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly tenantId?: string;
    /** Identity Type */
    type?: Type;
    /** User Assigned Identities */
    userAssignedIdentities?: {
        [propertyName: string]: UserAssignedIdentity;
    };
}

/** Known values of {@link CreatedByType} that the service accepts. */
export declare enum KnownCreatedByType {
    /** User */
    User = "User",
    /** Application */
    Application = "Application",
    /** ManagedIdentity */
    ManagedIdentity = "ManagedIdentity",
    /** Key */
    Key = "Key"
}

/** Known values of {@link LastModifiedByType} that the service accepts. */
export declare enum KnownLastModifiedByType {
    /** User */
    User = "User",
    /** Application */
    Application = "Application",
    /** ManagedIdentity */
    ManagedIdentity = "ManagedIdentity",
    /** Key */
    Key = "Key"
}

/** Known values of {@link Name} that the service accepts. */
export declare enum KnownName {
    /** Standard */
    Standard = "Standard"
}

/** Known values of {@link ProvisioningState} that the service accepts. */
export declare enum KnownProvisioningState {
    /** Unknown */
    Unknown = "Unknown",
    /** Creating */
    Creating = "Creating",
    /** Moving */
    Moving = "Moving",
    /** Deleting */
    Deleting = "Deleting",
    /** SoftDeleting */
    SoftDeleting = "SoftDeleting",
    /** SoftDeleted */
    SoftDeleted = "SoftDeleted",
    /** Failed */
    Failed = "Failed",
    /** Succeeded */
    Succeeded = "Succeeded",
    /** Canceled */
    Canceled = "Canceled"
}

/** Known values of {@link PublicNetworkAccess} that the service accepts. */
export declare enum KnownPublicNetworkAccess {
    /** NotSpecified */
    NotSpecified = "NotSpecified",
    /** Enabled */
    Enabled = "Enabled",
    /** Disabled */
    Disabled = "Disabled"
}

/** Known values of {@link Reason} that the service accepts. */
export declare enum KnownReason {
    /** Invalid */
    Invalid = "Invalid",
    /** AlreadyExists */
    AlreadyExists = "AlreadyExists"
}

/** Known values of {@link ScopeType} that the service accepts. */
export declare enum KnownScopeType {
    /** Tenant */
    Tenant = "Tenant",
    /** Subscription */
    Subscription = "Subscription"
}

/** Known values of {@link Status} that the service accepts. */
export declare enum KnownStatus {
    /** Unknown */
    Unknown = "Unknown",
    /** Pending */
    Pending = "Pending",
    /** Approved */
    Approved = "Approved",
    /** Rejected */
    Rejected = "Rejected",
    /** Disconnected */
    Disconnected = "Disconnected"
}

/** Known values of {@link Type} that the service accepts. */
export declare enum KnownType {
    /** None */
    None = "None",
    /** SystemAssigned */
    SystemAssigned = "SystemAssigned",
    /** UserAssigned */
    UserAssigned = "UserAssigned"
}

/**
 * Defines values for LastModifiedByType. \
 * {@link KnownLastModifiedByType} can be used interchangeably with LastModifiedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export declare type LastModifiedByType = string;

/** The managed resources in customer subscription. */
export declare interface ManagedResources {
    /**
     * Gets the managed event hub namespace resource identifier.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly eventHubNamespace?: string;
    /**
     * Gets the managed resource group resource identifier. This resource group will host resource dependencies for the account.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly resourceGroup?: string;
    /**
     * Gets the managed storage account resource identifier.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly storageAccount?: string;
}

/**
 * Defines values for Name. \
 * {@link KnownName} can be used interchangeably with Name,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Standard**
 */
export declare type Name = string;

/** Operation resource */
export declare interface Operation {
    /** Properties on the operation */
    display?: OperationDisplay;
    /** Whether operation is a data action */
    isDataAction?: boolean;
    /** Operation name for display purposes */
    name?: string;
    /** origin of the operation */
    origin?: string;
    /** meta service specification */
    serviceSpecification?: OperationMetaServiceSpecification;
}

/** The response model for get operation properties */
export declare interface OperationDisplay {
    /** Description of the operation for display purposes */
    description?: string;
    /** Name of the operation for display purposes */
    operation?: string;
    /** Name of the provider for display purposes */
    provider?: string;
    /** Name of the resource type for display purposes */
    resource?: string;
}

/** Paged list of operation resources */
export declare interface OperationList {
    /** Total item count. */
    count?: number;
    /** The Url of next result page. */
    nextLink?: string;
    /** Collection of items of type results. */
    value: Operation[];
}

/** log specifications for operation api */
export declare interface OperationMetaLogSpecification {
    /** blob duration of the log */
    blobDuration?: string;
    /** localized name of the log category */
    displayName?: string;
    /** name of the log category */
    name?: string;
}

/** metric specifications for the operation */
export declare interface OperationMetaMetricSpecification {
    /** aggregation type of metric */
    aggregationType?: string;
    /** properties for dimension */
    dimensions?: DimensionProperties[];
    /** description of the metric */
    displayDescription?: string;
    /** localized name of the metric */
    displayName?: string;
    /** enable regional mdm account */
    enableRegionalMdmAccount?: string;
    /** internal metric name */
    internalMetricName?: string;
    /** name of the metric */
    name?: string;
    /** dimension name use to replace resource id if specified */
    resourceIdDimensionNameOverride?: string;
    /**
     * Metric namespace.
     * Only set the namespace if different from the default value,
     * leaving it empty makes it use the value from the ARM manifest.
     */
    sourceMdmNamespace?: string;
    /** supported aggregation types */
    supportedAggregationTypes?: string[];
    /** supported time grain types */
    supportedTimeGrainTypes?: string[];
    /** units for the metric */
    unit?: string;
}

/** The operation meta service specification */
export declare interface OperationMetaServiceSpecification {
    /** log specifications for the operation */
    logSpecifications?: OperationMetaLogSpecification[];
    /** metric specifications for the operation */
    metricSpecifications?: OperationMetaMetricSpecification[];
}

/** Interface representing a Operations. */
export declare interface Operations {
    /**
     * List of available operations
     * @param options The options parameters.
     */
    list(options?: OperationsListOptionalParams): PagedAsyncIterableIterator<Operation>;
}

/** Optional parameters. */
export declare interface OperationsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type OperationsListNextResponse = OperationList;

/** Optional parameters. */
export declare interface OperationsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type OperationsListResponse = OperationList;

/** A private endpoint class. */
export declare interface PrivateEndpoint {
    /** The private endpoint identifier. */
    id?: string;
}

/** A private endpoint connection class. */
export declare interface PrivateEndpointConnection extends ProxyResource {
    /** The private endpoint information. */
    privateEndpoint?: PrivateEndpoint;
    /** The private link service connection state. */
    privateLinkServiceConnectionState?: PrivateLinkServiceConnectionState;
    /**
     * The provisioning state.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: string;
}

/** Paged list of private endpoint connections */
export declare interface PrivateEndpointConnectionList {
    /** Total item count. */
    count?: number;
    /** The Url of next result page. */
    nextLink?: string;
    /** Collection of items of type results. */
    value: PrivateEndpointConnection[];
}

/** Interface representing a PrivateEndpointConnections. */
export declare interface PrivateEndpointConnections {
    /**
     * Get private endpoint connections for account
     * @param resourceGroupName The resource group name.
     * @param accountName The name of the account.
     * @param options The options parameters.
     */
    listByAccount(resourceGroupName: string, accountName: string, options?: PrivateEndpointConnectionsListByAccountOptionalParams): PagedAsyncIterableIterator<PrivateEndpointConnection>;
    /**
     * Get a private endpoint connection
     * @param resourceGroupName The resource group name.
     * @param accountName The name of the account.
     * @param privateEndpointConnectionName Name of the private endpoint connection.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, accountName: string, privateEndpointConnectionName: string, options?: PrivateEndpointConnectionsGetOptionalParams): Promise<PrivateEndpointConnectionsGetResponse>;
    /**
     * Create or update a private endpoint connection
     * @param resourceGroupName The resource group name.
     * @param accountName The name of the account.
     * @param privateEndpointConnectionName Name of the private endpoint connection.
     * @param request The request.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, accountName: string, privateEndpointConnectionName: string, request: PrivateEndpointConnection, options?: PrivateEndpointConnectionsCreateOrUpdateOptionalParams): Promise<PollerLike<PollOperationState<PrivateEndpointConnectionsCreateOrUpdateResponse>, PrivateEndpointConnectionsCreateOrUpdateResponse>>;
    /**
     * Create or update a private endpoint connection
     * @param resourceGroupName The resource group name.
     * @param accountName The name of the account.
     * @param privateEndpointConnectionName Name of the private endpoint connection.
     * @param request The request.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, accountName: string, privateEndpointConnectionName: string, request: PrivateEndpointConnection, options?: PrivateEndpointConnectionsCreateOrUpdateOptionalParams): Promise<PrivateEndpointConnectionsCreateOrUpdateResponse>;
    /**
     * Delete a private endpoint connection
     * @param resourceGroupName The resource group name.
     * @param accountName The name of the account.
     * @param privateEndpointConnectionName Name of the private endpoint connection.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, accountName: string, privateEndpointConnectionName: string, options?: PrivateEndpointConnectionsDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Delete a private endpoint connection
     * @param resourceGroupName The resource group name.
     * @param accountName The name of the account.
     * @param privateEndpointConnectionName Name of the private endpoint connection.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, accountName: string, privateEndpointConnectionName: string, options?: PrivateEndpointConnectionsDeleteOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface PrivateEndpointConnectionsCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export declare type PrivateEndpointConnectionsCreateOrUpdateResponse = PrivateEndpointConnection;

/** Optional parameters. */
export declare interface PrivateEndpointConnectionsDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface PrivateEndpointConnectionsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type PrivateEndpointConnectionsGetResponse = PrivateEndpointConnection;

/** Optional parameters. */
export declare interface PrivateEndpointConnectionsListByAccountNextOptionalParams extends coreClient.OperationOptions {
    /** The skip token. */
    skipToken?: string;
}

/** Contains response data for the listByAccountNext operation. */
export declare type PrivateEndpointConnectionsListByAccountNextResponse = PrivateEndpointConnectionList;

/** Optional parameters. */
export declare interface PrivateEndpointConnectionsListByAccountOptionalParams extends coreClient.OperationOptions {
    /** The skip token. */
    skipToken?: string;
}

/** Contains response data for the listByAccount operation. */
export declare type PrivateEndpointConnectionsListByAccountResponse = PrivateEndpointConnectionList;

/** A privately linkable resource. */
export declare interface PrivateLinkResource {
    /**
     * The private link resource identifier.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /**
     * The private link resource name.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * The private link resource properties.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly properties?: PrivateLinkResourceProperties;
    /**
     * The private link resource type.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
}

/** Paged list of private link resources */
export declare interface PrivateLinkResourceList {
    /** Total item count. */
    count?: number;
    /** The Url of next result page. */
    nextLink?: string;
    /** Collection of items of type results. */
    value: PrivateLinkResource[];
}

/** A privately linkable resource properties. */
export declare interface PrivateLinkResourceProperties {
    /**
     * The private link resource group identifier.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly groupId?: string;
    /**
     * This translates to how many Private IPs should be created for each privately linkable resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly requiredMembers?: string[];
    /**
     * The required zone names for private link resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly requiredZoneNames?: string[];
}

/** Interface representing a PrivateLinkResources. */
export declare interface PrivateLinkResources {
    /**
     * Gets a list of privately linkable resources for an account
     * @param resourceGroupName The resource group name.
     * @param accountName The name of the account.
     * @param options The options parameters.
     */
    listByAccount(resourceGroupName: string, accountName: string, options?: PrivateLinkResourcesListByAccountOptionalParams): PagedAsyncIterableIterator<PrivateLinkResource>;
    /**
     * Gets a privately linkable resources for an account with given group identifier
     * @param resourceGroupName The resource group name.
     * @param accountName The name of the account.
     * @param groupId The group identifier.
     * @param options The options parameters.
     */
    getByGroupId(resourceGroupName: string, accountName: string, groupId: string, options?: PrivateLinkResourcesGetByGroupIdOptionalParams): Promise<PrivateLinkResourcesGetByGroupIdResponse>;
}

/** Optional parameters. */
export declare interface PrivateLinkResourcesGetByGroupIdOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getByGroupId operation. */
export declare type PrivateLinkResourcesGetByGroupIdResponse = PrivateLinkResource;

/** Optional parameters. */
export declare interface PrivateLinkResourcesListByAccountNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByAccountNext operation. */
export declare type PrivateLinkResourcesListByAccountNextResponse = PrivateLinkResourceList;

/** Optional parameters. */
export declare interface PrivateLinkResourcesListByAccountOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByAccount operation. */
export declare type PrivateLinkResourcesListByAccountResponse = PrivateLinkResourceList;

/** The private link service connection state. */
export declare interface PrivateLinkServiceConnectionState {
    /** The required actions. */
    actionsRequired?: string;
    /** The description. */
    description?: string;
    /** The status. */
    status?: Status;
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **Creating** \
 * **Moving** \
 * **Deleting** \
 * **SoftDeleting** \
 * **SoftDeleted** \
 * **Failed** \
 * **Succeeded** \
 * **Canceled**
 */
export declare type ProvisioningState = string;

/** Proxy Azure Resource */
export declare interface ProxyResource {
    /**
     * Gets or sets the identifier.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /**
     * Gets or sets the name.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * Gets or sets the type.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
}

/**
 * Defines values for PublicNetworkAccess. \
 * {@link KnownPublicNetworkAccess} can be used interchangeably with PublicNetworkAccess,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **NotSpecified** \
 * **Enabled** \
 * **Disabled**
 */
export declare type PublicNetworkAccess = string;

export declare class PurviewManagementClient extends coreClient.ServiceClient {
    $host: string;
    subscriptionId: string;
    apiVersion: string;
    /**
     * Initializes a new instance of the PurviewManagementClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId The subscription identifier
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: PurviewManagementClientOptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    accounts: Accounts;
    defaultAccounts: DefaultAccounts;
    operations: Operations;
    privateEndpointConnections: PrivateEndpointConnections;
    privateLinkResources: PrivateLinkResources;
}

/** Optional parameters. */
export declare interface PurviewManagementClientOptionalParams extends coreClient.ServiceClientOptions {
    /** server parameter */
    $host?: string;
    /** Api Version */
    apiVersion?: string;
    /** Overrides client endpoint. */
    endpoint?: string;
}

/**
 * Defines values for Reason. \
 * {@link KnownReason} can be used interchangeably with Reason,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **AlreadyExists**
 */
export declare type Reason = string;

/**
 * Defines values for ScopeType. \
 * {@link KnownScopeType} can be used interchangeably with ScopeType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Tenant** \
 * **Subscription**
 */
export declare type ScopeType = string;

/**
 * Defines values for Status. \
 * {@link KnownStatus} can be used interchangeably with Status,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **Pending** \
 * **Approved** \
 * **Rejected** \
 * **Disconnected**
 */
export declare type Status = string;

/** Metadata pertaining to creation and last modification of the resource. */
export declare interface SystemData {
    /**
     * The timestamp of resource creation (UTC).
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly createdAt?: Date;
    /**
     * The identity that created the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly createdBy?: string;
    /**
     * The type of identity that created the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly createdByType?: CreatedByType;
    /**
     * The timestamp of the last modification the resource (UTC).
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly lastModifiedAt?: Date;
    /**
     * The identity that last modified the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly lastModifiedBy?: string;
    /**
     * The type of identity that last modified the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly lastModifiedByType?: LastModifiedByType;
}

/** Azure ARM Tracked Resource */
export declare interface TrackedResource {
    /**
     * Gets or sets the identifier.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /** Identity Info on the tracked resource */
    identity?: Identity;
    /** Gets or sets the location. */
    location?: string;
    /**
     * Gets or sets the name.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: TrackedResourceSystemData;
    /** Tags on the azure resource. */
    tags?: {
        [propertyName: string]: string;
    };
    /**
     * Gets or sets the type.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
}

/** Metadata pertaining to creation and last modification of the resource. */
export declare interface TrackedResourceSystemData extends SystemData {
}

/**
 * Defines values for Type. \
 * {@link KnownType} can be used interchangeably with Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **SystemAssigned** \
 * **UserAssigned**
 */
export declare type Type = string;

/** Uses client ID and Principal ID */
export declare interface UserAssignedIdentity {
    /**
     * Gets or Sets Client ID
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly clientId?: string;
    /**
     * Gets or Sets Principal ID
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly principalId?: string;
}

export { }
