import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SingleSignOnConfigurations } from "../operationsInterfaces";
import { MicrosoftDatadogClient } from "../microsoftDatadogClient";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import { DatadogSingleSignOnResource, SingleSignOnConfigurationsListOptionalParams, SingleSignOnConfigurationsCreateOrUpdateOptionalParams, SingleSignOnConfigurationsCreateOrUpdateResponse, SingleSignOnConfigurationsGetOptionalParams, SingleSignOnConfigurationsGetResponse } from "../models";
/** Class containing SingleSignOnConfigurations operations. */
export declare class SingleSignOnConfigurationsImpl implements SingleSignOnConfigurations {
    private readonly client;
    /**
     * Initialize a new instance of the class SingleSignOnConfigurations class.
     * @param client Reference to the service client
     */
    constructor(client: MicrosoftDatadogClient);
    /**
     * List the single sign-on configurations for a given monitor resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name
     * @param options The options parameters.
     */
    list(resourceGroupName: string, monitorName: string, options?: SingleSignOnConfigurationsListOptionalParams): PagedAsyncIterableIterator<DatadogSingleSignOnResource>;
    private listPagingPage;
    private listPagingAll;
    /**
     * List the single sign-on configurations for a given monitor resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name
     * @param options The options parameters.
     */
    private _list;
    /**
     * Configures single-sign-on for this resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name
     * @param configurationName Configuration name
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, monitorName: string, configurationName: string, options?: SingleSignOnConfigurationsCreateOrUpdateOptionalParams): Promise<SimplePollerLike<OperationState<SingleSignOnConfigurationsCreateOrUpdateResponse>, SingleSignOnConfigurationsCreateOrUpdateResponse>>;
    /**
     * Configures single-sign-on for this resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name
     * @param configurationName Configuration name
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, monitorName: string, configurationName: string, options?: SingleSignOnConfigurationsCreateOrUpdateOptionalParams): Promise<SingleSignOnConfigurationsCreateOrUpdateResponse>;
    /**
     * Gets the datadog single sign-on resource for the given Monitor.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name
     * @param configurationName Configuration name
     * @param options The options parameters.
     */
    get(resourceGroupName: string, monitorName: string, configurationName: string, options?: SingleSignOnConfigurationsGetOptionalParams): Promise<SingleSignOnConfigurationsGetResponse>;
    /**
     * ListNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=singleSignOnConfigurations.d.ts.map