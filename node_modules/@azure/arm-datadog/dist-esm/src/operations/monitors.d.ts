import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Monitors } from "../operationsInterfaces";
import { MicrosoftDatadogClient } from "../microsoftDatadogClient";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import { DatadogApiKey, MonitorsListApiKeysOptionalParams, DatadogHost, MonitorsListHostsOptionalParams, LinkedResource, MonitorsListLinkedResourcesOptionalParams, MonitoredResource, MonitorsListMonitoredResourcesOptionalParams, DatadogMonitorResource, MonitorsListOptionalParams, MonitorsListByResourceGroupOptionalParams, MonitorsGetDefaultKeyOptionalParams, MonitorsGetDefaultKeyResponse, MonitorsSetDefaultKeyOptionalParams, MonitorsGetOptionalParams, MonitorsGetResponse, MonitorsCreateOptionalParams, MonitorsCreateResponse, MonitorsUpdateOptionalParams, MonitorsUpdateResponse, MonitorsDeleteOptionalParams, MonitorsRefreshSetPasswordLinkOptionalParams, MonitorsRefreshSetPasswordLinkResponse } from "../models";
/** Class containing Monitors operations. */
export declare class MonitorsImpl implements Monitors {
    private readonly client;
    /**
     * Initialize a new instance of the class Monitors class.
     * @param client Reference to the service client
     */
    constructor(client: MicrosoftDatadogClient);
    /**
     * List the api keys for a given monitor resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name
     * @param options The options parameters.
     */
    listApiKeys(resourceGroupName: string, monitorName: string, options?: MonitorsListApiKeysOptionalParams): PagedAsyncIterableIterator<DatadogApiKey>;
    private listApiKeysPagingPage;
    private listApiKeysPagingAll;
    /**
     * List the hosts for a given monitor resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name
     * @param options The options parameters.
     */
    listHosts(resourceGroupName: string, monitorName: string, options?: MonitorsListHostsOptionalParams): PagedAsyncIterableIterator<DatadogHost>;
    private listHostsPagingPage;
    private listHostsPagingAll;
    /**
     * List all Azure resources associated to the same Datadog organization as the target resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name
     * @param options The options parameters.
     */
    listLinkedResources(resourceGroupName: string, monitorName: string, options?: MonitorsListLinkedResourcesOptionalParams): PagedAsyncIterableIterator<LinkedResource>;
    private listLinkedResourcesPagingPage;
    private listLinkedResourcesPagingAll;
    /**
     * List the resources currently being monitored by the Datadog monitor resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name
     * @param options The options parameters.
     */
    listMonitoredResources(resourceGroupName: string, monitorName: string, options?: MonitorsListMonitoredResourcesOptionalParams): PagedAsyncIterableIterator<MonitoredResource>;
    private listMonitoredResourcesPagingPage;
    private listMonitoredResourcesPagingAll;
    /**
     * List all monitors under the specified subscription.
     * @param options The options parameters.
     */
    list(options?: MonitorsListOptionalParams): PagedAsyncIterableIterator<DatadogMonitorResource>;
    private listPagingPage;
    private listPagingAll;
    /**
     * List all monitors under the specified resource group.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: MonitorsListByResourceGroupOptionalParams): PagedAsyncIterableIterator<DatadogMonitorResource>;
    private listByResourceGroupPagingPage;
    private listByResourceGroupPagingAll;
    /**
     * List the api keys for a given monitor resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name
     * @param options The options parameters.
     */
    private _listApiKeys;
    /**
     * Get the default api key.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name
     * @param options The options parameters.
     */
    getDefaultKey(resourceGroupName: string, monitorName: string, options?: MonitorsGetDefaultKeyOptionalParams): Promise<MonitorsGetDefaultKeyResponse>;
    /**
     * Set the default api key.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name
     * @param options The options parameters.
     */
    setDefaultKey(resourceGroupName: string, monitorName: string, options?: MonitorsSetDefaultKeyOptionalParams): Promise<void>;
    /**
     * List the hosts for a given monitor resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name
     * @param options The options parameters.
     */
    private _listHosts;
    /**
     * List all Azure resources associated to the same Datadog organization as the target resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name
     * @param options The options parameters.
     */
    private _listLinkedResources;
    /**
     * List the resources currently being monitored by the Datadog monitor resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name
     * @param options The options parameters.
     */
    private _listMonitoredResources;
    /**
     * List all monitors under the specified subscription.
     * @param options The options parameters.
     */
    private _list;
    /**
     * List all monitors under the specified resource group.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    private _listByResourceGroup;
    /**
     * Get the properties of a specific monitor resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name
     * @param options The options parameters.
     */
    get(resourceGroupName: string, monitorName: string, options?: MonitorsGetOptionalParams): Promise<MonitorsGetResponse>;
    /**
     * Create a monitor resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name
     * @param options The options parameters.
     */
    beginCreate(resourceGroupName: string, monitorName: string, options?: MonitorsCreateOptionalParams): Promise<SimplePollerLike<OperationState<MonitorsCreateResponse>, MonitorsCreateResponse>>;
    /**
     * Create a monitor resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name
     * @param options The options parameters.
     */
    beginCreateAndWait(resourceGroupName: string, monitorName: string, options?: MonitorsCreateOptionalParams): Promise<MonitorsCreateResponse>;
    /**
     * Update a monitor resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, monitorName: string, options?: MonitorsUpdateOptionalParams): Promise<SimplePollerLike<OperationState<MonitorsUpdateResponse>, MonitorsUpdateResponse>>;
    /**
     * Update a monitor resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, monitorName: string, options?: MonitorsUpdateOptionalParams): Promise<MonitorsUpdateResponse>;
    /**
     * Delete a monitor resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, monitorName: string, options?: MonitorsDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Delete a monitor resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, monitorName: string, options?: MonitorsDeleteOptionalParams): Promise<void>;
    /**
     * Refresh the set password link and return a latest one.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name
     * @param options The options parameters.
     */
    refreshSetPasswordLink(resourceGroupName: string, monitorName: string, options?: MonitorsRefreshSetPasswordLinkOptionalParams): Promise<MonitorsRefreshSetPasswordLinkResponse>;
    /**
     * ListApiKeysNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name
     * @param nextLink The nextLink from the previous successful call to the ListApiKeys method.
     * @param options The options parameters.
     */
    private _listApiKeysNext;
    /**
     * ListHostsNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name
     * @param nextLink The nextLink from the previous successful call to the ListHosts method.
     * @param options The options parameters.
     */
    private _listHostsNext;
    /**
     * ListLinkedResourcesNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name
     * @param nextLink The nextLink from the previous successful call to the ListLinkedResources method.
     * @param options The options parameters.
     */
    private _listLinkedResourcesNext;
    /**
     * ListMonitoredResourcesNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name
     * @param nextLink The nextLink from the previous successful call to the ListMonitoredResources method.
     * @param options The options parameters.
     */
    private _listMonitoredResourcesNext;
    /**
     * ListNext
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
    /**
     * ListByResourceGroupNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.
     * @param options The options parameters.
     */
    private _listByResourceGroupNext;
}
//# sourceMappingURL=monitors.d.ts.map