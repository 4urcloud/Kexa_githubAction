import * as coreClient from "@azure/core-client";
import * as coreAuth from "@azure/core-auth";
import { MarketplaceAgreements, CreationSupported, Monitors, Operations, TagRules, SingleSignOnConfigurations, MonitoredSubscriptions } from "./operationsInterfaces";
import { MicrosoftDatadogClientOptionalParams } from "./models";
export declare class MicrosoftDatadogClient extends coreClient.ServiceClient {
    $host: string;
    subscriptionId: string;
    apiVersion: string;
    /**
     * Initializes a new instance of the MicrosoftDatadogClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId The ID of the target subscription.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: MicrosoftDatadogClientOptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    marketplaceAgreements: MarketplaceAgreements;
    creationSupported: CreationSupported;
    monitors: Monitors;
    operations: Operations;
    tagRules: TagRules;
    singleSignOnConfigurations: SingleSignOnConfigurations;
    monitoredSubscriptions: MonitoredSubscriptions;
}
//# sourceMappingURL=microsoftDatadogClient.d.ts.map