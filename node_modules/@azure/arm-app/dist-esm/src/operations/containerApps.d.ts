import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { ContainerApps } from "../operationsInterfaces";
import { ContainerAppsAPIClient } from "../containerAppsAPIClient";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { ContainerApp, ContainerAppsListBySubscriptionOptionalParams, ContainerAppsListByResourceGroupOptionalParams, ContainerAppsGetOptionalParams, ContainerAppsGetResponse, ContainerAppsCreateOrUpdateOptionalParams, ContainerAppsCreateOrUpdateResponse, ContainerAppsDeleteOptionalParams, ContainerAppPatch, ContainerAppsUpdateOptionalParams, ContainerAppsUpdateResponse, ContainerAppsListCustomHostNameAnalysisOptionalParams, ContainerAppsListCustomHostNameAnalysisResponse, ContainerAppsListSecretsOptionalParams, ContainerAppsListSecretsResponse } from "../models";
/** Class containing ContainerApps operations. */
export declare class ContainerAppsImpl implements ContainerApps {
    private readonly client;
    /**
     * Initialize a new instance of the class ContainerApps class.
     * @param client Reference to the service client
     */
    constructor(client: ContainerAppsAPIClient);
    /**
     * Get the Container Apps in a given subscription.
     * @param options The options parameters.
     */
    listBySubscription(options?: ContainerAppsListBySubscriptionOptionalParams): PagedAsyncIterableIterator<ContainerApp>;
    private listBySubscriptionPagingPage;
    private listBySubscriptionPagingAll;
    /**
     * Get the Container Apps in a given resource group.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: ContainerAppsListByResourceGroupOptionalParams): PagedAsyncIterableIterator<ContainerApp>;
    private listByResourceGroupPagingPage;
    private listByResourceGroupPagingAll;
    /**
     * Get the Container Apps in a given subscription.
     * @param options The options parameters.
     */
    private _listBySubscription;
    /**
     * Get the Container Apps in a given resource group.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    private _listByResourceGroup;
    /**
     * Get the properties of a Container App.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param name Name of the Container App.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, name: string, options?: ContainerAppsGetOptionalParams): Promise<ContainerAppsGetResponse>;
    /**
     * Description for Create or update a Container App.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param name Name of the Container App.
     * @param containerAppEnvelope Properties used to create a container app
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, name: string, containerAppEnvelope: ContainerApp, options?: ContainerAppsCreateOrUpdateOptionalParams): Promise<PollerLike<PollOperationState<ContainerAppsCreateOrUpdateResponse>, ContainerAppsCreateOrUpdateResponse>>;
    /**
     * Description for Create or update a Container App.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param name Name of the Container App.
     * @param containerAppEnvelope Properties used to create a container app
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, name: string, containerAppEnvelope: ContainerApp, options?: ContainerAppsCreateOrUpdateOptionalParams): Promise<ContainerAppsCreateOrUpdateResponse>;
    /**
     * Description for Delete a Container App.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param name Name of the Container App.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, name: string, options?: ContainerAppsDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Description for Delete a Container App.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param name Name of the Container App.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, name: string, options?: ContainerAppsDeleteOptionalParams): Promise<void>;
    /**
     * Patches a Container App. Currently only patching of tags is supported
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param name Name of the Container App.
     * @param containerAppEnvelope Properties of a container app that need to be updated
     * @param options The options parameters.
     */
    update(resourceGroupName: string, name: string, containerAppEnvelope: ContainerAppPatch, options?: ContainerAppsUpdateOptionalParams): Promise<ContainerAppsUpdateResponse>;
    /**
     * Analyzes a custom hostname for a Container App
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param containerAppName Name of the Container App.
     * @param options The options parameters.
     */
    listCustomHostNameAnalysis(resourceGroupName: string, containerAppName: string, options?: ContainerAppsListCustomHostNameAnalysisOptionalParams): Promise<ContainerAppsListCustomHostNameAnalysisResponse>;
    /**
     * List secrets for a container app
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param name Name of the Container App.
     * @param options The options parameters.
     */
    listSecrets(resourceGroupName: string, name: string, options?: ContainerAppsListSecretsOptionalParams): Promise<ContainerAppsListSecretsResponse>;
    /**
     * ListBySubscriptionNext
     * @param nextLink The nextLink from the previous successful call to the ListBySubscription method.
     * @param options The options parameters.
     */
    private _listBySubscriptionNext;
    /**
     * ListByResourceGroupNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.
     * @param options The options parameters.
     */
    private _listByResourceGroupNext;
}
//# sourceMappingURL=containerApps.d.ts.map