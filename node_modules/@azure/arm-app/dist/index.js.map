{"version":3,"file":"index.js","sources":["../src/models/index.ts","../src/models/mappers.ts","../src/models/parameters.ts","../src/lroImpl.ts","../src/operations/containerApps.ts","../src/operations/containerAppsRevisions.ts","../src/operations/containerAppsRevisionReplicas.ts","../src/operations/managedEnvironments.ts","../src/operations/certificates.ts","../src/operations/operations.ts","../src/operations/containerAppsSourceControls.ts","../src/operations/daprComponents.ts","../src/operations/containerAppsAuthConfigs.ts","../src/operations/managedEnvironmentsStorages.ts","../src/containerAppsAPIClient.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\n/** Container App collection ARM resource. */\nexport interface ContainerAppCollection {\n  /** Collection of resources. */\n  value: ContainerApp[];\n  /**\n   * Link to next page of resources.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Managed service identity (system assigned and/or user assigned identities) */\nexport interface ManagedServiceIdentity {\n  /**\n   * The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly principalId?: string;\n  /**\n   * The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantId?: string;\n  /** Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed). */\n  type: ManagedServiceIdentityType;\n  /** The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests. */\n  userAssignedIdentities?: { [propertyName: string]: UserAssignedIdentity };\n}\n\n/** User assigned identity properties */\nexport interface UserAssignedIdentity {\n  /**\n   * The principal ID of the assigned identity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly principalId?: string;\n  /**\n   * The client ID of the assigned identity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly clientId?: string;\n}\n\n/** Non versioned Container App configuration properties that define the mutable settings of a Container app */\nexport interface Configuration {\n  /** Collection of secrets used by a Container app */\n  secrets?: Secret[];\n  /**\n   * ActiveRevisionsMode controls how active revisions are handled for the Container app:\n   * <list><item>Multiple: multiple revisions can be active. If no value if provided, this is the default</item><item>Single: Only one revision can be active at a time. Revision weights can not be used in this mode</item></list>\n   */\n  activeRevisionsMode?: ActiveRevisionsMode;\n  /** Ingress configurations. */\n  ingress?: Ingress;\n  /** Collection of private container registry credentials for containers used by the Container app */\n  registries?: RegistryCredentials[];\n  /** Dapr configuration for the Container App. */\n  dapr?: Dapr;\n}\n\n/** Secret definition. */\nexport interface Secret {\n  /** Secret Name. */\n  name?: string;\n  /** Secret Value. */\n  value?: string;\n}\n\n/** Container App Ingress configuration. */\nexport interface Ingress {\n  /**\n   * Hostname.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly fqdn?: string;\n  /** Bool indicating if app exposes an external http endpoint */\n  external?: boolean;\n  /** Target Port in containers for traffic from ingress */\n  targetPort?: number;\n  /** Ingress transport protocol */\n  transport?: IngressTransportMethod;\n  /** Traffic weights for app's revisions */\n  traffic?: TrafficWeight[];\n  /** custom domain bindings for Container Apps' hostnames. */\n  customDomains?: CustomDomain[];\n  /** Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS connections */\n  allowInsecure?: boolean;\n}\n\n/** Traffic weight assigned to a revision */\nexport interface TrafficWeight {\n  /** Name of a revision */\n  revisionName?: string;\n  /** Traffic weight assigned to a revision */\n  weight?: number;\n  /** Indicates that the traffic weight belongs to a latest stable revision */\n  latestRevision?: boolean;\n}\n\n/** Custom Domain of a Container App */\nexport interface CustomDomain {\n  /** Hostname. */\n  name: string;\n  /** Custom Domain binding type. */\n  bindingType?: BindingType;\n  /** Resource Id of the Certificate to be bound to this hostname. Must exist in the Managed Environment. */\n  certificateId: string;\n}\n\n/** Container App Private Registry */\nexport interface RegistryCredentials {\n  /** Container Registry Server */\n  server?: string;\n  /** Container Registry Username */\n  username?: string;\n  /** The name of the Secret that contains the registry login password */\n  passwordSecretRef?: string;\n}\n\n/** Container App Dapr configuration. */\nexport interface Dapr {\n  /** Boolean indicating if the Dapr side car is enabled */\n  enabled?: boolean;\n  /** Dapr application identifier */\n  appId?: string;\n  /** Tells Dapr which protocol your application is using. Valid options are http and grpc. Default is http */\n  appProtocol?: AppProtocol;\n  /** Tells Dapr which port your application is listening on */\n  appPort?: number;\n}\n\n/**\n * Container App versioned application definition.\n * Defines the desired state of an immutable revision.\n * Any changes to this section Will result in a new revision being created\n */\nexport interface Template {\n  /** User friendly suffix that is appended to the revision name */\n  revisionSuffix?: string;\n  /** List of container definitions for the Container App. */\n  containers?: Container[];\n  /** Scaling properties for the Container App. */\n  scale?: Scale;\n  /** List of volume definitions for the Container App. */\n  volumes?: Volume[];\n}\n\n/** Container App container definition. */\nexport interface Container {\n  /** Container image tag. */\n  image?: string;\n  /** Custom container name. */\n  name?: string;\n  /** Container start command. */\n  command?: string[];\n  /** Container start command arguments. */\n  args?: string[];\n  /** Container environment variables. */\n  env?: EnvironmentVar[];\n  /** Container resource requirements. */\n  resources?: ContainerResources;\n  /** List of probes for the container. */\n  probes?: ContainerAppProbe[];\n  /** Container volume mounts. */\n  volumeMounts?: VolumeMount[];\n}\n\n/** Container App container environment variable. */\nexport interface EnvironmentVar {\n  /** Environment variable name. */\n  name?: string;\n  /** Non-secret environment variable value. */\n  value?: string;\n  /** Name of the Container App secret from which to pull the environment variable value. */\n  secretRef?: string;\n}\n\n/** Container App container resource requirements. */\nexport interface ContainerResources {\n  /** Required CPU in cores, e.g. 0.5 */\n  cpu?: number;\n  /** Required memory, e.g. \"250Mb\" */\n  memory?: string;\n  /**\n   * Ephemeral Storage, e.g. \"1Gi\"\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly ephemeralStorage?: string;\n}\n\n/** Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic. */\nexport interface ContainerAppProbe {\n  /** Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. Maximum value is 10. */\n  failureThreshold?: number;\n  /** HTTPGet specifies the http request to perform. */\n  httpGet?: ContainerAppProbeHttpGet;\n  /** Number of seconds after the container has started before liveness probes are initiated. Minimum value is 1. Maximum value is 60. */\n  initialDelaySeconds?: number;\n  /** How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value is 240. */\n  periodSeconds?: number;\n  /** Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. Maximum value is 10. */\n  successThreshold?: number;\n  /** TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported. */\n  tcpSocket?: ContainerAppProbeTcpSocket;\n  /** Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod feature gate. Maximum value is 3600 seconds (1 hour) */\n  terminationGracePeriodSeconds?: number;\n  /** Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 240. */\n  timeoutSeconds?: number;\n  /** The type of probe. */\n  type?: Type;\n}\n\n/** HTTPGet specifies the http request to perform. */\nexport interface ContainerAppProbeHttpGet {\n  /** Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead. */\n  host?: string;\n  /** Custom headers to set in the request. HTTP allows repeated headers. */\n  httpHeaders?: ContainerAppProbeHttpGetHttpHeadersItem[];\n  /** Path to access on the HTTP server. */\n  path?: string;\n  /** Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. */\n  port: number;\n  /** Scheme to use for connecting to the host. Defaults to HTTP. */\n  scheme?: string;\n}\n\n/** HTTPHeader describes a custom header to be used in HTTP probes */\nexport interface ContainerAppProbeHttpGetHttpHeadersItem {\n  /** The header field name */\n  name: string;\n  /** The header field value */\n  value: string;\n}\n\n/** TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported. */\nexport interface ContainerAppProbeTcpSocket {\n  /** Optional: Host name to connect to, defaults to the pod IP. */\n  host?: string;\n  /** Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. */\n  port: number;\n}\n\n/** Volume mount for the Container App. */\nexport interface VolumeMount {\n  /** This must match the Name of a Volume. */\n  volumeName?: string;\n  /** Path within the container at which the volume should be mounted.Must not contain ':'. */\n  mountPath?: string;\n}\n\n/** Container App scaling configurations. */\nexport interface Scale {\n  /** Optional. Minimum number of container replicas. */\n  minReplicas?: number;\n  /** Optional. Maximum number of container replicas. Defaults to 10 if not set. */\n  maxReplicas?: number;\n  /** Scaling rules. */\n  rules?: ScaleRule[];\n}\n\n/** Container App container scaling rule. */\nexport interface ScaleRule {\n  /** Scale Rule Name */\n  name?: string;\n  /** Azure Queue based scaling. */\n  azureQueue?: QueueScaleRule;\n  /** Custom scale rule. */\n  custom?: CustomScaleRule;\n  /** HTTP requests based scaling. */\n  http?: HttpScaleRule;\n}\n\n/** Container App container Azure Queue based scaling rule. */\nexport interface QueueScaleRule {\n  /** Queue name. */\n  queueName?: string;\n  /** Queue length. */\n  queueLength?: number;\n  /** Authentication secrets for the queue scale rule. */\n  auth?: ScaleRuleAuth[];\n}\n\n/** Auth Secrets for Container App Scale Rule */\nexport interface ScaleRuleAuth {\n  /** Name of the Container App secret from which to pull the auth params. */\n  secretRef?: string;\n  /** Trigger Parameter that uses the secret */\n  triggerParameter?: string;\n}\n\n/** Container App container Custom scaling rule. */\nexport interface CustomScaleRule {\n  /**\n   * Type of the custom scale rule\n   * eg: azure-servicebus, redis etc.\n   */\n  type?: string;\n  /** Metadata properties to describe custom scale rule. */\n  metadata?: { [propertyName: string]: string };\n  /** Authentication secrets for the custom scale rule. */\n  auth?: ScaleRuleAuth[];\n}\n\n/** Container App container Custom scaling rule. */\nexport interface HttpScaleRule {\n  /** Metadata properties to describe http scale rule. */\n  metadata?: { [propertyName: string]: string };\n  /** Authentication secrets for the custom scale rule. */\n  auth?: ScaleRuleAuth[];\n}\n\n/** Volume definitions for the Container App. */\nexport interface Volume {\n  /** Volume name. */\n  name?: string;\n  /** Storage type for the volume. If not provided, use EmptyDir. */\n  storageType?: StorageType;\n  /** Name of storage resource. No need to provide for EmptyDir. */\n  storageName?: string;\n}\n\n/** Common fields that are returned in the response for all Azure Resource Manager resources */\nexport interface Resource {\n  /**\n   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The name of the resource\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * Azure Resource Manager metadata containing createdBy and modifiedBy information.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n}\n\n/** Metadata pertaining to creation and last modification of the resource. */\nexport interface SystemData {\n  /** The identity that created the resource. */\n  createdBy?: string;\n  /** The type of identity that created the resource. */\n  createdByType?: CreatedByType;\n  /** The timestamp of resource creation (UTC). */\n  createdAt?: Date;\n  /** The identity that last modified the resource. */\n  lastModifiedBy?: string;\n  /** The type of identity that last modified the resource. */\n  lastModifiedByType?: CreatedByType;\n  /** The timestamp of resource last modification (UTC) */\n  lastModifiedAt?: Date;\n}\n\n/** App Service error response. */\nexport interface DefaultErrorResponse {\n  /**\n   * Error model.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly error?: DefaultErrorResponseError;\n}\n\n/** Error model. */\nexport interface DefaultErrorResponseError {\n  /**\n   * Standardized string to programmatically identify the error.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly code?: string;\n  /**\n   * Detailed error description and debugging information.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n  /**\n   * Detailed error description and debugging information.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly target?: string;\n  /** Details or the error */\n  details?: DefaultErrorResponseErrorDetailsItem[];\n  /**\n   * More information to debug error.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly innererror?: string;\n}\n\n/** Detailed errors. */\nexport interface DefaultErrorResponseErrorDetailsItem {\n  /**\n   * Standardized string to programmatically identify the error.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly code?: string;\n  /**\n   * Detailed error description and debugging information.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n  /**\n   * Detailed error description and debugging information.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly target?: string;\n}\n\n/** Container App Patch. */\nexport interface ContainerAppPatch {\n  /** Application-specific metadata in the form of key-value pairs. */\n  tags?: { [propertyName: string]: string };\n}\n\n/** Container App Secrets Collection ARM resource. */\nexport interface SecretsCollection {\n  /** Collection of resources. */\n  value: ContainerAppSecret[];\n}\n\n/** Container App Secret. */\nexport interface ContainerAppSecret {\n  /**\n   * Secret Name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Secret Value.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: string;\n}\n\n/** Container App Revisions collection ARM resource. */\nexport interface RevisionCollection {\n  /** Collection of resources. */\n  value: Revision[];\n  /**\n   * Link to next page of resources.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Container object under Container App Revision Replica. */\nexport interface ReplicaContainer {\n  /** The Name of the Container */\n  name?: string;\n  /** The Id of the Container */\n  containerId?: string;\n  /** The container ready status */\n  ready?: boolean;\n  /** The container start status */\n  started?: boolean;\n  /** The container restart count */\n  restartCount?: number;\n}\n\n/** Container App Revision Replicas collection ARM resource. */\nexport interface ReplicaCollection {\n  /** Collection of resources. */\n  value: Replica[];\n}\n\n/** Collection of Environments */\nexport interface ManagedEnvironmentsCollection {\n  /** Collection of resources. */\n  value: ManagedEnvironment[];\n  /**\n   * Link to next page of resources.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Configuration properties for apps environment to join a Virtual Network */\nexport interface VnetConfiguration {\n  /** Boolean indicating the environment only has an internal load balancer. These environments do not have a public static IP resource, must provide ControlPlaneSubnetResourceId and AppSubnetResourceId if enabling this property */\n  internal?: boolean;\n  /** Resource ID of a subnet for infrastructure components. This subnet must be in the same VNET as the subnet defined in runtimeSubnetId. Must not overlap with any other provided IP ranges. */\n  infrastructureSubnetId?: string;\n  /** Resource ID of a subnet that Container App containers are injected into. This subnet must be in the same VNET as the subnet defined in infrastructureSubnetId. Must not overlap with any other provided IP ranges. */\n  runtimeSubnetId?: string;\n  /** CIDR notation IP range assigned to the Docker bridge, network. Must not overlap with any other provided IP ranges. */\n  dockerBridgeCidr?: string;\n  /** IP range in CIDR notation that can be reserved for environment infrastructure IP addresses. Must not overlap with any other provided IP ranges. */\n  platformReservedCidr?: string;\n  /**  An IP address from the IP range defined by platformReservedCidr that will be reserved for the internal DNS server. */\n  platformReservedDnsIP?: string;\n}\n\n/** Configuration of application logs */\nexport interface AppLogsConfiguration {\n  /** Logs destination */\n  destination?: string;\n  /** Log Analytics configuration */\n  logAnalyticsConfiguration?: LogAnalyticsConfiguration;\n}\n\n/** Log analytics configuration */\nexport interface LogAnalyticsConfiguration {\n  /** Log analytics customer id */\n  customerId?: string;\n  /** Log analytics customer key */\n  sharedKey?: string;\n}\n\n/** An environment for hosting container apps */\nexport interface ManagedEnvironmentPatch {\n  /** Application-specific metadata in the form of key-value pairs. */\n  tags?: { [propertyName: string]: string };\n}\n\n/** Collection of Certificates. */\nexport interface CertificateCollection {\n  /** Collection of resources. */\n  value: Certificate[];\n  /**\n   * Link to next page of resources.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Certificate resource specific properties */\nexport interface CertificateProperties {\n  /**\n   * Provisioning state of the certificate.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: CertificateProvisioningState;\n  /** Certificate password. */\n  password?: string;\n  /**\n   * Subject name of the certificate.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly subjectName?: string;\n  /** PFX or PEM blob */\n  value?: Uint8Array;\n  /**\n   * Certificate issuer.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly issuer?: string;\n  /**\n   * Certificate issue Date.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly issueDate?: Date;\n  /**\n   * Certificate expiration date.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly expirationDate?: Date;\n  /**\n   * Certificate thumbprint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly thumbprint?: string;\n  /**\n   * Is the certificate valid?.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly valid?: boolean;\n  /**\n   * Public key hash.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly publicKeyHash?: string;\n}\n\n/** A certificate to update */\nexport interface CertificatePatch {\n  /** Application-specific metadata in the form of key-value pairs. */\n  tags?: { [propertyName: string]: string };\n}\n\n/** Available operations of the service */\nexport interface AvailableOperations {\n  /** Collection of available operation details */\n  value?: OperationDetail[];\n  /**\n   * URL client should use to fetch the next page (per server side paging).\n   * It's null for now, added for future use.\n   */\n  nextLink?: string;\n}\n\n/** Operation detail payload */\nexport interface OperationDetail {\n  /** Name of the operation */\n  name?: string;\n  /** Indicates whether the operation is a data action */\n  isDataAction?: boolean;\n  /** Display of the operation */\n  display?: OperationDisplay;\n  /** Origin of the operation */\n  origin?: string;\n}\n\n/** Operation display payload */\nexport interface OperationDisplay {\n  /** Resource provider of the operation */\n  provider?: string;\n  /** Resource of the operation */\n  resource?: string;\n  /** Localized friendly name for the operation */\n  operation?: string;\n  /** Localized friendly description for the operation */\n  description?: string;\n}\n\n/** SourceControl collection ARM resource. */\nexport interface SourceControlCollection {\n  /** Collection of resources. */\n  value: SourceControl[];\n  /**\n   * Link to next page of resources.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Configuration properties that define the mutable settings of a Container App SourceControl */\nexport interface GithubActionConfiguration {\n  /** Registry configurations. */\n  registryInfo?: RegistryInfo;\n  /** AzureCredentials configurations. */\n  azureCredentials?: AzureCredentials;\n  /** Docker file path */\n  dockerfilePath?: string;\n  /** Code or Image */\n  publishType?: string;\n  /** Operation system */\n  os?: string;\n  /** Runtime stack */\n  runtimeStack?: string;\n  /** Runtime Version */\n  runtimeVersion?: string;\n}\n\n/** Container App registry information. */\nexport interface RegistryInfo {\n  /** registry server Url. */\n  registryUrl?: string;\n  /** registry username. */\n  registryUserName?: string;\n  /** registry secret. */\n  registryPassword?: string;\n}\n\n/** Container App credentials. */\nexport interface AzureCredentials {\n  /** Client Id. */\n  clientId?: string;\n  /** Client Secret. */\n  clientSecret?: string;\n  /** Tenant Id. */\n  tenantId?: string;\n  /** Subscription Id. */\n  subscriptionId?: string;\n}\n\n/** Dapr Components ARM resource. */\nexport interface DaprComponentsCollection {\n  /** Collection of resources. */\n  value: DaprComponent[];\n  /**\n   * Link to next page of resources.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Dapr component metadata. */\nexport interface DaprMetadata {\n  /** Metadata property name. */\n  name?: string;\n  /** Metadata property value. */\n  value?: string;\n  /** Name of the Dapr Component secret from which to pull the metadata property value. */\n  secretRef?: string;\n}\n\n/** AuthConfig collection ARM resource. */\nexport interface AuthConfigCollection {\n  /** Collection of resources. */\n  value: AuthConfig[];\n  /**\n   * Link to next page of resources.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The configuration settings of the platform of ContainerApp Service Authentication/Authorization. */\nexport interface AuthPlatform {\n  /** <code>true</code> if the Authentication / Authorization feature is enabled for the current app; otherwise, <code>false</code>. */\n  enabled?: boolean;\n  /**\n   * The RuntimeVersion of the Authentication / Authorization feature in use for the current app.\n   * The setting in this value can control the behavior of certain features in the Authentication / Authorization module.\n   */\n  runtimeVersion?: string;\n}\n\n/** The configuration settings that determines the validation flow of users using ContainerApp Service Authentication/Authorization. */\nexport interface GlobalValidation {\n  /** The action to take when an unauthenticated client attempts to access the app. */\n  unauthenticatedClientAction?: UnauthenticatedClientActionV2;\n  /**\n   * The default authentication provider to use when multiple providers are configured.\n   * This setting is only needed if multiple providers are configured and the unauthenticated client\n   * action is set to \"RedirectToLoginPage\".\n   */\n  redirectToProvider?: string;\n  /** The paths for which unauthenticated flow would not be redirected to the login page. */\n  excludedPaths?: string[];\n}\n\n/** The configuration settings of each of the identity providers used to configure ContainerApp Service Authentication/Authorization. */\nexport interface IdentityProviders {\n  /** The configuration settings of the Azure Active directory provider. */\n  azureActiveDirectory?: AzureActiveDirectory;\n  /** The configuration settings of the Facebook provider. */\n  facebook?: Facebook;\n  /** The configuration settings of the GitHub provider. */\n  gitHub?: GitHub;\n  /** The configuration settings of the Google provider. */\n  google?: Google;\n  /** The configuration settings of the Twitter provider. */\n  twitter?: Twitter;\n  /** The configuration settings of the Apple provider. */\n  apple?: Apple;\n  /** The configuration settings of the Azure Static Web Apps provider. */\n  azureStaticWebApps?: AzureStaticWebApps;\n  /**\n   * The map of the name of the alias of each custom Open ID Connect provider to the\n   * configuration settings of the custom Open ID Connect provider.\n   */\n  customOpenIdConnectProviders?: {\n    [propertyName: string]: CustomOpenIdConnectProvider;\n  };\n}\n\n/** The configuration settings of the Azure Active directory provider. */\nexport interface AzureActiveDirectory {\n  /** <code>false</code> if the Azure Active Directory provider should not be enabled despite the set registration; otherwise, <code>true</code>. */\n  enabled?: boolean;\n  /** The configuration settings of the Azure Active Directory app registration. */\n  registration?: AzureActiveDirectoryRegistration;\n  /** The configuration settings of the Azure Active Directory login flow. */\n  login?: AzureActiveDirectoryLogin;\n  /** The configuration settings of the Azure Active Directory token validation flow. */\n  validation?: AzureActiveDirectoryValidation;\n  /**\n   * Gets a value indicating whether the Azure AD configuration was auto-provisioned using 1st party tooling.\n   * This is an internal flag primarily intended to support the Azure Management Portal. Users should not\n   * read or write to this property.\n   */\n  isAutoProvisioned?: boolean;\n}\n\n/** The configuration settings of the Azure Active Directory app registration. */\nexport interface AzureActiveDirectoryRegistration {\n  /**\n   * The OpenID Connect Issuer URI that represents the entity which issues access tokens for this application.\n   * When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://login.microsoftonline.com/v2.0/{tenant-guid}/.\n   * This URI is a case-sensitive identifier for the token issuer.\n   * More information on OpenID Connect Discovery: http://openid.net/specs/openid-connect-discovery-1_0.html\n   */\n  openIdIssuer?: string;\n  /**\n   * The Client ID of this relying party application, known as the client_id.\n   * This setting is required for enabling OpenID Connection authentication with Azure Active Directory or\n   * other 3rd party OpenID Connect providers.\n   * More information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html\n   */\n  clientId?: string;\n  /** The app setting name that contains the client secret of the relying party application. */\n  clientSecretSettingName?: string;\n  /**\n   * An alternative to the client secret, that is the thumbprint of a certificate used for signing purposes. This property acts as\n   * a replacement for the Client Secret. It is also optional.\n   */\n  clientSecretCertificateThumbprint?: string;\n  /**\n   * An alternative to the client secret thumbprint, that is the subject alternative name of a certificate used for signing purposes. This property acts as\n   * a replacement for the Client Secret Certificate Thumbprint. It is also optional.\n   */\n  clientSecretCertificateSubjectAlternativeName?: string;\n  /**\n   * An alternative to the client secret thumbprint, that is the issuer of a certificate used for signing purposes. This property acts as\n   * a replacement for the Client Secret Certificate Thumbprint. It is also optional.\n   */\n  clientSecretCertificateIssuer?: string;\n}\n\n/** The configuration settings of the Azure Active Directory login flow. */\nexport interface AzureActiveDirectoryLogin {\n  /**\n   * Login parameters to send to the OpenID Connect authorization endpoint when\n   * a user logs in. Each parameter must be in the form \"key=value\".\n   */\n  loginParameters?: string[];\n  /** <code>true</code> if the www-authenticate provider should be omitted from the request; otherwise, <code>false</code>. */\n  disableWWWAuthenticate?: boolean;\n}\n\n/** The configuration settings of the Azure Active Directory token validation flow. */\nexport interface AzureActiveDirectoryValidation {\n  /** The configuration settings of the checks that should be made while validating the JWT Claims. */\n  jwtClaimChecks?: JwtClaimChecks;\n  /** The list of audiences that can make successful authentication/authorization requests. */\n  allowedAudiences?: string[];\n  /** The configuration settings of the default authorization policy. */\n  defaultAuthorizationPolicy?: DefaultAuthorizationPolicy;\n}\n\n/** The configuration settings of the checks that should be made while validating the JWT Claims. */\nexport interface JwtClaimChecks {\n  /** The list of the allowed groups. */\n  allowedGroups?: string[];\n  /** The list of the allowed client applications. */\n  allowedClientApplications?: string[];\n}\n\n/** The configuration settings of the Azure Active Directory default authorization policy. */\nexport interface DefaultAuthorizationPolicy {\n  /** The configuration settings of the Azure Active Directory allowed principals. */\n  allowedPrincipals?: AllowedPrincipals;\n  /** The configuration settings of the Azure Active Directory allowed applications. */\n  allowedApplications?: string[];\n}\n\n/** The configuration settings of the Azure Active Directory allowed principals. */\nexport interface AllowedPrincipals {\n  /** The list of the allowed groups. */\n  groups?: string[];\n  /** The list of the allowed identities. */\n  identities?: string[];\n}\n\n/** The configuration settings of the Facebook provider. */\nexport interface Facebook {\n  /** <code>false</code> if the Facebook provider should not be enabled despite the set registration; otherwise, <code>true</code>. */\n  enabled?: boolean;\n  /** The configuration settings of the app registration for the Facebook provider. */\n  registration?: AppRegistration;\n  /** The version of the Facebook api to be used while logging in. */\n  graphApiVersion?: string;\n  /** The configuration settings of the login flow. */\n  login?: LoginScopes;\n}\n\n/** The configuration settings of the app registration for providers that have app ids and app secrets */\nexport interface AppRegistration {\n  /** The App ID of the app used for login. */\n  appId?: string;\n  /** The app setting name that contains the app secret. */\n  appSecretSettingName?: string;\n}\n\n/** The configuration settings of the login flow, including the scopes that should be requested. */\nexport interface LoginScopes {\n  /** A list of the scopes that should be requested while authenticating. */\n  scopes?: string[];\n}\n\n/** The configuration settings of the GitHub provider. */\nexport interface GitHub {\n  /** <code>false</code> if the GitHub provider should not be enabled despite the set registration; otherwise, <code>true</code>. */\n  enabled?: boolean;\n  /** The configuration settings of the app registration for the GitHub provider. */\n  registration?: ClientRegistration;\n  /** The configuration settings of the login flow. */\n  login?: LoginScopes;\n}\n\n/** The configuration settings of the app registration for providers that have client ids and client secrets */\nexport interface ClientRegistration {\n  /** The Client ID of the app used for login. */\n  clientId?: string;\n  /** The app setting name that contains the client secret. */\n  clientSecretSettingName?: string;\n}\n\n/** The configuration settings of the Google provider. */\nexport interface Google {\n  /** <code>false</code> if the Google provider should not be enabled despite the set registration; otherwise, <code>true</code>. */\n  enabled?: boolean;\n  /** The configuration settings of the app registration for the Google provider. */\n  registration?: ClientRegistration;\n  /** The configuration settings of the login flow. */\n  login?: LoginScopes;\n  /** The configuration settings of the Azure Active Directory token validation flow. */\n  validation?: AllowedAudiencesValidation;\n}\n\n/** The configuration settings of the Allowed Audiences validation flow. */\nexport interface AllowedAudiencesValidation {\n  /** The configuration settings of the allowed list of audiences from which to validate the JWT token. */\n  allowedAudiences?: string[];\n}\n\n/** The configuration settings of the Twitter provider. */\nexport interface Twitter {\n  /** <code>false</code> if the Twitter provider should not be enabled despite the set registration; otherwise, <code>true</code>. */\n  enabled?: boolean;\n  /** The configuration settings of the app registration for the Twitter provider. */\n  registration?: TwitterRegistration;\n}\n\n/** The configuration settings of the app registration for the Twitter provider. */\nexport interface TwitterRegistration {\n  /**\n   * The OAuth 1.0a consumer key of the Twitter application used for sign-in.\n   * This setting is required for enabling Twitter Sign-In.\n   * Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in\n   */\n  consumerKey?: string;\n  /**\n   * The app setting name that contains the OAuth 1.0a consumer secret of the Twitter\n   * application used for sign-in.\n   */\n  consumerSecretSettingName?: string;\n}\n\n/** The configuration settings of the Apple provider. */\nexport interface Apple {\n  /** <code>false</code> if the Apple provider should not be enabled despite the set registration; otherwise, <code>true</code>. */\n  enabled?: boolean;\n  /** The configuration settings of the Apple registration. */\n  registration?: AppleRegistration;\n  /** The configuration settings of the login flow. */\n  login?: LoginScopes;\n}\n\n/** The configuration settings of the registration for the Apple provider */\nexport interface AppleRegistration {\n  /** The Client ID of the app used for login. */\n  clientId?: string;\n  /** The app setting name that contains the client secret. */\n  clientSecretSettingName?: string;\n}\n\n/** The configuration settings of the Azure Static Web Apps provider. */\nexport interface AzureStaticWebApps {\n  /** <code>false</code> if the Azure Static Web Apps provider should not be enabled despite the set registration; otherwise, <code>true</code>. */\n  enabled?: boolean;\n  /** The configuration settings of the Azure Static Web Apps registration. */\n  registration?: AzureStaticWebAppsRegistration;\n}\n\n/** The configuration settings of the registration for the Azure Static Web Apps provider */\nexport interface AzureStaticWebAppsRegistration {\n  /** The Client ID of the app used for login. */\n  clientId?: string;\n}\n\n/** The configuration settings of the custom Open ID Connect provider. */\nexport interface CustomOpenIdConnectProvider {\n  /** <code>false</code> if the custom Open ID provider provider should not be enabled; otherwise, <code>true</code>. */\n  enabled?: boolean;\n  /** The configuration settings of the app registration for the custom Open ID Connect provider. */\n  registration?: OpenIdConnectRegistration;\n  /** The configuration settings of the login flow of the custom Open ID Connect provider. */\n  login?: OpenIdConnectLogin;\n}\n\n/** The configuration settings of the app registration for the custom Open ID Connect provider. */\nexport interface OpenIdConnectRegistration {\n  /** The client id of the custom Open ID Connect provider. */\n  clientId?: string;\n  /** The authentication credentials of the custom Open ID Connect provider. */\n  clientCredential?: OpenIdConnectClientCredential;\n  /** The configuration settings of the endpoints used for the custom Open ID Connect provider. */\n  openIdConnectConfiguration?: OpenIdConnectConfig;\n}\n\n/** The authentication client credentials of the custom Open ID Connect provider. */\nexport interface OpenIdConnectClientCredential {\n  /** The method that should be used to authenticate the user. */\n  method?: \"ClientSecretPost\";\n  /** The app setting that contains the client secret for the custom Open ID Connect provider. */\n  clientSecretSettingName?: string;\n}\n\n/** The configuration settings of the endpoints used for the custom Open ID Connect provider. */\nexport interface OpenIdConnectConfig {\n  /** The endpoint to be used to make an authorization request. */\n  authorizationEndpoint?: string;\n  /** The endpoint to be used to request a token. */\n  tokenEndpoint?: string;\n  /** The endpoint that issues the token. */\n  issuer?: string;\n  /** The endpoint that provides the keys necessary to validate the token. */\n  certificationUri?: string;\n  /** The endpoint that contains all the configuration endpoints for the provider. */\n  wellKnownOpenIdConfiguration?: string;\n}\n\n/** The configuration settings of the login flow of the custom Open ID Connect provider. */\nexport interface OpenIdConnectLogin {\n  /** The name of the claim that contains the users name. */\n  nameClaimType?: string;\n  /** A list of the scopes that should be requested while authenticating. */\n  scopes?: string[];\n}\n\n/** The configuration settings of the login flow of users using ContainerApp Service Authentication/Authorization. */\nexport interface Login {\n  /** The routes that specify the endpoints used for login and logout requests. */\n  routes?: LoginRoutes;\n  /** <code>true</code> if the fragments from the request are preserved after the login request is made; otherwise, <code>false</code>. */\n  preserveUrlFragmentsForLogins?: boolean;\n  /**\n   * External URLs that can be redirected to as part of logging in or logging out of the app. Note that the query string part of the URL is ignored.\n   * This is an advanced setting typically only needed by Windows Store application backends.\n   * Note that URLs within the current domain are always implicitly allowed.\n   */\n  allowedExternalRedirectUrls?: string[];\n  /** The configuration settings of the session cookie's expiration. */\n  cookieExpiration?: CookieExpiration;\n  /** The configuration settings of the nonce used in the login flow. */\n  nonce?: Nonce;\n}\n\n/** The routes that specify the endpoints used for login and logout requests. */\nexport interface LoginRoutes {\n  /** The endpoint at which a logout request should be made. */\n  logoutEndpoint?: string;\n}\n\n/** The configuration settings of the session cookie's expiration. */\nexport interface CookieExpiration {\n  /** The convention used when determining the session cookie's expiration. */\n  convention?: CookieExpirationConvention;\n  /** The time after the request is made when the session cookie should expire. */\n  timeToExpiration?: string;\n}\n\n/** The configuration settings of the nonce used in the login flow. */\nexport interface Nonce {\n  /** <code>false</code> if the nonce should not be validated while completing the login flow; otherwise, <code>true</code>. */\n  validateNonce?: boolean;\n  /** The time after the request is made when the nonce should expire. */\n  nonceExpirationInterval?: string;\n}\n\n/** The configuration settings of the HTTP requests for authentication and authorization requests made against ContainerApp Service Authentication/Authorization. */\nexport interface HttpSettings {\n  /** <code>false</code> if the authentication/authorization responses not having the HTTPS scheme are permissible; otherwise, <code>true</code>. */\n  requireHttps?: boolean;\n  /** The configuration settings of the paths HTTP requests. */\n  routes?: HttpSettingsRoutes;\n  /** The configuration settings of a forward proxy used to make the requests. */\n  forwardProxy?: ForwardProxy;\n}\n\n/** The configuration settings of the paths HTTP requests. */\nexport interface HttpSettingsRoutes {\n  /** The prefix that should precede all the authentication/authorization paths. */\n  apiPrefix?: string;\n}\n\n/** The configuration settings of a forward proxy used to make the requests. */\nexport interface ForwardProxy {\n  /** The convention used to determine the url of the request made. */\n  convention?: ForwardProxyConvention;\n  /** The name of the header containing the host of the request. */\n  customHostHeaderName?: string;\n  /** The name of the header containing the scheme of the request. */\n  customProtoHeaderName?: string;\n}\n\n/** Collection of Storage for Environments */\nexport interface ManagedEnvironmentStoragesCollection {\n  /** Collection of storage resources. */\n  value: ManagedEnvironmentStorage[];\n}\n\n/** Storage properties */\nexport interface ManagedEnvironmentStorageProperties {\n  /** Azure file properties */\n  azureFile?: AzureFileProperties;\n}\n\n/** Azure File Properties. */\nexport interface AzureFileProperties {\n  /** Storage account name for azure file. */\n  accountName?: string;\n  /** Storage account key for azure file. */\n  accountKey?: string;\n  /** Access mode for storage */\n  accessMode?: AccessMode;\n  /** Azure file share name. */\n  shareName?: string;\n}\n\n/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */\nexport type TrackedResource = Resource & {\n  /** Resource tags. */\n  tags?: { [propertyName: string]: string };\n  /** The geo-location where the resource lives */\n  location: string;\n};\n\n/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */\nexport type ProxyResource = Resource & {};\n\n/** Container App. */\nexport type ContainerApp = TrackedResource & {\n  /** managed identities for the Container App to interact with other Azure services without maintaining any secrets or credentials in code. */\n  identity?: ManagedServiceIdentity;\n  /**\n   * Provisioning state of the Container App.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ContainerAppProvisioningState;\n  /** Resource ID of the Container App's environment. */\n  managedEnvironmentId?: string;\n  /**\n   * Name of the latest revision of the Container App.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly latestRevisionName?: string;\n  /**\n   * Fully Qualified Domain Name of the latest revision of the Container App.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly latestRevisionFqdn?: string;\n  /**\n   * Id used to verify domain name ownership\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly customDomainVerificationId?: string;\n  /** Non versioned Container App configuration properties. */\n  configuration?: Configuration;\n  /** Container App versioned application definition. */\n  template?: Template;\n  /**\n   * Outbound IP Addresses for container app.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly outboundIPAddresses?: string[];\n};\n\n/** An environment for hosting container apps */\nexport type ManagedEnvironment = TrackedResource & {\n  /**\n   * Provisioning state of the Environment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: EnvironmentProvisioningState;\n  /** Azure Monitor instrumentation key used by Dapr to export Service to Service communication telemetry */\n  daprAIInstrumentationKey?: string;\n  /** Vnet configuration for the environment */\n  vnetConfiguration?: VnetConfiguration;\n  /**\n   * Any errors that occurred during deployment or deployment validation\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly deploymentErrors?: string;\n  /**\n   * Default Domain Name for the cluster\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly defaultDomain?: string;\n  /**\n   * Static IP of the Environment\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly staticIp?: string;\n  /**\n   * Cluster configuration which enables the log daemon to export\n   * app logs to a destination. Currently only \"log-analytics\" is\n   * supported\n   */\n  appLogsConfiguration?: AppLogsConfiguration;\n};\n\n/** Certificate used for Custom Domain bindings of Container Apps in a Managed Environment */\nexport type Certificate = TrackedResource & {\n  /** Certificate resource specific properties */\n  properties?: CertificateProperties;\n};\n\n/** Custom domain analysis. */\nexport type CustomHostnameAnalysisResult = ProxyResource & {\n  /**\n   * Host name that was analyzed\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly hostName?: string;\n  /**\n   * <code>true</code> if hostname is already verified; otherwise, <code>false</code>.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isHostnameAlreadyVerified?: boolean;\n  /**\n   * DNS verification test result.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly customDomainVerificationTest?: DnsVerificationTestResult;\n  /**\n   * Raw failure information if DNS verification fails.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly customDomainVerificationFailureInfo?: DefaultErrorResponse;\n  /**\n   * <code>true</code> if there is a conflict on the Container App's managed environment; otherwise, <code>false</code>.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly hasConflictOnManagedEnvironment?: boolean;\n  /**\n   * Name of the conflicting Container App on the Managed Environment if it's within the same subscription.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly conflictingContainerAppResourceId?: string;\n  /** CName records visible for this hostname. */\n  cNameRecords?: string[];\n  /** TXT records visible for this hostname. */\n  txtRecords?: string[];\n  /** A records visible for this hostname. */\n  aRecords?: string[];\n  /** Alternate CName records visible for this hostname. */\n  alternateCNameRecords?: string[];\n  /** Alternate TXT records visible for this hostname. */\n  alternateTxtRecords?: string[];\n};\n\n/** Container App Revision. */\nexport type Revision = ProxyResource & {\n  /**\n   * Timestamp describing when the revision was created\n   * by controller\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly createdTime?: Date;\n  /**\n   * Fully qualified domain name of the revision\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly fqdn?: string;\n  /**\n   * Container App Revision Template with all possible settings and the\n   * defaults if user did not provide them. The defaults are populated\n   * as they were at the creation time\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly template?: Template;\n  /**\n   * Boolean describing if the Revision is Active\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly active?: boolean;\n  /**\n   * Number of pods currently running for this revision\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly replicas?: number;\n  /**\n   * Traffic weight assigned to this revision\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly trafficWeight?: number;\n  /**\n   * Optional Field - Platform Error Message\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningError?: string;\n  /**\n   * Current health State of the revision\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly healthState?: RevisionHealthState;\n  /**\n   * Current provisioning State of the revision\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: RevisionProvisioningState;\n};\n\n/** Container App Revision Replica. */\nexport type Replica = ProxyResource & {\n  /**\n   * Timestamp describing when the pod was created by controller\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly createdTime?: Date;\n  /** The containers collection under a replica. */\n  containers?: ReplicaContainer[];\n};\n\n/** Container App SourceControl. */\nexport type SourceControl = ProxyResource & {\n  /**\n   * Current provisioning State of the operation\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly operationState?: SourceControlOperationState;\n  /** The repo url which will be integrated to ContainerApp. */\n  repoUrl?: string;\n  /** The branch which will trigger the auto deployment */\n  branch?: string;\n  /**\n   * Container App Revision Template with all possible settings and the\n   * defaults if user did not provide them. The defaults are populated\n   * as they were at the creation time\n   */\n  githubActionConfiguration?: GithubActionConfiguration;\n};\n\n/** Dapr Component. */\nexport type DaprComponent = ProxyResource & {\n  /** Component type */\n  componentType?: string;\n  /** Component version */\n  version?: string;\n  /** Boolean describing if the component errors are ignores */\n  ignoreErrors?: boolean;\n  /** Initialization timeout */\n  initTimeout?: string;\n  /** Collection of secrets used by a Dapr component */\n  secrets?: Secret[];\n  /** Component metadata */\n  metadata?: DaprMetadata[];\n  /** Names of container apps that can use this Dapr component */\n  scopes?: string[];\n};\n\n/** Configuration settings for the Azure ContainerApp Service Authentication / Authorization feature. */\nexport type AuthConfig = ProxyResource & {\n  /** The configuration settings of the platform of ContainerApp Service Authentication/Authorization. */\n  platform?: AuthPlatform;\n  /** The configuration settings that determines the validation flow of users using  Service Authentication/Authorization. */\n  globalValidation?: GlobalValidation;\n  /** The configuration settings of each of the identity providers used to configure ContainerApp Service Authentication/Authorization. */\n  identityProviders?: IdentityProviders;\n  /** The configuration settings of the login flow of users using ContainerApp Service Authentication/Authorization. */\n  login?: Login;\n  /** The configuration settings of the HTTP requests for authentication and authorization requests made against ContainerApp Service Authentication/Authorization. */\n  httpSettings?: HttpSettings;\n};\n\n/** Storage resource for managedEnvironment. */\nexport type ManagedEnvironmentStorage = ProxyResource & {\n  /** Storage properties */\n  properties?: ManagedEnvironmentStorageProperties;\n};\n\n/** Known values of {@link ManagedServiceIdentityType} that the service accepts. */\nexport enum KnownManagedServiceIdentityType {\n  None = \"None\",\n  SystemAssigned = \"SystemAssigned\",\n  UserAssigned = \"UserAssigned\",\n  SystemAssignedUserAssigned = \"SystemAssigned,UserAssigned\"\n}\n\n/**\n * Defines values for ManagedServiceIdentityType. \\\n * {@link KnownManagedServiceIdentityType} can be used interchangeably with ManagedServiceIdentityType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **SystemAssigned** \\\n * **UserAssigned** \\\n * **SystemAssigned,UserAssigned**\n */\nexport type ManagedServiceIdentityType = string;\n\n/** Known values of {@link ContainerAppProvisioningState} that the service accepts. */\nexport enum KnownContainerAppProvisioningState {\n  InProgress = \"InProgress\",\n  Succeeded = \"Succeeded\",\n  Failed = \"Failed\",\n  Canceled = \"Canceled\"\n}\n\n/**\n * Defines values for ContainerAppProvisioningState. \\\n * {@link KnownContainerAppProvisioningState} can be used interchangeably with ContainerAppProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **InProgress** \\\n * **Succeeded** \\\n * **Failed** \\\n * **Canceled**\n */\nexport type ContainerAppProvisioningState = string;\n\n/** Known values of {@link ActiveRevisionsMode} that the service accepts. */\nexport enum KnownActiveRevisionsMode {\n  Multiple = \"multiple\",\n  Single = \"single\"\n}\n\n/**\n * Defines values for ActiveRevisionsMode. \\\n * {@link KnownActiveRevisionsMode} can be used interchangeably with ActiveRevisionsMode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **multiple** \\\n * **single**\n */\nexport type ActiveRevisionsMode = string;\n\n/** Known values of {@link IngressTransportMethod} that the service accepts. */\nexport enum KnownIngressTransportMethod {\n  Auto = \"auto\",\n  Http = \"http\",\n  Http2 = \"http2\"\n}\n\n/**\n * Defines values for IngressTransportMethod. \\\n * {@link KnownIngressTransportMethod} can be used interchangeably with IngressTransportMethod,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **auto** \\\n * **http** \\\n * **http2**\n */\nexport type IngressTransportMethod = string;\n\n/** Known values of {@link BindingType} that the service accepts. */\nexport enum KnownBindingType {\n  Disabled = \"Disabled\",\n  SniEnabled = \"SniEnabled\"\n}\n\n/**\n * Defines values for BindingType. \\\n * {@link KnownBindingType} can be used interchangeably with BindingType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Disabled** \\\n * **SniEnabled**\n */\nexport type BindingType = string;\n\n/** Known values of {@link AppProtocol} that the service accepts. */\nexport enum KnownAppProtocol {\n  Http = \"http\",\n  Grpc = \"grpc\"\n}\n\n/**\n * Defines values for AppProtocol. \\\n * {@link KnownAppProtocol} can be used interchangeably with AppProtocol,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **http** \\\n * **grpc**\n */\nexport type AppProtocol = string;\n\n/** Known values of {@link Type} that the service accepts. */\nexport enum KnownType {\n  Liveness = \"liveness\",\n  Readiness = \"readiness\",\n  Startup = \"startup\"\n}\n\n/**\n * Defines values for Type. \\\n * {@link KnownType} can be used interchangeably with Type,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **liveness** \\\n * **readiness** \\\n * **startup**\n */\nexport type Type = string;\n\n/** Known values of {@link StorageType} that the service accepts. */\nexport enum KnownStorageType {\n  AzureFile = \"AzureFile\",\n  EmptyDir = \"EmptyDir\"\n}\n\n/**\n * Defines values for StorageType. \\\n * {@link KnownStorageType} can be used interchangeably with StorageType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **AzureFile** \\\n * **EmptyDir**\n */\nexport type StorageType = string;\n\n/** Known values of {@link CreatedByType} that the service accepts. */\nexport enum KnownCreatedByType {\n  User = \"User\",\n  Application = \"Application\",\n  ManagedIdentity = \"ManagedIdentity\",\n  Key = \"Key\"\n}\n\n/**\n * Defines values for CreatedByType. \\\n * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **User** \\\n * **Application** \\\n * **ManagedIdentity** \\\n * **Key**\n */\nexport type CreatedByType = string;\n\n/** Known values of {@link RevisionHealthState} that the service accepts. */\nexport enum KnownRevisionHealthState {\n  Healthy = \"Healthy\",\n  Unhealthy = \"Unhealthy\",\n  None = \"None\"\n}\n\n/**\n * Defines values for RevisionHealthState. \\\n * {@link KnownRevisionHealthState} can be used interchangeably with RevisionHealthState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Healthy** \\\n * **Unhealthy** \\\n * **None**\n */\nexport type RevisionHealthState = string;\n\n/** Known values of {@link RevisionProvisioningState} that the service accepts. */\nexport enum KnownRevisionProvisioningState {\n  Provisioning = \"Provisioning\",\n  Provisioned = \"Provisioned\",\n  Failed = \"Failed\",\n  Deprovisioning = \"Deprovisioning\",\n  Deprovisioned = \"Deprovisioned\"\n}\n\n/**\n * Defines values for RevisionProvisioningState. \\\n * {@link KnownRevisionProvisioningState} can be used interchangeably with RevisionProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Provisioning** \\\n * **Provisioned** \\\n * **Failed** \\\n * **Deprovisioning** \\\n * **Deprovisioned**\n */\nexport type RevisionProvisioningState = string;\n\n/** Known values of {@link EnvironmentProvisioningState} that the service accepts. */\nexport enum KnownEnvironmentProvisioningState {\n  Succeeded = \"Succeeded\",\n  Failed = \"Failed\",\n  Canceled = \"Canceled\",\n  Waiting = \"Waiting\",\n  InitializationInProgress = \"InitializationInProgress\",\n  InfrastructureSetupInProgress = \"InfrastructureSetupInProgress\",\n  InfrastructureSetupComplete = \"InfrastructureSetupComplete\",\n  ScheduledForDelete = \"ScheduledForDelete\",\n  UpgradeRequested = \"UpgradeRequested\",\n  UpgradeFailed = \"UpgradeFailed\"\n}\n\n/**\n * Defines values for EnvironmentProvisioningState. \\\n * {@link KnownEnvironmentProvisioningState} can be used interchangeably with EnvironmentProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Succeeded** \\\n * **Failed** \\\n * **Canceled** \\\n * **Waiting** \\\n * **InitializationInProgress** \\\n * **InfrastructureSetupInProgress** \\\n * **InfrastructureSetupComplete** \\\n * **ScheduledForDelete** \\\n * **UpgradeRequested** \\\n * **UpgradeFailed**\n */\nexport type EnvironmentProvisioningState = string;\n\n/** Known values of {@link CertificateProvisioningState} that the service accepts. */\nexport enum KnownCertificateProvisioningState {\n  Succeeded = \"Succeeded\",\n  Failed = \"Failed\",\n  Canceled = \"Canceled\",\n  DeleteFailed = \"DeleteFailed\",\n  Pending = \"Pending\"\n}\n\n/**\n * Defines values for CertificateProvisioningState. \\\n * {@link KnownCertificateProvisioningState} can be used interchangeably with CertificateProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Succeeded** \\\n * **Failed** \\\n * **Canceled** \\\n * **DeleteFailed** \\\n * **Pending**\n */\nexport type CertificateProvisioningState = string;\n\n/** Known values of {@link SourceControlOperationState} that the service accepts. */\nexport enum KnownSourceControlOperationState {\n  InProgress = \"InProgress\",\n  Succeeded = \"Succeeded\",\n  Failed = \"Failed\",\n  Canceled = \"Canceled\"\n}\n\n/**\n * Defines values for SourceControlOperationState. \\\n * {@link KnownSourceControlOperationState} can be used interchangeably with SourceControlOperationState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **InProgress** \\\n * **Succeeded** \\\n * **Failed** \\\n * **Canceled**\n */\nexport type SourceControlOperationState = string;\n\n/** Known values of {@link AccessMode} that the service accepts. */\nexport enum KnownAccessMode {\n  ReadOnly = \"ReadOnly\",\n  ReadWrite = \"ReadWrite\"\n}\n\n/**\n * Defines values for AccessMode. \\\n * {@link KnownAccessMode} can be used interchangeably with AccessMode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **ReadOnly** \\\n * **ReadWrite**\n */\nexport type AccessMode = string;\n/** Defines values for DnsVerificationTestResult. */\nexport type DnsVerificationTestResult = \"Passed\" | \"Failed\" | \"Skipped\";\n/** Defines values for UnauthenticatedClientActionV2. */\nexport type UnauthenticatedClientActionV2 =\n  | \"RedirectToLoginPage\"\n  | \"AllowAnonymous\"\n  | \"Return401\"\n  | \"Return403\";\n/** Defines values for CookieExpirationConvention. */\nexport type CookieExpirationConvention =\n  | \"FixedTime\"\n  | \"IdentityProviderDerived\";\n/** Defines values for ForwardProxyConvention. */\nexport type ForwardProxyConvention = \"NoProxy\" | \"Standard\" | \"Custom\";\n\n/** Optional parameters. */\nexport interface ContainerAppsListBySubscriptionOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBySubscription operation. */\nexport type ContainerAppsListBySubscriptionResponse = ContainerAppCollection;\n\n/** Optional parameters. */\nexport interface ContainerAppsListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type ContainerAppsListByResourceGroupResponse = ContainerAppCollection;\n\n/** Optional parameters. */\nexport interface ContainerAppsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ContainerAppsGetResponse = ContainerApp;\n\n/** Optional parameters. */\nexport interface ContainerAppsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ContainerAppsCreateOrUpdateResponse = ContainerApp;\n\n/** Optional parameters. */\nexport interface ContainerAppsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ContainerAppsUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the update operation. */\nexport type ContainerAppsUpdateResponse = ContainerApp;\n\n/** Optional parameters. */\nexport interface ContainerAppsListCustomHostNameAnalysisOptionalParams\n  extends coreClient.OperationOptions {\n  /** Custom hostname. */\n  customHostname?: string;\n}\n\n/** Contains response data for the listCustomHostNameAnalysis operation. */\nexport type ContainerAppsListCustomHostNameAnalysisResponse = CustomHostnameAnalysisResult;\n\n/** Optional parameters. */\nexport interface ContainerAppsListSecretsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listSecrets operation. */\nexport type ContainerAppsListSecretsResponse = SecretsCollection;\n\n/** Optional parameters. */\nexport interface ContainerAppsListBySubscriptionNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBySubscriptionNext operation. */\nexport type ContainerAppsListBySubscriptionNextResponse = ContainerAppCollection;\n\n/** Optional parameters. */\nexport interface ContainerAppsListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type ContainerAppsListByResourceGroupNextResponse = ContainerAppCollection;\n\n/** Optional parameters. */\nexport interface ContainerAppsRevisionsListRevisionsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listRevisions operation. */\nexport type ContainerAppsRevisionsListRevisionsResponse = RevisionCollection;\n\n/** Optional parameters. */\nexport interface ContainerAppsRevisionsGetRevisionOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getRevision operation. */\nexport type ContainerAppsRevisionsGetRevisionResponse = Revision;\n\n/** Optional parameters. */\nexport interface ContainerAppsRevisionsActivateRevisionOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ContainerAppsRevisionsDeactivateRevisionOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ContainerAppsRevisionsRestartRevisionOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ContainerAppsRevisionsListRevisionsNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listRevisionsNext operation. */\nexport type ContainerAppsRevisionsListRevisionsNextResponse = RevisionCollection;\n\n/** Optional parameters. */\nexport interface ContainerAppsRevisionReplicasGetReplicaOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getReplica operation. */\nexport type ContainerAppsRevisionReplicasGetReplicaResponse = Replica;\n\n/** Optional parameters. */\nexport interface ContainerAppsRevisionReplicasListReplicasOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listReplicas operation. */\nexport type ContainerAppsRevisionReplicasListReplicasResponse = ReplicaCollection;\n\n/** Optional parameters. */\nexport interface ManagedEnvironmentsListBySubscriptionOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBySubscription operation. */\nexport type ManagedEnvironmentsListBySubscriptionResponse = ManagedEnvironmentsCollection;\n\n/** Optional parameters. */\nexport interface ManagedEnvironmentsListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type ManagedEnvironmentsListByResourceGroupResponse = ManagedEnvironmentsCollection;\n\n/** Optional parameters. */\nexport interface ManagedEnvironmentsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ManagedEnvironmentsGetResponse = ManagedEnvironment;\n\n/** Optional parameters. */\nexport interface ManagedEnvironmentsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ManagedEnvironmentsCreateOrUpdateResponse = ManagedEnvironment;\n\n/** Optional parameters. */\nexport interface ManagedEnvironmentsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ManagedEnvironmentsUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the update operation. */\nexport type ManagedEnvironmentsUpdateResponse = ManagedEnvironment;\n\n/** Optional parameters. */\nexport interface ManagedEnvironmentsListBySubscriptionNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBySubscriptionNext operation. */\nexport type ManagedEnvironmentsListBySubscriptionNextResponse = ManagedEnvironmentsCollection;\n\n/** Optional parameters. */\nexport interface ManagedEnvironmentsListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type ManagedEnvironmentsListByResourceGroupNextResponse = ManagedEnvironmentsCollection;\n\n/** Optional parameters. */\nexport interface CertificatesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type CertificatesListResponse = CertificateCollection;\n\n/** Optional parameters. */\nexport interface CertificatesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type CertificatesGetResponse = Certificate;\n\n/** Optional parameters. */\nexport interface CertificatesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Certificate to be created or updated */\n  certificateEnvelope?: Certificate;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type CertificatesCreateOrUpdateResponse = Certificate;\n\n/** Optional parameters. */\nexport interface CertificatesDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface CertificatesUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the update operation. */\nexport type CertificatesUpdateResponse = Certificate;\n\n/** Optional parameters. */\nexport interface CertificatesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type CertificatesListNextResponse = CertificateCollection;\n\n/** Optional parameters. */\nexport interface OperationsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type OperationsListResponse = AvailableOperations;\n\n/** Optional parameters. */\nexport interface OperationsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type OperationsListNextResponse = AvailableOperations;\n\n/** Optional parameters. */\nexport interface ContainerAppsSourceControlsListByContainerAppOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByContainerApp operation. */\nexport type ContainerAppsSourceControlsListByContainerAppResponse = SourceControlCollection;\n\n/** Optional parameters. */\nexport interface ContainerAppsSourceControlsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ContainerAppsSourceControlsGetResponse = SourceControl;\n\n/** Optional parameters. */\nexport interface ContainerAppsSourceControlsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ContainerAppsSourceControlsCreateOrUpdateResponse = SourceControl;\n\n/** Optional parameters. */\nexport interface ContainerAppsSourceControlsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ContainerAppsSourceControlsListByContainerAppNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByContainerAppNext operation. */\nexport type ContainerAppsSourceControlsListByContainerAppNextResponse = SourceControlCollection;\n\n/** Optional parameters. */\nexport interface DaprComponentsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type DaprComponentsListResponse = DaprComponentsCollection;\n\n/** Optional parameters. */\nexport interface DaprComponentsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type DaprComponentsGetResponse = DaprComponent;\n\n/** Optional parameters. */\nexport interface DaprComponentsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type DaprComponentsCreateOrUpdateResponse = DaprComponent;\n\n/** Optional parameters. */\nexport interface DaprComponentsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface DaprComponentsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type DaprComponentsListNextResponse = DaprComponentsCollection;\n\n/** Optional parameters. */\nexport interface ContainerAppsAuthConfigsListByContainerAppOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByContainerApp operation. */\nexport type ContainerAppsAuthConfigsListByContainerAppResponse = AuthConfigCollection;\n\n/** Optional parameters. */\nexport interface ContainerAppsAuthConfigsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ContainerAppsAuthConfigsGetResponse = AuthConfig;\n\n/** Optional parameters. */\nexport interface ContainerAppsAuthConfigsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ContainerAppsAuthConfigsCreateOrUpdateResponse = AuthConfig;\n\n/** Optional parameters. */\nexport interface ContainerAppsAuthConfigsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ContainerAppsAuthConfigsListByContainerAppNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByContainerAppNext operation. */\nexport type ContainerAppsAuthConfigsListByContainerAppNextResponse = AuthConfigCollection;\n\n/** Optional parameters. */\nexport interface ManagedEnvironmentsStoragesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type ManagedEnvironmentsStoragesListResponse = ManagedEnvironmentStoragesCollection;\n\n/** Optional parameters. */\nexport interface ManagedEnvironmentsStoragesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ManagedEnvironmentsStoragesGetResponse = ManagedEnvironmentStorage;\n\n/** Optional parameters. */\nexport interface ManagedEnvironmentsStoragesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ManagedEnvironmentsStoragesCreateOrUpdateResponse = ManagedEnvironmentStorage;\n\n/** Optional parameters. */\nexport interface ManagedEnvironmentsStoragesDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ContainerAppsAPIClientOptionalParams\n  extends coreClient.ServiceClientOptions {\n  /** server parameter */\n  $host?: string;\n  /** Api Version */\n  apiVersion?: string;\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport const ContainerAppCollection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContainerAppCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ContainerApp\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedServiceIdentity: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedServiceIdentity\",\n    modelProperties: {\n      principalId: {\n        serializedName: \"principalId\",\n        readOnly: true,\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      tenantId: {\n        serializedName: \"tenantId\",\n        readOnly: true,\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      userAssignedIdentities: {\n        serializedName: \"userAssignedIdentities\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Composite\", className: \"UserAssignedIdentity\" }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const UserAssignedIdentity: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UserAssignedIdentity\",\n    modelProperties: {\n      principalId: {\n        serializedName: \"principalId\",\n        readOnly: true,\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      clientId: {\n        serializedName: \"clientId\",\n        readOnly: true,\n        type: {\n          name: \"Uuid\"\n        }\n      }\n    }\n  }\n};\n\nexport const Configuration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Configuration\",\n    modelProperties: {\n      secrets: {\n        serializedName: \"secrets\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Secret\"\n            }\n          }\n        }\n      },\n      activeRevisionsMode: {\n        serializedName: \"activeRevisionsMode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      ingress: {\n        serializedName: \"ingress\",\n        type: {\n          name: \"Composite\",\n          className: \"Ingress\"\n        }\n      },\n      registries: {\n        serializedName: \"registries\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RegistryCredentials\"\n            }\n          }\n        }\n      },\n      dapr: {\n        serializedName: \"dapr\",\n        type: {\n          name: \"Composite\",\n          className: \"Dapr\"\n        }\n      }\n    }\n  }\n};\n\nexport const Secret: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Secret\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Ingress: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Ingress\",\n    modelProperties: {\n      fqdn: {\n        serializedName: \"fqdn\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      external: {\n        defaultValue: false,\n        serializedName: \"external\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      targetPort: {\n        serializedName: \"targetPort\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      transport: {\n        serializedName: \"transport\",\n        type: {\n          name: \"String\"\n        }\n      },\n      traffic: {\n        serializedName: \"traffic\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"TrafficWeight\"\n            }\n          }\n        }\n      },\n      customDomains: {\n        serializedName: \"customDomains\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CustomDomain\"\n            }\n          }\n        }\n      },\n      allowInsecure: {\n        serializedName: \"allowInsecure\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const TrafficWeight: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TrafficWeight\",\n    modelProperties: {\n      revisionName: {\n        serializedName: \"revisionName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      weight: {\n        serializedName: \"weight\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      latestRevision: {\n        defaultValue: false,\n        serializedName: \"latestRevision\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const CustomDomain: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CustomDomain\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      bindingType: {\n        serializedName: \"bindingType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      certificateId: {\n        serializedName: \"certificateId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RegistryCredentials: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RegistryCredentials\",\n    modelProperties: {\n      server: {\n        serializedName: \"server\",\n        type: {\n          name: \"String\"\n        }\n      },\n      username: {\n        serializedName: \"username\",\n        type: {\n          name: \"String\"\n        }\n      },\n      passwordSecretRef: {\n        serializedName: \"passwordSecretRef\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Dapr: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Dapr\",\n    modelProperties: {\n      enabled: {\n        serializedName: \"enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      appId: {\n        serializedName: \"appId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      appProtocol: {\n        serializedName: \"appProtocol\",\n        type: {\n          name: \"String\"\n        }\n      },\n      appPort: {\n        serializedName: \"appPort\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Template: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Template\",\n    modelProperties: {\n      revisionSuffix: {\n        serializedName: \"revisionSuffix\",\n        type: {\n          name: \"String\"\n        }\n      },\n      containers: {\n        serializedName: \"containers\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Container\"\n            }\n          }\n        }\n      },\n      scale: {\n        serializedName: \"scale\",\n        type: {\n          name: \"Composite\",\n          className: \"Scale\"\n        }\n      },\n      volumes: {\n        serializedName: \"volumes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Volume\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Container: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Container\",\n    modelProperties: {\n      image: {\n        serializedName: \"image\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      command: {\n        serializedName: \"command\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      args: {\n        serializedName: \"args\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      env: {\n        serializedName: \"env\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"EnvironmentVar\"\n            }\n          }\n        }\n      },\n      resources: {\n        serializedName: \"resources\",\n        type: {\n          name: \"Composite\",\n          className: \"ContainerResources\"\n        }\n      },\n      probes: {\n        serializedName: \"probes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ContainerAppProbe\"\n            }\n          }\n        }\n      },\n      volumeMounts: {\n        serializedName: \"volumeMounts\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VolumeMount\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const EnvironmentVar: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EnvironmentVar\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      },\n      secretRef: {\n        serializedName: \"secretRef\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerResources: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContainerResources\",\n    modelProperties: {\n      cpu: {\n        serializedName: \"cpu\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      memory: {\n        serializedName: \"memory\",\n        type: {\n          name: \"String\"\n        }\n      },\n      ephemeralStorage: {\n        serializedName: \"ephemeralStorage\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerAppProbe: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContainerAppProbe\",\n    modelProperties: {\n      failureThreshold: {\n        serializedName: \"failureThreshold\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      httpGet: {\n        serializedName: \"httpGet\",\n        type: {\n          name: \"Composite\",\n          className: \"ContainerAppProbeHttpGet\"\n        }\n      },\n      initialDelaySeconds: {\n        serializedName: \"initialDelaySeconds\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      periodSeconds: {\n        serializedName: \"periodSeconds\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      successThreshold: {\n        serializedName: \"successThreshold\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      tcpSocket: {\n        serializedName: \"tcpSocket\",\n        type: {\n          name: \"Composite\",\n          className: \"ContainerAppProbeTcpSocket\"\n        }\n      },\n      terminationGracePeriodSeconds: {\n        serializedName: \"terminationGracePeriodSeconds\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      timeoutSeconds: {\n        serializedName: \"timeoutSeconds\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerAppProbeHttpGet: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContainerAppProbeHttpGet\",\n    modelProperties: {\n      host: {\n        serializedName: \"host\",\n        type: {\n          name: \"String\"\n        }\n      },\n      httpHeaders: {\n        serializedName: \"httpHeaders\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ContainerAppProbeHttpGetHttpHeadersItem\"\n            }\n          }\n        }\n      },\n      path: {\n        serializedName: \"path\",\n        type: {\n          name: \"String\"\n        }\n      },\n      port: {\n        serializedName: \"port\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      scheme: {\n        serializedName: \"scheme\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerAppProbeHttpGetHttpHeadersItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContainerAppProbeHttpGetHttpHeadersItem\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerAppProbeTcpSocket: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContainerAppProbeTcpSocket\",\n    modelProperties: {\n      host: {\n        serializedName: \"host\",\n        type: {\n          name: \"String\"\n        }\n      },\n      port: {\n        serializedName: \"port\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const VolumeMount: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VolumeMount\",\n    modelProperties: {\n      volumeName: {\n        serializedName: \"volumeName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      mountPath: {\n        serializedName: \"mountPath\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Scale: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Scale\",\n    modelProperties: {\n      minReplicas: {\n        serializedName: \"minReplicas\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      maxReplicas: {\n        serializedName: \"maxReplicas\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      rules: {\n        serializedName: \"rules\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ScaleRule\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ScaleRule: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ScaleRule\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      azureQueue: {\n        serializedName: \"azureQueue\",\n        type: {\n          name: \"Composite\",\n          className: \"QueueScaleRule\"\n        }\n      },\n      custom: {\n        serializedName: \"custom\",\n        type: {\n          name: \"Composite\",\n          className: \"CustomScaleRule\"\n        }\n      },\n      http: {\n        serializedName: \"http\",\n        type: {\n          name: \"Composite\",\n          className: \"HttpScaleRule\"\n        }\n      }\n    }\n  }\n};\n\nexport const QueueScaleRule: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"QueueScaleRule\",\n    modelProperties: {\n      queueName: {\n        serializedName: \"queueName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      queueLength: {\n        serializedName: \"queueLength\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      auth: {\n        serializedName: \"auth\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ScaleRuleAuth\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ScaleRuleAuth: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ScaleRuleAuth\",\n    modelProperties: {\n      secretRef: {\n        serializedName: \"secretRef\",\n        type: {\n          name: \"String\"\n        }\n      },\n      triggerParameter: {\n        serializedName: \"triggerParameter\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CustomScaleRule: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CustomScaleRule\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      metadata: {\n        serializedName: \"metadata\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      auth: {\n        serializedName: \"auth\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ScaleRuleAuth\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const HttpScaleRule: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"HttpScaleRule\",\n    modelProperties: {\n      metadata: {\n        serializedName: \"metadata\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      auth: {\n        serializedName: \"auth\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ScaleRuleAuth\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Volume: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Volume\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      storageType: {\n        serializedName: \"storageType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      storageName: {\n        serializedName: \"storageName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Resource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Resource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      }\n    }\n  }\n};\n\nexport const SystemData: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SystemData\",\n    modelProperties: {\n      createdBy: {\n        serializedName: \"createdBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdByType: {\n        serializedName: \"createdByType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdAt: {\n        serializedName: \"createdAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastModifiedBy: {\n        serializedName: \"lastModifiedBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedByType: {\n        serializedName: \"lastModifiedByType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedAt: {\n        serializedName: \"lastModifiedAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const DefaultErrorResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DefaultErrorResponse\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"DefaultErrorResponseError\"\n        }\n      }\n    }\n  }\n};\n\nexport const DefaultErrorResponseError: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DefaultErrorResponseError\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      target: {\n        serializedName: \"target\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      details: {\n        serializedName: \"details\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DefaultErrorResponseErrorDetailsItem\"\n            }\n          }\n        }\n      },\n      innererror: {\n        serializedName: \"innererror\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DefaultErrorResponseErrorDetailsItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DefaultErrorResponseErrorDetailsItem\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      target: {\n        serializedName: \"target\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerAppPatch: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContainerAppPatch\",\n    modelProperties: {\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const SecretsCollection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SecretsCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ContainerAppSecret\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerAppSecret: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContainerAppSecret\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RevisionCollection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RevisionCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Revision\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReplicaContainer: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReplicaContainer\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      containerId: {\n        serializedName: \"containerId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      ready: {\n        serializedName: \"ready\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      started: {\n        serializedName: \"started\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      restartCount: {\n        serializedName: \"restartCount\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReplicaCollection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReplicaCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Replica\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedEnvironmentsCollection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedEnvironmentsCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ManagedEnvironment\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VnetConfiguration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VnetConfiguration\",\n    modelProperties: {\n      internal: {\n        serializedName: \"internal\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      infrastructureSubnetId: {\n        serializedName: \"infrastructureSubnetId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      runtimeSubnetId: {\n        serializedName: \"runtimeSubnetId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      dockerBridgeCidr: {\n        serializedName: \"dockerBridgeCidr\",\n        type: {\n          name: \"String\"\n        }\n      },\n      platformReservedCidr: {\n        serializedName: \"platformReservedCidr\",\n        type: {\n          name: \"String\"\n        }\n      },\n      platformReservedDnsIP: {\n        serializedName: \"platformReservedDnsIP\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AppLogsConfiguration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AppLogsConfiguration\",\n    modelProperties: {\n      destination: {\n        serializedName: \"destination\",\n        type: {\n          name: \"String\"\n        }\n      },\n      logAnalyticsConfiguration: {\n        serializedName: \"logAnalyticsConfiguration\",\n        type: {\n          name: \"Composite\",\n          className: \"LogAnalyticsConfiguration\"\n        }\n      }\n    }\n  }\n};\n\nexport const LogAnalyticsConfiguration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LogAnalyticsConfiguration\",\n    modelProperties: {\n      customerId: {\n        serializedName: \"customerId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sharedKey: {\n        serializedName: \"sharedKey\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedEnvironmentPatch: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedEnvironmentPatch\",\n    modelProperties: {\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const CertificateCollection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CertificateCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Certificate\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CertificateProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CertificateProperties\",\n    modelProperties: {\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      password: {\n        serializedName: \"password\",\n        type: {\n          name: \"String\"\n        }\n      },\n      subjectName: {\n        serializedName: \"subjectName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      issuer: {\n        serializedName: \"issuer\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      issueDate: {\n        serializedName: \"issueDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      expirationDate: {\n        serializedName: \"expirationDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      thumbprint: {\n        serializedName: \"thumbprint\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      valid: {\n        serializedName: \"valid\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      publicKeyHash: {\n        serializedName: \"publicKeyHash\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CertificatePatch: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CertificatePatch\",\n    modelProperties: {\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const AvailableOperations: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AvailableOperations\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"OperationDetail\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationDetail: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationDetail\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isDataAction: {\n        serializedName: \"isDataAction\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      display: {\n        serializedName: \"display\",\n        type: {\n          name: \"Composite\",\n          className: \"OperationDisplay\"\n        }\n      },\n      origin: {\n        serializedName: \"origin\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationDisplay: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationDisplay\",\n    modelProperties: {\n      provider: {\n        serializedName: \"provider\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resource: {\n        serializedName: \"resource\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operation: {\n        serializedName: \"operation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SourceControlCollection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SourceControlCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SourceControl\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GithubActionConfiguration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GithubActionConfiguration\",\n    modelProperties: {\n      registryInfo: {\n        serializedName: \"registryInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"RegistryInfo\"\n        }\n      },\n      azureCredentials: {\n        serializedName: \"azureCredentials\",\n        type: {\n          name: \"Composite\",\n          className: \"AzureCredentials\"\n        }\n      },\n      dockerfilePath: {\n        serializedName: \"dockerfilePath\",\n        type: {\n          name: \"String\"\n        }\n      },\n      publishType: {\n        serializedName: \"publishType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      os: {\n        serializedName: \"os\",\n        type: {\n          name: \"String\"\n        }\n      },\n      runtimeStack: {\n        serializedName: \"runtimeStack\",\n        type: {\n          name: \"String\"\n        }\n      },\n      runtimeVersion: {\n        serializedName: \"runtimeVersion\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RegistryInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RegistryInfo\",\n    modelProperties: {\n      registryUrl: {\n        serializedName: \"registryUrl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      registryUserName: {\n        serializedName: \"registryUserName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      registryPassword: {\n        serializedName: \"registryPassword\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AzureCredentials: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AzureCredentials\",\n    modelProperties: {\n      clientId: {\n        serializedName: \"clientId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientSecret: {\n        serializedName: \"clientSecret\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantId: {\n        serializedName: \"tenantId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      subscriptionId: {\n        serializedName: \"subscriptionId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DaprComponentsCollection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DaprComponentsCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DaprComponent\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DaprMetadata: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DaprMetadata\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      },\n      secretRef: {\n        serializedName: \"secretRef\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AuthConfigCollection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AuthConfigCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"AuthConfig\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AuthPlatform: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AuthPlatform\",\n    modelProperties: {\n      enabled: {\n        serializedName: \"enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      runtimeVersion: {\n        serializedName: \"runtimeVersion\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GlobalValidation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GlobalValidation\",\n    modelProperties: {\n      unauthenticatedClientAction: {\n        serializedName: \"unauthenticatedClientAction\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"RedirectToLoginPage\",\n            \"AllowAnonymous\",\n            \"Return401\",\n            \"Return403\"\n          ]\n        }\n      },\n      redirectToProvider: {\n        serializedName: \"redirectToProvider\",\n        type: {\n          name: \"String\"\n        }\n      },\n      excludedPaths: {\n        serializedName: \"excludedPaths\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const IdentityProviders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IdentityProviders\",\n    modelProperties: {\n      azureActiveDirectory: {\n        serializedName: \"azureActiveDirectory\",\n        type: {\n          name: \"Composite\",\n          className: \"AzureActiveDirectory\"\n        }\n      },\n      facebook: {\n        serializedName: \"facebook\",\n        type: {\n          name: \"Composite\",\n          className: \"Facebook\"\n        }\n      },\n      gitHub: {\n        serializedName: \"gitHub\",\n        type: {\n          name: \"Composite\",\n          className: \"GitHub\"\n        }\n      },\n      google: {\n        serializedName: \"google\",\n        type: {\n          name: \"Composite\",\n          className: \"Google\"\n        }\n      },\n      twitter: {\n        serializedName: \"twitter\",\n        type: {\n          name: \"Composite\",\n          className: \"Twitter\"\n        }\n      },\n      apple: {\n        serializedName: \"apple\",\n        type: {\n          name: \"Composite\",\n          className: \"Apple\"\n        }\n      },\n      azureStaticWebApps: {\n        serializedName: \"azureStaticWebApps\",\n        type: {\n          name: \"Composite\",\n          className: \"AzureStaticWebApps\"\n        }\n      },\n      customOpenIdConnectProviders: {\n        serializedName: \"customOpenIdConnectProviders\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"Composite\",\n              className: \"CustomOpenIdConnectProvider\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const AzureActiveDirectory: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AzureActiveDirectory\",\n    modelProperties: {\n      enabled: {\n        serializedName: \"enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      registration: {\n        serializedName: \"registration\",\n        type: {\n          name: \"Composite\",\n          className: \"AzureActiveDirectoryRegistration\"\n        }\n      },\n      login: {\n        serializedName: \"login\",\n        type: {\n          name: \"Composite\",\n          className: \"AzureActiveDirectoryLogin\"\n        }\n      },\n      validation: {\n        serializedName: \"validation\",\n        type: {\n          name: \"Composite\",\n          className: \"AzureActiveDirectoryValidation\"\n        }\n      },\n      isAutoProvisioned: {\n        serializedName: \"isAutoProvisioned\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const AzureActiveDirectoryRegistration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AzureActiveDirectoryRegistration\",\n    modelProperties: {\n      openIdIssuer: {\n        serializedName: \"openIdIssuer\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientId: {\n        serializedName: \"clientId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientSecretSettingName: {\n        serializedName: \"clientSecretSettingName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientSecretCertificateThumbprint: {\n        serializedName: \"clientSecretCertificateThumbprint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientSecretCertificateSubjectAlternativeName: {\n        serializedName: \"clientSecretCertificateSubjectAlternativeName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientSecretCertificateIssuer: {\n        serializedName: \"clientSecretCertificateIssuer\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AzureActiveDirectoryLogin: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AzureActiveDirectoryLogin\",\n    modelProperties: {\n      loginParameters: {\n        serializedName: \"loginParameters\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      disableWWWAuthenticate: {\n        serializedName: \"disableWWWAuthenticate\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const AzureActiveDirectoryValidation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AzureActiveDirectoryValidation\",\n    modelProperties: {\n      jwtClaimChecks: {\n        serializedName: \"jwtClaimChecks\",\n        type: {\n          name: \"Composite\",\n          className: \"JwtClaimChecks\"\n        }\n      },\n      allowedAudiences: {\n        serializedName: \"allowedAudiences\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      defaultAuthorizationPolicy: {\n        serializedName: \"defaultAuthorizationPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"DefaultAuthorizationPolicy\"\n        }\n      }\n    }\n  }\n};\n\nexport const JwtClaimChecks: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"JwtClaimChecks\",\n    modelProperties: {\n      allowedGroups: {\n        serializedName: \"allowedGroups\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      allowedClientApplications: {\n        serializedName: \"allowedClientApplications\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DefaultAuthorizationPolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DefaultAuthorizationPolicy\",\n    modelProperties: {\n      allowedPrincipals: {\n        serializedName: \"allowedPrincipals\",\n        type: {\n          name: \"Composite\",\n          className: \"AllowedPrincipals\"\n        }\n      },\n      allowedApplications: {\n        serializedName: \"allowedApplications\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const AllowedPrincipals: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AllowedPrincipals\",\n    modelProperties: {\n      groups: {\n        serializedName: \"groups\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      identities: {\n        serializedName: \"identities\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Facebook: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Facebook\",\n    modelProperties: {\n      enabled: {\n        serializedName: \"enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      registration: {\n        serializedName: \"registration\",\n        type: {\n          name: \"Composite\",\n          className: \"AppRegistration\"\n        }\n      },\n      graphApiVersion: {\n        serializedName: \"graphApiVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      login: {\n        serializedName: \"login\",\n        type: {\n          name: \"Composite\",\n          className: \"LoginScopes\"\n        }\n      }\n    }\n  }\n};\n\nexport const AppRegistration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AppRegistration\",\n    modelProperties: {\n      appId: {\n        serializedName: \"appId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      appSecretSettingName: {\n        serializedName: \"appSecretSettingName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const LoginScopes: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LoginScopes\",\n    modelProperties: {\n      scopes: {\n        serializedName: \"scopes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const GitHub: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GitHub\",\n    modelProperties: {\n      enabled: {\n        serializedName: \"enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      registration: {\n        serializedName: \"registration\",\n        type: {\n          name: \"Composite\",\n          className: \"ClientRegistration\"\n        }\n      },\n      login: {\n        serializedName: \"login\",\n        type: {\n          name: \"Composite\",\n          className: \"LoginScopes\"\n        }\n      }\n    }\n  }\n};\n\nexport const ClientRegistration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ClientRegistration\",\n    modelProperties: {\n      clientId: {\n        serializedName: \"clientId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientSecretSettingName: {\n        serializedName: \"clientSecretSettingName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Google: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Google\",\n    modelProperties: {\n      enabled: {\n        serializedName: \"enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      registration: {\n        serializedName: \"registration\",\n        type: {\n          name: \"Composite\",\n          className: \"ClientRegistration\"\n        }\n      },\n      login: {\n        serializedName: \"login\",\n        type: {\n          name: \"Composite\",\n          className: \"LoginScopes\"\n        }\n      },\n      validation: {\n        serializedName: \"validation\",\n        type: {\n          name: \"Composite\",\n          className: \"AllowedAudiencesValidation\"\n        }\n      }\n    }\n  }\n};\n\nexport const AllowedAudiencesValidation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AllowedAudiencesValidation\",\n    modelProperties: {\n      allowedAudiences: {\n        serializedName: \"allowedAudiences\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Twitter: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Twitter\",\n    modelProperties: {\n      enabled: {\n        serializedName: \"enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      registration: {\n        serializedName: \"registration\",\n        type: {\n          name: \"Composite\",\n          className: \"TwitterRegistration\"\n        }\n      }\n    }\n  }\n};\n\nexport const TwitterRegistration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TwitterRegistration\",\n    modelProperties: {\n      consumerKey: {\n        serializedName: \"consumerKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      consumerSecretSettingName: {\n        serializedName: \"consumerSecretSettingName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Apple: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Apple\",\n    modelProperties: {\n      enabled: {\n        serializedName: \"enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      registration: {\n        serializedName: \"registration\",\n        type: {\n          name: \"Composite\",\n          className: \"AppleRegistration\"\n        }\n      },\n      login: {\n        serializedName: \"login\",\n        type: {\n          name: \"Composite\",\n          className: \"LoginScopes\"\n        }\n      }\n    }\n  }\n};\n\nexport const AppleRegistration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AppleRegistration\",\n    modelProperties: {\n      clientId: {\n        serializedName: \"clientId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientSecretSettingName: {\n        serializedName: \"clientSecretSettingName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AzureStaticWebApps: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AzureStaticWebApps\",\n    modelProperties: {\n      enabled: {\n        serializedName: \"enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      registration: {\n        serializedName: \"registration\",\n        type: {\n          name: \"Composite\",\n          className: \"AzureStaticWebAppsRegistration\"\n        }\n      }\n    }\n  }\n};\n\nexport const AzureStaticWebAppsRegistration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AzureStaticWebAppsRegistration\",\n    modelProperties: {\n      clientId: {\n        serializedName: \"clientId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CustomOpenIdConnectProvider: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CustomOpenIdConnectProvider\",\n    modelProperties: {\n      enabled: {\n        serializedName: \"enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      registration: {\n        serializedName: \"registration\",\n        type: {\n          name: \"Composite\",\n          className: \"OpenIdConnectRegistration\"\n        }\n      },\n      login: {\n        serializedName: \"login\",\n        type: {\n          name: \"Composite\",\n          className: \"OpenIdConnectLogin\"\n        }\n      }\n    }\n  }\n};\n\nexport const OpenIdConnectRegistration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OpenIdConnectRegistration\",\n    modelProperties: {\n      clientId: {\n        serializedName: \"clientId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientCredential: {\n        serializedName: \"clientCredential\",\n        type: {\n          name: \"Composite\",\n          className: \"OpenIdConnectClientCredential\"\n        }\n      },\n      openIdConnectConfiguration: {\n        serializedName: \"openIdConnectConfiguration\",\n        type: {\n          name: \"Composite\",\n          className: \"OpenIdConnectConfig\"\n        }\n      }\n    }\n  }\n};\n\nexport const OpenIdConnectClientCredential: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OpenIdConnectClientCredential\",\n    modelProperties: {\n      method: {\n        defaultValue: \"ClientSecretPost\",\n        isConstant: true,\n        serializedName: \"method\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientSecretSettingName: {\n        serializedName: \"clientSecretSettingName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OpenIdConnectConfig: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OpenIdConnectConfig\",\n    modelProperties: {\n      authorizationEndpoint: {\n        serializedName: \"authorizationEndpoint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tokenEndpoint: {\n        serializedName: \"tokenEndpoint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      issuer: {\n        serializedName: \"issuer\",\n        type: {\n          name: \"String\"\n        }\n      },\n      certificationUri: {\n        serializedName: \"certificationUri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      wellKnownOpenIdConfiguration: {\n        serializedName: \"wellKnownOpenIdConfiguration\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OpenIdConnectLogin: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OpenIdConnectLogin\",\n    modelProperties: {\n      nameClaimType: {\n        serializedName: \"nameClaimType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      scopes: {\n        serializedName: \"scopes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Login: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Login\",\n    modelProperties: {\n      routes: {\n        serializedName: \"routes\",\n        type: {\n          name: \"Composite\",\n          className: \"LoginRoutes\"\n        }\n      },\n      preserveUrlFragmentsForLogins: {\n        serializedName: \"preserveUrlFragmentsForLogins\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      allowedExternalRedirectUrls: {\n        serializedName: \"allowedExternalRedirectUrls\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      cookieExpiration: {\n        serializedName: \"cookieExpiration\",\n        type: {\n          name: \"Composite\",\n          className: \"CookieExpiration\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"Composite\",\n          className: \"Nonce\"\n        }\n      }\n    }\n  }\n};\n\nexport const LoginRoutes: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LoginRoutes\",\n    modelProperties: {\n      logoutEndpoint: {\n        serializedName: \"logoutEndpoint\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CookieExpiration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CookieExpiration\",\n    modelProperties: {\n      convention: {\n        serializedName: \"convention\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"FixedTime\", \"IdentityProviderDerived\"]\n        }\n      },\n      timeToExpiration: {\n        serializedName: \"timeToExpiration\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Nonce: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Nonce\",\n    modelProperties: {\n      validateNonce: {\n        serializedName: \"validateNonce\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      nonceExpirationInterval: {\n        serializedName: \"nonceExpirationInterval\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const HttpSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"HttpSettings\",\n    modelProperties: {\n      requireHttps: {\n        serializedName: \"requireHttps\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      routes: {\n        serializedName: \"routes\",\n        type: {\n          name: \"Composite\",\n          className: \"HttpSettingsRoutes\"\n        }\n      },\n      forwardProxy: {\n        serializedName: \"forwardProxy\",\n        type: {\n          name: \"Composite\",\n          className: \"ForwardProxy\"\n        }\n      }\n    }\n  }\n};\n\nexport const HttpSettingsRoutes: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"HttpSettingsRoutes\",\n    modelProperties: {\n      apiPrefix: {\n        serializedName: \"apiPrefix\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ForwardProxy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ForwardProxy\",\n    modelProperties: {\n      convention: {\n        serializedName: \"convention\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"NoProxy\", \"Standard\", \"Custom\"]\n        }\n      },\n      customHostHeaderName: {\n        serializedName: \"customHostHeaderName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      customProtoHeaderName: {\n        serializedName: \"customProtoHeaderName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedEnvironmentStoragesCollection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedEnvironmentStoragesCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ManagedEnvironmentStorage\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedEnvironmentStorageProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedEnvironmentStorageProperties\",\n    modelProperties: {\n      azureFile: {\n        serializedName: \"azureFile\",\n        type: {\n          name: \"Composite\",\n          className: \"AzureFileProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const AzureFileProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AzureFileProperties\",\n    modelProperties: {\n      accountName: {\n        serializedName: \"accountName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accountKey: {\n        serializedName: \"accountKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accessMode: {\n        serializedName: \"accessMode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      shareName: {\n        serializedName: \"shareName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TrackedResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TrackedResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ProxyResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProxyResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties\n    }\n  }\n};\n\nexport const ContainerApp: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContainerApp\",\n    modelProperties: {\n      ...TrackedResource.type.modelProperties,\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagedServiceIdentity\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      managedEnvironmentId: {\n        serializedName: \"properties.managedEnvironmentId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      latestRevisionName: {\n        serializedName: \"properties.latestRevisionName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      latestRevisionFqdn: {\n        serializedName: \"properties.latestRevisionFqdn\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      customDomainVerificationId: {\n        serializedName: \"properties.customDomainVerificationId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      configuration: {\n        serializedName: \"properties.configuration\",\n        type: {\n          name: \"Composite\",\n          className: \"Configuration\"\n        }\n      },\n      template: {\n        serializedName: \"properties.template\",\n        type: {\n          name: \"Composite\",\n          className: \"Template\"\n        }\n      },\n      outboundIPAddresses: {\n        serializedName: \"properties.outboundIPAddresses\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedEnvironment: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedEnvironment\",\n    modelProperties: {\n      ...TrackedResource.type.modelProperties,\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      daprAIInstrumentationKey: {\n        serializedName: \"properties.daprAIInstrumentationKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      vnetConfiguration: {\n        serializedName: \"properties.vnetConfiguration\",\n        type: {\n          name: \"Composite\",\n          className: \"VnetConfiguration\"\n        }\n      },\n      deploymentErrors: {\n        serializedName: \"properties.deploymentErrors\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      defaultDomain: {\n        serializedName: \"properties.defaultDomain\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      staticIp: {\n        serializedName: \"properties.staticIp\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      appLogsConfiguration: {\n        serializedName: \"properties.appLogsConfiguration\",\n        type: {\n          name: \"Composite\",\n          className: \"AppLogsConfiguration\"\n        }\n      }\n    }\n  }\n};\n\nexport const Certificate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Certificate\",\n    modelProperties: {\n      ...TrackedResource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"CertificateProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const CustomHostnameAnalysisResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CustomHostnameAnalysisResult\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      hostName: {\n        serializedName: \"properties.hostName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      isHostnameAlreadyVerified: {\n        serializedName: \"properties.isHostnameAlreadyVerified\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      customDomainVerificationTest: {\n        serializedName: \"properties.customDomainVerificationTest\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Passed\", \"Failed\", \"Skipped\"]\n        }\n      },\n      customDomainVerificationFailureInfo: {\n        serializedName: \"properties.customDomainVerificationFailureInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"DefaultErrorResponse\"\n        }\n      },\n      hasConflictOnManagedEnvironment: {\n        serializedName: \"properties.hasConflictOnManagedEnvironment\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      conflictingContainerAppResourceId: {\n        serializedName: \"properties.conflictingContainerAppResourceId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      cNameRecords: {\n        serializedName: \"properties.cNameRecords\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      txtRecords: {\n        serializedName: \"properties.txtRecords\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      aRecords: {\n        serializedName: \"properties.aRecords\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      alternateCNameRecords: {\n        serializedName: \"properties.alternateCNameRecords\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      alternateTxtRecords: {\n        serializedName: \"properties.alternateTxtRecords\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Revision: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Revision\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      createdTime: {\n        serializedName: \"properties.createdTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      fqdn: {\n        serializedName: \"properties.fqdn\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      template: {\n        serializedName: \"properties.template\",\n        type: {\n          name: \"Composite\",\n          className: \"Template\"\n        }\n      },\n      active: {\n        serializedName: \"properties.active\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      replicas: {\n        serializedName: \"properties.replicas\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      trafficWeight: {\n        serializedName: \"properties.trafficWeight\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      provisioningError: {\n        serializedName: \"properties.provisioningError\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      healthState: {\n        serializedName: \"properties.healthState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Replica: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Replica\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      createdTime: {\n        serializedName: \"properties.createdTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      containers: {\n        serializedName: \"properties.containers\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReplicaContainer\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SourceControl: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SourceControl\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      operationState: {\n        serializedName: \"properties.operationState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      repoUrl: {\n        serializedName: \"properties.repoUrl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      branch: {\n        serializedName: \"properties.branch\",\n        type: {\n          name: \"String\"\n        }\n      },\n      githubActionConfiguration: {\n        serializedName: \"properties.githubActionConfiguration\",\n        type: {\n          name: \"Composite\",\n          className: \"GithubActionConfiguration\"\n        }\n      }\n    }\n  }\n};\n\nexport const DaprComponent: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DaprComponent\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      componentType: {\n        serializedName: \"properties.componentType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"properties.version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      ignoreErrors: {\n        serializedName: \"properties.ignoreErrors\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      initTimeout: {\n        serializedName: \"properties.initTimeout\",\n        type: {\n          name: \"String\"\n        }\n      },\n      secrets: {\n        serializedName: \"properties.secrets\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Secret\"\n            }\n          }\n        }\n      },\n      metadata: {\n        serializedName: \"properties.metadata\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DaprMetadata\"\n            }\n          }\n        }\n      },\n      scopes: {\n        serializedName: \"properties.scopes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const AuthConfig: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AuthConfig\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      platform: {\n        serializedName: \"properties.platform\",\n        type: {\n          name: \"Composite\",\n          className: \"AuthPlatform\"\n        }\n      },\n      globalValidation: {\n        serializedName: \"properties.globalValidation\",\n        type: {\n          name: \"Composite\",\n          className: \"GlobalValidation\"\n        }\n      },\n      identityProviders: {\n        serializedName: \"properties.identityProviders\",\n        type: {\n          name: \"Composite\",\n          className: \"IdentityProviders\"\n        }\n      },\n      login: {\n        serializedName: \"properties.login\",\n        type: {\n          name: \"Composite\",\n          className: \"Login\"\n        }\n      },\n      httpSettings: {\n        serializedName: \"properties.httpSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"HttpSettings\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedEnvironmentStorage: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedEnvironmentStorage\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagedEnvironmentStorageProperties\"\n        }\n      }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter\n} from \"@azure/core-client\";\nimport {\n  ContainerApp as ContainerAppMapper,\n  ContainerAppPatch as ContainerAppPatchMapper,\n  ManagedEnvironment as ManagedEnvironmentMapper,\n  ManagedEnvironmentPatch as ManagedEnvironmentPatchMapper,\n  Certificate as CertificateMapper,\n  CertificatePatch as CertificatePatchMapper,\n  SourceControl as SourceControlMapper,\n  DaprComponent as DaprComponentMapper,\n  AuthConfig as AuthConfigMapper,\n  ManagedEnvironmentStorage as ManagedEnvironmentStorageMapper\n} from \"../models/mappers\";\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const subscriptionId: OperationURLParameter = {\n  parameterPath: \"subscriptionId\",\n  mapper: {\n    constraints: {\n      MinLength: 1\n    },\n    serializedName: \"subscriptionId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2022-01-01-preview\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const resourceGroupName: OperationURLParameter = {\n  parameterPath: \"resourceGroupName\",\n  mapper: {\n    constraints: {\n      MaxLength: 90,\n      MinLength: 1\n    },\n    serializedName: \"resourceGroupName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const name: OperationURLParameter = {\n  parameterPath: \"name\",\n  mapper: {\n    serializedName: \"name\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const containerAppEnvelope: OperationParameter = {\n  parameterPath: \"containerAppEnvelope\",\n  mapper: ContainerAppMapper\n};\n\nexport const containerAppEnvelope1: OperationParameter = {\n  parameterPath: \"containerAppEnvelope\",\n  mapper: ContainerAppPatchMapper\n};\n\nexport const containerAppName: OperationURLParameter = {\n  parameterPath: \"containerAppName\",\n  mapper: {\n    serializedName: \"containerAppName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const customHostname: OperationQueryParameter = {\n  parameterPath: [\"options\", \"customHostname\"],\n  mapper: {\n    serializedName: \"customHostname\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const nextLink: OperationURLParameter = {\n  parameterPath: \"nextLink\",\n  mapper: {\n    serializedName: \"nextLink\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const revisionName: OperationURLParameter = {\n  parameterPath: \"revisionName\",\n  mapper: {\n    serializedName: \"revisionName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const environmentEnvelope: OperationParameter = {\n  parameterPath: \"environmentEnvelope\",\n  mapper: ManagedEnvironmentMapper\n};\n\nexport const environmentEnvelope1: OperationParameter = {\n  parameterPath: \"environmentEnvelope\",\n  mapper: ManagedEnvironmentPatchMapper\n};\n\nexport const managedEnvironmentName: OperationURLParameter = {\n  parameterPath: \"managedEnvironmentName\",\n  mapper: {\n    serializedName: \"managedEnvironmentName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const certificateEnvelope: OperationParameter = {\n  parameterPath: [\"options\", \"certificateEnvelope\"],\n  mapper: CertificateMapper\n};\n\nexport const certificateEnvelope1: OperationParameter = {\n  parameterPath: \"certificateEnvelope\",\n  mapper: CertificatePatchMapper\n};\n\nexport const sourceControlEnvelope: OperationParameter = {\n  parameterPath: \"sourceControlEnvelope\",\n  mapper: SourceControlMapper\n};\n\nexport const environmentName: OperationURLParameter = {\n  parameterPath: \"environmentName\",\n  mapper: {\n    serializedName: \"environmentName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const daprComponentEnvelope: OperationParameter = {\n  parameterPath: \"daprComponentEnvelope\",\n  mapper: DaprComponentMapper\n};\n\nexport const authConfigEnvelope: OperationParameter = {\n  parameterPath: \"authConfigEnvelope\",\n  mapper: AuthConfigMapper\n};\n\nexport const envName: OperationURLParameter = {\n  parameterPath: \"envName\",\n  mapper: {\n    serializedName: \"envName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const storageEnvelope: OperationParameter = {\n  parameterPath: \"storageEnvelope\",\n  mapper: ManagedEnvironmentStorageMapper\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { LongRunningOperation, LroResponse } from \"@azure/core-lro\";\n\nexport class LroImpl<T> implements LongRunningOperation<T> {\n  constructor(\n    private sendOperationFn: (args: any, spec: any) => Promise<LroResponse<T>>,\n    private args: Record<string, unknown>,\n    private spec: {\n      readonly requestBody?: unknown;\n      readonly path?: string;\n      readonly httpMethod: string;\n    } & Record<string, any>,\n    public requestPath: string = spec.path!,\n    public requestMethod: string = spec.httpMethod\n  ) {}\n  public async sendInitialRequest(): Promise<LroResponse<T>> {\n    return this.sendOperationFn(this.args, this.spec);\n  }\n  public async sendPollRequest(path: string): Promise<LroResponse<T>> {\n    const { requestBody, ...restSpec } = this.spec;\n    return this.sendOperationFn(this.args, {\n      ...restSpec,\n      path,\n      httpMethod: \"GET\"\n    });\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { ContainerApps } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ContainerAppsAPIClient } from \"../containerAppsAPIClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  ContainerApp,\n  ContainerAppsListBySubscriptionNextOptionalParams,\n  ContainerAppsListBySubscriptionOptionalParams,\n  ContainerAppsListByResourceGroupNextOptionalParams,\n  ContainerAppsListByResourceGroupOptionalParams,\n  ContainerAppsListBySubscriptionResponse,\n  ContainerAppsListByResourceGroupResponse,\n  ContainerAppsGetOptionalParams,\n  ContainerAppsGetResponse,\n  ContainerAppsCreateOrUpdateOptionalParams,\n  ContainerAppsCreateOrUpdateResponse,\n  ContainerAppsDeleteOptionalParams,\n  ContainerAppPatch,\n  ContainerAppsUpdateOptionalParams,\n  ContainerAppsUpdateResponse,\n  ContainerAppsListCustomHostNameAnalysisOptionalParams,\n  ContainerAppsListCustomHostNameAnalysisResponse,\n  ContainerAppsListSecretsOptionalParams,\n  ContainerAppsListSecretsResponse,\n  ContainerAppsListBySubscriptionNextResponse,\n  ContainerAppsListByResourceGroupNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ContainerApps operations. */\nexport class ContainerAppsImpl implements ContainerApps {\n  private readonly client: ContainerAppsAPIClient;\n\n  /**\n   * Initialize a new instance of the class ContainerApps class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ContainerAppsAPIClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get the Container Apps in a given subscription.\n   * @param options The options parameters.\n   */\n  public listBySubscription(\n    options?: ContainerAppsListBySubscriptionOptionalParams\n  ): PagedAsyncIterableIterator<ContainerApp> {\n    const iter = this.listBySubscriptionPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listBySubscriptionPagingPage(options);\n      }\n    };\n  }\n\n  private async *listBySubscriptionPagingPage(\n    options?: ContainerAppsListBySubscriptionOptionalParams\n  ): AsyncIterableIterator<ContainerApp[]> {\n    let result = await this._listBySubscription(options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listBySubscriptionNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listBySubscriptionPagingAll(\n    options?: ContainerAppsListBySubscriptionOptionalParams\n  ): AsyncIterableIterator<ContainerApp> {\n    for await (const page of this.listBySubscriptionPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get the Container Apps in a given resource group.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  public listByResourceGroup(\n    resourceGroupName: string,\n    options?: ContainerAppsListByResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<ContainerApp> {\n    const iter = this.listByResourceGroupPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByResourceGroupPagingPage(resourceGroupName, options);\n      }\n    };\n  }\n\n  private async *listByResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: ContainerAppsListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<ContainerApp[]> {\n    let result = await this._listByResourceGroup(resourceGroupName, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listByResourceGroupNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listByResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: ContainerAppsListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<ContainerApp> {\n    for await (const page of this.listByResourceGroupPagingPage(\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get the Container Apps in a given subscription.\n   * @param options The options parameters.\n   */\n  private _listBySubscription(\n    options?: ContainerAppsListBySubscriptionOptionalParams\n  ): Promise<ContainerAppsListBySubscriptionResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      listBySubscriptionOperationSpec\n    );\n  }\n\n  /**\n   * Get the Container Apps in a given resource group.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroup(\n    resourceGroupName: string,\n    options?: ContainerAppsListByResourceGroupOptionalParams\n  ): Promise<ContainerAppsListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listByResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Get the properties of a Container App.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param name Name of the Container App.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    name: string,\n    options?: ContainerAppsGetOptionalParams\n  ): Promise<ContainerAppsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Description for Create or update a Container App.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param name Name of the Container App.\n   * @param containerAppEnvelope Properties used to create a container app\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    name: string,\n    containerAppEnvelope: ContainerApp,\n    options?: ContainerAppsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<ContainerAppsCreateOrUpdateResponse>,\n      ContainerAppsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ContainerAppsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, name, containerAppEnvelope, options },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Create or update a Container App.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param name Name of the Container App.\n   * @param containerAppEnvelope Properties used to create a container app\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    name: string,\n    containerAppEnvelope: ContainerApp,\n    options?: ContainerAppsCreateOrUpdateOptionalParams\n  ): Promise<ContainerAppsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      name,\n      containerAppEnvelope,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Delete a Container App.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param name Name of the Container App.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    name: string,\n    options?: ContainerAppsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, name, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Delete a Container App.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param name Name of the Container App.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    name: string,\n    options?: ContainerAppsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(resourceGroupName, name, options);\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Patches a Container App. Currently only patching of tags is supported\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param name Name of the Container App.\n   * @param containerAppEnvelope Properties of a container app that need to be updated\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    name: string,\n    containerAppEnvelope: ContainerAppPatch,\n    options?: ContainerAppsUpdateOptionalParams\n  ): Promise<ContainerAppsUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, containerAppEnvelope, options },\n      updateOperationSpec\n    );\n  }\n\n  /**\n   * Analyzes a custom hostname for a Container App\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param containerAppName Name of the Container App.\n   * @param options The options parameters.\n   */\n  listCustomHostNameAnalysis(\n    resourceGroupName: string,\n    containerAppName: string,\n    options?: ContainerAppsListCustomHostNameAnalysisOptionalParams\n  ): Promise<ContainerAppsListCustomHostNameAnalysisResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, containerAppName, options },\n      listCustomHostNameAnalysisOperationSpec\n    );\n  }\n\n  /**\n   * List secrets for a container app\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param name Name of the Container App.\n   * @param options The options parameters.\n   */\n  listSecrets(\n    resourceGroupName: string,\n    name: string,\n    options?: ContainerAppsListSecretsOptionalParams\n  ): Promise<ContainerAppsListSecretsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listSecretsOperationSpec\n    );\n  }\n\n  /**\n   * ListBySubscriptionNext\n   * @param nextLink The nextLink from the previous successful call to the ListBySubscription method.\n   * @param options The options parameters.\n   */\n  private _listBySubscriptionNext(\n    nextLink: string,\n    options?: ContainerAppsListBySubscriptionNextOptionalParams\n  ): Promise<ContainerAppsListBySubscriptionNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listBySubscriptionNextOperationSpec\n    );\n  }\n\n  /**\n   * ListByResourceGroupNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: ContainerAppsListByResourceGroupNextOptionalParams\n  ): Promise<ContainerAppsListByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listByResourceGroupNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listBySubscriptionOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.App/containerApps\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ContainerAppCollection\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ContainerAppCollection\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{name}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ContainerApp\n    },\n    404: {\n      isError: true\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{name}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ContainerApp\n    },\n    201: {\n      bodyMapper: Mappers.ContainerApp\n    },\n    202: {\n      bodyMapper: Mappers.ContainerApp\n    },\n    204: {\n      bodyMapper: Mappers.ContainerApp\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  requestBody: Parameters.containerAppEnvelope,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{name}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{name}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ContainerApp\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  requestBody: Parameters.containerAppEnvelope1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listCustomHostNameAnalysisOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/listCustomHostNameAnalysis\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CustomHostnameAnalysisResult\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.customHostname],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.containerAppName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listSecretsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{name}/listSecrets\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SecretsCollection\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listBySubscriptionNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ContainerAppCollection\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ContainerAppCollection\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { ContainerAppsRevisions } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ContainerAppsAPIClient } from \"../containerAppsAPIClient\";\nimport {\n  Revision,\n  ContainerAppsRevisionsListRevisionsNextOptionalParams,\n  ContainerAppsRevisionsListRevisionsOptionalParams,\n  ContainerAppsRevisionsListRevisionsResponse,\n  ContainerAppsRevisionsGetRevisionOptionalParams,\n  ContainerAppsRevisionsGetRevisionResponse,\n  ContainerAppsRevisionsActivateRevisionOptionalParams,\n  ContainerAppsRevisionsDeactivateRevisionOptionalParams,\n  ContainerAppsRevisionsRestartRevisionOptionalParams,\n  ContainerAppsRevisionsListRevisionsNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ContainerAppsRevisions operations. */\nexport class ContainerAppsRevisionsImpl implements ContainerAppsRevisions {\n  private readonly client: ContainerAppsAPIClient;\n\n  /**\n   * Initialize a new instance of the class ContainerAppsRevisions class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ContainerAppsAPIClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get the Revisions for a given Container App.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param containerAppName Name of the Container App for which Revisions are needed.\n   * @param options The options parameters.\n   */\n  public listRevisions(\n    resourceGroupName: string,\n    containerAppName: string,\n    options?: ContainerAppsRevisionsListRevisionsOptionalParams\n  ): PagedAsyncIterableIterator<Revision> {\n    const iter = this.listRevisionsPagingAll(\n      resourceGroupName,\n      containerAppName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listRevisionsPagingPage(\n          resourceGroupName,\n          containerAppName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listRevisionsPagingPage(\n    resourceGroupName: string,\n    containerAppName: string,\n    options?: ContainerAppsRevisionsListRevisionsOptionalParams\n  ): AsyncIterableIterator<Revision[]> {\n    let result = await this._listRevisions(\n      resourceGroupName,\n      containerAppName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listRevisionsNext(\n        resourceGroupName,\n        containerAppName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listRevisionsPagingAll(\n    resourceGroupName: string,\n    containerAppName: string,\n    options?: ContainerAppsRevisionsListRevisionsOptionalParams\n  ): AsyncIterableIterator<Revision> {\n    for await (const page of this.listRevisionsPagingPage(\n      resourceGroupName,\n      containerAppName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get the Revisions for a given Container App.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param containerAppName Name of the Container App for which Revisions are needed.\n   * @param options The options parameters.\n   */\n  private _listRevisions(\n    resourceGroupName: string,\n    containerAppName: string,\n    options?: ContainerAppsRevisionsListRevisionsOptionalParams\n  ): Promise<ContainerAppsRevisionsListRevisionsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, containerAppName, options },\n      listRevisionsOperationSpec\n    );\n  }\n\n  /**\n   * Get a revision of a Container App.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param containerAppName Name of the Container App.\n   * @param name Name of the Container App Revision.\n   * @param options The options parameters.\n   */\n  getRevision(\n    resourceGroupName: string,\n    containerAppName: string,\n    name: string,\n    options?: ContainerAppsRevisionsGetRevisionOptionalParams\n  ): Promise<ContainerAppsRevisionsGetRevisionResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, containerAppName, name, options },\n      getRevisionOperationSpec\n    );\n  }\n\n  /**\n   * Activates a revision for a Container App\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param containerAppName Name of the Container App.\n   * @param name Name of the Container App Revision.\n   * @param options The options parameters.\n   */\n  activateRevision(\n    resourceGroupName: string,\n    containerAppName: string,\n    name: string,\n    options?: ContainerAppsRevisionsActivateRevisionOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, containerAppName, name, options },\n      activateRevisionOperationSpec\n    );\n  }\n\n  /**\n   * Deactivates a revision for a Container App\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param containerAppName Name of the Container App.\n   * @param name Name of the Container App Revision.\n   * @param options The options parameters.\n   */\n  deactivateRevision(\n    resourceGroupName: string,\n    containerAppName: string,\n    name: string,\n    options?: ContainerAppsRevisionsDeactivateRevisionOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, containerAppName, name, options },\n      deactivateRevisionOperationSpec\n    );\n  }\n\n  /**\n   * Restarts a revision for a Container App\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param containerAppName Name of the Container App.\n   * @param name Name of the Container App Revision.\n   * @param options The options parameters.\n   */\n  restartRevision(\n    resourceGroupName: string,\n    containerAppName: string,\n    name: string,\n    options?: ContainerAppsRevisionsRestartRevisionOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, containerAppName, name, options },\n      restartRevisionOperationSpec\n    );\n  }\n\n  /**\n   * ListRevisionsNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param containerAppName Name of the Container App for which Revisions are needed.\n   * @param nextLink The nextLink from the previous successful call to the ListRevisions method.\n   * @param options The options parameters.\n   */\n  private _listRevisionsNext(\n    resourceGroupName: string,\n    containerAppName: string,\n    nextLink: string,\n    options?: ContainerAppsRevisionsListRevisionsNextOptionalParams\n  ): Promise<ContainerAppsRevisionsListRevisionsNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, containerAppName, nextLink, options },\n      listRevisionsNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listRevisionsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/revisions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RevisionCollection\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.containerAppName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getRevisionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/revisions/{name}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Revision\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.containerAppName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst activateRevisionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/revisions/{name}/activate\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.containerAppName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deactivateRevisionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/revisions/{name}/deactivate\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.containerAppName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst restartRevisionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/revisions/{name}/restart\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.containerAppName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listRevisionsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RevisionCollection\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.containerAppName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { ContainerAppsRevisionReplicas } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ContainerAppsAPIClient } from \"../containerAppsAPIClient\";\nimport {\n  ContainerAppsRevisionReplicasGetReplicaOptionalParams,\n  ContainerAppsRevisionReplicasGetReplicaResponse,\n  ContainerAppsRevisionReplicasListReplicasOptionalParams,\n  ContainerAppsRevisionReplicasListReplicasResponse\n} from \"../models\";\n\n/** Class containing ContainerAppsRevisionReplicas operations. */\nexport class ContainerAppsRevisionReplicasImpl\n  implements ContainerAppsRevisionReplicas {\n  private readonly client: ContainerAppsAPIClient;\n\n  /**\n   * Initialize a new instance of the class ContainerAppsRevisionReplicas class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ContainerAppsAPIClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get a replica for a Container App Revision.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param containerAppName Name of the Container App.\n   * @param revisionName Name of the Container App Revision.\n   * @param name Name of the Container App Revision Replica.\n   * @param options The options parameters.\n   */\n  getReplica(\n    resourceGroupName: string,\n    containerAppName: string,\n    revisionName: string,\n    name: string,\n    options?: ContainerAppsRevisionReplicasGetReplicaOptionalParams\n  ): Promise<ContainerAppsRevisionReplicasGetReplicaResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, containerAppName, revisionName, name, options },\n      getReplicaOperationSpec\n    );\n  }\n\n  /**\n   * List replicas for a Container App Revision.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param containerAppName Name of the Container App.\n   * @param revisionName Name of the Container App Revision.\n   * @param options The options parameters.\n   */\n  listReplicas(\n    resourceGroupName: string,\n    containerAppName: string,\n    revisionName: string,\n    options?: ContainerAppsRevisionReplicasListReplicasOptionalParams\n  ): Promise<ContainerAppsRevisionReplicasListReplicasResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, containerAppName, revisionName, options },\n      listReplicasOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getReplicaOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/revisions/{revisionName}/replicas/{name}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Replica\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.containerAppName,\n    Parameters.revisionName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listReplicasOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/revisions/{revisionName}/replicas\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReplicaCollection\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.containerAppName,\n    Parameters.revisionName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { ManagedEnvironments } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ContainerAppsAPIClient } from \"../containerAppsAPIClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  ManagedEnvironment,\n  ManagedEnvironmentsListBySubscriptionNextOptionalParams,\n  ManagedEnvironmentsListBySubscriptionOptionalParams,\n  ManagedEnvironmentsListByResourceGroupNextOptionalParams,\n  ManagedEnvironmentsListByResourceGroupOptionalParams,\n  ManagedEnvironmentsListBySubscriptionResponse,\n  ManagedEnvironmentsListByResourceGroupResponse,\n  ManagedEnvironmentsGetOptionalParams,\n  ManagedEnvironmentsGetResponse,\n  ManagedEnvironmentsCreateOrUpdateOptionalParams,\n  ManagedEnvironmentsCreateOrUpdateResponse,\n  ManagedEnvironmentsDeleteOptionalParams,\n  ManagedEnvironmentPatch,\n  ManagedEnvironmentsUpdateOptionalParams,\n  ManagedEnvironmentsUpdateResponse,\n  ManagedEnvironmentsListBySubscriptionNextResponse,\n  ManagedEnvironmentsListByResourceGroupNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ManagedEnvironments operations. */\nexport class ManagedEnvironmentsImpl implements ManagedEnvironments {\n  private readonly client: ContainerAppsAPIClient;\n\n  /**\n   * Initialize a new instance of the class ManagedEnvironments class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ContainerAppsAPIClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get all Managed Environments for a subscription.\n   * @param options The options parameters.\n   */\n  public listBySubscription(\n    options?: ManagedEnvironmentsListBySubscriptionOptionalParams\n  ): PagedAsyncIterableIterator<ManagedEnvironment> {\n    const iter = this.listBySubscriptionPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listBySubscriptionPagingPage(options);\n      }\n    };\n  }\n\n  private async *listBySubscriptionPagingPage(\n    options?: ManagedEnvironmentsListBySubscriptionOptionalParams\n  ): AsyncIterableIterator<ManagedEnvironment[]> {\n    let result = await this._listBySubscription(options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listBySubscriptionNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listBySubscriptionPagingAll(\n    options?: ManagedEnvironmentsListBySubscriptionOptionalParams\n  ): AsyncIterableIterator<ManagedEnvironment> {\n    for await (const page of this.listBySubscriptionPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get all the Managed Environments in a resource group.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  public listByResourceGroup(\n    resourceGroupName: string,\n    options?: ManagedEnvironmentsListByResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<ManagedEnvironment> {\n    const iter = this.listByResourceGroupPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByResourceGroupPagingPage(resourceGroupName, options);\n      }\n    };\n  }\n\n  private async *listByResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: ManagedEnvironmentsListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<ManagedEnvironment[]> {\n    let result = await this._listByResourceGroup(resourceGroupName, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listByResourceGroupNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listByResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: ManagedEnvironmentsListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<ManagedEnvironment> {\n    for await (const page of this.listByResourceGroupPagingPage(\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get all Managed Environments for a subscription.\n   * @param options The options parameters.\n   */\n  private _listBySubscription(\n    options?: ManagedEnvironmentsListBySubscriptionOptionalParams\n  ): Promise<ManagedEnvironmentsListBySubscriptionResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      listBySubscriptionOperationSpec\n    );\n  }\n\n  /**\n   * Get all the Managed Environments in a resource group.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroup(\n    resourceGroupName: string,\n    options?: ManagedEnvironmentsListByResourceGroupOptionalParams\n  ): Promise<ManagedEnvironmentsListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listByResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Get the properties of a Managed Environment used to host container apps.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param name Name of the Environment.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    name: string,\n    options?: ManagedEnvironmentsGetOptionalParams\n  ): Promise<ManagedEnvironmentsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a Managed Environment used to host container apps.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param name Name of the Environment.\n   * @param environmentEnvelope Configuration details of the Environment.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    name: string,\n    environmentEnvelope: ManagedEnvironment,\n    options?: ManagedEnvironmentsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<ManagedEnvironmentsCreateOrUpdateResponse>,\n      ManagedEnvironmentsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ManagedEnvironmentsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, name, environmentEnvelope, options },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates or updates a Managed Environment used to host container apps.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param name Name of the Environment.\n   * @param environmentEnvelope Configuration details of the Environment.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    name: string,\n    environmentEnvelope: ManagedEnvironment,\n    options?: ManagedEnvironmentsCreateOrUpdateOptionalParams\n  ): Promise<ManagedEnvironmentsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      name,\n      environmentEnvelope,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Delete a Managed Environment if it does not have any container apps.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param name Name of the Environment.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    name: string,\n    options?: ManagedEnvironmentsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, name, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Delete a Managed Environment if it does not have any container apps.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param name Name of the Environment.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    name: string,\n    options?: ManagedEnvironmentsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(resourceGroupName, name, options);\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Patches a Managed Environment. Only patching of tags is supported currently\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param name Name of the Environment.\n   * @param environmentEnvelope Configuration details of the Environment.\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    name: string,\n    environmentEnvelope: ManagedEnvironmentPatch,\n    options?: ManagedEnvironmentsUpdateOptionalParams\n  ): Promise<ManagedEnvironmentsUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, environmentEnvelope, options },\n      updateOperationSpec\n    );\n  }\n\n  /**\n   * ListBySubscriptionNext\n   * @param nextLink The nextLink from the previous successful call to the ListBySubscription method.\n   * @param options The options parameters.\n   */\n  private _listBySubscriptionNext(\n    nextLink: string,\n    options?: ManagedEnvironmentsListBySubscriptionNextOptionalParams\n  ): Promise<ManagedEnvironmentsListBySubscriptionNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listBySubscriptionNextOperationSpec\n    );\n  }\n\n  /**\n   * ListByResourceGroupNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: ManagedEnvironmentsListByResourceGroupNextOptionalParams\n  ): Promise<ManagedEnvironmentsListByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listByResourceGroupNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listBySubscriptionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.App/managedEnvironments\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedEnvironmentsCollection\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedEnvironmentsCollection\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{name}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedEnvironment\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{name}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedEnvironment\n    },\n    201: {\n      bodyMapper: Mappers.ManagedEnvironment\n    },\n    202: {\n      bodyMapper: Mappers.ManagedEnvironment\n    },\n    204: {\n      bodyMapper: Mappers.ManagedEnvironment\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  requestBody: Parameters.environmentEnvelope,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{name}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{name}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedEnvironment\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  requestBody: Parameters.environmentEnvelope1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listBySubscriptionNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedEnvironmentsCollection\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedEnvironmentsCollection\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { Certificates } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ContainerAppsAPIClient } from \"../containerAppsAPIClient\";\nimport {\n  Certificate,\n  CertificatesListNextOptionalParams,\n  CertificatesListOptionalParams,\n  CertificatesListResponse,\n  CertificatesGetOptionalParams,\n  CertificatesGetResponse,\n  CertificatesCreateOrUpdateOptionalParams,\n  CertificatesCreateOrUpdateResponse,\n  CertificatesDeleteOptionalParams,\n  CertificatePatch,\n  CertificatesUpdateOptionalParams,\n  CertificatesUpdateResponse,\n  CertificatesListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Certificates operations. */\nexport class CertificatesImpl implements Certificates {\n  private readonly client: ContainerAppsAPIClient;\n\n  /**\n   * Initialize a new instance of the class Certificates class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ContainerAppsAPIClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get the Certificates in a given managed environment.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param managedEnvironmentName Name of the Managed Environment.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    managedEnvironmentName: string,\n    options?: CertificatesListOptionalParams\n  ): PagedAsyncIterableIterator<Certificate> {\n    const iter = this.listPagingAll(\n      resourceGroupName,\n      managedEnvironmentName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(\n          resourceGroupName,\n          managedEnvironmentName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    managedEnvironmentName: string,\n    options?: CertificatesListOptionalParams\n  ): AsyncIterableIterator<Certificate[]> {\n    let result = await this._list(\n      resourceGroupName,\n      managedEnvironmentName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        managedEnvironmentName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    managedEnvironmentName: string,\n    options?: CertificatesListOptionalParams\n  ): AsyncIterableIterator<Certificate> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      managedEnvironmentName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get the Certificates in a given managed environment.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param managedEnvironmentName Name of the Managed Environment.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    managedEnvironmentName: string,\n    options?: CertificatesListOptionalParams\n  ): Promise<CertificatesListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedEnvironmentName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Get the specified Certificate.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param managedEnvironmentName Name of the Managed Environment.\n   * @param name Name of the Certificate.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    managedEnvironmentName: string,\n    name: string,\n    options?: CertificatesGetOptionalParams\n  ): Promise<CertificatesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedEnvironmentName, name, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create or Update a Certificate.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param managedEnvironmentName Name of the Managed Environment.\n   * @param name Name of the Certificate.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    managedEnvironmentName: string,\n    name: string,\n    options?: CertificatesCreateOrUpdateOptionalParams\n  ): Promise<CertificatesCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedEnvironmentName, name, options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Deletes the specified Certificate.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param managedEnvironmentName Name of the Managed Environment.\n   * @param name Name of the Certificate.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    managedEnvironmentName: string,\n    name: string,\n    options?: CertificatesDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedEnvironmentName, name, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Patches a certificate. Currently only patching of tags is supported\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param managedEnvironmentName Name of the Managed Environment.\n   * @param name Name of the Certificate.\n   * @param certificateEnvelope Properties of a certificate that need to be updated\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    managedEnvironmentName: string,\n    name: string,\n    certificateEnvelope: CertificatePatch,\n    options?: CertificatesUpdateOptionalParams\n  ): Promise<CertificatesUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedEnvironmentName,\n        name,\n        certificateEnvelope,\n        options\n      },\n      updateOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param managedEnvironmentName Name of the Managed Environment.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    managedEnvironmentName: string,\n    nextLink: string,\n    options?: CertificatesListNextOptionalParams\n  ): Promise<CertificatesListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedEnvironmentName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{managedEnvironmentName}/certificates\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CertificateCollection\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.managedEnvironmentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{managedEnvironmentName}/certificates/{name}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Certificate\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.managedEnvironmentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{managedEnvironmentName}/certificates/{name}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Certificate\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  requestBody: Parameters.certificateEnvelope,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.managedEnvironmentName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{managedEnvironmentName}/certificates/{name}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.managedEnvironmentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{managedEnvironmentName}/certificates/{name}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Certificate\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  requestBody: Parameters.certificateEnvelope1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.managedEnvironmentName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CertificateCollection\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink,\n    Parameters.managedEnvironmentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { Operations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ContainerAppsAPIClient } from \"../containerAppsAPIClient\";\nimport {\n  OperationDetail,\n  OperationsListNextOptionalParams,\n  OperationsListOptionalParams,\n  OperationsListResponse,\n  OperationsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Operations operations. */\nexport class OperationsImpl implements Operations {\n  private readonly client: ContainerAppsAPIClient;\n\n  /**\n   * Initialize a new instance of the class Operations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ContainerAppsAPIClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all of the available RP operations.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: OperationsListOptionalParams\n  ): PagedAsyncIterableIterator<OperationDetail> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(options);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: OperationsListOptionalParams\n  ): AsyncIterableIterator<OperationDetail[]> {\n    let result = await this._list(options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    options?: OperationsListOptionalParams\n  ): AsyncIterableIterator<OperationDetail> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all of the available RP operations.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: OperationsListOptionalParams\n  ): Promise<OperationsListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: OperationsListNextOptionalParams\n  ): Promise<OperationsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.App/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AvailableOperations\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AvailableOperations\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { ContainerAppsSourceControls } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ContainerAppsAPIClient } from \"../containerAppsAPIClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  SourceControl,\n  ContainerAppsSourceControlsListByContainerAppNextOptionalParams,\n  ContainerAppsSourceControlsListByContainerAppOptionalParams,\n  ContainerAppsSourceControlsListByContainerAppResponse,\n  ContainerAppsSourceControlsGetOptionalParams,\n  ContainerAppsSourceControlsGetResponse,\n  ContainerAppsSourceControlsCreateOrUpdateOptionalParams,\n  ContainerAppsSourceControlsCreateOrUpdateResponse,\n  ContainerAppsSourceControlsDeleteOptionalParams,\n  ContainerAppsSourceControlsListByContainerAppNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ContainerAppsSourceControls operations. */\nexport class ContainerAppsSourceControlsImpl\n  implements ContainerAppsSourceControls {\n  private readonly client: ContainerAppsAPIClient;\n\n  /**\n   * Initialize a new instance of the class ContainerAppsSourceControls class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ContainerAppsAPIClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get the Container App SourceControls in a given resource group.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param containerAppName Name of the Container App.\n   * @param options The options parameters.\n   */\n  public listByContainerApp(\n    resourceGroupName: string,\n    containerAppName: string,\n    options?: ContainerAppsSourceControlsListByContainerAppOptionalParams\n  ): PagedAsyncIterableIterator<SourceControl> {\n    const iter = this.listByContainerAppPagingAll(\n      resourceGroupName,\n      containerAppName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByContainerAppPagingPage(\n          resourceGroupName,\n          containerAppName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listByContainerAppPagingPage(\n    resourceGroupName: string,\n    containerAppName: string,\n    options?: ContainerAppsSourceControlsListByContainerAppOptionalParams\n  ): AsyncIterableIterator<SourceControl[]> {\n    let result = await this._listByContainerApp(\n      resourceGroupName,\n      containerAppName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listByContainerAppNext(\n        resourceGroupName,\n        containerAppName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listByContainerAppPagingAll(\n    resourceGroupName: string,\n    containerAppName: string,\n    options?: ContainerAppsSourceControlsListByContainerAppOptionalParams\n  ): AsyncIterableIterator<SourceControl> {\n    for await (const page of this.listByContainerAppPagingPage(\n      resourceGroupName,\n      containerAppName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get the Container App SourceControls in a given resource group.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param containerAppName Name of the Container App.\n   * @param options The options parameters.\n   */\n  private _listByContainerApp(\n    resourceGroupName: string,\n    containerAppName: string,\n    options?: ContainerAppsSourceControlsListByContainerAppOptionalParams\n  ): Promise<ContainerAppsSourceControlsListByContainerAppResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, containerAppName, options },\n      listByContainerAppOperationSpec\n    );\n  }\n\n  /**\n   * Get a SourceControl of a Container App.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param containerAppName Name of the Container App.\n   * @param name Name of the Container App SourceControl.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    containerAppName: string,\n    name: string,\n    options?: ContainerAppsSourceControlsGetOptionalParams\n  ): Promise<ContainerAppsSourceControlsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, containerAppName, name, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Description for Create or update the SourceControl for a Container App.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param containerAppName Name of the Container App.\n   * @param name Name of the Container App SourceControl.\n   * @param sourceControlEnvelope Properties used to create a Container App SourceControl\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    containerAppName: string,\n    name: string,\n    sourceControlEnvelope: SourceControl,\n    options?: ContainerAppsSourceControlsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<ContainerAppsSourceControlsCreateOrUpdateResponse>,\n      ContainerAppsSourceControlsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ContainerAppsSourceControlsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        containerAppName,\n        name,\n        sourceControlEnvelope,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Create or update the SourceControl for a Container App.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param containerAppName Name of the Container App.\n   * @param name Name of the Container App SourceControl.\n   * @param sourceControlEnvelope Properties used to create a Container App SourceControl\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    containerAppName: string,\n    name: string,\n    sourceControlEnvelope: SourceControl,\n    options?: ContainerAppsSourceControlsCreateOrUpdateOptionalParams\n  ): Promise<ContainerAppsSourceControlsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      containerAppName,\n      name,\n      sourceControlEnvelope,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Delete a Container App SourceControl.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param containerAppName Name of the Container App.\n   * @param name Name of the Container App SourceControl.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    containerAppName: string,\n    name: string,\n    options?: ContainerAppsSourceControlsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, containerAppName, name, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Delete a Container App SourceControl.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param containerAppName Name of the Container App.\n   * @param name Name of the Container App SourceControl.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    containerAppName: string,\n    name: string,\n    options?: ContainerAppsSourceControlsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      containerAppName,\n      name,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListByContainerAppNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param containerAppName Name of the Container App.\n   * @param nextLink The nextLink from the previous successful call to the ListByContainerApp method.\n   * @param options The options parameters.\n   */\n  private _listByContainerAppNext(\n    resourceGroupName: string,\n    containerAppName: string,\n    nextLink: string,\n    options?: ContainerAppsSourceControlsListByContainerAppNextOptionalParams\n  ): Promise<ContainerAppsSourceControlsListByContainerAppNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, containerAppName, nextLink, options },\n      listByContainerAppNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByContainerAppOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/sourcecontrols\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SourceControlCollection\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.containerAppName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/sourcecontrols/{name}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SourceControl\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.containerAppName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/sourcecontrols/{name}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SourceControl\n    },\n    201: {\n      bodyMapper: Mappers.SourceControl\n    },\n    202: {\n      bodyMapper: Mappers.SourceControl\n    },\n    204: {\n      bodyMapper: Mappers.SourceControl\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  requestBody: Parameters.sourceControlEnvelope,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.containerAppName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/sourcecontrols/{name}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.containerAppName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByContainerAppNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SourceControlCollection\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.containerAppName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { DaprComponents } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ContainerAppsAPIClient } from \"../containerAppsAPIClient\";\nimport {\n  DaprComponent,\n  DaprComponentsListNextOptionalParams,\n  DaprComponentsListOptionalParams,\n  DaprComponentsListResponse,\n  DaprComponentsGetOptionalParams,\n  DaprComponentsGetResponse,\n  DaprComponentsCreateOrUpdateOptionalParams,\n  DaprComponentsCreateOrUpdateResponse,\n  DaprComponentsDeleteOptionalParams,\n  DaprComponentsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing DaprComponents operations. */\nexport class DaprComponentsImpl implements DaprComponents {\n  private readonly client: ContainerAppsAPIClient;\n\n  /**\n   * Initialize a new instance of the class DaprComponents class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ContainerAppsAPIClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get the Dapr Components for a managed environment.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param environmentName Name of the Managed Environment.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    environmentName: string,\n    options?: DaprComponentsListOptionalParams\n  ): PagedAsyncIterableIterator<DaprComponent> {\n    const iter = this.listPagingAll(\n      resourceGroupName,\n      environmentName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(resourceGroupName, environmentName, options);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    environmentName: string,\n    options?: DaprComponentsListOptionalParams\n  ): AsyncIterableIterator<DaprComponent[]> {\n    let result = await this._list(resourceGroupName, environmentName, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        environmentName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    environmentName: string,\n    options?: DaprComponentsListOptionalParams\n  ): AsyncIterableIterator<DaprComponent> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      environmentName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get the Dapr Components for a managed environment.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param environmentName Name of the Managed Environment.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    environmentName: string,\n    options?: DaprComponentsListOptionalParams\n  ): Promise<DaprComponentsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, environmentName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Get a dapr component.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param environmentName Name of the Managed Environment.\n   * @param name Name of the Dapr Component.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    environmentName: string,\n    name: string,\n    options?: DaprComponentsGetOptionalParams\n  ): Promise<DaprComponentsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, environmentName, name, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a Dapr Component in a Managed Environment.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param environmentName Name of the Managed Environment.\n   * @param name Name of the Dapr Component.\n   * @param daprComponentEnvelope Configuration details of the Dapr Component.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    environmentName: string,\n    name: string,\n    daprComponentEnvelope: DaprComponent,\n    options?: DaprComponentsCreateOrUpdateOptionalParams\n  ): Promise<DaprComponentsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        environmentName,\n        name,\n        daprComponentEnvelope,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Delete a Dapr Component from a Managed Environment.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param environmentName Name of the Managed Environment.\n   * @param name Name of the Dapr Component.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    environmentName: string,\n    name: string,\n    options?: DaprComponentsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, environmentName, name, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param environmentName Name of the Managed Environment.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    environmentName: string,\n    nextLink: string,\n    options?: DaprComponentsListNextOptionalParams\n  ): Promise<DaprComponentsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, environmentName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/daprComponents\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DaprComponentsCollection\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.environmentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/daprComponents/{name}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DaprComponent\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.environmentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/daprComponents/{name}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DaprComponent\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  requestBody: Parameters.daprComponentEnvelope,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.environmentName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/daprComponents/{name}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.environmentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DaprComponentsCollection\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink,\n    Parameters.environmentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { ContainerAppsAuthConfigs } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ContainerAppsAPIClient } from \"../containerAppsAPIClient\";\nimport {\n  AuthConfig,\n  ContainerAppsAuthConfigsListByContainerAppNextOptionalParams,\n  ContainerAppsAuthConfigsListByContainerAppOptionalParams,\n  ContainerAppsAuthConfigsListByContainerAppResponse,\n  ContainerAppsAuthConfigsGetOptionalParams,\n  ContainerAppsAuthConfigsGetResponse,\n  ContainerAppsAuthConfigsCreateOrUpdateOptionalParams,\n  ContainerAppsAuthConfigsCreateOrUpdateResponse,\n  ContainerAppsAuthConfigsDeleteOptionalParams,\n  ContainerAppsAuthConfigsListByContainerAppNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ContainerAppsAuthConfigs operations. */\nexport class ContainerAppsAuthConfigsImpl implements ContainerAppsAuthConfigs {\n  private readonly client: ContainerAppsAPIClient;\n\n  /**\n   * Initialize a new instance of the class ContainerAppsAuthConfigs class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ContainerAppsAPIClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get the Container App AuthConfigs in a given resource group.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param containerAppName Name of the Container App.\n   * @param options The options parameters.\n   */\n  public listByContainerApp(\n    resourceGroupName: string,\n    containerAppName: string,\n    options?: ContainerAppsAuthConfigsListByContainerAppOptionalParams\n  ): PagedAsyncIterableIterator<AuthConfig> {\n    const iter = this.listByContainerAppPagingAll(\n      resourceGroupName,\n      containerAppName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByContainerAppPagingPage(\n          resourceGroupName,\n          containerAppName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listByContainerAppPagingPage(\n    resourceGroupName: string,\n    containerAppName: string,\n    options?: ContainerAppsAuthConfigsListByContainerAppOptionalParams\n  ): AsyncIterableIterator<AuthConfig[]> {\n    let result = await this._listByContainerApp(\n      resourceGroupName,\n      containerAppName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listByContainerAppNext(\n        resourceGroupName,\n        containerAppName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listByContainerAppPagingAll(\n    resourceGroupName: string,\n    containerAppName: string,\n    options?: ContainerAppsAuthConfigsListByContainerAppOptionalParams\n  ): AsyncIterableIterator<AuthConfig> {\n    for await (const page of this.listByContainerAppPagingPage(\n      resourceGroupName,\n      containerAppName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get the Container App AuthConfigs in a given resource group.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param containerAppName Name of the Container App.\n   * @param options The options parameters.\n   */\n  private _listByContainerApp(\n    resourceGroupName: string,\n    containerAppName: string,\n    options?: ContainerAppsAuthConfigsListByContainerAppOptionalParams\n  ): Promise<ContainerAppsAuthConfigsListByContainerAppResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, containerAppName, options },\n      listByContainerAppOperationSpec\n    );\n  }\n\n  /**\n   * Get a AuthConfig of a Container App.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param containerAppName Name of the Container App.\n   * @param name Name of the Container App AuthConfig.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    containerAppName: string,\n    name: string,\n    options?: ContainerAppsAuthConfigsGetOptionalParams\n  ): Promise<ContainerAppsAuthConfigsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, containerAppName, name, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Description for Create or update the AuthConfig for a Container App.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param containerAppName Name of the Container App.\n   * @param name Name of the Container App AuthConfig.\n   * @param authConfigEnvelope Properties used to create a Container App AuthConfig\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    containerAppName: string,\n    name: string,\n    authConfigEnvelope: AuthConfig,\n    options?: ContainerAppsAuthConfigsCreateOrUpdateOptionalParams\n  ): Promise<ContainerAppsAuthConfigsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        containerAppName,\n        name,\n        authConfigEnvelope,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Description for Delete a Container App AuthConfig.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param containerAppName Name of the Container App.\n   * @param name Name of the Container App AuthConfig.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    containerAppName: string,\n    name: string,\n    options?: ContainerAppsAuthConfigsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, containerAppName, name, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * ListByContainerAppNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param containerAppName Name of the Container App.\n   * @param nextLink The nextLink from the previous successful call to the ListByContainerApp method.\n   * @param options The options parameters.\n   */\n  private _listByContainerAppNext(\n    resourceGroupName: string,\n    containerAppName: string,\n    nextLink: string,\n    options?: ContainerAppsAuthConfigsListByContainerAppNextOptionalParams\n  ): Promise<ContainerAppsAuthConfigsListByContainerAppNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, containerAppName, nextLink, options },\n      listByContainerAppNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByContainerAppOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/authConfigs\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AuthConfigCollection\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.containerAppName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/authConfigs/{name}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AuthConfig\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.containerAppName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/authConfigs/{name}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AuthConfig\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  requestBody: Parameters.authConfigEnvelope,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.containerAppName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/authConfigs/{name}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.containerAppName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByContainerAppNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AuthConfigCollection\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.containerAppName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { ManagedEnvironmentsStorages } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ContainerAppsAPIClient } from \"../containerAppsAPIClient\";\nimport {\n  ManagedEnvironmentsStoragesListOptionalParams,\n  ManagedEnvironmentsStoragesListResponse,\n  ManagedEnvironmentsStoragesGetOptionalParams,\n  ManagedEnvironmentsStoragesGetResponse,\n  ManagedEnvironmentStorage,\n  ManagedEnvironmentsStoragesCreateOrUpdateOptionalParams,\n  ManagedEnvironmentsStoragesCreateOrUpdateResponse,\n  ManagedEnvironmentsStoragesDeleteOptionalParams\n} from \"../models\";\n\n/** Class containing ManagedEnvironmentsStorages operations. */\nexport class ManagedEnvironmentsStoragesImpl\n  implements ManagedEnvironmentsStorages {\n  private readonly client: ContainerAppsAPIClient;\n\n  /**\n   * Initialize a new instance of the class ManagedEnvironmentsStorages class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ContainerAppsAPIClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get all storages for a managedEnvironment.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param envName Name of the Environment.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    envName: string,\n    options?: ManagedEnvironmentsStoragesListOptionalParams\n  ): Promise<ManagedEnvironmentsStoragesListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, envName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Get storage for a managedEnvironment.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param envName Name of the Environment.\n   * @param name Name of the storage.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    envName: string,\n    name: string,\n    options?: ManagedEnvironmentsStoragesGetOptionalParams\n  ): Promise<ManagedEnvironmentsStoragesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, envName, name, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create or update storage for a managedEnvironment.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param envName Name of the Environment.\n   * @param name Name of the storage.\n   * @param storageEnvelope Configuration details of storage.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    envName: string,\n    name: string,\n    storageEnvelope: ManagedEnvironmentStorage,\n    options?: ManagedEnvironmentsStoragesCreateOrUpdateOptionalParams\n  ): Promise<ManagedEnvironmentsStoragesCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, envName, name, storageEnvelope, options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Delete storage for a managedEnvironment.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param envName Name of the Environment.\n   * @param name Name of the storage.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    envName: string,\n    name: string,\n    options?: ManagedEnvironmentsStoragesDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, envName, name, options },\n      deleteOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{envName}/storages\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedEnvironmentStoragesCollection\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.envName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{envName}/storages/{name}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedEnvironmentStorage\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.envName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{envName}/storages/{name}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedEnvironmentStorage\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  requestBody: Parameters.storageEnvelope,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.envName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{envName}/storages/{name}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.envName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreAuth from \"@azure/core-auth\";\nimport {\n  ContainerAppsImpl,\n  ContainerAppsRevisionsImpl,\n  ContainerAppsRevisionReplicasImpl,\n  ManagedEnvironmentsImpl,\n  CertificatesImpl,\n  OperationsImpl,\n  ContainerAppsSourceControlsImpl,\n  DaprComponentsImpl,\n  ContainerAppsAuthConfigsImpl,\n  ManagedEnvironmentsStoragesImpl\n} from \"./operations\";\nimport {\n  ContainerApps,\n  ContainerAppsRevisions,\n  ContainerAppsRevisionReplicas,\n  ManagedEnvironments,\n  Certificates,\n  Operations,\n  ContainerAppsSourceControls,\n  DaprComponents,\n  ContainerAppsAuthConfigs,\n  ManagedEnvironmentsStorages\n} from \"./operationsInterfaces\";\nimport { ContainerAppsAPIClientOptionalParams } from \"./models\";\n\nexport class ContainerAppsAPIClient extends coreClient.ServiceClient {\n  $host: string;\n  subscriptionId: string;\n  apiVersion: string;\n\n  /**\n   * Initializes a new instance of the ContainerAppsAPIClient class.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param subscriptionId The ID of the target subscription.\n   * @param options The parameter options\n   */\n  constructor(\n    credentials: coreAuth.TokenCredential,\n    subscriptionId: string,\n    options?: ContainerAppsAPIClientOptionalParams\n  ) {\n    if (credentials === undefined) {\n      throw new Error(\"'credentials' cannot be null\");\n    }\n    if (subscriptionId === undefined) {\n      throw new Error(\"'subscriptionId' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: ContainerAppsAPIClientOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\",\n      credential: credentials\n    };\n\n    const packageDetails = `azsdk-js-arm-app/1.0.0-beta.3`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    if (!options.credentialScopes) {\n      options.credentialScopes = [\"https://management.azure.com/.default\"];\n    }\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      baseUri:\n        options.endpoint ?? options.baseUri ?? \"https://management.azure.com\"\n    };\n    super(optionsWithDefaults);\n    // Parameter assignments\n    this.subscriptionId = subscriptionId;\n\n    // Assigning values to Constant parameters\n    this.$host = options.$host || \"https://management.azure.com\";\n    this.apiVersion = options.apiVersion || \"2022-01-01-preview\";\n    this.containerApps = new ContainerAppsImpl(this);\n    this.containerAppsRevisions = new ContainerAppsRevisionsImpl(this);\n    this.containerAppsRevisionReplicas = new ContainerAppsRevisionReplicasImpl(\n      this\n    );\n    this.managedEnvironments = new ManagedEnvironmentsImpl(this);\n    this.certificates = new CertificatesImpl(this);\n    this.operations = new OperationsImpl(this);\n    this.containerAppsSourceControls = new ContainerAppsSourceControlsImpl(\n      this\n    );\n    this.daprComponents = new DaprComponentsImpl(this);\n    this.containerAppsAuthConfigs = new ContainerAppsAuthConfigsImpl(this);\n    this.managedEnvironmentsStorages = new ManagedEnvironmentsStoragesImpl(\n      this\n    );\n  }\n\n  containerApps: ContainerApps;\n  containerAppsRevisions: ContainerAppsRevisions;\n  containerAppsRevisionReplicas: ContainerAppsRevisionReplicas;\n  managedEnvironments: ManagedEnvironments;\n  certificates: Certificates;\n  operations: Operations;\n  containerAppsSourceControls: ContainerAppsSourceControls;\n  daprComponents: DaprComponents;\n  containerAppsAuthConfigs: ContainerAppsAuthConfigs;\n  managedEnvironmentsStorages: ManagedEnvironmentsStorages;\n}\n"],"names":["KnownManagedServiceIdentityType","KnownContainerAppProvisioningState","KnownActiveRevisionsMode","KnownIngressTransportMethod","KnownBindingType","KnownAppProtocol","KnownType","KnownStorageType","KnownCreatedByType","KnownRevisionHealthState","KnownRevisionProvisioningState","KnownEnvironmentProvisioningState","KnownCertificateProvisioningState","KnownSourceControlOperationState","KnownAccessMode","ContainerAppMapper","ContainerAppPatchMapper","ManagedEnvironmentMapper","ManagedEnvironmentPatchMapper","CertificateMapper","CertificatePatchMapper","SourceControlMapper","DaprComponentMapper","AuthConfigMapper","ManagedEnvironmentStorageMapper","__rest","__await","__asyncValues","__asyncDelegator","listBySubscriptionOperationSpec","listByResourceGroupOperationSpec","getOperationSpec","__awaiter","createOrUpdateOperationSpec","LroEngine","deleteOperationSpec","updateOperationSpec","listBySubscriptionNextOperationSpec","listByResourceGroupNextOperationSpec","serializer","coreClient","Mappers.ContainerAppCollection","Mappers.DefaultErrorResponse","Parameters.apiVersion","Parameters.$host","Parameters.subscriptionId","Parameters.accept","Parameters.resourceGroupName","Mappers.ContainerApp","Parameters.name","Parameters.containerAppEnvelope","Parameters.contentType","Parameters.containerAppEnvelope1","Mappers.CustomHostnameAnalysisResult","Parameters.customHostname","Parameters.containerAppName","Mappers.SecretsCollection","Parameters.nextLink","Mappers.RevisionCollection","Mappers.Revision","Mappers.Replica","Parameters.revisionName","Mappers.ReplicaCollection","Mappers.ManagedEnvironmentsCollection","Mappers.ManagedEnvironment","Parameters.environmentEnvelope","Parameters.environmentEnvelope1","listOperationSpec","listNextOperationSpec","Mappers.CertificateCollection","Parameters.managedEnvironmentName","Mappers.Certificate","Parameters.certificateEnvelope","Parameters.certificateEnvelope1","Mappers.AvailableOperations","listByContainerAppOperationSpec","listByContainerAppNextOperationSpec","Mappers.SourceControlCollection","Mappers.SourceControl","Parameters.sourceControlEnvelope","Mappers.DaprComponentsCollection","Parameters.environmentName","Mappers.DaprComponent","Parameters.daprComponentEnvelope","Mappers.AuthConfigCollection","Mappers.AuthConfig","Parameters.authConfigEnvelope","Mappers.ManagedEnvironmentStoragesCollection","Parameters.envName","Mappers.ManagedEnvironmentStorage","Parameters.storageEnvelope"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;AAMG;AAq1CH;AACYA,iDAKX;AALD,CAAA,UAAY,+BAA+B,EAAA;AACzC,IAAA,+BAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,+BAAA,CAAA,gBAAA,CAAA,GAAA,gBAAiC,CAAA;AACjC,IAAA,+BAAA,CAAA,cAAA,CAAA,GAAA,cAA6B,CAAA;AAC7B,IAAA,+BAAA,CAAA,4BAAA,CAAA,GAAA,6BAA0D,CAAA;AAC5D,CAAC,EALWA,uCAA+B,KAA/BA,uCAA+B,GAK1C,EAAA,CAAA,CAAA,CAAA;AAcD;AACYC,oDAKX;AALD,CAAA,UAAY,kCAAkC,EAAA;AAC5C,IAAA,kCAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,kCAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,kCAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,kCAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACvB,CAAC,EALWA,0CAAkC,KAAlCA,0CAAkC,GAK7C,EAAA,CAAA,CAAA,CAAA;AAcD;AACYC,0CAGX;AAHD,CAAA,UAAY,wBAAwB,EAAA;AAClC,IAAA,wBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,wBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACnB,CAAC,EAHWA,gCAAwB,KAAxBA,gCAAwB,GAGnC,EAAA,CAAA,CAAA,CAAA;AAYD;AACYC,6CAIX;AAJD,CAAA,UAAY,2BAA2B,EAAA;AACrC,IAAA,2BAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,2BAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,2BAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACjB,CAAC,EAJWA,mCAA2B,KAA3BA,mCAA2B,GAItC,EAAA,CAAA,CAAA,CAAA;AAaD;AACYC,kCAGX;AAHD,CAAA,UAAY,gBAAgB,EAAA;AAC1B,IAAA,gBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,gBAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AAC3B,CAAC,EAHWA,wBAAgB,KAAhBA,wBAAgB,GAG3B,EAAA,CAAA,CAAA,CAAA;AAYD;AACYC,kCAGX;AAHD,CAAA,UAAY,gBAAgB,EAAA;AAC1B,IAAA,gBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,gBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACf,CAAC,EAHWA,wBAAgB,KAAhBA,wBAAgB,GAG3B,EAAA,CAAA,CAAA,CAAA;AAYD;AACYC,2BAIX;AAJD,CAAA,UAAY,SAAS,EAAA;AACnB,IAAA,SAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,SAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,SAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACrB,CAAC,EAJWA,iBAAS,KAATA,iBAAS,GAIpB,EAAA,CAAA,CAAA,CAAA;AAaD;AACYC,kCAGX;AAHD,CAAA,UAAY,gBAAgB,EAAA;AAC1B,IAAA,gBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,gBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACvB,CAAC,EAHWA,wBAAgB,KAAhBA,wBAAgB,GAG3B,EAAA,CAAA,CAAA,CAAA;AAYD;AACYC,oCAKX;AALD,CAAA,UAAY,kBAAkB,EAAA;AAC5B,IAAA,kBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,kBAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,kBAAA,CAAA,iBAAA,CAAA,GAAA,iBAAmC,CAAA;AACnC,IAAA,kBAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;AACb,CAAC,EALWA,0BAAkB,KAAlBA,0BAAkB,GAK7B,EAAA,CAAA,CAAA,CAAA;AAcD;AACYC,0CAIX;AAJD,CAAA,UAAY,wBAAwB,EAAA;AAClC,IAAA,wBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,wBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,wBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACf,CAAC,EAJWA,gCAAwB,KAAxBA,gCAAwB,GAInC,EAAA,CAAA,CAAA,CAAA;AAaD;AACYC,gDAMX;AAND,CAAA,UAAY,8BAA8B,EAAA;AACxC,IAAA,8BAAA,CAAA,cAAA,CAAA,GAAA,cAA6B,CAAA;AAC7B,IAAA,8BAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,8BAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,8BAAA,CAAA,gBAAA,CAAA,GAAA,gBAAiC,CAAA;AACjC,IAAA,8BAAA,CAAA,eAAA,CAAA,GAAA,eAA+B,CAAA;AACjC,CAAC,EANWA,sCAA8B,KAA9BA,sCAA8B,GAMzC,EAAA,CAAA,CAAA,CAAA;AAeD;AACYC,mDAWX;AAXD,CAAA,UAAY,iCAAiC,EAAA;AAC3C,IAAA,iCAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,iCAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,iCAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,iCAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,iCAAA,CAAA,0BAAA,CAAA,GAAA,0BAAqD,CAAA;AACrD,IAAA,iCAAA,CAAA,+BAAA,CAAA,GAAA,+BAA+D,CAAA;AAC/D,IAAA,iCAAA,CAAA,6BAAA,CAAA,GAAA,6BAA2D,CAAA;AAC3D,IAAA,iCAAA,CAAA,oBAAA,CAAA,GAAA,oBAAyC,CAAA;AACzC,IAAA,iCAAA,CAAA,kBAAA,CAAA,GAAA,kBAAqC,CAAA;AACrC,IAAA,iCAAA,CAAA,eAAA,CAAA,GAAA,eAA+B,CAAA;AACjC,CAAC,EAXWA,yCAAiC,KAAjCA,yCAAiC,GAW5C,EAAA,CAAA,CAAA,CAAA;AAoBD;AACYC,mDAMX;AAND,CAAA,UAAY,iCAAiC,EAAA;AAC3C,IAAA,iCAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,iCAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,iCAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,iCAAA,CAAA,cAAA,CAAA,GAAA,cAA6B,CAAA;AAC7B,IAAA,iCAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACrB,CAAC,EANWA,yCAAiC,KAAjCA,yCAAiC,GAM5C,EAAA,CAAA,CAAA,CAAA;AAeD;AACYC,kDAKX;AALD,CAAA,UAAY,gCAAgC,EAAA;AAC1C,IAAA,gCAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,gCAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,gCAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,gCAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACvB,CAAC,EALWA,wCAAgC,KAAhCA,wCAAgC,GAK3C,EAAA,CAAA,CAAA,CAAA;AAcD;AACYC,iCAGX;AAHD,CAAA,UAAY,eAAe,EAAA;AACzB,IAAA,eAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,eAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACzB,CAAC,EAHWA,uBAAe,KAAfA,uBAAe,GAG1B,EAAA,CAAA,CAAA;;ACjnDD;;;;;;AAMG;AAII,MAAM,sBAAsB,GAA+B;AAChE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,wBAAwB;AACnC,QAAA,eAAe,EAAE;AACf,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,cAAc;AAC1B,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,sBAAsB,GAA+B;AAChE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,wBAAwB;AACnC,QAAA,eAAe,EAAE;AACf,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,MAAM;AACb,iBAAA;AACF,aAAA;AACD,YAAA,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,MAAM;AACb,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,sBAAsB,EAAE;AACtB,gBAAA,cAAc,EAAE,wBAAwB;AACxC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,YAAY;AAClB,oBAAA,KAAK,EAAE;wBACL,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,sBAAsB,EAAE;AAC/D,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,oBAAoB,GAA+B;AAC9D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,sBAAsB;AACjC,QAAA,eAAe,EAAE;AACf,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,MAAM;AACb,iBAAA;AACF,aAAA;AACD,YAAA,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,MAAM;AACb,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,aAAa,GAA+B;AACvD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,eAAe;AAC1B,QAAA,eAAe,EAAE;AACf,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,QAAQ;AACpB,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,mBAAmB,EAAE;AACnB,gBAAA,cAAc,EAAE,qBAAqB;AACrC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,SAAS;AACrB,iBAAA;AACF,aAAA;AACD,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,qBAAqB;AACjC,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,MAAM;AAClB,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,MAAM,GAA+B;AAChD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,QAAQ;AACnB,QAAA,eAAe,EAAE;AACf,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,OAAO,GAA+B;AACjD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,SAAS;AACpB,QAAA,eAAe,EAAE;AACf,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,QAAQ,EAAE;AACR,gBAAA,YAAY,EAAE,KAAK;AACnB,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,SAAS;AAChB,iBAAA;AACF,aAAA;AACD,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,eAAe;AAC3B,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,aAAa,EAAE;AACb,gBAAA,cAAc,EAAE,eAAe;AAC/B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,cAAc;AAC1B,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,aAAa,EAAE;AACb,gBAAA,cAAc,EAAE,eAAe;AAC/B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,SAAS;AAChB,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,aAAa,GAA+B;AACvD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,eAAe;AAC1B,QAAA,eAAe,EAAE;AACf,YAAA,YAAY,EAAE;AACZ,gBAAA,cAAc,EAAE,cAAc;AAC9B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,cAAc,EAAE;AACd,gBAAA,YAAY,EAAE,KAAK;AACnB,gBAAA,cAAc,EAAE,gBAAgB;AAChC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,SAAS;AAChB,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,YAAY,GAA+B;AACtD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,cAAc;AACzB,QAAA,eAAe,EAAE;AACf,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,aAAa,EAAE;AACb,gBAAA,cAAc,EAAE,eAAe;AAC/B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,mBAAmB,GAA+B;AAC7D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,qBAAqB;AAChC,QAAA,eAAe,EAAE;AACf,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,iBAAiB,EAAE;AACjB,gBAAA,cAAc,EAAE,mBAAmB;AACnC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,IAAI,GAA+B;AAC9C,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,MAAM;AACjB,QAAA,eAAe,EAAE;AACf,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,SAAS;AAChB,iBAAA;AACF,aAAA;AACD,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,QAAQ,GAA+B;AAClD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,UAAU;AACrB,QAAA,eAAe,EAAE;AACf,YAAA,cAAc,EAAE;AACd,gBAAA,cAAc,EAAE,gBAAgB;AAChC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,WAAW;AACvB,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,OAAO;AACnB,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,QAAQ;AACpB,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,SAAS,GAA+B;AACnD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,WAAW;AACtB,QAAA,eAAe,EAAE;AACf,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,GAAG,EAAE;AACH,gBAAA,cAAc,EAAE,KAAK;AACrB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,gBAAgB;AAC5B,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,oBAAoB;AAChC,iBAAA;AACF,aAAA;AACD,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,mBAAmB;AAC/B,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,YAAY,EAAE;AACZ,gBAAA,cAAc,EAAE,cAAc;AAC9B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,aAAa;AACzB,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,cAAc,GAA+B;AACxD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,gBAAgB;AAC3B,QAAA,eAAe,EAAE;AACf,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,kBAAkB,GAA+B;AAC5D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,oBAAoB;AAC/B,QAAA,eAAe,EAAE;AACf,YAAA,GAAG,EAAE;AACH,gBAAA,cAAc,EAAE,KAAK;AACrB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,gBAAgB,EAAE;AAChB,gBAAA,cAAc,EAAE,kBAAkB;AAClC,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,iBAAiB,GAA+B;AAC3D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,mBAAmB;AAC9B,QAAA,eAAe,EAAE;AACf,YAAA,gBAAgB,EAAE;AAChB,gBAAA,cAAc,EAAE,kBAAkB;AAClC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,0BAA0B;AACtC,iBAAA;AACF,aAAA;AACD,YAAA,mBAAmB,EAAE;AACnB,gBAAA,cAAc,EAAE,qBAAqB;AACrC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,aAAa,EAAE;AACb,gBAAA,cAAc,EAAE,eAAe;AAC/B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,gBAAgB,EAAE;AAChB,gBAAA,cAAc,EAAE,kBAAkB;AAClC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,4BAA4B;AACxC,iBAAA;AACF,aAAA;AACD,YAAA,6BAA6B,EAAE;AAC7B,gBAAA,cAAc,EAAE,+BAA+B;AAC/C,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,cAAc,EAAE;AACd,gBAAA,cAAc,EAAE,gBAAgB;AAChC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,wBAAwB,GAA+B;AAClE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,0BAA0B;AACrC,QAAA,eAAe,EAAE;AACf,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,yCAAyC;AACrD,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,uCAAuC,GAA+B;AACjF,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,yCAAyC;AACpD,QAAA,eAAe,EAAE;AACf,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,0BAA0B,GAA+B;AACpE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,4BAA4B;AACvC,QAAA,eAAe,EAAE;AACf,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,WAAW,GAA+B;AACrD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,aAAa;AACxB,QAAA,eAAe,EAAE;AACf,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,KAAK,GAA+B;AAC/C,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,OAAO;AAClB,QAAA,eAAe,EAAE;AACf,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,WAAW;AACvB,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,SAAS,GAA+B;AACnD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,WAAW;AACtB,QAAA,eAAe,EAAE;AACf,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,gBAAgB;AAC5B,iBAAA;AACF,aAAA;AACD,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,iBAAiB;AAC7B,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,eAAe;AAC3B,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,cAAc,GAA+B;AACxD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,gBAAgB;AAC3B,QAAA,eAAe,EAAE;AACf,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,eAAe;AAC3B,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,aAAa,GAA+B;AACvD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,eAAe;AAC1B,QAAA,eAAe,EAAE;AACf,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,gBAAgB,EAAE;AAChB,gBAAA,cAAc,EAAE,kBAAkB;AAClC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,eAAe,GAA+B;AACzD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,iBAAiB;AAC5B,QAAA,eAAe,EAAE;AACf,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;AACpC,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,eAAe;AAC3B,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,aAAa,GAA+B;AACvD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,eAAe;AAC1B,QAAA,eAAe,EAAE;AACf,YAAA,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;AACpC,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,eAAe;AAC3B,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,MAAM,GAA+B;AAChD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,QAAQ;AACnB,QAAA,eAAe,EAAE;AACf,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,QAAQ,GAA+B;AAClD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,UAAU;AACrB,QAAA,eAAe,EAAE;AACf,YAAA,EAAE,EAAE;AACF,gBAAA,cAAc,EAAE,IAAI;AACpB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,YAAY;AACxB,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,UAAU,GAA+B;AACpD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,YAAY;AACvB,QAAA,eAAe,EAAE;AACf,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,aAAa,EAAE;AACb,gBAAA,cAAc,EAAE,eAAe;AAC/B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AACjB,iBAAA;AACF,aAAA;AACD,YAAA,cAAc,EAAE;AACd,gBAAA,cAAc,EAAE,gBAAgB;AAChC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,kBAAkB,EAAE;AAClB,gBAAA,cAAc,EAAE,oBAAoB;AACpC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,cAAc,EAAE;AACd,gBAAA,cAAc,EAAE,gBAAgB;AAChC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AACjB,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,oBAAoB,GAA+B;AAC9D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,sBAAsB;AACjC,QAAA,eAAe,EAAE;AACf,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,2BAA2B;AACvC,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,yBAAyB,GAA+B;AACnE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,2BAA2B;AACtC,QAAA,eAAe,EAAE;AACf,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,sCAAsC;AAClD,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,oCAAoC,GAA+B;AAC9E,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,sCAAsC;AACjD,QAAA,eAAe,EAAE;AACf,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,iBAAiB,GAA+B;AAC3D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,mBAAmB;AAC9B,QAAA,eAAe,EAAE;AACf,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;AACpC,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,iBAAiB,GAA+B;AAC3D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,mBAAmB;AAC9B,QAAA,eAAe,EAAE;AACf,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,oBAAoB;AAChC,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,kBAAkB,GAA+B;AAC5D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,oBAAoB;AAC/B,QAAA,eAAe,EAAE;AACf,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,kBAAkB,GAA+B;AAC5D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,oBAAoB;AAC/B,QAAA,eAAe,EAAE;AACf,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,UAAU;AACtB,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,gBAAgB,GAA+B;AAC1D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,kBAAkB;AAC7B,QAAA,eAAe,EAAE;AACf,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,SAAS;AAChB,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,SAAS;AAChB,iBAAA;AACF,aAAA;AACD,YAAA,YAAY,EAAE;AACZ,gBAAA,cAAc,EAAE,cAAc;AAC9B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,iBAAiB,GAA+B;AAC3D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,mBAAmB;AAC9B,QAAA,eAAe,EAAE;AACf,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,SAAS;AACrB,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,6BAA6B,GAA+B;AACvE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,+BAA+B;AAC1C,QAAA,eAAe,EAAE;AACf,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,oBAAoB;AAChC,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,iBAAiB,GAA+B;AAC3D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,mBAAmB;AAC9B,QAAA,eAAe,EAAE;AACf,YAAA,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,SAAS;AAChB,iBAAA;AACF,aAAA;AACD,YAAA,sBAAsB,EAAE;AACtB,gBAAA,cAAc,EAAE,wBAAwB;AACxC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,eAAe,EAAE;AACf,gBAAA,cAAc,EAAE,iBAAiB;AACjC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,gBAAgB,EAAE;AAChB,gBAAA,cAAc,EAAE,kBAAkB;AAClC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,oBAAoB,EAAE;AACpB,gBAAA,cAAc,EAAE,sBAAsB;AACtC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,qBAAqB,EAAE;AACrB,gBAAA,cAAc,EAAE,uBAAuB;AACvC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,oBAAoB,GAA+B;AAC9D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,sBAAsB;AACjC,QAAA,eAAe,EAAE;AACf,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,yBAAyB,EAAE;AACzB,gBAAA,cAAc,EAAE,2BAA2B;AAC3C,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,2BAA2B;AACvC,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,yBAAyB,GAA+B;AACnE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,2BAA2B;AACtC,QAAA,eAAe,EAAE;AACf,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,uBAAuB,GAA+B;AACjE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,yBAAyB;AACpC,QAAA,eAAe,EAAE;AACf,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;AACpC,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,qBAAqB,GAA+B;AAC/D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,uBAAuB;AAClC,QAAA,eAAe,EAAE;AACf,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,aAAa;AACzB,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,qBAAqB,GAA+B;AAC/D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,uBAAuB;AAClC,QAAA,eAAe,EAAE;AACf,YAAA,iBAAiB,EAAE;AACjB,gBAAA,cAAc,EAAE,mBAAmB;AACnC,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AAClB,iBAAA;AACF,aAAA;AACD,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AACjB,iBAAA;AACF,aAAA;AACD,YAAA,cAAc,EAAE;AACd,gBAAA,cAAc,EAAE,gBAAgB;AAChC,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AACjB,iBAAA;AACF,aAAA;AACD,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,SAAS;AAChB,iBAAA;AACF,aAAA;AACD,YAAA,aAAa,EAAE;AACb,gBAAA,cAAc,EAAE,eAAe;AAC/B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,gBAAgB,GAA+B;AAC1D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,kBAAkB;AAC7B,QAAA,eAAe,EAAE;AACf,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;AACpC,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,mBAAmB,GAA+B;AAC7D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,qBAAqB;AAChC,QAAA,eAAe,EAAE;AACf,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,iBAAiB;AAC7B,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,eAAe,GAA+B;AACzD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,iBAAiB;AAC5B,QAAA,eAAe,EAAE;AACf,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,YAAY,EAAE;AACZ,gBAAA,cAAc,EAAE,cAAc;AAC9B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,SAAS;AAChB,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,kBAAkB;AAC9B,iBAAA;AACF,aAAA;AACD,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,gBAAgB,GAA+B;AAC1D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,kBAAkB;AAC7B,QAAA,eAAe,EAAE;AACf,YAAA,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,uBAAuB,GAA+B;AACjE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,yBAAyB;AACpC,QAAA,eAAe,EAAE;AACf,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,eAAe;AAC3B,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,yBAAyB,GAA+B;AACnE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,2BAA2B;AACtC,QAAA,eAAe,EAAE;AACf,YAAA,YAAY,EAAE;AACZ,gBAAA,cAAc,EAAE,cAAc;AAC9B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,cAAc;AAC1B,iBAAA;AACF,aAAA;AACD,YAAA,gBAAgB,EAAE;AAChB,gBAAA,cAAc,EAAE,kBAAkB;AAClC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,kBAAkB;AAC9B,iBAAA;AACF,aAAA;AACD,YAAA,cAAc,EAAE;AACd,gBAAA,cAAc,EAAE,gBAAgB;AAChC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,EAAE,EAAE;AACF,gBAAA,cAAc,EAAE,IAAI;AACpB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,YAAY,EAAE;AACZ,gBAAA,cAAc,EAAE,cAAc;AAC9B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,cAAc,EAAE;AACd,gBAAA,cAAc,EAAE,gBAAgB;AAChC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,YAAY,GAA+B;AACtD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,cAAc;AACzB,QAAA,eAAe,EAAE;AACf,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,gBAAgB,EAAE;AAChB,gBAAA,cAAc,EAAE,kBAAkB;AAClC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,gBAAgB,EAAE;AAChB,gBAAA,cAAc,EAAE,kBAAkB;AAClC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,gBAAgB,GAA+B;AAC1D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,kBAAkB;AAC7B,QAAA,eAAe,EAAE;AACf,YAAA,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,YAAY,EAAE;AACZ,gBAAA,cAAc,EAAE,cAAc;AAC9B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,cAAc,EAAE;AACd,gBAAA,cAAc,EAAE,gBAAgB;AAChC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,wBAAwB,GAA+B;AAClE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,0BAA0B;AACrC,QAAA,eAAe,EAAE;AACf,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,eAAe;AAC3B,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,YAAY,GAA+B;AACtD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,cAAc;AACzB,QAAA,eAAe,EAAE;AACf,YAAA,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,oBAAoB,GAA+B;AAC9D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,sBAAsB;AACjC,QAAA,eAAe,EAAE;AACf,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,YAAY;AACxB,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,YAAY,GAA+B;AACtD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,cAAc;AACzB,QAAA,eAAe,EAAE;AACf,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,SAAS;AAChB,iBAAA;AACF,aAAA;AACD,YAAA,cAAc,EAAE;AACd,gBAAA,cAAc,EAAE,gBAAgB;AAChC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,gBAAgB,GAA+B;AAC1D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,kBAAkB;AAC7B,QAAA,eAAe,EAAE;AACf,YAAA,2BAA2B,EAAE;AAC3B,gBAAA,cAAc,EAAE,6BAA6B;AAC7C,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,MAAM;AACZ,oBAAA,aAAa,EAAE;wBACb,qBAAqB;wBACrB,gBAAgB;wBAChB,WAAW;wBACX,WAAW;AACZ,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,kBAAkB,EAAE;AAClB,gBAAA,cAAc,EAAE,oBAAoB;AACpC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,aAAa,EAAE;AACb,gBAAA,cAAc,EAAE,eAAe;AAC/B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,iBAAiB,GAA+B;AAC3D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,mBAAmB;AAC9B,QAAA,eAAe,EAAE;AACf,YAAA,oBAAoB,EAAE;AACpB,gBAAA,cAAc,EAAE,sBAAsB;AACtC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,sBAAsB;AAClC,iBAAA;AACF,aAAA;AACD,YAAA,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,UAAU;AACtB,iBAAA;AACF,aAAA;AACD,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,QAAQ;AACpB,iBAAA;AACF,aAAA;AACD,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,QAAQ;AACpB,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,SAAS;AACrB,iBAAA;AACF,aAAA;AACD,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,OAAO;AACnB,iBAAA;AACF,aAAA;AACD,YAAA,kBAAkB,EAAE;AAClB,gBAAA,cAAc,EAAE,oBAAoB;AACpC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,oBAAoB;AAChC,iBAAA;AACF,aAAA;AACD,YAAA,4BAA4B,EAAE;AAC5B,gBAAA,cAAc,EAAE,8BAA8B;AAC9C,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,YAAY;AAClB,oBAAA,KAAK,EAAE;AACL,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,6BAA6B;AACzC,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,oBAAoB,GAA+B;AAC9D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,sBAAsB;AACjC,QAAA,eAAe,EAAE;AACf,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,SAAS;AAChB,iBAAA;AACF,aAAA;AACD,YAAA,YAAY,EAAE;AACZ,gBAAA,cAAc,EAAE,cAAc;AAC9B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,kCAAkC;AAC9C,iBAAA;AACF,aAAA;AACD,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,2BAA2B;AACvC,iBAAA;AACF,aAAA;AACD,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,gCAAgC;AAC5C,iBAAA;AACF,aAAA;AACD,YAAA,iBAAiB,EAAE;AACjB,gBAAA,cAAc,EAAE,mBAAmB;AACnC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,SAAS;AAChB,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,gCAAgC,GAA+B;AAC1E,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,kCAAkC;AAC7C,QAAA,eAAe,EAAE;AACf,YAAA,YAAY,EAAE;AACZ,gBAAA,cAAc,EAAE,cAAc;AAC9B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,uBAAuB,EAAE;AACvB,gBAAA,cAAc,EAAE,yBAAyB;AACzC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,iCAAiC,EAAE;AACjC,gBAAA,cAAc,EAAE,mCAAmC;AACnD,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,6CAA6C,EAAE;AAC7C,gBAAA,cAAc,EAAE,+CAA+C;AAC/D,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,6BAA6B,EAAE;AAC7B,gBAAA,cAAc,EAAE,+BAA+B;AAC/C,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,yBAAyB,GAA+B;AACnE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,2BAA2B;AACtC,QAAA,eAAe,EAAE;AACf,YAAA,eAAe,EAAE;AACf,gBAAA,cAAc,EAAE,iBAAiB;AACjC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,sBAAsB,EAAE;AACtB,gBAAA,cAAc,EAAE,wBAAwB;AACxC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,SAAS;AAChB,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,8BAA8B,GAA+B;AACxE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,gCAAgC;AAC3C,QAAA,eAAe,EAAE;AACf,YAAA,cAAc,EAAE;AACd,gBAAA,cAAc,EAAE,gBAAgB;AAChC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,gBAAgB;AAC5B,iBAAA;AACF,aAAA;AACD,YAAA,gBAAgB,EAAE;AAChB,gBAAA,cAAc,EAAE,kBAAkB;AAClC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,0BAA0B,EAAE;AAC1B,gBAAA,cAAc,EAAE,4BAA4B;AAC5C,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,4BAA4B;AACxC,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,cAAc,GAA+B;AACxD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,gBAAgB;AAC3B,QAAA,eAAe,EAAE;AACf,YAAA,aAAa,EAAE;AACb,gBAAA,cAAc,EAAE,eAAe;AAC/B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,yBAAyB,EAAE;AACzB,gBAAA,cAAc,EAAE,2BAA2B;AAC3C,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,0BAA0B,GAA+B;AACpE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,4BAA4B;AACvC,QAAA,eAAe,EAAE;AACf,YAAA,iBAAiB,EAAE;AACjB,gBAAA,cAAc,EAAE,mBAAmB;AACnC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,mBAAmB;AAC/B,iBAAA;AACF,aAAA;AACD,YAAA,mBAAmB,EAAE;AACnB,gBAAA,cAAc,EAAE,qBAAqB;AACrC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,iBAAiB,GAA+B;AAC3D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,mBAAmB;AAC9B,QAAA,eAAe,EAAE;AACf,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,QAAQ,GAA+B;AAClD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,UAAU;AACrB,QAAA,eAAe,EAAE;AACf,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,SAAS;AAChB,iBAAA;AACF,aAAA;AACD,YAAA,YAAY,EAAE;AACZ,gBAAA,cAAc,EAAE,cAAc;AAC9B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,iBAAiB;AAC7B,iBAAA;AACF,aAAA;AACD,YAAA,eAAe,EAAE;AACf,gBAAA,cAAc,EAAE,iBAAiB;AACjC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,aAAa;AACzB,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,eAAe,GAA+B;AACzD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,iBAAiB;AAC5B,QAAA,eAAe,EAAE;AACf,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,oBAAoB,EAAE;AACpB,gBAAA,cAAc,EAAE,sBAAsB;AACtC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,WAAW,GAA+B;AACrD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,aAAa;AACxB,QAAA,eAAe,EAAE;AACf,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,MAAM,GAA+B;AAChD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,QAAQ;AACnB,QAAA,eAAe,EAAE;AACf,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,SAAS;AAChB,iBAAA;AACF,aAAA;AACD,YAAA,YAAY,EAAE;AACZ,gBAAA,cAAc,EAAE,cAAc;AAC9B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,oBAAoB;AAChC,iBAAA;AACF,aAAA;AACD,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,aAAa;AACzB,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,kBAAkB,GAA+B;AAC5D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,oBAAoB;AAC/B,QAAA,eAAe,EAAE;AACf,YAAA,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,uBAAuB,EAAE;AACvB,gBAAA,cAAc,EAAE,yBAAyB;AACzC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,MAAM,GAA+B;AAChD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,QAAQ;AACnB,QAAA,eAAe,EAAE;AACf,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,SAAS;AAChB,iBAAA;AACF,aAAA;AACD,YAAA,YAAY,EAAE;AACZ,gBAAA,cAAc,EAAE,cAAc;AAC9B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,oBAAoB;AAChC,iBAAA;AACF,aAAA;AACD,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,aAAa;AACzB,iBAAA;AACF,aAAA;AACD,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,4BAA4B;AACxC,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,0BAA0B,GAA+B;AACpE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,4BAA4B;AACvC,QAAA,eAAe,EAAE;AACf,YAAA,gBAAgB,EAAE;AAChB,gBAAA,cAAc,EAAE,kBAAkB;AAClC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,OAAO,GAA+B;AACjD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,SAAS;AACpB,QAAA,eAAe,EAAE;AACf,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,SAAS;AAChB,iBAAA;AACF,aAAA;AACD,YAAA,YAAY,EAAE;AACZ,gBAAA,cAAc,EAAE,cAAc;AAC9B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,qBAAqB;AACjC,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,mBAAmB,GAA+B;AAC7D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,qBAAqB;AAChC,QAAA,eAAe,EAAE;AACf,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,yBAAyB,EAAE;AACzB,gBAAA,cAAc,EAAE,2BAA2B;AAC3C,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,KAAK,GAA+B;AAC/C,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,OAAO;AAClB,QAAA,eAAe,EAAE;AACf,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,SAAS;AAChB,iBAAA;AACF,aAAA;AACD,YAAA,YAAY,EAAE;AACZ,gBAAA,cAAc,EAAE,cAAc;AAC9B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,mBAAmB;AAC/B,iBAAA;AACF,aAAA;AACD,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,aAAa;AACzB,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,iBAAiB,GAA+B;AAC3D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,mBAAmB;AAC9B,QAAA,eAAe,EAAE;AACf,YAAA,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,uBAAuB,EAAE;AACvB,gBAAA,cAAc,EAAE,yBAAyB;AACzC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,kBAAkB,GAA+B;AAC5D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,oBAAoB;AAC/B,QAAA,eAAe,EAAE;AACf,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,SAAS;AAChB,iBAAA;AACF,aAAA;AACD,YAAA,YAAY,EAAE;AACZ,gBAAA,cAAc,EAAE,cAAc;AAC9B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,gCAAgC;AAC5C,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,8BAA8B,GAA+B;AACxE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,gCAAgC;AAC3C,QAAA,eAAe,EAAE;AACf,YAAA,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,2BAA2B,GAA+B;AACrE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,6BAA6B;AACxC,QAAA,eAAe,EAAE;AACf,YAAA,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,SAAS;AACzB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,SAAS;AAChB,iBAAA;AACF,aAAA;AACD,YAAA,YAAY,EAAE;AACZ,gBAAA,cAAc,EAAE,cAAc;AAC9B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,2BAA2B;AACvC,iBAAA;AACF,aAAA;AACD,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,oBAAoB;AAChC,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,yBAAyB,GAA+B;AACnE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,2BAA2B;AACtC,QAAA,eAAe,EAAE;AACf,YAAA,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,gBAAgB,EAAE;AAChB,gBAAA,cAAc,EAAE,kBAAkB;AAClC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,+BAA+B;AAC3C,iBAAA;AACF,aAAA;AACD,YAAA,0BAA0B,EAAE;AAC1B,gBAAA,cAAc,EAAE,4BAA4B;AAC5C,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,qBAAqB;AACjC,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,6BAA6B,GAA+B;AACvE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,+BAA+B;AAC1C,QAAA,eAAe,EAAE;AACf,YAAA,MAAM,EAAE;AACN,gBAAA,YAAY,EAAE,kBAAkB;AAChC,gBAAA,UAAU,EAAE,IAAI;AAChB,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,uBAAuB,EAAE;AACvB,gBAAA,cAAc,EAAE,yBAAyB;AACzC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,mBAAmB,GAA+B;AAC7D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,qBAAqB;AAChC,QAAA,eAAe,EAAE;AACf,YAAA,qBAAqB,EAAE;AACrB,gBAAA,cAAc,EAAE,uBAAuB;AACvC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,aAAa,EAAE;AACb,gBAAA,cAAc,EAAE,eAAe;AAC/B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,gBAAgB,EAAE;AAChB,gBAAA,cAAc,EAAE,kBAAkB;AAClC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,4BAA4B,EAAE;AAC5B,gBAAA,cAAc,EAAE,8BAA8B;AAC9C,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,kBAAkB,GAA+B;AAC5D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,oBAAoB;AAC/B,QAAA,eAAe,EAAE;AACf,YAAA,aAAa,EAAE;AACb,gBAAA,cAAc,EAAE,eAAe;AAC/B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,KAAK,GAA+B;AAC/C,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,OAAO;AAClB,QAAA,eAAe,EAAE;AACf,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,aAAa;AACzB,iBAAA;AACF,aAAA;AACD,YAAA,6BAA6B,EAAE;AAC7B,gBAAA,cAAc,EAAE,+BAA+B;AAC/C,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,SAAS;AAChB,iBAAA;AACF,aAAA;AACD,YAAA,2BAA2B,EAAE;AAC3B,gBAAA,cAAc,EAAE,6BAA6B;AAC7C,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,gBAAgB,EAAE;AAChB,gBAAA,cAAc,EAAE,kBAAkB;AAClC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,kBAAkB;AAC9B,iBAAA;AACF,aAAA;AACD,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,OAAO;AACnB,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,WAAW,GAA+B;AACrD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,aAAa;AACxB,QAAA,eAAe,EAAE;AACf,YAAA,cAAc,EAAE;AACd,gBAAA,cAAc,EAAE,gBAAgB;AAChC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,gBAAgB,GAA+B;AAC1D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,kBAAkB;AAC7B,QAAA,eAAe,EAAE;AACf,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,MAAM;AACZ,oBAAA,aAAa,EAAE,CAAC,WAAW,EAAE,yBAAyB,CAAC;AACxD,iBAAA;AACF,aAAA;AACD,YAAA,gBAAgB,EAAE;AAChB,gBAAA,cAAc,EAAE,kBAAkB;AAClC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,KAAK,GAA+B;AAC/C,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,OAAO;AAClB,QAAA,eAAe,EAAE;AACf,YAAA,aAAa,EAAE;AACb,gBAAA,cAAc,EAAE,eAAe;AAC/B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,SAAS;AAChB,iBAAA;AACF,aAAA;AACD,YAAA,uBAAuB,EAAE;AACvB,gBAAA,cAAc,EAAE,yBAAyB;AACzC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,YAAY,GAA+B;AACtD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,cAAc;AACzB,QAAA,eAAe,EAAE;AACf,YAAA,YAAY,EAAE;AACZ,gBAAA,cAAc,EAAE,cAAc;AAC9B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,SAAS;AAChB,iBAAA;AACF,aAAA;AACD,YAAA,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,oBAAoB;AAChC,iBAAA;AACF,aAAA;AACD,YAAA,YAAY,EAAE;AACZ,gBAAA,cAAc,EAAE,cAAc;AAC9B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,cAAc;AAC1B,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,kBAAkB,GAA+B;AAC5D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,oBAAoB;AAC/B,QAAA,eAAe,EAAE;AACf,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,YAAY,GAA+B;AACtD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,cAAc;AACzB,QAAA,eAAe,EAAE;AACf,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,MAAM;AACZ,oBAAA,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,QAAQ,CAAC;AACjD,iBAAA;AACF,aAAA;AACD,YAAA,oBAAoB,EAAE;AACpB,gBAAA,cAAc,EAAE,sBAAsB;AACtC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,qBAAqB,EAAE;AACrB,gBAAA,cAAc,EAAE,uBAAuB;AACvC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,oCAAoC,GAA+B;AAC9E,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,sCAAsC;AACjD,QAAA,eAAe,EAAE;AACf,YAAA,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,OAAO;AACvB,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,2BAA2B;AACvC,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,mCAAmC,GAA+B;AAC7E,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,qCAAqC;AAChD,QAAA,eAAe,EAAE;AACf,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,qBAAqB;AACjC,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,mBAAmB,GAA+B;AAC7D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,qBAAqB;AAChC,QAAA,eAAe,EAAE;AACf,YAAA,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,aAAa;AAC7B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACD,YAAA,SAAS,EAAE;AACT,gBAAA,cAAc,EAAE,WAAW;AAC3B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,eAAe,GAA+B;AACzD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,iBAAiB;QAC5B,eAAe,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACV,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAA,EAAA,EAChC,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;AACpC,iBAAA;AACF,aAAA,EACD,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;aACF,EACF,CAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,aAAa,GAA+B;AACvD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,eAAe;AAC1B,QAAA,eAAe,oBACV,QAAQ,CAAC,IAAI,CAAC,eAAe,CACjC;AACF,KAAA;CACF,CAAC;AAEK,MAAM,YAAY,GAA+B;AACtD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,cAAc;QACzB,eAAe,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACV,eAAe,CAAC,IAAI,CAAC,eAAe,CAAA,EAAA,EACvC,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,UAAU;AAC1B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,wBAAwB;AACpC,iBAAA;AACF,aAAA,EACD,iBAAiB,EAAE;AACjB,gBAAA,cAAc,EAAE,8BAA8B;AAC9C,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,oBAAoB,EAAE;AACpB,gBAAA,cAAc,EAAE,iCAAiC;AACjD,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,kBAAkB,EAAE;AAClB,gBAAA,cAAc,EAAE,+BAA+B;AAC/C,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,kBAAkB,EAAE;AAClB,gBAAA,cAAc,EAAE,+BAA+B;AAC/C,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,0BAA0B,EAAE;AAC1B,gBAAA,cAAc,EAAE,uCAAuC;AACvD,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,aAAa,EAAE;AACb,gBAAA,cAAc,EAAE,0BAA0B;AAC1C,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,eAAe;AAC3B,iBAAA;AACF,aAAA,EACD,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,qBAAqB;AACrC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,UAAU;AACtB,iBAAA;AACF,aAAA,EACD,mBAAmB,EAAE;AACnB,gBAAA,cAAc,EAAE,gCAAgC;AAChD,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;aACF,EACF,CAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,kBAAkB,GAA+B;AAC5D,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,oBAAoB;QAC/B,eAAe,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACV,eAAe,CAAC,IAAI,CAAC,eAAe,CAAA,EAAA,EACvC,iBAAiB,EAAE;AACjB,gBAAA,cAAc,EAAE,8BAA8B;AAC9C,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,wBAAwB,EAAE;AACxB,gBAAA,cAAc,EAAE,qCAAqC;AACrD,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,iBAAiB,EAAE;AACjB,gBAAA,cAAc,EAAE,8BAA8B;AAC9C,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,mBAAmB;AAC/B,iBAAA;AACF,aAAA,EACD,gBAAgB,EAAE;AAChB,gBAAA,cAAc,EAAE,6BAA6B;AAC7C,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,aAAa,EAAE;AACb,gBAAA,cAAc,EAAE,0BAA0B;AAC1C,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,qBAAqB;AACrC,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,oBAAoB,EAAE;AACpB,gBAAA,cAAc,EAAE,iCAAiC;AACjD,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,sBAAsB;AAClC,iBAAA;aACF,EACF,CAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,WAAW,GAA+B;AACrD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,aAAa;QACxB,eAAe,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACV,eAAe,CAAC,IAAI,CAAC,eAAe,CAAA,EAAA,EACvC,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,uBAAuB;AACnC,iBAAA;aACF,EACF,CAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,4BAA4B,GAA+B;AACtE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,8BAA8B;QACzC,eAAe,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACV,aAAa,CAAC,IAAI,CAAC,eAAe,CAAA,EAAA,EACrC,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,qBAAqB;AACrC,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,yBAAyB,EAAE;AACzB,gBAAA,cAAc,EAAE,sCAAsC;AACtD,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,SAAS;AAChB,iBAAA;AACF,aAAA,EACD,4BAA4B,EAAE;AAC5B,gBAAA,cAAc,EAAE,yCAAyC;AACzD,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,MAAM;AACZ,oBAAA,aAAa,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,CAAC;AAC/C,iBAAA;AACF,aAAA,EACD,mCAAmC,EAAE;AACnC,gBAAA,cAAc,EAAE,gDAAgD;AAChE,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,sBAAsB;AAClC,iBAAA;AACF,aAAA,EACD,+BAA+B,EAAE;AAC/B,gBAAA,cAAc,EAAE,4CAA4C;AAC5D,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,SAAS;AAChB,iBAAA;AACF,aAAA,EACD,iCAAiC,EAAE;AACjC,gBAAA,cAAc,EAAE,8CAA8C;AAC9D,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,YAAY,EAAE;AACZ,gBAAA,cAAc,EAAE,yBAAyB;AACzC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA,EACD,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,uBAAuB;AACvC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA,EACD,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,qBAAqB;AACrC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA,EACD,qBAAqB,EAAE;AACrB,gBAAA,cAAc,EAAE,kCAAkC;AAClD,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA,EACD,mBAAmB,EAAE;AACnB,gBAAA,cAAc,EAAE,gCAAgC;AAChD,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;aACF,EACF,CAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,QAAQ,GAA+B;AAClD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,UAAU;QACrB,eAAe,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACV,aAAa,CAAC,IAAI,CAAC,eAAe,CAAA,EAAA,EACrC,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,wBAAwB;AACxC,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AACjB,iBAAA;AACF,aAAA,EACD,IAAI,EAAE;AACJ,gBAAA,cAAc,EAAE,iBAAiB;AACjC,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,qBAAqB;AACrC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,UAAU;AACtB,iBAAA;AACF,aAAA,EACD,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,mBAAmB;AACnC,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,SAAS;AAChB,iBAAA;AACF,aAAA,EACD,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,qBAAqB;AACrC,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,aAAa,EAAE;AACb,gBAAA,cAAc,EAAE,0BAA0B;AAC1C,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,iBAAiB,EAAE;AACjB,gBAAA,cAAc,EAAE,8BAA8B;AAC9C,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,wBAAwB;AACxC,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,iBAAiB,EAAE;AACjB,gBAAA,cAAc,EAAE,8BAA8B;AAC9C,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;aACF,EACF,CAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,OAAO,GAA+B;AACjD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,SAAS;QACpB,eAAe,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACV,aAAa,CAAC,IAAI,CAAC,eAAe,CAAA,EAAA,EACrC,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,wBAAwB;AACxC,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AACjB,iBAAA;AACF,aAAA,EACD,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,uBAAuB;AACvC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,kBAAkB;AAC9B,yBAAA;AACF,qBAAA;AACF,iBAAA;aACF,EACF,CAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,aAAa,GAA+B;AACvD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,eAAe;QAC1B,eAAe,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACV,aAAa,CAAC,IAAI,CAAC,eAAe,CAAA,EAAA,EACrC,cAAc,EAAE;AACd,gBAAA,cAAc,EAAE,2BAA2B;AAC3C,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,oBAAoB;AACpC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,mBAAmB;AACnC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,yBAAyB,EAAE;AACzB,gBAAA,cAAc,EAAE,sCAAsC;AACtD,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,2BAA2B;AACvC,iBAAA;aACF,EACF,CAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,aAAa,GAA+B;AACvD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,eAAe;QAC1B,eAAe,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACV,aAAa,CAAC,IAAI,CAAC,eAAe,CAAA,EAAA,EACrC,aAAa,EAAE;AACb,gBAAA,cAAc,EAAE,0BAA0B;AAC1C,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,oBAAoB;AACpC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,YAAY,EAAE;AACZ,gBAAA,cAAc,EAAE,yBAAyB;AACzC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,SAAS;AAChB,iBAAA;AACF,aAAA,EACD,WAAW,EAAE;AACX,gBAAA,cAAc,EAAE,wBAAwB;AACxC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,QAAQ;AACf,iBAAA;AACF,aAAA,EACD,OAAO,EAAE;AACP,gBAAA,cAAc,EAAE,oBAAoB;AACpC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,QAAQ;AACpB,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA,EACD,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,qBAAqB;AACrC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,WAAW;AACjB,4BAAA,SAAS,EAAE,cAAc;AAC1B,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA,EACD,MAAM,EAAE;AACN,gBAAA,cAAc,EAAE,mBAAmB;AACnC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,QAAQ;AACf,yBAAA;AACF,qBAAA;AACF,iBAAA;aACF,EACF,CAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,UAAU,GAA+B;AACpD,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,YAAY;QACvB,eAAe,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACV,aAAa,CAAC,IAAI,CAAC,eAAe,CAAA,EAAA,EACrC,QAAQ,EAAE;AACR,gBAAA,cAAc,EAAE,qBAAqB;AACrC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,cAAc;AAC1B,iBAAA;AACF,aAAA,EACD,gBAAgB,EAAE;AAChB,gBAAA,cAAc,EAAE,6BAA6B;AAC7C,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,kBAAkB;AAC9B,iBAAA;AACF,aAAA,EACD,iBAAiB,EAAE;AACjB,gBAAA,cAAc,EAAE,8BAA8B;AAC9C,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,mBAAmB;AAC/B,iBAAA;AACF,aAAA,EACD,KAAK,EAAE;AACL,gBAAA,cAAc,EAAE,kBAAkB;AAClC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,OAAO;AACnB,iBAAA;AACF,aAAA,EACD,YAAY,EAAE;AACZ,gBAAA,cAAc,EAAE,yBAAyB;AACzC,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,cAAc;AAC1B,iBAAA;aACF,EACF,CAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,yBAAyB,GAA+B;AACnE,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,SAAS,EAAE,2BAA2B;QACtC,eAAe,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACV,aAAa,CAAC,IAAI,CAAC,eAAe,CAAA,EAAA,EACrC,UAAU,EAAE;AACV,gBAAA,cAAc,EAAE,YAAY;AAC5B,gBAAA,IAAI,EAAE;AACJ,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,SAAS,EAAE,qCAAqC;AACjD,iBAAA;aACF,EACF,CAAA;AACF,KAAA;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC74GD;;;;;;AAMG;AAoBI,MAAM,MAAM,GAAuB;AACxC,IAAA,aAAa,EAAE,QAAQ;AACvB,IAAA,MAAM,EAAE;AACN,QAAA,YAAY,EAAE,kBAAkB;AAChC,QAAA,UAAU,EAAE,IAAI;AAChB,QAAA,cAAc,EAAE,QAAQ;AACxB,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,KAAK,GAA0B;AAC1C,IAAA,aAAa,EAAE,OAAO;AACtB,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,OAAO;AACvB,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;AACD,IAAA,YAAY,EAAE,IAAI;CACnB,CAAC;AAEK,MAAM,cAAc,GAA0B;AACnD,IAAA,aAAa,EAAE,gBAAgB;AAC/B,IAAA,MAAM,EAAE;AACN,QAAA,WAAW,EAAE;AACX,YAAA,SAAS,EAAE,CAAC;AACb,SAAA;AACD,QAAA,cAAc,EAAE,gBAAgB;AAChC,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,UAAU,GAA4B;AACjD,IAAA,aAAa,EAAE,YAAY;AAC3B,IAAA,MAAM,EAAE;AACN,QAAA,YAAY,EAAE,oBAAoB;AAClC,QAAA,UAAU,EAAE,IAAI;AAChB,QAAA,cAAc,EAAE,aAAa;AAC7B,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,iBAAiB,GAA0B;AACtD,IAAA,aAAa,EAAE,mBAAmB;AAClC,IAAA,MAAM,EAAE;AACN,QAAA,WAAW,EAAE;AACX,YAAA,SAAS,EAAE,EAAE;AACb,YAAA,SAAS,EAAE,CAAC;AACb,SAAA;AACD,QAAA,cAAc,EAAE,mBAAmB;AACnC,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,IAAI,GAA0B;AACzC,IAAA,aAAa,EAAE,MAAM;AACrB,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,MAAM;AACtB,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,WAAW,GAAuB;AAC7C,IAAA,aAAa,EAAE,CAAC,SAAS,EAAE,aAAa,CAAC;AACzC,IAAA,MAAM,EAAE;AACN,QAAA,YAAY,EAAE,kBAAkB;AAChC,QAAA,UAAU,EAAE,IAAI;AAChB,QAAA,cAAc,EAAE,cAAc;AAC9B,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,oBAAoB,GAAuB;AACtD,IAAA,aAAa,EAAE,sBAAsB;AACrC,IAAA,MAAM,EAAEC,YAAkB;CAC3B,CAAC;AAEK,MAAM,qBAAqB,GAAuB;AACvD,IAAA,aAAa,EAAE,sBAAsB;AACrC,IAAA,MAAM,EAAEC,iBAAuB;CAChC,CAAC;AAEK,MAAM,gBAAgB,GAA0B;AACrD,IAAA,aAAa,EAAE,kBAAkB;AACjC,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,kBAAkB;AAClC,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,cAAc,GAA4B;AACrD,IAAA,aAAa,EAAE,CAAC,SAAS,EAAE,gBAAgB,CAAC;AAC5C,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,gBAAgB;AAChC,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,QAAQ,GAA0B;AAC7C,IAAA,aAAa,EAAE,UAAU;AACzB,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,UAAU;AAC1B,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;AACD,IAAA,YAAY,EAAE,IAAI;CACnB,CAAC;AAEK,MAAM,YAAY,GAA0B;AACjD,IAAA,aAAa,EAAE,cAAc;AAC7B,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,cAAc;AAC9B,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,mBAAmB,GAAuB;AACrD,IAAA,aAAa,EAAE,qBAAqB;AACpC,IAAA,MAAM,EAAEC,kBAAwB;CACjC,CAAC;AAEK,MAAM,oBAAoB,GAAuB;AACtD,IAAA,aAAa,EAAE,qBAAqB;AACpC,IAAA,MAAM,EAAEC,uBAA6B;CACtC,CAAC;AAEK,MAAM,sBAAsB,GAA0B;AAC3D,IAAA,aAAa,EAAE,wBAAwB;AACvC,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,wBAAwB;AACxC,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,mBAAmB,GAAuB;AACrD,IAAA,aAAa,EAAE,CAAC,SAAS,EAAE,qBAAqB,CAAC;AACjD,IAAA,MAAM,EAAEC,WAAiB;CAC1B,CAAC;AAEK,MAAM,oBAAoB,GAAuB;AACtD,IAAA,aAAa,EAAE,qBAAqB;AACpC,IAAA,MAAM,EAAEC,gBAAsB;CAC/B,CAAC;AAEK,MAAM,qBAAqB,GAAuB;AACvD,IAAA,aAAa,EAAE,uBAAuB;AACtC,IAAA,MAAM,EAAEC,aAAmB;CAC5B,CAAC;AAEK,MAAM,eAAe,GAA0B;AACpD,IAAA,aAAa,EAAE,iBAAiB;AAChC,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,iBAAiB;AACjC,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,qBAAqB,GAAuB;AACvD,IAAA,aAAa,EAAE,uBAAuB;AACtC,IAAA,MAAM,EAAEC,aAAmB;CAC5B,CAAC;AAEK,MAAM,kBAAkB,GAAuB;AACpD,IAAA,aAAa,EAAE,oBAAoB;AACnC,IAAA,MAAM,EAAEC,UAAgB;CACzB,CAAC;AAEK,MAAM,OAAO,GAA0B;AAC5C,IAAA,aAAa,EAAE,SAAS;AACxB,IAAA,MAAM,EAAE;AACN,QAAA,cAAc,EAAE,SAAS;AACzB,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AAEK,MAAM,eAAe,GAAuB;AACjD,IAAA,aAAa,EAAE,iBAAiB;AAChC,IAAA,MAAM,EAAEC,yBAA+B;CACxC;;AC/OD;;;;;;AAMG;MAIU,OAAO,CAAA;AAClB,IAAA,WAAA,CACU,eAAkE,EAClE,IAA6B,EAC7B,IAIe,EAChB,WAAA,GAAsB,IAAI,CAAC,IAAK,EAChC,aAAwB,GAAA,IAAI,CAAC,UAAU,EAAA;QARtC,IAAe,CAAA,eAAA,GAAf,eAAe,CAAmD;QAClE,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAyB;QAC7B,IAAI,CAAA,IAAA,GAAJ,IAAI,CAIW;QAChB,IAAW,CAAA,WAAA,GAAX,WAAW,CAAqB;QAChC,IAAa,CAAA,aAAA,GAAb,aAAa,CAA0B;KAC5C;IACS,kBAAkB,GAAA;;AAC7B,YAAA,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;SACnD,CAAA,CAAA;AAAA,KAAA;AACY,IAAA,eAAe,CAAC,IAAY,EAAA;;AACvC,YAAA,MAAM,EAA+B,GAAA,IAAI,CAAC,IAAI,CAAxC,CAAkB,QAAQ,GAA1BC,YAAA,CAAA,EAAA,EAAA,CAAA,aAAA,CAA4B,EAAa;AAC/C,YAAA,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAChC,QAAQ,CAAA,EAAA,EACX,IAAI,EACJ,UAAU,EAAE,KAAK,IACjB,CAAC;SACJ,CAAA,CAAA;AAAA,KAAA;AACF;;ACjCD;;;;;;AAMG;AAkCH;AACA;MACa,iBAAiB,CAAA;AAG5B;;;AAGG;AACH,IAAA,WAAA,CAAY,MAA8B,EAAA;AACxC,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED;;;AAGG;AACI,IAAA,kBAAkB,CACvB,OAAuD,EAAA;QAEvD,MAAM,IAAI,GAAG,IAAI,CAAC,2BAA2B,CAAC,OAAO,CAAC,CAAC;QACvD,OAAO;YACL,IAAI,GAAA;AACF,gBAAA,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC,GAAA;AACpB,gBAAA,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE,MAAK;AACX,gBAAA,OAAO,IAAI,CAAC,4BAA4B,CAAC,OAAO,CAAC,CAAC;aACnD;SACF,CAAC;KACH;AAEc,IAAA,4BAA4B,CACzC,OAAuD,EAAA;;YAEvD,IAAI,MAAM,GAAG,MAAAC,aAAA,CAAM,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAA,CAAC;AACrD,YAAA,MAAA,MAAAA,aAAA,CAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;AACzB,YAAA,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;AACxC,YAAA,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,MAAMA,aAAA,CAAA,IAAI,CAAC,uBAAuB,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;AACxE,gBAAA,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;AACpC,gBAAA,MAAA,MAAAA,aAAA,CAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;AAC1B,aAAA;SACF,CAAA,CAAA;AAAA,KAAA;AAEc,IAAA,2BAA2B,CACxC,OAAuD,EAAA;;;;gBAEvD,KAAyB,IAAA,EAAA,GAAAC,mBAAA,CAAA,IAAI,CAAC,4BAA4B,CAAC,OAAO,CAAC,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAAD,aAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,IAAA,GAAA;oBAAxD,MAAM,IAAI,WAAA,CAAA;oBACnB,MAAAA,aAAA,CAAA,OAAOE,sBAAA,CAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;AACb,iBAAA;;;;;;;;;SACF,CAAA,CAAA;AAAA,KAAA;AAED;;;;AAIG;IACI,mBAAmB,CACxB,iBAAyB,EACzB,OAAwD,EAAA;QAExD,MAAM,IAAI,GAAG,IAAI,CAAC,4BAA4B,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;QAC3E,OAAO;YACL,IAAI,GAAA;AACF,gBAAA,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC,GAAA;AACpB,gBAAA,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE,MAAK;gBACX,OAAO,IAAI,CAAC,6BAA6B,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;aACvE;SACF,CAAC;KACH;IAEc,6BAA6B,CAC1C,iBAAyB,EACzB,OAAwD,EAAA;;AAExD,YAAA,IAAI,MAAM,GAAG,MAAMD,aAAA,CAAA,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;AACzE,YAAA,MAAA,MAAAA,aAAA,CAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;AACzB,YAAA,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;AACxC,YAAA,OAAO,iBAAiB,EAAE;AACxB,gBAAA,MAAM,GAAG,MAAAA,aAAA,CAAM,IAAI,CAAC,wBAAwB,CAC1C,iBAAiB,EACjB,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;AACF,gBAAA,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;AACpC,gBAAA,MAAA,MAAAA,aAAA,CAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;AAC1B,aAAA;SACF,CAAA,CAAA;AAAA,KAAA;IAEc,4BAA4B,CACzC,iBAAyB,EACzB,OAAwD,EAAA;;;;AAExD,gBAAA,KAAyB,IAAA,EAAA,GAAAC,mBAAA,CAAA,IAAI,CAAC,6BAA6B,CACzD,iBAAiB,EACjB,OAAO,CACR,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAAD,aAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,IAAA,GAAA;oBAHU,MAAM,IAAI,WAAA,CAAA;oBAInB,MAAAA,aAAA,CAAA,OAAOE,sBAAA,CAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;AACb,iBAAA;;;;;;;;;SACF,CAAA,CAAA;AAAA,KAAA;AAED;;;AAGG;AACK,IAAA,mBAAmB,CACzB,OAAuD,EAAA;AAEvD,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,OAAO,EAAE,EACXE,iCAA+B,CAChC,CAAC;KACH;AAED;;;;AAIG;IACK,oBAAoB,CAC1B,iBAAyB,EACzB,OAAwD,EAAA;AAExD,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,OAAO,EAAE,EAC9BC,kCAAgC,CACjC,CAAC;KACH;AAED;;;;;AAKG;AACH,IAAA,GAAG,CACD,iBAAyB,EACzB,IAAY,EACZ,OAAwC,EAAA;AAExC,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpCC,kBAAgB,CACjB,CAAC;KACH;AAED;;;;;;AAMG;AACG,IAAA,mBAAmB,CACvB,iBAAyB,EACzB,IAAY,EACZ,oBAAkC,EAClC,OAAmD,EAAA;;AAOnD,YAAA,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B,KACkBC,eAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;gBAChD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACtD,aAAC,CAAA,CAAC;AACF,YAAA,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B,KAC5BA,eAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;;gBACF,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,UAAU,CAAC;AAClD,gBAAA,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,KACnB;oBACF,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,KAAA,IAAA,IAAhB,gBAAgB,KAAhB,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;AAChD,iBAAC,CAAC;AACF,gBAAA,MAAM,WAAW,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACZ,IAAI,CAAA,EAAA,EACP,OAAO,EACF,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,IAAI,CAAC,OAAO,CACf,EAAA,EAAA,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;AACZ,oBAAA,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;AACpC,wBAAA,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;AAC9C,qBAAA;iBACF,CAAC;AACJ,aAAC,CAAA,CAAC;AAEF,YAAA,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,IAAI,EAAE,oBAAoB,EAAE,OAAO,EAAE,EAC1DC,6BAA2B,CAC5B,CAAC;AACF,YAAA,MAAM,MAAM,GAAG,IAAIC,iBAAS,CAAC,GAAG,EAAE;AAChC,gBAAA,UAAU,EAAE,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,UAAU;AAC/B,gBAAA,YAAY,EAAE,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,kBAAkB;AAC1C,aAAA,CAAC,CAAC;AACH,YAAA,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;AACpB,YAAA,OAAO,MAAM,CAAC;SACf,CAAA,CAAA;AAAA,KAAA;AAED;;;;;;AAMG;AACG,IAAA,0BAA0B,CAC9B,iBAAyB,EACzB,IAAY,EACZ,oBAAkC,EAClC,OAAmD,EAAA;;AAEnD,YAAA,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAC3C,iBAAiB,EACjB,IAAI,EACJ,oBAAoB,EACpB,OAAO,CACR,CAAC;AACF,YAAA,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B,CAAA,CAAA;AAAA,KAAA;AAED;;;;;AAKG;AACG,IAAA,WAAW,CACf,iBAAyB,EACzB,IAAY,EACZ,OAA2C,EAAA;;AAE3C,YAAA,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B,KACbF,eAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;gBACjB,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACtD,aAAC,CAAA,CAAC;AACF,YAAA,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B,KAC5BA,eAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;;gBACF,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,UAAU,CAAC;AAClD,gBAAA,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,KACnB;oBACF,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,KAAA,IAAA,IAAhB,gBAAgB,KAAhB,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;AAChD,iBAAC,CAAC;AACF,gBAAA,MAAM,WAAW,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACZ,IAAI,CAAA,EAAA,EACP,OAAO,EACF,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,IAAI,CAAC,OAAO,CACf,EAAA,EAAA,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;AACZ,oBAAA,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;AACpC,wBAAA,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;AAC9C,qBAAA;iBACF,CAAC;AACJ,aAAC,CAAA,CAAC;AAEF,YAAA,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpCG,qBAAmB,CACpB,CAAC;AACF,YAAA,MAAM,MAAM,GAAG,IAAID,iBAAS,CAAC,GAAG,EAAE;AAChC,gBAAA,UAAU,EAAE,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,UAAU;AAC/B,gBAAA,YAAY,EAAE,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,kBAAkB;AAC1C,aAAA,CAAC,CAAC;AACH,YAAA,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;AACpB,YAAA,OAAO,MAAM,CAAC;SACf,CAAA,CAAA;AAAA,KAAA;AAED;;;;;AAKG;AACG,IAAA,kBAAkB,CACtB,iBAAyB,EACzB,IAAY,EACZ,OAA2C,EAAA;;AAE3C,YAAA,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;AACxE,YAAA,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B,CAAA,CAAA;AAAA,KAAA;AAED;;;;;;AAMG;AACH,IAAA,MAAM,CACJ,iBAAyB,EACzB,IAAY,EACZ,oBAAuC,EACvC,OAA2C,EAAA;AAE3C,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,oBAAoB,EAAE,OAAO,EAAE,EAC1DE,qBAAmB,CACpB,CAAC;KACH;AAED;;;;;AAKG;AACH,IAAA,0BAA0B,CACxB,iBAAyB,EACzB,gBAAwB,EACxB,OAA+D,EAAA;AAE/D,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,OAAO,EAAE,EAChD,uCAAuC,CACxC,CAAC;KACH;AAED;;;;;AAKG;AACH,IAAA,WAAW,CACT,iBAAyB,EACzB,IAAY,EACZ,OAAgD,EAAA;AAEhD,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,wBAAwB,CACzB,CAAC;KACH;AAED;;;;AAIG;IACK,uBAAuB,CAC7B,QAAgB,EAChB,OAA2D,EAAA;AAE3D,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,OAAO,EAAE,EACrBC,qCAAmC,CACpC,CAAC;KACH;AAED;;;;;AAKG;AACK,IAAA,wBAAwB,CAC9B,iBAAyB,EACzB,QAAgB,EAChB,OAA4D,EAAA;AAE5D,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,QAAQ,EAAE,OAAO,EAAE,EACxCC,sCAAoC,CACrC,CAAC;KACH;AACF,CAAA;AACD;AACA,MAAMC,YAAU,GAAGC,qBAAU,CAAC,gBAAgB,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMX,iCAA+B,GAA6B;AAChE,IAAA,IAAI,EAAE,uEAAuE;AAC7E,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEY,sBAA8B;AAC3C,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEC,oBAA4B;AACzC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE,CAACC,KAAgB,EAAEC,cAAyB,CAAC;AAC5D,IAAA,gBAAgB,EAAE,CAACC,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAMT,kCAAgC,GAA6B;AACjE,IAAA,IAAI,EACF,0GAA0G;AAC5G,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEW,sBAA8B;AAC3C,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEC,oBAA4B;AACzC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC7B,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACD,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAMR,kBAAgB,GAA6B;AACjD,IAAA,IAAI,EACF,iHAAiH;AACnH,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEiB,YAAoB;AACjC,SAAA;AACD,QAAA,GAAG,EAAE;AACH,YAAA,OAAO,EAAE,IAAI;AACd,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEN,oBAA4B;AACzC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAE,IAAe;AAChB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACH,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAMN,6BAA2B,GAA6B;AAC5D,IAAA,IAAI,EACF,iHAAiH;AACnH,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEe,YAAoB;AACjC,SAAA;AACD,QAAA,GAAG,EAAE;YACH,UAAU,EAAEA,YAAoB;AACjC,SAAA;AACD,QAAA,GAAG,EAAE;YACH,UAAU,EAAEA,YAAoB;AACjC,SAAA;AACD,QAAA,GAAG,EAAE;YACH,UAAU,EAAEA,YAAoB;AACjC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEN,oBAA4B;AACzC,SAAA;AACF,KAAA;IACD,WAAW,EAAEQ,oBAA+B;AAC5C,IAAA,eAAe,EAAE,CAACP,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAE,IAAe;AAChB,KAAA;IACD,gBAAgB,EAAE,CAACH,MAAiB,EAAEK,WAAsB,CAAC;AAC7D,IAAA,SAAS,EAAE,MAAM;gBACjBZ,YAAU;CACX,CAAC;AACF,MAAMJ,qBAAmB,GAA6B;AACpD,IAAA,IAAI,EACF,iHAAiH;AACnH,IAAA,UAAU,EAAE,QAAQ;AACpB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,OAAO,EAAE;YACP,UAAU,EAAEO,oBAA4B;AACzC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAE,IAAe;AAChB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACH,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAMH,qBAAmB,GAA6B;AACpD,IAAA,IAAI,EACF,iHAAiH;AACnH,IAAA,UAAU,EAAE,OAAO;AACnB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEY,YAAoB;AACjC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEN,oBAA4B;AACzC,SAAA;AACF,KAAA;IACD,WAAW,EAAEU,qBAAgC;AAC7C,IAAA,eAAe,EAAE,CAACT,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAE,IAAe;AAChB,KAAA;IACD,gBAAgB,EAAE,CAACH,MAAiB,EAAEK,WAAsB,CAAC;AAC7D,IAAA,SAAS,EAAE,MAAM;gBACjBZ,YAAU;CACX,CAAC;AACF,MAAM,uCAAuC,GAA6B;AACxE,IAAA,IAAI,EACF,wJAAwJ;AAC1J,IAAA,UAAU,EAAE,MAAM;AAClB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEc,4BAAoC;AACjD,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEX,oBAA4B;AACzC,SAAA;AACF,KAAA;IACD,eAAe,EAAE,CAACC,UAAqB,EAAEW,cAAyB,CAAC;AACnE,IAAA,aAAa,EAAE;AACb,QAAAV,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAQ,gBAA2B;AAC5B,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACT,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAM,wBAAwB,GAA6B;AACzD,IAAA,IAAI,EACF,6HAA6H;AAC/H,IAAA,UAAU,EAAE,MAAM;AAClB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEiB,iBAAyB;AACtC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEd,oBAA4B;AACzC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAE,IAAe;AAChB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACH,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAMF,qCAAmC,GAA6B;AACpE,IAAA,IAAI,EAAE,YAAY;AAClB,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEI,sBAA8B;AAC3C,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEC,oBAA4B;AACzC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAY,QAAmB;AACpB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACX,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAMD,sCAAoC,GAA6B;AACrE,IAAA,IAAI,EAAE,YAAY;AAClB,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEG,sBAA8B;AAC3C,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEC,oBAA4B;AACzC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAU,QAAmB;AACpB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACX,MAAiB,CAAC;gBACrCP,YAAU;CACX;;ACrqBD;;;;;;AAMG;AAqBH;AACA;MACa,0BAA0B,CAAA;AAGrC;;;AAGG;AACH,IAAA,WAAA,CAAY,MAA8B,EAAA;AACxC,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED;;;;;AAKG;AACI,IAAA,aAAa,CAClB,iBAAyB,EACzB,gBAAwB,EACxB,OAA2D,EAAA;AAE3D,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,sBAAsB,CACtC,iBAAiB,EACjB,gBAAgB,EAChB,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI,GAAA;AACF,gBAAA,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC,GAAA;AACpB,gBAAA,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE,MAAK;gBACX,OAAO,IAAI,CAAC,uBAAuB,CACjC,iBAAiB,EACjB,gBAAgB,EAChB,OAAO,CACR,CAAC;aACH;SACF,CAAC;KACH;AAEc,IAAA,uBAAuB,CACpC,iBAAyB,EACzB,gBAAwB,EACxB,OAA2D,EAAA;;AAE3D,YAAA,IAAI,MAAM,GAAG,MAAMb,aAAA,CAAA,IAAI,CAAC,cAAc,CACpC,iBAAiB,EACjB,gBAAgB,EAChB,OAAO,CACR,CAAA,CAAC;AACF,YAAA,MAAA,MAAAA,aAAA,CAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;AACzB,YAAA,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;AACxC,YAAA,OAAO,iBAAiB,EAAE;AACxB,gBAAA,MAAM,GAAG,MAAAA,aAAA,CAAM,IAAI,CAAC,kBAAkB,CACpC,iBAAiB,EACjB,gBAAgB,EAChB,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;AACF,gBAAA,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;AACpC,gBAAA,MAAA,MAAAA,aAAA,CAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;AAC1B,aAAA;SACF,CAAA,CAAA;AAAA,KAAA;AAEc,IAAA,sBAAsB,CACnC,iBAAyB,EACzB,gBAAwB,EACxB,OAA2D,EAAA;;;;AAE3D,gBAAA,KAAyB,IAAA,EAAA,GAAAC,mBAAA,CAAA,IAAI,CAAC,uBAAuB,CACnD,iBAAiB,EACjB,gBAAgB,EAChB,OAAO,CACR,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAAD,aAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,IAAA,GAAA;oBAJU,MAAM,IAAI,WAAA,CAAA;oBAKnB,MAAAA,aAAA,CAAA,OAAOE,sBAAA,CAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;AACb,iBAAA;;;;;;;;;SACF,CAAA,CAAA;AAAA,KAAA;AAED;;;;;AAKG;AACK,IAAA,cAAc,CACpB,iBAAyB,EACzB,gBAAwB,EACxB,OAA2D,EAAA;AAE3D,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,OAAO,EAAE,EAChD,0BAA0B,CAC3B,CAAC;KACH;AAED;;;;;;AAMG;AACH,IAAA,WAAW,CACT,iBAAyB,EACzB,gBAAwB,EACxB,IAAY,EACZ,OAAyD,EAAA;AAEzD,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,IAAI,EAAE,OAAO,EAAE,EACtD,wBAAwB,CACzB,CAAC;KACH;AAED;;;;;;AAMG;AACH,IAAA,gBAAgB,CACd,iBAAyB,EACzB,gBAAwB,EACxB,IAAY,EACZ,OAA8D,EAAA;AAE9D,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,IAAI,EAAE,OAAO,EAAE,EACtD,6BAA6B,CAC9B,CAAC;KACH;AAED;;;;;;AAMG;AACH,IAAA,kBAAkB,CAChB,iBAAyB,EACzB,gBAAwB,EACxB,IAAY,EACZ,OAAgE,EAAA;AAEhE,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,IAAI,EAAE,OAAO,EAAE,EACtD,+BAA+B,CAChC,CAAC;KACH;AAED;;;;;;AAMG;AACH,IAAA,eAAe,CACb,iBAAyB,EACzB,gBAAwB,EACxB,IAAY,EACZ,OAA6D,EAAA;AAE7D,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,IAAI,EAAE,OAAO,EAAE,EACtD,4BAA4B,CAC7B,CAAC;KACH;AAED;;;;;;AAMG;AACK,IAAA,kBAAkB,CACxB,iBAAyB,EACzB,gBAAwB,EACxB,QAAgB,EAChB,OAA+D,EAAA;AAE/D,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC1D,8BAA8B,CAC/B,CAAC;KACH;AACF,CAAA;AACD;AACA,MAAMY,YAAU,GAAGC,qBAAU,CAAC,gBAAgB,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAM,0BAA0B,GAA6B;AAC3D,IAAA,IAAI,EACF,uIAAuI;AACzI,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEkB,kBAA0B;AACvC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEhB,oBAA4B;AACzC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAQ,gBAA2B;AAC5B,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACT,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAM,wBAAwB,GAA6B;AACzD,IAAA,IAAI,EACF,8IAA8I;AAChJ,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEoB,QAAgB;AAC7B,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEjB,oBAA4B;AACzC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAE,IAAe;AACf,QAAAM,gBAA2B;AAC5B,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACT,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAM,6BAA6B,GAA6B;AAC9D,IAAA,IAAI,EACF,uJAAuJ;AACzJ,IAAA,UAAU,EAAE,MAAM;AAClB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,OAAO,EAAE;YACP,UAAU,EAAEG,oBAA4B;AACzC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAE,IAAe;AACf,QAAAM,gBAA2B;AAC5B,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACT,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAM,+BAA+B,GAA6B;AAChE,IAAA,IAAI,EACF,yJAAyJ;AAC3J,IAAA,UAAU,EAAE,MAAM;AAClB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,OAAO,EAAE;YACP,UAAU,EAAEG,oBAA4B;AACzC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAE,IAAe;AACf,QAAAM,gBAA2B;AAC5B,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACT,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAM,4BAA4B,GAA6B;AAC7D,IAAA,IAAI,EACF,sJAAsJ;AACxJ,IAAA,UAAU,EAAE,MAAM;AAClB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,OAAO,EAAE;YACP,UAAU,EAAEG,oBAA4B;AACzC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAE,IAAe;AACf,QAAAM,gBAA2B;AAC5B,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACT,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAM,8BAA8B,GAA6B;AAC/D,IAAA,IAAI,EAAE,YAAY;AAClB,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEmB,kBAA0B;AACvC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEhB,oBAA4B;AACzC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAQ,gBAA2B;AAC3B,QAAAE,QAAmB;AACpB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACX,MAAiB,CAAC;gBACrCP,YAAU;CACX;;ACnWD;;;;;;AAMG;AAcH;MACa,iCAAiC,CAAA;AAI5C;;;AAGG;AACH,IAAA,WAAA,CAAY,MAA8B,EAAA;AACxC,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED;;;;;;;AAOG;IACH,UAAU,CACR,iBAAyB,EACzB,gBAAwB,EACxB,YAAoB,EACpB,IAAY,EACZ,OAA+D,EAAA;QAE/D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,YAAY,EAAE,IAAI,EAAE,OAAO,EAAE,EACpE,uBAAuB,CACxB,CAAC;KACH;AAED;;;;;;AAMG;AACH,IAAA,YAAY,CACV,iBAAyB,EACzB,gBAAwB,EACxB,YAAoB,EACpB,OAAiE,EAAA;AAEjE,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,YAAY,EAAE,OAAO,EAAE,EAC9D,yBAAyB,CAC1B,CAAC;KACH;AACF,CAAA;AACD;AACA,MAAMA,YAAU,GAAGC,qBAAU,CAAC,gBAAgB,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAM,uBAAuB,GAA6B;AACxD,IAAA,IAAI,EACF,sKAAsK;AACxK,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEoB,OAAe;AAC5B,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAElB,oBAA4B;AACzC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAE,IAAe;AACf,QAAAM,gBAA2B;AAC3B,QAAAM,YAAuB;AACxB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACf,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAM,yBAAyB,GAA6B;AAC1D,IAAA,IAAI,EACF,+JAA+J;AACjK,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEuB,iBAAyB;AACtC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEpB,oBAA4B;AACzC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAQ,gBAA2B;AAC3B,QAAAM,YAAuB;AACxB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACf,MAAiB,CAAC;gBACrCP,YAAU;CACX;;AC1HD;;;;;;AAMG;AA8BH;AACA;MACa,uBAAuB,CAAA;AAGlC;;;AAGG;AACH,IAAA,WAAA,CAAY,MAA8B,EAAA;AACxC,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED;;;AAGG;AACI,IAAA,kBAAkB,CACvB,OAA6D,EAAA;QAE7D,MAAM,IAAI,GAAG,IAAI,CAAC,2BAA2B,CAAC,OAAO,CAAC,CAAC;QACvD,OAAO;YACL,IAAI,GAAA;AACF,gBAAA,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC,GAAA;AACpB,gBAAA,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE,MAAK;AACX,gBAAA,OAAO,IAAI,CAAC,4BAA4B,CAAC,OAAO,CAAC,CAAC;aACnD;SACF,CAAC;KACH;AAEc,IAAA,4BAA4B,CACzC,OAA6D,EAAA;;YAE7D,IAAI,MAAM,GAAG,MAAAb,aAAA,CAAM,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAA,CAAC;AACrD,YAAA,MAAA,MAAAA,aAAA,CAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;AACzB,YAAA,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;AACxC,YAAA,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,MAAMA,aAAA,CAAA,IAAI,CAAC,uBAAuB,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;AACxE,gBAAA,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;AACpC,gBAAA,MAAA,MAAAA,aAAA,CAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;AAC1B,aAAA;SACF,CAAA,CAAA;AAAA,KAAA;AAEc,IAAA,2BAA2B,CACxC,OAA6D,EAAA;;;;gBAE7D,KAAyB,IAAA,EAAA,GAAAC,mBAAA,CAAA,IAAI,CAAC,4BAA4B,CAAC,OAAO,CAAC,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAAD,aAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,IAAA,GAAA;oBAAxD,MAAM,IAAI,WAAA,CAAA;oBACnB,MAAAA,aAAA,CAAA,OAAOE,sBAAA,CAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;AACb,iBAAA;;;;;;;;;SACF,CAAA,CAAA;AAAA,KAAA;AAED;;;;AAIG;IACI,mBAAmB,CACxB,iBAAyB,EACzB,OAA8D,EAAA;QAE9D,MAAM,IAAI,GAAG,IAAI,CAAC,4BAA4B,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;QAC3E,OAAO;YACL,IAAI,GAAA;AACF,gBAAA,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC,GAAA;AACpB,gBAAA,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE,MAAK;gBACX,OAAO,IAAI,CAAC,6BAA6B,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;aACvE;SACF,CAAC;KACH;IAEc,6BAA6B,CAC1C,iBAAyB,EACzB,OAA8D,EAAA;;AAE9D,YAAA,IAAI,MAAM,GAAG,MAAMD,aAAA,CAAA,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;AACzE,YAAA,MAAA,MAAAA,aAAA,CAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;AACzB,YAAA,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;AACxC,YAAA,OAAO,iBAAiB,EAAE;AACxB,gBAAA,MAAM,GAAG,MAAAA,aAAA,CAAM,IAAI,CAAC,wBAAwB,CAC1C,iBAAiB,EACjB,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;AACF,gBAAA,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;AACpC,gBAAA,MAAA,MAAAA,aAAA,CAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;AAC1B,aAAA;SACF,CAAA,CAAA;AAAA,KAAA;IAEc,4BAA4B,CACzC,iBAAyB,EACzB,OAA8D,EAAA;;;;AAE9D,gBAAA,KAAyB,IAAA,EAAA,GAAAC,mBAAA,CAAA,IAAI,CAAC,6BAA6B,CACzD,iBAAiB,EACjB,OAAO,CACR,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAAD,aAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,IAAA,GAAA;oBAHU,MAAM,IAAI,WAAA,CAAA;oBAInB,MAAAA,aAAA,CAAA,OAAOE,sBAAA,CAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;AACb,iBAAA;;;;;;;;;SACF,CAAA,CAAA;AAAA,KAAA;AAED;;;AAGG;AACK,IAAA,mBAAmB,CACzB,OAA6D,EAAA;AAE7D,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,OAAO,EAAE,EACX,+BAA+B,CAChC,CAAC;KACH;AAED;;;;AAIG;IACK,oBAAoB,CAC1B,iBAAyB,EACzB,OAA8D,EAAA;AAE9D,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,OAAO,EAAE,EAC9B,gCAAgC,CACjC,CAAC;KACH;AAED;;;;;AAKG;AACH,IAAA,GAAG,CACD,iBAAyB,EACzB,IAAY,EACZ,OAA8C,EAAA;AAE9C,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpCI,kBAAgB,CACjB,CAAC;KACH;AAED;;;;;;AAMG;AACG,IAAA,mBAAmB,CACvB,iBAAyB,EACzB,IAAY,EACZ,mBAAuC,EACvC,OAAyD,EAAA;;AAOzD,YAAA,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B,KACwBC,eAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;gBACtD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACtD,aAAC,CAAA,CAAC;AACF,YAAA,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B,KAC5BA,eAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;;gBACF,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,UAAU,CAAC;AAClD,gBAAA,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,KACnB;oBACF,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,KAAA,IAAA,IAAhB,gBAAgB,KAAhB,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;AAChD,iBAAC,CAAC;AACF,gBAAA,MAAM,WAAW,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACZ,IAAI,CAAA,EAAA,EACP,OAAO,EACF,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,IAAI,CAAC,OAAO,CACf,EAAA,EAAA,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;AACZ,oBAAA,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;AACpC,wBAAA,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;AAC9C,qBAAA;iBACF,CAAC;AACJ,aAAC,CAAA,CAAC;AAEF,YAAA,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,IAAI,EAAE,mBAAmB,EAAE,OAAO,EAAE,EACzDC,6BAA2B,CAC5B,CAAC;AACF,YAAA,MAAM,MAAM,GAAG,IAAIC,iBAAS,CAAC,GAAG,EAAE;AAChC,gBAAA,UAAU,EAAE,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,UAAU;AAC/B,gBAAA,YAAY,EAAE,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,kBAAkB;AAC1C,aAAA,CAAC,CAAC;AACH,YAAA,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;AACpB,YAAA,OAAO,MAAM,CAAC;SACf,CAAA,CAAA;AAAA,KAAA;AAED;;;;;;AAMG;AACG,IAAA,0BAA0B,CAC9B,iBAAyB,EACzB,IAAY,EACZ,mBAAuC,EACvC,OAAyD,EAAA;;AAEzD,YAAA,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAC3C,iBAAiB,EACjB,IAAI,EACJ,mBAAmB,EACnB,OAAO,CACR,CAAC;AACF,YAAA,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B,CAAA,CAAA;AAAA,KAAA;AAED;;;;;AAKG;AACG,IAAA,WAAW,CACf,iBAAyB,EACzB,IAAY,EACZ,OAAiD,EAAA;;AAEjD,YAAA,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B,KACbF,eAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;gBACjB,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACtD,aAAC,CAAA,CAAC;AACF,YAAA,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B,KAC5BA,eAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;;gBACF,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,UAAU,CAAC;AAClD,gBAAA,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,KACnB;oBACF,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,KAAA,IAAA,IAAhB,gBAAgB,KAAhB,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;AAChD,iBAAC,CAAC;AACF,gBAAA,MAAM,WAAW,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACZ,IAAI,CAAA,EAAA,EACP,OAAO,EACF,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,IAAI,CAAC,OAAO,CACf,EAAA,EAAA,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;AACZ,oBAAA,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;AACpC,wBAAA,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;AAC9C,qBAAA;iBACF,CAAC;AACJ,aAAC,CAAA,CAAC;AAEF,YAAA,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpCG,qBAAmB,CACpB,CAAC;AACF,YAAA,MAAM,MAAM,GAAG,IAAID,iBAAS,CAAC,GAAG,EAAE;AAChC,gBAAA,UAAU,EAAE,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,UAAU;AAC/B,gBAAA,YAAY,EAAE,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,kBAAkB;AAC1C,aAAA,CAAC,CAAC;AACH,YAAA,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;AACpB,YAAA,OAAO,MAAM,CAAC;SACf,CAAA,CAAA;AAAA,KAAA;AAED;;;;;AAKG;AACG,IAAA,kBAAkB,CACtB,iBAAyB,EACzB,IAAY,EACZ,OAAiD,EAAA;;AAEjD,YAAA,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;AACxE,YAAA,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B,CAAA,CAAA;AAAA,KAAA;AAED;;;;;;AAMG;AACH,IAAA,MAAM,CACJ,iBAAyB,EACzB,IAAY,EACZ,mBAA4C,EAC5C,OAAiD,EAAA;AAEjD,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,mBAAmB,EAAE,OAAO,EAAE,EACzDE,qBAAmB,CACpB,CAAC;KACH;AAED;;;;AAIG;IACK,uBAAuB,CAC7B,QAAgB,EAChB,OAAiE,EAAA;AAEjE,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,OAAO,EAAE,EACrB,mCAAmC,CACpC,CAAC;KACH;AAED;;;;;AAKG;AACK,IAAA,wBAAwB,CAC9B,iBAAyB,EACzB,QAAgB,EAChB,OAAkE,EAAA;AAElE,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,QAAQ,EAAE,OAAO,EAAE,EACxC,oCAAoC,CACrC,CAAC;KACH;AACF,CAAA;AACD;AACA,MAAMG,YAAU,GAAGC,qBAAU,CAAC,gBAAgB,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAM,+BAA+B,GAA6B;AAChE,IAAA,IAAI,EACF,6EAA6E;AAC/E,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEuB,6BAAqC;AAClD,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAErB,oBAA4B;AACzC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE,CAACC,KAAgB,EAAEC,cAAyB,CAAC;AAC5D,IAAA,gBAAgB,EAAE,CAACC,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAM,gCAAgC,GAA6B;AACjE,IAAA,IAAI,EACF,gHAAgH;AAClH,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEwB,6BAAqC;AAClD,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAErB,oBAA4B;AACzC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC7B,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACD,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAMR,kBAAgB,GAA6B;AACjD,IAAA,IAAI,EACF,uHAAuH;AACzH,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEiC,kBAA0B;AACvC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEtB,oBAA4B;AACzC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAE,IAAe;AAChB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACH,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAMN,6BAA2B,GAA6B;AAC5D,IAAA,IAAI,EACF,uHAAuH;AACzH,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAE+B,kBAA0B;AACvC,SAAA;AACD,QAAA,GAAG,EAAE;YACH,UAAU,EAAEA,kBAA0B;AACvC,SAAA;AACD,QAAA,GAAG,EAAE;YACH,UAAU,EAAEA,kBAA0B;AACvC,SAAA;AACD,QAAA,GAAG,EAAE;YACH,UAAU,EAAEA,kBAA0B;AACvC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEtB,oBAA4B;AACzC,SAAA;AACF,KAAA;IACD,WAAW,EAAEuB,mBAA8B;AAC3C,IAAA,eAAe,EAAE,CAACtB,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAE,IAAe;AAChB,KAAA;IACD,gBAAgB,EAAE,CAACH,MAAiB,EAAEK,WAAsB,CAAC;AAC7D,IAAA,SAAS,EAAE,MAAM;gBACjBZ,YAAU;CACX,CAAC;AACF,MAAMJ,qBAAmB,GAA6B;AACpD,IAAA,IAAI,EACF,uHAAuH;AACzH,IAAA,UAAU,EAAE,QAAQ;AACpB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,OAAO,EAAE;YACP,UAAU,EAAEO,oBAA4B;AACzC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAE,IAAe;AAChB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACH,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAMH,qBAAmB,GAA6B;AACpD,IAAA,IAAI,EACF,uHAAuH;AACzH,IAAA,UAAU,EAAE,OAAO;AACnB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAE4B,kBAA0B;AACvC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEtB,oBAA4B;AACzC,SAAA;AACF,KAAA;IACD,WAAW,EAAEwB,oBAA+B;AAC5C,IAAA,eAAe,EAAE,CAACvB,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAE,IAAe;AAChB,KAAA;IACD,gBAAgB,EAAE,CAACH,MAAiB,EAAEK,WAAsB,CAAC;AAC7D,IAAA,SAAS,EAAE,MAAM;gBACjBZ,YAAU;CACX,CAAC;AACF,MAAM,mCAAmC,GAA6B;AACpE,IAAA,IAAI,EAAE,YAAY;AAClB,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEwB,6BAAqC;AAClD,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAErB,oBAA4B;AACzC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAY,QAAmB;AACpB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACX,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAM,oCAAoC,GAA6B;AACrE,IAAA,IAAI,EAAE,YAAY;AAClB,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEwB,6BAAqC;AAClD,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAErB,oBAA4B;AACzC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAU,QAAmB;AACpB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACX,MAAiB,CAAC;gBACrCP,YAAU;CACX;;ACjlBD;;;;;;AAMG;AAwBH;AACA;MACa,gBAAgB,CAAA;AAG3B;;;AAGG;AACH,IAAA,WAAA,CAAY,MAA8B,EAAA;AACxC,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED;;;;;AAKG;AACI,IAAA,IAAI,CACT,iBAAyB,EACzB,sBAA8B,EAC9B,OAAwC,EAAA;AAExC,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAC7B,iBAAiB,EACjB,sBAAsB,EACtB,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI,GAAA;AACF,gBAAA,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC,GAAA;AACpB,gBAAA,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE,MAAK;gBACX,OAAO,IAAI,CAAC,cAAc,CACxB,iBAAiB,EACjB,sBAAsB,EACtB,OAAO,CACR,CAAC;aACH;SACF,CAAC;KACH;AAEc,IAAA,cAAc,CAC3B,iBAAyB,EACzB,sBAA8B,EAC9B,OAAwC,EAAA;;AAExC,YAAA,IAAI,MAAM,GAAG,MAAMb,aAAA,CAAA,IAAI,CAAC,KAAK,CAC3B,iBAAiB,EACjB,sBAAsB,EACtB,OAAO,CACR,CAAA,CAAC;AACF,YAAA,MAAA,MAAAA,aAAA,CAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;AACzB,YAAA,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;AACxC,YAAA,OAAO,iBAAiB,EAAE;AACxB,gBAAA,MAAM,GAAG,MAAAA,aAAA,CAAM,IAAI,CAAC,SAAS,CAC3B,iBAAiB,EACjB,sBAAsB,EACtB,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;AACF,gBAAA,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;AACpC,gBAAA,MAAA,MAAAA,aAAA,CAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;AAC1B,aAAA;SACF,CAAA,CAAA;AAAA,KAAA;AAEc,IAAA,aAAa,CAC1B,iBAAyB,EACzB,sBAA8B,EAC9B,OAAwC,EAAA;;;;AAExC,gBAAA,KAAyB,IAAA,EAAA,GAAAC,mBAAA,CAAA,IAAI,CAAC,cAAc,CAC1C,iBAAiB,EACjB,sBAAsB,EACtB,OAAO,CACR,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAAD,aAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,IAAA,GAAA;oBAJU,MAAM,IAAI,WAAA,CAAA;oBAKnB,MAAAA,aAAA,CAAA,OAAOE,sBAAA,CAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;AACb,iBAAA;;;;;;;;;SACF,CAAA,CAAA;AAAA,KAAA;AAED;;;;;AAKG;AACK,IAAA,KAAK,CACX,iBAAyB,EACzB,sBAA8B,EAC9B,OAAwC,EAAA;AAExC,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,sBAAsB,EAAE,OAAO,EAAE,EACtDwC,mBAAiB,CAClB,CAAC;KACH;AAED;;;;;;AAMG;AACH,IAAA,GAAG,CACD,iBAAyB,EACzB,sBAA8B,EAC9B,IAAY,EACZ,OAAuC,EAAA;AAEvC,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,sBAAsB,EAAE,IAAI,EAAE,OAAO,EAAE,EAC5DpC,kBAAgB,CACjB,CAAC;KACH;AAED;;;;;;AAMG;AACH,IAAA,cAAc,CACZ,iBAAyB,EACzB,sBAA8B,EAC9B,IAAY,EACZ,OAAkD,EAAA;AAElD,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,sBAAsB,EAAE,IAAI,EAAE,OAAO,EAAE,EAC5DE,6BAA2B,CAC5B,CAAC;KACH;AAED;;;;;;AAMG;AACH,IAAA,MAAM,CACJ,iBAAyB,EACzB,sBAA8B,EAC9B,IAAY,EACZ,OAA0C,EAAA;AAE1C,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,sBAAsB,EAAE,IAAI,EAAE,OAAO,EAAE,EAC5DE,qBAAmB,CACpB,CAAC;KACH;AAED;;;;;;;AAOG;IACH,MAAM,CACJ,iBAAyB,EACzB,sBAA8B,EAC9B,IAAY,EACZ,mBAAqC,EACrC,OAA0C,EAAA;AAE1C,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,sBAAsB;YACtB,IAAI;YACJ,mBAAmB;YACnB,OAAO;SACR,EACD,mBAAmB,CACpB,CAAC;KACH;AAED;;;;;;AAMG;AACK,IAAA,SAAS,CACf,iBAAyB,EACzB,sBAA8B,EAC9B,QAAgB,EAChB,OAA4C,EAAA;AAE5C,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,sBAAsB,EAAE,QAAQ,EAAE,OAAO,EAAE,EAChEiC,uBAAqB,CACtB,CAAC;KACH;AACF,CAAA;AACD;AACA,MAAM7B,YAAU,GAAGC,qBAAU,CAAC,gBAAgB,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAM2B,mBAAiB,GAA6B;AAClD,IAAA,IAAI,EACF,sJAAsJ;AACxJ,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEE,qBAA6B;AAC1C,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAE3B,oBAA4B;AACzC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAuB,sBAAiC;AAClC,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACxB,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAMR,kBAAgB,GAA6B;AACjD,IAAA,IAAI,EACF,6JAA6J;AAC/J,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEwC,WAAmB;AAChC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAE7B,oBAA4B;AACzC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAE,IAAe;AACf,QAAAqB,sBAAiC;AAClC,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACxB,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAMN,6BAA2B,GAA6B;AAC5D,IAAA,IAAI,EACF,6JAA6J;AAC/J,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEsC,WAAmB;AAChC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAE7B,oBAA4B;AACzC,SAAA;AACF,KAAA;IACD,WAAW,EAAE8B,mBAA8B;AAC3C,IAAA,eAAe,EAAE,CAAC7B,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAE,IAAe;AACf,QAAAqB,sBAAiC;AAClC,KAAA;IACD,gBAAgB,EAAE,CAACxB,MAAiB,EAAEK,WAAsB,CAAC;AAC7D,IAAA,SAAS,EAAE,MAAM;gBACjBZ,YAAU;CACX,CAAC;AACF,MAAMJ,qBAAmB,GAA6B;AACpD,IAAA,IAAI,EACF,6JAA6J;AAC/J,IAAA,UAAU,EAAE,QAAQ;AACpB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,OAAO,EAAE;YACP,UAAU,EAAEO,oBAA4B;AACzC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAE,IAAe;AACf,QAAAqB,sBAAiC;AAClC,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACxB,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAM,mBAAmB,GAA6B;AACpD,IAAA,IAAI,EACF,6JAA6J;AAC/J,IAAA,UAAU,EAAE,OAAO;AACnB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEgC,WAAmB;AAChC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAE7B,oBAA4B;AACzC,SAAA;AACF,KAAA;IACD,WAAW,EAAE+B,oBAA+B;AAC5C,IAAA,eAAe,EAAE,CAAC9B,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAE,IAAe;AACf,QAAAqB,sBAAiC;AAClC,KAAA;IACD,gBAAgB,EAAE,CAACxB,MAAiB,EAAEK,WAAsB,CAAC;AAC7D,IAAA,SAAS,EAAE,MAAM;gBACjBZ,YAAU;CACX,CAAC;AACF,MAAM6B,uBAAqB,GAA6B;AACtD,IAAA,IAAI,EAAE,YAAY;AAClB,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEC,qBAA6B;AAC1C,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAE3B,oBAA4B;AACzC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAU,QAAmB;AACnB,QAAAa,sBAAiC;AAClC,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACxB,MAAiB,CAAC;gBACrCP,YAAU;CACX;;ACvXD;;;;;;AAMG;AAgBH;AACA;MACa,cAAc,CAAA;AAGzB;;;AAGG;AACH,IAAA,WAAA,CAAY,MAA8B,EAAA;AACxC,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED;;;AAGG;AACI,IAAA,IAAI,CACT,OAAsC,EAAA;QAEtC,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QACzC,OAAO;YACL,IAAI,GAAA;AACF,gBAAA,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC,GAAA;AACpB,gBAAA,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE,MAAK;AACX,gBAAA,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;aACrC;SACF,CAAC;KACH;AAEc,IAAA,cAAc,CAC3B,OAAsC,EAAA;;YAEtC,IAAI,MAAM,GAAG,MAAAb,aAAA,CAAM,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAA,CAAC;AACvC,YAAA,MAAA,MAAAA,aAAA,CAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;AACzB,YAAA,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;AACxC,YAAA,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,MAAMA,aAAA,CAAA,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;AAC1D,gBAAA,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;AACpC,gBAAA,MAAA,MAAAA,aAAA,CAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;AAC1B,aAAA;SACF,CAAA,CAAA;AAAA,KAAA;AAEc,IAAA,aAAa,CAC1B,OAAsC,EAAA;;;;gBAEtC,KAAyB,IAAA,EAAA,GAAAC,mBAAA,CAAA,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAAD,aAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,IAAA,GAAA;oBAA1C,MAAM,IAAI,WAAA,CAAA;oBACnB,MAAAA,aAAA,CAAA,OAAOE,sBAAA,CAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;AACb,iBAAA;;;;;;;;;SACF,CAAA,CAAA;AAAA,KAAA;AAED;;;AAGG;AACK,IAAA,KAAK,CACX,OAAsC,EAAA;AAEtC,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,EAAE,OAAO,EAAE,EAAEwC,mBAAiB,CAAC,CAAC;KACzE;AAED;;;;AAIG;IACK,SAAS,CACf,QAAgB,EAChB,OAA0C,EAAA;AAE1C,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,OAAO,EAAE,EACrBC,uBAAqB,CACtB,CAAC;KACH;AACF,CAAA;AACD;AACA,MAAM7B,YAAU,GAAGC,qBAAU,CAAC,gBAAgB,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAM2B,mBAAiB,GAA6B;AAClD,IAAA,IAAI,EAAE,qCAAqC;AAC3C,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEO,mBAA2B;AACxC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEhC,oBAA4B;AACzC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE,CAACC,KAAgB,CAAC;AACjC,IAAA,gBAAgB,EAAE,CAACE,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAM6B,uBAAqB,GAA6B;AACtD,IAAA,IAAI,EAAE,YAAY;AAClB,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEM,mBAA2B;AACxC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEhC,oBAA4B;AACzC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE,CAACC,KAAgB,EAAEa,QAAmB,CAAC;AACtD,IAAA,gBAAgB,EAAE,CAACX,MAAiB,CAAC;gBACrCP,YAAU;CACX;;ACxID;;;;;;AAMG;AAuBH;AACA;MACa,+BAA+B,CAAA;AAI1C;;;AAGG;AACH,IAAA,WAAA,CAAY,MAA8B,EAAA;AACxC,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED;;;;;AAKG;AACI,IAAA,kBAAkB,CACvB,iBAAyB,EACzB,gBAAwB,EACxB,OAAqE,EAAA;AAErE,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,2BAA2B,CAC3C,iBAAiB,EACjB,gBAAgB,EAChB,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI,GAAA;AACF,gBAAA,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC,GAAA;AACpB,gBAAA,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE,MAAK;gBACX,OAAO,IAAI,CAAC,4BAA4B,CACtC,iBAAiB,EACjB,gBAAgB,EAChB,OAAO,CACR,CAAC;aACH;SACF,CAAC;KACH;AAEc,IAAA,4BAA4B,CACzC,iBAAyB,EACzB,gBAAwB,EACxB,OAAqE,EAAA;;AAErE,YAAA,IAAI,MAAM,GAAG,MAAMb,aAAA,CAAA,IAAI,CAAC,mBAAmB,CACzC,iBAAiB,EACjB,gBAAgB,EAChB,OAAO,CACR,CAAA,CAAC;AACF,YAAA,MAAA,MAAAA,aAAA,CAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;AACzB,YAAA,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;AACxC,YAAA,OAAO,iBAAiB,EAAE;AACxB,gBAAA,MAAM,GAAG,MAAAA,aAAA,CAAM,IAAI,CAAC,uBAAuB,CACzC,iBAAiB,EACjB,gBAAgB,EAChB,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;AACF,gBAAA,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;AACpC,gBAAA,MAAA,MAAAA,aAAA,CAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;AAC1B,aAAA;SACF,CAAA,CAAA;AAAA,KAAA;AAEc,IAAA,2BAA2B,CACxC,iBAAyB,EACzB,gBAAwB,EACxB,OAAqE,EAAA;;;;AAErE,gBAAA,KAAyB,IAAA,EAAA,GAAAC,mBAAA,CAAA,IAAI,CAAC,4BAA4B,CACxD,iBAAiB,EACjB,gBAAgB,EAChB,OAAO,CACR,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAAD,aAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,IAAA,GAAA;oBAJU,MAAM,IAAI,WAAA,CAAA;oBAKnB,MAAAA,aAAA,CAAA,OAAOE,sBAAA,CAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;AACb,iBAAA;;;;;;;;;SACF,CAAA,CAAA;AAAA,KAAA;AAED;;;;;AAKG;AACK,IAAA,mBAAmB,CACzB,iBAAyB,EACzB,gBAAwB,EACxB,OAAqE,EAAA;AAErE,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,OAAO,EAAE,EAChDgD,iCAA+B,CAChC,CAAC;KACH;AAED;;;;;;AAMG;AACH,IAAA,GAAG,CACD,iBAAyB,EACzB,gBAAwB,EACxB,IAAY,EACZ,OAAsD,EAAA;AAEtD,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,IAAI,EAAE,OAAO,EAAE,EACtD5C,kBAAgB,CACjB,CAAC;KACH;AAED;;;;;;;AAOG;IACG,mBAAmB,CACvB,iBAAyB,EACzB,gBAAwB,EACxB,IAAY,EACZ,qBAAoC,EACpC,OAAiE,EAAA;;AAOjE,YAAA,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B,KACgCC,eAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;gBAC9D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACtD,aAAC,CAAA,CAAC;AACF,YAAA,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B,KAC5BA,eAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;;gBACF,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,UAAU,CAAC;AAClD,gBAAA,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,KACnB;oBACF,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,KAAA,IAAA,IAAhB,gBAAgB,KAAhB,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;AAChD,iBAAC,CAAC;AACF,gBAAA,MAAM,WAAW,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACZ,IAAI,CAAA,EAAA,EACP,OAAO,EACF,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,IAAI,CAAC,OAAO,CACf,EAAA,EAAA,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;AACZ,oBAAA,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;AACpC,wBAAA,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;AAC9C,qBAAA;iBACF,CAAC;AACJ,aAAC,CAAA,CAAC;AAEF,YAAA,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb;gBACE,iBAAiB;gBACjB,gBAAgB;gBAChB,IAAI;gBACJ,qBAAqB;gBACrB,OAAO;aACR,EACDC,6BAA2B,CAC5B,CAAC;AACF,YAAA,MAAM,MAAM,GAAG,IAAIC,iBAAS,CAAC,GAAG,EAAE;AAChC,gBAAA,UAAU,EAAE,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,UAAU;AAC/B,gBAAA,YAAY,EAAE,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,kBAAkB;AAC1C,aAAA,CAAC,CAAC;AACH,YAAA,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;AACpB,YAAA,OAAO,MAAM,CAAC;SACf,CAAA,CAAA;AAAA,KAAA;AAED;;;;;;;AAOG;IACG,0BAA0B,CAC9B,iBAAyB,EACzB,gBAAwB,EACxB,IAAY,EACZ,qBAAoC,EACpC,OAAiE,EAAA;;AAEjE,YAAA,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAC3C,iBAAiB,EACjB,gBAAgB,EAChB,IAAI,EACJ,qBAAqB,EACrB,OAAO,CACR,CAAC;AACF,YAAA,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B,CAAA,CAAA;AAAA,KAAA;AAED;;;;;;AAMG;AACG,IAAA,WAAW,CACf,iBAAyB,EACzB,gBAAwB,EACxB,IAAY,EACZ,OAAyD,EAAA;;AAEzD,YAAA,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B,KACbF,eAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;gBACjB,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACtD,aAAC,CAAA,CAAC;AACF,YAAA,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B,KAC5BA,eAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;;gBACF,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,UAAU,CAAC;AAClD,gBAAA,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,KACnB;oBACF,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,KAAA,IAAA,IAAhB,gBAAgB,KAAhB,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;AAChD,iBAAC,CAAC;AACF,gBAAA,MAAM,WAAW,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACZ,IAAI,CAAA,EAAA,EACP,OAAO,EACF,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,IAAI,CAAC,OAAO,CACf,EAAA,EAAA,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;AACZ,oBAAA,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;AACpC,wBAAA,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;AAC9C,qBAAA;iBACF,CAAC;AACJ,aAAC,CAAA,CAAC;AAEF,YAAA,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,IAAI,EAAE,OAAO,EAAE,EACtDG,qBAAmB,CACpB,CAAC;AACF,YAAA,MAAM,MAAM,GAAG,IAAID,iBAAS,CAAC,GAAG,EAAE;AAChC,gBAAA,UAAU,EAAE,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,UAAU;AAC/B,gBAAA,YAAY,EAAE,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,kBAAkB;AAC1C,aAAA,CAAC,CAAC;AACH,YAAA,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;AACpB,YAAA,OAAO,MAAM,CAAC;SACf,CAAA,CAAA;AAAA,KAAA;AAED;;;;;;AAMG;AACG,IAAA,kBAAkB,CACtB,iBAAyB,EACzB,gBAAwB,EACxB,IAAY,EACZ,OAAyD,EAAA;;AAEzD,YAAA,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,gBAAgB,EAChB,IAAI,EACJ,OAAO,CACR,CAAC;AACF,YAAA,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B,CAAA,CAAA;AAAA,KAAA;AAED;;;;;;AAMG;AACK,IAAA,uBAAuB,CAC7B,iBAAyB,EACzB,gBAAwB,EACxB,QAAgB,EAChB,OAAyE,EAAA;AAEzE,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC1D0C,qCAAmC,CACpC,CAAC;KACH;AACF,CAAA;AACD;AACA,MAAMrC,YAAU,GAAGC,qBAAU,CAAC,gBAAgB,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMmC,iCAA+B,GAA6B;AAChE,IAAA,IAAI,EACF,4IAA4I;AAC9I,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEE,uBAA+B;AAC5C,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEnC,oBAA4B;AACzC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAQ,gBAA2B;AAC5B,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACT,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAMR,kBAAgB,GAA6B;AACjD,IAAA,IAAI,EACF,mJAAmJ;AACrJ,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAE+C,aAAqB;AAClC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEpC,oBAA4B;AACzC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAE,IAAe;AACf,QAAAM,gBAA2B;AAC5B,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACT,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAMN,6BAA2B,GAA6B;AAC5D,IAAA,IAAI,EACF,mJAAmJ;AACrJ,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAE6C,aAAqB;AAClC,SAAA;AACD,QAAA,GAAG,EAAE;YACH,UAAU,EAAEA,aAAqB;AAClC,SAAA;AACD,QAAA,GAAG,EAAE;YACH,UAAU,EAAEA,aAAqB;AAClC,SAAA;AACD,QAAA,GAAG,EAAE;YACH,UAAU,EAAEA,aAAqB;AAClC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEpC,oBAA4B;AACzC,SAAA;AACF,KAAA;IACD,WAAW,EAAEqC,qBAAgC;AAC7C,IAAA,eAAe,EAAE,CAACpC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAE,IAAe;AACf,QAAAM,gBAA2B;AAC5B,KAAA;IACD,gBAAgB,EAAE,CAACT,MAAiB,EAAEK,WAAsB,CAAC;AAC7D,IAAA,SAAS,EAAE,MAAM;gBACjBZ,YAAU;CACX,CAAC;AACF,MAAMJ,qBAAmB,GAA6B;AACpD,IAAA,IAAI,EACF,mJAAmJ;AACrJ,IAAA,UAAU,EAAE,QAAQ;AACpB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,OAAO,EAAE;YACP,UAAU,EAAEO,oBAA4B;AACzC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAE,IAAe;AACf,QAAAM,gBAA2B;AAC5B,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACT,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAMqC,qCAAmC,GAA6B;AACpE,IAAA,IAAI,EAAE,YAAY;AAClB,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEC,uBAA+B;AAC5C,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEnC,oBAA4B;AACzC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAQ,gBAA2B;AAC3B,QAAAE,QAAmB;AACpB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACX,MAAiB,CAAC;gBACrCP,YAAU;CACX;;ACteD;;;;;;AAMG;AAqBH;AACA;MACa,kBAAkB,CAAA;AAG7B;;;AAGG;AACH,IAAA,WAAA,CAAY,MAA8B,EAAA;AACxC,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED;;;;;AAKG;AACI,IAAA,IAAI,CACT,iBAAyB,EACzB,eAAuB,EACvB,OAA0C,EAAA;AAE1C,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAC7B,iBAAiB,EACjB,eAAe,EACf,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI,GAAA;AACF,gBAAA,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC,GAAA;AACpB,gBAAA,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE,MAAK;gBACX,OAAO,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,eAAe,EAAE,OAAO,CAAC,CAAC;aACzE;SACF,CAAC;KACH;AAEc,IAAA,cAAc,CAC3B,iBAAyB,EACzB,eAAuB,EACvB,OAA0C,EAAA;;AAE1C,YAAA,IAAI,MAAM,GAAG,MAAMb,aAAA,CAAA,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE,eAAe,EAAE,OAAO,CAAC,CAAA,CAAC;AAC3E,YAAA,MAAA,MAAAA,aAAA,CAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;AACzB,YAAA,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;AACxC,YAAA,OAAO,iBAAiB,EAAE;AACxB,gBAAA,MAAM,GAAG,MAAAA,aAAA,CAAM,IAAI,CAAC,SAAS,CAC3B,iBAAiB,EACjB,eAAe,EACf,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;AACF,gBAAA,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;AACpC,gBAAA,MAAA,MAAAA,aAAA,CAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;AAC1B,aAAA;SACF,CAAA,CAAA;AAAA,KAAA;AAEc,IAAA,aAAa,CAC1B,iBAAyB,EACzB,eAAuB,EACvB,OAA0C,EAAA;;;;AAE1C,gBAAA,KAAyB,IAAA,EAAA,GAAAC,mBAAA,CAAA,IAAI,CAAC,cAAc,CAC1C,iBAAiB,EACjB,eAAe,EACf,OAAO,CACR,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAAD,aAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,IAAA,GAAA;oBAJU,MAAM,IAAI,WAAA,CAAA;oBAKnB,MAAAA,aAAA,CAAA,OAAOE,sBAAA,CAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;AACb,iBAAA;;;;;;;;;SACF,CAAA,CAAA;AAAA,KAAA;AAED;;;;;AAKG;AACK,IAAA,KAAK,CACX,iBAAyB,EACzB,eAAuB,EACvB,OAA0C,EAAA;AAE1C,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,eAAe,EAAE,OAAO,EAAE,EAC/CwC,mBAAiB,CAClB,CAAC;KACH;AAED;;;;;;AAMG;AACH,IAAA,GAAG,CACD,iBAAyB,EACzB,eAAuB,EACvB,IAAY,EACZ,OAAyC,EAAA;AAEzC,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,eAAe,EAAE,IAAI,EAAE,OAAO,EAAE,EACrDpC,kBAAgB,CACjB,CAAC;KACH;AAED;;;;;;;AAOG;IACH,cAAc,CACZ,iBAAyB,EACzB,eAAuB,EACvB,IAAY,EACZ,qBAAoC,EACpC,OAAoD,EAAA;AAEpD,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,eAAe;YACf,IAAI;YACJ,qBAAqB;YACrB,OAAO;SACR,EACDE,6BAA2B,CAC5B,CAAC;KACH;AAED;;;;;;AAMG;AACH,IAAA,MAAM,CACJ,iBAAyB,EACzB,eAAuB,EACvB,IAAY,EACZ,OAA4C,EAAA;AAE5C,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,eAAe,EAAE,IAAI,EAAE,OAAO,EAAE,EACrDE,qBAAmB,CACpB,CAAC;KACH;AAED;;;;;;AAMG;AACK,IAAA,SAAS,CACf,iBAAyB,EACzB,eAAuB,EACvB,QAAgB,EAChB,OAA8C,EAAA;AAE9C,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,eAAe,EAAE,QAAQ,EAAE,OAAO,EAAE,EACzD,qBAAqB,CACtB,CAAC;KACH;AACF,CAAA;AACD;AACA,MAAMI,YAAU,GAAGC,qBAAU,CAAC,gBAAgB,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAM2B,mBAAiB,GAA6B;AAClD,IAAA,IAAI,EACF,iJAAiJ;AACnJ,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEa,wBAAgC;AAC7C,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEtC,oBAA4B;AACzC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAkC,eAA0B;AAC3B,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACnC,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAMR,kBAAgB,GAA6B;AACjD,IAAA,IAAI,EACF,wJAAwJ;AAC1J,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEmD,aAAqB;AAClC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAExC,oBAA4B;AACzC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAE,IAAe;AACf,QAAAgC,eAA0B;AAC3B,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACnC,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAMN,6BAA2B,GAA6B;AAC5D,IAAA,IAAI,EACF,wJAAwJ;AAC1J,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEiD,aAAqB;AAClC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAExC,oBAA4B;AACzC,SAAA;AACF,KAAA;IACD,WAAW,EAAEyC,qBAAgC;AAC7C,IAAA,eAAe,EAAE,CAACxC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAE,IAAe;AACf,QAAAgC,eAA0B;AAC3B,KAAA;IACD,gBAAgB,EAAE,CAACnC,MAAiB,EAAEK,WAAsB,CAAC;AAC7D,IAAA,SAAS,EAAE,MAAM;gBACjBZ,YAAU;CACX,CAAC;AACF,MAAMJ,qBAAmB,GAA6B;AACpD,IAAA,IAAI,EACF,wJAAwJ;AAC1J,IAAA,UAAU,EAAE,QAAQ;AACpB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,OAAO,EAAE;YACP,UAAU,EAAEO,oBAA4B;AACzC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAE,IAAe;AACf,QAAAgC,eAA0B;AAC3B,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACnC,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAM,qBAAqB,GAA6B;AACtD,IAAA,IAAI,EAAE,YAAY;AAClB,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEyC,wBAAgC;AAC7C,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAEtC,oBAA4B;AACzC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAU,QAAmB;AACnB,QAAAwB,eAA0B;AAC3B,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACnC,MAAiB,CAAC;gBACrCP,YAAU;CACX;;AChUD;;;;;;AAMG;AAqBH;AACA;MACa,4BAA4B,CAAA;AAGvC;;;AAGG;AACH,IAAA,WAAA,CAAY,MAA8B,EAAA;AACxC,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED;;;;;AAKG;AACI,IAAA,kBAAkB,CACvB,iBAAyB,EACzB,gBAAwB,EACxB,OAAkE,EAAA;AAElE,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,2BAA2B,CAC3C,iBAAiB,EACjB,gBAAgB,EAChB,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI,GAAA;AACF,gBAAA,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC,GAAA;AACpB,gBAAA,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE,MAAK;gBACX,OAAO,IAAI,CAAC,4BAA4B,CACtC,iBAAiB,EACjB,gBAAgB,EAChB,OAAO,CACR,CAAC;aACH;SACF,CAAC;KACH;AAEc,IAAA,4BAA4B,CACzC,iBAAyB,EACzB,gBAAwB,EACxB,OAAkE,EAAA;;AAElE,YAAA,IAAI,MAAM,GAAG,MAAMb,aAAA,CAAA,IAAI,CAAC,mBAAmB,CACzC,iBAAiB,EACjB,gBAAgB,EAChB,OAAO,CACR,CAAA,CAAC;AACF,YAAA,MAAA,MAAAA,aAAA,CAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;AACzB,YAAA,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;AACxC,YAAA,OAAO,iBAAiB,EAAE;AACxB,gBAAA,MAAM,GAAG,MAAAA,aAAA,CAAM,IAAI,CAAC,uBAAuB,CACzC,iBAAiB,EACjB,gBAAgB,EAChB,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;AACF,gBAAA,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;AACpC,gBAAA,MAAA,MAAAA,aAAA,CAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;AAC1B,aAAA;SACF,CAAA,CAAA;AAAA,KAAA;AAEc,IAAA,2BAA2B,CACxC,iBAAyB,EACzB,gBAAwB,EACxB,OAAkE,EAAA;;;;AAElE,gBAAA,KAAyB,IAAA,EAAA,GAAAC,mBAAA,CAAA,IAAI,CAAC,4BAA4B,CACxD,iBAAiB,EACjB,gBAAgB,EAChB,OAAO,CACR,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAAD,aAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,IAAA,GAAA;oBAJU,MAAM,IAAI,WAAA,CAAA;oBAKnB,MAAAA,aAAA,CAAA,OAAOE,sBAAA,CAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;AACb,iBAAA;;;;;;;;;SACF,CAAA,CAAA;AAAA,KAAA;AAED;;;;;AAKG;AACK,IAAA,mBAAmB,CACzB,iBAAyB,EACzB,gBAAwB,EACxB,OAAkE,EAAA;AAElE,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,OAAO,EAAE,EAChD,+BAA+B,CAChC,CAAC;KACH;AAED;;;;;;AAMG;AACH,IAAA,GAAG,CACD,iBAAyB,EACzB,gBAAwB,EACxB,IAAY,EACZ,OAAmD,EAAA;AAEnD,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,IAAI,EAAE,OAAO,EAAE,EACtDI,kBAAgB,CACjB,CAAC;KACH;AAED;;;;;;;AAOG;IACH,cAAc,CACZ,iBAAyB,EACzB,gBAAwB,EACxB,IAAY,EACZ,kBAA8B,EAC9B,OAA8D,EAAA;AAE9D,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,gBAAgB;YAChB,IAAI;YACJ,kBAAkB;YAClB,OAAO;SACR,EACDE,6BAA2B,CAC5B,CAAC;KACH;AAED;;;;;;AAMG;AACH,IAAA,MAAM,CACJ,iBAAyB,EACzB,gBAAwB,EACxB,IAAY,EACZ,OAAsD,EAAA;AAEtD,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,IAAI,EAAE,OAAO,EAAE,EACtDE,qBAAmB,CACpB,CAAC;KACH;AAED;;;;;;AAMG;AACK,IAAA,uBAAuB,CAC7B,iBAAyB,EACzB,gBAAwB,EACxB,QAAgB,EAChB,OAAsE,EAAA;AAEtE,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC1D,mCAAmC,CACpC,CAAC;KACH;AACF,CAAA;AACD;AACA,MAAMI,YAAU,GAAGC,qBAAU,CAAC,gBAAgB,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAM,+BAA+B,GAA6B;AAChE,IAAA,IAAI,EACF,yIAAyI;AAC3I,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAE4C,oBAA4B;AACzC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAE1C,oBAA4B;AACzC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAQ,gBAA2B;AAC5B,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACT,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAMR,kBAAgB,GAA6B;AACjD,IAAA,IAAI,EACF,gJAAgJ;AAClJ,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEsD,UAAkB;AAC/B,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAE3C,oBAA4B;AACzC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAE,IAAe;AACf,QAAAM,gBAA2B;AAC5B,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACT,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAMN,6BAA2B,GAA6B;AAC5D,IAAA,IAAI,EACF,gJAAgJ;AAClJ,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAEoD,UAAkB;AAC/B,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAE3C,oBAA4B;AACzC,SAAA;AACF,KAAA;IACD,WAAW,EAAE4C,kBAA6B;AAC1C,IAAA,eAAe,EAAE,CAAC3C,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAE,IAAe;AACf,QAAAM,gBAA2B;AAC5B,KAAA;IACD,gBAAgB,EAAE,CAACT,MAAiB,EAAEK,WAAsB,CAAC;AAC7D,IAAA,SAAS,EAAE,MAAM;gBACjBZ,YAAU;CACX,CAAC;AACF,MAAMJ,qBAAmB,GAA6B;AACpD,IAAA,IAAI,EACF,gJAAgJ;AAClJ,IAAA,UAAU,EAAE,QAAQ;AACpB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,OAAO,EAAE;YACP,UAAU,EAAEO,oBAA4B;AACzC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAE,IAAe;AACf,QAAAM,gBAA2B;AAC5B,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACT,MAAiB,CAAC;gBACrCP,YAAU;CACX,CAAC;AACF,MAAM,mCAAmC,GAA6B;AACpE,IAAA,IAAI,EAAE,YAAY;AAClB,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAE6C,oBAA4B;AACzC,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAE1C,oBAA4B;AACzC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAQ,gBAA2B;AAC3B,QAAAE,QAAmB;AACpB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAACX,MAAiB,CAAC;gBACrCP,YAAU;CACX;;ACxUD;;;;;;AAMG;AAkBH;MACa,+BAA+B,CAAA;AAI1C;;;AAGG;AACH,IAAA,WAAA,CAAY,MAA8B,EAAA;AACxC,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED;;;;;AAKG;AACH,IAAA,IAAI,CACF,iBAAyB,EACzB,OAAe,EACf,OAAuD,EAAA;AAEvD,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,OAAO,EAAE,OAAO,EAAE,EACvC,iBAAiB,CAClB,CAAC;KACH;AAED;;;;;;AAMG;AACH,IAAA,GAAG,CACD,iBAAyB,EACzB,OAAe,EACf,IAAY,EACZ,OAAsD,EAAA;AAEtD,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,EAC7C,gBAAgB,CACjB,CAAC;KACH;AAED;;;;;;;AAOG;IACH,cAAc,CACZ,iBAAyB,EACzB,OAAe,EACf,IAAY,EACZ,eAA0C,EAC1C,OAAiE,EAAA;QAEjE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,OAAO,EAAE,IAAI,EAAE,eAAe,EAAE,OAAO,EAAE,EAC9D,2BAA2B,CAC5B,CAAC;KACH;AAED;;;;;;AAMG;AACH,IAAA,MAAM,CACJ,iBAAyB,EACzB,OAAe,EACf,IAAY,EACZ,OAAyD,EAAA;AAEzD,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,EAC7C,mBAAmB,CACpB,CAAC;KACH;AACF,CAAA;AACD;AACA,MAAM,UAAU,GAAGC,qBAAU,CAAC,gBAAgB,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAM,iBAAiB,GAA6B;AAClD,IAAA,IAAI,EACF,mIAAmI;AACrI,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAE+C,oCAA4C;AACzD,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAE7C,oBAA4B;AACzC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAyC,OAAkB;AACnB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAAC1C,MAAiB,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,gBAAgB,GAA6B;AACjD,IAAA,IAAI,EACF,0IAA0I;AAC5I,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAE2C,yBAAiC;AAC9C,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAE/C,oBAA4B;AACzC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAE,IAAe;AACf,QAAAuC,OAAkB;AACnB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAAC1C,MAAiB,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,2BAA2B,GAA6B;AAC5D,IAAA,IAAI,EACF,0IAA0I;AAC5I,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE;YACH,UAAU,EAAE2C,yBAAiC;AAC9C,SAAA;AACD,QAAA,OAAO,EAAE;YACP,UAAU,EAAE/C,oBAA4B;AACzC,SAAA;AACF,KAAA;IACD,WAAW,EAAEgD,eAA0B;AACvC,IAAA,eAAe,EAAE,CAAC/C,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAE,IAAe;AACf,QAAAuC,OAAkB;AACnB,KAAA;IACD,gBAAgB,EAAE,CAAC1C,MAAiB,EAAEK,WAAsB,CAAC;AAC7D,IAAA,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,mBAAmB,GAA6B;AACpD,IAAA,IAAI,EACF,0IAA0I;AAC5I,IAAA,UAAU,EAAE,QAAQ;AACpB,IAAA,SAAS,EAAE;AACT,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,GAAG,EAAE,EAAE;AACP,QAAA,OAAO,EAAE;YACP,UAAU,EAAET,oBAA4B;AACzC,SAAA;AACF,KAAA;AACD,IAAA,eAAe,EAAE,CAACC,UAAqB,CAAC;AACxC,IAAA,aAAa,EAAE;AACb,QAAAC,KAAgB;AAChB,QAAAC,cAAyB;AACzB,QAAAE,iBAA4B;AAC5B,QAAAE,IAAe;AACf,QAAAuC,OAAkB;AACnB,KAAA;AACD,IAAA,gBAAgB,EAAE,CAAC1C,MAAiB,CAAC;IACrC,UAAU;CACX;;AC/MD;;;;;;AAMG;AA8BU,MAAA,sBAAuB,SAAQN,qBAAU,CAAC,aAAa,CAAA;AAKlE;;;;;AAKG;AACH,IAAA,WAAA,CACE,WAAqC,EACrC,cAAsB,EACtB,OAA8C,EAAA;;QAE9C,IAAI,WAAW,KAAK,SAAS,EAAE;AAC7B,YAAA,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;AACjD,SAAA;QACD,IAAI,cAAc,KAAK,SAAS,EAAE;AAChC,YAAA,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;AACpD,SAAA;;QAGD,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO,GAAG,EAAE,CAAC;AACd,SAAA;AACD,QAAA,MAAM,QAAQ,GAAyC;AACrD,YAAA,kBAAkB,EAAE,iCAAiC;AACrD,YAAA,UAAU,EAAE,WAAW;SACxB,CAAC;QAEF,MAAM,cAAc,GAAG,CAAA,6BAAA,CAA+B,CAAC;QACvD,MAAM,eAAe,GACnB,OAAO,CAAC,gBAAgB,IAAI,OAAO,CAAC,gBAAgB,CAAC,eAAe;cAChE,GAAG,OAAO,CAAC,gBAAgB,CAAC,eAAe,CAAI,CAAA,EAAA,cAAc,CAAE,CAAA;AACjE,cAAE,CAAA,EAAG,cAAc,CAAA,CAAE,CAAC;AAE1B,QAAA,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE;AAC7B,YAAA,OAAO,CAAC,gBAAgB,GAAG,CAAC,uCAAuC,CAAC,CAAC;AACtE,SAAA;AACD,QAAA,MAAM,mBAAmB,GACpB,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,QAAQ,GACR,OAAO,CAAA,EAAA,EACV,gBAAgB,EAAE;gBAChB,eAAe;AAChB,aAAA,EACD,OAAO,EACL,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,OAAO,CAAC,QAAQ,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,OAAO,CAAC,OAAO,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,8BAA8B,GACxE,CAAC;QACF,KAAK,CAAC,mBAAmB,CAAC,CAAC;;AAE3B,QAAA,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;;QAGrC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,IAAI,8BAA8B,CAAC;QAC7D,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,IAAI,oBAAoB,CAAC;QAC7D,IAAI,CAAC,aAAa,GAAG,IAAI,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACjD,IAAI,CAAC,sBAAsB,GAAG,IAAI,0BAA0B,CAAC,IAAI,CAAC,CAAC;QACnE,IAAI,CAAC,6BAA6B,GAAG,IAAI,iCAAiC,CACxE,IAAI,CACL,CAAC;QACF,IAAI,CAAC,mBAAmB,GAAG,IAAI,uBAAuB,CAAC,IAAI,CAAC,CAAC;QAC7D,IAAI,CAAC,YAAY,GAAG,IAAI,gBAAgB,CAAC,IAAI,CAAC,CAAC;QAC/C,IAAI,CAAC,UAAU,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,CAAC;QAC3C,IAAI,CAAC,2BAA2B,GAAG,IAAI,+BAA+B,CACpE,IAAI,CACL,CAAC;QACF,IAAI,CAAC,cAAc,GAAG,IAAI,kBAAkB,CAAC,IAAI,CAAC,CAAC;QACnD,IAAI,CAAC,wBAAwB,GAAG,IAAI,4BAA4B,CAAC,IAAI,CAAC,CAAC;QACvE,IAAI,CAAC,2BAA2B,GAAG,IAAI,+BAA+B,CACpE,IAAI,CACL,CAAC;KACH;AAYF;;;;"}