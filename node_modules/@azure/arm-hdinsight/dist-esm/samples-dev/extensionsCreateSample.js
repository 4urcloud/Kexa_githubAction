/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { HDInsightManagementClient } from "@azure/arm-hdinsight";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Creates an HDInsight cluster extension.
 *
 * @summary Creates an HDInsight cluster extension.
 * x-ms-original-file: specification/hdinsight/resource-manager/Microsoft.HDInsight/stable/2021-06-01/examples/CreateExtension.json
 */
function createAMonitoringExtensionOnHadoopLinuxCluster() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["HDINSIGHT_SUBSCRIPTION_ID"] || "subid";
        const resourceGroupName = process.env["HDINSIGHT_RESOURCE_GROUP"] || "rg1";
        const clusterName = "cluster1";
        const extensionName = "clustermonitoring";
        const parameters = {
            primaryKey: "**********",
            workspaceId: "a2090ead-8c9f-4fba-b70e-533e3e003163"
        };
        const credential = new DefaultAzureCredential();
        const client = new HDInsightManagementClient(credential, subscriptionId);
        const result = yield client.extensions.beginCreateAndWait(resourceGroupName, clusterName, extensionName, parameters);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        createAMonitoringExtensionOnHadoopLinuxCluster();
    });
}
main().catch(console.error);
//# sourceMappingURL=extensionsCreateSample.js.map