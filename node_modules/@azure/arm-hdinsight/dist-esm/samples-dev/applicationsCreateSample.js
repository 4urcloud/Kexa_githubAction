/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { HDInsightManagementClient } from "@azure/arm-hdinsight";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Creates applications for the HDInsight cluster.
 *
 * @summary Creates applications for the HDInsight cluster.
 * x-ms-original-file: specification/hdinsight/resource-manager/Microsoft.HDInsight/stable/2021-06-01/examples/CreateApplication.json
 */
function createApplication() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["HDINSIGHT_SUBSCRIPTION_ID"] || "subid";
        const resourceGroupName = process.env["HDINSIGHT_RESOURCE_GROUP"] || "rg1";
        const clusterName = "cluster1";
        const applicationName = "hue";
        const parameters = {
            properties: {
                applicationType: "CustomApplication",
                computeProfile: {
                    roles: [
                        {
                            name: "edgenode",
                            hardwareProfile: { vmSize: "Standard_D12_v2" },
                            targetInstanceCount: 1
                        }
                    ]
                },
                errors: [],
                httpsEndpoints: [
                    {
                        accessModes: ["WebPage"],
                        destinationPort: 20000,
                        subDomainSuffix: "dss"
                    }
                ],
                installScriptActions: [
                    {
                        name: "app-install-app1",
                        parameters: "-version latest -port 20000",
                        roles: ["edgenode"],
                        uri: "https://.../install.sh"
                    }
                ],
                uninstallScriptActions: []
            }
        };
        const credential = new DefaultAzureCredential();
        const client = new HDInsightManagementClient(credential, subscriptionId);
        const result = yield client.applications.beginCreateAndWait(resourceGroupName, clusterName, applicationName, parameters);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        createApplication();
    });
}
main().catch(console.error);
//# sourceMappingURL=applicationsCreateSample.js.map