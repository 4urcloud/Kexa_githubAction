/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { HDInsightManagementClient } from "@azure/arm-hdinsight";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Executes script actions on the specified HDInsight cluster.
 *
 * @summary Executes script actions on the specified HDInsight cluster.
 * x-ms-original-file: specification/hdinsight/resource-manager/Microsoft.HDInsight/stable/2021-06-01/examples/PostExecuteScriptAction.json
 */
function executeScriptActionOnHdInsightCluster() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["HDINSIGHT_SUBSCRIPTION_ID"] || "subid";
        const resourceGroupName = process.env["HDINSIGHT_RESOURCE_GROUP"] || "rg1";
        const clusterName = "cluster1";
        const parameters = {
            persistOnSuccess: false,
            scriptActions: [
                {
                    name: "Test",
                    parameters: "",
                    roles: ["headnode", "workernode"],
                    uri: "http://testurl.com/install.ssh"
                }
            ]
        };
        const credential = new DefaultAzureCredential();
        const client = new HDInsightManagementClient(credential, subscriptionId);
        const result = yield client.clusters.beginExecuteScriptActionsAndWait(resourceGroupName, clusterName, parameters);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        executeScriptActionOnHdInsightCluster();
    });
}
main().catch(console.error);
//# sourceMappingURL=clustersExecuteScriptActionsSample.js.map