/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
/** Known values of {@link OSType} that the service accepts. */
export var KnownOSType;
(function (KnownOSType) {
    /** Windows */
    KnownOSType["Windows"] = "Windows";
    /** Linux */
    KnownOSType["Linux"] = "Linux";
})(KnownOSType || (KnownOSType = {}));
/** Known values of {@link Tier} that the service accepts. */
export var KnownTier;
(function (KnownTier) {
    /** Standard */
    KnownTier["Standard"] = "Standard";
    /** Premium */
    KnownTier["Premium"] = "Premium";
})(KnownTier || (KnownTier = {}));
/** Known values of {@link DirectoryType} that the service accepts. */
export var KnownDirectoryType;
(function (KnownDirectoryType) {
    /** ActiveDirectory */
    KnownDirectoryType["ActiveDirectory"] = "ActiveDirectory";
})(KnownDirectoryType || (KnownDirectoryType = {}));
/** Known values of {@link DaysOfWeek} that the service accepts. */
export var KnownDaysOfWeek;
(function (KnownDaysOfWeek) {
    /** Monday */
    KnownDaysOfWeek["Monday"] = "Monday";
    /** Tuesday */
    KnownDaysOfWeek["Tuesday"] = "Tuesday";
    /** Wednesday */
    KnownDaysOfWeek["Wednesday"] = "Wednesday";
    /** Thursday */
    KnownDaysOfWeek["Thursday"] = "Thursday";
    /** Friday */
    KnownDaysOfWeek["Friday"] = "Friday";
    /** Saturday */
    KnownDaysOfWeek["Saturday"] = "Saturday";
    /** Sunday */
    KnownDaysOfWeek["Sunday"] = "Sunday";
})(KnownDaysOfWeek || (KnownDaysOfWeek = {}));
/** Known values of {@link JsonWebKeyEncryptionAlgorithm} that the service accepts. */
export var KnownJsonWebKeyEncryptionAlgorithm;
(function (KnownJsonWebKeyEncryptionAlgorithm) {
    /** RSAOaep */
    KnownJsonWebKeyEncryptionAlgorithm["RSAOaep"] = "RSA-OAEP";
    /** RSAOaep256 */
    KnownJsonWebKeyEncryptionAlgorithm["RSAOaep256"] = "RSA-OAEP-256";
    /** RSA15 */
    KnownJsonWebKeyEncryptionAlgorithm["RSA15"] = "RSA1_5";
})(KnownJsonWebKeyEncryptionAlgorithm || (KnownJsonWebKeyEncryptionAlgorithm = {}));
/** Known values of {@link ResourceProviderConnection} that the service accepts. */
export var KnownResourceProviderConnection;
(function (KnownResourceProviderConnection) {
    /** Inbound */
    KnownResourceProviderConnection["Inbound"] = "Inbound";
    /** Outbound */
    KnownResourceProviderConnection["Outbound"] = "Outbound";
})(KnownResourceProviderConnection || (KnownResourceProviderConnection = {}));
/** Known values of {@link PrivateLink} that the service accepts. */
export var KnownPrivateLink;
(function (KnownPrivateLink) {
    /** Disabled */
    KnownPrivateLink["Disabled"] = "Disabled";
    /** Enabled */
    KnownPrivateLink["Enabled"] = "Enabled";
})(KnownPrivateLink || (KnownPrivateLink = {}));
/** Known values of {@link PrivateLinkConfigurationProvisioningState} that the service accepts. */
export var KnownPrivateLinkConfigurationProvisioningState;
(function (KnownPrivateLinkConfigurationProvisioningState) {
    /** InProgress */
    KnownPrivateLinkConfigurationProvisioningState["InProgress"] = "InProgress";
    /** Failed */
    KnownPrivateLinkConfigurationProvisioningState["Failed"] = "Failed";
    /** Succeeded */
    KnownPrivateLinkConfigurationProvisioningState["Succeeded"] = "Succeeded";
    /** Canceled */
    KnownPrivateLinkConfigurationProvisioningState["Canceled"] = "Canceled";
    /** Deleting */
    KnownPrivateLinkConfigurationProvisioningState["Deleting"] = "Deleting";
})(KnownPrivateLinkConfigurationProvisioningState || (KnownPrivateLinkConfigurationProvisioningState = {}));
/** Known values of {@link PrivateIPAllocationMethod} that the service accepts. */
export var KnownPrivateIPAllocationMethod;
(function (KnownPrivateIPAllocationMethod) {
    /** Dynamic */
    KnownPrivateIPAllocationMethod["Dynamic"] = "dynamic";
    /** Static */
    KnownPrivateIPAllocationMethod["Static"] = "static";
})(KnownPrivateIPAllocationMethod || (KnownPrivateIPAllocationMethod = {}));
/** Known values of {@link ResourceIdentityType} that the service accepts. */
export var KnownResourceIdentityType;
(function (KnownResourceIdentityType) {
    /** SystemAssigned */
    KnownResourceIdentityType["SystemAssigned"] = "SystemAssigned";
    /** UserAssigned */
    KnownResourceIdentityType["UserAssigned"] = "UserAssigned";
    /** SystemAssignedUserAssigned */
    KnownResourceIdentityType["SystemAssignedUserAssigned"] = "SystemAssigned, UserAssigned";
    /** None */
    KnownResourceIdentityType["None"] = "None";
})(KnownResourceIdentityType || (KnownResourceIdentityType = {}));
/** Known values of {@link HDInsightClusterProvisioningState} that the service accepts. */
export var KnownHDInsightClusterProvisioningState;
(function (KnownHDInsightClusterProvisioningState) {
    /** InProgress */
    KnownHDInsightClusterProvisioningState["InProgress"] = "InProgress";
    /** Failed */
    KnownHDInsightClusterProvisioningState["Failed"] = "Failed";
    /** Succeeded */
    KnownHDInsightClusterProvisioningState["Succeeded"] = "Succeeded";
    /** Canceled */
    KnownHDInsightClusterProvisioningState["Canceled"] = "Canceled";
    /** Deleting */
    KnownHDInsightClusterProvisioningState["Deleting"] = "Deleting";
})(KnownHDInsightClusterProvisioningState || (KnownHDInsightClusterProvisioningState = {}));
/** Known values of {@link PrivateLinkServiceConnectionStatus} that the service accepts. */
export var KnownPrivateLinkServiceConnectionStatus;
(function (KnownPrivateLinkServiceConnectionStatus) {
    /** Approved */
    KnownPrivateLinkServiceConnectionStatus["Approved"] = "Approved";
    /** Rejected */
    KnownPrivateLinkServiceConnectionStatus["Rejected"] = "Rejected";
    /** Pending */
    KnownPrivateLinkServiceConnectionStatus["Pending"] = "Pending";
    /** Removed */
    KnownPrivateLinkServiceConnectionStatus["Removed"] = "Removed";
})(KnownPrivateLinkServiceConnectionStatus || (KnownPrivateLinkServiceConnectionStatus = {}));
/** Known values of {@link PrivateEndpointConnectionProvisioningState} that the service accepts. */
export var KnownPrivateEndpointConnectionProvisioningState;
(function (KnownPrivateEndpointConnectionProvisioningState) {
    /** InProgress */
    KnownPrivateEndpointConnectionProvisioningState["InProgress"] = "InProgress";
    /** Updating */
    KnownPrivateEndpointConnectionProvisioningState["Updating"] = "Updating";
    /** Failed */
    KnownPrivateEndpointConnectionProvisioningState["Failed"] = "Failed";
    /** Succeeded */
    KnownPrivateEndpointConnectionProvisioningState["Succeeded"] = "Succeeded";
    /** Canceled */
    KnownPrivateEndpointConnectionProvisioningState["Canceled"] = "Canceled";
    /** Deleting */
    KnownPrivateEndpointConnectionProvisioningState["Deleting"] = "Deleting";
})(KnownPrivateEndpointConnectionProvisioningState || (KnownPrivateEndpointConnectionProvisioningState = {}));
/** Known values of {@link CreatedByType} that the service accepts. */
export var KnownCreatedByType;
(function (KnownCreatedByType) {
    /** User */
    KnownCreatedByType["User"] = "User";
    /** Application */
    KnownCreatedByType["Application"] = "Application";
    /** ManagedIdentity */
    KnownCreatedByType["ManagedIdentity"] = "ManagedIdentity";
    /** Key */
    KnownCreatedByType["Key"] = "Key";
})(KnownCreatedByType || (KnownCreatedByType = {}));
/** Known values of {@link RoleName} that the service accepts. */
export var KnownRoleName;
(function (KnownRoleName) {
    /** Workernode */
    KnownRoleName["Workernode"] = "workernode";
})(KnownRoleName || (KnownRoleName = {}));
/** Known values of {@link AsyncOperationState} that the service accepts. */
export var KnownAsyncOperationState;
(function (KnownAsyncOperationState) {
    /** InProgress */
    KnownAsyncOperationState["InProgress"] = "InProgress";
    /** Succeeded */
    KnownAsyncOperationState["Succeeded"] = "Succeeded";
    /** Failed */
    KnownAsyncOperationState["Failed"] = "Failed";
})(KnownAsyncOperationState || (KnownAsyncOperationState = {}));
/** Known values of {@link FilterMode} that the service accepts. */
export var KnownFilterMode;
(function (KnownFilterMode) {
    /** Exclude */
    KnownFilterMode["Exclude"] = "Exclude";
    /** Include */
    KnownFilterMode["Include"] = "Include";
    /** Recommend */
    KnownFilterMode["Recommend"] = "Recommend";
    /** Default */
    KnownFilterMode["Default"] = "Default";
})(KnownFilterMode || (KnownFilterMode = {}));
//# sourceMappingURL=index.js.map