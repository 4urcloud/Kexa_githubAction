import * as coreClient from "@azure/core-client";
import * as coreAuth from "@azure/core-auth";
import { Clusters, Applications, Locations, Configurations, Extensions, ScriptActions, ScriptExecutionHistory, Operations, VirtualMachines, PrivateEndpointConnections, PrivateLinkResources } from "./operationsInterfaces";
import { HDInsightManagementClientOptionalParams } from "./models";
export declare class HDInsightManagementClient extends coreClient.ServiceClient {
    $host: string;
    subscriptionId: string;
    apiVersion: string;
    /**
     * Initializes a new instance of the HDInsightManagementClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId The subscription credentials which uniquely identify Microsoft Azure
     *                       subscription. The subscription ID forms part of the URI for every service call.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: HDInsightManagementClientOptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    clusters: Clusters;
    applications: Applications;
    locations: Locations;
    configurations: Configurations;
    extensions: Extensions;
    scriptActions: ScriptActions;
    scriptExecutionHistory: ScriptExecutionHistory;
    operations: Operations;
    virtualMachines: VirtualMachines;
    privateEndpointConnections: PrivateEndpointConnections;
    privateLinkResources: PrivateLinkResources;
}
//# sourceMappingURL=hDInsightManagementClient.d.ts.map