import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PrivateEndpointConnections } from "../operationsInterfaces";
import { HDInsightManagementClient } from "../hDInsightManagementClient";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { PrivateEndpointConnection, PrivateEndpointConnectionsListByClusterOptionalParams, PrivateEndpointConnectionsCreateOrUpdateOptionalParams, PrivateEndpointConnectionsCreateOrUpdateResponse, PrivateEndpointConnectionsGetOptionalParams, PrivateEndpointConnectionsGetResponse, PrivateEndpointConnectionsDeleteOptionalParams } from "../models";
/** Class containing PrivateEndpointConnections operations. */
export declare class PrivateEndpointConnectionsImpl implements PrivateEndpointConnections {
    private readonly client;
    /**
     * Initialize a new instance of the class PrivateEndpointConnections class.
     * @param client Reference to the service client
     */
    constructor(client: HDInsightManagementClient);
    /**
     * Lists the private endpoint connections for a HDInsight cluster.
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster.
     * @param options The options parameters.
     */
    listByCluster(resourceGroupName: string, clusterName: string, options?: PrivateEndpointConnectionsListByClusterOptionalParams): PagedAsyncIterableIterator<PrivateEndpointConnection>;
    private listByClusterPagingPage;
    private listByClusterPagingAll;
    /**
     * Lists the private endpoint connections for a HDInsight cluster.
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster.
     * @param options The options parameters.
     */
    private _listByCluster;
    /**
     * Approve or reject a private endpoint connection manually.
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster.
     * @param privateEndpointConnectionName The name of the private endpoint connection.
     * @param parameters The private endpoint connection create or update request.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, clusterName: string, privateEndpointConnectionName: string, parameters: PrivateEndpointConnection, options?: PrivateEndpointConnectionsCreateOrUpdateOptionalParams): Promise<PollerLike<PollOperationState<PrivateEndpointConnectionsCreateOrUpdateResponse>, PrivateEndpointConnectionsCreateOrUpdateResponse>>;
    /**
     * Approve or reject a private endpoint connection manually.
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster.
     * @param privateEndpointConnectionName The name of the private endpoint connection.
     * @param parameters The private endpoint connection create or update request.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, clusterName: string, privateEndpointConnectionName: string, parameters: PrivateEndpointConnection, options?: PrivateEndpointConnectionsCreateOrUpdateOptionalParams): Promise<PrivateEndpointConnectionsCreateOrUpdateResponse>;
    /**
     * Gets the specific private endpoint connection.
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster.
     * @param privateEndpointConnectionName The name of the private endpoint connection.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, clusterName: string, privateEndpointConnectionName: string, options?: PrivateEndpointConnectionsGetOptionalParams): Promise<PrivateEndpointConnectionsGetResponse>;
    /**
     * Deletes the specific private endpoint connection.
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster.
     * @param privateEndpointConnectionName The name of the private endpoint connection.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, clusterName: string, privateEndpointConnectionName: string, options?: PrivateEndpointConnectionsDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Deletes the specific private endpoint connection.
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster.
     * @param privateEndpointConnectionName The name of the private endpoint connection.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, clusterName: string, privateEndpointConnectionName: string, options?: PrivateEndpointConnectionsDeleteOptionalParams): Promise<void>;
    /**
     * ListByClusterNext
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster.
     * @param nextLink The nextLink from the previous successful call to the ListByCluster method.
     * @param options The options parameters.
     */
    private _listByClusterNext;
}
//# sourceMappingURL=privateEndpointConnections.d.ts.map