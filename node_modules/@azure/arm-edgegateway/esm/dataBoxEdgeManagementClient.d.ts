import * as msRest from "@azure/ms-rest-js";
import { TokenCredential } from "@azure/core-auth";
import * as Models from "./models";
import * as Mappers from "./models/mappers";
import * as operations from "./operations";
import { DataBoxEdgeManagementClientContext } from "./dataBoxEdgeManagementClientContext";
declare class DataBoxEdgeManagementClient extends DataBoxEdgeManagementClientContext {
    operations: operations.Operations;
    devices: operations.Devices;
    alerts: operations.Alerts;
    bandwidthSchedules: operations.BandwidthSchedules;
    jobs: operations.Jobs;
    operationsStatus: operations.OperationsStatus;
    orders: operations.Orders;
    roles: operations.Roles;
    shares: operations.Shares;
    storageAccountCredentials: operations.StorageAccountCredentials;
    triggers: operations.Triggers;
    users: operations.Users;
    /**
     * Initializes a new instance of the DataBoxEdgeManagementClient class.
     * @param credentials Credentials needed for the client to connect to Azure. Credentials
     * implementing the TokenCredential interface from the @azure/identity package are recommended. For
     * more information about these credentials, see
     * {@link https://www.npmjs.com/package/@azure/identity}. Credentials implementing the
     * ServiceClientCredentials interface from the older packages @azure/ms-rest-nodeauth and
     * @azure/ms-rest-browserauth are also supported.
     * @param subscriptionId The subscription ID.
     * @param [options] The parameter options
     */
    constructor(credentials: msRest.ServiceClientCredentials | TokenCredential, subscriptionId: string, options?: Models.DataBoxEdgeManagementClientOptions);
}
export { DataBoxEdgeManagementClient, DataBoxEdgeManagementClientContext, Models as DataBoxEdgeManagementModels, Mappers as DataBoxEdgeManagementMappers };
export * from "./operations";
//# sourceMappingURL=dataBoxEdgeManagementClient.d.ts.map