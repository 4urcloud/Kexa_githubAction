/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/alertsMappers";
import * as Parameters from "../models/parameters";
/** Class representing a Alerts. */
var Alerts = /** @class */ (function () {
    /**
     * Create a Alerts.
     * @param {DataBoxEdgeManagementClientContext} client Reference to the service client.
     */
    function Alerts(client) {
        this.client = client;
    }
    Alerts.prototype.listByDataBoxEdgeDevice = function (deviceName, resourceGroupName, options, callback) {
        return this.client.sendOperationRequest({
            deviceName: deviceName,
            resourceGroupName: resourceGroupName,
            options: options
        }, listByDataBoxEdgeDeviceOperationSpec, callback);
    };
    Alerts.prototype.get = function (deviceName, name, resourceGroupName, options, callback) {
        return this.client.sendOperationRequest({
            deviceName: deviceName,
            name: name,
            resourceGroupName: resourceGroupName,
            options: options
        }, getOperationSpec, callback);
    };
    Alerts.prototype.listByDataBoxEdgeDeviceNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listByDataBoxEdgeDeviceNextOperationSpec, callback);
    };
    return Alerts;
}());
export { Alerts };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var listByDataBoxEdgeDeviceOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/alerts",
    urlParameters: [
        Parameters.deviceName,
        Parameters.subscriptionId,
        Parameters.resourceGroupName
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.AlertList
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var getOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/alerts/{name}",
    urlParameters: [
        Parameters.deviceName,
        Parameters.name,
        Parameters.subscriptionId,
        Parameters.resourceGroupName
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.Alert
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listByDataBoxEdgeDeviceNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.AlertList
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
//# sourceMappingURL=alerts.js.map