import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import { DataBoxEdgeManagementClientContext } from "../dataBoxEdgeManagementClientContext";
/** Class representing a BandwidthSchedules. */
export declare class BandwidthSchedules {
    private readonly client;
    /**
     * Create a BandwidthSchedules.
     * @param {DataBoxEdgeManagementClientContext} client Reference to the service client.
     */
    constructor(client: DataBoxEdgeManagementClientContext);
    /**
     * Gets all the bandwidth schedules for a data box edge/gateway device.
     * @param deviceName The device name.
     * @param resourceGroupName The resource group name.
     * @param [options] The optional parameters
     * @returns Promise<Models.BandwidthSchedulesListByDataBoxEdgeDeviceResponse>
     */
    listByDataBoxEdgeDevice(deviceName: string, resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.BandwidthSchedulesListByDataBoxEdgeDeviceResponse>;
    /**
     * @param deviceName The device name.
     * @param resourceGroupName The resource group name.
     * @param callback The callback
     */
    listByDataBoxEdgeDevice(deviceName: string, resourceGroupName: string, callback: msRest.ServiceCallback<Models.BandwidthSchedulesList>): void;
    /**
     * @param deviceName The device name.
     * @param resourceGroupName The resource group name.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByDataBoxEdgeDevice(deviceName: string, resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BandwidthSchedulesList>): void;
    /**
     * Gets the properties of the specified bandwidth schedule.
     * @param deviceName The device name.
     * @param name The bandwidth schedule name.
     * @param resourceGroupName The resource group name.
     * @param [options] The optional parameters
     * @returns Promise<Models.BandwidthSchedulesGetResponse>
     */
    get(deviceName: string, name: string, resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.BandwidthSchedulesGetResponse>;
    /**
     * @param deviceName The device name.
     * @param name The bandwidth schedule name.
     * @param resourceGroupName The resource group name.
     * @param callback The callback
     */
    get(deviceName: string, name: string, resourceGroupName: string, callback: msRest.ServiceCallback<Models.BandwidthSchedule>): void;
    /**
     * @param deviceName The device name.
     * @param name The bandwidth schedule name.
     * @param resourceGroupName The resource group name.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(deviceName: string, name: string, resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BandwidthSchedule>): void;
    /**
     * Creates or updates a bandwidth schedule.
     * @param deviceName The device name.
     * @param name The bandwidth schedule name which needs to be added/updated.
     * @param parameters The bandwidth schedule to be added or updated.
     * @param resourceGroupName The resource group name.
     * @param [options] The optional parameters
     * @returns Promise<Models.BandwidthSchedulesCreateOrUpdateResponse>
     */
    createOrUpdate(deviceName: string, name: string, parameters: Models.BandwidthSchedule, resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.BandwidthSchedulesCreateOrUpdateResponse>;
    /**
     * Deletes the specified bandwidth schedule.
     * @param deviceName The device name.
     * @param name The bandwidth schedule name.
     * @param resourceGroupName The resource group name.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(deviceName: string, name: string, resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * Creates or updates a bandwidth schedule.
     * @param deviceName The device name.
     * @param name The bandwidth schedule name which needs to be added/updated.
     * @param parameters The bandwidth schedule to be added or updated.
     * @param resourceGroupName The resource group name.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginCreateOrUpdate(deviceName: string, name: string, parameters: Models.BandwidthSchedule, resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Deletes the specified bandwidth schedule.
     * @param deviceName The device name.
     * @param name The bandwidth schedule name.
     * @param resourceGroupName The resource group name.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginDeleteMethod(deviceName: string, name: string, resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Gets all the bandwidth schedules for a data box edge/gateway device.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.BandwidthSchedulesListByDataBoxEdgeDeviceNextResponse>
     */
    listByDataBoxEdgeDeviceNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.BandwidthSchedulesListByDataBoxEdgeDeviceNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByDataBoxEdgeDeviceNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.BandwidthSchedulesList>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByDataBoxEdgeDeviceNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BandwidthSchedulesList>): void;
}
//# sourceMappingURL=bandwidthSchedules.d.ts.map