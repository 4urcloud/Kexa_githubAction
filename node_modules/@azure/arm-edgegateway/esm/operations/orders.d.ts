import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import { DataBoxEdgeManagementClientContext } from "../dataBoxEdgeManagementClientContext";
/** Class representing a Orders. */
export declare class Orders {
    private readonly client;
    /**
     * Create a Orders.
     * @param {DataBoxEdgeManagementClientContext} client Reference to the service client.
     */
    constructor(client: DataBoxEdgeManagementClientContext);
    /**
     * @summary Lists all the orders related to a data box edge/gateway device.
     * @param deviceName The device name.
     * @param resourceGroupName The resource group name.
     * @param [options] The optional parameters
     * @returns Promise<Models.OrdersListByDataBoxEdgeDeviceResponse>
     */
    listByDataBoxEdgeDevice(deviceName: string, resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.OrdersListByDataBoxEdgeDeviceResponse>;
    /**
     * @param deviceName The device name.
     * @param resourceGroupName The resource group name.
     * @param callback The callback
     */
    listByDataBoxEdgeDevice(deviceName: string, resourceGroupName: string, callback: msRest.ServiceCallback<Models.OrderList>): void;
    /**
     * @param deviceName The device name.
     * @param resourceGroupName The resource group name.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByDataBoxEdgeDevice(deviceName: string, resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.OrderList>): void;
    /**
     * @summary Gets a specific order by name.
     * @param deviceName The device name.
     * @param resourceGroupName The resource group name.
     * @param [options] The optional parameters
     * @returns Promise<Models.OrdersGetResponse>
     */
    get(deviceName: string, resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.OrdersGetResponse>;
    /**
     * @param deviceName The device name.
     * @param resourceGroupName The resource group name.
     * @param callback The callback
     */
    get(deviceName: string, resourceGroupName: string, callback: msRest.ServiceCallback<Models.Order>): void;
    /**
     * @param deviceName The device name.
     * @param resourceGroupName The resource group name.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(deviceName: string, resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Order>): void;
    /**
     * @summary Creates or updates an order.
     * @param deviceName The device name.
     * @param order The order to be created or updated.
     * @param resourceGroupName The resource group name.
     * @param [options] The optional parameters
     * @returns Promise<Models.OrdersCreateOrUpdateResponse>
     */
    createOrUpdate(deviceName: string, order: Models.Order, resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.OrdersCreateOrUpdateResponse>;
    /**
     * @summary Deletes the order related to the device.
     * @param deviceName The device name.
     * @param resourceGroupName The resource group name.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(deviceName: string, resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @summary Creates or updates an order.
     * @param deviceName The device name.
     * @param order The order to be created or updated.
     * @param resourceGroupName The resource group name.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginCreateOrUpdate(deviceName: string, order: Models.Order, resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * @summary Deletes the order related to the device.
     * @param deviceName The device name.
     * @param resourceGroupName The resource group name.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginDeleteMethod(deviceName: string, resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * @summary Lists all the orders related to a data box edge/gateway device.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.OrdersListByDataBoxEdgeDeviceNextResponse>
     */
    listByDataBoxEdgeDeviceNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.OrdersListByDataBoxEdgeDeviceNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByDataBoxEdgeDeviceNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.OrderList>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByDataBoxEdgeDeviceNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.OrderList>): void;
}
//# sourceMappingURL=orders.d.ts.map