import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import { DataBoxEdgeManagementClientContext } from "../dataBoxEdgeManagementClientContext";
/** Class representing a StorageAccountCredentials. */
export declare class StorageAccountCredentials {
    private readonly client;
    /**
     * Create a StorageAccountCredentials.
     * @param {DataBoxEdgeManagementClientContext} client Reference to the service client.
     */
    constructor(client: DataBoxEdgeManagementClientContext);
    /**
     * @summary Gets all the storage account credentials in a data box edge/gateway device.
     * @param deviceName The device name.
     * @param resourceGroupName The resource group name.
     * @param [options] The optional parameters
     * @returns Promise<Models.StorageAccountCredentialsListByDataBoxEdgeDeviceResponse>
     */
    listByDataBoxEdgeDevice(deviceName: string, resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.StorageAccountCredentialsListByDataBoxEdgeDeviceResponse>;
    /**
     * @param deviceName The device name.
     * @param resourceGroupName The resource group name.
     * @param callback The callback
     */
    listByDataBoxEdgeDevice(deviceName: string, resourceGroupName: string, callback: msRest.ServiceCallback<Models.StorageAccountCredentialList>): void;
    /**
     * @param deviceName The device name.
     * @param resourceGroupName The resource group name.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByDataBoxEdgeDevice(deviceName: string, resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.StorageAccountCredentialList>): void;
    /**
     * Gets the properties of the specified storage account credential.
     * @param deviceName The device name.
     * @param name The storage account credential name.
     * @param resourceGroupName The resource group name.
     * @param [options] The optional parameters
     * @returns Promise<Models.StorageAccountCredentialsGetResponse>
     */
    get(deviceName: string, name: string, resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.StorageAccountCredentialsGetResponse>;
    /**
     * @param deviceName The device name.
     * @param name The storage account credential name.
     * @param resourceGroupName The resource group name.
     * @param callback The callback
     */
    get(deviceName: string, name: string, resourceGroupName: string, callback: msRest.ServiceCallback<Models.StorageAccountCredential>): void;
    /**
     * @param deviceName The device name.
     * @param name The storage account credential name.
     * @param resourceGroupName The resource group name.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(deviceName: string, name: string, resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.StorageAccountCredential>): void;
    /**
     * Creates or updates the storage account credential.
     * @param deviceName The device name.
     * @param name The storage account credential name.
     * @param storageAccountCredential The storage account credential.
     * @param resourceGroupName The resource group name.
     * @param [options] The optional parameters
     * @returns Promise<Models.StorageAccountCredentialsCreateOrUpdateResponse>
     */
    createOrUpdate(deviceName: string, name: string, storageAccountCredential: Models.StorageAccountCredential, resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.StorageAccountCredentialsCreateOrUpdateResponse>;
    /**
     * Deletes the storage account credential.
     * @param deviceName The device name.
     * @param name The storage account credential name.
     * @param resourceGroupName The resource group name.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(deviceName: string, name: string, resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * Creates or updates the storage account credential.
     * @param deviceName The device name.
     * @param name The storage account credential name.
     * @param storageAccountCredential The storage account credential.
     * @param resourceGroupName The resource group name.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginCreateOrUpdate(deviceName: string, name: string, storageAccountCredential: Models.StorageAccountCredential, resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Deletes the storage account credential.
     * @param deviceName The device name.
     * @param name The storage account credential name.
     * @param resourceGroupName The resource group name.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginDeleteMethod(deviceName: string, name: string, resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * @summary Gets all the storage account credentials in a data box edge/gateway device.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.StorageAccountCredentialsListByDataBoxEdgeDeviceNextResponse>
     */
    listByDataBoxEdgeDeviceNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.StorageAccountCredentialsListByDataBoxEdgeDeviceNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByDataBoxEdgeDeviceNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.StorageAccountCredentialList>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByDataBoxEdgeDeviceNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.StorageAccountCredentialList>): void;
}
//# sourceMappingURL=storageAccountCredentials.d.ts.map