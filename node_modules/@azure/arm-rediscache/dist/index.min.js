"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var tslib=require("tslib"),coreClient=require("@azure/core-client"),coreRestPipeline=require("@azure/core-rest-pipeline"),coreLro=require("@azure/core-lro");function _interopNamespace(t){var i;return t&&t.__esModule?t:(i=Object.create(null),t&&Object.keys(t).forEach(function(e){var r;"default"!==e&&(r=Object.getOwnPropertyDescriptor(t,e),Object.defineProperty(i,e,r.get?r:{enumerable:!0,get:function(){return t[e]}}))}),i.default=t,Object.freeze(i))}var coreClient__namespace=_interopNamespace(coreClient),coreRestPipeline__namespace=_interopNamespace(coreRestPipeline);const pageMap=new WeakMap;function getContinuationToken(e){return"object"!=typeof e||null===e||null==(e=pageMap.get(e))?void 0:e.continuationToken}function setContinuationToken(e,r){var t;"object"==typeof e&&null!==e&&r&&((t=null!=(t=pageMap.get(e))?t:{}).continuationToken=r,pageMap.set(e,t))}exports.KnownSkuName=void 0,function(e){e.Basic="Basic",e.Standard="Standard",e.Premium="Premium"}(exports.KnownSkuName||(exports.KnownSkuName={})),exports.KnownSkuFamily=void 0,function(e){e.C="C",e.P="P"}(exports.KnownSkuFamily||(exports.KnownSkuFamily={})),exports.KnownTlsVersion=void 0,function(e){e.One0="1.0",e.One1="1.1",e.One2="1.2"}(exports.KnownTlsVersion||(exports.KnownTlsVersion={})),exports.KnownPublicNetworkAccess=void 0,function(e){e.Enabled="Enabled",e.Disabled="Disabled"}(exports.KnownPublicNetworkAccess||(exports.KnownPublicNetworkAccess={})),exports.KnownUpdateChannel=void 0,function(e){e.Stable="Stable",e.Preview="Preview"}(exports.KnownUpdateChannel||(exports.KnownUpdateChannel={})),exports.KnownManagedServiceIdentityType=void 0,function(e){e.None="None",e.SystemAssigned="SystemAssigned",e.UserAssigned="UserAssigned",e.SystemAssignedUserAssigned="SystemAssigned, UserAssigned"}(exports.KnownManagedServiceIdentityType||(exports.KnownManagedServiceIdentityType={})),exports.KnownProvisioningState=void 0,function(e){e.Creating="Creating",e.Deleting="Deleting",e.Disabled="Disabled",e.Failed="Failed",e.Linking="Linking",e.Provisioning="Provisioning",e.RecoveringScaleFailure="RecoveringScaleFailure",e.Scaling="Scaling",e.Succeeded="Succeeded",e.Unlinking="Unlinking",e.Unprovisioning="Unprovisioning",e.Updating="Updating",e.ConfiguringAAD="ConfiguringAAD"}(exports.KnownProvisioningState||(exports.KnownProvisioningState={})),exports.KnownPrivateEndpointServiceConnectionStatus=void 0,function(e){e.Pending="Pending",e.Approved="Approved",e.Rejected="Rejected"}(exports.KnownPrivateEndpointServiceConnectionStatus||(exports.KnownPrivateEndpointServiceConnectionStatus={})),exports.KnownPrivateEndpointConnectionProvisioningState=void 0,function(e){e.Succeeded="Succeeded",e.Creating="Creating",e.Deleting="Deleting",e.Failed="Failed"}(exports.KnownPrivateEndpointConnectionProvisioningState||(exports.KnownPrivateEndpointConnectionProvisioningState={})),exports.KnownRebootType=void 0,function(e){e.PrimaryNode="PrimaryNode",e.SecondaryNode="SecondaryNode",e.AllNodes="AllNodes"}(exports.KnownRebootType||(exports.KnownRebootType={})),exports.KnownDefaultName=void 0,(exports.KnownDefaultName||(exports.KnownDefaultName={})).Default="default",exports.KnownAccessPolicyProvisioningState=void 0,function(e){e.Updating="Updating",e.Succeeded="Succeeded",e.Deleting="Deleting",e.Deleted="Deleted",e.Canceled="Canceled",e.Failed="Failed"}(exports.KnownAccessPolicyProvisioningState||(exports.KnownAccessPolicyProvisioningState={})),exports.KnownAccessPolicyType=void 0,function(e){e.Custom="Custom",e.BuiltIn="BuiltIn"}(exports.KnownAccessPolicyType||(exports.KnownAccessPolicyType={})),exports.KnownAccessPolicyAssignmentProvisioningState=void 0,function(e){e.Updating="Updating",e.Succeeded="Succeeded",e.Deleting="Deleting",e.Deleted="Deleted",e.Canceled="Canceled",e.Failed="Failed"}(exports.KnownAccessPolicyAssignmentProvisioningState||(exports.KnownAccessPolicyAssignmentProvisioningState={}));const OperationListResult={type:{name:"Composite",className:"OperationListResult",modelProperties:{value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"Operation"}}}},nextLink:{serializedName:"nextLink",readOnly:!0,type:{name:"String"}}}}},Operation={type:{name:"Composite",className:"Operation",modelProperties:{name:{serializedName:"name",type:{name:"String"}},display:{serializedName:"display",type:{name:"Composite",className:"OperationDisplay"}}}}},OperationDisplay={type:{name:"Composite",className:"OperationDisplay",modelProperties:{provider:{serializedName:"provider",type:{name:"String"}},operation:{serializedName:"operation",type:{name:"String"}},resource:{serializedName:"resource",type:{name:"String"}},description:{serializedName:"description",type:{name:"String"}}}}},ErrorResponse={type:{name:"Composite",className:"ErrorResponse",modelProperties:{error:{serializedName:"error",type:{name:"Composite",className:"ErrorDetail"}}}}},ErrorDetail={type:{name:"Composite",className:"ErrorDetail",modelProperties:{code:{serializedName:"code",readOnly:!0,type:{name:"String"}},message:{serializedName:"message",readOnly:!0,type:{name:"String"}},target:{serializedName:"target",readOnly:!0,type:{name:"String"}},details:{serializedName:"details",readOnly:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"ErrorDetail"}}}},additionalInfo:{serializedName:"additionalInfo",readOnly:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"ErrorAdditionalInfo"}}}}}}},ErrorAdditionalInfo={type:{name:"Composite",className:"ErrorAdditionalInfo",modelProperties:{type:{serializedName:"type",readOnly:!0,type:{name:"String"}},info:{serializedName:"info",readOnly:!0,type:{name:"Dictionary",value:{type:{name:"any"}}}}}}},CheckNameAvailabilityParameters={type:{name:"Composite",className:"CheckNameAvailabilityParameters",modelProperties:{name:{serializedName:"name",required:!0,type:{name:"String"}},type:{serializedName:"type",required:!0,type:{name:"String"}}}}},NotificationListResponse={type:{name:"Composite",className:"NotificationListResponse",modelProperties:{value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"UpgradeNotification"}}}},nextLink:{serializedName:"nextLink",readOnly:!0,type:{name:"String"}}}}},UpgradeNotification={type:{name:"Composite",className:"UpgradeNotification",modelProperties:{name:{serializedName:"name",readOnly:!0,type:{name:"String"}},timestamp:{serializedName:"timestamp",readOnly:!0,type:{name:"DateTime"}},upsellNotification:{serializedName:"upsellNotification",readOnly:!0,type:{name:"Dictionary",value:{type:{name:"String"}}}}}}},RedisCreateParameters={type:{name:"Composite",className:"RedisCreateParameters",modelProperties:{zones:{serializedName:"zones",type:{name:"Sequence",element:{type:{name:"String"}}}},location:{serializedName:"location",required:!0,type:{name:"String"}},tags:{serializedName:"tags",type:{name:"Dictionary",value:{type:{name:"String"}}}},identity:{serializedName:"identity",type:{name:"Composite",className:"ManagedServiceIdentity"}},redisConfiguration:{serializedName:"properties.redisConfiguration",type:{name:"Composite",className:"RedisCommonPropertiesRedisConfiguration"}},redisVersion:{serializedName:"properties.redisVersion",type:{name:"String"}},enableNonSslPort:{defaultValue:!1,serializedName:"properties.enableNonSslPort",type:{name:"Boolean"}},replicasPerMaster:{serializedName:"properties.replicasPerMaster",type:{name:"Number"}},replicasPerPrimary:{serializedName:"properties.replicasPerPrimary",type:{name:"Number"}},tenantSettings:{serializedName:"properties.tenantSettings",type:{name:"Dictionary",value:{type:{name:"String"}}}},shardCount:{serializedName:"properties.shardCount",type:{name:"Number"}},minimumTlsVersion:{serializedName:"properties.minimumTlsVersion",type:{name:"String"}},publicNetworkAccess:{defaultValue:"Enabled",serializedName:"properties.publicNetworkAccess",type:{name:"String"}},updateChannel:{serializedName:"properties.updateChannel",type:{name:"String"}},sku:{serializedName:"properties.sku",type:{name:"Composite",className:"Sku"}},subnetId:{constraints:{Pattern:new RegExp("^\\/subscriptions\\/[^/]*\\/resourceGroups\\/[^/]*\\/providers\\/Microsoft.(ClassicNetwork|Network)\\/virtualNetworks\\/[^/]*\\/subnets\\/[^/]*$")},serializedName:"properties.subnetId",type:{name:"String"}},staticIP:{constraints:{Pattern:new RegExp("^\\d+\\.\\d+\\.\\d+\\.\\d+$")},serializedName:"properties.staticIP",type:{name:"String"}}}}},Sku={type:{name:"Composite",className:"Sku",modelProperties:{name:{serializedName:"name",required:!0,type:{name:"String"}},family:{serializedName:"family",required:!0,type:{name:"String"}},capacity:{serializedName:"capacity",required:!0,type:{name:"Number"}}}}},RedisCommonProperties={type:{name:"Composite",className:"RedisCommonProperties",modelProperties:{redisConfiguration:{serializedName:"redisConfiguration",type:{name:"Composite",className:"RedisCommonPropertiesRedisConfiguration"}},redisVersion:{serializedName:"redisVersion",type:{name:"String"}},enableNonSslPort:{defaultValue:!1,serializedName:"enableNonSslPort",type:{name:"Boolean"}},replicasPerMaster:{serializedName:"replicasPerMaster",type:{name:"Number"}},replicasPerPrimary:{serializedName:"replicasPerPrimary",type:{name:"Number"}},tenantSettings:{serializedName:"tenantSettings",type:{name:"Dictionary",value:{type:{name:"String"}}}},shardCount:{serializedName:"shardCount",type:{name:"Number"}},minimumTlsVersion:{serializedName:"minimumTlsVersion",type:{name:"String"}},publicNetworkAccess:{defaultValue:"Enabled",serializedName:"publicNetworkAccess",type:{name:"String"}},updateChannel:{serializedName:"updateChannel",type:{name:"String"}}}}},RedisCommonPropertiesRedisConfiguration={type:{name:"Composite",className:"RedisCommonPropertiesRedisConfiguration",additionalProperties:{type:{name:"Object"}},modelProperties:{rdbBackupEnabled:{serializedName:"rdb-backup-enabled",type:{name:"String"}},rdbBackupFrequency:{serializedName:"rdb-backup-frequency",type:{name:"String"}},rdbBackupMaxSnapshotCount:{serializedName:"rdb-backup-max-snapshot-count",type:{name:"String"}},rdbStorageConnectionString:{serializedName:"rdb-storage-connection-string",type:{name:"String"}},aofBackupEnabled:{serializedName:"aof-backup-enabled",type:{name:"String"}},aofStorageConnectionString0:{serializedName:"aof-storage-connection-string-0",type:{name:"String"}},aofStorageConnectionString1:{serializedName:"aof-storage-connection-string-1",type:{name:"String"}},maxfragmentationmemoryReserved:{serializedName:"maxfragmentationmemory-reserved",type:{name:"String"}},maxmemoryPolicy:{serializedName:"maxmemory-policy",type:{name:"String"}},maxmemoryReserved:{serializedName:"maxmemory-reserved",type:{name:"String"}},maxmemoryDelta:{serializedName:"maxmemory-delta",type:{name:"String"}},maxclients:{serializedName:"maxclients",readOnly:!0,type:{name:"String"}},preferredDataArchiveAuthMethod:{serializedName:"preferred-data-archive-auth-method",readOnly:!0,type:{name:"String"}},preferredDataPersistenceAuthMethod:{serializedName:"preferred-data-persistence-auth-method",type:{name:"String"}},zonalConfiguration:{serializedName:"zonal-configuration",readOnly:!0,type:{name:"String"}},authnotrequired:{serializedName:"authnotrequired",type:{name:"String"}},storageSubscriptionId:{serializedName:"storage-subscription-id",type:{name:"String"}},aadEnabled:{serializedName:"aad-enabled",type:{name:"String"}}}}},ManagedServiceIdentity={type:{name:"Composite",className:"ManagedServiceIdentity",modelProperties:{principalId:{serializedName:"principalId",readOnly:!0,type:{name:"Uuid"}},tenantId:{serializedName:"tenantId",readOnly:!0,type:{name:"Uuid"}},type:{serializedName:"type",required:!0,type:{name:"String"}},userAssignedIdentities:{serializedName:"userAssignedIdentities",type:{name:"Dictionary",value:{type:{name:"Composite",className:"UserAssignedIdentity"}}}}}}},UserAssignedIdentity={type:{name:"Composite",className:"UserAssignedIdentity",modelProperties:{principalId:{serializedName:"principalId",readOnly:!0,type:{name:"Uuid"}},clientId:{serializedName:"clientId",readOnly:!0,type:{name:"Uuid"}}}}},RedisAccessKeys={type:{name:"Composite",className:"RedisAccessKeys",modelProperties:{primaryKey:{serializedName:"primaryKey",readOnly:!0,type:{name:"String"}},secondaryKey:{serializedName:"secondaryKey",readOnly:!0,type:{name:"String"}}}}},RedisLinkedServer={type:{name:"Composite",className:"RedisLinkedServer",modelProperties:{id:{serializedName:"id",readOnly:!0,type:{name:"String"}}}}},RedisInstanceDetails={type:{name:"Composite",className:"RedisInstanceDetails",modelProperties:{sslPort:{serializedName:"sslPort",readOnly:!0,type:{name:"Number"}},nonSslPort:{serializedName:"nonSslPort",readOnly:!0,type:{name:"Number"}},zone:{serializedName:"zone",readOnly:!0,type:{name:"String"}},shardId:{serializedName:"shardId",readOnly:!0,type:{name:"Number"}},isMaster:{serializedName:"isMaster",readOnly:!0,type:{name:"Boolean"}},isPrimary:{serializedName:"isPrimary",readOnly:!0,type:{name:"Boolean"}}}}},PrivateEndpoint={type:{name:"Composite",className:"PrivateEndpoint",modelProperties:{id:{serializedName:"id",readOnly:!0,type:{name:"String"}}}}},PrivateLinkServiceConnectionState={type:{name:"Composite",className:"PrivateLinkServiceConnectionState",modelProperties:{status:{serializedName:"status",type:{name:"String"}},description:{serializedName:"description",type:{name:"String"}},actionsRequired:{serializedName:"actionsRequired",type:{name:"String"}}}}},Resource={type:{name:"Composite",className:"Resource",modelProperties:{id:{serializedName:"id",readOnly:!0,type:{name:"String"}},name:{serializedName:"name",readOnly:!0,type:{name:"String"}},type:{serializedName:"type",readOnly:!0,type:{name:"String"}}}}},RedisUpdateParameters={type:{name:"Composite",className:"RedisUpdateParameters",modelProperties:{tags:{serializedName:"tags",type:{name:"Dictionary",value:{type:{name:"String"}}}},identity:{serializedName:"identity",type:{name:"Composite",className:"ManagedServiceIdentity"}},redisConfiguration:{serializedName:"properties.redisConfiguration",type:{name:"Composite",className:"RedisCommonPropertiesRedisConfiguration"}},redisVersion:{serializedName:"properties.redisVersion",type:{name:"String"}},enableNonSslPort:{defaultValue:!1,serializedName:"properties.enableNonSslPort",type:{name:"Boolean"}},replicasPerMaster:{serializedName:"properties.replicasPerMaster",type:{name:"Number"}},replicasPerPrimary:{serializedName:"properties.replicasPerPrimary",type:{name:"Number"}},tenantSettings:{serializedName:"properties.tenantSettings",type:{name:"Dictionary",value:{type:{name:"String"}}}},shardCount:{serializedName:"properties.shardCount",type:{name:"Number"}},minimumTlsVersion:{serializedName:"properties.minimumTlsVersion",type:{name:"String"}},publicNetworkAccess:{defaultValue:"Enabled",serializedName:"properties.publicNetworkAccess",type:{name:"String"}},updateChannel:{serializedName:"properties.updateChannel",type:{name:"String"}},sku:{serializedName:"properties.sku",type:{name:"Composite",className:"Sku"}}}}},RedisListResult={type:{name:"Composite",className:"RedisListResult",modelProperties:{value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"RedisResource"}}}},nextLink:{serializedName:"nextLink",readOnly:!0,type:{name:"String"}}}}},RedisRegenerateKeyParameters={type:{name:"Composite",className:"RedisRegenerateKeyParameters",modelProperties:{keyType:{serializedName:"keyType",required:!0,type:{name:"Enum",allowedValues:["Primary","Secondary"]}}}}},RedisRebootParameters={type:{name:"Composite",className:"RedisRebootParameters",modelProperties:{rebootType:{serializedName:"rebootType",type:{name:"String"}},shardId:{serializedName:"shardId",type:{name:"Number"}},ports:{serializedName:"ports",type:{name:"Sequence",element:{type:{name:"Number"}}}}}}},RedisForceRebootResponse={type:{name:"Composite",className:"RedisForceRebootResponse",modelProperties:{message:{serializedName:"message",readOnly:!0,type:{name:"String"}}}}},ImportRDBParameters={type:{name:"Composite",className:"ImportRDBParameters",modelProperties:{format:{serializedName:"format",type:{name:"String"}},files:{serializedName:"files",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}},preferredDataArchiveAuthMethod:{serializedName:"preferred-data-archive-auth-method",type:{name:"String"}},storageSubscriptionId:{serializedName:"storage-subscription-id",type:{name:"String"}}}}},ExportRDBParameters={type:{name:"Composite",className:"ExportRDBParameters",modelProperties:{format:{serializedName:"format",type:{name:"String"}},prefix:{serializedName:"prefix",required:!0,type:{name:"String"}},container:{serializedName:"container",required:!0,type:{name:"String"}},preferredDataArchiveAuthMethod:{serializedName:"preferred-data-archive-auth-method",type:{name:"String"}},storageSubscriptionId:{serializedName:"storage-subscription-id",type:{name:"String"}}}}},OperationStatusResult={type:{name:"Composite",className:"OperationStatusResult",modelProperties:{id:{serializedName:"id",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},status:{serializedName:"status",required:!0,type:{name:"String"}},percentComplete:{constraints:{InclusiveMaximum:100,InclusiveMinimum:0},serializedName:"percentComplete",type:{name:"Number"}},startTime:{serializedName:"startTime",type:{name:"DateTime"}},endTime:{serializedName:"endTime",type:{name:"DateTime"}},operations:{serializedName:"operations",type:{name:"Sequence",element:{type:{name:"Composite",className:"OperationStatusResult"}}}},error:{serializedName:"error",type:{name:"Composite",className:"ErrorDetail"}}}}},RedisFirewallRuleListResult={type:{name:"Composite",className:"RedisFirewallRuleListResult",modelProperties:{value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"RedisFirewallRule"}}}},nextLink:{serializedName:"nextLink",readOnly:!0,type:{name:"String"}}}}},RedisPatchScheduleListResult={type:{name:"Composite",className:"RedisPatchScheduleListResult",modelProperties:{value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"RedisPatchSchedule"}}}},nextLink:{serializedName:"nextLink",readOnly:!0,type:{name:"String"}}}}},ScheduleEntry={type:{name:"Composite",className:"ScheduleEntry",modelProperties:{dayOfWeek:{serializedName:"dayOfWeek",required:!0,type:{name:"Enum",allowedValues:["Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","Everyday","Weekend"]}},startHourUtc:{serializedName:"startHourUtc",required:!0,type:{name:"Number"}},maintenanceWindow:{serializedName:"maintenanceWindow",type:{name:"TimeSpan"}}}}},RedisLinkedServerCreateParameters={type:{name:"Composite",className:"RedisLinkedServerCreateParameters",modelProperties:{linkedRedisCacheId:{serializedName:"properties.linkedRedisCacheId",required:!0,type:{name:"String"}},linkedRedisCacheLocation:{serializedName:"properties.linkedRedisCacheLocation",required:!0,type:{name:"String"}},serverRole:{serializedName:"properties.serverRole",required:!0,type:{name:"Enum",allowedValues:["Primary","Secondary"]}},geoReplicatedPrimaryHostName:{serializedName:"properties.geoReplicatedPrimaryHostName",readOnly:!0,type:{name:"String"}},primaryHostName:{serializedName:"properties.primaryHostName",readOnly:!0,type:{name:"String"}}}}},RedisLinkedServerCreateProperties={type:{name:"Composite",className:"RedisLinkedServerCreateProperties",modelProperties:{linkedRedisCacheId:{serializedName:"linkedRedisCacheId",required:!0,type:{name:"String"}},linkedRedisCacheLocation:{serializedName:"linkedRedisCacheLocation",required:!0,type:{name:"String"}},serverRole:{serializedName:"serverRole",required:!0,type:{name:"Enum",allowedValues:["Primary","Secondary"]}},geoReplicatedPrimaryHostName:{serializedName:"geoReplicatedPrimaryHostName",readOnly:!0,type:{name:"String"}},primaryHostName:{serializedName:"primaryHostName",readOnly:!0,type:{name:"String"}}}}},RedisLinkedServerWithPropertiesList={type:{name:"Composite",className:"RedisLinkedServerWithPropertiesList",modelProperties:{value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"RedisLinkedServerWithProperties"}}}},nextLink:{serializedName:"nextLink",readOnly:!0,type:{name:"String"}}}}},PrivateEndpointConnectionListResult={type:{name:"Composite",className:"PrivateEndpointConnectionListResult",modelProperties:{value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"PrivateEndpointConnection"}}}}}}},PrivateLinkResourceListResult={type:{name:"Composite",className:"PrivateLinkResourceListResult",modelProperties:{value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"PrivateLinkResource"}}}}}}},RedisCacheAccessPolicyList={type:{name:"Composite",className:"RedisCacheAccessPolicyList",modelProperties:{value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"RedisCacheAccessPolicy"}}}},nextLink:{serializedName:"nextLink",readOnly:!0,type:{name:"String"}}}}},RedisCacheAccessPolicyAssignmentList={type:{name:"Composite",className:"RedisCacheAccessPolicyAssignmentList",modelProperties:{value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"RedisCacheAccessPolicyAssignment"}}}},nextLink:{serializedName:"nextLink",readOnly:!0,type:{name:"String"}}}}},RedisCreateProperties={type:{name:"Composite",className:"RedisCreateProperties",modelProperties:Object.assign(Object.assign({},RedisCommonProperties.type.modelProperties),{sku:{serializedName:"sku",type:{name:"Composite",className:"Sku"}},subnetId:{constraints:{Pattern:new RegExp("^\\/subscriptions\\/[^/]*\\/resourceGroups\\/[^/]*\\/providers\\/Microsoft.(ClassicNetwork|Network)\\/virtualNetworks\\/[^/]*\\/subnets\\/[^/]*$")},serializedName:"subnetId",type:{name:"String"}},staticIP:{constraints:{Pattern:new RegExp("^\\d+\\.\\d+\\.\\d+\\.\\d+$")},serializedName:"staticIP",type:{name:"String"}}})}},RedisUpdateProperties={type:{name:"Composite",className:"RedisUpdateProperties",modelProperties:Object.assign(Object.assign({},RedisCommonProperties.type.modelProperties),{sku:{serializedName:"sku",type:{name:"Composite",className:"Sku"}}})}},PrivateEndpointConnection={type:{name:"Composite",className:"PrivateEndpointConnection",modelProperties:Object.assign(Object.assign({},Resource.type.modelProperties),{privateEndpoint:{serializedName:"properties.privateEndpoint",type:{name:"Composite",className:"PrivateEndpoint"}},privateLinkServiceConnectionState:{serializedName:"properties.privateLinkServiceConnectionState",type:{name:"Composite",className:"PrivateLinkServiceConnectionState"}},provisioningState:{serializedName:"properties.provisioningState",readOnly:!0,type:{name:"String"}}})}},TrackedResource={type:{name:"Composite",className:"TrackedResource",modelProperties:Object.assign(Object.assign({},Resource.type.modelProperties),{tags:{serializedName:"tags",type:{name:"Dictionary",value:{type:{name:"String"}}}},location:{serializedName:"location",required:!0,type:{name:"String"}}})}},ProxyResource={type:{name:"Composite",className:"ProxyResource",modelProperties:Object.assign({},Resource.type.modelProperties)}},PrivateLinkResource={type:{name:"Composite",className:"PrivateLinkResource",modelProperties:Object.assign(Object.assign({},Resource.type.modelProperties),{groupId:{serializedName:"properties.groupId",readOnly:!0,type:{name:"String"}},requiredMembers:{serializedName:"properties.requiredMembers",readOnly:!0,type:{name:"Sequence",element:{type:{name:"String"}}}},requiredZoneNames:{serializedName:"properties.requiredZoneNames",type:{name:"Sequence",element:{type:{name:"String"}}}}})}},OperationStatus={type:{name:"Composite",className:"OperationStatus",modelProperties:Object.assign(Object.assign({},OperationStatusResult.type.modelProperties),{properties:{serializedName:"properties",type:{name:"Dictionary",value:{type:{name:"any"}}}}})}},RedisLinkedServerProperties={type:{name:"Composite",className:"RedisLinkedServerProperties",modelProperties:Object.assign(Object.assign({},RedisLinkedServerCreateProperties.type.modelProperties),{provisioningState:{serializedName:"provisioningState",readOnly:!0,type:{name:"String"}}})}},RedisProperties={type:{name:"Composite",className:"RedisProperties",modelProperties:Object.assign(Object.assign({},RedisCreateProperties.type.modelProperties),{provisioningState:{serializedName:"provisioningState",readOnly:!0,type:{name:"String"}},hostName:{serializedName:"hostName",readOnly:!0,type:{name:"String"}},port:{serializedName:"port",readOnly:!0,type:{name:"Number"}},sslPort:{serializedName:"sslPort",readOnly:!0,type:{name:"Number"}},accessKeys:{serializedName:"accessKeys",type:{name:"Composite",className:"RedisAccessKeys"}},linkedServers:{serializedName:"linkedServers",readOnly:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"RedisLinkedServer"}}}},instances:{serializedName:"instances",readOnly:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"RedisInstanceDetails"}}}},privateEndpointConnections:{serializedName:"privateEndpointConnections",readOnly:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"PrivateEndpointConnection"}}}}})}},RedisResource={type:{name:"Composite",className:"RedisResource",modelProperties:Object.assign(Object.assign({},TrackedResource.type.modelProperties),{zones:{serializedName:"zones",type:{name:"Sequence",element:{type:{name:"String"}}}},identity:{serializedName:"identity",type:{name:"Composite",className:"ManagedServiceIdentity"}},redisConfiguration:{serializedName:"properties.redisConfiguration",type:{name:"Composite",className:"RedisCommonPropertiesRedisConfiguration"}},redisVersion:{serializedName:"properties.redisVersion",type:{name:"String"}},enableNonSslPort:{defaultValue:!1,serializedName:"properties.enableNonSslPort",type:{name:"Boolean"}},replicasPerMaster:{serializedName:"properties.replicasPerMaster",type:{name:"Number"}},replicasPerPrimary:{serializedName:"properties.replicasPerPrimary",type:{name:"Number"}},tenantSettings:{serializedName:"properties.tenantSettings",type:{name:"Dictionary",value:{type:{name:"String"}}}},shardCount:{serializedName:"properties.shardCount",type:{name:"Number"}},minimumTlsVersion:{serializedName:"properties.minimumTlsVersion",type:{name:"String"}},publicNetworkAccess:{defaultValue:"Enabled",serializedName:"properties.publicNetworkAccess",type:{name:"String"}},updateChannel:{serializedName:"properties.updateChannel",type:{name:"String"}},sku:{serializedName:"properties.sku",type:{name:"Composite",className:"Sku"}},subnetId:{constraints:{Pattern:new RegExp("^\\/subscriptions\\/[^/]*\\/resourceGroups\\/[^/]*\\/providers\\/Microsoft.(ClassicNetwork|Network)\\/virtualNetworks\\/[^/]*\\/subnets\\/[^/]*$")},serializedName:"properties.subnetId",type:{name:"String"}},staticIP:{constraints:{Pattern:new RegExp("^\\d+\\.\\d+\\.\\d+\\.\\d+$")},serializedName:"properties.staticIP",type:{name:"String"}},provisioningState:{serializedName:"properties.provisioningState",readOnly:!0,type:{name:"String"}},hostName:{serializedName:"properties.hostName",readOnly:!0,type:{name:"String"}},port:{serializedName:"properties.port",readOnly:!0,type:{name:"Number"}},sslPort:{serializedName:"properties.sslPort",readOnly:!0,type:{name:"Number"}},accessKeys:{serializedName:"properties.accessKeys",type:{name:"Composite",className:"RedisAccessKeys"}},linkedServers:{serializedName:"properties.linkedServers",readOnly:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"RedisLinkedServer"}}}},instances:{serializedName:"properties.instances",readOnly:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"RedisInstanceDetails"}}}},privateEndpointConnections:{serializedName:"properties.privateEndpointConnections",readOnly:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"PrivateEndpointConnection"}}}}})}},RedisFirewallRule={type:{name:"Composite",className:"RedisFirewallRule",modelProperties:Object.assign(Object.assign({},ProxyResource.type.modelProperties),{startIP:{serializedName:"properties.startIP",required:!0,type:{name:"String"}},endIP:{serializedName:"properties.endIP",required:!0,type:{name:"String"}}})}},RedisPatchSchedule={type:{name:"Composite",className:"RedisPatchSchedule",modelProperties:Object.assign(Object.assign({},ProxyResource.type.modelProperties),{location:{serializedName:"location",readOnly:!0,type:{name:"String"}},scheduleEntries:{serializedName:"properties.scheduleEntries",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"ScheduleEntry"}}}}})}},RedisLinkedServerWithProperties={type:{name:"Composite",className:"RedisLinkedServerWithProperties",modelProperties:Object.assign(Object.assign({},ProxyResource.type.modelProperties),{linkedRedisCacheId:{serializedName:"properties.linkedRedisCacheId",type:{name:"String"}},linkedRedisCacheLocation:{serializedName:"properties.linkedRedisCacheLocation",type:{name:"String"}},serverRole:{serializedName:"properties.serverRole",type:{name:"Enum",allowedValues:["Primary","Secondary"]}},geoReplicatedPrimaryHostName:{serializedName:"properties.geoReplicatedPrimaryHostName",readOnly:!0,type:{name:"String"}},primaryHostName:{serializedName:"properties.primaryHostName",readOnly:!0,type:{name:"String"}},provisioningState:{serializedName:"properties.provisioningState",readOnly:!0,type:{name:"String"}}})}},RedisCacheAccessPolicy={type:{name:"Composite",className:"RedisCacheAccessPolicy",modelProperties:Object.assign(Object.assign({},ProxyResource.type.modelProperties),{provisioningState:{serializedName:"properties.provisioningState",readOnly:!0,type:{name:"String"}},typePropertiesType:{serializedName:"properties.type",readOnly:!0,type:{name:"String"}},permissions:{serializedName:"properties.permissions",type:{name:"String"}}})}},RedisCacheAccessPolicyAssignment={type:{name:"Composite",className:"RedisCacheAccessPolicyAssignment",modelProperties:Object.assign(Object.assign({},ProxyResource.type.modelProperties),{provisioningState:{serializedName:"properties.provisioningState",readOnly:!0,type:{name:"String"}},objectId:{serializedName:"properties.objectId",type:{name:"String"}},objectIdAlias:{serializedName:"properties.objectIdAlias",type:{name:"String"}},accessPolicyName:{constraints:{Pattern:new RegExp("^([a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]|[a-zA-Z0-9])$")},serializedName:"properties.accessPolicyName",type:{name:"String"}}})}},RedisFirewallRuleCreateParameters={type:{name:"Composite",className:"RedisFirewallRuleCreateParameters",modelProperties:Object.assign({},RedisFirewallRule.type.modelProperties)}},RedisFlushCacheHeaders={type:{name:"Composite",className:"RedisFlushCacheHeaders",modelProperties:{location:{serializedName:"location",type:{name:"String"}},azureAsyncOperation:{serializedName:"azure-asyncoperation",type:{name:"String"}}}}},LinkedServerDeleteHeaders={type:{name:"Composite",className:"LinkedServerDeleteHeaders",modelProperties:{location:{serializedName:"location",type:{name:"String"}}}}},AccessPolicyDeleteHeaders={type:{name:"Composite",className:"AccessPolicyDeleteHeaders",modelProperties:{location:{serializedName:"location",type:{name:"String"}}}}},AccessPolicyAssignmentDeleteHeaders={type:{name:"Composite",className:"AccessPolicyAssignmentDeleteHeaders",modelProperties:{location:{serializedName:"location",type:{name:"String"}}}}};var Mappers=Object.freeze({__proto__:null,OperationListResult:OperationListResult,Operation:Operation,OperationDisplay:OperationDisplay,ErrorResponse:ErrorResponse,ErrorDetail:ErrorDetail,ErrorAdditionalInfo:ErrorAdditionalInfo,CheckNameAvailabilityParameters:CheckNameAvailabilityParameters,NotificationListResponse:NotificationListResponse,UpgradeNotification:UpgradeNotification,RedisCreateParameters:RedisCreateParameters,Sku:Sku,RedisCommonProperties:RedisCommonProperties,RedisCommonPropertiesRedisConfiguration:RedisCommonPropertiesRedisConfiguration,ManagedServiceIdentity:ManagedServiceIdentity,UserAssignedIdentity:UserAssignedIdentity,RedisAccessKeys:RedisAccessKeys,RedisLinkedServer:RedisLinkedServer,RedisInstanceDetails:RedisInstanceDetails,PrivateEndpoint:PrivateEndpoint,PrivateLinkServiceConnectionState:PrivateLinkServiceConnectionState,Resource:Resource,RedisUpdateParameters:RedisUpdateParameters,RedisListResult:RedisListResult,RedisRegenerateKeyParameters:RedisRegenerateKeyParameters,RedisRebootParameters:RedisRebootParameters,RedisForceRebootResponse:RedisForceRebootResponse,ImportRDBParameters:ImportRDBParameters,ExportRDBParameters:ExportRDBParameters,OperationStatusResult:OperationStatusResult,RedisFirewallRuleListResult:RedisFirewallRuleListResult,RedisPatchScheduleListResult:RedisPatchScheduleListResult,ScheduleEntry:ScheduleEntry,RedisLinkedServerCreateParameters:RedisLinkedServerCreateParameters,RedisLinkedServerCreateProperties:RedisLinkedServerCreateProperties,RedisLinkedServerWithPropertiesList:RedisLinkedServerWithPropertiesList,PrivateEndpointConnectionListResult:PrivateEndpointConnectionListResult,PrivateLinkResourceListResult:PrivateLinkResourceListResult,RedisCacheAccessPolicyList:RedisCacheAccessPolicyList,RedisCacheAccessPolicyAssignmentList:RedisCacheAccessPolicyAssignmentList,RedisCreateProperties:RedisCreateProperties,RedisUpdateProperties:RedisUpdateProperties,PrivateEndpointConnection:PrivateEndpointConnection,TrackedResource:TrackedResource,ProxyResource:ProxyResource,PrivateLinkResource:PrivateLinkResource,OperationStatus:OperationStatus,RedisLinkedServerProperties:RedisLinkedServerProperties,RedisProperties:RedisProperties,RedisResource:RedisResource,RedisFirewallRule:RedisFirewallRule,RedisPatchSchedule:RedisPatchSchedule,RedisLinkedServerWithProperties:RedisLinkedServerWithProperties,RedisCacheAccessPolicy:RedisCacheAccessPolicy,RedisCacheAccessPolicyAssignment:RedisCacheAccessPolicyAssignment,RedisFirewallRuleCreateParameters:RedisFirewallRuleCreateParameters,RedisFlushCacheHeaders:RedisFlushCacheHeaders,LinkedServerDeleteHeaders:LinkedServerDeleteHeaders,AccessPolicyDeleteHeaders:AccessPolicyDeleteHeaders,AccessPolicyAssignmentDeleteHeaders:AccessPolicyAssignmentDeleteHeaders});const accept={parameterPath:"accept",mapper:{defaultValue:"application/json",isConstant:!0,serializedName:"Accept",type:{name:"String"}}},$host={parameterPath:"$host",mapper:{serializedName:"$host",required:!0,type:{name:"String"}},skipEncoding:!0},apiVersion={parameterPath:"apiVersion",mapper:{defaultValue:"2023-08-01",isConstant:!0,serializedName:"api-version",type:{name:"String"}}},nextLink={parameterPath:"nextLink",mapper:{serializedName:"nextLink",required:!0,type:{name:"String"}},skipEncoding:!0},contentType={parameterPath:["options","contentType"],mapper:{defaultValue:"application/json",isConstant:!0,serializedName:"Content-Type",type:{name:"String"}}},parameters={parameterPath:"parameters",mapper:CheckNameAvailabilityParameters},subscriptionId={parameterPath:"subscriptionId",mapper:{constraints:{MinLength:1},serializedName:"subscriptionId",required:!0,type:{name:"String"}}},resourceGroupName={parameterPath:"resourceGroupName",mapper:{constraints:{MaxLength:90,MinLength:1},serializedName:"resourceGroupName",required:!0,type:{name:"String"}}},name={parameterPath:"name",mapper:{serializedName:"name",required:!0,type:{name:"String"}}},history={parameterPath:"history",mapper:{serializedName:"history",required:!0,type:{name:"Number"}}},parameters1={parameterPath:"parameters",mapper:RedisCreateParameters},parameters2={parameterPath:"parameters",mapper:RedisUpdateParameters},parameters3={parameterPath:"parameters",mapper:RedisRegenerateKeyParameters},parameters4={parameterPath:"parameters",mapper:RedisRebootParameters},parameters5={parameterPath:"parameters",mapper:ImportRDBParameters},parameters6={parameterPath:"parameters",mapper:ExportRDBParameters},cacheName={parameterPath:"cacheName",mapper:{constraints:{Pattern:new RegExp("^([a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]|[a-zA-Z0-9])$")},serializedName:"cacheName",required:!0,type:{name:"String"}}},parameters7={parameterPath:"parameters",mapper:RedisFirewallRule},ruleName={parameterPath:"ruleName",mapper:{serializedName:"ruleName",required:!0,type:{name:"String"}}},parameters8={parameterPath:"parameters",mapper:RedisPatchSchedule},defaultParam={parameterPath:"defaultParam",mapper:{serializedName:"default",required:!0,type:{name:"String"}}},parameters9={parameterPath:"parameters",mapper:RedisLinkedServerCreateParameters},linkedServerName={parameterPath:"linkedServerName",mapper:{serializedName:"linkedServerName",required:!0,type:{name:"String"}}},privateEndpointConnectionName={parameterPath:"privateEndpointConnectionName",mapper:{serializedName:"privateEndpointConnectionName",required:!0,type:{name:"String"}}},properties={parameterPath:"properties",mapper:PrivateEndpointConnection},location={parameterPath:"location",mapper:{serializedName:"location",required:!0,type:{name:"String"}}},operationId={parameterPath:"operationId",mapper:{serializedName:"operationId",required:!0,type:{name:"String"}}},parameters10={parameterPath:"parameters",mapper:RedisCacheAccessPolicy},accessPolicyName={parameterPath:"accessPolicyName",mapper:{constraints:{Pattern:new RegExp("^([a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]|[a-zA-Z0-9])$"),MaxLength:63,MinLength:3},serializedName:"accessPolicyName",required:!0,type:{name:"String"}}},parameters11={parameterPath:"parameters",mapper:RedisCacheAccessPolicyAssignment},accessPolicyAssignmentName={parameterPath:"accessPolicyAssignmentName",mapper:{constraints:{Pattern:new RegExp("^([a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]|[a-zA-Z0-9])$"),MaxLength:63,MinLength:3},serializedName:"accessPolicyAssignmentName",required:!0,type:{name:"String"}}};class OperationsImpl{constructor(e){this.client=e}list(r){const e=this.listPagingAll(r);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listPagingPage(r,e)}}}listPagingPage(a,s){return tslib.__asyncGenerator(this,arguments,function*(){let e,r=null==s?void 0:s.continuationToken;var t;for(r||(setContinuationToken(t=(e=yield tslib.__await(this._list(a))).value||[],r=e.nextLink),yield yield tslib.__await(t));r;){e=yield tslib.__await(this._listNext(r,a)),r=e.nextLink;var i=e.value||[];setContinuationToken(i,r),yield yield tslib.__await(i)}})}listPagingAll(o){return tslib.__asyncGenerator(this,arguments,function*(){var e,r,t,i;try{for(var a,s=!0,n=tslib.__asyncValues(this.listPagingPage(o));!(e=(a=yield tslib.__await(n.next())).done);){i=a.value,s=!1;try{yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(i)))}finally{s=!0}}}catch(e){r={error:e}}finally{try{s||e||!(t=n.return)||(yield tslib.__await(t.call(n)))}finally{if(r)throw r.error}}})}_list(e){return this.client.sendOperationRequest({options:e},listOperationSpec$5)}_listNext(e,r){return this.client.sendOperationRequest({nextLink:e,options:r},listNextOperationSpec$4)}}const serializer$9=coreClient__namespace.createSerializer(Mappers,!1),listOperationSpec$5={path:"/providers/Microsoft.Cache/operations",httpMethod:"GET",responses:{200:{bodyMapper:OperationListResult},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host],headerParameters:[accept],serializer:serializer$9},listNextOperationSpec$4={path:"{nextLink}",httpMethod:"GET",responses:{200:{bodyMapper:OperationListResult},default:{bodyMapper:ErrorResponse}},urlParameters:[$host,nextLink],headerParameters:[accept],serializer:serializer$9};function createLroSpec(e){const{args:i,spec:a,sendOperationFn:s}=e;return{requestMethod:a.httpMethod,requestPath:a.path,sendInitialRequest:()=>s(i,a),sendPollRequest:(e,r)=>{var t=tslib.__rest(a,["requestBody"]);return s(i,Object.assign(Object.assign({},t),{httpMethod:"GET",path:e,abortSignal:null==r?void 0:r.abortSignal}))}}}class RedisImpl{constructor(e){this.client=e}listUpgradeNotifications(r,t,i,a){const e=this.listUpgradeNotificationsPagingAll(r,t,i,a);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listUpgradeNotificationsPagingPage(r,t,i,a,e)}}}listUpgradeNotificationsPagingPage(a,s,n,o,p){return tslib.__asyncGenerator(this,arguments,function*(){let e,r=null==p?void 0:p.continuationToken;var t;for(r||(setContinuationToken(t=(e=yield tslib.__await(this._listUpgradeNotifications(a,s,n,o))).value||[],r=e.nextLink),yield yield tslib.__await(t));r;){e=yield tslib.__await(this._listUpgradeNotificationsNext(a,s,r,o)),r=e.nextLink;var i=e.value||[];setContinuationToken(i,r),yield yield tslib.__await(i)}})}listUpgradeNotificationsPagingAll(o,p,l,c){return tslib.__asyncGenerator(this,arguments,function*(){var e,r,t,i;try{for(var a,s=!0,n=tslib.__asyncValues(this.listUpgradeNotificationsPagingPage(o,p,l,c));!(e=(a=yield tslib.__await(n.next())).done);){i=a.value,s=!1;try{yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(i)))}finally{s=!0}}}catch(e){r={error:e}}finally{try{s||e||!(t=n.return)||(yield tslib.__await(t.call(n)))}finally{if(r)throw r.error}}})}listByResourceGroup(r,t){const e=this.listByResourceGroupPagingAll(r,t);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listByResourceGroupPagingPage(r,t,e)}}}listByResourceGroupPagingPage(a,s,n){return tslib.__asyncGenerator(this,arguments,function*(){let e,r=null==n?void 0:n.continuationToken;var t;for(r||(setContinuationToken(t=(e=yield tslib.__await(this._listByResourceGroup(a,s))).value||[],r=e.nextLink),yield yield tslib.__await(t));r;){e=yield tslib.__await(this._listByResourceGroupNext(a,r,s)),r=e.nextLink;var i=e.value||[];setContinuationToken(i,r),yield yield tslib.__await(i)}})}listByResourceGroupPagingAll(o,p){return tslib.__asyncGenerator(this,arguments,function*(){var e,r,t,i;try{for(var a,s=!0,n=tslib.__asyncValues(this.listByResourceGroupPagingPage(o,p));!(e=(a=yield tslib.__await(n.next())).done);){i=a.value,s=!1;try{yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(i)))}finally{s=!0}}}catch(e){r={error:e}}finally{try{s||e||!(t=n.return)||(yield tslib.__await(t.call(n)))}finally{if(r)throw r.error}}})}listBySubscription(r){const e=this.listBySubscriptionPagingAll(r);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listBySubscriptionPagingPage(r,e)}}}listBySubscriptionPagingPage(a,s){return tslib.__asyncGenerator(this,arguments,function*(){let e,r=null==s?void 0:s.continuationToken;var t;for(r||(setContinuationToken(t=(e=yield tslib.__await(this._listBySubscription(a))).value||[],r=e.nextLink),yield yield tslib.__await(t));r;){e=yield tslib.__await(this._listBySubscriptionNext(r,a)),r=e.nextLink;var i=e.value||[];setContinuationToken(i,r),yield yield tslib.__await(i)}})}listBySubscriptionPagingAll(o){return tslib.__asyncGenerator(this,arguments,function*(){var e,r,t,i;try{for(var a,s=!0,n=tslib.__asyncValues(this.listBySubscriptionPagingPage(o));!(e=(a=yield tslib.__await(n.next())).done);){i=a.value,s=!1;try{yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(i)))}finally{s=!0}}}catch(e){r={error:e}}finally{try{s||e||!(t=n.return)||(yield tslib.__await(t.call(n)))}finally{if(r)throw r.error}}})}checkNameAvailability(e,r){return this.client.sendOperationRequest({parameters:e,options:r},checkNameAvailabilityOperationSpec)}_listUpgradeNotifications(e,r,t,i){return this.client.sendOperationRequest({resourceGroupName:e,name:r,history:t,options:i},listUpgradeNotificationsOperationSpec)}beginCreate(r,t,i,a){return tslib.__awaiter(this,void 0,void 0,function*(){const s=(e,r)=>tslib.__awaiter(this,void 0,void 0,function*(){return this.client.sendOperationRequest(e,r)});var e=createLroSpec({sendOperationFn:(r,a)=>tslib.__awaiter(this,void 0,void 0,function*(){let t=void 0;const i=null==(e=r.options)?void 0:e.onResponse;var e=Object.assign(Object.assign({},r),{options:Object.assign(Object.assign({},r.options),{onResponse:(e,r)=>{t=e,null!==i&&void 0!==i&&i(e,r)}})});return{flatResponse:yield s(e,a),rawResponse:{statusCode:t.status,body:t.parsedBody,headers:t.headers.toJSON()}}}),args:{resourceGroupName:r,name:t,parameters:i,options:a},spec:createOperationSpec$1}),e=yield coreLro.createHttpPoller(e,{restoreFrom:null==a?void 0:a.resumeFrom,intervalInMs:null==a?void 0:a.updateIntervalInMs});return yield e.poll(),e})}beginCreateAndWait(e,r,t,i){return tslib.__awaiter(this,void 0,void 0,function*(){return(yield this.beginCreate(e,r,t,i)).pollUntilDone()})}beginUpdate(r,t,i,a){return tslib.__awaiter(this,void 0,void 0,function*(){const s=(e,r)=>tslib.__awaiter(this,void 0,void 0,function*(){return this.client.sendOperationRequest(e,r)});var e=createLroSpec({sendOperationFn:(r,a)=>tslib.__awaiter(this,void 0,void 0,function*(){let t=void 0;const i=null==(e=r.options)?void 0:e.onResponse;var e=Object.assign(Object.assign({},r),{options:Object.assign(Object.assign({},r.options),{onResponse:(e,r)=>{t=e,null!==i&&void 0!==i&&i(e,r)}})});return{flatResponse:yield s(e,a),rawResponse:{statusCode:t.status,body:t.parsedBody,headers:t.headers.toJSON()}}}),args:{resourceGroupName:r,name:t,parameters:i,options:a},spec:updateOperationSpec}),e=yield coreLro.createHttpPoller(e,{restoreFrom:null==a?void 0:a.resumeFrom,intervalInMs:null==a?void 0:a.updateIntervalInMs});return yield e.poll(),e})}beginUpdateAndWait(e,r,t,i){return tslib.__awaiter(this,void 0,void 0,function*(){return(yield this.beginUpdate(e,r,t,i)).pollUntilDone()})}beginDelete(r,t,i){return tslib.__awaiter(this,void 0,void 0,function*(){const s=(e,r)=>tslib.__awaiter(this,void 0,void 0,function*(){return this.client.sendOperationRequest(e,r)});var e=createLroSpec({sendOperationFn:(r,a)=>tslib.__awaiter(this,void 0,void 0,function*(){let t=void 0;const i=null==(e=r.options)?void 0:e.onResponse;var e=Object.assign(Object.assign({},r),{options:Object.assign(Object.assign({},r.options),{onResponse:(e,r)=>{t=e,null!==i&&void 0!==i&&i(e,r)}})});return{flatResponse:yield s(e,a),rawResponse:{statusCode:t.status,body:t.parsedBody,headers:t.headers.toJSON()}}}),args:{resourceGroupName:r,name:t,options:i},spec:deleteOperationSpec$6}),e=yield coreLro.createHttpPoller(e,{restoreFrom:null==i?void 0:i.resumeFrom,intervalInMs:null==i?void 0:i.updateIntervalInMs});return yield e.poll(),e})}beginDeleteAndWait(e,r,t){return tslib.__awaiter(this,void 0,void 0,function*(){return(yield this.beginDelete(e,r,t)).pollUntilDone()})}get(e,r,t){return this.client.sendOperationRequest({resourceGroupName:e,name:r,options:t},getOperationSpec$7)}_listByResourceGroup(e,r){return this.client.sendOperationRequest({resourceGroupName:e,options:r},listByResourceGroupOperationSpec)}_listBySubscription(e){return this.client.sendOperationRequest({options:e},listBySubscriptionOperationSpec)}listKeys(e,r,t){return this.client.sendOperationRequest({resourceGroupName:e,name:r,options:t},listKeysOperationSpec)}regenerateKey(e,r,t,i){return this.client.sendOperationRequest({resourceGroupName:e,name:r,parameters:t,options:i},regenerateKeyOperationSpec)}forceReboot(e,r,t,i){return this.client.sendOperationRequest({resourceGroupName:e,name:r,parameters:t,options:i},forceRebootOperationSpec)}beginImportData(r,t,i,a){return tslib.__awaiter(this,void 0,void 0,function*(){const s=(e,r)=>tslib.__awaiter(this,void 0,void 0,function*(){return this.client.sendOperationRequest(e,r)});var e=createLroSpec({sendOperationFn:(r,a)=>tslib.__awaiter(this,void 0,void 0,function*(){let t=void 0;const i=null==(e=r.options)?void 0:e.onResponse;var e=Object.assign(Object.assign({},r),{options:Object.assign(Object.assign({},r.options),{onResponse:(e,r)=>{t=e,null!==i&&void 0!==i&&i(e,r)}})});return{flatResponse:yield s(e,a),rawResponse:{statusCode:t.status,body:t.parsedBody,headers:t.headers.toJSON()}}}),args:{resourceGroupName:r,name:t,parameters:i,options:a},spec:importDataOperationSpec}),e=yield coreLro.createHttpPoller(e,{restoreFrom:null==a?void 0:a.resumeFrom,intervalInMs:null==a?void 0:a.updateIntervalInMs});return yield e.poll(),e})}beginImportDataAndWait(e,r,t,i){return tslib.__awaiter(this,void 0,void 0,function*(){return(yield this.beginImportData(e,r,t,i)).pollUntilDone()})}beginExportData(r,t,i,a){return tslib.__awaiter(this,void 0,void 0,function*(){const s=(e,r)=>tslib.__awaiter(this,void 0,void 0,function*(){return this.client.sendOperationRequest(e,r)});var e=createLroSpec({sendOperationFn:(r,a)=>tslib.__awaiter(this,void 0,void 0,function*(){let t=void 0;const i=null==(e=r.options)?void 0:e.onResponse;var e=Object.assign(Object.assign({},r),{options:Object.assign(Object.assign({},r.options),{onResponse:(e,r)=>{t=e,null!==i&&void 0!==i&&i(e,r)}})});return{flatResponse:yield s(e,a),rawResponse:{statusCode:t.status,body:t.parsedBody,headers:t.headers.toJSON()}}}),args:{resourceGroupName:r,name:t,parameters:i,options:a},spec:exportDataOperationSpec}),e=yield coreLro.createHttpPoller(e,{restoreFrom:null==a?void 0:a.resumeFrom,intervalInMs:null==a?void 0:a.updateIntervalInMs});return yield e.poll(),e})}beginExportDataAndWait(e,r,t,i){return tslib.__awaiter(this,void 0,void 0,function*(){return(yield this.beginExportData(e,r,t,i)).pollUntilDone()})}beginFlushCache(r,t,i){return tslib.__awaiter(this,void 0,void 0,function*(){const s=(e,r)=>tslib.__awaiter(this,void 0,void 0,function*(){return this.client.sendOperationRequest(e,r)});var e=createLroSpec({sendOperationFn:(r,a)=>tslib.__awaiter(this,void 0,void 0,function*(){let t=void 0;const i=null==(e=r.options)?void 0:e.onResponse;var e=Object.assign(Object.assign({},r),{options:Object.assign(Object.assign({},r.options),{onResponse:(e,r)=>{t=e,null!==i&&void 0!==i&&i(e,r)}})});return{flatResponse:yield s(e,a),rawResponse:{statusCode:t.status,body:t.parsedBody,headers:t.headers.toJSON()}}}),args:{resourceGroupName:r,cacheName:t,options:i},spec:flushCacheOperationSpec}),e=yield coreLro.createHttpPoller(e,{restoreFrom:null==i?void 0:i.resumeFrom,intervalInMs:null==i?void 0:i.updateIntervalInMs,resourceLocationConfig:"location"});return yield e.poll(),e})}beginFlushCacheAndWait(e,r,t){return tslib.__awaiter(this,void 0,void 0,function*(){return(yield this.beginFlushCache(e,r,t)).pollUntilDone()})}_listUpgradeNotificationsNext(e,r,t,i){return this.client.sendOperationRequest({resourceGroupName:e,name:r,nextLink:t,options:i},listUpgradeNotificationsNextOperationSpec)}_listByResourceGroupNext(e,r,t){return this.client.sendOperationRequest({resourceGroupName:e,nextLink:r,options:t},listByResourceGroupNextOperationSpec)}_listBySubscriptionNext(e,r){return this.client.sendOperationRequest({nextLink:e,options:r},listBySubscriptionNextOperationSpec)}}const serializer$8=coreClient__namespace.createSerializer(Mappers,!1),checkNameAvailabilityOperationSpec={path:"/subscriptions/{subscriptionId}/providers/Microsoft.Cache/CheckNameAvailability",httpMethod:"POST",responses:{200:{},default:{bodyMapper:ErrorResponse}},requestBody:parameters,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer$8},listUpgradeNotificationsOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}/listUpgradeNotifications",httpMethod:"GET",responses:{200:{bodyMapper:NotificationListResponse},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion,history],urlParameters:[$host,subscriptionId,resourceGroupName,name],headerParameters:[accept],serializer:serializer$8},createOperationSpec$1={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}",httpMethod:"PUT",responses:{200:{bodyMapper:RedisResource},201:{bodyMapper:RedisResource},202:{bodyMapper:RedisResource},204:{bodyMapper:RedisResource},default:{bodyMapper:ErrorResponse}},requestBody:parameters1,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,name],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer$8},updateOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}",httpMethod:"PATCH",responses:{200:{bodyMapper:RedisResource},201:{bodyMapper:RedisResource},202:{bodyMapper:RedisResource},204:{bodyMapper:RedisResource},default:{bodyMapper:ErrorResponse}},requestBody:parameters2,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,name],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer$8},deleteOperationSpec$6={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}",httpMethod:"DELETE",responses:{200:{},201:{},202:{},204:{},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,name],headerParameters:[accept],serializer:serializer$8},getOperationSpec$7={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}",httpMethod:"GET",responses:{200:{bodyMapper:RedisResource},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,name],headerParameters:[accept],serializer:serializer$8},listByResourceGroupOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis",httpMethod:"GET",responses:{200:{bodyMapper:RedisListResult},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName],headerParameters:[accept],serializer:serializer$8},listBySubscriptionOperationSpec={path:"/subscriptions/{subscriptionId}/providers/Microsoft.Cache/redis",httpMethod:"GET",responses:{200:{bodyMapper:RedisListResult},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId],headerParameters:[accept],serializer:serializer$8},listKeysOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}/listKeys",httpMethod:"POST",responses:{200:{bodyMapper:RedisAccessKeys},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,name],headerParameters:[accept],serializer:serializer$8},regenerateKeyOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}/regenerateKey",httpMethod:"POST",responses:{200:{bodyMapper:RedisAccessKeys},default:{bodyMapper:ErrorResponse}},requestBody:parameters3,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,name],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer$8},forceRebootOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}/forceReboot",httpMethod:"POST",responses:{200:{bodyMapper:RedisForceRebootResponse},default:{bodyMapper:ErrorResponse}},requestBody:parameters4,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,name],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer$8},importDataOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}/import",httpMethod:"POST",responses:{200:{},201:{},202:{},204:{},default:{bodyMapper:ErrorResponse}},requestBody:parameters5,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,name],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer$8},exportDataOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}/export",httpMethod:"POST",responses:{200:{},201:{},202:{},204:{},default:{bodyMapper:ErrorResponse}},requestBody:parameters6,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,name],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer$8},flushCacheOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{cacheName}/flush",httpMethod:"POST",responses:{200:{bodyMapper:OperationStatusResult,headersMapper:RedisFlushCacheHeaders},201:{bodyMapper:OperationStatusResult,headersMapper:RedisFlushCacheHeaders},202:{bodyMapper:OperationStatusResult,headersMapper:RedisFlushCacheHeaders},204:{bodyMapper:OperationStatusResult,headersMapper:RedisFlushCacheHeaders},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,cacheName],headerParameters:[accept],serializer:serializer$8},listUpgradeNotificationsNextOperationSpec={path:"{nextLink}",httpMethod:"GET",responses:{200:{bodyMapper:NotificationListResponse},default:{bodyMapper:ErrorResponse}},urlParameters:[$host,nextLink,subscriptionId,resourceGroupName,name],headerParameters:[accept],serializer:serializer$8},listByResourceGroupNextOperationSpec={path:"{nextLink}",httpMethod:"GET",responses:{200:{bodyMapper:RedisListResult},default:{bodyMapper:ErrorResponse}},urlParameters:[$host,nextLink,subscriptionId,resourceGroupName],headerParameters:[accept],serializer:serializer$8},listBySubscriptionNextOperationSpec={path:"{nextLink}",httpMethod:"GET",responses:{200:{bodyMapper:RedisListResult},default:{bodyMapper:ErrorResponse}},urlParameters:[$host,nextLink,subscriptionId],headerParameters:[accept],serializer:serializer$8};class FirewallRulesImpl{constructor(e){this.client=e}list(r,t,i){const e=this.listPagingAll(r,t,i);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listPagingPage(r,t,i,e)}}}listPagingPage(a,s,n,o){return tslib.__asyncGenerator(this,arguments,function*(){let e,r=null==o?void 0:o.continuationToken;var t;for(r||(setContinuationToken(t=(e=yield tslib.__await(this._list(a,s,n))).value||[],r=e.nextLink),yield yield tslib.__await(t));r;){e=yield tslib.__await(this._listNext(a,s,r,n)),r=e.nextLink;var i=e.value||[];setContinuationToken(i,r),yield yield tslib.__await(i)}})}listPagingAll(o,p,l){return tslib.__asyncGenerator(this,arguments,function*(){var e,r,t,i;try{for(var a,s=!0,n=tslib.__asyncValues(this.listPagingPage(o,p,l));!(e=(a=yield tslib.__await(n.next())).done);){i=a.value,s=!1;try{yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(i)))}finally{s=!0}}}catch(e){r={error:e}}finally{try{s||e||!(t=n.return)||(yield tslib.__await(t.call(n)))}finally{if(r)throw r.error}}})}_list(e,r,t){return this.client.sendOperationRequest({resourceGroupName:e,cacheName:r,options:t},listOperationSpec$4)}createOrUpdate(e,r,t,i,a){return this.client.sendOperationRequest({resourceGroupName:e,cacheName:r,ruleName:t,parameters:i,options:a},createOrUpdateOperationSpec$1)}get(e,r,t,i){return this.client.sendOperationRequest({resourceGroupName:e,cacheName:r,ruleName:t,options:i},getOperationSpec$6)}delete(e,r,t,i){return this.client.sendOperationRequest({resourceGroupName:e,cacheName:r,ruleName:t,options:i},deleteOperationSpec$5)}_listNext(e,r,t,i){return this.client.sendOperationRequest({resourceGroupName:e,cacheName:r,nextLink:t,options:i},listNextOperationSpec$3)}}const serializer$7=coreClient__namespace.createSerializer(Mappers,!1),listOperationSpec$4={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{cacheName}/firewallRules",httpMethod:"GET",responses:{200:{bodyMapper:RedisFirewallRuleListResult},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,cacheName],headerParameters:[accept],serializer:serializer$7},createOrUpdateOperationSpec$1={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{cacheName}/firewallRules/{ruleName}",httpMethod:"PUT",responses:{200:{bodyMapper:RedisFirewallRule},201:{bodyMapper:RedisFirewallRule},default:{bodyMapper:ErrorResponse}},requestBody:parameters7,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,cacheName,ruleName],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer$7},getOperationSpec$6={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{cacheName}/firewallRules/{ruleName}",httpMethod:"GET",responses:{200:{bodyMapper:RedisFirewallRule},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,cacheName,ruleName],headerParameters:[accept],serializer:serializer$7},deleteOperationSpec$5={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{cacheName}/firewallRules/{ruleName}",httpMethod:"DELETE",responses:{200:{},204:{},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,cacheName,ruleName],headerParameters:[accept],serializer:serializer$7},listNextOperationSpec$3={path:"{nextLink}",httpMethod:"GET",responses:{200:{bodyMapper:RedisFirewallRuleListResult},default:{bodyMapper:ErrorResponse}},urlParameters:[$host,nextLink,subscriptionId,resourceGroupName,cacheName],headerParameters:[accept],serializer:serializer$7};class PatchSchedulesImpl{constructor(e){this.client=e}listByRedisResource(r,t,i){const e=this.listByRedisResourcePagingAll(r,t,i);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listByRedisResourcePagingPage(r,t,i,e)}}}listByRedisResourcePagingPage(a,s,n,o){return tslib.__asyncGenerator(this,arguments,function*(){let e,r=null==o?void 0:o.continuationToken;var t;for(r||(setContinuationToken(t=(e=yield tslib.__await(this._listByRedisResource(a,s,n))).value||[],r=e.nextLink),yield yield tslib.__await(t));r;){e=yield tslib.__await(this._listByRedisResourceNext(a,s,r,n)),r=e.nextLink;var i=e.value||[];setContinuationToken(i,r),yield yield tslib.__await(i)}})}listByRedisResourcePagingAll(o,p,l){return tslib.__asyncGenerator(this,arguments,function*(){var e,r,t,i;try{for(var a,s=!0,n=tslib.__asyncValues(this.listByRedisResourcePagingPage(o,p,l));!(e=(a=yield tslib.__await(n.next())).done);){i=a.value,s=!1;try{yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(i)))}finally{s=!0}}}catch(e){r={error:e}}finally{try{s||e||!(t=n.return)||(yield tslib.__await(t.call(n)))}finally{if(r)throw r.error}}})}_listByRedisResource(e,r,t){return this.client.sendOperationRequest({resourceGroupName:e,cacheName:r,options:t},listByRedisResourceOperationSpec)}createOrUpdate(e,r,t,i,a){return this.client.sendOperationRequest({resourceGroupName:e,name:r,defaultParam:t,parameters:i,options:a},createOrUpdateOperationSpec)}delete(e,r,t,i){return this.client.sendOperationRequest({resourceGroupName:e,name:r,defaultParam:t,options:i},deleteOperationSpec$4)}get(e,r,t,i){return this.client.sendOperationRequest({resourceGroupName:e,name:r,defaultParam:t,options:i},getOperationSpec$5)}_listByRedisResourceNext(e,r,t,i){return this.client.sendOperationRequest({resourceGroupName:e,cacheName:r,nextLink:t,options:i},listByRedisResourceNextOperationSpec)}}const serializer$6=coreClient__namespace.createSerializer(Mappers,!1),listByRedisResourceOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{cacheName}/patchSchedules",httpMethod:"GET",responses:{200:{bodyMapper:RedisPatchScheduleListResult},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,cacheName],headerParameters:[accept],serializer:serializer$6},createOrUpdateOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}/patchSchedules/{default}",httpMethod:"PUT",responses:{200:{bodyMapper:RedisPatchSchedule},201:{bodyMapper:RedisPatchSchedule},default:{bodyMapper:ErrorResponse}},requestBody:parameters8,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,name,defaultParam],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer$6},deleteOperationSpec$4={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}/patchSchedules/{default}",httpMethod:"DELETE",responses:{200:{},204:{},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,name,defaultParam],headerParameters:[accept],serializer:serializer$6},getOperationSpec$5={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}/patchSchedules/{default}",httpMethod:"GET",responses:{200:{bodyMapper:RedisPatchSchedule},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,name,defaultParam],headerParameters:[accept],serializer:serializer$6},listByRedisResourceNextOperationSpec={path:"{nextLink}",httpMethod:"GET",responses:{200:{bodyMapper:RedisPatchScheduleListResult},default:{bodyMapper:ErrorResponse}},urlParameters:[$host,nextLink,subscriptionId,resourceGroupName,cacheName],headerParameters:[accept],serializer:serializer$6};class LinkedServerImpl{constructor(e){this.client=e}list(r,t,i){const e=this.listPagingAll(r,t,i);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listPagingPage(r,t,i,e)}}}listPagingPage(a,s,n,o){return tslib.__asyncGenerator(this,arguments,function*(){let e,r=null==o?void 0:o.continuationToken;var t;for(r||(setContinuationToken(t=(e=yield tslib.__await(this._list(a,s,n))).value||[],r=e.nextLink),yield yield tslib.__await(t));r;){e=yield tslib.__await(this._listNext(a,s,r,n)),r=e.nextLink;var i=e.value||[];setContinuationToken(i,r),yield yield tslib.__await(i)}})}listPagingAll(o,p,l){return tslib.__asyncGenerator(this,arguments,function*(){var e,r,t,i;try{for(var a,s=!0,n=tslib.__asyncValues(this.listPagingPage(o,p,l));!(e=(a=yield tslib.__await(n.next())).done);){i=a.value,s=!1;try{yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(i)))}finally{s=!0}}}catch(e){r={error:e}}finally{try{s||e||!(t=n.return)||(yield tslib.__await(t.call(n)))}finally{if(r)throw r.error}}})}beginCreate(r,t,i,a,n){return tslib.__awaiter(this,void 0,void 0,function*(){const s=(e,r)=>tslib.__awaiter(this,void 0,void 0,function*(){return this.client.sendOperationRequest(e,r)});var e=createLroSpec({sendOperationFn:(r,a)=>tslib.__awaiter(this,void 0,void 0,function*(){let t=void 0;const i=null==(e=r.options)?void 0:e.onResponse;var e=Object.assign(Object.assign({},r),{options:Object.assign(Object.assign({},r.options),{onResponse:(e,r)=>{t=e,null!==i&&void 0!==i&&i(e,r)}})});return{flatResponse:yield s(e,a),rawResponse:{statusCode:t.status,body:t.parsedBody,headers:t.headers.toJSON()}}}),args:{resourceGroupName:r,name:t,linkedServerName:i,parameters:a,options:n},spec:createOperationSpec}),e=yield coreLro.createHttpPoller(e,{restoreFrom:null==n?void 0:n.resumeFrom,intervalInMs:null==n?void 0:n.updateIntervalInMs});return yield e.poll(),e})}beginCreateAndWait(e,r,t,i,a){return tslib.__awaiter(this,void 0,void 0,function*(){return(yield this.beginCreate(e,r,t,i,a)).pollUntilDone()})}beginDelete(r,t,i,a){return tslib.__awaiter(this,void 0,void 0,function*(){const s=(e,r)=>tslib.__awaiter(this,void 0,void 0,function*(){return this.client.sendOperationRequest(e,r)});var e=createLroSpec({sendOperationFn:(r,a)=>tslib.__awaiter(this,void 0,void 0,function*(){let t=void 0;const i=null==(e=r.options)?void 0:e.onResponse;var e=Object.assign(Object.assign({},r),{options:Object.assign(Object.assign({},r.options),{onResponse:(e,r)=>{t=e,null!==i&&void 0!==i&&i(e,r)}})});return{flatResponse:yield s(e,a),rawResponse:{statusCode:t.status,body:t.parsedBody,headers:t.headers.toJSON()}}}),args:{resourceGroupName:r,name:t,linkedServerName:i,options:a},spec:deleteOperationSpec$3}),e=yield coreLro.createHttpPoller(e,{restoreFrom:null==a?void 0:a.resumeFrom,intervalInMs:null==a?void 0:a.updateIntervalInMs});return yield e.poll(),e})}beginDeleteAndWait(e,r,t,i){return tslib.__awaiter(this,void 0,void 0,function*(){return(yield this.beginDelete(e,r,t,i)).pollUntilDone()})}get(e,r,t,i){return this.client.sendOperationRequest({resourceGroupName:e,name:r,linkedServerName:t,options:i},getOperationSpec$4)}_list(e,r,t){return this.client.sendOperationRequest({resourceGroupName:e,name:r,options:t},listOperationSpec$3)}_listNext(e,r,t,i){return this.client.sendOperationRequest({resourceGroupName:e,name:r,nextLink:t,options:i},listNextOperationSpec$2)}}const serializer$5=coreClient__namespace.createSerializer(Mappers,!1),createOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}/linkedServers/{linkedServerName}",httpMethod:"PUT",responses:{200:{bodyMapper:RedisLinkedServerWithProperties},201:{bodyMapper:RedisLinkedServerWithProperties},202:{bodyMapper:RedisLinkedServerWithProperties},204:{bodyMapper:RedisLinkedServerWithProperties},default:{bodyMapper:ErrorResponse}},requestBody:parameters9,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,name,linkedServerName],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer$5},deleteOperationSpec$3={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}/linkedServers/{linkedServerName}",httpMethod:"DELETE",responses:{200:{},201:{},202:{},204:{},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,name,linkedServerName],headerParameters:[accept],serializer:serializer$5},getOperationSpec$4={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}/linkedServers/{linkedServerName}",httpMethod:"GET",responses:{200:{bodyMapper:RedisLinkedServerWithProperties},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,name,linkedServerName],headerParameters:[accept],serializer:serializer$5},listOperationSpec$3={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}/linkedServers",httpMethod:"GET",responses:{200:{bodyMapper:RedisLinkedServerWithPropertiesList},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,name],headerParameters:[accept],serializer:serializer$5},listNextOperationSpec$2={path:"{nextLink}",httpMethod:"GET",responses:{200:{bodyMapper:RedisLinkedServerWithPropertiesList},default:{bodyMapper:ErrorResponse}},urlParameters:[$host,nextLink,subscriptionId,resourceGroupName,name],headerParameters:[accept],serializer:serializer$5};class PrivateEndpointConnectionsImpl{constructor(e){this.client=e}list(r,t,i){const e=this.listPagingAll(r,t,i);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listPagingPage(r,t,i,e)}}}listPagingPage(r,t,i,e){return tslib.__asyncGenerator(this,arguments,function*(){var e=yield tslib.__await(this._list(r,t,i));yield yield tslib.__await(e.value||[])})}listPagingAll(o,p,l){return tslib.__asyncGenerator(this,arguments,function*(){var e,r,t,i;try{for(var a,s=!0,n=tslib.__asyncValues(this.listPagingPage(o,p,l));!(e=(a=yield tslib.__await(n.next())).done);){i=a.value,s=!1;try{yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(i)))}finally{s=!0}}}catch(e){r={error:e}}finally{try{s||e||!(t=n.return)||(yield tslib.__await(t.call(n)))}finally{if(r)throw r.error}}})}_list(e,r,t){return this.client.sendOperationRequest({resourceGroupName:e,cacheName:r,options:t},listOperationSpec$2)}get(e,r,t,i){return this.client.sendOperationRequest({resourceGroupName:e,cacheName:r,privateEndpointConnectionName:t,options:i},getOperationSpec$3)}beginPut(r,t,i,a,n){return tslib.__awaiter(this,void 0,void 0,function*(){const s=(e,r)=>tslib.__awaiter(this,void 0,void 0,function*(){return this.client.sendOperationRequest(e,r)});var e=createLroSpec({sendOperationFn:(r,a)=>tslib.__awaiter(this,void 0,void 0,function*(){let t=void 0;const i=null==(e=r.options)?void 0:e.onResponse;var e=Object.assign(Object.assign({},r),{options:Object.assign(Object.assign({},r.options),{onResponse:(e,r)=>{t=e,null!==i&&void 0!==i&&i(e,r)}})});return{flatResponse:yield s(e,a),rawResponse:{statusCode:t.status,body:t.parsedBody,headers:t.headers.toJSON()}}}),args:{resourceGroupName:r,cacheName:t,privateEndpointConnectionName:i,properties:a,options:n},spec:putOperationSpec}),e=yield coreLro.createHttpPoller(e,{restoreFrom:null==n?void 0:n.resumeFrom,intervalInMs:null==n?void 0:n.updateIntervalInMs});return yield e.poll(),e})}beginPutAndWait(e,r,t,i,a){return tslib.__awaiter(this,void 0,void 0,function*(){return(yield this.beginPut(e,r,t,i,a)).pollUntilDone()})}delete(e,r,t,i){return this.client.sendOperationRequest({resourceGroupName:e,cacheName:r,privateEndpointConnectionName:t,options:i},deleteOperationSpec$2)}}const serializer$4=coreClient__namespace.createSerializer(Mappers,!1),listOperationSpec$2={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{cacheName}/privateEndpointConnections",httpMethod:"GET",responses:{200:{bodyMapper:PrivateEndpointConnectionListResult},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,cacheName],headerParameters:[accept],serializer:serializer$4},getOperationSpec$3={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{cacheName}/privateEndpointConnections/{privateEndpointConnectionName}",httpMethod:"GET",responses:{200:{bodyMapper:PrivateEndpointConnection},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,cacheName,privateEndpointConnectionName],headerParameters:[accept],serializer:serializer$4},putOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{cacheName}/privateEndpointConnections/{privateEndpointConnectionName}",httpMethod:"PUT",responses:{200:{bodyMapper:PrivateEndpointConnection},201:{bodyMapper:PrivateEndpointConnection},202:{bodyMapper:PrivateEndpointConnection},204:{bodyMapper:PrivateEndpointConnection},default:{bodyMapper:ErrorResponse}},requestBody:properties,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,cacheName,privateEndpointConnectionName],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer$4},deleteOperationSpec$2={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{cacheName}/privateEndpointConnections/{privateEndpointConnectionName}",httpMethod:"DELETE",responses:{200:{},204:{},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,cacheName,privateEndpointConnectionName],headerParameters:[accept],serializer:serializer$4};class PrivateLinkResourcesImpl{constructor(e){this.client=e}listByRedisCache(r,t,i){const e=this.listByRedisCachePagingAll(r,t,i);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listByRedisCachePagingPage(r,t,i,e)}}}listByRedisCachePagingPage(r,t,i,e){return tslib.__asyncGenerator(this,arguments,function*(){var e=yield tslib.__await(this._listByRedisCache(r,t,i));yield yield tslib.__await(e.value||[])})}listByRedisCachePagingAll(o,p,l){return tslib.__asyncGenerator(this,arguments,function*(){var e,r,t,i;try{for(var a,s=!0,n=tslib.__asyncValues(this.listByRedisCachePagingPage(o,p,l));!(e=(a=yield tslib.__await(n.next())).done);){i=a.value,s=!1;try{yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(i)))}finally{s=!0}}}catch(e){r={error:e}}finally{try{s||e||!(t=n.return)||(yield tslib.__await(t.call(n)))}finally{if(r)throw r.error}}})}_listByRedisCache(e,r,t){return this.client.sendOperationRequest({resourceGroupName:e,cacheName:r,options:t},listByRedisCacheOperationSpec)}}const serializer$3=coreClient__namespace.createSerializer(Mappers,!1),listByRedisCacheOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{cacheName}/privateLinkResources",httpMethod:"GET",responses:{200:{bodyMapper:PrivateLinkResourceListResult},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,cacheName],headerParameters:[accept],serializer:serializer$3};class AsyncOperationStatusImpl{constructor(e){this.client=e}get(e,r,t){return this.client.sendOperationRequest({location:e,operationId:r,options:t},getOperationSpec$2)}}const serializer$2=coreClient__namespace.createSerializer(Mappers,!1),getOperationSpec$2={path:"/subscriptions/{subscriptionId}/providers/Microsoft.Cache/locations/{location}/asyncOperations/{operationId}",httpMethod:"GET",responses:{200:{bodyMapper:OperationStatus},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,location,operationId],headerParameters:[accept],serializer:serializer$2};class AccessPolicyImpl{constructor(e){this.client=e}list(r,t,i){const e=this.listPagingAll(r,t,i);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listPagingPage(r,t,i,e)}}}listPagingPage(a,s,n,o){return tslib.__asyncGenerator(this,arguments,function*(){let e,r=null==o?void 0:o.continuationToken;var t;for(r||(setContinuationToken(t=(e=yield tslib.__await(this._list(a,s,n))).value||[],r=e.nextLink),yield yield tslib.__await(t));r;){e=yield tslib.__await(this._listNext(a,s,r,n)),r=e.nextLink;var i=e.value||[];setContinuationToken(i,r),yield yield tslib.__await(i)}})}listPagingAll(o,p,l){return tslib.__asyncGenerator(this,arguments,function*(){var e,r,t,i;try{for(var a,s=!0,n=tslib.__asyncValues(this.listPagingPage(o,p,l));!(e=(a=yield tslib.__await(n.next())).done);){i=a.value,s=!1;try{yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(i)))}finally{s=!0}}}catch(e){r={error:e}}finally{try{s||e||!(t=n.return)||(yield tslib.__await(t.call(n)))}finally{if(r)throw r.error}}})}beginCreateUpdate(r,t,i,a,n){return tslib.__awaiter(this,void 0,void 0,function*(){const s=(e,r)=>tslib.__awaiter(this,void 0,void 0,function*(){return this.client.sendOperationRequest(e,r)});var e=createLroSpec({sendOperationFn:(r,a)=>tslib.__awaiter(this,void 0,void 0,function*(){let t=void 0;const i=null==(e=r.options)?void 0:e.onResponse;var e=Object.assign(Object.assign({},r),{options:Object.assign(Object.assign({},r.options),{onResponse:(e,r)=>{t=e,null!==i&&void 0!==i&&i(e,r)}})});return{flatResponse:yield s(e,a),rawResponse:{statusCode:t.status,body:t.parsedBody,headers:t.headers.toJSON()}}}),args:{resourceGroupName:r,cacheName:t,accessPolicyName:i,parameters:a,options:n},spec:createUpdateOperationSpec$1}),e=yield coreLro.createHttpPoller(e,{restoreFrom:null==n?void 0:n.resumeFrom,intervalInMs:null==n?void 0:n.updateIntervalInMs});return yield e.poll(),e})}beginCreateUpdateAndWait(e,r,t,i,a){return tslib.__awaiter(this,void 0,void 0,function*(){return(yield this.beginCreateUpdate(e,r,t,i,a)).pollUntilDone()})}beginDelete(r,t,i,a){return tslib.__awaiter(this,void 0,void 0,function*(){const s=(e,r)=>tslib.__awaiter(this,void 0,void 0,function*(){return this.client.sendOperationRequest(e,r)});var e=createLroSpec({sendOperationFn:(r,a)=>tslib.__awaiter(this,void 0,void 0,function*(){let t=void 0;const i=null==(e=r.options)?void 0:e.onResponse;var e=Object.assign(Object.assign({},r),{options:Object.assign(Object.assign({},r.options),{onResponse:(e,r)=>{t=e,null!==i&&void 0!==i&&i(e,r)}})});return{flatResponse:yield s(e,a),rawResponse:{statusCode:t.status,body:t.parsedBody,headers:t.headers.toJSON()}}}),args:{resourceGroupName:r,cacheName:t,accessPolicyName:i,options:a},spec:deleteOperationSpec$1}),e=yield coreLro.createHttpPoller(e,{restoreFrom:null==a?void 0:a.resumeFrom,intervalInMs:null==a?void 0:a.updateIntervalInMs,resourceLocationConfig:"location"});return yield e.poll(),e})}beginDeleteAndWait(e,r,t,i){return tslib.__awaiter(this,void 0,void 0,function*(){return(yield this.beginDelete(e,r,t,i)).pollUntilDone()})}get(e,r,t,i){return this.client.sendOperationRequest({resourceGroupName:e,cacheName:r,accessPolicyName:t,options:i},getOperationSpec$1)}_list(e,r,t){return this.client.sendOperationRequest({resourceGroupName:e,cacheName:r,options:t},listOperationSpec$1)}_listNext(e,r,t,i){return this.client.sendOperationRequest({resourceGroupName:e,cacheName:r,nextLink:t,options:i},listNextOperationSpec$1)}}const serializer$1=coreClient__namespace.createSerializer(Mappers,!1),createUpdateOperationSpec$1={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{cacheName}/accessPolicies/{accessPolicyName}",httpMethod:"PUT",responses:{200:{bodyMapper:RedisCacheAccessPolicy},201:{bodyMapper:RedisCacheAccessPolicy},202:{bodyMapper:RedisCacheAccessPolicy},204:{bodyMapper:RedisCacheAccessPolicy},default:{bodyMapper:ErrorResponse}},requestBody:parameters10,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,cacheName,accessPolicyName],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer$1},deleteOperationSpec$1={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{cacheName}/accessPolicies/{accessPolicyName}",httpMethod:"DELETE",responses:{200:{},201:{},202:{},204:{},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,cacheName,accessPolicyName],headerParameters:[accept],serializer:serializer$1},getOperationSpec$1={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{cacheName}/accessPolicies/{accessPolicyName}",httpMethod:"GET",responses:{200:{bodyMapper:RedisCacheAccessPolicy},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,cacheName,accessPolicyName],headerParameters:[accept],serializer:serializer$1},listOperationSpec$1={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{cacheName}/accessPolicies",httpMethod:"GET",responses:{200:{bodyMapper:RedisCacheAccessPolicyList},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,cacheName],headerParameters:[accept],serializer:serializer$1},listNextOperationSpec$1={path:"{nextLink}",httpMethod:"GET",responses:{200:{bodyMapper:RedisCacheAccessPolicyList},default:{bodyMapper:ErrorResponse}},urlParameters:[$host,nextLink,subscriptionId,resourceGroupName,cacheName],headerParameters:[accept],serializer:serializer$1};class AccessPolicyAssignmentImpl{constructor(e){this.client=e}list(r,t,i){const e=this.listPagingAll(r,t,i);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listPagingPage(r,t,i,e)}}}listPagingPage(a,s,n,o){return tslib.__asyncGenerator(this,arguments,function*(){let e,r=null==o?void 0:o.continuationToken;var t;for(r||(setContinuationToken(t=(e=yield tslib.__await(this._list(a,s,n))).value||[],r=e.nextLink),yield yield tslib.__await(t));r;){e=yield tslib.__await(this._listNext(a,s,r,n)),r=e.nextLink;var i=e.value||[];setContinuationToken(i,r),yield yield tslib.__await(i)}})}listPagingAll(o,p,l){return tslib.__asyncGenerator(this,arguments,function*(){var e,r,t,i;try{for(var a,s=!0,n=tslib.__asyncValues(this.listPagingPage(o,p,l));!(e=(a=yield tslib.__await(n.next())).done);){i=a.value,s=!1;try{yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(i)))}finally{s=!0}}}catch(e){r={error:e}}finally{try{s||e||!(t=n.return)||(yield tslib.__await(t.call(n)))}finally{if(r)throw r.error}}})}beginCreateUpdate(r,t,i,a,n){return tslib.__awaiter(this,void 0,void 0,function*(){const s=(e,r)=>tslib.__awaiter(this,void 0,void 0,function*(){return this.client.sendOperationRequest(e,r)});var e=createLroSpec({sendOperationFn:(r,a)=>tslib.__awaiter(this,void 0,void 0,function*(){let t=void 0;const i=null==(e=r.options)?void 0:e.onResponse;var e=Object.assign(Object.assign({},r),{options:Object.assign(Object.assign({},r.options),{onResponse:(e,r)=>{t=e,null!==i&&void 0!==i&&i(e,r)}})});return{flatResponse:yield s(e,a),rawResponse:{statusCode:t.status,body:t.parsedBody,headers:t.headers.toJSON()}}}),args:{resourceGroupName:r,cacheName:t,accessPolicyAssignmentName:i,parameters:a,options:n},spec:createUpdateOperationSpec}),e=yield coreLro.createHttpPoller(e,{restoreFrom:null==n?void 0:n.resumeFrom,intervalInMs:null==n?void 0:n.updateIntervalInMs});return yield e.poll(),e})}beginCreateUpdateAndWait(e,r,t,i,a){return tslib.__awaiter(this,void 0,void 0,function*(){return(yield this.beginCreateUpdate(e,r,t,i,a)).pollUntilDone()})}beginDelete(r,t,i,a){return tslib.__awaiter(this,void 0,void 0,function*(){const s=(e,r)=>tslib.__awaiter(this,void 0,void 0,function*(){return this.client.sendOperationRequest(e,r)});var e=createLroSpec({sendOperationFn:(r,a)=>tslib.__awaiter(this,void 0,void 0,function*(){let t=void 0;const i=null==(e=r.options)?void 0:e.onResponse;var e=Object.assign(Object.assign({},r),{options:Object.assign(Object.assign({},r.options),{onResponse:(e,r)=>{t=e,null!==i&&void 0!==i&&i(e,r)}})});return{flatResponse:yield s(e,a),rawResponse:{statusCode:t.status,body:t.parsedBody,headers:t.headers.toJSON()}}}),args:{resourceGroupName:r,cacheName:t,accessPolicyAssignmentName:i,options:a},spec:deleteOperationSpec}),e=yield coreLro.createHttpPoller(e,{restoreFrom:null==a?void 0:a.resumeFrom,intervalInMs:null==a?void 0:a.updateIntervalInMs,resourceLocationConfig:"location"});return yield e.poll(),e})}beginDeleteAndWait(e,r,t,i){return tslib.__awaiter(this,void 0,void 0,function*(){return(yield this.beginDelete(e,r,t,i)).pollUntilDone()})}get(e,r,t,i){return this.client.sendOperationRequest({resourceGroupName:e,cacheName:r,accessPolicyAssignmentName:t,options:i},getOperationSpec)}_list(e,r,t){return this.client.sendOperationRequest({resourceGroupName:e,cacheName:r,options:t},listOperationSpec)}_listNext(e,r,t,i){return this.client.sendOperationRequest({resourceGroupName:e,cacheName:r,nextLink:t,options:i},listNextOperationSpec)}}const serializer=coreClient__namespace.createSerializer(Mappers,!1),createUpdateOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{cacheName}/accessPolicyAssignments/{accessPolicyAssignmentName}",httpMethod:"PUT",responses:{200:{bodyMapper:RedisCacheAccessPolicyAssignment},201:{bodyMapper:RedisCacheAccessPolicyAssignment},202:{bodyMapper:RedisCacheAccessPolicyAssignment},204:{bodyMapper:RedisCacheAccessPolicyAssignment},default:{bodyMapper:ErrorResponse}},requestBody:parameters11,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,cacheName,accessPolicyAssignmentName],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer},deleteOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{cacheName}/accessPolicyAssignments/{accessPolicyAssignmentName}",httpMethod:"DELETE",responses:{200:{},201:{},202:{},204:{},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,cacheName,accessPolicyAssignmentName],headerParameters:[accept],serializer:serializer},getOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{cacheName}/accessPolicyAssignments/{accessPolicyAssignmentName}",httpMethod:"GET",responses:{200:{bodyMapper:RedisCacheAccessPolicyAssignment},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,cacheName,accessPolicyAssignmentName],headerParameters:[accept],serializer:serializer},listOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{cacheName}/accessPolicyAssignments",httpMethod:"GET",responses:{200:{bodyMapper:RedisCacheAccessPolicyAssignmentList},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,cacheName],headerParameters:[accept],serializer:serializer},listNextOperationSpec={path:"{nextLink}",httpMethod:"GET",responses:{200:{bodyMapper:RedisCacheAccessPolicyAssignmentList},default:{bodyMapper:ErrorResponse}},urlParameters:[$host,nextLink,subscriptionId,resourceGroupName,cacheName],headerParameters:[accept],serializer:serializer};class RedisManagementClient extends coreClient__namespace.ServiceClient{constructor(e,r,t){if(void 0===e)throw new Error("'credentials' cannot be null");if(void 0===r)throw new Error("'subscriptionId' cannot be null");var i,a="azsdk-js-arm-rediscache/8.0.0",a=(t=t||{}).userAgentOptions&&t.userAgentOptions.userAgentPrefix?t.userAgentOptions.userAgentPrefix+" "+a:a,a=Object.assign(Object.assign(Object.assign({},{requestContentType:"application/json; charset=utf-8",credential:e}),t),{userAgentOptions:{userAgentPrefix:a},endpoint:null!=(a=null!=(a=t.endpoint)?a:t.baseUri)?a:"https://management.azure.com"});super(a);let s=!1;null!=t&&t.pipeline&&0<t.pipeline.getOrderedPolicies().length&&(i=t.pipeline.getOrderedPolicies(),s=i.some(e=>e.name===coreRestPipeline__namespace.bearerTokenAuthenticationPolicyName)),t&&t.pipeline&&0!=t.pipeline.getOrderedPolicies().length&&s||(this.pipeline.removePolicy({name:coreRestPipeline__namespace.bearerTokenAuthenticationPolicyName}),this.pipeline.addPolicy(coreRestPipeline__namespace.bearerTokenAuthenticationPolicy({credential:e,scopes:null!=(i=a.credentialScopes)?i:a.endpoint+"/.default",challengeCallbacks:{authorizeRequestOnChallenge:coreClient__namespace.authorizeRequestOnClaimChallenge}}))),this.subscriptionId=r,this.$host=t.$host||"https://management.azure.com",this.apiVersion=t.apiVersion||"2023-08-01",this.operations=new OperationsImpl(this),this.redis=new RedisImpl(this),this.firewallRules=new FirewallRulesImpl(this),this.patchSchedules=new PatchSchedulesImpl(this),this.linkedServer=new LinkedServerImpl(this),this.privateEndpointConnections=new PrivateEndpointConnectionsImpl(this),this.privateLinkResources=new PrivateLinkResourcesImpl(this),this.asyncOperationStatus=new AsyncOperationStatusImpl(this),this.accessPolicy=new AccessPolicyImpl(this),this.accessPolicyAssignment=new AccessPolicyAssignmentImpl(this),this.addCustomApiVersionPolicy(t.apiVersion)}addCustomApiVersionPolicy(a){a&&this.pipeline.addPolicy({name:"CustomApiVersionPolicy",sendRequest(t,i){return tslib.__awaiter(this,void 0,void 0,function*(){var e,r=t.url.split("?");return 1<r.length&&(e=r[1].split("&").map(e=>-1<e.indexOf("api-version")?"api-version="+a:e),t.url=r[0]+"?"+e.join("&")),i(t)})}})}}exports.RedisManagementClient=RedisManagementClient,exports.getContinuationToken=getContinuationToken;