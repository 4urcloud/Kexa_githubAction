import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PrivateLinkResources } from "../operationsInterfaces";
import { RedisManagementClient } from "../redisManagementClient";
import { PrivateLinkResource, PrivateLinkResourcesListByRedisCacheOptionalParams } from "../models";
/** Class containing PrivateLinkResources operations. */
export declare class PrivateLinkResourcesImpl implements PrivateLinkResources {
    private readonly client;
    /**
     * Initialize a new instance of the class PrivateLinkResources class.
     * @param client Reference to the service client
     */
    constructor(client: RedisManagementClient);
    /**
     * Gets the private link resources that need to be created for a redis cache.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param cacheName The name of the Redis cache.
     * @param options The options parameters.
     */
    listByRedisCache(resourceGroupName: string, cacheName: string, options?: PrivateLinkResourcesListByRedisCacheOptionalParams): PagedAsyncIterableIterator<PrivateLinkResource>;
    private listByRedisCachePagingPage;
    private listByRedisCachePagingAll;
    /**
     * Gets the private link resources that need to be created for a redis cache.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param cacheName The name of the Redis cache.
     * @param options The options parameters.
     */
    private _listByRedisCache;
}
//# sourceMappingURL=privateLinkResources.d.ts.map