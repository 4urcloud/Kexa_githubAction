import { FullOperationResponse, OperationArguments, OperationSpec, RawResponseCallback } from "@azure/core-client";
import { FinalStateVia, LROConfig, LROResult, PollerConfig, ResumablePollOperationState, SendOperationFn } from "./models";
export declare const successStates: string[];
export declare const failureStates: string[];
export declare const terminalStates: string[];
/**
 * The type of a terminal state of an LRO.
 */
interface LROTerminalState<T> extends LROResult<T> {
    /**
     * Whether the operation has finished.
     */
    done: true;
}
/**
 * The type of an in-progress state of an LRO.
 */
interface LROInProgressState<T> extends LROResult<T> {
    /**
     * Whether the operation has finished.
     */
    done: false;
    /**
     * The request to be sent next if it is different from the standard polling one.
     * Notice that it will disregard any polling URLs provided to it.
     */
    next?: () => Promise<LROState<T>>;
}
/**
 * The type of an LRO state which is a tagged union of terminal and in-progress states.
 */
export declare type LROState<T> = LROTerminalState<T> | LROInProgressState<T>;
/**
 * Creates a polling operation that returns a LRO state.
 */
export declare function createGetLROState<TResult>(sendOperationFn: SendOperationFn<TResult>, args: OperationArguments, spec: OperationSpec, config: LROConfig, finalStateVia?: FinalStateVia): (pollingURL: string, pollerConfig: PollerConfig) => Promise<LROState<TResult>>;
/**
 * Creates a callback to be used to initialize the polling operation state.
 * @param state of the polling operation
 * @param operationSpec of the LRO
 * @param callback callback to be called when the operation is done
 * @returns callback that initializes the state of the polling operation
 */
export declare function initializeState<TResult>(state: ResumablePollOperationState<TResult>, operationSpec: OperationSpec, callback?: RawResponseCallback): (rawResponse: FullOperationResponse, flatResponse: unknown) => void;
export {};
//# sourceMappingURL=stateMachine.d.ts.map