// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { __awaiter, __rest } from "tslib";
export function createPollingMethod(sendOperationFn, args, spec, mode) {
    /**
     * Polling calls will always return a status object i.e. {"status": "success"}
     * these intermediate responses are not described in the swagger so we need to
     * pass custom mappers at runtime.
     * This function replaces all the existing mappers to be able to deserialize a status object
     * @param responses Original set of responses defined in the operation
     */
    function getCompositeMappers(responses) {
        return Object.keys(responses).reduce((acc, statusCode) => {
            return Object.assign(Object.assign({}, acc), { [statusCode]: Object.assign(Object.assign({}, responses[statusCode]), { bodyMapper: {
                        type: {
                            name: "Composite",
                            modelProperties: {
                                status: {
                                    serializedName: "status",
                                    type: {
                                        name: "String"
                                    }
                                }
                            }
                        }
                    } }) });
        }, {});
    }
    // Make sure we don't send any body to the get request
    const { requestBody, responses } = spec, restSpec = __rest(spec, ["requestBody", "responses"]);
    if (mode === "AzureAsync") {
        return (path) => __awaiter(this, void 0, void 0, function* () {
            return sendOperationFn(args, Object.assign(Object.assign(Object.assign({}, restSpec), { responses: getCompositeMappers(responses), httpMethod: "GET" }), (path && { path })));
        });
    }
    return (path) => __awaiter(this, void 0, void 0, function* () {
        return sendOperationFn(args, Object.assign(Object.assign(Object.assign({}, restSpec), { responses: responses, httpMethod: "GET" }), (path && { path })));
    });
}
export function createRetrieveAzureAsyncResource(sendOperationFn, args, spec) {
    const updatedArgs = Object.assign({}, args);
    if (updatedArgs.options) {
        updatedArgs.options.shouldDeserialize = true;
    }
    return createPollingMethod(sendOperationFn, updatedArgs, spec);
}
//# sourceMappingURL=pollingMethod.js.map