// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { Poller } from "@azure/core-lro";
import { GenericPollOperation } from "./operation";
export class LROPoller extends Poller {
    constructor({ intervalInMs = 2000, resumeFrom }, initialOperationArguments, initialOperationSpec, sendOperation, finalStateVia) {
        const state = resumeFrom
            ? JSON.parse(resumeFrom).state
            : {};
        const operation = new GenericPollOperation(state, initialOperationArguments, initialOperationSpec, sendOperation, finalStateVia);
        super(operation);
        this.intervalInMs = intervalInMs;
        operation.setPollerConfig(this);
    }
    /**
     * The method used by the poller to wait before attempting to update its operation.
     */
    delay() {
        return new Promise((resolve) => setTimeout(() => resolve(), this.intervalInMs));
    }
}
//# sourceMappingURL=lroPoller.js.map