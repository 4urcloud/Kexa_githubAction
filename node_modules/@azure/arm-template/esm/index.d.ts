import * as coreAuth from '@azure/core-auth';
import * as coreClient from '@azure/core-client';
import { PagedAsyncIterableIterator } from '@azure/core-paging';
import { PollerLike } from '@azure/core-lro';
import { PollOperationState } from '@azure/core-lro';

/** Error details. */
export declare interface ErrorDetails {
    /**
     * The error code.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly code?: string;
    /**
     * The error message.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly message?: string;
    /**
     * The target of the particular error.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly target?: string;
}

/** Interface representing a IoTSpaces. */
export declare interface IoTSpaces {
    /**
     * Get all the IoTSpaces instances in a subscription.
     * @param options The options parameters.
     */
    list(options?: IoTSpacesListOptionalParams): PagedAsyncIterableIterator<IoTSpacesDescription>;
    /**
     * Get all the IoTSpaces instances in a resource group.
     * @param resourceGroupName The name of the resource group that contains the IoTSpaces instance.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: IoTSpacesListByResourceGroupOptionalParams): PagedAsyncIterableIterator<IoTSpacesDescription>;
    /**
     * Get the metadata of a IoTSpaces instance.
     * @param resourceGroupName The name of the resource group that contains the IoTSpaces instance.
     * @param resourceName The name of the IoTSpaces instance.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, resourceName: string, options?: IoTSpacesGetOptionalParams): Promise<IoTSpacesGetResponse>;
    /**
     * Create or update the metadata of an IoTSpaces instance. The usual pattern to modify a property is to
     * retrieve the IoTSpaces instance metadata and security metadata, and then combine them with the
     * modified values in a new body to update the IoTSpaces instance.
     * @param resourceGroupName The name of the resource group that contains the IoTSpaces instance.
     * @param resourceName The name of the IoTSpaces instance.
     * @param iotSpaceDescription The IoTSpaces instance metadata and security metadata.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, resourceName: string, iotSpaceDescription: IoTSpacesDescription, options?: IoTSpacesCreateOrUpdateOptionalParams): Promise<PollerLike<PollOperationState<IoTSpacesCreateOrUpdateResponse>, IoTSpacesCreateOrUpdateResponse>>;
    /**
     * Create or update the metadata of an IoTSpaces instance. The usual pattern to modify a property is to
     * retrieve the IoTSpaces instance metadata and security metadata, and then combine them with the
     * modified values in a new body to update the IoTSpaces instance.
     * @param resourceGroupName The name of the resource group that contains the IoTSpaces instance.
     * @param resourceName The name of the IoTSpaces instance.
     * @param iotSpaceDescription The IoTSpaces instance metadata and security metadata.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, resourceName: string, iotSpaceDescription: IoTSpacesDescription, options?: IoTSpacesCreateOrUpdateOptionalParams): Promise<IoTSpacesCreateOrUpdateResponse>;
    /**
     * Update the metadata of a IoTSpaces instance.
     * @param resourceGroupName The name of the resource group that contains the IoTSpaces instance.
     * @param resourceName The name of the IoTSpaces instance.
     * @param iotSpacePatchDescription The IoTSpaces instance metadata and security metadata.
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, resourceName: string, iotSpacePatchDescription: IoTSpacesPatchDescription, options?: IoTSpacesUpdateOptionalParams): Promise<PollerLike<PollOperationState<IoTSpacesUpdateResponse>, IoTSpacesUpdateResponse>>;
    /**
     * Update the metadata of a IoTSpaces instance.
     * @param resourceGroupName The name of the resource group that contains the IoTSpaces instance.
     * @param resourceName The name of the IoTSpaces instance.
     * @param iotSpacePatchDescription The IoTSpaces instance metadata and security metadata.
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, resourceName: string, iotSpacePatchDescription: IoTSpacesPatchDescription, options?: IoTSpacesUpdateOptionalParams): Promise<IoTSpacesUpdateResponse>;
    /**
     * Delete an IoTSpaces instance.
     * @param resourceGroupName The name of the resource group that contains the IoTSpaces instance.
     * @param resourceName The name of the IoTSpaces instance.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, resourceName: string, options?: IoTSpacesDeleteOptionalParams): Promise<PollerLike<PollOperationState<IoTSpacesDeleteResponse>, IoTSpacesDeleteResponse>>;
    /**
     * Delete an IoTSpaces instance.
     * @param resourceGroupName The name of the resource group that contains the IoTSpaces instance.
     * @param resourceName The name of the IoTSpaces instance.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, resourceName: string, options?: IoTSpacesDeleteOptionalParams): Promise<IoTSpacesDeleteResponse>;
    /**
     * Check if an IoTSpaces instance name is available.
     * @param operationInputs Set the name parameter in the OperationInputs structure to the name of the
     *                        IoTSpaces instance to check.
     * @param options The options parameters.
     */
    checkNameAvailability(operationInputs: OperationInputs, options?: IoTSpacesCheckNameAvailabilityOptionalParams): Promise<IoTSpacesCheckNameAvailabilityResponse>;
}

/** Optional parameters. */
export declare interface IoTSpacesCheckNameAvailabilityOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the checkNameAvailability operation. */
export declare type IoTSpacesCheckNameAvailabilityResponse = IoTSpacesNameAvailabilityInfo;

export declare class IoTSpacesClient extends IoTSpacesClientContext {
    /**
     * Initializes a new instance of the IoTSpacesClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId The subscription identifier.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: IoTSpacesClientOptionalParams);
    ioTSpaces: IoTSpaces;
    operations: Operations;
}

export declare class IoTSpacesClientContext extends coreClient.ServiceClient {
    $host: string;
    apiVersion: string;
    subscriptionId: string;
    /**
     * Initializes a new instance of the IoTSpacesClientContext class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId The subscription identifier.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: IoTSpacesClientOptionalParams);
}

/** Optional parameters. */
export declare interface IoTSpacesClientOptionalParams extends coreClient.ServiceClientOptions {
    /** server parameter */
    $host?: string;
    /** Api Version */
    apiVersion?: string;
    /** Overrides client endpoint. */
    endpoint?: string;
}

/** Optional parameters. */
export declare interface IoTSpacesCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export declare type IoTSpacesCreateOrUpdateResponse = IoTSpacesDescription;

/** Optional parameters. */
export declare interface IoTSpacesDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export declare type IoTSpacesDeleteResponse = IoTSpacesDescription;

/** The description of the IoTSpaces service. */
export declare type IoTSpacesDescription = Resource & {
    /** The common properties of a IoTSpaces service. */
    properties?: IoTSpacesProperties;
    /** A valid instance SKU. */
    sku: IoTSpacesSkuInfo;
};

/** A list of IoTSpaces description objects with a next link. */
export declare interface IoTSpacesDescriptionListResult {
    /** The link used to get the next page of IoTSpaces description objects. */
    nextLink?: string;
    /** A list of IoTSpaces description objects. */
    value?: IoTSpacesDescription[];
}

/** Optional parameters. */
export declare interface IoTSpacesGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type IoTSpacesGetResponse = IoTSpacesDescription;

/** Optional parameters. */
export declare interface IoTSpacesListByResourceGroupNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroupNext operation. */
export declare type IoTSpacesListByResourceGroupNextResponse = IoTSpacesDescriptionListResult;

/** Optional parameters. */
export declare interface IoTSpacesListByResourceGroupOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroup operation. */
export declare type IoTSpacesListByResourceGroupResponse = IoTSpacesDescriptionListResult;

/** Optional parameters. */
export declare interface IoTSpacesListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type IoTSpacesListNextResponse = IoTSpacesDescriptionListResult;

/** Optional parameters. */
export declare interface IoTSpacesListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type IoTSpacesListResponse = IoTSpacesDescriptionListResult;

/** The properties indicating whether a given IoTSpaces service name is available. */
export declare interface IoTSpacesNameAvailabilityInfo {
    /**
     * The value which indicates whether the provided name is available.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nameAvailable?: boolean;
    /**
     * The reason for unavailability.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly reason?: IoTSpacesNameUnavailabilityReason;
    /** The detailed reason message. */
    message?: string;
}

/** Defines values for IoTSpacesNameUnavailabilityReason. */
export declare type IoTSpacesNameUnavailabilityReason = "Invalid" | "AlreadyExists";

/** The description of the IoTSpaces service. */
export declare interface IoTSpacesPatchDescription {
    /** Instance tags */
    tags?: {
        [propertyName: string]: string;
    };
    /** The common properties of an IoTSpaces service. */
    properties?: IoTSpacesProperties;
}

/** The properties of an IoTSpaces instance. */
export declare interface IoTSpacesProperties {
    /**
     * The provisioning state.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: ProvisioningState;
    /**
     * The management Api endpoint.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly managementApiUrl?: string;
    /**
     * The management UI endpoint.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly webPortalUrl?: string;
    /** The properties of the designated storage container. */
    storageContainer?: StorageContainerProperties;
}

/**
 * Defines values for IoTSpacesSku. \
 * {@link KnownIoTSpacesSku} can be used interchangeably with IoTSpacesSku,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **F1** \
 * **S1** \
 * **S2** \
 * **S3**
 */
export declare type IoTSpacesSku = string;

/** Information about the SKU of the IoTSpaces instance. */
export declare interface IoTSpacesSkuInfo {
    /** The name of the SKU. */
    name: IoTSpacesSku;
}

/** Optional parameters. */
export declare interface IoTSpacesUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the update operation. */
export declare type IoTSpacesUpdateResponse = IoTSpacesDescription;

/** Known values of {@link IoTSpacesSku} that the service accepts. */
export declare const enum KnownIoTSpacesSku {
    F1 = "F1",
    S1 = "S1",
    S2 = "S2",
    S3 = "S3"
}

/** Known values of {@link ProvisioningState} that the service accepts. */
export declare const enum KnownProvisioningState {
    Provisioning = "Provisioning",
    Deleting = "Deleting",
    Succeeded = "Succeeded",
    Failed = "Failed",
    Canceled = "Canceled"
}

/** IoTSpaces service REST API operation */
export declare interface Operation {
    /**
     * Operation name: {provider}/{resource}/{read | write | action | delete}
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /** The object that represents the operation. */
    display?: OperationDisplay;
}

/** The object that represents the operation. */
export declare interface OperationDisplay {
    /**
     * Service provider: Microsoft IoTSpaces
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provider?: string;
    /**
     * Resource Type: IoTSpaces
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly resource?: string;
    /**
     * Name of the operation
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly operation?: string;
    /**
     * Friendly description for the operation,
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly description?: string;
}

/** Input values. */
export declare interface OperationInputs {
    /** The name of the IoTSpaces service instance to check. */
    name: string;
}

/** A list of IoTSpaces service operations. It contains a list of operations and a URL link to get the next set of results. */
export declare interface OperationListResult {
    /** The link used to get the next page of IoTSpaces description objects. */
    nextLink?: string;
    /**
     * A list of IoT spaces operations supported by the Microsoft.IoTSpaces resource provider.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: Operation[];
}

/** Interface representing a Operations. */
export declare interface Operations {
    /**
     * Lists all of the available IoTSpaces service REST API operations.
     * @param options The options parameters.
     */
    list(options?: OperationsListOptionalParams): PagedAsyncIterableIterator<Operation>;
}

/** Optional parameters. */
export declare interface OperationsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export declare interface OperationsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type OperationsListResponse = OperationListResult;

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Provisioning** \
 * **Deleting** \
 * **Succeeded** \
 * **Failed** \
 * **Canceled**
 */
export declare type ProvisioningState = string;

/** The common properties of an IoTSpaces service. */
export declare interface Resource {
    /**
     * The resource identifier.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /**
     * The resource name.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * The resource type.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /** The resource location. */
    location: string;
    /** The resource tags. */
    tags?: {
        [propertyName: string]: string;
    };
}

/** The properties of the Azure Storage Container for file archive. */
export declare interface StorageContainerProperties {
    /** The connection string of the storage account. */
    connectionString?: string;
    /** The subscription identifier of the storage account. */
    subscriptionId?: string;
    /** The name of the resource group of the storage account. */
    resourceGroup?: string;
    /** The name of storage container in the storage account. */
    containerName?: string;
}

export { }
