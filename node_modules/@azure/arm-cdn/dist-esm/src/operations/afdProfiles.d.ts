import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { AfdProfiles } from "../operationsInterfaces";
import { CdnManagementClient } from "../cdnManagementClient";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import { Usage, AfdProfilesListResourceUsageOptionalParams, CheckEndpointNameAvailabilityInput, AfdProfilesCheckEndpointNameAvailabilityOptionalParams, AfdProfilesCheckEndpointNameAvailabilityResponse, CheckHostNameAvailabilityInput, AfdProfilesCheckHostNameAvailabilityOptionalParams, AfdProfilesCheckHostNameAvailabilityResponse, ValidateSecretInput, AfdProfilesValidateSecretOptionalParams, AfdProfilesValidateSecretResponse, ProfileUpgradeParameters, AfdProfilesUpgradeOptionalParams, AfdProfilesUpgradeResponse } from "../models";
/** Class containing AfdProfiles operations. */
export declare class AfdProfilesImpl implements AfdProfiles {
    private readonly client;
    /**
     * Initialize a new instance of the class AfdProfiles class.
     * @param client Reference to the service client
     */
    constructor(client: CdnManagementClient);
    /**
     * Checks the quota and actual usage of endpoints under the given Azure Front Door profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param options The options parameters.
     */
    listResourceUsage(resourceGroupName: string, profileName: string, options?: AfdProfilesListResourceUsageOptionalParams): PagedAsyncIterableIterator<Usage>;
    private listResourceUsagePagingPage;
    private listResourceUsagePagingAll;
    /**
     * Check the availability of an afdx endpoint name, and return the globally unique endpoint host name.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium which is unique
     *                    within the resource group.
     * @param checkEndpointNameAvailabilityInput Input to check.
     * @param options The options parameters.
     */
    checkEndpointNameAvailability(resourceGroupName: string, profileName: string, checkEndpointNameAvailabilityInput: CheckEndpointNameAvailabilityInput, options?: AfdProfilesCheckEndpointNameAvailabilityOptionalParams): Promise<AfdProfilesCheckEndpointNameAvailabilityResponse>;
    /**
     * Checks the quota and actual usage of endpoints under the given Azure Front Door profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param options The options parameters.
     */
    private _listResourceUsage;
    /**
     * Validates the custom domain mapping to ensure it maps to the correct Azure Front Door endpoint in
     * DNS.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param checkHostNameAvailabilityInput Custom domain to be validated.
     * @param options The options parameters.
     */
    checkHostNameAvailability(resourceGroupName: string, profileName: string, checkHostNameAvailabilityInput: CheckHostNameAvailabilityInput, options?: AfdProfilesCheckHostNameAvailabilityOptionalParams): Promise<AfdProfilesCheckHostNameAvailabilityResponse>;
    /**
     * Validate a Secret in the profile.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium which is unique
     *                    within the resource group.
     * @param validateSecretInput The Secret source.
     * @param options The options parameters.
     */
    validateSecret(resourceGroupName: string, profileName: string, validateSecretInput: ValidateSecretInput, options?: AfdProfilesValidateSecretOptionalParams): Promise<AfdProfilesValidateSecretResponse>;
    /**
     * Upgrade a profile from Standard_AzureFrontDoor to Premium_AzureFrontDoor.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium which is unique
     *                    within the resource group.
     * @param profileUpgradeParameters Profile upgrade input parameter.
     * @param options The options parameters.
     */
    beginUpgrade(resourceGroupName: string, profileName: string, profileUpgradeParameters: ProfileUpgradeParameters, options?: AfdProfilesUpgradeOptionalParams): Promise<SimplePollerLike<OperationState<AfdProfilesUpgradeResponse>, AfdProfilesUpgradeResponse>>;
    /**
     * Upgrade a profile from Standard_AzureFrontDoor to Premium_AzureFrontDoor.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium which is unique
     *                    within the resource group.
     * @param profileUpgradeParameters Profile upgrade input parameter.
     * @param options The options parameters.
     */
    beginUpgradeAndWait(resourceGroupName: string, profileName: string, profileUpgradeParameters: ProfileUpgradeParameters, options?: AfdProfilesUpgradeOptionalParams): Promise<AfdProfilesUpgradeResponse>;
    /**
     * ListResourceUsageNext
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param profileName Name of the Azure Front Door Standard or Azure Front Door Premium profile which
     *                    is unique within the resource group.
     * @param nextLink The nextLink from the previous successful call to the ListResourceUsage method.
     * @param options The options parameters.
     */
    private _listResourceUsageNext;
}
//# sourceMappingURL=afdProfiles.d.ts.map