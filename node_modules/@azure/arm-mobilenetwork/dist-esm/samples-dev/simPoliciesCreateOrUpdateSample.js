/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { MobileNetworkManagementClient } from "@azure/arm-mobilenetwork";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Creates or updates a SIM policy. Must be created in the same location as its parent mobile network.
 *
 * @summary Creates or updates a SIM policy. Must be created in the same location as its parent mobile network.
 * x-ms-original-file: specification/mobilenetwork/resource-manager/Microsoft.MobileNetwork/stable/2023-09-01/examples/SimPolicyCreate.json
 */
function createSimPolicy() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["MOBILENETWORK_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const resourceGroupName = process.env["MOBILENETWORK_RESOURCE_GROUP"] || "rg1";
        const mobileNetworkName = "testMobileNetwork";
        const simPolicyName = "testPolicy";
        const parameters = {
            defaultSlice: {
                id: "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.MobileNetwork/mobileNetworks/testMobileNetwork/slices/testSlice"
            },
            location: "eastus",
            registrationTimer: 3240,
            sliceConfigurations: [
                {
                    dataNetworkConfigurations: [
                        {
                            fiveQi: 9,
                            additionalAllowedSessionTypes: [],
                            allocationAndRetentionPriorityLevel: 9,
                            allowedServices: [
                                {
                                    id: "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.MobileNetwork/mobileNetworks/testMobileNetwork/services/testService"
                                }
                            ],
                            dataNetwork: {
                                id: "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.MobileNetwork/mobileNetworks/testMobileNetwork/dataNetworks/testdataNetwork"
                            },
                            defaultSessionType: "IPv4",
                            maximumNumberOfBufferedPackets: 200,
                            preemptionCapability: "NotPreempt",
                            preemptionVulnerability: "Preemptable",
                            sessionAmbr: { downlink: "1 Gbps", uplink: "500 Mbps" }
                        }
                    ],
                    defaultDataNetwork: {
                        id: "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.MobileNetwork/mobileNetworks/testMobileNetwork/dataNetworks/testdataNetwork"
                    },
                    slice: {
                        id: "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.MobileNetwork/mobileNetworks/testMobileNetwork/slices/testSlice"
                    }
                }
            ],
            ueAmbr: { downlink: "1 Gbps", uplink: "500 Mbps" }
        };
        const credential = new DefaultAzureCredential();
        const client = new MobileNetworkManagementClient(credential, subscriptionId);
        const result = yield client.simPolicies.beginCreateOrUpdateAndWait(resourceGroupName, mobileNetworkName, simPolicyName, parameters);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        createSimPolicy();
    });
}
main().catch(console.error);
//# sourceMappingURL=simPoliciesCreateOrUpdateSample.js.map