import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Slices } from "../operationsInterfaces";
import { MobileNetworkManagementClient } from "../mobileNetworkManagementClient";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import { Slice, SlicesListByMobileNetworkOptionalParams, SlicesDeleteOptionalParams, SlicesGetOptionalParams, SlicesGetResponse, SlicesCreateOrUpdateOptionalParams, SlicesCreateOrUpdateResponse, TagsObject, SlicesUpdateTagsOptionalParams, SlicesUpdateTagsResponse } from "../models";
/** Class containing Slices operations. */
export declare class SlicesImpl implements Slices {
    private readonly client;
    /**
     * Initialize a new instance of the class Slices class.
     * @param client Reference to the service client
     */
    constructor(client: MobileNetworkManagementClient);
    /**
     * Lists all slices in the mobile network.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mobileNetworkName The name of the mobile network.
     * @param options The options parameters.
     */
    listByMobileNetwork(resourceGroupName: string, mobileNetworkName: string, options?: SlicesListByMobileNetworkOptionalParams): PagedAsyncIterableIterator<Slice>;
    private listByMobileNetworkPagingPage;
    private listByMobileNetworkPagingAll;
    /**
     * Deletes the specified network slice.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mobileNetworkName The name of the mobile network.
     * @param sliceName The name of the network slice.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, mobileNetworkName: string, sliceName: string, options?: SlicesDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Deletes the specified network slice.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mobileNetworkName The name of the mobile network.
     * @param sliceName The name of the network slice.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, mobileNetworkName: string, sliceName: string, options?: SlicesDeleteOptionalParams): Promise<void>;
    /**
     * Gets information about the specified network slice.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mobileNetworkName The name of the mobile network.
     * @param sliceName The name of the network slice.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, mobileNetworkName: string, sliceName: string, options?: SlicesGetOptionalParams): Promise<SlicesGetResponse>;
    /**
     * Creates or updates a network slice. Must be created in the same location as its parent mobile
     * network.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mobileNetworkName The name of the mobile network.
     * @param sliceName The name of the network slice.
     * @param parameters Parameters supplied to the create or update network slice operation.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, mobileNetworkName: string, sliceName: string, parameters: Slice, options?: SlicesCreateOrUpdateOptionalParams): Promise<SimplePollerLike<OperationState<SlicesCreateOrUpdateResponse>, SlicesCreateOrUpdateResponse>>;
    /**
     * Creates or updates a network slice. Must be created in the same location as its parent mobile
     * network.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mobileNetworkName The name of the mobile network.
     * @param sliceName The name of the network slice.
     * @param parameters Parameters supplied to the create or update network slice operation.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, mobileNetworkName: string, sliceName: string, parameters: Slice, options?: SlicesCreateOrUpdateOptionalParams): Promise<SlicesCreateOrUpdateResponse>;
    /**
     * Updates slice tags.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mobileNetworkName The name of the mobile network.
     * @param sliceName The name of the network slice.
     * @param parameters Parameters supplied to update network slice tags.
     * @param options The options parameters.
     */
    updateTags(resourceGroupName: string, mobileNetworkName: string, sliceName: string, parameters: TagsObject, options?: SlicesUpdateTagsOptionalParams): Promise<SlicesUpdateTagsResponse>;
    /**
     * Lists all slices in the mobile network.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mobileNetworkName The name of the mobile network.
     * @param options The options parameters.
     */
    private _listByMobileNetwork;
    /**
     * ListByMobileNetworkNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mobileNetworkName The name of the mobile network.
     * @param nextLink The nextLink from the previous successful call to the ListByMobileNetwork method.
     * @param options The options parameters.
     */
    private _listByMobileNetworkNext;
}
//# sourceMappingURL=slices.d.ts.map