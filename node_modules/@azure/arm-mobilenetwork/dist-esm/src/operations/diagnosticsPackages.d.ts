import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { DiagnosticsPackages } from "../operationsInterfaces";
import { MobileNetworkManagementClient } from "../mobileNetworkManagementClient";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import { DiagnosticsPackage, DiagnosticsPackagesListByPacketCoreControlPlaneOptionalParams, DiagnosticsPackagesCreateOrUpdateOptionalParams, DiagnosticsPackagesCreateOrUpdateResponse, DiagnosticsPackagesGetOptionalParams, DiagnosticsPackagesGetResponse, DiagnosticsPackagesDeleteOptionalParams } from "../models";
/** Class containing DiagnosticsPackages operations. */
export declare class DiagnosticsPackagesImpl implements DiagnosticsPackages {
    private readonly client;
    /**
     * Initialize a new instance of the class DiagnosticsPackages class.
     * @param client Reference to the service client
     */
    constructor(client: MobileNetworkManagementClient);
    /**
     * Lists all the diagnostics packages under a packet core control plane.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param packetCoreControlPlaneName The name of the packet core control plane.
     * @param options The options parameters.
     */
    listByPacketCoreControlPlane(resourceGroupName: string, packetCoreControlPlaneName: string, options?: DiagnosticsPackagesListByPacketCoreControlPlaneOptionalParams): PagedAsyncIterableIterator<DiagnosticsPackage>;
    private listByPacketCoreControlPlanePagingPage;
    private listByPacketCoreControlPlanePagingAll;
    /**
     * Creates or updates a diagnostics package.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param packetCoreControlPlaneName The name of the packet core control plane.
     * @param diagnosticsPackageName The name of the diagnostics package.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, packetCoreControlPlaneName: string, diagnosticsPackageName: string, options?: DiagnosticsPackagesCreateOrUpdateOptionalParams): Promise<SimplePollerLike<OperationState<DiagnosticsPackagesCreateOrUpdateResponse>, DiagnosticsPackagesCreateOrUpdateResponse>>;
    /**
     * Creates or updates a diagnostics package.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param packetCoreControlPlaneName The name of the packet core control plane.
     * @param diagnosticsPackageName The name of the diagnostics package.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, packetCoreControlPlaneName: string, diagnosticsPackageName: string, options?: DiagnosticsPackagesCreateOrUpdateOptionalParams): Promise<DiagnosticsPackagesCreateOrUpdateResponse>;
    /**
     * Gets information about the specified diagnostics package.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param packetCoreControlPlaneName The name of the packet core control plane.
     * @param diagnosticsPackageName The name of the diagnostics package.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, packetCoreControlPlaneName: string, diagnosticsPackageName: string, options?: DiagnosticsPackagesGetOptionalParams): Promise<DiagnosticsPackagesGetResponse>;
    /**
     * Deletes the specified diagnostics package.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param packetCoreControlPlaneName The name of the packet core control plane.
     * @param diagnosticsPackageName The name of the diagnostics package.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, packetCoreControlPlaneName: string, diagnosticsPackageName: string, options?: DiagnosticsPackagesDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Deletes the specified diagnostics package.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param packetCoreControlPlaneName The name of the packet core control plane.
     * @param diagnosticsPackageName The name of the diagnostics package.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, packetCoreControlPlaneName: string, diagnosticsPackageName: string, options?: DiagnosticsPackagesDeleteOptionalParams): Promise<void>;
    /**
     * Lists all the diagnostics packages under a packet core control plane.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param packetCoreControlPlaneName The name of the packet core control plane.
     * @param options The options parameters.
     */
    private _listByPacketCoreControlPlane;
    /**
     * ListByPacketCoreControlPlaneNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param packetCoreControlPlaneName The name of the packet core control plane.
     * @param nextLink The nextLink from the previous successful call to the ListByPacketCoreControlPlane
     *                 method.
     * @param options The options parameters.
     */
    private _listByPacketCoreControlPlaneNext;
}
//# sourceMappingURL=diagnosticsPackages.d.ts.map