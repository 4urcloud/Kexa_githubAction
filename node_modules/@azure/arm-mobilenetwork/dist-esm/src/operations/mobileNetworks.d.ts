import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { MobileNetworks } from "../operationsInterfaces";
import { MobileNetworkManagementClient } from "../mobileNetworkManagementClient";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import { MobileNetwork, MobileNetworksListBySubscriptionOptionalParams, MobileNetworksListByResourceGroupOptionalParams, MobileNetworksDeleteOptionalParams, MobileNetworksGetOptionalParams, MobileNetworksGetResponse, MobileNetworksCreateOrUpdateOptionalParams, MobileNetworksCreateOrUpdateResponse, TagsObject, MobileNetworksUpdateTagsOptionalParams, MobileNetworksUpdateTagsResponse } from "../models";
/** Class containing MobileNetworks operations. */
export declare class MobileNetworksImpl implements MobileNetworks {
    private readonly client;
    /**
     * Initialize a new instance of the class MobileNetworks class.
     * @param client Reference to the service client
     */
    constructor(client: MobileNetworkManagementClient);
    /**
     * Lists all the mobile networks in a subscription.
     * @param options The options parameters.
     */
    listBySubscription(options?: MobileNetworksListBySubscriptionOptionalParams): PagedAsyncIterableIterator<MobileNetwork>;
    private listBySubscriptionPagingPage;
    private listBySubscriptionPagingAll;
    /**
     * Lists all the mobile networks in a resource group.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: MobileNetworksListByResourceGroupOptionalParams): PagedAsyncIterableIterator<MobileNetwork>;
    private listByResourceGroupPagingPage;
    private listByResourceGroupPagingAll;
    /**
     * Deletes the specified mobile network.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mobileNetworkName The name of the mobile network.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, mobileNetworkName: string, options?: MobileNetworksDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Deletes the specified mobile network.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mobileNetworkName The name of the mobile network.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, mobileNetworkName: string, options?: MobileNetworksDeleteOptionalParams): Promise<void>;
    /**
     * Gets information about the specified mobile network.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mobileNetworkName The name of the mobile network.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, mobileNetworkName: string, options?: MobileNetworksGetOptionalParams): Promise<MobileNetworksGetResponse>;
    /**
     * Creates or updates a mobile network.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mobileNetworkName The name of the mobile network.
     * @param parameters Parameters supplied to the create or update mobile network operation.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, mobileNetworkName: string, parameters: MobileNetwork, options?: MobileNetworksCreateOrUpdateOptionalParams): Promise<SimplePollerLike<OperationState<MobileNetworksCreateOrUpdateResponse>, MobileNetworksCreateOrUpdateResponse>>;
    /**
     * Creates or updates a mobile network.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mobileNetworkName The name of the mobile network.
     * @param parameters Parameters supplied to the create or update mobile network operation.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, mobileNetworkName: string, parameters: MobileNetwork, options?: MobileNetworksCreateOrUpdateOptionalParams): Promise<MobileNetworksCreateOrUpdateResponse>;
    /**
     * Updates mobile network tags.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param mobileNetworkName The name of the mobile network.
     * @param parameters Parameters supplied to update mobile network tags.
     * @param options The options parameters.
     */
    updateTags(resourceGroupName: string, mobileNetworkName: string, parameters: TagsObject, options?: MobileNetworksUpdateTagsOptionalParams): Promise<MobileNetworksUpdateTagsResponse>;
    /**
     * Lists all the mobile networks in a subscription.
     * @param options The options parameters.
     */
    private _listBySubscription;
    /**
     * Lists all the mobile networks in a resource group.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    private _listByResourceGroup;
    /**
     * ListBySubscriptionNext
     * @param nextLink The nextLink from the previous successful call to the ListBySubscription method.
     * @param options The options parameters.
     */
    private _listBySubscriptionNext;
    /**
     * ListByResourceGroupNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.
     * @param options The options parameters.
     */
    private _listByResourceGroupNext;
}
//# sourceMappingURL=mobileNetworks.d.ts.map