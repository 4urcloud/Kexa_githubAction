import * as coreClient from "@azure/core-client";
import * as coreAuth from "@azure/core-auth";
import { AttachedDataNetworks, DataNetworks, DiagnosticsPackages, MobileNetworks, Operations, PacketCaptures, PacketCoreControlPlanes, PacketCoreControlPlaneVersions, PacketCoreDataPlanes, Services, Sims, SimGroups, SimPolicies, Sites, Slices } from "./operationsInterfaces";
import { MobileNetworkManagementClientOptionalParams } from "./models";
export declare class MobileNetworkManagementClient extends coreClient.ServiceClient {
    $host: string;
    subscriptionId?: string;
    apiVersion: string;
    /**
     * Initializes a new instance of the MobileNetworkManagementClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId The ID of the target subscription. The value must be an UUID.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: MobileNetworkManagementClientOptionalParams);
    constructor(credentials: coreAuth.TokenCredential, options?: MobileNetworkManagementClientOptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    attachedDataNetworks: AttachedDataNetworks;
    dataNetworks: DataNetworks;
    diagnosticsPackages: DiagnosticsPackages;
    mobileNetworks: MobileNetworks;
    operations: Operations;
    packetCaptures: PacketCaptures;
    packetCoreControlPlanes: PacketCoreControlPlanes;
    packetCoreControlPlaneVersions: PacketCoreControlPlaneVersions;
    packetCoreDataPlanes: PacketCoreDataPlanes;
    services: Services;
    sims: Sims;
    simGroups: SimGroups;
    simPolicies: SimPolicies;
    sites: Sites;
    slices: Slices;
}
//# sourceMappingURL=mobileNetworkManagementClient.d.ts.map