import * as coreClient from "@azure/core-client";
import * as coreAuth from "@azure/core-auth";
import { Operations, StreamingJobs, Inputs, Outputs, Transformations, Functions, Subscriptions, Clusters, PrivateEndpoints } from "./operationsInterfaces";
import { StreamAnalyticsManagementClientOptionalParams } from "./models";
export declare class StreamAnalyticsManagementClient extends coreClient.ServiceClient {
    $host: string;
    apiVersion: string;
    subscriptionId: string;
    /**
     * Initializes a new instance of the StreamAnalyticsManagementClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId The ID of the target subscription.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: StreamAnalyticsManagementClientOptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    operations: Operations;
    streamingJobs: StreamingJobs;
    inputs: Inputs;
    outputs: Outputs;
    transformations: Transformations;
    functions: Functions;
    subscriptions: Subscriptions;
    clusters: Clusters;
    privateEndpoints: PrivateEndpoints;
}
//# sourceMappingURL=streamAnalyticsManagementClient.d.ts.map