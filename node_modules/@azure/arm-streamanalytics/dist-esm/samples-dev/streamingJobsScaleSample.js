/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { StreamAnalyticsManagementClient } from "@azure/arm-streamanalytics";
import { DefaultAzureCredential } from "@azure/identity";
/**
 * This sample demonstrates how to Scales a streaming job when the job is running.
 *
 * @summary Scales a streaming job when the job is running.
 * x-ms-original-file: specification/streamanalytics/resource-manager/Microsoft.StreamAnalytics/stable/2020-03-01/examples/StreamingJob_Scale.json
 */
function scaleAStreamingJob() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "56b5e0a9-b645-407d-99b0-c64f86013e3d";
        const resourceGroupName = "sjrg6936";
        const jobName = "sj59";
        const scaleJobParameters = {
            streamingUnits: 36
        };
        const options = { scaleJobParameters };
        const credential = new DefaultAzureCredential();
        const client = new StreamAnalyticsManagementClient(credential, subscriptionId);
        const result = yield client.streamingJobs.beginScaleAndWait(resourceGroupName, jobName, options);
        console.log(result);
    });
}
scaleAStreamingJob().catch(console.error);
//# sourceMappingURL=streamingJobsScaleSample.js.map