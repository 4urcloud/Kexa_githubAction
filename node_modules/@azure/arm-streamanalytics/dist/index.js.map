{"version":3,"file":"index.js","sources":["../src/pagingHelper.ts","../src/models/index.ts","../src/models/mappers.ts","../src/models/parameters.ts","../src/operations/operations.ts","../src/lroImpl.ts","../src/operations/streamingJobs.ts","../src/operations/inputs.ts","../src/operations/outputs.ts","../src/operations/transformations.ts","../src/operations/functions.ts","../src/operations/subscriptions.ts","../src/operations/clusters.ts","../src/operations/privateEndpoints.ts","../src/streamAnalyticsManagementClient.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport interface PageInfo {\n  continuationToken?: string;\n}\n\nconst pageMap = new WeakMap<object, PageInfo>();\n\n/**\n * Given the last `.value` produced by the `byPage` iterator,\n * returns a continuation token that can be used to begin paging from\n * that point later.\n * @param page An object from accessing `value` on the IteratorResult from a `byPage` iterator.\n * @returns The continuation token that can be passed into byPage() during future calls.\n */\nexport function getContinuationToken(page: unknown): string | undefined {\n  if (typeof page !== \"object\" || page === null) {\n    return undefined;\n  }\n  return pageMap.get(page)?.continuationToken;\n}\n\nexport function setContinuationToken(\n  page: unknown,\n  continuationToken: string | undefined\n): void {\n  if (typeof page !== \"object\" || page === null || !continuationToken) {\n    return;\n  }\n  const pageInfo = pageMap.get(page) ?? {};\n  pageInfo.continuationToken = continuationToken;\n  pageMap.set(page, pageInfo);\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport type InputPropertiesUnion =\n  | InputProperties\n  | StreamInputProperties\n  | ReferenceInputProperties;\nexport type SerializationUnion =\n  | Serialization\n  | ParquetSerialization\n  | CsvSerialization\n  | JsonSerialization\n  | AvroSerialization;\nexport type OutputDataSourceUnion =\n  | OutputDataSource\n  | BlobOutputDataSource\n  | AzureTableOutputDataSource\n  | EventHubOutputDataSource\n  | EventHubV2OutputDataSource\n  | AzureSqlDatabaseOutputDataSource\n  | AzureSynapseOutputDataSource\n  | DocumentDbOutputDataSource\n  | ServiceBusQueueOutputDataSource\n  | ServiceBusTopicOutputDataSource\n  | PowerBIOutputDataSource\n  | AzureDataLakeStoreOutputDataSource;\nexport type FunctionPropertiesUnion =\n  | FunctionProperties\n  | ScalarFunctionProperties;\nexport type FunctionRetrieveDefaultDefinitionParametersUnion =\n  | FunctionRetrieveDefaultDefinitionParameters\n  | AzureMachineLearningWebServiceFunctionRetrieveDefaultDefinitionParameters\n  | JavaScriptFunctionRetrieveDefaultDefinitionParameters;\nexport type StreamInputDataSourceUnion =\n  | StreamInputDataSource\n  | BlobStreamInputDataSource\n  | EventHubStreamInputDataSource\n  | EventHubV2StreamInputDataSource\n  | IoTHubStreamInputDataSource;\nexport type ReferenceInputDataSourceUnion =\n  | ReferenceInputDataSource\n  | BlobReferenceInputDataSource\n  | AzureSqlReferenceInputDataSource;\nexport type FunctionBindingUnion =\n  | FunctionBinding\n  | AzureMachineLearningWebServiceFunctionBinding\n  | JavaScriptFunctionBinding;\n\n/** Result of the request to list Stream Analytics operations. It contains a list of operations and a URL link to get the next set of results. */\nexport interface OperationListResult {\n  /**\n   * List of Stream Analytics operations supported by the Microsoft.StreamAnalytics resource provider.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: Operation[];\n  /**\n   * URL to get the next set of operation list results if there are any.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A Stream Analytics REST API operation */\nexport interface Operation {\n  /**\n   * The name of the operation being performed on this particular object.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /** Indicates whether the operation is a data action */\n  isDataAction?: boolean;\n  /**\n   * Contains the localized display information for this particular operation / action.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly display?: OperationDisplay;\n}\n\n/** Contains the localized display information for this particular operation / action. */\nexport interface OperationDisplay {\n  /**\n   * The localized friendly form of the resource provider name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provider?: string;\n  /**\n   * The localized friendly form of the resource type related to this action/operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resource?: string;\n  /**\n   * The localized friendly name for the operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly operation?: string;\n  /**\n   * The localized friendly description for the operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly description?: string;\n}\n\n/** Common error representation. */\nexport interface ErrorModel {\n  /** Error definition properties. */\n  error?: ErrorError;\n}\n\n/** Error definition properties. */\nexport interface ErrorError {\n  /** Error code. */\n  code?: string;\n  /** Error message. */\n  message?: string;\n  /** Error target. */\n  target?: string;\n  /** Error details. */\n  details?: ErrorDetails[];\n}\n\n/** Common error details representation. */\nexport interface ErrorDetails {\n  /** Error code. */\n  code?: string;\n  /** Error target. */\n  target?: string;\n  /** Error message. */\n  message?: string;\n}\n\n/** The properties that are associated with a SKU. */\nexport interface Sku {\n  /** The name of the SKU. Required on PUT (CreateOrReplace) requests. */\n  name?: SkuName;\n}\n\n/** The properties that are associated with an input. */\nexport interface InputProperties {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"Stream\" | \"Reference\";\n  /** Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests. */\n  serialization?: SerializationUnion;\n  /**\n   * Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly diagnostics?: Diagnostics;\n  /**\n   * The current entity tag for the input. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** Describes how input data is compressed */\n  compression?: Compression;\n  /** partitionKey Describes a key in the input data which is used for partitioning the input data */\n  partitionKey?: string;\n}\n\n/** Describes how data from an input is serialized or how data is serialized when written to an output. */\nexport interface Serialization {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"Parquet\" | \"Csv\" | \"Json\" | \"Avro\";\n}\n\n/** Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention. */\nexport interface Diagnostics {\n  /**\n   * A collection of zero or more conditions applicable to the resource, or to the job overall, that warrant customer attention.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly conditions?: DiagnosticCondition[];\n}\n\n/** Condition applicable to the resource, or to the job overall, that warrant customer attention. */\nexport interface DiagnosticCondition {\n  /**\n   * The UTC timestamp of when the condition started. Customers should be able to find a corresponding event in the ops log around this time.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly since?: string;\n  /**\n   * The opaque diagnostic code.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly code?: string;\n  /**\n   * The human-readable message describing the condition in detail. Localized in the Accept-Language of the client request.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n}\n\n/** Describes how input data is compressed */\nexport interface Compression {\n  /** Indicates the type of compression that the input uses. Required on PUT (CreateOrReplace) requests. */\n  type: CompressionType;\n}\n\n/** The base sub-resource model definition. */\nexport interface SubResource {\n  /**\n   * Resource Id\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /** Resource name */\n  name?: string;\n  /**\n   * Resource type\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n}\n\n/** Describes the data source that output will be written to. */\nexport interface OutputDataSource {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type:\n    | \"Microsoft.Storage/Blob\"\n    | \"Microsoft.Storage/Table\"\n    | \"Microsoft.ServiceBus/EventHub\"\n    | \"Microsoft.EventHub/EventHub\"\n    | \"Microsoft.Sql/Server/Database\"\n    | \"Microsoft.Sql/Server/DataWarehouse\"\n    | \"Microsoft.Storage/DocumentDB\"\n    | \"Microsoft.ServiceBus/Queue\"\n    | \"Microsoft.ServiceBus/Topic\"\n    | \"PowerBI\"\n    | \"Microsoft.DataLake/Accounts\";\n}\n\n/** The properties that are associated with a function. */\nexport interface FunctionProperties {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"Scalar\";\n  /**\n   * The current entity tag for the function. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n}\n\n/** The properties that are associated with an Azure Storage account */\nexport interface StorageAccount {\n  /** The name of the Azure Storage account. Required on PUT (CreateOrReplace) requests. */\n  accountName?: string;\n  /** The account key for the Azure Storage account. Required on PUT (CreateOrReplace) requests. */\n  accountKey?: string;\n}\n\n/** The properties associated with a Stream Analytics cluster. */\nexport interface ClusterInfo {\n  /** The resource id of cluster. */\n  id?: string;\n}\n\n/** Describes how identity is verified */\nexport interface Identity {\n  /** The identity tenantId */\n  tenantId?: string;\n  /** The identity principal ID */\n  principalId?: string;\n  /** The identity type */\n  type?: string;\n}\n\n/** The base resource definition */\nexport interface Resource {\n  /**\n   * Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The name of the resource\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n}\n\n/** Object containing a list of streaming jobs. */\nexport interface StreamingJobListResult {\n  /**\n   * A list of streaming jobs. Populated by a 'List' operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: StreamingJob[];\n  /**\n   * The link (url) to the next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Parameters supplied to the Start Streaming Job operation. */\nexport interface StartStreamingJobParameters {\n  /** Value may be JobStartTime, CustomTime, or LastOutputEventTime to indicate whether the starting point of the output event stream should start whenever the job is started, start at a custom user time stamp specified via the outputStartTime property, or start from the last event output time. */\n  outputStartMode?: OutputStartMode;\n  /** Value is either an ISO-8601 formatted time stamp that indicates the starting point of the output event stream, or null to indicate that the output event stream will start whenever the streaming job is started. This property must have a value if outputStartMode is set to CustomTime. */\n  outputStartTime?: Date;\n}\n\n/** Parameters supplied to the Scale Streaming Job operation. */\nexport interface ScaleStreamingJobParameters {\n  /** Specifies the number of streaming units that the streaming job will scale to. */\n  streamingUnits?: number;\n}\n\n/** Object containing a list of inputs under a streaming job. */\nexport interface InputListResult {\n  /**\n   * A list of inputs under a streaming job. Populated by a 'List' operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: Input[];\n  /**\n   * The link (url) to the next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Describes the status of the test operation along with error information, if applicable. */\nexport interface ResourceTestStatus {\n  /**\n   * The status of the test operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: string;\n  /**\n   * Describes the error that occurred.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly error?: ErrorResponse;\n}\n\n/** Describes the error that occurred. */\nexport interface ErrorResponse {\n  /**\n   * Error code associated with the error that occurred.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly code?: string;\n  /**\n   * Describes the error in detail.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n}\n\n/** Object containing a list of outputs under a streaming job. */\nexport interface OutputListResult {\n  /**\n   * A list of outputs under a streaming job. Populated by a 'List' operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: Output[];\n  /**\n   * The link (url) to the next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Object containing a list of functions under a streaming job. */\nexport interface FunctionListResult {\n  /**\n   * A list of functions under a streaming job. Populated by a 'List' operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: FunctionModel[];\n  /**\n   * The link (url) to the next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Parameters used to specify the type of function to retrieve the default definition for. */\nexport interface FunctionRetrieveDefaultDefinitionParameters {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  bindingType:\n    | \"Microsoft.MachineLearning/WebService\"\n    | \"Microsoft.StreamAnalytics/JavascriptUdf\";\n}\n\n/** Result of the GetQuotas operation. It contains a list of quotas for the subscription in a particular region. */\nexport interface SubscriptionQuotasListResult {\n  /**\n   * List of quotas for the subscription in a particular region.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: SubscriptionQuota[];\n}\n\n/** The SKU of the cluster. This determines the size/capacity of the cluster. Required on PUT (CreateOrUpdate) requests. */\nexport interface ClusterSku {\n  /** Specifies the SKU name of the cluster. Required on PUT (CreateOrUpdate) requests. */\n  name?: ClusterSkuName;\n  /** Denotes the number of streaming units the cluster can support. Valid values for this property are multiples of 36 with a minimum value of 36 and maximum value of 216. Required on PUT (CreateOrUpdate) requests. */\n  capacity?: number;\n}\n\n/** A list of clusters populated by a 'list' operation. */\nexport interface ClusterListResult {\n  /**\n   * A list of clusters.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: Cluster[];\n  /**\n   * The URL to fetch the next set of clusters.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of streaming jobs. Populated by a List operation. */\nexport interface ClusterJobListResult {\n  /**\n   * A list of streaming jobs.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ClusterJob[];\n  /**\n   * The URL to fetch the next set of streaming jobs.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A streaming job. */\nexport interface ClusterJob {\n  /**\n   * Resource ID of the streaming job.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The number of streaming units that are used by the streaming job.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly streamingUnits?: number;\n  /**\n   * The current execution state of the streaming job.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly jobState?: JobState;\n}\n\n/** A grouping of information about the connection to the remote resource. */\nexport interface PrivateLinkServiceConnection {\n  /** The resource id of the private link service. Required on PUT (CreateOrUpdate) requests. */\n  privateLinkServiceId?: string;\n  /** The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to. Required on PUT (CreateOrUpdate) requests. */\n  groupIds?: string[];\n  /**\n   * A message passed to the owner of the remote resource with this connection request. Restricted to 140 chars.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly requestMessage?: string;\n  /** A collection of read-only information about the state of the connection to the private remote resource. */\n  privateLinkServiceConnectionState?: PrivateLinkConnectionState;\n}\n\n/** A collection of read-only information about the state of the connection to the private remote resource. */\nexport interface PrivateLinkConnectionState {\n  /**\n   * Indicates whether the connection has been Approved/Rejected/Removed by the owner of the remote resource/service.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: string;\n  /**\n   * The reason for approval/rejection of the connection.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly description?: string;\n  /**\n   * A message indicating if changes on the service provider require any updates on the consumer.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly actionsRequired?: string;\n}\n\n/** A list of private endpoints. */\nexport interface PrivateEndpointListResult {\n  /**\n   * A list of private endpoints.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: PrivateEndpoint[];\n  /**\n   * The URL to fetch the next set of private endpoints.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Describes an input data source that contains stream data. */\nexport interface StreamInputDataSource {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type:\n    | \"Microsoft.Storage/Blob\"\n    | \"Microsoft.ServiceBus/EventHub\"\n    | \"Microsoft.EventHub/EventHub\"\n    | \"Microsoft.Devices/IotHubs\";\n}\n\n/** Describes an input data source that contains reference data. */\nexport interface ReferenceInputDataSource {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"Microsoft.Storage/Blob\" | \"Microsoft.Sql/Server/Database\";\n}\n\n/** The properties that are associated with a blob data source. */\nexport interface BlobDataSourceProperties {\n  /** A list of one or more Azure Storage accounts. Required on PUT (CreateOrReplace) requests. */\n  storageAccounts?: StorageAccount[];\n  /** The name of a container within the associated Storage account. This container contains either the blob(s) to be read from or written to. Required on PUT (CreateOrReplace) requests. */\n  container?: string;\n  /** The blob path pattern. Not a regular expression. It represents a pattern against which blob names will be matched to determine whether or not they should be included as input or output to the job. See https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a more detailed explanation and example. */\n  pathPattern?: string;\n  /** The date format. Wherever {date} appears in pathPattern, the value of this property is used as the date format instead. */\n  dateFormat?: string;\n  /** The time format. Wherever {time} appears in pathPattern, the value of this property is used as the time format instead. */\n  timeFormat?: string;\n}\n\n/** The common properties that are associated with Service Bus data sources (Queues, Topics, Event Hubs, etc.). */\nexport interface ServiceBusDataSourceProperties {\n  /** The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests. */\n  serviceBusNamespace?: string;\n  /** The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests. */\n  sharedAccessPolicyName?: string;\n  /** The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests. */\n  sharedAccessPolicyKey?: string;\n  /** Authentication Mode. */\n  authenticationMode?: AuthenticationMode;\n}\n\n/** The properties that are associated with an Azure SQL database data source. */\nexport interface AzureSqlDatabaseDataSourceProperties {\n  /** The name of the SQL server containing the Azure SQL database. Required on PUT (CreateOrReplace) requests. */\n  server?: string;\n  /** The name of the Azure SQL database. Required on PUT (CreateOrReplace) requests. */\n  database?: string;\n  /** The user name that will be used to connect to the Azure SQL database. Required on PUT (CreateOrReplace) requests. */\n  user?: string;\n  /** The password that will be used to connect to the Azure SQL database. Required on PUT (CreateOrReplace) requests. */\n  password?: string;\n  /** The name of the table in the Azure SQL database. Required on PUT (CreateOrReplace) requests. */\n  table?: string;\n  /** Max Batch count for write to Sql database, the default value is 10,000. Optional on PUT requests. */\n  maxBatchCount?: number;\n  /** Max Writer count, currently only 1(single writer) and 0(based on query partition) are available. Optional on PUT requests. */\n  maxWriterCount?: number;\n  /** Authentication Mode. */\n  authenticationMode?: AuthenticationMode;\n}\n\n/** The properties that are associated with an Azure SQL database data source. */\nexport interface AzureSynapseDataSourceProperties {\n  /** The name of the SQL server containing the Azure SQL database. Required on PUT (CreateOrReplace) requests. */\n  server?: string;\n  /** The name of the Azure SQL database. Required on PUT (CreateOrReplace) requests. */\n  database?: string;\n  /** The name of the table in the Azure SQL database. Required on PUT (CreateOrReplace) requests. */\n  table?: string;\n  /** The user name that will be used to connect to the Azure SQL database. Required on PUT (CreateOrReplace) requests. */\n  user?: string;\n  /** The password that will be used to connect to the Azure SQL database. Required on PUT (CreateOrReplace) requests. */\n  password?: string;\n}\n\n/** The properties that are associated with data sources that use OAuth as their authentication model. */\nexport interface OAuthBasedDataSourceProperties {\n  /** A refresh token that can be used to obtain a valid access token that can then be used to authenticate with the data source. A valid refresh token is currently only obtainable via the Azure Portal. It is recommended to put a dummy string value here when creating the data source and then going to the Azure Portal to authenticate the data source which will update this property with a valid refresh token. Required on PUT (CreateOrReplace) requests. */\n  refreshToken?: string;\n  /** The user principal name (UPN) of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token. */\n  tokenUserPrincipalName?: string;\n  /** The user display name of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token. */\n  tokenUserDisplayName?: string;\n}\n\n/** Describes one input parameter of a function. */\nexport interface FunctionInput {\n  /** The (Azure Stream Analytics supported) data type of the function input parameter. A list of valid Azure Stream Analytics data types are described at https://msdn.microsoft.com/en-us/library/azure/dn835065.aspx */\n  dataType?: string;\n  /** A flag indicating if the parameter is a configuration parameter. True if this input parameter is expected to be a constant. Default is false. */\n  isConfigurationParameter?: boolean;\n}\n\n/** Describes the output of a function. */\nexport interface FunctionOutput {\n  /** The (Azure Stream Analytics supported) data type of the function output. A list of valid Azure Stream Analytics data types are described at https://msdn.microsoft.com/en-us/library/azure/dn835065.aspx */\n  dataType?: string;\n}\n\n/** The physical binding of the function. For example, in the Azure Machine Learning web service’s case, this describes the endpoint. */\nexport interface FunctionBinding {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type:\n    | \"Microsoft.MachineLearning/WebService\"\n    | \"Microsoft.StreamAnalytics/JavascriptUdf\";\n}\n\n/** The inputs for the Azure Machine Learning web service endpoint. */\nexport interface AzureMachineLearningWebServiceInputs {\n  /** The name of the input. This is the name provided while authoring the endpoint. */\n  name?: string;\n  /** A list of input columns for the Azure Machine Learning web service endpoint. */\n  columnNames?: AzureMachineLearningWebServiceInputColumn[];\n}\n\n/** Describes an input column for the Azure Machine Learning web service endpoint. */\nexport interface AzureMachineLearningWebServiceInputColumn {\n  /** The name of the input column. */\n  name?: string;\n  /** The (Azure Machine Learning supported) data type of the input column. A list of valid  Azure Machine Learning data types are described at https://msdn.microsoft.com/en-us/library/azure/dn905923.aspx . */\n  dataType?: string;\n  /** The zero based index of the function parameter this input maps to. */\n  mapTo?: number;\n}\n\n/** Describes an output column for the Azure Machine Learning web service endpoint. */\nexport interface AzureMachineLearningWebServiceOutputColumn {\n  /** The name of the output column. */\n  name?: string;\n  /** The (Azure Machine Learning supported) data type of the output column. A list of valid  Azure Machine Learning data types are described at https://msdn.microsoft.com/en-us/library/azure/dn905923.aspx . */\n  dataType?: string;\n}\n\n/** The properties that are associated with an input containing stream data. */\nexport interface StreamInputProperties extends InputProperties {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"Stream\";\n  /** Describes an input data source that contains stream data. Required on PUT (CreateOrReplace) requests. */\n  datasource?: StreamInputDataSourceUnion;\n}\n\n/** The properties that are associated with an input containing reference data. */\nexport interface ReferenceInputProperties extends InputProperties {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"Reference\";\n  /** Describes an input data source that contains reference data. Required on PUT (CreateOrReplace) requests. */\n  datasource?: ReferenceInputDataSourceUnion;\n}\n\n/** Describes how data from an input is serialized or how data is serialized when written to an output in Parquet format. */\nexport interface ParquetSerialization extends Serialization {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"Parquet\";\n  /** The properties that are associated with the Parquet serialization type. Required on PUT (CreateOrReplace) requests. */\n  properties?: Record<string, unknown>;\n}\n\n/** Describes how data from an input is serialized or how data is serialized when written to an output in CSV format. */\nexport interface CsvSerialization extends Serialization {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"Csv\";\n  /** Specifies the delimiter that will be used to separate comma-separated value (CSV) records. See https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a list of supported values. Required on PUT (CreateOrReplace) requests. */\n  fieldDelimiter?: string;\n  /** Specifies the encoding of the incoming data in the case of input and the encoding of outgoing data in the case of output. Required on PUT (CreateOrReplace) requests. */\n  encoding?: Encoding;\n}\n\n/** Describes how data from an input is serialized or how data is serialized when written to an output in JSON format. */\nexport interface JsonSerialization extends Serialization {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"Json\";\n  /** Specifies the encoding of the incoming data in the case of input and the encoding of outgoing data in the case of output. Required on PUT (CreateOrReplace) requests. */\n  encoding?: Encoding;\n  /** This property only applies to JSON serialization of outputs only. It is not applicable to inputs. This property specifies the format of the JSON the output will be written in. The currently supported values are 'lineSeparated' indicating the output will be formatted by having each JSON object separated by a new line and 'array' indicating the output will be formatted as an array of JSON objects. Default value is 'lineSeparated' if left null. */\n  format?: JsonOutputSerializationFormat;\n}\n\n/** Describes how data from an input is serialized or how data is serialized when written to an output in Avro format. */\nexport interface AvroSerialization extends Serialization {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"Avro\";\n  /** The properties that are associated with the Avro serialization type. Required on PUT (CreateOrReplace) requests. */\n  properties?: Record<string, unknown>;\n}\n\n/** An input object, containing all information associated with the named input. All inputs are contained under a streaming job. */\nexport interface Input extends SubResource {\n  /** The properties that are associated with an input. Required on PUT (CreateOrReplace) requests. */\n  properties?: InputPropertiesUnion;\n}\n\n/** A transformation object, containing all information associated with the named transformation. All transformations are contained under a streaming job. */\nexport interface Transformation extends SubResource {\n  /** Specifies the number of streaming units that the streaming job uses. */\n  streamingUnits?: number;\n  /** Specifies the valid streaming units a streaming job can scale to. */\n  validStreamingUnits?: number[];\n  /** Specifies the query that will be run in the streaming job. You can learn more about the Stream Analytics Query Language (SAQL) here: https://msdn.microsoft.com/library/azure/dn834998 . Required on PUT (CreateOrReplace) requests. */\n  query?: string;\n  /**\n   * The current entity tag for the transformation. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n}\n\n/** An output object, containing all information associated with the named output. All outputs are contained under a streaming job. */\nexport interface Output extends SubResource {\n  /** Describes the data source that output will be written to. Required on PUT (CreateOrReplace) requests. */\n  datasource?: OutputDataSourceUnion;\n  /** The time frame for filtering Stream Analytics job outputs. */\n  timeWindow?: string;\n  /** The size window to constrain a Stream Analytics output to. */\n  sizeWindow?: number;\n  /** Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests. */\n  serialization?: SerializationUnion;\n  /**\n   * Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly diagnostics?: Diagnostics;\n  /**\n   * The current entity tag for the output. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n}\n\n/** A function object, containing all information associated with the named function. All functions are contained under a streaming job. */\nexport interface FunctionModel extends SubResource {\n  /** The properties that are associated with a function. */\n  properties?: FunctionPropertiesUnion;\n}\n\n/** Describes the current quota for the subscription. */\nexport interface SubscriptionQuota extends SubResource {\n  /**\n   * The max permitted usage of this resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly maxCount?: number;\n  /**\n   * The current usage of this resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currentCount?: number;\n}\n\n/** Describes a blob output data source. */\nexport interface BlobOutputDataSource extends OutputDataSource {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"Microsoft.Storage/Blob\";\n  /** A list of one or more Azure Storage accounts. Required on PUT (CreateOrReplace) requests. */\n  storageAccounts?: StorageAccount[];\n  /** The name of a container within the associated Storage account. This container contains either the blob(s) to be read from or written to. Required on PUT (CreateOrReplace) requests. */\n  container?: string;\n  /** The blob path pattern. Not a regular expression. It represents a pattern against which blob names will be matched to determine whether or not they should be included as input or output to the job. See https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a more detailed explanation and example. */\n  pathPattern?: string;\n  /** The date format. Wherever {date} appears in pathPattern, the value of this property is used as the date format instead. */\n  dateFormat?: string;\n  /** The time format. Wherever {time} appears in pathPattern, the value of this property is used as the time format instead. */\n  timeFormat?: string;\n  /** Authentication Mode. */\n  authenticationMode?: AuthenticationMode;\n}\n\n/** Describes an Azure Table output data source. */\nexport interface AzureTableOutputDataSource extends OutputDataSource {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"Microsoft.Storage/Table\";\n  /** The name of the Azure Storage account. Required on PUT (CreateOrReplace) requests. */\n  accountName?: string;\n  /** The account key for the Azure Storage account. Required on PUT (CreateOrReplace) requests. */\n  accountKey?: string;\n  /** The name of the Azure Table. Required on PUT (CreateOrReplace) requests. */\n  table?: string;\n  /** This element indicates the name of a column from the SELECT statement in the query that will be used as the partition key for the Azure Table. Required on PUT (CreateOrReplace) requests. */\n  partitionKey?: string;\n  /** This element indicates the name of a column from the SELECT statement in the query that will be used as the row key for the Azure Table. Required on PUT (CreateOrReplace) requests. */\n  rowKey?: string;\n  /** If specified, each item in the array is the name of a column to remove (if present) from output event entities. */\n  columnsToRemove?: string[];\n  /** The number of rows to write to the Azure Table at a time. */\n  batchSize?: number;\n}\n\n/** Describes an Event Hub output data source. */\nexport interface EventHubOutputDataSource extends OutputDataSource {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"Microsoft.ServiceBus/EventHub\";\n  /** The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests. */\n  serviceBusNamespace?: string;\n  /** The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests. */\n  sharedAccessPolicyName?: string;\n  /** The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests. */\n  sharedAccessPolicyKey?: string;\n  /** Authentication Mode. */\n  authenticationMode?: AuthenticationMode;\n  /** The name of the Event Hub. Required on PUT (CreateOrReplace) requests. */\n  eventHubName?: string;\n  /** The key/column that is used to determine to which partition to send event data. */\n  partitionKey?: string;\n  /** The properties associated with this Event Hub output. */\n  propertyColumns?: string[];\n}\n\n/** Describes an Event Hub output data source. */\nexport interface EventHubV2OutputDataSource extends OutputDataSource {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"Microsoft.EventHub/EventHub\";\n  /** The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests. */\n  serviceBusNamespace?: string;\n  /** The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests. */\n  sharedAccessPolicyName?: string;\n  /** The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests. */\n  sharedAccessPolicyKey?: string;\n  /** Authentication Mode. */\n  authenticationMode?: AuthenticationMode;\n  /** The name of the Event Hub. Required on PUT (CreateOrReplace) requests. */\n  eventHubName?: string;\n  /** The key/column that is used to determine to which partition to send event data. */\n  partitionKey?: string;\n  /** The properties associated with this Event Hub output. */\n  propertyColumns?: string[];\n}\n\n/** Describes an Azure SQL database output data source. */\nexport interface AzureSqlDatabaseOutputDataSource extends OutputDataSource {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"Microsoft.Sql/Server/Database\";\n  /** The name of the SQL server containing the Azure SQL database. Required on PUT (CreateOrReplace) requests. */\n  server?: string;\n  /** The name of the Azure SQL database. Required on PUT (CreateOrReplace) requests. */\n  database?: string;\n  /** The user name that will be used to connect to the Azure SQL database. Required on PUT (CreateOrReplace) requests. */\n  user?: string;\n  /** The password that will be used to connect to the Azure SQL database. Required on PUT (CreateOrReplace) requests. */\n  password?: string;\n  /** The name of the table in the Azure SQL database. Required on PUT (CreateOrReplace) requests. */\n  table?: string;\n  /** Max Batch count for write to Sql database, the default value is 10,000. Optional on PUT requests. */\n  maxBatchCount?: number;\n  /** Max Writer count, currently only 1(single writer) and 0(based on query partition) are available. Optional on PUT requests. */\n  maxWriterCount?: number;\n  /** Authentication Mode. */\n  authenticationMode?: AuthenticationMode;\n}\n\n/** Describes an Azure Synapse output data source. */\nexport interface AzureSynapseOutputDataSource extends OutputDataSource {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"Microsoft.Sql/Server/DataWarehouse\";\n  /** The name of the SQL server containing the Azure SQL database. Required on PUT (CreateOrReplace) requests. */\n  server?: string;\n  /** The name of the Azure SQL database. Required on PUT (CreateOrReplace) requests. */\n  database?: string;\n  /** The name of the table in the Azure SQL database. Required on PUT (CreateOrReplace) requests. */\n  table?: string;\n  /** The user name that will be used to connect to the Azure SQL database. Required on PUT (CreateOrReplace) requests. */\n  user?: string;\n  /** The password that will be used to connect to the Azure SQL database. Required on PUT (CreateOrReplace) requests. */\n  password?: string;\n}\n\n/** Describes a DocumentDB output data source. */\nexport interface DocumentDbOutputDataSource extends OutputDataSource {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"Microsoft.Storage/DocumentDB\";\n  /** The DocumentDB account name or ID. Required on PUT (CreateOrReplace) requests. */\n  accountId?: string;\n  /** The account key for the DocumentDB account. Required on PUT (CreateOrReplace) requests. */\n  accountKey?: string;\n  /** The name of the DocumentDB database. Required on PUT (CreateOrReplace) requests. */\n  database?: string;\n  /** The collection name pattern for the collections to be used. The collection name format can be constructed using the optional {partition} token, where partitions start from 0. See the DocumentDB section of https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for more information. Required on PUT (CreateOrReplace) requests. */\n  collectionNamePattern?: string;\n  /** The name of the field in output events used to specify the key for partitioning output across collections. If 'collectionNamePattern' contains the {partition} token, this property is required to be specified. */\n  partitionKey?: string;\n  /** The name of the field in output events used to specify the primary key which insert or update operations are based on. */\n  documentId?: string;\n}\n\n/** Describes a Service Bus Queue output data source. */\nexport interface ServiceBusQueueOutputDataSource extends OutputDataSource {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"Microsoft.ServiceBus/Queue\";\n  /** The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests. */\n  serviceBusNamespace?: string;\n  /** The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests. */\n  sharedAccessPolicyName?: string;\n  /** The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests. */\n  sharedAccessPolicyKey?: string;\n  /** Authentication Mode. */\n  authenticationMode?: AuthenticationMode;\n  /** The name of the Service Bus Queue. Required on PUT (CreateOrReplace) requests. */\n  queueName?: string;\n  /** A string array of the names of output columns to be attached to Service Bus messages as custom properties. */\n  propertyColumns?: string[];\n  /** The system properties associated with the Service Bus Queue. The following system properties are supported: ReplyToSessionId, ContentType, To, Subject, CorrelationId, TimeToLive, PartitionKey, SessionId, ScheduledEnqueueTime, MessageId, ReplyTo, Label, ScheduledEnqueueTimeUtc. */\n  systemPropertyColumns?: Record<string, unknown>;\n}\n\n/** Describes a Service Bus Topic output data source. */\nexport interface ServiceBusTopicOutputDataSource extends OutputDataSource {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"Microsoft.ServiceBus/Topic\";\n  /** The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests. */\n  serviceBusNamespace?: string;\n  /** The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests. */\n  sharedAccessPolicyName?: string;\n  /** The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests. */\n  sharedAccessPolicyKey?: string;\n  /** Authentication Mode. */\n  authenticationMode?: AuthenticationMode;\n  /** The name of the Service Bus Topic. Required on PUT (CreateOrReplace) requests. */\n  topicName?: string;\n  /** A string array of the names of output columns to be attached to Service Bus messages as custom properties. */\n  propertyColumns?: string[];\n  /** The system properties associated with the Service Bus Topic Output. The following system properties are supported: ReplyToSessionId, ContentType, To, Subject, CorrelationId, TimeToLive, PartitionKey, SessionId, ScheduledEnqueueTime, MessageId, ReplyTo, Label, ScheduledEnqueueTimeUtc. */\n  systemPropertyColumns?: { [propertyName: string]: string };\n}\n\n/** Describes a Power BI output data source. */\nexport interface PowerBIOutputDataSource extends OutputDataSource {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"PowerBI\";\n  /** A refresh token that can be used to obtain a valid access token that can then be used to authenticate with the data source. A valid refresh token is currently only obtainable via the Azure Portal. It is recommended to put a dummy string value here when creating the data source and then going to the Azure Portal to authenticate the data source which will update this property with a valid refresh token. Required on PUT (CreateOrReplace) requests. */\n  refreshToken?: string;\n  /** The user principal name (UPN) of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token. */\n  tokenUserPrincipalName?: string;\n  /** The user display name of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token. */\n  tokenUserDisplayName?: string;\n  /** The name of the Power BI dataset. Required on PUT (CreateOrReplace) requests. */\n  dataset?: string;\n  /** The name of the Power BI table under the specified dataset. Required on PUT (CreateOrReplace) requests. */\n  table?: string;\n  /** The ID of the Power BI group. */\n  groupId?: string;\n  /** The name of the Power BI group. Use this property to help remember which specific Power BI group id was used. */\n  groupName?: string;\n  /** Authentication Mode. */\n  authenticationMode?: AuthenticationMode;\n}\n\n/** Describes an Azure Data Lake Store output data source. */\nexport interface AzureDataLakeStoreOutputDataSource extends OutputDataSource {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"Microsoft.DataLake/Accounts\";\n  /** A refresh token that can be used to obtain a valid access token that can then be used to authenticate with the data source. A valid refresh token is currently only obtainable via the Azure Portal. It is recommended to put a dummy string value here when creating the data source and then going to the Azure Portal to authenticate the data source which will update this property with a valid refresh token. Required on PUT (CreateOrReplace) requests. */\n  refreshToken?: string;\n  /** The user principal name (UPN) of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token. */\n  tokenUserPrincipalName?: string;\n  /** The user display name of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token. */\n  tokenUserDisplayName?: string;\n  /** The name of the Azure Data Lake Store account. Required on PUT (CreateOrReplace) requests. */\n  accountName?: string;\n  /** The tenant id of the user used to obtain the refresh token. Required on PUT (CreateOrReplace) requests. */\n  tenantId?: string;\n  /** The location of the file to which the output should be written to. Required on PUT (CreateOrReplace) requests. */\n  filePathPrefix?: string;\n  /** The date format. Wherever {date} appears in filePathPrefix, the value of this property is used as the date format instead. */\n  dateFormat?: string;\n  /** The time format. Wherever {time} appears in filePathPrefix, the value of this property is used as the time format instead. */\n  timeFormat?: string;\n  /** Authentication Mode. */\n  authenticationMode?: AuthenticationMode;\n}\n\n/** The properties that are associated with a scalar function. */\nexport interface ScalarFunctionProperties extends FunctionProperties {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"Scalar\";\n  /** A list of inputs describing the parameters of the function. */\n  inputs?: FunctionInput[];\n  /** The output of the function. */\n  output?: FunctionOutput;\n  /** The physical binding of the function. For example, in the Azure Machine Learning web service’s case, this describes the endpoint. */\n  binding?: FunctionBindingUnion;\n}\n\n/** The properties that are associated with an Azure Storage account with MSI */\nexport interface JobStorageAccount extends StorageAccount {\n  /** Authentication Mode. */\n  authenticationMode?: AuthenticationMode;\n}\n\n/** The resource model definition for a ARM tracked top level resource */\nexport interface TrackedResource extends Resource {\n  /** Resource tags. */\n  tags?: { [propertyName: string]: string };\n  /** The geo-location where the resource lives */\n  location?: string;\n}\n\n/** The resource model definition for a ARM proxy resource. It will have everything other than required location and tags */\nexport interface ProxyResource extends Resource {}\n\n/** The parameters needed to retrieve the default function definition for an Azure Machine Learning web service function. */\nexport interface AzureMachineLearningWebServiceFunctionRetrieveDefaultDefinitionParameters\n  extends FunctionRetrieveDefaultDefinitionParameters {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  bindingType: \"Microsoft.MachineLearning/WebService\";\n  /** The Request-Response execute endpoint of the Azure Machine Learning web service. Find out more here: https://docs.microsoft.com/en-us/azure/machine-learning/machine-learning-consume-web-services#request-response-service-rrs */\n  executeEndpoint?: string;\n  /** The function type. */\n  udfType?: \"Scalar\";\n}\n\n/** The parameters needed to retrieve the default function definition for a JavaScript function. */\nexport interface JavaScriptFunctionRetrieveDefaultDefinitionParameters\n  extends FunctionRetrieveDefaultDefinitionParameters {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  bindingType: \"Microsoft.StreamAnalytics/JavascriptUdf\";\n  /** The JavaScript code containing a single function definition. For example: 'function (x, y) { return x + y; }'. */\n  script?: string;\n  /** The function type. */\n  udfType?: \"Scalar\";\n}\n\n/** Describes a blob input data source that contains stream data. */\nexport interface BlobStreamInputDataSource extends StreamInputDataSource {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"Microsoft.Storage/Blob\";\n  /** A list of one or more Azure Storage accounts. Required on PUT (CreateOrReplace) requests. */\n  storageAccounts?: StorageAccount[];\n  /** The name of a container within the associated Storage account. This container contains either the blob(s) to be read from or written to. Required on PUT (CreateOrReplace) requests. */\n  container?: string;\n  /** The blob path pattern. Not a regular expression. It represents a pattern against which blob names will be matched to determine whether or not they should be included as input or output to the job. See https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a more detailed explanation and example. */\n  pathPattern?: string;\n  /** The date format. Wherever {date} appears in pathPattern, the value of this property is used as the date format instead. */\n  dateFormat?: string;\n  /** The time format. Wherever {time} appears in pathPattern, the value of this property is used as the time format instead. */\n  timeFormat?: string;\n  /** The partition count of the blob input data source. Range 1 - 256. */\n  sourcePartitionCount?: number;\n}\n\n/** Describes an Event Hub input data source that contains stream data. */\nexport interface EventHubStreamInputDataSource extends StreamInputDataSource {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"Microsoft.ServiceBus/EventHub\";\n  /** The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests. */\n  serviceBusNamespace?: string;\n  /** The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests. */\n  sharedAccessPolicyName?: string;\n  /** The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests. */\n  sharedAccessPolicyKey?: string;\n  /** Authentication Mode. */\n  authenticationMode?: AuthenticationMode;\n  /** The name of the Event Hub. Required on PUT (CreateOrReplace) requests. */\n  eventHubName?: string;\n  /** The name of an Event Hub Consumer Group that should be used to read events from the Event Hub. Specifying distinct consumer group names for multiple inputs allows each of those inputs to receive the same events from the Event Hub. If not specified, the input uses the Event Hub’s default consumer group. */\n  consumerGroupName?: string;\n}\n\n/** Describes an Event Hub input data source that contains stream data. */\nexport interface EventHubV2StreamInputDataSource extends StreamInputDataSource {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"Microsoft.EventHub/EventHub\";\n  /** The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests. */\n  serviceBusNamespace?: string;\n  /** The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests. */\n  sharedAccessPolicyName?: string;\n  /** The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests. */\n  sharedAccessPolicyKey?: string;\n  /** Authentication Mode. */\n  authenticationMode?: AuthenticationMode;\n  /** The name of the Event Hub. Required on PUT (CreateOrReplace) requests. */\n  eventHubName?: string;\n  /** The name of an Event Hub Consumer Group that should be used to read events from the Event Hub. Specifying distinct consumer group names for multiple inputs allows each of those inputs to receive the same events from the Event Hub. If not specified, the input uses the Event Hub’s default consumer group. */\n  consumerGroupName?: string;\n}\n\n/** Describes an IoT Hub input data source that contains stream data. */\nexport interface IoTHubStreamInputDataSource extends StreamInputDataSource {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"Microsoft.Devices/IotHubs\";\n  /** The name or the URI of the IoT Hub. Required on PUT (CreateOrReplace) requests. */\n  iotHubNamespace?: string;\n  /** The shared access policy name for the IoT Hub. This policy must contain at least the Service connect permission. Required on PUT (CreateOrReplace) requests. */\n  sharedAccessPolicyName?: string;\n  /** The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests. */\n  sharedAccessPolicyKey?: string;\n  /** The name of an IoT Hub Consumer Group that should be used to read events from the IoT Hub. If not specified, the input uses the Iot Hub’s default consumer group. */\n  consumerGroupName?: string;\n  /** The IoT Hub endpoint to connect to (ie. messages/events, messages/operationsMonitoringEvents, etc.). */\n  endpoint?: string;\n}\n\n/** Describes a blob input data source that contains reference data. */\nexport interface BlobReferenceInputDataSource extends ReferenceInputDataSource {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"Microsoft.Storage/Blob\";\n  /** A list of one or more Azure Storage accounts. Required on PUT (CreateOrReplace) requests. */\n  storageAccounts?: StorageAccount[];\n  /** The name of a container within the associated Storage account. This container contains either the blob(s) to be read from or written to. Required on PUT (CreateOrReplace) requests. */\n  container?: string;\n  /** The blob path pattern. Not a regular expression. It represents a pattern against which blob names will be matched to determine whether or not they should be included as input or output to the job. See https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a more detailed explanation and example. */\n  pathPattern?: string;\n  /** The date format. Wherever {date} appears in pathPattern, the value of this property is used as the date format instead. */\n  dateFormat?: string;\n  /** The time format. Wherever {time} appears in pathPattern, the value of this property is used as the time format instead. */\n  timeFormat?: string;\n}\n\n/** Describes an Azure SQL database reference input data source. */\nexport interface AzureSqlReferenceInputDataSource\n  extends ReferenceInputDataSource {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"Microsoft.Sql/Server/Database\";\n  /** This element is associated with the datasource element. This is the name of the server that contains the database that will be written to. */\n  server?: string;\n  /** This element is associated with the datasource element. This is the name of the database that output will be written to. */\n  database?: string;\n  /** This element is associated with the datasource element. This is the user name that will be used to connect to the SQL Database instance. */\n  user?: string;\n  /** This element is associated with the datasource element. This is the password that will be used to connect to the SQL Database instance. */\n  password?: string;\n  /** This element is associated with the datasource element. The name of the table in the Azure SQL database.. */\n  table?: string;\n  /** Indicates the type of data refresh option. */\n  refreshType?: RefreshType;\n  /** This element is associated with the datasource element. This indicates how frequently the data will be fetched from the database. It is of DateTime format. */\n  refreshRate?: string;\n  /** This element is associated with the datasource element. This query is used to fetch data from the sql database. */\n  fullSnapshotQuery?: string;\n  /** This element is associated with the datasource element. This query is used to fetch incremental changes from the SQL database. To use this option, we recommend using temporal tables in Azure SQL Database. */\n  deltaSnapshotQuery?: string;\n}\n\n/** The properties that are associated with a blob input containing stream data. */\nexport interface BlobStreamInputDataSourceProperties\n  extends BlobDataSourceProperties {\n  /** The partition count of the blob input data source. Range 1 - 256. */\n  sourcePartitionCount?: number;\n}\n\n/** The properties that are associated with a blob input containing reference data. */\nexport interface BlobReferenceInputDataSourceProperties\n  extends BlobDataSourceProperties {}\n\n/** The properties that are associated with a blob output. */\nexport interface BlobOutputDataSourceProperties\n  extends BlobDataSourceProperties {\n  /** Authentication Mode. */\n  authenticationMode?: AuthenticationMode;\n}\n\n/** The common properties that are associated with Event Hub data sources. */\nexport interface EventHubDataSourceProperties\n  extends ServiceBusDataSourceProperties {\n  /** The name of the Event Hub. Required on PUT (CreateOrReplace) requests. */\n  eventHubName?: string;\n}\n\n/** The properties that are associated with a Service Bus Queue output. */\nexport interface ServiceBusQueueOutputDataSourceProperties\n  extends ServiceBusDataSourceProperties {\n  /** The name of the Service Bus Queue. Required on PUT (CreateOrReplace) requests. */\n  queueName?: string;\n  /** A string array of the names of output columns to be attached to Service Bus messages as custom properties. */\n  propertyColumns?: string[];\n  /** The system properties associated with the Service Bus Queue. The following system properties are supported: ReplyToSessionId, ContentType, To, Subject, CorrelationId, TimeToLive, PartitionKey, SessionId, ScheduledEnqueueTime, MessageId, ReplyTo, Label, ScheduledEnqueueTimeUtc. */\n  systemPropertyColumns?: Record<string, unknown>;\n}\n\n/** The properties that are associated with a Service Bus Topic output. */\nexport interface ServiceBusTopicOutputDataSourceProperties\n  extends ServiceBusDataSourceProperties {\n  /** The name of the Service Bus Topic. Required on PUT (CreateOrReplace) requests. */\n  topicName?: string;\n  /** A string array of the names of output columns to be attached to Service Bus messages as custom properties. */\n  propertyColumns?: string[];\n  /** The system properties associated with the Service Bus Topic Output. The following system properties are supported: ReplyToSessionId, ContentType, To, Subject, CorrelationId, TimeToLive, PartitionKey, SessionId, ScheduledEnqueueTime, MessageId, ReplyTo, Label, ScheduledEnqueueTimeUtc. */\n  systemPropertyColumns?: { [propertyName: string]: string };\n}\n\n/** The properties that are associated with an Azure SQL database output. */\nexport interface AzureSqlDatabaseOutputDataSourceProperties\n  extends AzureSqlDatabaseDataSourceProperties {}\n\n/** The properties that are associated with an Azure Synapse output. */\nexport interface AzureSynapseOutputDataSourceProperties\n  extends AzureSynapseDataSourceProperties {}\n\n/** The properties that are associated with a Power BI output. */\nexport interface PowerBIOutputDataSourceProperties\n  extends OAuthBasedDataSourceProperties {\n  /** The name of the Power BI dataset. Required on PUT (CreateOrReplace) requests. */\n  dataset?: string;\n  /** The name of the Power BI table under the specified dataset. Required on PUT (CreateOrReplace) requests. */\n  table?: string;\n  /** The ID of the Power BI group. */\n  groupId?: string;\n  /** The name of the Power BI group. Use this property to help remember which specific Power BI group id was used. */\n  groupName?: string;\n  /** Authentication Mode. */\n  authenticationMode?: AuthenticationMode;\n}\n\n/** The properties that are associated with an Azure Data Lake Store. */\nexport interface AzureDataLakeStoreOutputDataSourceProperties\n  extends OAuthBasedDataSourceProperties {\n  /** The name of the Azure Data Lake Store account. Required on PUT (CreateOrReplace) requests. */\n  accountName?: string;\n  /** The tenant id of the user used to obtain the refresh token. Required on PUT (CreateOrReplace) requests. */\n  tenantId?: string;\n  /** The location of the file to which the output should be written to. Required on PUT (CreateOrReplace) requests. */\n  filePathPrefix?: string;\n  /** The date format. Wherever {date} appears in filePathPrefix, the value of this property is used as the date format instead. */\n  dateFormat?: string;\n  /** The time format. Wherever {time} appears in filePathPrefix, the value of this property is used as the time format instead. */\n  timeFormat?: string;\n  /** Authentication Mode. */\n  authenticationMode?: AuthenticationMode;\n}\n\n/** The binding to an Azure Machine Learning web service. */\nexport interface AzureMachineLearningWebServiceFunctionBinding\n  extends FunctionBinding {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"Microsoft.MachineLearning/WebService\";\n  /** The Request-Response execute endpoint of the Azure Machine Learning web service. Find out more here: https://docs.microsoft.com/en-us/azure/machine-learning/machine-learning-consume-web-services#request-response-service-rrs */\n  endpoint?: string;\n  /** The API key used to authenticate with Request-Response endpoint. */\n  apiKey?: string;\n  /** The inputs for the Azure Machine Learning web service endpoint. */\n  inputs?: AzureMachineLearningWebServiceInputs;\n  /** A list of outputs from the Azure Machine Learning web service endpoint execution. */\n  outputs?: AzureMachineLearningWebServiceOutputColumn[];\n  /** Number between 1 and 10000 describing maximum number of rows for every Azure ML RRS execute request. Default is 1000. */\n  batchSize?: number;\n}\n\n/** The binding to a JavaScript function. */\nexport interface JavaScriptFunctionBinding extends FunctionBinding {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"Microsoft.StreamAnalytics/JavascriptUdf\";\n  /** The JavaScript code containing a single function definition. For example: 'function (x, y) { return x + y; }' */\n  script?: string;\n}\n\n/** A streaming job object, containing all information associated with the named streaming job. */\nexport interface StreamingJob extends TrackedResource {\n  /** Describes the system-assigned managed identity assigned to this job that can be used to authenticate with inputs and outputs. */\n  identity?: Identity;\n  /** Describes the SKU of the streaming job. Required on PUT (CreateOrReplace) requests. */\n  sku?: Sku;\n  /**\n   * A GUID uniquely identifying the streaming job. This GUID is generated upon creation of the streaming job.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly jobId?: string;\n  /**\n   * Describes the provisioning status of the streaming job.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n  /**\n   * Describes the state of the streaming job.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly jobState?: string;\n  /** Describes the type of the job. Valid modes are `Cloud` and 'Edge'. */\n  jobType?: JobType;\n  /** This property should only be utilized when it is desired that the job be started immediately upon creation. Value may be JobStartTime, CustomTime, or LastOutputEventTime to indicate whether the starting point of the output event stream should start whenever the job is started, start at a custom user time stamp specified via the outputStartTime property, or start from the last event output time. */\n  outputStartMode?: OutputStartMode;\n  /** Value is either an ISO-8601 formatted time stamp that indicates the starting point of the output event stream, or null to indicate that the output event stream will start whenever the streaming job is started. This property must have a value if outputStartMode is set to CustomTime. */\n  outputStartTime?: Date;\n  /**\n   * Value is either an ISO-8601 formatted timestamp indicating the last output event time of the streaming job or null indicating that output has not yet been produced. In case of multiple outputs or multiple streams, this shows the latest value in that set.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastOutputEventTime?: Date;\n  /** Indicates the policy to apply to events that arrive out of order in the input event stream. */\n  eventsOutOfOrderPolicy?: EventsOutOfOrderPolicy;\n  /** Indicates the policy to apply to events that arrive at the output and cannot be written to the external storage due to being malformed (missing column values, column values of wrong type or size). */\n  outputErrorPolicy?: OutputErrorPolicy;\n  /** The maximum tolerable delay in seconds where out-of-order events can be adjusted to be back in order. */\n  eventsOutOfOrderMaxDelayInSeconds?: number;\n  /** The maximum tolerable delay in seconds where events arriving late could be included.  Supported range is -1 to 1814399 (20.23:59:59 days) and -1 is used to specify wait indefinitely. If the property is absent, it is interpreted to have a value of -1. */\n  eventsLateArrivalMaxDelayInSeconds?: number;\n  /** The data locale of the stream analytics job. Value should be the name of a supported .NET Culture from the set https://msdn.microsoft.com/en-us/library/system.globalization.culturetypes(v=vs.110).aspx. Defaults to 'en-US' if none specified. */\n  dataLocale?: string;\n  /** Controls certain runtime behaviors of the streaming job. */\n  compatibilityLevel?: CompatibilityLevel;\n  /**\n   * Value is an ISO-8601 formatted UTC timestamp indicating when the streaming job was created.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly createdDate?: Date;\n  /** A list of one or more inputs to the streaming job. The name property for each input is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual input. */\n  inputs?: Input[];\n  /** Indicates the query and the number of streaming units to use for the streaming job. The name property of the transformation is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual transformation. */\n  transformation?: Transformation;\n  /** A list of one or more outputs for the streaming job. The name property for each output is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual output. */\n  outputs?: Output[];\n  /** A list of one or more functions for the streaming job. The name property for each function is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual transformation. */\n  functions?: FunctionModel[];\n  /**\n   * The current entity tag for the streaming job. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** The properties that are associated with an Azure Storage account with MSI */\n  jobStorageAccount?: JobStorageAccount;\n  /** Valid values are JobStorageAccount and SystemAccount. If set to JobStorageAccount, this requires the user to also specify jobStorageAccount property. . */\n  contentStoragePolicy?: ContentStoragePolicy;\n  /** The cluster which streaming jobs will run on. */\n  cluster?: ClusterInfo;\n}\n\n/** A Stream Analytics Cluster object */\nexport interface Cluster extends TrackedResource {\n  /** The SKU of the cluster. This determines the size/capacity of the cluster. Required on PUT (CreateOrUpdate) requests. */\n  sku?: ClusterSku;\n  /**\n   * The current entity tag for the cluster. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * The date this cluster was created.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly createdDate?: Date;\n  /**\n   * Unique identifier for the cluster.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly clusterId?: string;\n  /**\n   * The status of the cluster provisioning. The three terminal states are: Succeeded, Failed and Canceled\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ClusterProvisioningState;\n  /**\n   * Represents the number of streaming units currently being used on the cluster.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly capacityAllocated?: number;\n  /**\n   * Represents the sum of the SUs of all streaming jobs associated with the cluster. If all of the jobs were running, this would be the capacity allocated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly capacityAssigned?: number;\n}\n\n/** Complete information about the private endpoint. */\nexport interface PrivateEndpoint extends ProxyResource {\n  /**\n   * Unique opaque string (generally a GUID) that represents the metadata state of the resource (private endpoint) and changes whenever the resource is updated. Required on PUT (CreateOrUpdate) requests.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * The date when this private endpoint was created.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly createdDate?: string;\n  /** A list of connections to the remote resource. Immutable after it is set. */\n  manualPrivateLinkServiceConnections?: PrivateLinkServiceConnection[];\n}\n\n/** The properties that are associated with a Event Hub input containing stream data. */\nexport interface EventHubStreamInputDataSourceProperties\n  extends EventHubDataSourceProperties {\n  /** The name of an Event Hub Consumer Group that should be used to read events from the Event Hub. Specifying distinct consumer group names for multiple inputs allows each of those inputs to receive the same events from the Event Hub. If not specified, the input uses the Event Hub’s default consumer group. */\n  consumerGroupName?: string;\n}\n\n/** The properties that are associated with an Event Hub output. */\nexport interface EventHubOutputDataSourceProperties\n  extends EventHubDataSourceProperties {\n  /** The key/column that is used to determine to which partition to send event data. */\n  partitionKey?: string;\n  /** The properties associated with this Event Hub output. */\n  propertyColumns?: string[];\n}\n\n/** Defines headers for StreamingJobs_createOrReplace operation. */\nexport interface StreamingJobsCreateOrReplaceHeaders {\n  /** The current entity tag for the streaming job. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency. */\n  eTag?: string;\n}\n\n/** Defines headers for StreamingJobs_update operation. */\nexport interface StreamingJobsUpdateHeaders {\n  /** The current entity tag for the streaming job. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency. */\n  eTag?: string;\n}\n\n/** Defines headers for StreamingJobs_get operation. */\nexport interface StreamingJobsGetHeaders {\n  /** The current entity tag for the streaming job. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency. */\n  eTag?: string;\n}\n\n/** Defines headers for Inputs_createOrReplace operation. */\nexport interface InputsCreateOrReplaceHeaders {\n  /** The current entity tag for the input. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency. */\n  eTag?: string;\n}\n\n/** Defines headers for Inputs_update operation. */\nexport interface InputsUpdateHeaders {\n  /** The current entity tag for the input. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency. */\n  eTag?: string;\n}\n\n/** Defines headers for Inputs_get operation. */\nexport interface InputsGetHeaders {\n  /** The current entity tag for the input. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency. */\n  eTag?: string;\n}\n\n/** Defines headers for Outputs_createOrReplace operation. */\nexport interface OutputsCreateOrReplaceHeaders {\n  /** The current entity tag for the output. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency. */\n  eTag?: string;\n}\n\n/** Defines headers for Outputs_update operation. */\nexport interface OutputsUpdateHeaders {\n  /** The current entity tag for the output. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency. */\n  eTag?: string;\n}\n\n/** Defines headers for Outputs_get operation. */\nexport interface OutputsGetHeaders {\n  /** The current entity tag for the output. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency. */\n  eTag?: string;\n}\n\n/** Defines headers for Transformations_createOrReplace operation. */\nexport interface TransformationsCreateOrReplaceHeaders {\n  /** The current entity tag for the transformation. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency. */\n  eTag?: string;\n}\n\n/** Defines headers for Transformations_update operation. */\nexport interface TransformationsUpdateHeaders {\n  /** The current entity tag for the transformation. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency. */\n  eTag?: string;\n}\n\n/** Defines headers for Transformations_get operation. */\nexport interface TransformationsGetHeaders {\n  /** The current entity tag for the transformation. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency. */\n  eTag?: string;\n}\n\n/** Defines headers for Functions_createOrReplace operation. */\nexport interface FunctionsCreateOrReplaceHeaders {\n  /** The current entity tag for the function. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency. */\n  eTag?: string;\n}\n\n/** Defines headers for Functions_update operation. */\nexport interface FunctionsUpdateHeaders {\n  /** The current entity tag for the function. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency. */\n  eTag?: string;\n}\n\n/** Defines headers for Functions_get operation. */\nexport interface FunctionsGetHeaders {\n  /** The current entity tag for the function. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency. */\n  eTag?: string;\n}\n\n/** Known values of {@link SkuName} that the service accepts. */\nexport enum KnownSkuName {\n  /** Standard */\n  Standard = \"Standard\"\n}\n\n/**\n * Defines values for SkuName. \\\n * {@link KnownSkuName} can be used interchangeably with SkuName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Standard**\n */\nexport type SkuName = string;\n\n/** Known values of {@link JobType} that the service accepts. */\nexport enum KnownJobType {\n  /** Cloud */\n  Cloud = \"Cloud\",\n  /** Edge */\n  Edge = \"Edge\"\n}\n\n/**\n * Defines values for JobType. \\\n * {@link KnownJobType} can be used interchangeably with JobType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Cloud** \\\n * **Edge**\n */\nexport type JobType = string;\n\n/** Known values of {@link OutputStartMode} that the service accepts. */\nexport enum KnownOutputStartMode {\n  /** JobStartTime */\n  JobStartTime = \"JobStartTime\",\n  /** CustomTime */\n  CustomTime = \"CustomTime\",\n  /** LastOutputEventTime */\n  LastOutputEventTime = \"LastOutputEventTime\"\n}\n\n/**\n * Defines values for OutputStartMode. \\\n * {@link KnownOutputStartMode} can be used interchangeably with OutputStartMode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **JobStartTime** \\\n * **CustomTime** \\\n * **LastOutputEventTime**\n */\nexport type OutputStartMode = string;\n\n/** Known values of {@link EventsOutOfOrderPolicy} that the service accepts. */\nexport enum KnownEventsOutOfOrderPolicy {\n  /** Adjust */\n  Adjust = \"Adjust\",\n  /** Drop */\n  Drop = \"Drop\"\n}\n\n/**\n * Defines values for EventsOutOfOrderPolicy. \\\n * {@link KnownEventsOutOfOrderPolicy} can be used interchangeably with EventsOutOfOrderPolicy,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Adjust** \\\n * **Drop**\n */\nexport type EventsOutOfOrderPolicy = string;\n\n/** Known values of {@link OutputErrorPolicy} that the service accepts. */\nexport enum KnownOutputErrorPolicy {\n  /** Stop */\n  Stop = \"Stop\",\n  /** Drop */\n  Drop = \"Drop\"\n}\n\n/**\n * Defines values for OutputErrorPolicy. \\\n * {@link KnownOutputErrorPolicy} can be used interchangeably with OutputErrorPolicy,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Stop** \\\n * **Drop**\n */\nexport type OutputErrorPolicy = string;\n\n/** Known values of {@link CompatibilityLevel} that the service accepts. */\nexport enum KnownCompatibilityLevel {\n  /** One0 */\n  One0 = \"1.0\",\n  /** One2 */\n  One2 = \"1.2\"\n}\n\n/**\n * Defines values for CompatibilityLevel. \\\n * {@link KnownCompatibilityLevel} can be used interchangeably with CompatibilityLevel,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **1.0** \\\n * **1.2**\n */\nexport type CompatibilityLevel = string;\n\n/** Known values of {@link EventSerializationType} that the service accepts. */\nexport enum KnownEventSerializationType {\n  /** Csv */\n  Csv = \"Csv\",\n  /** Avro */\n  Avro = \"Avro\",\n  /** Json */\n  Json = \"Json\",\n  /** Parquet */\n  Parquet = \"Parquet\"\n}\n\n/**\n * Defines values for EventSerializationType. \\\n * {@link KnownEventSerializationType} can be used interchangeably with EventSerializationType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Csv** \\\n * **Avro** \\\n * **Json** \\\n * **Parquet**\n */\nexport type EventSerializationType = string;\n\n/** Known values of {@link CompressionType} that the service accepts. */\nexport enum KnownCompressionType {\n  /** None */\n  None = \"None\",\n  /** GZip */\n  GZip = \"GZip\",\n  /** Deflate */\n  Deflate = \"Deflate\"\n}\n\n/**\n * Defines values for CompressionType. \\\n * {@link KnownCompressionType} can be used interchangeably with CompressionType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **GZip** \\\n * **Deflate**\n */\nexport type CompressionType = string;\n\n/** Known values of {@link AuthenticationMode} that the service accepts. */\nexport enum KnownAuthenticationMode {\n  /** Msi */\n  Msi = \"Msi\",\n  /** UserToken */\n  UserToken = \"UserToken\",\n  /** ConnectionString */\n  ConnectionString = \"ConnectionString\"\n}\n\n/**\n * Defines values for AuthenticationMode. \\\n * {@link KnownAuthenticationMode} can be used interchangeably with AuthenticationMode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Msi** \\\n * **UserToken** \\\n * **ConnectionString**\n */\nexport type AuthenticationMode = string;\n\n/** Known values of {@link ContentStoragePolicy} that the service accepts. */\nexport enum KnownContentStoragePolicy {\n  /** SystemAccount */\n  SystemAccount = \"SystemAccount\",\n  /** JobStorageAccount */\n  JobStorageAccount = \"JobStorageAccount\"\n}\n\n/**\n * Defines values for ContentStoragePolicy. \\\n * {@link KnownContentStoragePolicy} can be used interchangeably with ContentStoragePolicy,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **SystemAccount** \\\n * **JobStorageAccount**\n */\nexport type ContentStoragePolicy = string;\n\n/** Known values of {@link ClusterSkuName} that the service accepts. */\nexport enum KnownClusterSkuName {\n  /** The default SKU. */\n  Default = \"Default\"\n}\n\n/**\n * Defines values for ClusterSkuName. \\\n * {@link KnownClusterSkuName} can be used interchangeably with ClusterSkuName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Default**: The default SKU.\n */\nexport type ClusterSkuName = string;\n\n/** Known values of {@link ClusterProvisioningState} that the service accepts. */\nexport enum KnownClusterProvisioningState {\n  /** The cluster provisioning succeeded. */\n  Succeeded = \"Succeeded\",\n  /** The cluster provisioning failed. */\n  Failed = \"Failed\",\n  /** The cluster provisioning was canceled. */\n  Canceled = \"Canceled\",\n  /** The cluster provisioning was inprogress. */\n  InProgress = \"InProgress\"\n}\n\n/**\n * Defines values for ClusterProvisioningState. \\\n * {@link KnownClusterProvisioningState} can be used interchangeably with ClusterProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Succeeded**: The cluster provisioning succeeded. \\\n * **Failed**: The cluster provisioning failed. \\\n * **Canceled**: The cluster provisioning was canceled. \\\n * **InProgress**: The cluster provisioning was inprogress.\n */\nexport type ClusterProvisioningState = string;\n\n/** Known values of {@link JobState} that the service accepts. */\nexport enum KnownJobState {\n  /** The job is currently in the Created state. */\n  Created = \"Created\",\n  /** The job is currently in the Starting state. */\n  Starting = \"Starting\",\n  /** The job is currently in the Running state. */\n  Running = \"Running\",\n  /** The job is currently in the Stopping state. */\n  Stopping = \"Stopping\",\n  /** The job is currently in the Stopped state. */\n  Stopped = \"Stopped\",\n  /** The job is currently in the Deleting state. */\n  Deleting = \"Deleting\",\n  /** The job is currently in the Failed state. */\n  Failed = \"Failed\",\n  /** The job is currently in the Degraded state. */\n  Degraded = \"Degraded\",\n  /** The job is currently in the Restarting state. */\n  Restarting = \"Restarting\",\n  /** The job is currently in the Scaling state. */\n  Scaling = \"Scaling\"\n}\n\n/**\n * Defines values for JobState. \\\n * {@link KnownJobState} can be used interchangeably with JobState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Created**: The job is currently in the Created state. \\\n * **Starting**: The job is currently in the Starting state. \\\n * **Running**: The job is currently in the Running state. \\\n * **Stopping**: The job is currently in the Stopping state. \\\n * **Stopped**: The job is currently in the Stopped state. \\\n * **Deleting**: The job is currently in the Deleting state. \\\n * **Failed**: The job is currently in the Failed state. \\\n * **Degraded**: The job is currently in the Degraded state. \\\n * **Restarting**: The job is currently in the Restarting state. \\\n * **Scaling**: The job is currently in the Scaling state.\n */\nexport type JobState = string;\n\n/** Known values of {@link Encoding} that the service accepts. */\nexport enum KnownEncoding {\n  /** UTF8 */\n  UTF8 = \"UTF8\"\n}\n\n/**\n * Defines values for Encoding. \\\n * {@link KnownEncoding} can be used interchangeably with Encoding,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **UTF8**\n */\nexport type Encoding = string;\n\n/** Known values of {@link JsonOutputSerializationFormat} that the service accepts. */\nexport enum KnownJsonOutputSerializationFormat {\n  /** LineSeparated */\n  LineSeparated = \"LineSeparated\",\n  /** Array */\n  Array = \"Array\"\n}\n\n/**\n * Defines values for JsonOutputSerializationFormat. \\\n * {@link KnownJsonOutputSerializationFormat} can be used interchangeably with JsonOutputSerializationFormat,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **LineSeparated** \\\n * **Array**\n */\nexport type JsonOutputSerializationFormat = string;\n\n/** Known values of {@link RefreshType} that the service accepts. */\nexport enum KnownRefreshType {\n  /** Static */\n  Static = \"Static\",\n  /** RefreshPeriodicallyWithFull */\n  RefreshPeriodicallyWithFull = \"RefreshPeriodicallyWithFull\",\n  /** RefreshPeriodicallyWithDelta */\n  RefreshPeriodicallyWithDelta = \"RefreshPeriodicallyWithDelta\"\n}\n\n/**\n * Defines values for RefreshType. \\\n * {@link KnownRefreshType} can be used interchangeably with RefreshType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Static** \\\n * **RefreshPeriodicallyWithFull** \\\n * **RefreshPeriodicallyWithDelta**\n */\nexport type RefreshType = string;\n\n/** Optional parameters. */\nexport interface OperationsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type OperationsListResponse = OperationListResult;\n\n/** Optional parameters. */\nexport interface OperationsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type OperationsListNextResponse = OperationListResult;\n\n/** Optional parameters. */\nexport interface StreamingJobsCreateOrReplaceOptionalParams\n  extends coreClient.OperationOptions {\n  /** The ETag of the streaming job. Omit this value to always overwrite the current record set. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes. */\n  ifMatch?: string;\n  /** Set to '*' to allow a new streaming job to be created, but to prevent updating an existing record set. Other values will result in a 412 Pre-condition Failed response. */\n  ifNoneMatch?: string;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrReplace operation. */\nexport type StreamingJobsCreateOrReplaceResponse = StreamingJobsCreateOrReplaceHeaders &\n  StreamingJob;\n\n/** Optional parameters. */\nexport interface StreamingJobsUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** The ETag of the streaming job. Omit this value to always overwrite the current record set. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes. */\n  ifMatch?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type StreamingJobsUpdateResponse = StreamingJobsUpdateHeaders &\n  StreamingJob;\n\n/** Optional parameters. */\nexport interface StreamingJobsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface StreamingJobsGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** The $expand OData query parameter. This is a comma-separated list of additional streaming job properties to include in the response, beyond the default set returned when this parameter is absent. The default set is all streaming job properties other than 'inputs', 'transformation', 'outputs', and 'functions'. */\n  expand?: string;\n}\n\n/** Contains response data for the get operation. */\nexport type StreamingJobsGetResponse = StreamingJobsGetHeaders & StreamingJob;\n\n/** Optional parameters. */\nexport interface StreamingJobsListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {\n  /** The $expand OData query parameter. This is a comma-separated list of additional streaming job properties to include in the response, beyond the default set returned when this parameter is absent. The default set is all streaming job properties other than 'inputs', 'transformation', 'outputs', and 'functions'. */\n  expand?: string;\n}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type StreamingJobsListByResourceGroupResponse = StreamingJobListResult;\n\n/** Optional parameters. */\nexport interface StreamingJobsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** The $expand OData query parameter. This is a comma-separated list of additional streaming job properties to include in the response, beyond the default set returned when this parameter is absent. The default set is all streaming job properties other than 'inputs', 'transformation', 'outputs', and 'functions'. */\n  expand?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type StreamingJobsListResponse = StreamingJobListResult;\n\n/** Optional parameters. */\nexport interface StreamingJobsStartOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameters applicable to a start streaming job operation. */\n  startJobParameters?: StartStreamingJobParameters;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface StreamingJobsStopOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface StreamingJobsScaleOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameters applicable to a scale streaming job operation. */\n  scaleJobParameters?: ScaleStreamingJobParameters;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface StreamingJobsListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type StreamingJobsListByResourceGroupNextResponse = StreamingJobListResult;\n\n/** Optional parameters. */\nexport interface StreamingJobsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type StreamingJobsListNextResponse = StreamingJobListResult;\n\n/** Optional parameters. */\nexport interface InputsCreateOrReplaceOptionalParams\n  extends coreClient.OperationOptions {\n  /** The ETag of the input. Omit this value to always overwrite the current input. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes. */\n  ifMatch?: string;\n  /** Set to '*' to allow a new input to be created, but to prevent updating an existing input. Other values will result in a 412 Pre-condition Failed response. */\n  ifNoneMatch?: string;\n}\n\n/** Contains response data for the createOrReplace operation. */\nexport type InputsCreateOrReplaceResponse = InputsCreateOrReplaceHeaders &\n  Input;\n\n/** Optional parameters. */\nexport interface InputsUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** The ETag of the input. Omit this value to always overwrite the current input. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes. */\n  ifMatch?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type InputsUpdateResponse = InputsUpdateHeaders & Input;\n\n/** Optional parameters. */\nexport interface InputsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface InputsGetOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type InputsGetResponse = InputsGetHeaders & Input;\n\n/** Optional parameters. */\nexport interface InputsListByStreamingJobOptionalParams\n  extends coreClient.OperationOptions {\n  /** The $select OData query parameter. This is a comma-separated list of structural properties to include in the response, or \"*\" to include all properties. By default, all properties are returned except diagnostics. Currently only accepts '*' as a valid value. */\n  select?: string;\n}\n\n/** Contains response data for the listByStreamingJob operation. */\nexport type InputsListByStreamingJobResponse = InputListResult;\n\n/** Optional parameters. */\nexport interface InputsTestOptionalParams extends coreClient.OperationOptions {\n  /** If the input specified does not already exist, this parameter must contain the full input definition intended to be tested. If the input specified already exists, this parameter can be left null to test the existing input as is or if specified, the properties specified will overwrite the corresponding properties in the existing input (exactly like a PATCH operation) and the resulting input will be tested. */\n  input?: Input;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the test operation. */\nexport type InputsTestResponse = ResourceTestStatus;\n\n/** Optional parameters. */\nexport interface InputsListByStreamingJobNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByStreamingJobNext operation. */\nexport type InputsListByStreamingJobNextResponse = InputListResult;\n\n/** Optional parameters. */\nexport interface OutputsCreateOrReplaceOptionalParams\n  extends coreClient.OperationOptions {\n  /** The ETag of the output. Omit this value to always overwrite the current output. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes. */\n  ifMatch?: string;\n  /** Set to '*' to allow a new output to be created, but to prevent updating an existing output. Other values will result in a 412 Pre-condition Failed response. */\n  ifNoneMatch?: string;\n}\n\n/** Contains response data for the createOrReplace operation. */\nexport type OutputsCreateOrReplaceResponse = OutputsCreateOrReplaceHeaders &\n  Output;\n\n/** Optional parameters. */\nexport interface OutputsUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** The ETag of the output. Omit this value to always overwrite the current output. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes. */\n  ifMatch?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type OutputsUpdateResponse = OutputsUpdateHeaders & Output;\n\n/** Optional parameters. */\nexport interface OutputsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface OutputsGetOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type OutputsGetResponse = OutputsGetHeaders & Output;\n\n/** Optional parameters. */\nexport interface OutputsListByStreamingJobOptionalParams\n  extends coreClient.OperationOptions {\n  /** The $select OData query parameter. This is a comma-separated list of structural properties to include in the response, or \"*\" to include all properties. By default, all properties are returned except diagnostics. Currently only accepts '*' as a valid value. */\n  select?: string;\n}\n\n/** Contains response data for the listByStreamingJob operation. */\nexport type OutputsListByStreamingJobResponse = OutputListResult;\n\n/** Optional parameters. */\nexport interface OutputsTestOptionalParams extends coreClient.OperationOptions {\n  /** If the output specified does not already exist, this parameter must contain the full output definition intended to be tested. If the output specified already exists, this parameter can be left null to test the existing output as is or if specified, the properties specified will overwrite the corresponding properties in the existing output (exactly like a PATCH operation) and the resulting output will be tested. */\n  output?: Output;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the test operation. */\nexport type OutputsTestResponse = ResourceTestStatus;\n\n/** Optional parameters. */\nexport interface OutputsListByStreamingJobNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByStreamingJobNext operation. */\nexport type OutputsListByStreamingJobNextResponse = OutputListResult;\n\n/** Optional parameters. */\nexport interface TransformationsCreateOrReplaceOptionalParams\n  extends coreClient.OperationOptions {\n  /** The ETag of the transformation. Omit this value to always overwrite the current transformation. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes. */\n  ifMatch?: string;\n  /** Set to '*' to allow a new transformation to be created, but to prevent updating an existing transformation. Other values will result in a 412 Pre-condition Failed response. */\n  ifNoneMatch?: string;\n}\n\n/** Contains response data for the createOrReplace operation. */\nexport type TransformationsCreateOrReplaceResponse = TransformationsCreateOrReplaceHeaders &\n  Transformation;\n\n/** Optional parameters. */\nexport interface TransformationsUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** The ETag of the transformation. Omit this value to always overwrite the current transformation. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes. */\n  ifMatch?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type TransformationsUpdateResponse = TransformationsUpdateHeaders &\n  Transformation;\n\n/** Optional parameters. */\nexport interface TransformationsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type TransformationsGetResponse = TransformationsGetHeaders &\n  Transformation;\n\n/** Optional parameters. */\nexport interface FunctionsCreateOrReplaceOptionalParams\n  extends coreClient.OperationOptions {\n  /** The ETag of the function. Omit this value to always overwrite the current function. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes. */\n  ifMatch?: string;\n  /** Set to '*' to allow a new function to be created, but to prevent updating an existing function. Other values will result in a 412 Pre-condition Failed response. */\n  ifNoneMatch?: string;\n}\n\n/** Contains response data for the createOrReplace operation. */\nexport type FunctionsCreateOrReplaceResponse = FunctionsCreateOrReplaceHeaders &\n  FunctionModel;\n\n/** Optional parameters. */\nexport interface FunctionsUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** The ETag of the function. Omit this value to always overwrite the current function. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes. */\n  ifMatch?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type FunctionsUpdateResponse = FunctionsUpdateHeaders & FunctionModel;\n\n/** Optional parameters. */\nexport interface FunctionsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface FunctionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type FunctionsGetResponse = FunctionsGetHeaders & FunctionModel;\n\n/** Optional parameters. */\nexport interface FunctionsListByStreamingJobOptionalParams\n  extends coreClient.OperationOptions {\n  /** The $select OData query parameter. This is a comma-separated list of structural properties to include in the response, or \"*\" to include all properties. By default, all properties are returned except diagnostics. Currently only accepts '*' as a valid value. */\n  select?: string;\n}\n\n/** Contains response data for the listByStreamingJob operation. */\nexport type FunctionsListByStreamingJobResponse = FunctionListResult;\n\n/** Optional parameters. */\nexport interface FunctionsTestOptionalParams\n  extends coreClient.OperationOptions {\n  /** If the function specified does not already exist, this parameter must contain the full function definition intended to be tested. If the function specified already exists, this parameter can be left null to test the existing function as is or if specified, the properties specified will overwrite the corresponding properties in the existing function (exactly like a PATCH operation) and the resulting function will be tested. */\n  functionParam?: FunctionModel;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the test operation. */\nexport type FunctionsTestResponse = ResourceTestStatus;\n\n/** Optional parameters. */\nexport interface FunctionsRetrieveDefaultDefinitionOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameters used to specify the type of function to retrieve the default definition for. */\n  functionRetrieveDefaultDefinitionParameters?: FunctionRetrieveDefaultDefinitionParametersUnion;\n}\n\n/** Contains response data for the retrieveDefaultDefinition operation. */\nexport type FunctionsRetrieveDefaultDefinitionResponse = FunctionModel;\n\n/** Optional parameters. */\nexport interface FunctionsListByStreamingJobNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByStreamingJobNext operation. */\nexport type FunctionsListByStreamingJobNextResponse = FunctionListResult;\n\n/** Optional parameters. */\nexport interface SubscriptionsListQuotasOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listQuotas operation. */\nexport type SubscriptionsListQuotasResponse = SubscriptionQuotasListResult;\n\n/** Optional parameters. */\nexport interface ClustersCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** The ETag of the resource. Omit this value to always overwrite the current record set. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes. */\n  ifMatch?: string;\n  /** Set to '*' to allow a new resource to be created, but to prevent updating an existing record set. Other values will result in a 412 Pre-condition Failed response. */\n  ifNoneMatch?: string;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ClustersCreateOrUpdateResponse = Cluster;\n\n/** Optional parameters. */\nexport interface ClustersUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** The ETag of the resource. Omit this value to always overwrite the current record set. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes. */\n  ifMatch?: string;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type ClustersUpdateResponse = Cluster;\n\n/** Optional parameters. */\nexport interface ClustersGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ClustersGetResponse = Cluster;\n\n/** Optional parameters. */\nexport interface ClustersDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ClustersListBySubscriptionOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBySubscription operation. */\nexport type ClustersListBySubscriptionResponse = ClusterListResult;\n\n/** Optional parameters. */\nexport interface ClustersListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type ClustersListByResourceGroupResponse = ClusterListResult;\n\n/** Optional parameters. */\nexport interface ClustersListStreamingJobsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listStreamingJobs operation. */\nexport type ClustersListStreamingJobsResponse = ClusterJobListResult;\n\n/** Optional parameters. */\nexport interface ClustersListBySubscriptionNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBySubscriptionNext operation. */\nexport type ClustersListBySubscriptionNextResponse = ClusterListResult;\n\n/** Optional parameters. */\nexport interface ClustersListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type ClustersListByResourceGroupNextResponse = ClusterListResult;\n\n/** Optional parameters. */\nexport interface ClustersListStreamingJobsNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listStreamingJobsNext operation. */\nexport type ClustersListStreamingJobsNextResponse = ClusterJobListResult;\n\n/** Optional parameters. */\nexport interface PrivateEndpointsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** The ETag of the resource. Omit this value to always overwrite the current record set. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes. */\n  ifMatch?: string;\n  /** Set to '*' to allow a new resource to be created, but to prevent updating an existing record set. Other values will result in a 412 Pre-condition Failed response. */\n  ifNoneMatch?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type PrivateEndpointsCreateOrUpdateResponse = PrivateEndpoint;\n\n/** Optional parameters. */\nexport interface PrivateEndpointsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type PrivateEndpointsGetResponse = PrivateEndpoint;\n\n/** Optional parameters. */\nexport interface PrivateEndpointsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface PrivateEndpointsListByClusterOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByCluster operation. */\nexport type PrivateEndpointsListByClusterResponse = PrivateEndpointListResult;\n\n/** Optional parameters. */\nexport interface PrivateEndpointsListByClusterNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByClusterNext operation. */\nexport type PrivateEndpointsListByClusterNextResponse = PrivateEndpointListResult;\n\n/** Optional parameters. */\nexport interface StreamAnalyticsManagementClientOptionalParams\n  extends coreClient.ServiceClientOptions {\n  /** server parameter */\n  $host?: string;\n  /** Api Version */\n  apiVersion?: string;\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport const OperationListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Operation\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Operation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Operation\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      isDataAction: {\n        serializedName: \"isDataAction\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      display: {\n        serializedName: \"display\",\n        type: {\n          name: \"Composite\",\n          className: \"OperationDisplay\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationDisplay: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationDisplay\",\n    modelProperties: {\n      provider: {\n        serializedName: \"provider\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resource: {\n        serializedName: \"resource\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      operation: {\n        serializedName: \"operation\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorModel: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorModel\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorError\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorError: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorError\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      },\n      target: {\n        serializedName: \"target\",\n        type: {\n          name: \"String\"\n        }\n      },\n      details: {\n        serializedName: \"details\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorDetails\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorDetails: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorDetails\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      target: {\n        serializedName: \"target\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Sku: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Sku\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const InputProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"InputProperties\",\n    uberParent: \"InputProperties\",\n    polymorphicDiscriminator: {\n      serializedName: \"type\",\n      clientName: \"type\"\n    },\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      serialization: {\n        serializedName: \"serialization\",\n        type: {\n          name: \"Composite\",\n          className: \"Serialization\"\n        }\n      },\n      diagnostics: {\n        serializedName: \"diagnostics\",\n        type: {\n          name: \"Composite\",\n          className: \"Diagnostics\"\n        }\n      },\n      etag: {\n        serializedName: \"etag\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      compression: {\n        serializedName: \"compression\",\n        type: {\n          name: \"Composite\",\n          className: \"Compression\"\n        }\n      },\n      partitionKey: {\n        serializedName: \"partitionKey\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Serialization: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Serialization\",\n    uberParent: \"Serialization\",\n    polymorphicDiscriminator: {\n      serializedName: \"type\",\n      clientName: \"type\"\n    },\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Diagnostics: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Diagnostics\",\n    modelProperties: {\n      conditions: {\n        serializedName: \"conditions\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DiagnosticCondition\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DiagnosticCondition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DiagnosticCondition\",\n    modelProperties: {\n      since: {\n        serializedName: \"since\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      code: {\n        serializedName: \"code\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Compression: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Compression\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SubResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SubResource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OutputDataSource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OutputDataSource\",\n    uberParent: \"OutputDataSource\",\n    polymorphicDiscriminator: {\n      serializedName: \"type\",\n      clientName: \"type\"\n    },\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FunctionProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FunctionProperties\",\n    uberParent: \"FunctionProperties\",\n    polymorphicDiscriminator: {\n      serializedName: \"type\",\n      clientName: \"type\"\n    },\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      etag: {\n        serializedName: \"etag\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const StorageAccount: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StorageAccount\",\n    modelProperties: {\n      accountName: {\n        serializedName: \"accountName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accountKey: {\n        serializedName: \"accountKey\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ClusterInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ClusterInfo\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Identity: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Identity\",\n    modelProperties: {\n      tenantId: {\n        serializedName: \"tenantId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      principalId: {\n        serializedName: \"principalId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Resource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Resource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const StreamingJobListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StreamingJobListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"StreamingJob\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const StartStreamingJobParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StartStreamingJobParameters\",\n    modelProperties: {\n      outputStartMode: {\n        serializedName: \"outputStartMode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      outputStartTime: {\n        serializedName: \"outputStartTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const ScaleStreamingJobParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ScaleStreamingJobParameters\",\n    modelProperties: {\n      streamingUnits: {\n        serializedName: \"streamingUnits\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const InputListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"InputListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Input\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceTestStatus: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceTestStatus\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorResponse\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorResponse\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OutputListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OutputListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Output\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FunctionListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FunctionListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"FunctionModel\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FunctionRetrieveDefaultDefinitionParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FunctionRetrieveDefaultDefinitionParameters\",\n    uberParent: \"FunctionRetrieveDefaultDefinitionParameters\",\n    polymorphicDiscriminator: {\n      serializedName: \"bindingType\",\n      clientName: \"bindingType\"\n    },\n    modelProperties: {\n      bindingType: {\n        serializedName: \"bindingType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SubscriptionQuotasListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SubscriptionQuotasListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SubscriptionQuota\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ClusterSku: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ClusterSku\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      capacity: {\n        constraints: {\n          InclusiveMaximum: 216,\n          InclusiveMinimum: 36\n        },\n        serializedName: \"capacity\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ClusterListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ClusterListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Cluster\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ClusterJobListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ClusterJobListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ClusterJob\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ClusterJob: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ClusterJob\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      streamingUnits: {\n        serializedName: \"streamingUnits\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      jobState: {\n        serializedName: \"jobState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateLinkServiceConnection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateLinkServiceConnection\",\n    modelProperties: {\n      privateLinkServiceId: {\n        serializedName: \"properties.privateLinkServiceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      groupIds: {\n        serializedName: \"properties.groupIds\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      requestMessage: {\n        serializedName: \"properties.requestMessage\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      privateLinkServiceConnectionState: {\n        serializedName: \"properties.privateLinkServiceConnectionState\",\n        type: {\n          name: \"Composite\",\n          className: \"PrivateLinkConnectionState\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateLinkConnectionState: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateLinkConnectionState\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      actionsRequired: {\n        serializedName: \"actionsRequired\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateEndpointListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateEndpointListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PrivateEndpoint\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const StreamInputDataSource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StreamInputDataSource\",\n    uberParent: \"StreamInputDataSource\",\n    polymorphicDiscriminator: {\n      serializedName: \"type\",\n      clientName: \"type\"\n    },\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReferenceInputDataSource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReferenceInputDataSource\",\n    uberParent: \"ReferenceInputDataSource\",\n    polymorphicDiscriminator: {\n      serializedName: \"type\",\n      clientName: \"type\"\n    },\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobDataSourceProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BlobDataSourceProperties\",\n    modelProperties: {\n      storageAccounts: {\n        serializedName: \"storageAccounts\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"StorageAccount\"\n            }\n          }\n        }\n      },\n      container: {\n        serializedName: \"container\",\n        type: {\n          name: \"String\"\n        }\n      },\n      pathPattern: {\n        serializedName: \"pathPattern\",\n        type: {\n          name: \"String\"\n        }\n      },\n      dateFormat: {\n        serializedName: \"dateFormat\",\n        type: {\n          name: \"String\"\n        }\n      },\n      timeFormat: {\n        serializedName: \"timeFormat\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceBusDataSourceProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServiceBusDataSourceProperties\",\n    modelProperties: {\n      serviceBusNamespace: {\n        serializedName: \"serviceBusNamespace\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sharedAccessPolicyName: {\n        serializedName: \"sharedAccessPolicyName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sharedAccessPolicyKey: {\n        serializedName: \"sharedAccessPolicyKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authenticationMode: {\n        serializedName: \"authenticationMode\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AzureSqlDatabaseDataSourceProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AzureSqlDatabaseDataSourceProperties\",\n    modelProperties: {\n      server: {\n        serializedName: \"server\",\n        type: {\n          name: \"String\"\n        }\n      },\n      database: {\n        serializedName: \"database\",\n        type: {\n          name: \"String\"\n        }\n      },\n      user: {\n        serializedName: \"user\",\n        type: {\n          name: \"String\"\n        }\n      },\n      password: {\n        serializedName: \"password\",\n        type: {\n          name: \"String\"\n        }\n      },\n      table: {\n        serializedName: \"table\",\n        type: {\n          name: \"String\"\n        }\n      },\n      maxBatchCount: {\n        serializedName: \"maxBatchCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      maxWriterCount: {\n        serializedName: \"maxWriterCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      authenticationMode: {\n        serializedName: \"authenticationMode\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AzureSynapseDataSourceProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AzureSynapseDataSourceProperties\",\n    modelProperties: {\n      server: {\n        serializedName: \"server\",\n        type: {\n          name: \"String\"\n        }\n      },\n      database: {\n        serializedName: \"database\",\n        type: {\n          name: \"String\"\n        }\n      },\n      table: {\n        serializedName: \"table\",\n        type: {\n          name: \"String\"\n        }\n      },\n      user: {\n        serializedName: \"user\",\n        type: {\n          name: \"String\"\n        }\n      },\n      password: {\n        serializedName: \"password\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OAuthBasedDataSourceProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OAuthBasedDataSourceProperties\",\n    modelProperties: {\n      refreshToken: {\n        serializedName: \"refreshToken\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tokenUserPrincipalName: {\n        serializedName: \"tokenUserPrincipalName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tokenUserDisplayName: {\n        serializedName: \"tokenUserDisplayName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FunctionInput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FunctionInput\",\n    modelProperties: {\n      dataType: {\n        serializedName: \"dataType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isConfigurationParameter: {\n        serializedName: \"isConfigurationParameter\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const FunctionOutput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FunctionOutput\",\n    modelProperties: {\n      dataType: {\n        serializedName: \"dataType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FunctionBinding: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FunctionBinding\",\n    uberParent: \"FunctionBinding\",\n    polymorphicDiscriminator: {\n      serializedName: \"type\",\n      clientName: \"type\"\n    },\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AzureMachineLearningWebServiceInputs: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AzureMachineLearningWebServiceInputs\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      columnNames: {\n        serializedName: \"columnNames\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"AzureMachineLearningWebServiceInputColumn\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const AzureMachineLearningWebServiceInputColumn: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AzureMachineLearningWebServiceInputColumn\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      dataType: {\n        serializedName: \"dataType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      mapTo: {\n        serializedName: \"mapTo\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const AzureMachineLearningWebServiceOutputColumn: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AzureMachineLearningWebServiceOutputColumn\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      dataType: {\n        serializedName: \"dataType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const StreamInputProperties: coreClient.CompositeMapper = {\n  serializedName: \"Stream\",\n  type: {\n    name: \"Composite\",\n    className: \"StreamInputProperties\",\n    uberParent: \"InputProperties\",\n    polymorphicDiscriminator: InputProperties.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...InputProperties.type.modelProperties,\n      datasource: {\n        serializedName: \"datasource\",\n        type: {\n          name: \"Composite\",\n          className: \"StreamInputDataSource\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReferenceInputProperties: coreClient.CompositeMapper = {\n  serializedName: \"Reference\",\n  type: {\n    name: \"Composite\",\n    className: \"ReferenceInputProperties\",\n    uberParent: \"InputProperties\",\n    polymorphicDiscriminator: InputProperties.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...InputProperties.type.modelProperties,\n      datasource: {\n        serializedName: \"datasource\",\n        type: {\n          name: \"Composite\",\n          className: \"ReferenceInputDataSource\"\n        }\n      }\n    }\n  }\n};\n\nexport const ParquetSerialization: coreClient.CompositeMapper = {\n  serializedName: \"Parquet\",\n  type: {\n    name: \"Composite\",\n    className: \"ParquetSerialization\",\n    uberParent: \"Serialization\",\n    polymorphicDiscriminator: Serialization.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...Serialization.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const CsvSerialization: coreClient.CompositeMapper = {\n  serializedName: \"Csv\",\n  type: {\n    name: \"Composite\",\n    className: \"CsvSerialization\",\n    uberParent: \"Serialization\",\n    polymorphicDiscriminator: Serialization.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...Serialization.type.modelProperties,\n      fieldDelimiter: {\n        serializedName: \"properties.fieldDelimiter\",\n        type: {\n          name: \"String\"\n        }\n      },\n      encoding: {\n        serializedName: \"properties.encoding\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const JsonSerialization: coreClient.CompositeMapper = {\n  serializedName: \"Json\",\n  type: {\n    name: \"Composite\",\n    className: \"JsonSerialization\",\n    uberParent: \"Serialization\",\n    polymorphicDiscriminator: Serialization.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...Serialization.type.modelProperties,\n      encoding: {\n        serializedName: \"properties.encoding\",\n        type: {\n          name: \"String\"\n        }\n      },\n      format: {\n        serializedName: \"properties.format\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AvroSerialization: coreClient.CompositeMapper = {\n  serializedName: \"Avro\",\n  type: {\n    name: \"Composite\",\n    className: \"AvroSerialization\",\n    uberParent: \"Serialization\",\n    polymorphicDiscriminator: Serialization.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...Serialization.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const Input: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Input\",\n    modelProperties: {\n      ...SubResource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"InputProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const Transformation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Transformation\",\n    modelProperties: {\n      ...SubResource.type.modelProperties,\n      streamingUnits: {\n        serializedName: \"properties.streamingUnits\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      validStreamingUnits: {\n        serializedName: \"properties.validStreamingUnits\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Number\"\n            }\n          }\n        }\n      },\n      query: {\n        serializedName: \"properties.query\",\n        type: {\n          name: \"String\"\n        }\n      },\n      etag: {\n        serializedName: \"properties.etag\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Output: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Output\",\n    modelProperties: {\n      ...SubResource.type.modelProperties,\n      datasource: {\n        serializedName: \"properties.datasource\",\n        type: {\n          name: \"Composite\",\n          className: \"OutputDataSource\"\n        }\n      },\n      timeWindow: {\n        serializedName: \"properties.timeWindow\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sizeWindow: {\n        serializedName: \"properties.sizeWindow\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      serialization: {\n        serializedName: \"properties.serialization\",\n        type: {\n          name: \"Composite\",\n          className: \"Serialization\"\n        }\n      },\n      diagnostics: {\n        serializedName: \"properties.diagnostics\",\n        type: {\n          name: \"Composite\",\n          className: \"Diagnostics\"\n        }\n      },\n      etag: {\n        serializedName: \"properties.etag\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FunctionModel: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FunctionModel\",\n    modelProperties: {\n      ...SubResource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"FunctionProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const SubscriptionQuota: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SubscriptionQuota\",\n    modelProperties: {\n      ...SubResource.type.modelProperties,\n      maxCount: {\n        serializedName: \"properties.maxCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      currentCount: {\n        serializedName: \"properties.currentCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobOutputDataSource: coreClient.CompositeMapper = {\n  serializedName: \"Microsoft.Storage/Blob\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobOutputDataSource\",\n    uberParent: \"OutputDataSource\",\n    polymorphicDiscriminator: OutputDataSource.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...OutputDataSource.type.modelProperties,\n      storageAccounts: {\n        serializedName: \"properties.storageAccounts\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"StorageAccount\"\n            }\n          }\n        }\n      },\n      container: {\n        serializedName: \"properties.container\",\n        type: {\n          name: \"String\"\n        }\n      },\n      pathPattern: {\n        serializedName: \"properties.pathPattern\",\n        type: {\n          name: \"String\"\n        }\n      },\n      dateFormat: {\n        serializedName: \"properties.dateFormat\",\n        type: {\n          name: \"String\"\n        }\n      },\n      timeFormat: {\n        serializedName: \"properties.timeFormat\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authenticationMode: {\n        serializedName: \"properties.authenticationMode\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AzureTableOutputDataSource: coreClient.CompositeMapper = {\n  serializedName: \"Microsoft.Storage/Table\",\n  type: {\n    name: \"Composite\",\n    className: \"AzureTableOutputDataSource\",\n    uberParent: \"OutputDataSource\",\n    polymorphicDiscriminator: OutputDataSource.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...OutputDataSource.type.modelProperties,\n      accountName: {\n        serializedName: \"properties.accountName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accountKey: {\n        serializedName: \"properties.accountKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      table: {\n        serializedName: \"properties.table\",\n        type: {\n          name: \"String\"\n        }\n      },\n      partitionKey: {\n        serializedName: \"properties.partitionKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      rowKey: {\n        serializedName: \"properties.rowKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      columnsToRemove: {\n        serializedName: \"properties.columnsToRemove\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      batchSize: {\n        serializedName: \"properties.batchSize\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const EventHubOutputDataSource: coreClient.CompositeMapper = {\n  serializedName: \"Microsoft.ServiceBus/EventHub\",\n  type: {\n    name: \"Composite\",\n    className: \"EventHubOutputDataSource\",\n    uberParent: \"OutputDataSource\",\n    polymorphicDiscriminator: OutputDataSource.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...OutputDataSource.type.modelProperties,\n      serviceBusNamespace: {\n        serializedName: \"properties.serviceBusNamespace\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sharedAccessPolicyName: {\n        serializedName: \"properties.sharedAccessPolicyName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sharedAccessPolicyKey: {\n        serializedName: \"properties.sharedAccessPolicyKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authenticationMode: {\n        serializedName: \"properties.authenticationMode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      eventHubName: {\n        serializedName: \"properties.eventHubName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      partitionKey: {\n        serializedName: \"properties.partitionKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      propertyColumns: {\n        serializedName: \"properties.propertyColumns\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const EventHubV2OutputDataSource: coreClient.CompositeMapper = {\n  serializedName: \"Microsoft.EventHub/EventHub\",\n  type: {\n    name: \"Composite\",\n    className: \"EventHubV2OutputDataSource\",\n    uberParent: \"OutputDataSource\",\n    polymorphicDiscriminator: OutputDataSource.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...OutputDataSource.type.modelProperties,\n      serviceBusNamespace: {\n        serializedName: \"properties.serviceBusNamespace\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sharedAccessPolicyName: {\n        serializedName: \"properties.sharedAccessPolicyName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sharedAccessPolicyKey: {\n        serializedName: \"properties.sharedAccessPolicyKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authenticationMode: {\n        serializedName: \"properties.authenticationMode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      eventHubName: {\n        serializedName: \"properties.eventHubName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      partitionKey: {\n        serializedName: \"properties.partitionKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      propertyColumns: {\n        serializedName: \"properties.propertyColumns\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const AzureSqlDatabaseOutputDataSource: coreClient.CompositeMapper = {\n  serializedName: \"Microsoft.Sql/Server/Database\",\n  type: {\n    name: \"Composite\",\n    className: \"AzureSqlDatabaseOutputDataSource\",\n    uberParent: \"OutputDataSource\",\n    polymorphicDiscriminator: OutputDataSource.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...OutputDataSource.type.modelProperties,\n      server: {\n        serializedName: \"properties.server\",\n        type: {\n          name: \"String\"\n        }\n      },\n      database: {\n        serializedName: \"properties.database\",\n        type: {\n          name: \"String\"\n        }\n      },\n      user: {\n        serializedName: \"properties.user\",\n        type: {\n          name: \"String\"\n        }\n      },\n      password: {\n        serializedName: \"properties.password\",\n        type: {\n          name: \"String\"\n        }\n      },\n      table: {\n        serializedName: \"properties.table\",\n        type: {\n          name: \"String\"\n        }\n      },\n      maxBatchCount: {\n        serializedName: \"properties.maxBatchCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      maxWriterCount: {\n        serializedName: \"properties.maxWriterCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      authenticationMode: {\n        serializedName: \"properties.authenticationMode\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AzureSynapseOutputDataSource: coreClient.CompositeMapper = {\n  serializedName: \"Microsoft.Sql/Server/DataWarehouse\",\n  type: {\n    name: \"Composite\",\n    className: \"AzureSynapseOutputDataSource\",\n    uberParent: \"OutputDataSource\",\n    polymorphicDiscriminator: OutputDataSource.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...OutputDataSource.type.modelProperties,\n      server: {\n        serializedName: \"properties.server\",\n        type: {\n          name: \"String\"\n        }\n      },\n      database: {\n        serializedName: \"properties.database\",\n        type: {\n          name: \"String\"\n        }\n      },\n      table: {\n        serializedName: \"properties.table\",\n        type: {\n          name: \"String\"\n        }\n      },\n      user: {\n        serializedName: \"properties.user\",\n        type: {\n          name: \"String\"\n        }\n      },\n      password: {\n        serializedName: \"properties.password\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DocumentDbOutputDataSource: coreClient.CompositeMapper = {\n  serializedName: \"Microsoft.Storage/DocumentDB\",\n  type: {\n    name: \"Composite\",\n    className: \"DocumentDbOutputDataSource\",\n    uberParent: \"OutputDataSource\",\n    polymorphicDiscriminator: OutputDataSource.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...OutputDataSource.type.modelProperties,\n      accountId: {\n        serializedName: \"properties.accountId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accountKey: {\n        serializedName: \"properties.accountKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      database: {\n        serializedName: \"properties.database\",\n        type: {\n          name: \"String\"\n        }\n      },\n      collectionNamePattern: {\n        serializedName: \"properties.collectionNamePattern\",\n        type: {\n          name: \"String\"\n        }\n      },\n      partitionKey: {\n        serializedName: \"properties.partitionKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      documentId: {\n        serializedName: \"properties.documentId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceBusQueueOutputDataSource: coreClient.CompositeMapper = {\n  serializedName: \"Microsoft.ServiceBus/Queue\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceBusQueueOutputDataSource\",\n    uberParent: \"OutputDataSource\",\n    polymorphicDiscriminator: OutputDataSource.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...OutputDataSource.type.modelProperties,\n      serviceBusNamespace: {\n        serializedName: \"properties.serviceBusNamespace\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sharedAccessPolicyName: {\n        serializedName: \"properties.sharedAccessPolicyName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sharedAccessPolicyKey: {\n        serializedName: \"properties.sharedAccessPolicyKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authenticationMode: {\n        serializedName: \"properties.authenticationMode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      queueName: {\n        serializedName: \"properties.queueName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      propertyColumns: {\n        serializedName: \"properties.propertyColumns\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      systemPropertyColumns: {\n        serializedName: \"properties.systemPropertyColumns\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceBusTopicOutputDataSource: coreClient.CompositeMapper = {\n  serializedName: \"Microsoft.ServiceBus/Topic\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceBusTopicOutputDataSource\",\n    uberParent: \"OutputDataSource\",\n    polymorphicDiscriminator: OutputDataSource.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...OutputDataSource.type.modelProperties,\n      serviceBusNamespace: {\n        serializedName: \"properties.serviceBusNamespace\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sharedAccessPolicyName: {\n        serializedName: \"properties.sharedAccessPolicyName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sharedAccessPolicyKey: {\n        serializedName: \"properties.sharedAccessPolicyKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authenticationMode: {\n        serializedName: \"properties.authenticationMode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      topicName: {\n        serializedName: \"properties.topicName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      propertyColumns: {\n        serializedName: \"properties.propertyColumns\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      systemPropertyColumns: {\n        serializedName: \"properties.systemPropertyColumns\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const PowerBIOutputDataSource: coreClient.CompositeMapper = {\n  serializedName: \"PowerBI\",\n  type: {\n    name: \"Composite\",\n    className: \"PowerBIOutputDataSource\",\n    uberParent: \"OutputDataSource\",\n    polymorphicDiscriminator: OutputDataSource.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...OutputDataSource.type.modelProperties,\n      refreshToken: {\n        serializedName: \"properties.refreshToken\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tokenUserPrincipalName: {\n        serializedName: \"properties.tokenUserPrincipalName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tokenUserDisplayName: {\n        serializedName: \"properties.tokenUserDisplayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      dataset: {\n        serializedName: \"properties.dataset\",\n        type: {\n          name: \"String\"\n        }\n      },\n      table: {\n        serializedName: \"properties.table\",\n        type: {\n          name: \"String\"\n        }\n      },\n      groupId: {\n        serializedName: \"properties.groupId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      groupName: {\n        serializedName: \"properties.groupName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authenticationMode: {\n        serializedName: \"properties.authenticationMode\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AzureDataLakeStoreOutputDataSource: coreClient.CompositeMapper = {\n  serializedName: \"Microsoft.DataLake/Accounts\",\n  type: {\n    name: \"Composite\",\n    className: \"AzureDataLakeStoreOutputDataSource\",\n    uberParent: \"OutputDataSource\",\n    polymorphicDiscriminator: OutputDataSource.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...OutputDataSource.type.modelProperties,\n      refreshToken: {\n        serializedName: \"properties.refreshToken\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tokenUserPrincipalName: {\n        serializedName: \"properties.tokenUserPrincipalName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tokenUserDisplayName: {\n        serializedName: \"properties.tokenUserDisplayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accountName: {\n        serializedName: \"properties.accountName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantId: {\n        serializedName: \"properties.tenantId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      filePathPrefix: {\n        serializedName: \"properties.filePathPrefix\",\n        type: {\n          name: \"String\"\n        }\n      },\n      dateFormat: {\n        serializedName: \"properties.dateFormat\",\n        type: {\n          name: \"String\"\n        }\n      },\n      timeFormat: {\n        serializedName: \"properties.timeFormat\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authenticationMode: {\n        serializedName: \"properties.authenticationMode\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ScalarFunctionProperties: coreClient.CompositeMapper = {\n  serializedName: \"Scalar\",\n  type: {\n    name: \"Composite\",\n    className: \"ScalarFunctionProperties\",\n    uberParent: \"FunctionProperties\",\n    polymorphicDiscriminator: FunctionProperties.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...FunctionProperties.type.modelProperties,\n      inputs: {\n        serializedName: \"properties.inputs\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"FunctionInput\"\n            }\n          }\n        }\n      },\n      output: {\n        serializedName: \"properties.output\",\n        type: {\n          name: \"Composite\",\n          className: \"FunctionOutput\"\n        }\n      },\n      binding: {\n        serializedName: \"properties.binding\",\n        type: {\n          name: \"Composite\",\n          className: \"FunctionBinding\"\n        }\n      }\n    }\n  }\n};\n\nexport const JobStorageAccount: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"JobStorageAccount\",\n    modelProperties: {\n      ...StorageAccount.type.modelProperties,\n      authenticationMode: {\n        serializedName: \"authenticationMode\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TrackedResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TrackedResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ProxyResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProxyResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties\n    }\n  }\n};\n\nexport const AzureMachineLearningWebServiceFunctionRetrieveDefaultDefinitionParameters: coreClient.CompositeMapper = {\n  serializedName: \"Microsoft.MachineLearning/WebService\",\n  type: {\n    name: \"Composite\",\n    className:\n      \"AzureMachineLearningWebServiceFunctionRetrieveDefaultDefinitionParameters\",\n    uberParent: \"FunctionRetrieveDefaultDefinitionParameters\",\n    polymorphicDiscriminator:\n      FunctionRetrieveDefaultDefinitionParameters.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...FunctionRetrieveDefaultDefinitionParameters.type.modelProperties,\n      executeEndpoint: {\n        serializedName: \"bindingRetrievalProperties.executeEndpoint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      udfType: {\n        defaultValue: \"Scalar\",\n        isConstant: true,\n        serializedName: \"bindingRetrievalProperties.udfType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const JavaScriptFunctionRetrieveDefaultDefinitionParameters: coreClient.CompositeMapper = {\n  serializedName: \"Microsoft.StreamAnalytics/JavascriptUdf\",\n  type: {\n    name: \"Composite\",\n    className: \"JavaScriptFunctionRetrieveDefaultDefinitionParameters\",\n    uberParent: \"FunctionRetrieveDefaultDefinitionParameters\",\n    polymorphicDiscriminator:\n      FunctionRetrieveDefaultDefinitionParameters.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...FunctionRetrieveDefaultDefinitionParameters.type.modelProperties,\n      script: {\n        serializedName: \"bindingRetrievalProperties.script\",\n        type: {\n          name: \"String\"\n        }\n      },\n      udfType: {\n        defaultValue: \"Scalar\",\n        isConstant: true,\n        serializedName: \"bindingRetrievalProperties.udfType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobStreamInputDataSource: coreClient.CompositeMapper = {\n  serializedName: \"Microsoft.Storage/Blob\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobStreamInputDataSource\",\n    uberParent: \"StreamInputDataSource\",\n    polymorphicDiscriminator:\n      StreamInputDataSource.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...StreamInputDataSource.type.modelProperties,\n      storageAccounts: {\n        serializedName: \"properties.storageAccounts\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"StorageAccount\"\n            }\n          }\n        }\n      },\n      container: {\n        serializedName: \"properties.container\",\n        type: {\n          name: \"String\"\n        }\n      },\n      pathPattern: {\n        serializedName: \"properties.pathPattern\",\n        type: {\n          name: \"String\"\n        }\n      },\n      dateFormat: {\n        serializedName: \"properties.dateFormat\",\n        type: {\n          name: \"String\"\n        }\n      },\n      timeFormat: {\n        serializedName: \"properties.timeFormat\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sourcePartitionCount: {\n        serializedName: \"properties.sourcePartitionCount\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const EventHubStreamInputDataSource: coreClient.CompositeMapper = {\n  serializedName: \"Microsoft.ServiceBus/EventHub\",\n  type: {\n    name: \"Composite\",\n    className: \"EventHubStreamInputDataSource\",\n    uberParent: \"StreamInputDataSource\",\n    polymorphicDiscriminator:\n      StreamInputDataSource.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...StreamInputDataSource.type.modelProperties,\n      serviceBusNamespace: {\n        serializedName: \"properties.serviceBusNamespace\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sharedAccessPolicyName: {\n        serializedName: \"properties.sharedAccessPolicyName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sharedAccessPolicyKey: {\n        serializedName: \"properties.sharedAccessPolicyKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authenticationMode: {\n        serializedName: \"properties.authenticationMode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      eventHubName: {\n        serializedName: \"properties.eventHubName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      consumerGroupName: {\n        serializedName: \"properties.consumerGroupName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EventHubV2StreamInputDataSource: coreClient.CompositeMapper = {\n  serializedName: \"Microsoft.EventHub/EventHub\",\n  type: {\n    name: \"Composite\",\n    className: \"EventHubV2StreamInputDataSource\",\n    uberParent: \"StreamInputDataSource\",\n    polymorphicDiscriminator:\n      StreamInputDataSource.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...StreamInputDataSource.type.modelProperties,\n      serviceBusNamespace: {\n        serializedName: \"properties.serviceBusNamespace\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sharedAccessPolicyName: {\n        serializedName: \"properties.sharedAccessPolicyName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sharedAccessPolicyKey: {\n        serializedName: \"properties.sharedAccessPolicyKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authenticationMode: {\n        serializedName: \"properties.authenticationMode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      eventHubName: {\n        serializedName: \"properties.eventHubName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      consumerGroupName: {\n        serializedName: \"properties.consumerGroupName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const IoTHubStreamInputDataSource: coreClient.CompositeMapper = {\n  serializedName: \"Microsoft.Devices/IotHubs\",\n  type: {\n    name: \"Composite\",\n    className: \"IoTHubStreamInputDataSource\",\n    uberParent: \"StreamInputDataSource\",\n    polymorphicDiscriminator:\n      StreamInputDataSource.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...StreamInputDataSource.type.modelProperties,\n      iotHubNamespace: {\n        serializedName: \"properties.iotHubNamespace\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sharedAccessPolicyName: {\n        serializedName: \"properties.sharedAccessPolicyName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sharedAccessPolicyKey: {\n        serializedName: \"properties.sharedAccessPolicyKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      consumerGroupName: {\n        serializedName: \"properties.consumerGroupName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      endpoint: {\n        serializedName: \"properties.endpoint\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobReferenceInputDataSource: coreClient.CompositeMapper = {\n  serializedName: \"Microsoft.Storage/Blob\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobReferenceInputDataSource\",\n    uberParent: \"ReferenceInputDataSource\",\n    polymorphicDiscriminator:\n      ReferenceInputDataSource.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...ReferenceInputDataSource.type.modelProperties,\n      storageAccounts: {\n        serializedName: \"properties.storageAccounts\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"StorageAccount\"\n            }\n          }\n        }\n      },\n      container: {\n        serializedName: \"properties.container\",\n        type: {\n          name: \"String\"\n        }\n      },\n      pathPattern: {\n        serializedName: \"properties.pathPattern\",\n        type: {\n          name: \"String\"\n        }\n      },\n      dateFormat: {\n        serializedName: \"properties.dateFormat\",\n        type: {\n          name: \"String\"\n        }\n      },\n      timeFormat: {\n        serializedName: \"properties.timeFormat\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AzureSqlReferenceInputDataSource: coreClient.CompositeMapper = {\n  serializedName: \"Microsoft.Sql/Server/Database\",\n  type: {\n    name: \"Composite\",\n    className: \"AzureSqlReferenceInputDataSource\",\n    uberParent: \"ReferenceInputDataSource\",\n    polymorphicDiscriminator:\n      ReferenceInputDataSource.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...ReferenceInputDataSource.type.modelProperties,\n      server: {\n        serializedName: \"properties.server\",\n        type: {\n          name: \"String\"\n        }\n      },\n      database: {\n        serializedName: \"properties.database\",\n        type: {\n          name: \"String\"\n        }\n      },\n      user: {\n        serializedName: \"properties.user\",\n        type: {\n          name: \"String\"\n        }\n      },\n      password: {\n        serializedName: \"properties.password\",\n        type: {\n          name: \"String\"\n        }\n      },\n      table: {\n        serializedName: \"properties.table\",\n        type: {\n          name: \"String\"\n        }\n      },\n      refreshType: {\n        serializedName: \"properties.refreshType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      refreshRate: {\n        serializedName: \"properties.refreshRate\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fullSnapshotQuery: {\n        serializedName: \"properties.fullSnapshotQuery\",\n        type: {\n          name: \"String\"\n        }\n      },\n      deltaSnapshotQuery: {\n        serializedName: \"properties.deltaSnapshotQuery\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobStreamInputDataSourceProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BlobStreamInputDataSourceProperties\",\n    modelProperties: {\n      ...BlobDataSourceProperties.type.modelProperties,\n      sourcePartitionCount: {\n        serializedName: \"sourcePartitionCount\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobReferenceInputDataSourceProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BlobReferenceInputDataSourceProperties\",\n    modelProperties: {\n      ...BlobDataSourceProperties.type.modelProperties\n    }\n  }\n};\n\nexport const BlobOutputDataSourceProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BlobOutputDataSourceProperties\",\n    modelProperties: {\n      ...BlobDataSourceProperties.type.modelProperties,\n      authenticationMode: {\n        serializedName: \"authenticationMode\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EventHubDataSourceProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EventHubDataSourceProperties\",\n    modelProperties: {\n      ...ServiceBusDataSourceProperties.type.modelProperties,\n      eventHubName: {\n        serializedName: \"eventHubName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceBusQueueOutputDataSourceProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServiceBusQueueOutputDataSourceProperties\",\n    modelProperties: {\n      ...ServiceBusDataSourceProperties.type.modelProperties,\n      queueName: {\n        serializedName: \"queueName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      propertyColumns: {\n        serializedName: \"propertyColumns\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      systemPropertyColumns: {\n        serializedName: \"systemPropertyColumns\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceBusTopicOutputDataSourceProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServiceBusTopicOutputDataSourceProperties\",\n    modelProperties: {\n      ...ServiceBusDataSourceProperties.type.modelProperties,\n      topicName: {\n        serializedName: \"topicName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      propertyColumns: {\n        serializedName: \"propertyColumns\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      systemPropertyColumns: {\n        serializedName: \"systemPropertyColumns\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const AzureSqlDatabaseOutputDataSourceProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AzureSqlDatabaseOutputDataSourceProperties\",\n    modelProperties: {\n      ...AzureSqlDatabaseDataSourceProperties.type.modelProperties\n    }\n  }\n};\n\nexport const AzureSynapseOutputDataSourceProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AzureSynapseOutputDataSourceProperties\",\n    modelProperties: {\n      ...AzureSynapseDataSourceProperties.type.modelProperties\n    }\n  }\n};\n\nexport const PowerBIOutputDataSourceProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PowerBIOutputDataSourceProperties\",\n    modelProperties: {\n      ...OAuthBasedDataSourceProperties.type.modelProperties,\n      dataset: {\n        serializedName: \"dataset\",\n        type: {\n          name: \"String\"\n        }\n      },\n      table: {\n        serializedName: \"table\",\n        type: {\n          name: \"String\"\n        }\n      },\n      groupId: {\n        serializedName: \"groupId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      groupName: {\n        serializedName: \"groupName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authenticationMode: {\n        serializedName: \"authenticationMode\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AzureDataLakeStoreOutputDataSourceProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AzureDataLakeStoreOutputDataSourceProperties\",\n    modelProperties: {\n      ...OAuthBasedDataSourceProperties.type.modelProperties,\n      accountName: {\n        serializedName: \"accountName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantId: {\n        serializedName: \"tenantId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      filePathPrefix: {\n        serializedName: \"filePathPrefix\",\n        type: {\n          name: \"String\"\n        }\n      },\n      dateFormat: {\n        serializedName: \"dateFormat\",\n        type: {\n          name: \"String\"\n        }\n      },\n      timeFormat: {\n        serializedName: \"timeFormat\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authenticationMode: {\n        serializedName: \"authenticationMode\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AzureMachineLearningWebServiceFunctionBinding: coreClient.CompositeMapper = {\n  serializedName: \"Microsoft.MachineLearning/WebService\",\n  type: {\n    name: \"Composite\",\n    className: \"AzureMachineLearningWebServiceFunctionBinding\",\n    uberParent: \"FunctionBinding\",\n    polymorphicDiscriminator: FunctionBinding.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...FunctionBinding.type.modelProperties,\n      endpoint: {\n        serializedName: \"properties.endpoint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      apiKey: {\n        serializedName: \"properties.apiKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      inputs: {\n        serializedName: \"properties.inputs\",\n        type: {\n          name: \"Composite\",\n          className: \"AzureMachineLearningWebServiceInputs\"\n        }\n      },\n      outputs: {\n        serializedName: \"properties.outputs\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"AzureMachineLearningWebServiceOutputColumn\"\n            }\n          }\n        }\n      },\n      batchSize: {\n        serializedName: \"properties.batchSize\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const JavaScriptFunctionBinding: coreClient.CompositeMapper = {\n  serializedName: \"Microsoft.StreamAnalytics/JavascriptUdf\",\n  type: {\n    name: \"Composite\",\n    className: \"JavaScriptFunctionBinding\",\n    uberParent: \"FunctionBinding\",\n    polymorphicDiscriminator: FunctionBinding.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...FunctionBinding.type.modelProperties,\n      script: {\n        serializedName: \"properties.script\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const StreamingJob: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StreamingJob\",\n    modelProperties: {\n      ...TrackedResource.type.modelProperties,\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"Identity\"\n        }\n      },\n      sku: {\n        serializedName: \"properties.sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      jobId: {\n        serializedName: \"properties.jobId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      jobState: {\n        serializedName: \"properties.jobState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      jobType: {\n        serializedName: \"properties.jobType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      outputStartMode: {\n        serializedName: \"properties.outputStartMode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      outputStartTime: {\n        serializedName: \"properties.outputStartTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastOutputEventTime: {\n        serializedName: \"properties.lastOutputEventTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      eventsOutOfOrderPolicy: {\n        serializedName: \"properties.eventsOutOfOrderPolicy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      outputErrorPolicy: {\n        serializedName: \"properties.outputErrorPolicy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      eventsOutOfOrderMaxDelayInSeconds: {\n        serializedName: \"properties.eventsOutOfOrderMaxDelayInSeconds\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      eventsLateArrivalMaxDelayInSeconds: {\n        serializedName: \"properties.eventsLateArrivalMaxDelayInSeconds\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      dataLocale: {\n        serializedName: \"properties.dataLocale\",\n        type: {\n          name: \"String\"\n        }\n      },\n      compatibilityLevel: {\n        serializedName: \"properties.compatibilityLevel\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdDate: {\n        serializedName: \"properties.createdDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      inputs: {\n        serializedName: \"properties.inputs\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Input\"\n            }\n          }\n        }\n      },\n      transformation: {\n        serializedName: \"properties.transformation\",\n        type: {\n          name: \"Composite\",\n          className: \"Transformation\"\n        }\n      },\n      outputs: {\n        serializedName: \"properties.outputs\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Output\"\n            }\n          }\n        }\n      },\n      functions: {\n        serializedName: \"properties.functions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"FunctionModel\"\n            }\n          }\n        }\n      },\n      etag: {\n        serializedName: \"properties.etag\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      jobStorageAccount: {\n        serializedName: \"properties.jobStorageAccount\",\n        type: {\n          name: \"Composite\",\n          className: \"JobStorageAccount\"\n        }\n      },\n      contentStoragePolicy: {\n        serializedName: \"properties.contentStoragePolicy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      cluster: {\n        serializedName: \"properties.cluster\",\n        type: {\n          name: \"Composite\",\n          className: \"ClusterInfo\"\n        }\n      }\n    }\n  }\n};\n\nexport const Cluster: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Cluster\",\n    modelProperties: {\n      ...TrackedResource.type.modelProperties,\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"ClusterSku\"\n        }\n      },\n      etag: {\n        serializedName: \"etag\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      createdDate: {\n        serializedName: \"properties.createdDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      clusterId: {\n        serializedName: \"properties.clusterId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      capacityAllocated: {\n        serializedName: \"properties.capacityAllocated\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      capacityAssigned: {\n        serializedName: \"properties.capacityAssigned\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateEndpoint: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateEndpoint\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      etag: {\n        serializedName: \"etag\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      createdDate: {\n        serializedName: \"properties.createdDate\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      manualPrivateLinkServiceConnections: {\n        serializedName: \"properties.manualPrivateLinkServiceConnections\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PrivateLinkServiceConnection\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const EventHubStreamInputDataSourceProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EventHubStreamInputDataSourceProperties\",\n    modelProperties: {\n      ...EventHubDataSourceProperties.type.modelProperties,\n      consumerGroupName: {\n        serializedName: \"consumerGroupName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EventHubOutputDataSourceProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EventHubOutputDataSourceProperties\",\n    modelProperties: {\n      ...EventHubDataSourceProperties.type.modelProperties,\n      partitionKey: {\n        serializedName: \"partitionKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      propertyColumns: {\n        serializedName: \"propertyColumns\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const StreamingJobsCreateOrReplaceHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StreamingJobsCreateOrReplaceHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const StreamingJobsUpdateHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StreamingJobsUpdateHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const StreamingJobsGetHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StreamingJobsGetHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const InputsCreateOrReplaceHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"InputsCreateOrReplaceHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const InputsUpdateHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"InputsUpdateHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const InputsGetHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"InputsGetHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OutputsCreateOrReplaceHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OutputsCreateOrReplaceHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OutputsUpdateHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OutputsUpdateHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OutputsGetHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OutputsGetHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TransformationsCreateOrReplaceHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TransformationsCreateOrReplaceHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TransformationsUpdateHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TransformationsUpdateHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TransformationsGetHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TransformationsGetHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FunctionsCreateOrReplaceHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FunctionsCreateOrReplaceHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FunctionsUpdateHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FunctionsUpdateHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FunctionsGetHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FunctionsGetHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport let discriminators = {\n  InputProperties: InputProperties,\n  Serialization: Serialization,\n  OutputDataSource: OutputDataSource,\n  FunctionProperties: FunctionProperties,\n  FunctionRetrieveDefaultDefinitionParameters: FunctionRetrieveDefaultDefinitionParameters,\n  StreamInputDataSource: StreamInputDataSource,\n  ReferenceInputDataSource: ReferenceInputDataSource,\n  FunctionBinding: FunctionBinding,\n  \"InputProperties.Stream\": StreamInputProperties,\n  \"InputProperties.Reference\": ReferenceInputProperties,\n  \"Serialization.Parquet\": ParquetSerialization,\n  \"Serialization.Csv\": CsvSerialization,\n  \"Serialization.Json\": JsonSerialization,\n  \"Serialization.Avro\": AvroSerialization,\n  \"OutputDataSource.Microsoft.Storage/Blob\": BlobOutputDataSource,\n  \"OutputDataSource.Microsoft.Storage/Table\": AzureTableOutputDataSource,\n  \"OutputDataSource.Microsoft.ServiceBus/EventHub\": EventHubOutputDataSource,\n  \"OutputDataSource.Microsoft.EventHub/EventHub\": EventHubV2OutputDataSource,\n  \"OutputDataSource.Microsoft.Sql/Server/Database\": AzureSqlDatabaseOutputDataSource,\n  \"OutputDataSource.Microsoft.Sql/Server/DataWarehouse\": AzureSynapseOutputDataSource,\n  \"OutputDataSource.Microsoft.Storage/DocumentDB\": DocumentDbOutputDataSource,\n  \"OutputDataSource.Microsoft.ServiceBus/Queue\": ServiceBusQueueOutputDataSource,\n  \"OutputDataSource.Microsoft.ServiceBus/Topic\": ServiceBusTopicOutputDataSource,\n  \"OutputDataSource.PowerBI\": PowerBIOutputDataSource,\n  \"OutputDataSource.Microsoft.DataLake/Accounts\": AzureDataLakeStoreOutputDataSource,\n  \"FunctionProperties.Scalar\": ScalarFunctionProperties,\n  \"FunctionRetrieveDefaultDefinitionParameters.Microsoft.MachineLearning/WebService\": AzureMachineLearningWebServiceFunctionRetrieveDefaultDefinitionParameters,\n  \"FunctionRetrieveDefaultDefinitionParameters.Microsoft.StreamAnalytics/JavascriptUdf\": JavaScriptFunctionRetrieveDefaultDefinitionParameters,\n  \"StreamInputDataSource.Microsoft.Storage/Blob\": BlobStreamInputDataSource,\n  \"StreamInputDataSource.Microsoft.ServiceBus/EventHub\": EventHubStreamInputDataSource,\n  \"StreamInputDataSource.Microsoft.EventHub/EventHub\": EventHubV2StreamInputDataSource,\n  \"StreamInputDataSource.Microsoft.Devices/IotHubs\": IoTHubStreamInputDataSource,\n  \"ReferenceInputDataSource.Microsoft.Storage/Blob\": BlobReferenceInputDataSource,\n  \"ReferenceInputDataSource.Microsoft.Sql/Server/Database\": AzureSqlReferenceInputDataSource,\n  \"FunctionBinding.Microsoft.MachineLearning/WebService\": AzureMachineLearningWebServiceFunctionBinding,\n  \"FunctionBinding.Microsoft.StreamAnalytics/JavascriptUdf\": JavaScriptFunctionBinding\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter\n} from \"@azure/core-client\";\nimport {\n  StreamingJob as StreamingJobMapper,\n  StartStreamingJobParameters as StartStreamingJobParametersMapper,\n  ScaleStreamingJobParameters as ScaleStreamingJobParametersMapper,\n  Input as InputMapper,\n  Output as OutputMapper,\n  Transformation as TransformationMapper,\n  FunctionModel as FunctionModelMapper,\n  FunctionRetrieveDefaultDefinitionParameters as FunctionRetrieveDefaultDefinitionParametersMapper,\n  Cluster as ClusterMapper,\n  PrivateEndpoint as PrivateEndpointMapper\n} from \"../models/mappers\";\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2020-03-01\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const nextLink: OperationURLParameter = {\n  parameterPath: \"nextLink\",\n  mapper: {\n    serializedName: \"nextLink\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const streamingJob: OperationParameter = {\n  parameterPath: \"streamingJob\",\n  mapper: StreamingJobMapper\n};\n\nexport const ifMatch: OperationParameter = {\n  parameterPath: [\"options\", \"ifMatch\"],\n  mapper: {\n    serializedName: \"If-Match\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const ifNoneMatch: OperationParameter = {\n  parameterPath: [\"options\", \"ifNoneMatch\"],\n  mapper: {\n    serializedName: \"If-None-Match\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const subscriptionId: OperationURLParameter = {\n  parameterPath: \"subscriptionId\",\n  mapper: {\n    constraints: {\n      MinLength: 1\n    },\n    serializedName: \"subscriptionId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const resourceGroupName: OperationURLParameter = {\n  parameterPath: \"resourceGroupName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[-\\\\w\\\\._\\\\(\\\\)]+$\"),\n      MaxLength: 90,\n      MinLength: 1\n    },\n    serializedName: \"resourceGroupName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const jobName: OperationURLParameter = {\n  parameterPath: \"jobName\",\n  mapper: {\n    serializedName: \"jobName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const expand: OperationQueryParameter = {\n  parameterPath: [\"options\", \"expand\"],\n  mapper: {\n    serializedName: \"$expand\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const startJobParameters: OperationParameter = {\n  parameterPath: [\"options\", \"startJobParameters\"],\n  mapper: StartStreamingJobParametersMapper\n};\n\nexport const scaleJobParameters: OperationParameter = {\n  parameterPath: [\"options\", \"scaleJobParameters\"],\n  mapper: ScaleStreamingJobParametersMapper\n};\n\nexport const input: OperationParameter = {\n  parameterPath: \"input\",\n  mapper: InputMapper\n};\n\nexport const inputName: OperationURLParameter = {\n  parameterPath: \"inputName\",\n  mapper: {\n    serializedName: \"inputName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const select: OperationQueryParameter = {\n  parameterPath: [\"options\", \"select\"],\n  mapper: {\n    serializedName: \"$select\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const input1: OperationParameter = {\n  parameterPath: [\"options\", \"input\"],\n  mapper: InputMapper\n};\n\nexport const output: OperationParameter = {\n  parameterPath: \"output\",\n  mapper: OutputMapper\n};\n\nexport const outputName: OperationURLParameter = {\n  parameterPath: \"outputName\",\n  mapper: {\n    serializedName: \"outputName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const output1: OperationParameter = {\n  parameterPath: [\"options\", \"output\"],\n  mapper: OutputMapper\n};\n\nexport const transformation: OperationParameter = {\n  parameterPath: \"transformation\",\n  mapper: TransformationMapper\n};\n\nexport const transformationName: OperationURLParameter = {\n  parameterPath: \"transformationName\",\n  mapper: {\n    serializedName: \"transformationName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const functionParam: OperationParameter = {\n  parameterPath: \"functionParam\",\n  mapper: FunctionModelMapper\n};\n\nexport const functionName: OperationURLParameter = {\n  parameterPath: \"functionName\",\n  mapper: {\n    serializedName: \"functionName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const functionParam1: OperationParameter = {\n  parameterPath: [\"options\", \"function\"],\n  mapper: FunctionModelMapper\n};\n\nexport const functionRetrieveDefaultDefinitionParameters: OperationParameter = {\n  parameterPath: [\"options\", \"functionRetrieveDefaultDefinitionParameters\"],\n  mapper: FunctionRetrieveDefaultDefinitionParametersMapper\n};\n\nexport const location: OperationURLParameter = {\n  parameterPath: \"location\",\n  mapper: {\n    serializedName: \"location\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const cluster: OperationParameter = {\n  parameterPath: \"cluster\",\n  mapper: ClusterMapper\n};\n\nexport const clusterName: OperationURLParameter = {\n  parameterPath: \"clusterName\",\n  mapper: {\n    serializedName: \"clusterName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const privateEndpoint: OperationParameter = {\n  parameterPath: \"privateEndpoint\",\n  mapper: PrivateEndpointMapper\n};\n\nexport const privateEndpointName: OperationURLParameter = {\n  parameterPath: \"privateEndpointName\",\n  mapper: {\n    serializedName: \"privateEndpointName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Operations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StreamAnalyticsManagementClient } from \"../streamAnalyticsManagementClient\";\nimport {\n  Operation,\n  OperationsListNextOptionalParams,\n  OperationsListOptionalParams,\n  OperationsListResponse,\n  OperationsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Operations operations. */\nexport class OperationsImpl implements Operations {\n  private readonly client: StreamAnalyticsManagementClient;\n\n  /**\n   * Initialize a new instance of the class Operations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StreamAnalyticsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all of the available Stream Analytics related operations.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: OperationsListOptionalParams\n  ): PagedAsyncIterableIterator<Operation> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: OperationsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Operation[]> {\n    let result: OperationsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: OperationsListOptionalParams\n  ): AsyncIterableIterator<Operation> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all of the available Stream Analytics related operations.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: OperationsListOptionalParams\n  ): Promise<OperationsListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: OperationsListNextOptionalParams\n  ): Promise<OperationsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.StreamAnalytics/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { LongRunningOperation, LroResponse } from \"@azure/core-lro\";\n\nexport class LroImpl<T> implements LongRunningOperation<T> {\n  constructor(\n    private sendOperationFn: (args: any, spec: any) => Promise<LroResponse<T>>,\n    private args: Record<string, unknown>,\n    private spec: {\n      readonly requestBody?: unknown;\n      readonly path?: string;\n      readonly httpMethod: string;\n    } & Record<string, any>,\n    public requestPath: string = spec.path!,\n    public requestMethod: string = spec.httpMethod\n  ) {}\n  public async sendInitialRequest(): Promise<LroResponse<T>> {\n    return this.sendOperationFn(this.args, this.spec);\n  }\n  public async sendPollRequest(path: string): Promise<LroResponse<T>> {\n    const { requestBody, ...restSpec } = this.spec;\n    return this.sendOperationFn(this.args, {\n      ...restSpec,\n      path,\n      httpMethod: \"GET\"\n    });\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { StreamingJobs } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StreamAnalyticsManagementClient } from \"../streamAnalyticsManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  StreamingJob,\n  StreamingJobsListByResourceGroupNextOptionalParams,\n  StreamingJobsListByResourceGroupOptionalParams,\n  StreamingJobsListByResourceGroupResponse,\n  StreamingJobsListNextOptionalParams,\n  StreamingJobsListOptionalParams,\n  StreamingJobsListResponse,\n  StreamingJobsCreateOrReplaceOptionalParams,\n  StreamingJobsCreateOrReplaceResponse,\n  StreamingJobsUpdateOptionalParams,\n  StreamingJobsUpdateResponse,\n  StreamingJobsDeleteOptionalParams,\n  StreamingJobsGetOptionalParams,\n  StreamingJobsGetResponse,\n  StreamingJobsStartOptionalParams,\n  StreamingJobsStopOptionalParams,\n  StreamingJobsScaleOptionalParams,\n  StreamingJobsListByResourceGroupNextResponse,\n  StreamingJobsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing StreamingJobs operations. */\nexport class StreamingJobsImpl implements StreamingJobs {\n  private readonly client: StreamAnalyticsManagementClient;\n\n  /**\n   * Initialize a new instance of the class StreamingJobs class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StreamAnalyticsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all of the streaming jobs in the specified resource group.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  public listByResourceGroup(\n    resourceGroupName: string,\n    options?: StreamingJobsListByResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<StreamingJob> {\n    const iter = this.listByResourceGroupPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByResourceGroupPagingPage(\n          resourceGroupName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: StreamingJobsListByResourceGroupOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<StreamingJob[]> {\n    let result: StreamingJobsListByResourceGroupResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByResourceGroup(resourceGroupName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByResourceGroupNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: StreamingJobsListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<StreamingJob> {\n    for await (const page of this.listByResourceGroupPagingPage(\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all of the streaming jobs in the given subscription.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: StreamingJobsListOptionalParams\n  ): PagedAsyncIterableIterator<StreamingJob> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: StreamingJobsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<StreamingJob[]> {\n    let result: StreamingJobsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: StreamingJobsListOptionalParams\n  ): AsyncIterableIterator<StreamingJob> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Creates a streaming job or replaces an already existing streaming job.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param jobName The name of the streaming job.\n   * @param streamingJob The definition of the streaming job that will be used to create a new streaming\n   *                     job or replace the existing one.\n   * @param options The options parameters.\n   */\n  async beginCreateOrReplace(\n    resourceGroupName: string,\n    jobName: string,\n    streamingJob: StreamingJob,\n    options?: StreamingJobsCreateOrReplaceOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<StreamingJobsCreateOrReplaceResponse>,\n      StreamingJobsCreateOrReplaceResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<StreamingJobsCreateOrReplaceResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, jobName, streamingJob, options },\n      createOrReplaceOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates a streaming job or replaces an already existing streaming job.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param jobName The name of the streaming job.\n   * @param streamingJob The definition of the streaming job that will be used to create a new streaming\n   *                     job or replace the existing one.\n   * @param options The options parameters.\n   */\n  async beginCreateOrReplaceAndWait(\n    resourceGroupName: string,\n    jobName: string,\n    streamingJob: StreamingJob,\n    options?: StreamingJobsCreateOrReplaceOptionalParams\n  ): Promise<StreamingJobsCreateOrReplaceResponse> {\n    const poller = await this.beginCreateOrReplace(\n      resourceGroupName,\n      jobName,\n      streamingJob,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Updates an existing streaming job. This can be used to partially update (ie. update one or two\n   * properties) a streaming job without affecting the rest the job definition.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param jobName The name of the streaming job.\n   * @param streamingJob A streaming job object. The properties specified here will overwrite the\n   *                     corresponding properties in the existing streaming job (ie. Those properties will be updated). Any\n   *                     properties that are set to null here will mean that the corresponding property in the existing input\n   *                     will remain the same and not change as a result of this PATCH operation.\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    jobName: string,\n    streamingJob: StreamingJob,\n    options?: StreamingJobsUpdateOptionalParams\n  ): Promise<StreamingJobsUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, jobName, streamingJob, options },\n      updateOperationSpec\n    );\n  }\n\n  /**\n   * Deletes a streaming job.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param jobName The name of the streaming job.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    jobName: string,\n    options?: StreamingJobsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, jobName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes a streaming job.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param jobName The name of the streaming job.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    jobName: string,\n    options?: StreamingJobsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(resourceGroupName, jobName, options);\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets details about the specified streaming job.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param jobName The name of the streaming job.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    jobName: string,\n    options?: StreamingJobsGetOptionalParams\n  ): Promise<StreamingJobsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, jobName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Lists all of the streaming jobs in the specified resource group.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroup(\n    resourceGroupName: string,\n    options?: StreamingJobsListByResourceGroupOptionalParams\n  ): Promise<StreamingJobsListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listByResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Lists all of the streaming jobs in the given subscription.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: StreamingJobsListOptionalParams\n  ): Promise<StreamingJobsListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * Starts a streaming job. Once a job is started it will start processing input events and produce\n   * output.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param jobName The name of the streaming job.\n   * @param options The options parameters.\n   */\n  async beginStart(\n    resourceGroupName: string,\n    jobName: string,\n    options?: StreamingJobsStartOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, jobName, options },\n      startOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Starts a streaming job. Once a job is started it will start processing input events and produce\n   * output.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param jobName The name of the streaming job.\n   * @param options The options parameters.\n   */\n  async beginStartAndWait(\n    resourceGroupName: string,\n    jobName: string,\n    options?: StreamingJobsStartOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginStart(resourceGroupName, jobName, options);\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Stops a running streaming job. This will cause a running streaming job to stop processing input\n   * events and producing output.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param jobName The name of the streaming job.\n   * @param options The options parameters.\n   */\n  async beginStop(\n    resourceGroupName: string,\n    jobName: string,\n    options?: StreamingJobsStopOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, jobName, options },\n      stopOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Stops a running streaming job. This will cause a running streaming job to stop processing input\n   * events and producing output.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param jobName The name of the streaming job.\n   * @param options The options parameters.\n   */\n  async beginStopAndWait(\n    resourceGroupName: string,\n    jobName: string,\n    options?: StreamingJobsStopOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginStop(resourceGroupName, jobName, options);\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Scales a streaming job when the job is running.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param jobName The name of the streaming job.\n   * @param options The options parameters.\n   */\n  async beginScale(\n    resourceGroupName: string,\n    jobName: string,\n    options?: StreamingJobsScaleOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, jobName, options },\n      scaleOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Scales a streaming job when the job is running.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param jobName The name of the streaming job.\n   * @param options The options parameters.\n   */\n  async beginScaleAndWait(\n    resourceGroupName: string,\n    jobName: string,\n    options?: StreamingJobsScaleOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginScale(resourceGroupName, jobName, options);\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListByResourceGroupNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: StreamingJobsListByResourceGroupNextOptionalParams\n  ): Promise<StreamingJobsListByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listByResourceGroupNextOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: StreamingJobsListNextOptionalParams\n  ): Promise<StreamingJobsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrReplaceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StreamingJob,\n      headersMapper: Mappers.StreamingJobsCreateOrReplaceHeaders\n    },\n    201: {\n      bodyMapper: Mappers.StreamingJob,\n      headersMapper: Mappers.StreamingJobsCreateOrReplaceHeaders\n    },\n    202: {\n      bodyMapper: Mappers.StreamingJob,\n      headersMapper: Mappers.StreamingJobsCreateOrReplaceHeaders\n    },\n    204: {\n      bodyMapper: Mappers.StreamingJob,\n      headersMapper: Mappers.StreamingJobsCreateOrReplaceHeaders\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  requestBody: Parameters.streamingJob,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.jobName\n  ],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.contentType,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StreamingJob,\n      headersMapper: Mappers.StreamingJobsUpdateHeaders\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  requestBody: Parameters.streamingJob,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.jobName\n  ],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.contentType,\n    Parameters.ifMatch\n  ],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.jobName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StreamingJob,\n      headersMapper: Mappers.StreamingJobsGetHeaders\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.jobName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StreamingJobListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.StreamAnalytics/streamingjobs\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StreamingJobListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst startOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/start\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  requestBody: Parameters.startJobParameters,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.jobName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst stopOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/stop\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.jobName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst scaleOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/scale\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  requestBody: Parameters.scaleJobParameters,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.jobName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listByResourceGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StreamingJobListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StreamingJobListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Inputs } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StreamAnalyticsManagementClient } from \"../streamAnalyticsManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  Input,\n  InputsListByStreamingJobNextOptionalParams,\n  InputsListByStreamingJobOptionalParams,\n  InputsListByStreamingJobResponse,\n  InputsCreateOrReplaceOptionalParams,\n  InputsCreateOrReplaceResponse,\n  InputsUpdateOptionalParams,\n  InputsUpdateResponse,\n  InputsDeleteOptionalParams,\n  InputsGetOptionalParams,\n  InputsGetResponse,\n  InputsTestOptionalParams,\n  InputsTestResponse,\n  InputsListByStreamingJobNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Inputs operations. */\nexport class InputsImpl implements Inputs {\n  private readonly client: StreamAnalyticsManagementClient;\n\n  /**\n   * Initialize a new instance of the class Inputs class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StreamAnalyticsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all of the inputs under the specified streaming job.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param jobName The name of the streaming job.\n   * @param options The options parameters.\n   */\n  public listByStreamingJob(\n    resourceGroupName: string,\n    jobName: string,\n    options?: InputsListByStreamingJobOptionalParams\n  ): PagedAsyncIterableIterator<Input> {\n    const iter = this.listByStreamingJobPagingAll(\n      resourceGroupName,\n      jobName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByStreamingJobPagingPage(\n          resourceGroupName,\n          jobName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByStreamingJobPagingPage(\n    resourceGroupName: string,\n    jobName: string,\n    options?: InputsListByStreamingJobOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Input[]> {\n    let result: InputsListByStreamingJobResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByStreamingJob(\n        resourceGroupName,\n        jobName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByStreamingJobNext(\n        resourceGroupName,\n        jobName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByStreamingJobPagingAll(\n    resourceGroupName: string,\n    jobName: string,\n    options?: InputsListByStreamingJobOptionalParams\n  ): AsyncIterableIterator<Input> {\n    for await (const page of this.listByStreamingJobPagingPage(\n      resourceGroupName,\n      jobName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Creates an input or replaces an already existing input under an existing streaming job.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param jobName The name of the streaming job.\n   * @param inputName The name of the input.\n   * @param input The definition of the input that will be used to create a new input or replace the\n   *              existing one under the streaming job.\n   * @param options The options parameters.\n   */\n  createOrReplace(\n    resourceGroupName: string,\n    jobName: string,\n    inputName: string,\n    input: Input,\n    options?: InputsCreateOrReplaceOptionalParams\n  ): Promise<InputsCreateOrReplaceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, jobName, inputName, input, options },\n      createOrReplaceOperationSpec\n    );\n  }\n\n  /**\n   * Updates an existing input under an existing streaming job. This can be used to partially update (ie.\n   * update one or two properties) an input without affecting the rest the job or input definition.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param jobName The name of the streaming job.\n   * @param inputName The name of the input.\n   * @param input An Input object. The properties specified here will overwrite the corresponding\n   *              properties in the existing input (ie. Those properties will be updated). Any properties that are set\n   *              to null here will mean that the corresponding property in the existing input will remain the same\n   *              and not change as a result of this PATCH operation.\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    jobName: string,\n    inputName: string,\n    input: Input,\n    options?: InputsUpdateOptionalParams\n  ): Promise<InputsUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, jobName, inputName, input, options },\n      updateOperationSpec\n    );\n  }\n\n  /**\n   * Deletes an input from the streaming job.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param jobName The name of the streaming job.\n   * @param inputName The name of the input.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    jobName: string,\n    inputName: string,\n    options?: InputsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, jobName, inputName, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Gets details about the specified input.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param jobName The name of the streaming job.\n   * @param inputName The name of the input.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    jobName: string,\n    inputName: string,\n    options?: InputsGetOptionalParams\n  ): Promise<InputsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, jobName, inputName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Lists all of the inputs under the specified streaming job.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param jobName The name of the streaming job.\n   * @param options The options parameters.\n   */\n  private _listByStreamingJob(\n    resourceGroupName: string,\n    jobName: string,\n    options?: InputsListByStreamingJobOptionalParams\n  ): Promise<InputsListByStreamingJobResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, jobName, options },\n      listByStreamingJobOperationSpec\n    );\n  }\n\n  /**\n   * Tests whether an input’s datasource is reachable and usable by the Azure Stream Analytics service.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param jobName The name of the streaming job.\n   * @param inputName The name of the input.\n   * @param options The options parameters.\n   */\n  async beginTest(\n    resourceGroupName: string,\n    jobName: string,\n    inputName: string,\n    options?: InputsTestOptionalParams\n  ): Promise<\n    PollerLike<PollOperationState<InputsTestResponse>, InputsTestResponse>\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<InputsTestResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, jobName, inputName, options },\n      testOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Tests whether an input’s datasource is reachable and usable by the Azure Stream Analytics service.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param jobName The name of the streaming job.\n   * @param inputName The name of the input.\n   * @param options The options parameters.\n   */\n  async beginTestAndWait(\n    resourceGroupName: string,\n    jobName: string,\n    inputName: string,\n    options?: InputsTestOptionalParams\n  ): Promise<InputsTestResponse> {\n    const poller = await this.beginTest(\n      resourceGroupName,\n      jobName,\n      inputName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListByStreamingJobNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param jobName The name of the streaming job.\n   * @param nextLink The nextLink from the previous successful call to the ListByStreamingJob method.\n   * @param options The options parameters.\n   */\n  private _listByStreamingJobNext(\n    resourceGroupName: string,\n    jobName: string,\n    nextLink: string,\n    options?: InputsListByStreamingJobNextOptionalParams\n  ): Promise<InputsListByStreamingJobNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, jobName, nextLink, options },\n      listByStreamingJobNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrReplaceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/inputs/{inputName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Input,\n      headersMapper: Mappers.InputsCreateOrReplaceHeaders\n    },\n    201: {\n      bodyMapper: Mappers.Input,\n      headersMapper: Mappers.InputsCreateOrReplaceHeaders\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  requestBody: Parameters.input,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.jobName,\n    Parameters.inputName\n  ],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.contentType,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/inputs/{inputName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Input,\n      headersMapper: Mappers.InputsUpdateHeaders\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  requestBody: Parameters.input,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.jobName,\n    Parameters.inputName\n  ],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.contentType,\n    Parameters.ifMatch\n  ],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/inputs/{inputName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.jobName,\n    Parameters.inputName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/inputs/{inputName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Input,\n      headersMapper: Mappers.InputsGetHeaders\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.jobName,\n    Parameters.inputName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByStreamingJobOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/inputs\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.InputListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.select],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.jobName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst testOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/inputs/{inputName}/test\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceTestStatus\n    },\n    201: {\n      bodyMapper: Mappers.ResourceTestStatus\n    },\n    202: {\n      bodyMapper: Mappers.ResourceTestStatus\n    },\n    204: {\n      bodyMapper: Mappers.ResourceTestStatus\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  requestBody: Parameters.input1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.jobName,\n    Parameters.inputName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listByStreamingJobNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.InputListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.jobName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Outputs } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StreamAnalyticsManagementClient } from \"../streamAnalyticsManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  Output,\n  OutputsListByStreamingJobNextOptionalParams,\n  OutputsListByStreamingJobOptionalParams,\n  OutputsListByStreamingJobResponse,\n  OutputsCreateOrReplaceOptionalParams,\n  OutputsCreateOrReplaceResponse,\n  OutputsUpdateOptionalParams,\n  OutputsUpdateResponse,\n  OutputsDeleteOptionalParams,\n  OutputsGetOptionalParams,\n  OutputsGetResponse,\n  OutputsTestOptionalParams,\n  OutputsTestResponse,\n  OutputsListByStreamingJobNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Outputs operations. */\nexport class OutputsImpl implements Outputs {\n  private readonly client: StreamAnalyticsManagementClient;\n\n  /**\n   * Initialize a new instance of the class Outputs class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StreamAnalyticsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all of the outputs under the specified streaming job.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param jobName The name of the streaming job.\n   * @param options The options parameters.\n   */\n  public listByStreamingJob(\n    resourceGroupName: string,\n    jobName: string,\n    options?: OutputsListByStreamingJobOptionalParams\n  ): PagedAsyncIterableIterator<Output> {\n    const iter = this.listByStreamingJobPagingAll(\n      resourceGroupName,\n      jobName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByStreamingJobPagingPage(\n          resourceGroupName,\n          jobName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByStreamingJobPagingPage(\n    resourceGroupName: string,\n    jobName: string,\n    options?: OutputsListByStreamingJobOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Output[]> {\n    let result: OutputsListByStreamingJobResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByStreamingJob(\n        resourceGroupName,\n        jobName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByStreamingJobNext(\n        resourceGroupName,\n        jobName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByStreamingJobPagingAll(\n    resourceGroupName: string,\n    jobName: string,\n    options?: OutputsListByStreamingJobOptionalParams\n  ): AsyncIterableIterator<Output> {\n    for await (const page of this.listByStreamingJobPagingPage(\n      resourceGroupName,\n      jobName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Creates an output or replaces an already existing output under an existing streaming job.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param jobName The name of the streaming job.\n   * @param outputName The name of the output.\n   * @param output The definition of the output that will be used to create a new output or replace the\n   *               existing one under the streaming job.\n   * @param options The options parameters.\n   */\n  createOrReplace(\n    resourceGroupName: string,\n    jobName: string,\n    outputName: string,\n    output: Output,\n    options?: OutputsCreateOrReplaceOptionalParams\n  ): Promise<OutputsCreateOrReplaceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, jobName, outputName, output, options },\n      createOrReplaceOperationSpec\n    );\n  }\n\n  /**\n   * Updates an existing output under an existing streaming job. This can be used to partially update\n   * (ie. update one or two properties) an output without affecting the rest the job or output\n   * definition.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param jobName The name of the streaming job.\n   * @param outputName The name of the output.\n   * @param output An Output object. The properties specified here will overwrite the corresponding\n   *               properties in the existing output (ie. Those properties will be updated). Any properties that are\n   *               set to null here will mean that the corresponding property in the existing output will remain the\n   *               same and not change as a result of this PATCH operation.\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    jobName: string,\n    outputName: string,\n    output: Output,\n    options?: OutputsUpdateOptionalParams\n  ): Promise<OutputsUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, jobName, outputName, output, options },\n      updateOperationSpec\n    );\n  }\n\n  /**\n   * Deletes an output from the streaming job.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param jobName The name of the streaming job.\n   * @param outputName The name of the output.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    jobName: string,\n    outputName: string,\n    options?: OutputsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, jobName, outputName, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Gets details about the specified output.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param jobName The name of the streaming job.\n   * @param outputName The name of the output.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    jobName: string,\n    outputName: string,\n    options?: OutputsGetOptionalParams\n  ): Promise<OutputsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, jobName, outputName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Lists all of the outputs under the specified streaming job.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param jobName The name of the streaming job.\n   * @param options The options parameters.\n   */\n  private _listByStreamingJob(\n    resourceGroupName: string,\n    jobName: string,\n    options?: OutputsListByStreamingJobOptionalParams\n  ): Promise<OutputsListByStreamingJobResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, jobName, options },\n      listByStreamingJobOperationSpec\n    );\n  }\n\n  /**\n   * Tests whether an output’s datasource is reachable and usable by the Azure Stream Analytics service.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param jobName The name of the streaming job.\n   * @param outputName The name of the output.\n   * @param options The options parameters.\n   */\n  async beginTest(\n    resourceGroupName: string,\n    jobName: string,\n    outputName: string,\n    options?: OutputsTestOptionalParams\n  ): Promise<\n    PollerLike<PollOperationState<OutputsTestResponse>, OutputsTestResponse>\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<OutputsTestResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, jobName, outputName, options },\n      testOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Tests whether an output’s datasource is reachable and usable by the Azure Stream Analytics service.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param jobName The name of the streaming job.\n   * @param outputName The name of the output.\n   * @param options The options parameters.\n   */\n  async beginTestAndWait(\n    resourceGroupName: string,\n    jobName: string,\n    outputName: string,\n    options?: OutputsTestOptionalParams\n  ): Promise<OutputsTestResponse> {\n    const poller = await this.beginTest(\n      resourceGroupName,\n      jobName,\n      outputName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListByStreamingJobNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param jobName The name of the streaming job.\n   * @param nextLink The nextLink from the previous successful call to the ListByStreamingJob method.\n   * @param options The options parameters.\n   */\n  private _listByStreamingJobNext(\n    resourceGroupName: string,\n    jobName: string,\n    nextLink: string,\n    options?: OutputsListByStreamingJobNextOptionalParams\n  ): Promise<OutputsListByStreamingJobNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, jobName, nextLink, options },\n      listByStreamingJobNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrReplaceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/outputs/{outputName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Output,\n      headersMapper: Mappers.OutputsCreateOrReplaceHeaders\n    },\n    201: {\n      bodyMapper: Mappers.Output,\n      headersMapper: Mappers.OutputsCreateOrReplaceHeaders\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  requestBody: Parameters.output,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.jobName,\n    Parameters.outputName\n  ],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.contentType,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/outputs/{outputName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Output,\n      headersMapper: Mappers.OutputsUpdateHeaders\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  requestBody: Parameters.output,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.jobName,\n    Parameters.outputName\n  ],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.contentType,\n    Parameters.ifMatch\n  ],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/outputs/{outputName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.jobName,\n    Parameters.outputName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/outputs/{outputName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Output,\n      headersMapper: Mappers.OutputsGetHeaders\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.jobName,\n    Parameters.outputName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByStreamingJobOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/outputs\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OutputListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.select],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.jobName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst testOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/outputs/{outputName}/test\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceTestStatus\n    },\n    201: {\n      bodyMapper: Mappers.ResourceTestStatus\n    },\n    202: {\n      bodyMapper: Mappers.ResourceTestStatus\n    },\n    204: {\n      bodyMapper: Mappers.ResourceTestStatus\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  requestBody: Parameters.output1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.jobName,\n    Parameters.outputName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listByStreamingJobNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OutputListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.jobName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { Transformations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StreamAnalyticsManagementClient } from \"../streamAnalyticsManagementClient\";\nimport {\n  Transformation,\n  TransformationsCreateOrReplaceOptionalParams,\n  TransformationsCreateOrReplaceResponse,\n  TransformationsUpdateOptionalParams,\n  TransformationsUpdateResponse,\n  TransformationsGetOptionalParams,\n  TransformationsGetResponse\n} from \"../models\";\n\n/** Class containing Transformations operations. */\nexport class TransformationsImpl implements Transformations {\n  private readonly client: StreamAnalyticsManagementClient;\n\n  /**\n   * Initialize a new instance of the class Transformations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StreamAnalyticsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Creates a transformation or replaces an already existing transformation under an existing streaming\n   * job.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param jobName The name of the streaming job.\n   * @param transformationName The name of the transformation.\n   * @param transformation The definition of the transformation that will be used to create a new\n   *                       transformation or replace the existing one under the streaming job.\n   * @param options The options parameters.\n   */\n  createOrReplace(\n    resourceGroupName: string,\n    jobName: string,\n    transformationName: string,\n    transformation: Transformation,\n    options?: TransformationsCreateOrReplaceOptionalParams\n  ): Promise<TransformationsCreateOrReplaceResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        jobName,\n        transformationName,\n        transformation,\n        options\n      },\n      createOrReplaceOperationSpec\n    );\n  }\n\n  /**\n   * Updates an existing transformation under an existing streaming job. This can be used to partially\n   * update (ie. update one or two properties) a transformation without affecting the rest the job or\n   * transformation definition.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param jobName The name of the streaming job.\n   * @param transformationName The name of the transformation.\n   * @param transformation A Transformation object. The properties specified here will overwrite the\n   *                       corresponding properties in the existing transformation (ie. Those properties will be updated). Any\n   *                       properties that are set to null here will mean that the corresponding property in the existing\n   *                       transformation will remain the same and not change as a result of this PATCH operation.\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    jobName: string,\n    transformationName: string,\n    transformation: Transformation,\n    options?: TransformationsUpdateOptionalParams\n  ): Promise<TransformationsUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        jobName,\n        transformationName,\n        transformation,\n        options\n      },\n      updateOperationSpec\n    );\n  }\n\n  /**\n   * Gets details about the specified transformation.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param jobName The name of the streaming job.\n   * @param transformationName The name of the transformation.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    jobName: string,\n    transformationName: string,\n    options?: TransformationsGetOptionalParams\n  ): Promise<TransformationsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, jobName, transformationName, options },\n      getOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrReplaceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/transformations/{transformationName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Transformation,\n      headersMapper: Mappers.TransformationsCreateOrReplaceHeaders\n    },\n    201: {\n      bodyMapper: Mappers.Transformation,\n      headersMapper: Mappers.TransformationsCreateOrReplaceHeaders\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  requestBody: Parameters.transformation,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.jobName,\n    Parameters.transformationName\n  ],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.contentType,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/transformations/{transformationName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Transformation,\n      headersMapper: Mappers.TransformationsUpdateHeaders\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  requestBody: Parameters.transformation,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.jobName,\n    Parameters.transformationName\n  ],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.contentType,\n    Parameters.ifMatch\n  ],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/transformations/{transformationName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Transformation,\n      headersMapper: Mappers.TransformationsGetHeaders\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.jobName,\n    Parameters.transformationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Functions } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StreamAnalyticsManagementClient } from \"../streamAnalyticsManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  FunctionModel,\n  FunctionsListByStreamingJobNextOptionalParams,\n  FunctionsListByStreamingJobOptionalParams,\n  FunctionsListByStreamingJobResponse,\n  FunctionsCreateOrReplaceOptionalParams,\n  FunctionsCreateOrReplaceResponse,\n  FunctionsUpdateOptionalParams,\n  FunctionsUpdateResponse,\n  FunctionsDeleteOptionalParams,\n  FunctionsGetOptionalParams,\n  FunctionsGetResponse,\n  FunctionsTestOptionalParams,\n  FunctionsTestResponse,\n  FunctionsRetrieveDefaultDefinitionOptionalParams,\n  FunctionsRetrieveDefaultDefinitionResponse,\n  FunctionsListByStreamingJobNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Functions operations. */\nexport class FunctionsImpl implements Functions {\n  private readonly client: StreamAnalyticsManagementClient;\n\n  /**\n   * Initialize a new instance of the class Functions class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StreamAnalyticsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all of the functions under the specified streaming job.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param jobName The name of the streaming job.\n   * @param options The options parameters.\n   */\n  public listByStreamingJob(\n    resourceGroupName: string,\n    jobName: string,\n    options?: FunctionsListByStreamingJobOptionalParams\n  ): PagedAsyncIterableIterator<FunctionModel> {\n    const iter = this.listByStreamingJobPagingAll(\n      resourceGroupName,\n      jobName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByStreamingJobPagingPage(\n          resourceGroupName,\n          jobName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByStreamingJobPagingPage(\n    resourceGroupName: string,\n    jobName: string,\n    options?: FunctionsListByStreamingJobOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<FunctionModel[]> {\n    let result: FunctionsListByStreamingJobResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByStreamingJob(\n        resourceGroupName,\n        jobName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByStreamingJobNext(\n        resourceGroupName,\n        jobName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByStreamingJobPagingAll(\n    resourceGroupName: string,\n    jobName: string,\n    options?: FunctionsListByStreamingJobOptionalParams\n  ): AsyncIterableIterator<FunctionModel> {\n    for await (const page of this.listByStreamingJobPagingPage(\n      resourceGroupName,\n      jobName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Creates a function or replaces an already existing function under an existing streaming job.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param jobName The name of the streaming job.\n   * @param functionName The name of the function.\n   * @param functionParam The definition of the function that will be used to create a new function or\n   *                      replace the existing one under the streaming job.\n   * @param options The options parameters.\n   */\n  createOrReplace(\n    resourceGroupName: string,\n    jobName: string,\n    functionName: string,\n    functionParam: FunctionModel,\n    options?: FunctionsCreateOrReplaceOptionalParams\n  ): Promise<FunctionsCreateOrReplaceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, jobName, functionName, functionParam, options },\n      createOrReplaceOperationSpec\n    );\n  }\n\n  /**\n   * Updates an existing function under an existing streaming job. This can be used to partially update\n   * (ie. update one or two properties) a function without affecting the rest the job or function\n   * definition.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param jobName The name of the streaming job.\n   * @param functionName The name of the function.\n   * @param functionParam A function object. The properties specified here will overwrite the\n   *                      corresponding properties in the existing function (ie. Those properties will be updated). Any\n   *                      properties that are set to null here will mean that the corresponding property in the existing\n   *                      function will remain the same and not change as a result of this PATCH operation.\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    jobName: string,\n    functionName: string,\n    functionParam: FunctionModel,\n    options?: FunctionsUpdateOptionalParams\n  ): Promise<FunctionsUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, jobName, functionName, functionParam, options },\n      updateOperationSpec\n    );\n  }\n\n  /**\n   * Deletes a function from the streaming job.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param jobName The name of the streaming job.\n   * @param functionName The name of the function.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    jobName: string,\n    functionName: string,\n    options?: FunctionsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, jobName, functionName, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Gets details about the specified function.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param jobName The name of the streaming job.\n   * @param functionName The name of the function.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    jobName: string,\n    functionName: string,\n    options?: FunctionsGetOptionalParams\n  ): Promise<FunctionsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, jobName, functionName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Lists all of the functions under the specified streaming job.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param jobName The name of the streaming job.\n   * @param options The options parameters.\n   */\n  private _listByStreamingJob(\n    resourceGroupName: string,\n    jobName: string,\n    options?: FunctionsListByStreamingJobOptionalParams\n  ): Promise<FunctionsListByStreamingJobResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, jobName, options },\n      listByStreamingJobOperationSpec\n    );\n  }\n\n  /**\n   * Tests if the information provided for a function is valid. This can range from testing the\n   * connection to the underlying web service behind the function or making sure the function code\n   * provided is syntactically correct.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param jobName The name of the streaming job.\n   * @param functionName The name of the function.\n   * @param options The options parameters.\n   */\n  async beginTest(\n    resourceGroupName: string,\n    jobName: string,\n    functionName: string,\n    options?: FunctionsTestOptionalParams\n  ): Promise<\n    PollerLike<PollOperationState<FunctionsTestResponse>, FunctionsTestResponse>\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<FunctionsTestResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, jobName, functionName, options },\n      testOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Tests if the information provided for a function is valid. This can range from testing the\n   * connection to the underlying web service behind the function or making sure the function code\n   * provided is syntactically correct.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param jobName The name of the streaming job.\n   * @param functionName The name of the function.\n   * @param options The options parameters.\n   */\n  async beginTestAndWait(\n    resourceGroupName: string,\n    jobName: string,\n    functionName: string,\n    options?: FunctionsTestOptionalParams\n  ): Promise<FunctionsTestResponse> {\n    const poller = await this.beginTest(\n      resourceGroupName,\n      jobName,\n      functionName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Retrieves the default definition of a function based on the parameters specified.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param jobName The name of the streaming job.\n   * @param functionName The name of the function.\n   * @param options The options parameters.\n   */\n  retrieveDefaultDefinition(\n    resourceGroupName: string,\n    jobName: string,\n    functionName: string,\n    options?: FunctionsRetrieveDefaultDefinitionOptionalParams\n  ): Promise<FunctionsRetrieveDefaultDefinitionResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, jobName, functionName, options },\n      retrieveDefaultDefinitionOperationSpec\n    );\n  }\n\n  /**\n   * ListByStreamingJobNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param jobName The name of the streaming job.\n   * @param nextLink The nextLink from the previous successful call to the ListByStreamingJob method.\n   * @param options The options parameters.\n   */\n  private _listByStreamingJobNext(\n    resourceGroupName: string,\n    jobName: string,\n    nextLink: string,\n    options?: FunctionsListByStreamingJobNextOptionalParams\n  ): Promise<FunctionsListByStreamingJobNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, jobName, nextLink, options },\n      listByStreamingJobNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrReplaceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/functions/{functionName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FunctionModel,\n      headersMapper: Mappers.FunctionsCreateOrReplaceHeaders\n    },\n    201: {\n      bodyMapper: Mappers.FunctionModel,\n      headersMapper: Mappers.FunctionsCreateOrReplaceHeaders\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  requestBody: Parameters.functionParam,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.jobName,\n    Parameters.functionName\n  ],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.contentType,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/functions/{functionName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FunctionModel,\n      headersMapper: Mappers.FunctionsUpdateHeaders\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  requestBody: Parameters.functionParam,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.jobName,\n    Parameters.functionName\n  ],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.contentType,\n    Parameters.ifMatch\n  ],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/functions/{functionName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.jobName,\n    Parameters.functionName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/functions/{functionName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FunctionModel,\n      headersMapper: Mappers.FunctionsGetHeaders\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.jobName,\n    Parameters.functionName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByStreamingJobOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/functions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FunctionListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.select],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.jobName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst testOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/functions/{functionName}/test\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceTestStatus\n    },\n    201: {\n      bodyMapper: Mappers.ResourceTestStatus\n    },\n    202: {\n      bodyMapper: Mappers.ResourceTestStatus\n    },\n    204: {\n      bodyMapper: Mappers.ResourceTestStatus\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  requestBody: Parameters.functionParam1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.jobName,\n    Parameters.functionName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst retrieveDefaultDefinitionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/functions/{functionName}/retrieveDefaultDefinition\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FunctionModel\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  requestBody: Parameters.functionRetrieveDefaultDefinitionParameters,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.jobName,\n    Parameters.functionName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listByStreamingJobNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FunctionListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.jobName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { Subscriptions } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StreamAnalyticsManagementClient } from \"../streamAnalyticsManagementClient\";\nimport {\n  SubscriptionsListQuotasOptionalParams,\n  SubscriptionsListQuotasResponse\n} from \"../models\";\n\n/** Class containing Subscriptions operations. */\nexport class SubscriptionsImpl implements Subscriptions {\n  private readonly client: StreamAnalyticsManagementClient;\n\n  /**\n   * Initialize a new instance of the class Subscriptions class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StreamAnalyticsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Retrieves the subscription's current quota information in a particular region.\n   * @param location The region in which to retrieve the subscription's quota information. You can find\n   *                 out which regions Azure Stream Analytics is supported in here:\n   *                 https://azure.microsoft.com/en-us/regions/\n   * @param options The options parameters.\n   */\n  listQuotas(\n    location: string,\n    options?: SubscriptionsListQuotasOptionalParams\n  ): Promise<SubscriptionsListQuotasResponse> {\n    return this.client.sendOperationRequest(\n      { location, options },\n      listQuotasOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listQuotasOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.StreamAnalytics/locations/{location}/quotas\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SubscriptionQuotasListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Clusters } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StreamAnalyticsManagementClient } from \"../streamAnalyticsManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  Cluster,\n  ClustersListBySubscriptionNextOptionalParams,\n  ClustersListBySubscriptionOptionalParams,\n  ClustersListBySubscriptionResponse,\n  ClustersListByResourceGroupNextOptionalParams,\n  ClustersListByResourceGroupOptionalParams,\n  ClustersListByResourceGroupResponse,\n  ClusterJob,\n  ClustersListStreamingJobsNextOptionalParams,\n  ClustersListStreamingJobsOptionalParams,\n  ClustersListStreamingJobsResponse,\n  ClustersCreateOrUpdateOptionalParams,\n  ClustersCreateOrUpdateResponse,\n  ClustersUpdateOptionalParams,\n  ClustersUpdateResponse,\n  ClustersGetOptionalParams,\n  ClustersGetResponse,\n  ClustersDeleteOptionalParams,\n  ClustersListBySubscriptionNextResponse,\n  ClustersListByResourceGroupNextResponse,\n  ClustersListStreamingJobsNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Clusters operations. */\nexport class ClustersImpl implements Clusters {\n  private readonly client: StreamAnalyticsManagementClient;\n\n  /**\n   * Initialize a new instance of the class Clusters class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StreamAnalyticsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all of the clusters in the given subscription.\n   * @param options The options parameters.\n   */\n  public listBySubscription(\n    options?: ClustersListBySubscriptionOptionalParams\n  ): PagedAsyncIterableIterator<Cluster> {\n    const iter = this.listBySubscriptionPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listBySubscriptionPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listBySubscriptionPagingPage(\n    options?: ClustersListBySubscriptionOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Cluster[]> {\n    let result: ClustersListBySubscriptionResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listBySubscription(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listBySubscriptionNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listBySubscriptionPagingAll(\n    options?: ClustersListBySubscriptionOptionalParams\n  ): AsyncIterableIterator<Cluster> {\n    for await (const page of this.listBySubscriptionPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all of the clusters in the given resource group.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  public listByResourceGroup(\n    resourceGroupName: string,\n    options?: ClustersListByResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<Cluster> {\n    const iter = this.listByResourceGroupPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByResourceGroupPagingPage(\n          resourceGroupName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: ClustersListByResourceGroupOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Cluster[]> {\n    let result: ClustersListByResourceGroupResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByResourceGroup(resourceGroupName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByResourceGroupNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: ClustersListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<Cluster> {\n    for await (const page of this.listByResourceGroupPagingPage(\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all of the streaming jobs in the given cluster.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the cluster.\n   * @param options The options parameters.\n   */\n  public listStreamingJobs(\n    resourceGroupName: string,\n    clusterName: string,\n    options?: ClustersListStreamingJobsOptionalParams\n  ): PagedAsyncIterableIterator<ClusterJob> {\n    const iter = this.listStreamingJobsPagingAll(\n      resourceGroupName,\n      clusterName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listStreamingJobsPagingPage(\n          resourceGroupName,\n          clusterName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listStreamingJobsPagingPage(\n    resourceGroupName: string,\n    clusterName: string,\n    options?: ClustersListStreamingJobsOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ClusterJob[]> {\n    let result: ClustersListStreamingJobsResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listStreamingJobs(\n        resourceGroupName,\n        clusterName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listStreamingJobsNext(\n        resourceGroupName,\n        clusterName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listStreamingJobsPagingAll(\n    resourceGroupName: string,\n    clusterName: string,\n    options?: ClustersListStreamingJobsOptionalParams\n  ): AsyncIterableIterator<ClusterJob> {\n    for await (const page of this.listStreamingJobsPagingPage(\n      resourceGroupName,\n      clusterName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Creates a Stream Analytics Cluster or replaces an already existing cluster.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the cluster.\n   * @param cluster The definition of the cluster that will be used to create a new cluster or replace\n   *                the existing one.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    clusterName: string,\n    cluster: Cluster,\n    options?: ClustersCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<ClustersCreateOrUpdateResponse>,\n      ClustersCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ClustersCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, clusterName, cluster, options },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates a Stream Analytics Cluster or replaces an already existing cluster.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the cluster.\n   * @param cluster The definition of the cluster that will be used to create a new cluster or replace\n   *                the existing one.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    clusterName: string,\n    cluster: Cluster,\n    options?: ClustersCreateOrUpdateOptionalParams\n  ): Promise<ClustersCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      clusterName,\n      cluster,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Updates an existing cluster. This can be used to partially update (ie. update one or two properties)\n   * a cluster without affecting the rest of the cluster definition.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the cluster.\n   * @param cluster The properties specified here will overwrite the corresponding properties in the\n   *                existing cluster (ie. Those properties will be updated).\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    clusterName: string,\n    cluster: Cluster,\n    options?: ClustersUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<ClustersUpdateResponse>,\n      ClustersUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ClustersUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, clusterName, cluster, options },\n      updateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Updates an existing cluster. This can be used to partially update (ie. update one or two properties)\n   * a cluster without affecting the rest of the cluster definition.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the cluster.\n   * @param cluster The properties specified here will overwrite the corresponding properties in the\n   *                existing cluster (ie. Those properties will be updated).\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    clusterName: string,\n    cluster: Cluster,\n    options?: ClustersUpdateOptionalParams\n  ): Promise<ClustersUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      clusterName,\n      cluster,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets information about the specified cluster.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the cluster.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    clusterName: string,\n    options?: ClustersGetOptionalParams\n  ): Promise<ClustersGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, clusterName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Deletes the specified cluster.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the cluster.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    clusterName: string,\n    options?: ClustersDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, clusterName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes the specified cluster.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the cluster.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    clusterName: string,\n    options?: ClustersDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      clusterName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Lists all of the clusters in the given subscription.\n   * @param options The options parameters.\n   */\n  private _listBySubscription(\n    options?: ClustersListBySubscriptionOptionalParams\n  ): Promise<ClustersListBySubscriptionResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      listBySubscriptionOperationSpec\n    );\n  }\n\n  /**\n   * Lists all of the clusters in the given resource group.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroup(\n    resourceGroupName: string,\n    options?: ClustersListByResourceGroupOptionalParams\n  ): Promise<ClustersListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listByResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Lists all of the streaming jobs in the given cluster.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the cluster.\n   * @param options The options parameters.\n   */\n  private _listStreamingJobs(\n    resourceGroupName: string,\n    clusterName: string,\n    options?: ClustersListStreamingJobsOptionalParams\n  ): Promise<ClustersListStreamingJobsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, clusterName, options },\n      listStreamingJobsOperationSpec\n    );\n  }\n\n  /**\n   * ListBySubscriptionNext\n   * @param nextLink The nextLink from the previous successful call to the ListBySubscription method.\n   * @param options The options parameters.\n   */\n  private _listBySubscriptionNext(\n    nextLink: string,\n    options?: ClustersListBySubscriptionNextOptionalParams\n  ): Promise<ClustersListBySubscriptionNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listBySubscriptionNextOperationSpec\n    );\n  }\n\n  /**\n   * ListByResourceGroupNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: ClustersListByResourceGroupNextOptionalParams\n  ): Promise<ClustersListByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listByResourceGroupNextOperationSpec\n    );\n  }\n\n  /**\n   * ListStreamingJobsNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the cluster.\n   * @param nextLink The nextLink from the previous successful call to the ListStreamingJobs method.\n   * @param options The options parameters.\n   */\n  private _listStreamingJobsNext(\n    resourceGroupName: string,\n    clusterName: string,\n    nextLink: string,\n    options?: ClustersListStreamingJobsNextOptionalParams\n  ): Promise<ClustersListStreamingJobsNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, clusterName, nextLink, options },\n      listStreamingJobsNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/clusters/{clusterName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Cluster\n    },\n    201: {\n      bodyMapper: Mappers.Cluster\n    },\n    202: {\n      bodyMapper: Mappers.Cluster\n    },\n    204: {\n      bodyMapper: Mappers.Cluster\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  requestBody: Parameters.cluster,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.clusterName\n  ],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.contentType,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/clusters/{clusterName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Cluster\n    },\n    201: {\n      bodyMapper: Mappers.Cluster\n    },\n    202: {\n      bodyMapper: Mappers.Cluster\n    },\n    204: {\n      bodyMapper: Mappers.Cluster\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  requestBody: Parameters.cluster,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.clusterName\n  ],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.contentType,\n    Parameters.ifMatch\n  ],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/clusters/{clusterName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Cluster\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.clusterName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/clusters/{clusterName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.clusterName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listBySubscriptionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.StreamAnalytics/clusters\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ClusterListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/clusters\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ClusterListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listStreamingJobsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/clusters/{clusterName}/listStreamingJobs\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ClusterJobListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.clusterName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listBySubscriptionNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ClusterListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ClusterListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listStreamingJobsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ClusterJobListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.clusterName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { PrivateEndpoints } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StreamAnalyticsManagementClient } from \"../streamAnalyticsManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  PrivateEndpoint,\n  PrivateEndpointsListByClusterNextOptionalParams,\n  PrivateEndpointsListByClusterOptionalParams,\n  PrivateEndpointsListByClusterResponse,\n  PrivateEndpointsCreateOrUpdateOptionalParams,\n  PrivateEndpointsCreateOrUpdateResponse,\n  PrivateEndpointsGetOptionalParams,\n  PrivateEndpointsGetResponse,\n  PrivateEndpointsDeleteOptionalParams,\n  PrivateEndpointsListByClusterNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing PrivateEndpoints operations. */\nexport class PrivateEndpointsImpl implements PrivateEndpoints {\n  private readonly client: StreamAnalyticsManagementClient;\n\n  /**\n   * Initialize a new instance of the class PrivateEndpoints class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StreamAnalyticsManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists the private endpoints in the cluster.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the cluster.\n   * @param options The options parameters.\n   */\n  public listByCluster(\n    resourceGroupName: string,\n    clusterName: string,\n    options?: PrivateEndpointsListByClusterOptionalParams\n  ): PagedAsyncIterableIterator<PrivateEndpoint> {\n    const iter = this.listByClusterPagingAll(\n      resourceGroupName,\n      clusterName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByClusterPagingPage(\n          resourceGroupName,\n          clusterName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByClusterPagingPage(\n    resourceGroupName: string,\n    clusterName: string,\n    options?: PrivateEndpointsListByClusterOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<PrivateEndpoint[]> {\n    let result: PrivateEndpointsListByClusterResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByCluster(\n        resourceGroupName,\n        clusterName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByClusterNext(\n        resourceGroupName,\n        clusterName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByClusterPagingAll(\n    resourceGroupName: string,\n    clusterName: string,\n    options?: PrivateEndpointsListByClusterOptionalParams\n  ): AsyncIterableIterator<PrivateEndpoint> {\n    for await (const page of this.listByClusterPagingPage(\n      resourceGroupName,\n      clusterName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Creates a Stream Analytics Private Endpoint or replaces an already existing Private Endpoint.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the cluster.\n   * @param privateEndpointName The name of the private endpoint.\n   * @param privateEndpoint The definition of the private endpoint that will be used to create a new\n   *                        cluster or replace the existing one.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    clusterName: string,\n    privateEndpointName: string,\n    privateEndpoint: PrivateEndpoint,\n    options?: PrivateEndpointsCreateOrUpdateOptionalParams\n  ): Promise<PrivateEndpointsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        clusterName,\n        privateEndpointName,\n        privateEndpoint,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Gets information about the specified Private Endpoint.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the cluster.\n   * @param privateEndpointName The name of the private endpoint.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    clusterName: string,\n    privateEndpointName: string,\n    options?: PrivateEndpointsGetOptionalParams\n  ): Promise<PrivateEndpointsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, clusterName, privateEndpointName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Delete the specified private endpoint.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the cluster.\n   * @param privateEndpointName The name of the private endpoint.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    clusterName: string,\n    privateEndpointName: string,\n    options?: PrivateEndpointsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, clusterName, privateEndpointName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Delete the specified private endpoint.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the cluster.\n   * @param privateEndpointName The name of the private endpoint.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    clusterName: string,\n    privateEndpointName: string,\n    options?: PrivateEndpointsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      clusterName,\n      privateEndpointName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Lists the private endpoints in the cluster.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the cluster.\n   * @param options The options parameters.\n   */\n  private _listByCluster(\n    resourceGroupName: string,\n    clusterName: string,\n    options?: PrivateEndpointsListByClusterOptionalParams\n  ): Promise<PrivateEndpointsListByClusterResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, clusterName, options },\n      listByClusterOperationSpec\n    );\n  }\n\n  /**\n   * ListByClusterNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param clusterName The name of the cluster.\n   * @param nextLink The nextLink from the previous successful call to the ListByCluster method.\n   * @param options The options parameters.\n   */\n  private _listByClusterNext(\n    resourceGroupName: string,\n    clusterName: string,\n    nextLink: string,\n    options?: PrivateEndpointsListByClusterNextOptionalParams\n  ): Promise<PrivateEndpointsListByClusterNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, clusterName, nextLink, options },\n      listByClusterNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/clusters/{clusterName}/privateEndpoints/{privateEndpointName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateEndpoint\n    },\n    201: {\n      bodyMapper: Mappers.PrivateEndpoint\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  requestBody: Parameters.privateEndpoint,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.clusterName,\n    Parameters.privateEndpointName\n  ],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.contentType,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/clusters/{clusterName}/privateEndpoints/{privateEndpointName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateEndpoint\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.clusterName,\n    Parameters.privateEndpointName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/clusters/{clusterName}/privateEndpoints/{privateEndpointName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.clusterName,\n    Parameters.privateEndpointName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByClusterOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/clusters/{clusterName}/privateEndpoints\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateEndpointListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.clusterName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByClusterNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateEndpointListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.clusterName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\nimport {\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest\n} from \"@azure/core-rest-pipeline\";\nimport * as coreAuth from \"@azure/core-auth\";\nimport {\n  OperationsImpl,\n  StreamingJobsImpl,\n  InputsImpl,\n  OutputsImpl,\n  TransformationsImpl,\n  FunctionsImpl,\n  SubscriptionsImpl,\n  ClustersImpl,\n  PrivateEndpointsImpl\n} from \"./operations\";\nimport {\n  Operations,\n  StreamingJobs,\n  Inputs,\n  Outputs,\n  Transformations,\n  Functions,\n  Subscriptions,\n  Clusters,\n  PrivateEndpoints\n} from \"./operationsInterfaces\";\nimport { StreamAnalyticsManagementClientOptionalParams } from \"./models\";\n\nexport class StreamAnalyticsManagementClient extends coreClient.ServiceClient {\n  $host: string;\n  apiVersion: string;\n  subscriptionId: string;\n\n  /**\n   * Initializes a new instance of the StreamAnalyticsManagementClient class.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param subscriptionId The ID of the target subscription.\n   * @param options The parameter options\n   */\n  constructor(\n    credentials: coreAuth.TokenCredential,\n    subscriptionId: string,\n    options?: StreamAnalyticsManagementClientOptionalParams\n  ) {\n    if (credentials === undefined) {\n      throw new Error(\"'credentials' cannot be null\");\n    }\n    if (subscriptionId === undefined) {\n      throw new Error(\"'subscriptionId' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: StreamAnalyticsManagementClientOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\",\n      credential: credentials\n    };\n\n    const packageDetails = `azsdk-js-arm-streamanalytics/4.1.0`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      endpoint:\n        options.endpoint ?? options.baseUri ?? \"https://management.azure.com\"\n    };\n    super(optionsWithDefaults);\n\n    let bearerTokenAuthenticationPolicyFound: boolean = false;\n    if (options?.pipeline && options.pipeline.getOrderedPolicies().length > 0) {\n      const pipelinePolicies: coreRestPipeline.PipelinePolicy[] = options.pipeline.getOrderedPolicies();\n      bearerTokenAuthenticationPolicyFound = pipelinePolicies.some(\n        (pipelinePolicy) =>\n          pipelinePolicy.name ===\n          coreRestPipeline.bearerTokenAuthenticationPolicyName\n      );\n    }\n    if (\n      !options ||\n      !options.pipeline ||\n      options.pipeline.getOrderedPolicies().length == 0 ||\n      !bearerTokenAuthenticationPolicyFound\n    ) {\n      this.pipeline.removePolicy({\n        name: coreRestPipeline.bearerTokenAuthenticationPolicyName\n      });\n      this.pipeline.addPolicy(\n        coreRestPipeline.bearerTokenAuthenticationPolicy({\n          credential: credentials,\n          scopes:\n            optionsWithDefaults.credentialScopes ??\n            `${optionsWithDefaults.endpoint}/.default`,\n          challengeCallbacks: {\n            authorizeRequestOnChallenge:\n              coreClient.authorizeRequestOnClaimChallenge\n          }\n        })\n      );\n    }\n    // Parameter assignments\n    this.subscriptionId = subscriptionId;\n\n    // Assigning values to Constant parameters\n    this.$host = options.$host || \"https://management.azure.com\";\n    this.apiVersion = options.apiVersion || \"2020-03-01\";\n    this.operations = new OperationsImpl(this);\n    this.streamingJobs = new StreamingJobsImpl(this);\n    this.inputs = new InputsImpl(this);\n    this.outputs = new OutputsImpl(this);\n    this.transformations = new TransformationsImpl(this);\n    this.functions = new FunctionsImpl(this);\n    this.subscriptions = new SubscriptionsImpl(this);\n    this.clusters = new ClustersImpl(this);\n    this.privateEndpoints = new PrivateEndpointsImpl(this);\n    this.addCustomApiVersionPolicy(options.apiVersion);\n  }\n\n  /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */\n  private addCustomApiVersionPolicy(apiVersion?: string) {\n    if (!apiVersion) {\n      return;\n    }\n    const apiVersionPolicy = {\n      name: \"CustomApiVersionPolicy\",\n      async sendRequest(\n        request: PipelineRequest,\n        next: SendRequest\n      ): Promise<PipelineResponse> {\n        const param = request.url.split(\"?\");\n        if (param.length > 1) {\n          const newParams = param[1].split(\"&\").map((item) => {\n            if (item.indexOf(\"api-version\") > -1) {\n              return \"api-version=\" + apiVersion;\n            } else {\n              return item;\n            }\n          });\n          request.url = param[0] + \"?\" + newParams.join(\"&\");\n        }\n        return next(request);\n      }\n    };\n    this.pipeline.addPolicy(apiVersionPolicy);\n  }\n\n  operations: Operations;\n  streamingJobs: StreamingJobs;\n  inputs: Inputs;\n  outputs: Outputs;\n  transformations: Transformations;\n  functions: Functions;\n  subscriptions: Subscriptions;\n  clusters: Clusters;\n  privateEndpoints: PrivateEndpoints;\n}\n"],"names":["KnownSkuName","KnownJobType","KnownOutputStartMode","KnownEventsOutOfOrderPolicy","KnownOutputErrorPolicy","KnownCompatibilityLevel","KnownEventSerializationType","KnownCompressionType","KnownAuthenticationMode","KnownContentStoragePolicy","KnownClusterSkuName","KnownClusterProvisioningState","KnownJobState","KnownEncoding","KnownJsonOutputSerializationFormat","KnownRefreshType","StreamingJobMapper","StartStreamingJobParametersMapper","ScaleStreamingJobParametersMapper","InputMapper","OutputMapper","TransformationMapper","FunctionModelMapper","FunctionRetrieveDefaultDefinitionParametersMapper","ClusterMapper","PrivateEndpointMapper","__await","__asyncValues","__asyncDelegator","listOperationSpec","listNextOperationSpec","serializer","coreClient","Mappers.OperationListResult","Mappers.ErrorModel","Parameters.apiVersion","Parameters.$host","Parameters.accept","Parameters.nextLink","__rest","__awaiter","createOrReplaceOperationSpec","LroEngine","updateOperationSpec","deleteOperationSpec","getOperationSpec","listByResourceGroupOperationSpec","listByResourceGroupNextOperationSpec","Mappers.StreamingJob","Mappers.StreamingJobsCreateOrReplaceHeaders","Parameters.streamingJob","Parameters.subscriptionId","Parameters.resourceGroupName","Parameters.jobName","Parameters.contentType","Parameters.ifMatch","Parameters.ifNoneMatch","Mappers.StreamingJobsUpdateHeaders","Mappers.StreamingJobsGetHeaders","Parameters.expand","Mappers.StreamingJobListResult","Parameters.startJobParameters","Parameters.scaleJobParameters","listByStreamingJobOperationSpec","testOperationSpec","listByStreamingJobNextOperationSpec","Mappers.Input","Mappers.InputsCreateOrReplaceHeaders","Parameters.input","Parameters.inputName","Mappers.InputsUpdateHeaders","Mappers.InputsGetHeaders","Mappers.InputListResult","Parameters.select","Mappers.ResourceTestStatus","Parameters.input1","Mappers.Output","Mappers.OutputsCreateOrReplaceHeaders","Parameters.output","Parameters.outputName","Mappers.OutputsUpdateHeaders","Mappers.OutputsGetHeaders","Mappers.OutputListResult","Parameters.output1","Mappers.Transformation","Mappers.TransformationsCreateOrReplaceHeaders","Parameters.transformation","Parameters.transformationName","Mappers.TransformationsUpdateHeaders","Mappers.TransformationsGetHeaders","Mappers.FunctionModel","Mappers.FunctionsCreateOrReplaceHeaders","Parameters.functionParam","Parameters.functionName","Mappers.FunctionsUpdateHeaders","Mappers.FunctionsGetHeaders","Mappers.FunctionListResult","Parameters.functionParam1","Parameters.functionRetrieveDefaultDefinitionParameters","Mappers.SubscriptionQuotasListResult","Parameters.location","createOrUpdateOperationSpec","Mappers.Cluster","Parameters.cluster","Parameters.clusterName","Mappers.ClusterListResult","Mappers.ClusterJobListResult","Mappers.PrivateEndpoint","Parameters.privateEndpoint","Parameters.privateEndpointName","Mappers.PrivateEndpointListResult","coreRestPipeline"],"mappings":"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"}