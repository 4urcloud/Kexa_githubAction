/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { HealthcareApisManagementClient } from "@azure/arm-healthcareapis";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Create or update the metadata of a service instance.
 *
 * @summary Create or update the metadata of a service instance.
 * x-ms-original-file: specification/healthcareapis/resource-manager/Microsoft.HealthcareApis/stable/2023-11-01/examples/legacy/ServiceCreate.json
 */
function createOrUpdateAServiceWithAllParameters() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["HEALTHCAREAPIS_SUBSCRIPTION_ID"] || "subid";
        const resourceGroupName = process.env["HEALTHCAREAPIS_RESOURCE_GROUP"] || "rg1";
        const resourceName = "service1";
        const serviceDescription = {
            identity: { type: "SystemAssigned" },
            kind: "fhir-R4",
            location: "westus2",
            properties: {
                accessPolicies: [
                    { objectId: "c487e7d1-3210-41a3-8ccc-e9372b78da47" },
                    { objectId: "5b307da8-43d4-492b-8b66-b0294ade872f" }
                ],
                authenticationConfiguration: {
                    audience: "https://azurehealthcareapis.com",
                    authority: "https://login.microsoftonline.com/abfde7b2-df0f-47e6-aabf-2462b07508dc",
                    smartProxyEnabled: true
                },
                corsConfiguration: {
                    allowCredentials: false,
                    headers: ["*"],
                    maxAge: 1440,
                    methods: ["DELETE", "GET", "OPTIONS", "PATCH", "POST", "PUT"],
                    origins: ["*"]
                },
                cosmosDbConfiguration: {
                    keyVaultKeyUri: "https://my-vault.vault.azure.net/keys/my-key",
                    offerThroughput: 1000
                },
                exportConfiguration: { storageAccountName: "existingStorageAccount" },
                privateEndpointConnections: [],
                publicNetworkAccess: "Disabled"
            },
            tags: {}
        };
        const credential = new DefaultAzureCredential();
        const client = new HealthcareApisManagementClient(credential, subscriptionId);
        const result = yield client.services.beginCreateOrUpdateAndWait(resourceGroupName, resourceName, serviceDescription);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Create or update the metadata of a service instance.
 *
 * @summary Create or update the metadata of a service instance.
 * x-ms-original-file: specification/healthcareapis/resource-manager/Microsoft.HealthcareApis/stable/2023-11-01/examples/legacy/ServiceCreateInDataSovereignRegionWithCmkEnabled.json
 */
function createOrUpdateAServiceWithAllParametersAndCmkEnabledInADataSovereignRegion() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["HEALTHCAREAPIS_SUBSCRIPTION_ID"] || "subid";
        const resourceGroupName = process.env["HEALTHCAREAPIS_RESOURCE_GROUP"] || "rg1";
        const resourceName = "service1";
        const serviceDescription = {
            identity: { type: "SystemAssigned" },
            kind: "fhir-R4",
            location: "Southeast Asia",
            properties: {
                accessPolicies: [
                    { objectId: "c487e7d1-3210-41a3-8ccc-e9372b78da47" },
                    { objectId: "5b307da8-43d4-492b-8b66-b0294ade872f" }
                ],
                authenticationConfiguration: {
                    audience: "https://azurehealthcareapis.com",
                    authority: "https://login.microsoftonline.com/abfde7b2-df0f-47e6-aabf-2462b07508dc",
                    smartProxyEnabled: true
                },
                corsConfiguration: {
                    allowCredentials: false,
                    headers: ["*"],
                    maxAge: 1440,
                    methods: ["DELETE", "GET", "OPTIONS", "PATCH", "POST", "PUT"],
                    origins: ["*"]
                },
                cosmosDbConfiguration: {
                    crossTenantCmkApplicationId: "de3fbeef-8c3a-428e-8b9f-4d229c8a85f4",
                    keyVaultKeyUri: "https://my-vault.vault.azure.net/keys/my-key",
                    offerThroughput: 1000
                },
                exportConfiguration: { storageAccountName: "existingStorageAccount" },
                privateEndpointConnections: [],
                publicNetworkAccess: "Disabled"
            },
            tags: {}
        };
        const credential = new DefaultAzureCredential();
        const client = new HealthcareApisManagementClient(credential, subscriptionId);
        const result = yield client.services.beginCreateOrUpdateAndWait(resourceGroupName, resourceName, serviceDescription);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Create or update the metadata of a service instance.
 *
 * @summary Create or update the metadata of a service instance.
 * x-ms-original-file: specification/healthcareapis/resource-manager/Microsoft.HealthcareApis/stable/2023-11-01/examples/legacy/ServiceCreateMinimum.json
 */
function createOrUpdateAServiceWithMinimumParameters() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["HEALTHCAREAPIS_SUBSCRIPTION_ID"] || "subid";
        const resourceGroupName = process.env["HEALTHCAREAPIS_RESOURCE_GROUP"] || "rg1";
        const resourceName = "service2";
        const serviceDescription = {
            kind: "fhir-R4",
            location: "westus2",
            properties: {
                accessPolicies: [{ objectId: "c487e7d1-3210-41a3-8ccc-e9372b78da47" }]
            },
            tags: {}
        };
        const credential = new DefaultAzureCredential();
        const client = new HealthcareApisManagementClient(credential, subscriptionId);
        const result = yield client.services.beginCreateOrUpdateAndWait(resourceGroupName, resourceName, serviceDescription);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        createOrUpdateAServiceWithAllParameters();
        createOrUpdateAServiceWithAllParametersAndCmkEnabledInADataSovereignRegion();
        createOrUpdateAServiceWithMinimumParameters();
    });
}
main().catch(console.error);
//# sourceMappingURL=servicesCreateOrUpdateSample.js.map