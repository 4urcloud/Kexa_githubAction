/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { BatchManagementClient } from "@azure/arm-batch";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Updates the properties of an existing pool.
 *
 * @summary Updates the properties of an existing pool.
 * x-ms-original-file: specification/batch/resource-manager/Microsoft.Batch/stable/2024-02-01/examples/PoolUpdate_EnableAutoScale.json
 */
function updatePoolEnableAutoscale() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["BATCH_SUBSCRIPTION_ID"] || "subid";
        const resourceGroupName = process.env["BATCH_RESOURCE_GROUP"] || "default-azurebatch-japaneast";
        const accountName = "sampleacct";
        const poolName = "testpool";
        const parameters = {
            scaleSettings: { autoScale: { formula: "$TargetDedicatedNodes=34" } },
        };
        const credential = new DefaultAzureCredential();
        const client = new BatchManagementClient(credential, subscriptionId);
        const result = yield client.poolOperations.update(resourceGroupName, accountName, poolName, parameters);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Updates the properties of an existing pool.
 *
 * @summary Updates the properties of an existing pool.
 * x-ms-original-file: specification/batch/resource-manager/Microsoft.Batch/stable/2024-02-01/examples/PoolUpdate_OtherProperties.json
 */
function updatePoolOtherProperties() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["BATCH_SUBSCRIPTION_ID"] || "subid";
        const resourceGroupName = process.env["BATCH_RESOURCE_GROUP"] || "default-azurebatch-japaneast";
        const accountName = "sampleacct";
        const poolName = "testpool";
        const parameters = {
            applicationPackages: [
                {
                    id: "/subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct/pools/testpool/applications/app_1234",
                },
                {
                    id: "/subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct/pools/testpool/applications/app_5678",
                    version: "1.0",
                },
            ],
            certificates: [
                {
                    id: "/subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct/pools/testpool/certificates/sha1-1234567",
                    storeLocation: "LocalMachine",
                    storeName: "MY",
                },
            ],
            metadata: [{ name: "key1", value: "value1" }],
            targetNodeCommunicationMode: "Simplified",
        };
        const credential = new DefaultAzureCredential();
        const client = new BatchManagementClient(credential, subscriptionId);
        const result = yield client.poolOperations.update(resourceGroupName, accountName, poolName, parameters);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Updates the properties of an existing pool.
 *
 * @summary Updates the properties of an existing pool.
 * x-ms-original-file: specification/batch/resource-manager/Microsoft.Batch/stable/2024-02-01/examples/PoolUpdate_RemoveStartTask.json
 */
function updatePoolRemoveStartTask() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["BATCH_SUBSCRIPTION_ID"] || "subid";
        const resourceGroupName = process.env["BATCH_RESOURCE_GROUP"] || "default-azurebatch-japaneast";
        const accountName = "sampleacct";
        const poolName = "testpool";
        const parameters = { startTask: {} };
        const credential = new DefaultAzureCredential();
        const client = new BatchManagementClient(credential, subscriptionId);
        const result = yield client.poolOperations.update(resourceGroupName, accountName, poolName, parameters);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Updates the properties of an existing pool.
 *
 * @summary Updates the properties of an existing pool.
 * x-ms-original-file: specification/batch/resource-manager/Microsoft.Batch/stable/2024-02-01/examples/PoolUpdate_ResizePool.json
 */
function updatePoolResizePool() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["BATCH_SUBSCRIPTION_ID"] || "subid";
        const resourceGroupName = process.env["BATCH_RESOURCE_GROUP"] || "default-azurebatch-japaneast";
        const accountName = "sampleacct";
        const poolName = "testpool";
        const parameters = {
            scaleSettings: {
                fixedScale: {
                    nodeDeallocationOption: "TaskCompletion",
                    resizeTimeout: "PT8M",
                    targetDedicatedNodes: 5,
                    targetLowPriorityNodes: 0,
                },
            },
        };
        const credential = new DefaultAzureCredential();
        const client = new BatchManagementClient(credential, subscriptionId);
        const result = yield client.poolOperations.update(resourceGroupName, accountName, poolName, parameters);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        updatePoolEnableAutoscale();
        updatePoolOtherProperties();
        updatePoolRemoveStartTask();
        updatePoolResizePool();
    });
}
main().catch(console.error);
//# sourceMappingURL=poolUpdateSample.js.map