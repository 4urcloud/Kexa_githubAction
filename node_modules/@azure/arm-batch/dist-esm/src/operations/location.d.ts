import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Location } from "../operationsInterfaces";
import { BatchManagementClient } from "../batchManagementClient";
import { SupportedSku, LocationListSupportedVirtualMachineSkusOptionalParams, LocationListSupportedCloudServiceSkusOptionalParams, LocationGetQuotasOptionalParams, LocationGetQuotasResponse, CheckNameAvailabilityParameters, LocationCheckNameAvailabilityOptionalParams, LocationCheckNameAvailabilityResponse } from "../models";
/** Class containing Location operations. */
export declare class LocationImpl implements Location {
    private readonly client;
    /**
     * Initialize a new instance of the class Location class.
     * @param client Reference to the service client
     */
    constructor(client: BatchManagementClient);
    /**
     * Gets the list of Batch supported Virtual Machine VM sizes available at the given location.
     * @param locationName The region for which to retrieve Batch service supported SKUs.
     * @param options The options parameters.
     */
    listSupportedVirtualMachineSkus(locationName: string, options?: LocationListSupportedVirtualMachineSkusOptionalParams): PagedAsyncIterableIterator<SupportedSku>;
    private listSupportedVirtualMachineSkusPagingPage;
    private listSupportedVirtualMachineSkusPagingAll;
    /**
     * Gets the list of Batch supported Cloud Service VM sizes available at the given location.
     * @param locationName The region for which to retrieve Batch service supported SKUs.
     * @param options The options parameters.
     */
    listSupportedCloudServiceSkus(locationName: string, options?: LocationListSupportedCloudServiceSkusOptionalParams): PagedAsyncIterableIterator<SupportedSku>;
    private listSupportedCloudServiceSkusPagingPage;
    private listSupportedCloudServiceSkusPagingAll;
    /**
     * Gets the Batch service quotas for the specified subscription at the given location.
     * @param locationName The region for which to retrieve Batch service quotas.
     * @param options The options parameters.
     */
    getQuotas(locationName: string, options?: LocationGetQuotasOptionalParams): Promise<LocationGetQuotasResponse>;
    /**
     * Gets the list of Batch supported Virtual Machine VM sizes available at the given location.
     * @param locationName The region for which to retrieve Batch service supported SKUs.
     * @param options The options parameters.
     */
    private _listSupportedVirtualMachineSkus;
    /**
     * Gets the list of Batch supported Cloud Service VM sizes available at the given location.
     * @param locationName The region for which to retrieve Batch service supported SKUs.
     * @param options The options parameters.
     */
    private _listSupportedCloudServiceSkus;
    /**
     * Checks whether the Batch account name is available in the specified region.
     * @param locationName The desired region for the name check.
     * @param parameters Properties needed to check the availability of a name.
     * @param options The options parameters.
     */
    checkNameAvailability(locationName: string, parameters: CheckNameAvailabilityParameters, options?: LocationCheckNameAvailabilityOptionalParams): Promise<LocationCheckNameAvailabilityResponse>;
    /**
     * ListSupportedVirtualMachineSkusNext
     * @param locationName The region for which to retrieve Batch service supported SKUs.
     * @param nextLink The nextLink from the previous successful call to the
     *                 ListSupportedVirtualMachineSkus method.
     * @param options The options parameters.
     */
    private _listSupportedVirtualMachineSkusNext;
    /**
     * ListSupportedCloudServiceSkusNext
     * @param locationName The region for which to retrieve Batch service supported SKUs.
     * @param nextLink The nextLink from the previous successful call to the ListSupportedCloudServiceSkus
     *                 method.
     * @param options The options parameters.
     */
    private _listSupportedCloudServiceSkusNext;
}
//# sourceMappingURL=location.d.ts.map