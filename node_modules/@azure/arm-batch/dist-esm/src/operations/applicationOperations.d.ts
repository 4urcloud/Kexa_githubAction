import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { ApplicationOperations } from "../operationsInterfaces";
import { BatchManagementClient } from "../batchManagementClient";
import { Application, ApplicationListOptionalParams, ApplicationCreateOptionalParams, ApplicationCreateResponse, ApplicationDeleteOptionalParams, ApplicationGetOptionalParams, ApplicationGetResponse, ApplicationUpdateOptionalParams, ApplicationUpdateResponse } from "../models";
/** Class containing ApplicationOperations operations. */
export declare class ApplicationOperationsImpl implements ApplicationOperations {
    private readonly client;
    /**
     * Initialize a new instance of the class ApplicationOperations class.
     * @param client Reference to the service client
     */
    constructor(client: BatchManagementClient);
    /**
     * Lists all of the applications in the specified account.
     * @param resourceGroupName The name of the resource group that contains the Batch account.
     * @param accountName The name of the Batch account.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, accountName: string, options?: ApplicationListOptionalParams): PagedAsyncIterableIterator<Application>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Adds an application to the specified Batch account.
     * @param resourceGroupName The name of the resource group that contains the Batch account.
     * @param accountName The name of the Batch account.
     * @param applicationName The name of the application. This must be unique within the account.
     * @param options The options parameters.
     */
    create(resourceGroupName: string, accountName: string, applicationName: string, options?: ApplicationCreateOptionalParams): Promise<ApplicationCreateResponse>;
    /**
     * Deletes an application.
     * @param resourceGroupName The name of the resource group that contains the Batch account.
     * @param accountName The name of the Batch account.
     * @param applicationName The name of the application. This must be unique within the account.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, accountName: string, applicationName: string, options?: ApplicationDeleteOptionalParams): Promise<void>;
    /**
     * Gets information about the specified application.
     * @param resourceGroupName The name of the resource group that contains the Batch account.
     * @param accountName The name of the Batch account.
     * @param applicationName The name of the application. This must be unique within the account.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, accountName: string, applicationName: string, options?: ApplicationGetOptionalParams): Promise<ApplicationGetResponse>;
    /**
     * Updates settings for the specified application.
     * @param resourceGroupName The name of the resource group that contains the Batch account.
     * @param accountName The name of the Batch account.
     * @param applicationName The name of the application. This must be unique within the account.
     * @param parameters The parameters for the request.
     * @param options The options parameters.
     */
    update(resourceGroupName: string, accountName: string, applicationName: string, parameters: Application, options?: ApplicationUpdateOptionalParams): Promise<ApplicationUpdateResponse>;
    /**
     * Lists all of the applications in the specified account.
     * @param resourceGroupName The name of the resource group that contains the Batch account.
     * @param accountName The name of the Batch account.
     * @param options The options parameters.
     */
    private _list;
    /**
     * ListNext
     * @param resourceGroupName The name of the resource group that contains the Batch account.
     * @param accountName The name of the Batch account.
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=applicationOperations.d.ts.map