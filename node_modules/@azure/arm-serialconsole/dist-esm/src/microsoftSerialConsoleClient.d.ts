import * as coreClient from "@azure/core-client";
import * as coreAuth from "@azure/core-auth";
import { SerialPorts } from "./operationsInterfaces";
import { MicrosoftSerialConsoleClientOptionalParams, ListOperationsOptionalParams, ListOperationsResponse, GetConsoleStatusOptionalParams, GetConsoleStatusResponse, DisableConsoleOptionalParams, DisableConsoleResponse, EnableConsoleOptionalParams, EnableConsoleResponse } from "./models";
export declare class MicrosoftSerialConsoleClient extends coreClient.ServiceClient {
    $host: string;
    apiVersion: string;
    subscriptionId: string;
    /**
     * Initializes a new instance of the MicrosoftSerialConsoleClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId Subscription ID which uniquely identifies the Microsoft Azure subscription.
     *                       The subscription ID forms part of the URI for every service call requiring it.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: MicrosoftSerialConsoleClientOptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    /**
     * Gets a list of Serial Console API operations.
     * @param options The options parameters.
     */
    listOperations(options?: ListOperationsOptionalParams): Promise<ListOperationsResponse>;
    /**
     * Gets whether or not Serial Console is disabled for a given subscription
     * @param defaultParam Default parameter. Leave the value as "default".
     * @param options The options parameters.
     */
    getConsoleStatus(defaultParam: string, options?: GetConsoleStatusOptionalParams): Promise<GetConsoleStatusResponse>;
    /**
     * Disables the Serial Console service for all VMs and VM scale sets in the provided subscription
     * @param defaultParam Default parameter. Leave the value as "default".
     * @param options The options parameters.
     */
    disableConsole(defaultParam: string, options?: DisableConsoleOptionalParams): Promise<DisableConsoleResponse>;
    /**
     * Enables the Serial Console service for all VMs and VM scale sets in the provided subscription
     * @param defaultParam Default parameter. Leave the value as "default".
     * @param options The options parameters.
     */
    enableConsole(defaultParam: string, options?: EnableConsoleOptionalParams): Promise<EnableConsoleResponse>;
    serialPorts: SerialPorts;
}
//# sourceMappingURL=microsoftSerialConsoleClient.d.ts.map