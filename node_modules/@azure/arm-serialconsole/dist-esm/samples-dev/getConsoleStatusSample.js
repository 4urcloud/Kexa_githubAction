/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { MicrosoftSerialConsoleClient } from "@azure/arm-serialconsole";
import { DefaultAzureCredential } from "@azure/identity";
/**
 * This sample demonstrates how to Gets whether or not Serial Console is disabled for a given subscription
 *
 * @summary Gets whether or not Serial Console is disabled for a given subscription
 * x-ms-original-file: specification/serialconsole/resource-manager/Microsoft.SerialConsole/stable/2018-05-01/examples/SerialConsoleStatus.json
 */
function getTheSerialConsoleDisabledStatusForASubscription() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "00000000-00000-0000-0000-000000000000";
        const defaultParam = "default";
        const credential = new DefaultAzureCredential();
        const client = new MicrosoftSerialConsoleClient(credential, subscriptionId);
        const result = yield client.getConsoleStatus(defaultParam);
        console.log(result);
    });
}
getTheSerialConsoleDisabledStatusForASubscription().catch(console.error);
//# sourceMappingURL=getConsoleStatusSample.js.map