"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var tslib=require("tslib"),coreClient=require("@azure/core-client"),coreRestPipeline=require("@azure/core-rest-pipeline");function _interopNamespace(a){var s;return a&&a.__esModule?a:(s=Object.create(null),a&&Object.keys(a).forEach(function(e){var r;"default"!==e&&(r=Object.getOwnPropertyDescriptor(a,e),Object.defineProperty(s,e,r.get?r:{enumerable:!0,get:function(){return a[e]}}))}),s.default=a,Object.freeze(s))}var coreClient__namespace=_interopNamespace(coreClient),coreRestPipeline__namespace=_interopNamespace(coreRestPipeline);const SerialConsoleOperations={type:{name:"Composite",className:"SerialConsoleOperations",modelProperties:{value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"SerialConsoleOperationsValueItem"}}}}}}},SerialConsoleOperationsValueItem={type:{name:"Composite",className:"SerialConsoleOperationsValueItem",modelProperties:{name:{serializedName:"name",type:{name:"String"}},isDataAction:{serializedName:"isDataAction",type:{name:"String"}},display:{serializedName:"display",type:{name:"Composite",className:"SerialConsoleOperationsValueItemDisplay"}}}}},SerialConsoleOperationsValueItemDisplay={type:{name:"Composite",className:"SerialConsoleOperationsValueItemDisplay",modelProperties:{provider:{serializedName:"provider",type:{name:"String"}},resource:{serializedName:"resource",type:{name:"String"}},operation:{serializedName:"operation",type:{name:"String"}},description:{serializedName:"description",type:{name:"String"}}}}},SerialConsoleStatus={type:{name:"Composite",className:"SerialConsoleStatus",modelProperties:{disabled:{serializedName:"disabled",type:{name:"Boolean"}}}}},GetSerialConsoleSubscriptionNotFound={type:{name:"Composite",className:"GetSerialConsoleSubscriptionNotFound",modelProperties:{code:{serializedName:"code",type:{name:"String"}},message:{serializedName:"message",type:{name:"String"}}}}},DisableSerialConsoleResult={type:{name:"Composite",className:"DisableSerialConsoleResult",modelProperties:{disabled:{serializedName:"disabled",type:{name:"Boolean"}}}}},EnableSerialConsoleResult={type:{name:"Composite",className:"EnableSerialConsoleResult",modelProperties:{disabled:{serializedName:"disabled",type:{name:"Boolean"}}}}},SerialPortListResult={type:{name:"Composite",className:"SerialPortListResult",modelProperties:{value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"SerialPort"}}}}}}},Resource={type:{name:"Composite",className:"Resource",modelProperties:{id:{serializedName:"id",readOnly:!0,type:{name:"String"}},name:{serializedName:"name",readOnly:!0,type:{name:"String"}},type:{serializedName:"type",readOnly:!0,type:{name:"String"}}}}},CloudError={type:{name:"Composite",className:"CloudError",modelProperties:{error:{serializedName:"error",type:{name:"Composite",className:"CloudErrorBody"}}}}},CloudErrorBody={type:{name:"Composite",className:"CloudErrorBody",modelProperties:{code:{serializedName:"code",type:{name:"String"}},message:{serializedName:"message",type:{name:"String"}},target:{serializedName:"target",type:{name:"String"}},details:{serializedName:"details",type:{name:"Sequence",element:{type:{name:"Composite",className:"CloudErrorBody"}}}}}}},SerialPortConnectResult={type:{name:"Composite",className:"SerialPortConnectResult",modelProperties:{connectionString:{serializedName:"connectionString",type:{name:"String"}}}}},ProxyResource={type:{name:"Composite",className:"ProxyResource",modelProperties:Object.assign({},Resource.type.modelProperties)}},SerialPort={type:{name:"Composite",className:"SerialPort",modelProperties:Object.assign(Object.assign({},ProxyResource.type.modelProperties),{state:{serializedName:"properties.state",type:{name:"Enum",allowedValues:["enabled","disabled"]}}})}};var Mappers=Object.freeze({__proto__:null,SerialConsoleOperations:SerialConsoleOperations,SerialConsoleOperationsValueItem:SerialConsoleOperationsValueItem,SerialConsoleOperationsValueItemDisplay:SerialConsoleOperationsValueItemDisplay,SerialConsoleStatus:SerialConsoleStatus,GetSerialConsoleSubscriptionNotFound:GetSerialConsoleSubscriptionNotFound,DisableSerialConsoleResult:DisableSerialConsoleResult,EnableSerialConsoleResult:EnableSerialConsoleResult,SerialPortListResult:SerialPortListResult,Resource:Resource,CloudError:CloudError,CloudErrorBody:CloudErrorBody,SerialPortConnectResult:SerialPortConnectResult,ProxyResource:ProxyResource,SerialPort:SerialPort});const accept={parameterPath:"accept",mapper:{defaultValue:"application/json",isConstant:!0,serializedName:"Accept",type:{name:"String"}}},$host={parameterPath:"$host",mapper:{serializedName:"$host",required:!0,type:{name:"String"}},skipEncoding:!0},apiVersion={parameterPath:"apiVersion",mapper:{defaultValue:"2018-05-01",isConstant:!0,serializedName:"api-version",type:{name:"String"}}},subscriptionId={parameterPath:"subscriptionId",mapper:{serializedName:"subscriptionId",required:!0,type:{name:"String"}}},defaultParam={parameterPath:"defaultParam",mapper:{serializedName:"default",required:!0,type:{name:"String"}}},resourceGroupName={parameterPath:"resourceGroupName",mapper:{serializedName:"resourceGroupName",required:!0,type:{name:"String"}}},resourceProviderNamespace={parameterPath:"resourceProviderNamespace",mapper:{serializedName:"resourceProviderNamespace",required:!0,type:{name:"String"}}},parentResourceType={parameterPath:"parentResourceType",mapper:{serializedName:"parentResourceType",required:!0,type:{name:"String"}},skipEncoding:!0},parentResource={parameterPath:"parentResource",mapper:{serializedName:"parentResource",required:!0,type:{name:"String"}}},serialPort={parameterPath:"serialPort",mapper:{serializedName:"serialPort",required:!0,type:{name:"String"}}},contentType={parameterPath:["options","contentType"],mapper:{defaultValue:"application/json",isConstant:!0,serializedName:"Content-Type",type:{name:"String"}}},parameters={parameterPath:"parameters",mapper:SerialPort};class SerialPortsImpl{constructor(e){this.client=e}list(e,r,a,s,o){return this.client.sendOperationRequest({resourceGroupName:e,resourceProviderNamespace:r,parentResourceType:a,parentResource:s,options:o},listOperationSpec)}get(e,r,a,s,o,t){return this.client.sendOperationRequest({resourceGroupName:e,resourceProviderNamespace:r,parentResourceType:a,parentResource:s,serialPort:o,options:t},getOperationSpec)}create(e,r,a,s,o,t,i){return this.client.sendOperationRequest({resourceGroupName:e,resourceProviderNamespace:r,parentResourceType:a,parentResource:s,serialPort:o,parameters:t,options:i},createOperationSpec)}delete(e,r,a,s,o,t){return this.client.sendOperationRequest({resourceGroupName:e,resourceProviderNamespace:r,parentResourceType:a,parentResource:s,serialPort:o,options:t},deleteOperationSpec)}listBySubscriptions(e){return this.client.sendOperationRequest({options:e},listBySubscriptionsOperationSpec)}connect(e,r,a,s,o,t){return this.client.sendOperationRequest({resourceGroupName:e,resourceProviderNamespace:r,parentResourceType:a,parentResource:s,serialPort:o,options:t},connectOperationSpec)}}const serializer$1=coreClient__namespace.createSerializer(Mappers,!1),listOperationSpec={path:"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourceType}/{parentResource}/providers/Microsoft.SerialConsole/serialPorts",httpMethod:"GET",responses:{200:{bodyMapper:SerialPortListResult},default:{bodyMapper:CloudError}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,resourceProviderNamespace,parentResourceType,parentResource],headerParameters:[accept],serializer:serializer$1},getOperationSpec={path:"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourceType}/{parentResource}/providers/Microsoft.SerialConsole/serialPorts/{serialPort}",httpMethod:"GET",responses:{200:{bodyMapper:SerialPort},default:{bodyMapper:CloudError}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,resourceProviderNamespace,parentResourceType,parentResource,serialPort],headerParameters:[accept],serializer:serializer$1},createOperationSpec={path:"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourceType}/{parentResource}/providers/Microsoft.SerialConsole/serialPorts/{serialPort}",httpMethod:"PUT",responses:{201:{bodyMapper:SerialPort},default:{bodyMapper:CloudError}},requestBody:parameters,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,resourceProviderNamespace,parentResourceType,parentResource,serialPort],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer$1},deleteOperationSpec={path:"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourceType}/{parentResource}/providers/Microsoft.SerialConsole/serialPorts/{serialPort}",httpMethod:"DELETE",responses:{200:{},204:{},default:{bodyMapper:CloudError}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,resourceProviderNamespace,parentResourceType,parentResource,serialPort],headerParameters:[accept],serializer:serializer$1},listBySubscriptionsOperationSpec={path:"/subscriptions/{subscriptionId}/providers/Microsoft.SerialConsole/serialPorts",httpMethod:"GET",responses:{200:{bodyMapper:SerialPortListResult},default:{bodyMapper:CloudError}},urlParameters:[$host,subscriptionId],headerParameters:[accept],serializer:serializer$1},connectOperationSpec={path:"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourceType}/{parentResource}/providers/Microsoft.SerialConsole/serialPorts/{serialPort}/connect",httpMethod:"POST",responses:{200:{bodyMapper:SerialPortConnectResult},default:{bodyMapper:CloudError}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,resourceProviderNamespace,parentResourceType,parentResource,serialPort],headerParameters:[accept],serializer:serializer$1};class MicrosoftSerialConsoleClient extends coreClient__namespace.ServiceClient{constructor(e,r,a){if(void 0===e)throw new Error("'credentials' cannot be null");if(void 0===r)throw new Error("'subscriptionId' cannot be null");var s,o="azsdk-js-arm-serialconsole/2.1.0",o=(a=a||{}).userAgentOptions&&a.userAgentOptions.userAgentPrefix?a.userAgentOptions.userAgentPrefix+" "+o:o,o=Object.assign(Object.assign(Object.assign({},{requestContentType:"application/json; charset=utf-8",credential:e}),a),{userAgentOptions:{userAgentPrefix:o},endpoint:null!=(o=null!=(o=a.endpoint)?o:a.baseUri)?o:"https://management.azure.com"});super(o);let t=!1;null!=a&&a.pipeline&&0<a.pipeline.getOrderedPolicies().length&&(s=a.pipeline.getOrderedPolicies(),t=s.some(e=>e.name===coreRestPipeline__namespace.bearerTokenAuthenticationPolicyName)),a&&a.pipeline&&0!=a.pipeline.getOrderedPolicies().length&&t||(this.pipeline.removePolicy({name:coreRestPipeline__namespace.bearerTokenAuthenticationPolicyName}),this.pipeline.addPolicy(coreRestPipeline__namespace.bearerTokenAuthenticationPolicy({credential:e,scopes:null!=(s=o.credentialScopes)?s:o.endpoint+"/.default",challengeCallbacks:{authorizeRequestOnChallenge:coreClient__namespace.authorizeRequestOnClaimChallenge}}))),this.subscriptionId=r,this.$host=a.$host||"https://management.azure.com",this.apiVersion=a.apiVersion||"2018-05-01",this.serialPorts=new SerialPortsImpl(this),this.addCustomApiVersionPolicy(a.apiVersion)}addCustomApiVersionPolicy(o){o&&this.pipeline.addPolicy({name:"CustomApiVersionPolicy",sendRequest(a,s){return tslib.__awaiter(this,void 0,void 0,function*(){var e,r=a.url.split("?");return 1<r.length&&(e=r[1].split("&").map(e=>-1<e.indexOf("api-version")?"api-version="+o:e),a.url=r[0]+"?"+e.join("&")),s(a)})}})}listOperations(e){return this.sendOperationRequest({options:e},listOperationsOperationSpec)}getConsoleStatus(e,r){return this.sendOperationRequest({defaultParam:e,options:r},getConsoleStatusOperationSpec)}disableConsole(e,r){return this.sendOperationRequest({defaultParam:e,options:r},disableConsoleOperationSpec)}enableConsole(e,r){return this.sendOperationRequest({defaultParam:e,options:r},enableConsoleOperationSpec)}}const serializer=coreClient__namespace.createSerializer(Mappers,!1),listOperationsOperationSpec={path:"/providers/Microsoft.SerialConsole/operations",httpMethod:"GET",responses:{200:{bodyMapper:SerialConsoleOperations}},queryParameters:[apiVersion],urlParameters:[$host],headerParameters:[accept],serializer:serializer},getConsoleStatusOperationSpec={path:"/subscriptions/{subscriptionId}/providers/Microsoft.SerialConsole/consoleServices/{default}",httpMethod:"GET",responses:{200:{bodyMapper:SerialConsoleStatus},404:{bodyMapper:GetSerialConsoleSubscriptionNotFound}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,defaultParam],headerParameters:[accept],serializer:serializer},disableConsoleOperationSpec={path:"/subscriptions/{subscriptionId}/providers/Microsoft.SerialConsole/consoleServices/{default}/disableConsole",httpMethod:"POST",responses:{200:{bodyMapper:DisableSerialConsoleResult},404:{bodyMapper:GetSerialConsoleSubscriptionNotFound}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,defaultParam],headerParameters:[accept],serializer:serializer},enableConsoleOperationSpec={path:"/subscriptions/{subscriptionId}/providers/Microsoft.SerialConsole/consoleServices/{default}/enableConsole",httpMethod:"POST",responses:{200:{bodyMapper:EnableSerialConsoleResult},404:{bodyMapper:GetSerialConsoleSubscriptionNotFound}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,defaultParam],headerParameters:[accept],serializer:serializer};exports.MicrosoftSerialConsoleClient=MicrosoftSerialConsoleClient;