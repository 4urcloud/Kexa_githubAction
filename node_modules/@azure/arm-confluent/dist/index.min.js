"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var tslib=require("tslib"),coreClient=require("@azure/core-client"),coreRestPipeline=require("@azure/core-rest-pipeline"),coreLro=require("@azure/core-lro");function _interopNamespaceDefault(r){var i=Object.create(null);return r&&Object.keys(r).forEach(function(e){var t;"default"!==e&&(t=Object.getOwnPropertyDescriptor(r,e),Object.defineProperty(i,e,t.get?t:{enumerable:!0,get:function(){return r[e]}}))}),i.default=r,Object.freeze(i)}var coreClient__namespace=_interopNamespaceDefault(coreClient),coreRestPipeline__namespace=_interopNamespaceDefault(coreRestPipeline);const pageMap=new WeakMap;function getContinuationToken(e){return"object"!=typeof e||null===e||null==(e=pageMap.get(e))?void 0:e.continuationToken}function setContinuationToken(e,t){var r;"object"==typeof e&&null!==e&&t&&((r=null!=(r=pageMap.get(e))?r:{}).continuationToken=t,pageMap.set(e,r))}exports.KnownCreatedByType=void 0,function(e){e.User="User",e.Application="Application",e.ManagedIdentity="ManagedIdentity",e.Key="Key"}(exports.KnownCreatedByType||(exports.KnownCreatedByType={})),exports.KnownProvisionState=void 0,function(e){e.Accepted="Accepted",e.Creating="Creating",e.Updating="Updating",e.Deleting="Deleting",e.Succeeded="Succeeded",e.Failed="Failed",e.Canceled="Canceled",e.Deleted="Deleted",e.NotSpecified="NotSpecified"}(exports.KnownProvisionState||(exports.KnownProvisionState={})),exports.KnownSaaSOfferStatus=void 0,function(e){e.Started="Started",e.PendingFulfillmentStart="PendingFulfillmentStart",e.InProgress="InProgress",e.Subscribed="Subscribed",e.Suspended="Suspended",e.Reinstated="Reinstated",e.Succeeded="Succeeded",e.Failed="Failed",e.Unsubscribed="Unsubscribed",e.Updating="Updating"}(exports.KnownSaaSOfferStatus||(exports.KnownSaaSOfferStatus={}));const ConfluentAgreementResourceListResponse={type:{name:"Composite",className:"ConfluentAgreementResourceListResponse",modelProperties:{value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"ConfluentAgreementResource"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},ConfluentAgreementResource={type:{name:"Composite",className:"ConfluentAgreementResource",modelProperties:{id:{serializedName:"id",readOnly:!0,type:{name:"String"}},name:{serializedName:"name",readOnly:!0,type:{name:"String"}},type:{serializedName:"type",readOnly:!0,type:{name:"String"}},systemData:{serializedName:"systemData",type:{name:"Composite",className:"SystemData"}},publisher:{serializedName:"properties.publisher",type:{name:"String"}},product:{serializedName:"properties.product",type:{name:"String"}},plan:{serializedName:"properties.plan",type:{name:"String"}},licenseTextLink:{serializedName:"properties.licenseTextLink",type:{name:"String"}},privacyPolicyLink:{serializedName:"properties.privacyPolicyLink",type:{name:"String"}},retrieveDatetime:{serializedName:"properties.retrieveDatetime",type:{name:"DateTime"}},signature:{serializedName:"properties.signature",type:{name:"String"}},accepted:{serializedName:"properties.accepted",type:{name:"Boolean"}}}}},SystemData={type:{name:"Composite",className:"SystemData",modelProperties:{createdBy:{serializedName:"createdBy",type:{name:"String"}},createdByType:{serializedName:"createdByType",type:{name:"String"}},createdAt:{serializedName:"createdAt",type:{name:"DateTime"}},lastModifiedBy:{serializedName:"lastModifiedBy",type:{name:"String"}},lastModifiedByType:{serializedName:"lastModifiedByType",type:{name:"String"}},lastModifiedAt:{serializedName:"lastModifiedAt",type:{name:"DateTime"}}}}},ResourceProviderDefaultErrorResponse={type:{name:"Composite",className:"ResourceProviderDefaultErrorResponse",modelProperties:{error:{serializedName:"error",type:{name:"Composite",className:"ErrorResponseBody"}}}}},ErrorResponseBody={type:{name:"Composite",className:"ErrorResponseBody",modelProperties:{code:{serializedName:"code",readOnly:!0,type:{name:"String"}},message:{serializedName:"message",readOnly:!0,type:{name:"String"}},target:{serializedName:"target",readOnly:!0,type:{name:"String"}},details:{serializedName:"details",readOnly:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"ErrorResponseBody"}}}}}}},OperationListResult={type:{name:"Composite",className:"OperationListResult",modelProperties:{value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"OperationResult"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},OperationResult={type:{name:"Composite",className:"OperationResult",modelProperties:{name:{serializedName:"name",type:{name:"String"}},display:{serializedName:"display",type:{name:"Composite",className:"OperationDisplay"}},isDataAction:{serializedName:"isDataAction",type:{name:"Boolean"}}}}},OperationDisplay={type:{name:"Composite",className:"OperationDisplay",modelProperties:{provider:{serializedName:"provider",type:{name:"String"}},resource:{serializedName:"resource",type:{name:"String"}},operation:{serializedName:"operation",type:{name:"String"}},description:{serializedName:"description",type:{name:"String"}}}}},OrganizationResourceListResult={type:{name:"Composite",className:"OrganizationResourceListResult",modelProperties:{value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"OrganizationResource"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},OrganizationResource={type:{name:"Composite",className:"OrganizationResource",modelProperties:{id:{serializedName:"id",readOnly:!0,type:{name:"String"}},name:{serializedName:"name",readOnly:!0,type:{name:"String"}},type:{serializedName:"type",readOnly:!0,type:{name:"String"}},systemData:{serializedName:"systemData",type:{name:"Composite",className:"SystemData"}},tags:{serializedName:"tags",type:{name:"Dictionary",value:{type:{name:"String"}}}},location:{serializedName:"location",type:{name:"String"}},createdTime:{serializedName:"properties.createdTime",readOnly:!0,type:{name:"DateTime"}},provisioningState:{serializedName:"properties.provisioningState",readOnly:!0,type:{name:"String"}},organizationId:{serializedName:"properties.organizationId",readOnly:!0,type:{name:"String"}},ssoUrl:{serializedName:"properties.ssoUrl",readOnly:!0,type:{name:"String"}},offerDetail:{serializedName:"properties.offerDetail",type:{name:"Composite",className:"OfferDetail"}},userDetail:{serializedName:"properties.userDetail",type:{name:"Composite",className:"UserDetail"}},linkOrganization:{serializedName:"properties.linkOrganization",type:{name:"Composite",className:"LinkOrganization"}}}}},OfferDetail={type:{name:"Composite",className:"OfferDetail",modelProperties:{publisherId:{constraints:{MaxLength:50},serializedName:"publisherId",required:!0,type:{name:"String"}},id:{constraints:{MaxLength:50},serializedName:"id",required:!0,type:{name:"String"}},planId:{constraints:{MaxLength:200},serializedName:"planId",required:!0,type:{name:"String"}},planName:{constraints:{MaxLength:200},serializedName:"planName",required:!0,type:{name:"String"}},termUnit:{constraints:{MaxLength:25},serializedName:"termUnit",required:!0,type:{name:"String"}},termId:{constraints:{MaxLength:50},serializedName:"termId",type:{name:"String"}},privateOfferId:{constraints:{MaxLength:255},serializedName:"privateOfferId",type:{name:"String"}},privateOfferIds:{serializedName:"privateOfferIds",type:{name:"Sequence",element:{type:{name:"String"}}}},status:{serializedName:"status",type:{name:"String"}}}}},UserDetail={type:{name:"Composite",className:"UserDetail",modelProperties:{firstName:{constraints:{MaxLength:50},serializedName:"firstName",type:{name:"String"}},lastName:{constraints:{MaxLength:50},serializedName:"lastName",type:{name:"String"}},emailAddress:{constraints:{Pattern:new RegExp("^\\S+@\\S+\\.\\S+$")},serializedName:"emailAddress",required:!0,type:{name:"String"}},userPrincipalName:{serializedName:"userPrincipalName",type:{name:"String"}},aadEmail:{serializedName:"aadEmail",type:{name:"String"}}}}},LinkOrganization={type:{name:"Composite",className:"LinkOrganization",modelProperties:{token:{serializedName:"token",required:!0,type:{name:"String"}}}}},OrganizationResourceUpdate={type:{name:"Composite",className:"OrganizationResourceUpdate",modelProperties:{tags:{serializedName:"tags",type:{name:"Dictionary",value:{type:{name:"String"}}}}}}},ValidationResponse={type:{name:"Composite",className:"ValidationResponse",modelProperties:{info:{serializedName:"info",type:{name:"Dictionary",value:{type:{name:"String"}}}}}}},ListAccessRequestModel={type:{name:"Composite",className:"ListAccessRequestModel",modelProperties:{searchFilters:{serializedName:"searchFilters",type:{name:"Dictionary",value:{type:{name:"String"}}}}}}},AccessListUsersSuccessResponse={type:{name:"Composite",className:"AccessListUsersSuccessResponse",modelProperties:{kind:{serializedName:"kind",type:{name:"String"}},metadata:{serializedName:"metadata",type:{name:"Composite",className:"ConfluentListMetadata"}},data:{serializedName:"data",type:{name:"Sequence",element:{type:{name:"Composite",className:"UserRecord"}}}}}}},ConfluentListMetadata={type:{name:"Composite",className:"ConfluentListMetadata",modelProperties:{first:{serializedName:"first",type:{name:"String"}},last:{serializedName:"last",type:{name:"String"}},prev:{serializedName:"prev",type:{name:"String"}},next:{serializedName:"next",type:{name:"String"}},totalSize:{serializedName:"total_size",type:{name:"Number"}}}}},UserRecord={type:{name:"Composite",className:"UserRecord",modelProperties:{kind:{serializedName:"kind",type:{name:"String"}},id:{serializedName:"id",type:{name:"String"}},metadata:{serializedName:"metadata",type:{name:"Composite",className:"MetadataEntity"}},email:{serializedName:"email",type:{name:"String"}},fullName:{serializedName:"full_name",type:{name:"String"}},authType:{serializedName:"auth_type",type:{name:"String"}}}}},MetadataEntity={type:{name:"Composite",className:"MetadataEntity",modelProperties:{self:{serializedName:"self",type:{name:"String"}},resourceName:{serializedName:"resource_name",type:{name:"String"}},createdAt:{serializedName:"created_at",type:{name:"String"}},updatedAt:{serializedName:"updated_at",type:{name:"String"}},deletedAt:{serializedName:"deleted_at",type:{name:"String"}}}}},AccessListServiceAccountsSuccessResponse={type:{name:"Composite",className:"AccessListServiceAccountsSuccessResponse",modelProperties:{kind:{serializedName:"kind",type:{name:"String"}},metadata:{serializedName:"metadata",type:{name:"Composite",className:"ConfluentListMetadata"}},data:{serializedName:"data",type:{name:"Sequence",element:{type:{name:"Composite",className:"ServiceAccountRecord"}}}}}}},ServiceAccountRecord={type:{name:"Composite",className:"ServiceAccountRecord",modelProperties:{kind:{serializedName:"kind",type:{name:"String"}},id:{serializedName:"id",type:{name:"String"}},metadata:{serializedName:"metadata",type:{name:"Composite",className:"MetadataEntity"}},displayName:{serializedName:"display_name",type:{name:"String"}},description:{serializedName:"description",type:{name:"String"}}}}},AccessListInvitationsSuccessResponse={type:{name:"Composite",className:"AccessListInvitationsSuccessResponse",modelProperties:{kind:{serializedName:"kind",type:{name:"String"}},metadata:{serializedName:"metadata",type:{name:"Composite",className:"ConfluentListMetadata"}},data:{serializedName:"data",type:{name:"Sequence",element:{type:{name:"Composite",className:"InvitationRecord"}}}}}}},InvitationRecord={type:{name:"Composite",className:"InvitationRecord",modelProperties:{kind:{serializedName:"kind",type:{name:"String"}},id:{serializedName:"id",type:{name:"String"}},metadata:{serializedName:"metadata",type:{name:"Composite",className:"MetadataEntity"}},email:{serializedName:"email",type:{name:"String"}},authType:{serializedName:"auth_type",type:{name:"String"}},status:{serializedName:"status",type:{name:"String"}},acceptedAt:{serializedName:"accepted_at",type:{name:"String"}},expiresAt:{serializedName:"expires_at",type:{name:"String"}}}}},AccessInviteUserAccountModel={type:{name:"Composite",className:"AccessInviteUserAccountModel",modelProperties:{organizationId:{serializedName:"organizationId",type:{name:"String"}},email:{serializedName:"email",type:{name:"String"}},upn:{serializedName:"upn",type:{name:"String"}},invitedUserDetails:{serializedName:"invitedUserDetails",type:{name:"Composite",className:"AccessInvitedUserDetails"}}}}},AccessInvitedUserDetails={type:{name:"Composite",className:"AccessInvitedUserDetails",modelProperties:{invitedEmail:{serializedName:"invitedEmail",type:{name:"String"}},authType:{serializedName:"auth_type",type:{name:"String"}}}}},AccessListEnvironmentsSuccessResponse={type:{name:"Composite",className:"AccessListEnvironmentsSuccessResponse",modelProperties:{kind:{serializedName:"kind",type:{name:"String"}},metadata:{serializedName:"metadata",type:{name:"Composite",className:"ConfluentListMetadata"}},data:{serializedName:"data",type:{name:"Sequence",element:{type:{name:"Composite",className:"EnvironmentRecord"}}}}}}},EnvironmentRecord={type:{name:"Composite",className:"EnvironmentRecord",modelProperties:{kind:{serializedName:"kind",type:{name:"String"}},id:{serializedName:"id",type:{name:"String"}},metadata:{serializedName:"metadata",type:{name:"Composite",className:"MetadataEntity"}},displayName:{serializedName:"display_name",type:{name:"String"}}}}},AccessListClusterSuccessResponse={type:{name:"Composite",className:"AccessListClusterSuccessResponse",modelProperties:{kind:{serializedName:"kind",type:{name:"String"}},metadata:{serializedName:"metadata",type:{name:"Composite",className:"ConfluentListMetadata"}},data:{serializedName:"data",type:{name:"Sequence",element:{type:{name:"Composite",className:"ClusterRecord"}}}}}}},ClusterRecord={type:{name:"Composite",className:"ClusterRecord",modelProperties:{kind:{serializedName:"kind",type:{name:"String"}},id:{serializedName:"id",type:{name:"String"}},metadata:{serializedName:"metadata",type:{name:"Composite",className:"MetadataEntity"}},displayName:{serializedName:"display_name",type:{name:"String"}},spec:{serializedName:"spec",type:{name:"Composite",className:"ClusterSpecEntity"}},status:{serializedName:"status",type:{name:"Composite",className:"ClusterStatusEntity"}}}}},ClusterSpecEntity={type:{name:"Composite",className:"ClusterSpecEntity",modelProperties:{displayName:{serializedName:"display_name",type:{name:"String"}},availability:{serializedName:"availability",type:{name:"String"}},cloud:{serializedName:"cloud",type:{name:"String"}},zone:{serializedName:"zone",type:{name:"String"}},region:{serializedName:"region",type:{name:"String"}},kafkaBootstrapEndpoint:{serializedName:"kafka_bootstrap_endpoint",type:{name:"String"}},httpEndpoint:{serializedName:"http_endpoint",type:{name:"String"}},apiEndpoint:{serializedName:"api_endpoint",type:{name:"String"}},config:{serializedName:"config",type:{name:"Composite",className:"ClusterConfigEntity"}},environment:{serializedName:"environment",type:{name:"Composite",className:"ClusterEnvironmentEntity"}},network:{serializedName:"network",type:{name:"Composite",className:"ClusterNetworkEntity"}},byok:{serializedName:"byok",type:{name:"Composite",className:"ClusterByokEntity"}}}}},ClusterConfigEntity={type:{name:"Composite",className:"ClusterConfigEntity",modelProperties:{kind:{serializedName:"kind",type:{name:"String"}}}}},ClusterEnvironmentEntity={type:{name:"Composite",className:"ClusterEnvironmentEntity",modelProperties:{id:{serializedName:"id",type:{name:"String"}},environment:{serializedName:"environment",type:{name:"String"}},related:{serializedName:"related",type:{name:"String"}},resourceName:{serializedName:"resource_name",type:{name:"String"}}}}},ClusterNetworkEntity={type:{name:"Composite",className:"ClusterNetworkEntity",modelProperties:{id:{serializedName:"id",type:{name:"String"}},environment:{serializedName:"environment",type:{name:"String"}},related:{serializedName:"related",type:{name:"String"}},resourceName:{serializedName:"resource_name",type:{name:"String"}}}}},ClusterByokEntity={type:{name:"Composite",className:"ClusterByokEntity",modelProperties:{id:{serializedName:"id",type:{name:"String"}},related:{serializedName:"related",type:{name:"String"}},resourceName:{serializedName:"resource_name",type:{name:"String"}}}}},ClusterStatusEntity={type:{name:"Composite",className:"ClusterStatusEntity",modelProperties:{phase:{serializedName:"phase",type:{name:"String"}},cku:{serializedName:"cku",type:{name:"Number"}}}}},AccessListRoleBindingsSuccessResponse={type:{name:"Composite",className:"AccessListRoleBindingsSuccessResponse",modelProperties:{kind:{serializedName:"kind",type:{name:"String"}},metadata:{serializedName:"metadata",type:{name:"Composite",className:"ConfluentListMetadata"}},data:{serializedName:"data",type:{name:"Sequence",element:{type:{name:"Composite",className:"RoleBindingRecord"}}}}}}},RoleBindingRecord={type:{name:"Composite",className:"RoleBindingRecord",modelProperties:{kind:{serializedName:"kind",type:{name:"String"}},id:{serializedName:"id",type:{name:"String"}},metadata:{serializedName:"metadata",type:{name:"Composite",className:"MetadataEntity"}},principal:{serializedName:"principal",type:{name:"String"}},roleName:{serializedName:"role_name",type:{name:"String"}},crnPattern:{serializedName:"crn_pattern",type:{name:"String"}}}}},AccessCreateRoleBindingRequestModel={type:{name:"Composite",className:"AccessCreateRoleBindingRequestModel",modelProperties:{principal:{serializedName:"principal",type:{name:"String"}},roleName:{serializedName:"role_name",type:{name:"String"}},crnPattern:{serializedName:"crn_pattern",type:{name:"String"}}}}},AccessRoleBindingNameListSuccessResponse={type:{name:"Composite",className:"AccessRoleBindingNameListSuccessResponse",modelProperties:{kind:{serializedName:"kind",type:{name:"String"}},metadata:{serializedName:"metadata",type:{name:"Composite",className:"ConfluentListMetadata"}},data:{serializedName:"data",type:{name:"Sequence",element:{type:{name:"String"}}}}}}},GetEnvironmentsResponse={type:{name:"Composite",className:"GetEnvironmentsResponse",modelProperties:{value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"SCEnvironmentRecord"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},SCEnvironmentRecord={type:{name:"Composite",className:"SCEnvironmentRecord",modelProperties:{kind:{serializedName:"kind",type:{name:"String"}},id:{serializedName:"id",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},metadata:{serializedName:"properties.metadata",type:{name:"Composite",className:"SCMetadataEntity"}}}}},SCMetadataEntity={type:{name:"Composite",className:"SCMetadataEntity",modelProperties:{self:{serializedName:"self",type:{name:"String"}},resourceName:{serializedName:"resourceName",type:{name:"String"}},createdTimestamp:{serializedName:"createdTimestamp",type:{name:"String"}},updatedTimestamp:{serializedName:"updatedTimestamp",type:{name:"String"}},deletedTimestamp:{serializedName:"deletedTimestamp",type:{name:"String"}}}}},ListClustersSuccessResponse={type:{name:"Composite",className:"ListClustersSuccessResponse",modelProperties:{value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"SCClusterRecord"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},SCClusterRecord={type:{name:"Composite",className:"SCClusterRecord",modelProperties:{kind:{serializedName:"kind",type:{name:"String"}},id:{serializedName:"id",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},metadata:{serializedName:"properties.metadata",type:{name:"Composite",className:"SCMetadataEntity"}},spec:{serializedName:"properties.spec",type:{name:"Composite",className:"SCClusterSpecEntity"}},status:{serializedName:"properties.status",type:{name:"Composite",className:"ClusterStatusEntity"}}}}},SCClusterSpecEntity={type:{name:"Composite",className:"SCClusterSpecEntity",modelProperties:{name:{serializedName:"name",type:{name:"String"}},availability:{serializedName:"availability",type:{name:"String"}},cloud:{serializedName:"cloud",type:{name:"String"}},zone:{serializedName:"zone",type:{name:"String"}},region:{serializedName:"region",type:{name:"String"}},kafkaBootstrapEndpoint:{serializedName:"kafkaBootstrapEndpoint",type:{name:"String"}},httpEndpoint:{serializedName:"httpEndpoint",type:{name:"String"}},apiEndpoint:{serializedName:"apiEndpoint",type:{name:"String"}},config:{serializedName:"config",type:{name:"Composite",className:"ClusterConfigEntity"}},environment:{serializedName:"environment",type:{name:"Composite",className:"SCClusterNetworkEnvironmentEntity"}},network:{serializedName:"network",type:{name:"Composite",className:"SCClusterNetworkEnvironmentEntity"}},byok:{serializedName:"byok",type:{name:"Composite",className:"SCClusterByokEntity"}}}}},SCClusterNetworkEnvironmentEntity={type:{name:"Composite",className:"SCClusterNetworkEnvironmentEntity",modelProperties:{id:{serializedName:"id",type:{name:"String"}},environment:{serializedName:"environment",type:{name:"String"}},related:{serializedName:"related",type:{name:"String"}},resourceName:{serializedName:"resourceName",type:{name:"String"}}}}},SCClusterByokEntity={type:{name:"Composite",className:"SCClusterByokEntity",modelProperties:{id:{serializedName:"id",type:{name:"String"}},related:{serializedName:"related",type:{name:"String"}},resourceName:{serializedName:"resourceName",type:{name:"String"}}}}},ListSchemaRegistryClustersResponse={type:{name:"Composite",className:"ListSchemaRegistryClustersResponse",modelProperties:{value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"SchemaRegistryClusterRecord"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},SchemaRegistryClusterRecord={type:{name:"Composite",className:"SchemaRegistryClusterRecord",modelProperties:{kind:{serializedName:"kind",type:{name:"String"}},id:{serializedName:"id",type:{name:"String"}},metadata:{serializedName:"properties.metadata",type:{name:"Composite",className:"SCMetadataEntity"}},spec:{serializedName:"properties.spec",type:{name:"Composite",className:"SchemaRegistryClusterSpecEntity"}},status:{serializedName:"properties.status",type:{name:"Composite",className:"SchemaRegistryClusterStatusEntity"}}}}},SchemaRegistryClusterSpecEntity={type:{name:"Composite",className:"SchemaRegistryClusterSpecEntity",modelProperties:{name:{serializedName:"name",type:{name:"String"}},httpEndpoint:{serializedName:"httpEndpoint",type:{name:"String"}},package:{serializedName:"package",type:{name:"String"}},region:{serializedName:"region",type:{name:"Composite",className:"SchemaRegistryClusterEnvironmentRegionEntity"}},environment:{serializedName:"environment",type:{name:"Composite",className:"SchemaRegistryClusterEnvironmentRegionEntity"}},cloud:{serializedName:"cloud",type:{name:"String"}}}}},SchemaRegistryClusterEnvironmentRegionEntity={type:{name:"Composite",className:"SchemaRegistryClusterEnvironmentRegionEntity",modelProperties:{id:{serializedName:"id",type:{name:"String"}},related:{serializedName:"related",type:{name:"String"}},resourceName:{serializedName:"resourceName",type:{name:"String"}}}}},SchemaRegistryClusterStatusEntity={type:{name:"Composite",className:"SchemaRegistryClusterStatusEntity",modelProperties:{phase:{serializedName:"phase",type:{name:"String"}}}}},ListRegionsSuccessResponse={type:{name:"Composite",className:"ListRegionsSuccessResponse",modelProperties:{data:{serializedName:"data",type:{name:"Sequence",element:{type:{name:"Composite",className:"RegionRecord"}}}}}}},RegionRecord={type:{name:"Composite",className:"RegionRecord",modelProperties:{kind:{serializedName:"kind",type:{name:"String"}},id:{serializedName:"id",type:{name:"String"}},metadata:{serializedName:"properties.metadata",type:{name:"Composite",className:"SCMetadataEntity"}},spec:{serializedName:"properties.spec",type:{name:"Composite",className:"RegionSpecEntity"}}}}},RegionSpecEntity={type:{name:"Composite",className:"RegionSpecEntity",modelProperties:{name:{serializedName:"name",type:{name:"String"}},cloud:{serializedName:"cloud",type:{name:"String"}},regionName:{serializedName:"regionName",type:{name:"String"}},packages:{serializedName:"packages",type:{name:"Sequence",element:{type:{name:"String"}}}}}}},CreateAPIKeyModel={type:{name:"Composite",className:"CreateAPIKeyModel",modelProperties:{name:{serializedName:"name",type:{name:"String"}},description:{serializedName:"description",type:{name:"String"}}}}},APIKeyRecord={type:{name:"Composite",className:"APIKeyRecord",modelProperties:{kind:{serializedName:"kind",type:{name:"String"}},id:{serializedName:"id",type:{name:"String"}},metadata:{serializedName:"properties.metadata",type:{name:"Composite",className:"SCMetadataEntity"}},spec:{serializedName:"properties.spec",type:{name:"Composite",className:"APIKeySpecEntity"}}}}},APIKeySpecEntity={type:{name:"Composite",className:"APIKeySpecEntity",modelProperties:{description:{serializedName:"description",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},secret:{serializedName:"secret",type:{name:"String"}},resource:{serializedName:"resource",type:{name:"Composite",className:"APIKeyResourceEntity"}},owner:{serializedName:"owner",type:{name:"Composite",className:"APIKeyOwnerEntity"}}}}},APIKeyResourceEntity={type:{name:"Composite",className:"APIKeyResourceEntity",modelProperties:{id:{serializedName:"id",type:{name:"String"}},environment:{serializedName:"environment",type:{name:"String"}},related:{serializedName:"related",type:{name:"String"}},resourceName:{serializedName:"resourceName",type:{name:"String"}},kind:{serializedName:"kind",type:{name:"String"}}}}},APIKeyOwnerEntity={type:{name:"Composite",className:"APIKeyOwnerEntity",modelProperties:{id:{serializedName:"id",type:{name:"String"}},related:{serializedName:"related",type:{name:"String"}},resourceName:{serializedName:"resourceName",type:{name:"String"}},kind:{serializedName:"kind",type:{name:"String"}}}}},SCConfluentListMetadata={type:{name:"Composite",className:"SCConfluentListMetadata",modelProperties:{first:{serializedName:"first",type:{name:"String"}},last:{serializedName:"last",type:{name:"String"}},prev:{serializedName:"prev",type:{name:"String"}},next:{serializedName:"next",type:{name:"String"}},totalSize:{serializedName:"totalSize",type:{name:"Number"}}}}};var Mappers=Object.freeze({__proto__:null,APIKeyOwnerEntity:APIKeyOwnerEntity,APIKeyRecord:APIKeyRecord,APIKeyResourceEntity:APIKeyResourceEntity,APIKeySpecEntity:APIKeySpecEntity,AccessCreateRoleBindingRequestModel:AccessCreateRoleBindingRequestModel,AccessInviteUserAccountModel:AccessInviteUserAccountModel,AccessInvitedUserDetails:AccessInvitedUserDetails,AccessListClusterSuccessResponse:AccessListClusterSuccessResponse,AccessListEnvironmentsSuccessResponse:AccessListEnvironmentsSuccessResponse,AccessListInvitationsSuccessResponse:AccessListInvitationsSuccessResponse,AccessListRoleBindingsSuccessResponse:AccessListRoleBindingsSuccessResponse,AccessListServiceAccountsSuccessResponse:AccessListServiceAccountsSuccessResponse,AccessListUsersSuccessResponse:AccessListUsersSuccessResponse,AccessRoleBindingNameListSuccessResponse:AccessRoleBindingNameListSuccessResponse,ClusterByokEntity:ClusterByokEntity,ClusterConfigEntity:ClusterConfigEntity,ClusterEnvironmentEntity:ClusterEnvironmentEntity,ClusterNetworkEntity:ClusterNetworkEntity,ClusterRecord:ClusterRecord,ClusterSpecEntity:ClusterSpecEntity,ClusterStatusEntity:ClusterStatusEntity,ConfluentAgreementResource:ConfluentAgreementResource,ConfluentAgreementResourceListResponse:ConfluentAgreementResourceListResponse,ConfluentListMetadata:ConfluentListMetadata,CreateAPIKeyModel:CreateAPIKeyModel,EnvironmentRecord:EnvironmentRecord,ErrorResponseBody:ErrorResponseBody,GetEnvironmentsResponse:GetEnvironmentsResponse,InvitationRecord:InvitationRecord,LinkOrganization:LinkOrganization,ListAccessRequestModel:ListAccessRequestModel,ListClustersSuccessResponse:ListClustersSuccessResponse,ListRegionsSuccessResponse:ListRegionsSuccessResponse,ListSchemaRegistryClustersResponse:ListSchemaRegistryClustersResponse,MetadataEntity:MetadataEntity,OfferDetail:OfferDetail,OperationDisplay:OperationDisplay,OperationListResult:OperationListResult,OperationResult:OperationResult,OrganizationResource:OrganizationResource,OrganizationResourceListResult:OrganizationResourceListResult,OrganizationResourceUpdate:OrganizationResourceUpdate,RegionRecord:RegionRecord,RegionSpecEntity:RegionSpecEntity,ResourceProviderDefaultErrorResponse:ResourceProviderDefaultErrorResponse,RoleBindingRecord:RoleBindingRecord,SCClusterByokEntity:SCClusterByokEntity,SCClusterNetworkEnvironmentEntity:SCClusterNetworkEnvironmentEntity,SCClusterRecord:SCClusterRecord,SCClusterSpecEntity:SCClusterSpecEntity,SCConfluentListMetadata:SCConfluentListMetadata,SCEnvironmentRecord:SCEnvironmentRecord,SCMetadataEntity:SCMetadataEntity,SchemaRegistryClusterEnvironmentRegionEntity:SchemaRegistryClusterEnvironmentRegionEntity,SchemaRegistryClusterRecord:SchemaRegistryClusterRecord,SchemaRegistryClusterSpecEntity:SchemaRegistryClusterSpecEntity,SchemaRegistryClusterStatusEntity:SchemaRegistryClusterStatusEntity,ServiceAccountRecord:ServiceAccountRecord,SystemData:SystemData,UserDetail:UserDetail,UserRecord:UserRecord,ValidationResponse:ValidationResponse});const accept={parameterPath:"accept",mapper:{defaultValue:"application/json",isConstant:!0,serializedName:"Accept",type:{name:"String"}}},$host={parameterPath:"$host",mapper:{serializedName:"$host",required:!0,type:{name:"String"}},skipEncoding:!0},apiVersion={parameterPath:"apiVersion",mapper:{defaultValue:"2024-02-13",isConstant:!0,serializedName:"api-version",type:{name:"String"}}},subscriptionId={parameterPath:"subscriptionId",mapper:{serializedName:"subscriptionId",required:!0,type:{name:"String"}}},contentType={parameterPath:["options","contentType"],mapper:{defaultValue:"application/json",isConstant:!0,serializedName:"Content-Type",type:{name:"String"}}},body={parameterPath:["options","body"],mapper:ConfluentAgreementResource},nextLink={parameterPath:"nextLink",mapper:{serializedName:"nextLink",required:!0,type:{name:"String"}},skipEncoding:!0},resourceGroupName={parameterPath:"resourceGroupName",mapper:{serializedName:"resourceGroupName",required:!0,type:{name:"String"}}},organizationName={parameterPath:"organizationName",mapper:{serializedName:"organizationName",required:!0,type:{name:"String"}}},body1={parameterPath:["options","body"],mapper:OrganizationResource},body2={parameterPath:["options","body"],mapper:OrganizationResourceUpdate},resourceGroupName1={parameterPath:"resourceGroupName",mapper:{constraints:{MaxLength:90,MinLength:1},serializedName:"resourceGroupName",required:!0,type:{name:"String"}}},pageSize={parameterPath:["options","pageSize"],mapper:{serializedName:"pageSize",type:{name:"Number"}}},pageToken={parameterPath:["options","pageToken"],mapper:{serializedName:"pageToken",type:{name:"String"}}},environmentId={parameterPath:"environmentId",mapper:{serializedName:"environmentId",required:!0,type:{name:"String"}}},body3={parameterPath:"body",mapper:ListAccessRequestModel},body4={parameterPath:"body",mapper:CreateAPIKeyModel},clusterId={parameterPath:"clusterId",mapper:{serializedName:"clusterId",required:!0,type:{name:"String"}}},apiKeyId={parameterPath:"apiKeyId",mapper:{serializedName:"apiKeyId",required:!0,type:{name:"String"}}},body5={parameterPath:"body",mapper:OrganizationResource},body6={parameterPath:"body",mapper:AccessInviteUserAccountModel},body7={parameterPath:"body",mapper:AccessCreateRoleBindingRequestModel},roleBindingId={parameterPath:"roleBindingId",mapper:{serializedName:"roleBindingId",required:!0,type:{name:"String"}}};class MarketplaceAgreementsImpl{constructor(e){this.client=e}list(t){const e=this.listPagingAll(t);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listPagingPage(t,e)}}}listPagingPage(a,s){return tslib.__asyncGenerator(this,arguments,function*(){let e,t=null==s?void 0:s.continuationToken;var r;for(t||(setContinuationToken(r=(e=yield tslib.__await(this._list(a))).value||[],t=e.nextLink),yield yield tslib.__await(r));t;){e=yield tslib.__await(this._listNext(t,a)),t=e.nextLink;var i=e.value||[];setContinuationToken(i,t),yield yield tslib.__await(i)}})}listPagingAll(o){return tslib.__asyncGenerator(this,arguments,function*(){var e,t,r;try{for(var i,a=!0,s=tslib.__asyncValues(this.listPagingPage(o));!(e=(i=yield tslib.__await(s.next())).done);a=!0){var n=i.value,a=!1;yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(n)))}}catch(e){t={error:e}}finally{try{a||e||!(r=s.return)||(yield tslib.__await(r.call(s)))}finally{if(t)throw t.error}}})}_list(e){return this.client.sendOperationRequest({options:e},listOperationSpec$1)}create(e){return this.client.sendOperationRequest({options:e},createOperationSpec$1)}_listNext(e,t){return this.client.sendOperationRequest({nextLink:e,options:t},listNextOperationSpec$1)}}const serializer$4=coreClient__namespace.createSerializer(Mappers,!1),listOperationSpec$1={path:"/subscriptions/{subscriptionId}/providers/Microsoft.Confluent/agreements",httpMethod:"GET",responses:{200:{bodyMapper:ConfluentAgreementResourceListResponse},default:{bodyMapper:ResourceProviderDefaultErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId],headerParameters:[accept],serializer:serializer$4},createOperationSpec$1={path:"/subscriptions/{subscriptionId}/providers/Microsoft.Confluent/agreements/default",httpMethod:"PUT",responses:{200:{bodyMapper:ConfluentAgreementResource},default:{bodyMapper:ResourceProviderDefaultErrorResponse}},requestBody:body,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer$4},listNextOperationSpec$1={path:"{nextLink}",httpMethod:"GET",responses:{200:{bodyMapper:ConfluentAgreementResourceListResponse},default:{bodyMapper:ResourceProviderDefaultErrorResponse}},urlParameters:[$host,subscriptionId,nextLink],headerParameters:[accept],serializer:serializer$4};class OrganizationOperationsImpl{constructor(e){this.client=e}list(t){const e=this.listPagingAll(t);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listPagingPage(t,e)}}}listPagingPage(a,s){return tslib.__asyncGenerator(this,arguments,function*(){let e,t=null==s?void 0:s.continuationToken;var r;for(t||(setContinuationToken(r=(e=yield tslib.__await(this._list(a))).value||[],t=e.nextLink),yield yield tslib.__await(r));t;){e=yield tslib.__await(this._listNext(t,a)),t=e.nextLink;var i=e.value||[];setContinuationToken(i,t),yield yield tslib.__await(i)}})}listPagingAll(o){return tslib.__asyncGenerator(this,arguments,function*(){var e,t,r;try{for(var i,a=!0,s=tslib.__asyncValues(this.listPagingPage(o));!(e=(i=yield tslib.__await(s.next())).done);a=!0){var n=i.value,a=!1;yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(n)))}}catch(e){t={error:e}}finally{try{a||e||!(r=s.return)||(yield tslib.__await(r.call(s)))}finally{if(t)throw t.error}}})}_list(e){return this.client.sendOperationRequest({options:e},listOperationSpec)}_listNext(e,t){return this.client.sendOperationRequest({nextLink:e,options:t},listNextOperationSpec)}}const serializer$3=coreClient__namespace.createSerializer(Mappers,!1),listOperationSpec={path:"/providers/Microsoft.Confluent/operations",httpMethod:"GET",responses:{200:{bodyMapper:OperationListResult},default:{bodyMapper:ResourceProviderDefaultErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host],headerParameters:[accept],serializer:serializer$3},listNextOperationSpec={path:"{nextLink}",httpMethod:"GET",responses:{200:{bodyMapper:OperationListResult},default:{bodyMapper:ResourceProviderDefaultErrorResponse}},urlParameters:[$host,nextLink],headerParameters:[accept],serializer:serializer$3};function createLroSpec(e){const{args:i,spec:a,sendOperationFn:s}=e;return{requestMethod:a.httpMethod,requestPath:a.path,sendInitialRequest:()=>s(i,a),sendPollRequest:(e,t)=>{var r=tslib.__rest(a,["requestBody"]);return s(i,Object.assign(Object.assign({},r),{httpMethod:"GET",path:e,abortSignal:null==t?void 0:t.abortSignal}))}}}class OrganizationImpl{constructor(e){this.client=e}listBySubscription(t){const e=this.listBySubscriptionPagingAll(t);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listBySubscriptionPagingPage(t,e)}}}listBySubscriptionPagingPage(a,s){return tslib.__asyncGenerator(this,arguments,function*(){let e,t=null==s?void 0:s.continuationToken;var r;for(t||(setContinuationToken(r=(e=yield tslib.__await(this._listBySubscription(a))).value||[],t=e.nextLink),yield yield tslib.__await(r));t;){e=yield tslib.__await(this._listBySubscriptionNext(t,a)),t=e.nextLink;var i=e.value||[];setContinuationToken(i,t),yield yield tslib.__await(i)}})}listBySubscriptionPagingAll(o){return tslib.__asyncGenerator(this,arguments,function*(){var e,t,r;try{for(var i,a=!0,s=tslib.__asyncValues(this.listBySubscriptionPagingPage(o));!(e=(i=yield tslib.__await(s.next())).done);a=!0){var n=i.value,a=!1;yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(n)))}}catch(e){t={error:e}}finally{try{a||e||!(r=s.return)||(yield tslib.__await(r.call(s)))}finally{if(t)throw t.error}}})}listByResourceGroup(t,r){const e=this.listByResourceGroupPagingAll(t,r);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listByResourceGroupPagingPage(t,r,e)}}}listByResourceGroupPagingPage(a,s,n){return tslib.__asyncGenerator(this,arguments,function*(){let e,t=null==n?void 0:n.continuationToken;var r;for(t||(setContinuationToken(r=(e=yield tslib.__await(this._listByResourceGroup(a,s))).value||[],t=e.nextLink),yield yield tslib.__await(r));t;){e=yield tslib.__await(this._listByResourceGroupNext(a,t,s)),t=e.nextLink;var i=e.value||[];setContinuationToken(i,t),yield yield tslib.__await(i)}})}listByResourceGroupPagingAll(o,p){return tslib.__asyncGenerator(this,arguments,function*(){var e,t,r;try{for(var i,a=!0,s=tslib.__asyncValues(this.listByResourceGroupPagingPage(o,p));!(e=(i=yield tslib.__await(s.next())).done);a=!0){var n=i.value,a=!1;yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(n)))}}catch(e){t={error:e}}finally{try{a||e||!(r=s.return)||(yield tslib.__await(r.call(s)))}finally{if(t)throw t.error}}})}listEnvironments(t,r,i){const e=this.listEnvironmentsPagingAll(t,r,i);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listEnvironmentsPagingPage(t,r,i,e)}}}listEnvironmentsPagingPage(a,s,n,o){return tslib.__asyncGenerator(this,arguments,function*(){let e,t=null==o?void 0:o.continuationToken;var r;for(t||(setContinuationToken(r=(e=yield tslib.__await(this._listEnvironments(a,s,n))).value||[],t=e.nextLink),yield yield tslib.__await(r));t;){e=yield tslib.__await(this._listEnvironmentsNext(a,s,t,n)),t=e.nextLink;var i=e.value||[];setContinuationToken(i,t),yield yield tslib.__await(i)}})}listEnvironmentsPagingAll(o,p,l){return tslib.__asyncGenerator(this,arguments,function*(){var e,t,r;try{for(var i,a=!0,s=tslib.__asyncValues(this.listEnvironmentsPagingPage(o,p,l));!(e=(i=yield tslib.__await(s.next())).done);a=!0){var n=i.value,a=!1;yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(n)))}}catch(e){t={error:e}}finally{try{a||e||!(r=s.return)||(yield tslib.__await(r.call(s)))}finally{if(t)throw t.error}}})}listClusters(t,r,i,a){const e=this.listClustersPagingAll(t,r,i,a);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listClustersPagingPage(t,r,i,a,e)}}}listClustersPagingPage(a,s,n,o,p){return tslib.__asyncGenerator(this,arguments,function*(){let e,t=null==p?void 0:p.continuationToken;var r;for(t||(setContinuationToken(r=(e=yield tslib.__await(this._listClusters(a,s,n,o))).value||[],t=e.nextLink),yield yield tslib.__await(r));t;){e=yield tslib.__await(this._listClustersNext(a,s,n,t,o)),t=e.nextLink;var i=e.value||[];setContinuationToken(i,t),yield yield tslib.__await(i)}})}listClustersPagingAll(o,p,l,m){return tslib.__asyncGenerator(this,arguments,function*(){var e,t,r;try{for(var i,a=!0,s=tslib.__asyncValues(this.listClustersPagingPage(o,p,l,m));!(e=(i=yield tslib.__await(s.next())).done);a=!0){var n=i.value,a=!1;yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(n)))}}catch(e){t={error:e}}finally{try{a||e||!(r=s.return)||(yield tslib.__await(r.call(s)))}finally{if(t)throw t.error}}})}listSchemaRegistryClusters(t,r,i,a){const e=this.listSchemaRegistryClustersPagingAll(t,r,i,a);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listSchemaRegistryClustersPagingPage(t,r,i,a,e)}}}listSchemaRegistryClustersPagingPage(a,s,n,o,p){return tslib.__asyncGenerator(this,arguments,function*(){let e,t=null==p?void 0:p.continuationToken;var r;for(t||(setContinuationToken(r=(e=yield tslib.__await(this._listSchemaRegistryClusters(a,s,n,o))).value||[],t=e.nextLink),yield yield tslib.__await(r));t;){e=yield tslib.__await(this._listSchemaRegistryClustersNext(a,s,n,t,o)),t=e.nextLink;var i=e.value||[];setContinuationToken(i,t),yield yield tslib.__await(i)}})}listSchemaRegistryClustersPagingAll(o,p,l,m){return tslib.__asyncGenerator(this,arguments,function*(){var e,t,r;try{for(var i,a=!0,s=tslib.__asyncValues(this.listSchemaRegistryClustersPagingPage(o,p,l,m));!(e=(i=yield tslib.__await(s.next())).done);a=!0){var n=i.value,a=!1;yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(n)))}}catch(e){t={error:e}}finally{try{a||e||!(r=s.return)||(yield tslib.__await(r.call(s)))}finally{if(t)throw t.error}}})}_listBySubscription(e){return this.client.sendOperationRequest({options:e},listBySubscriptionOperationSpec)}_listByResourceGroup(e,t){return this.client.sendOperationRequest({resourceGroupName:e,options:t},listByResourceGroupOperationSpec)}get(e,t,r){return this.client.sendOperationRequest({resourceGroupName:e,organizationName:t,options:r},getOperationSpec)}beginCreate(t,r,i){return tslib.__awaiter(this,void 0,void 0,function*(){const s=(e,t)=>tslib.__awaiter(this,void 0,void 0,function*(){return this.client.sendOperationRequest(e,t)});var e=createLroSpec({sendOperationFn:(t,a)=>tslib.__awaiter(this,void 0,void 0,function*(){let r=void 0;const i=null==(e=t.options)?void 0:e.onResponse;var e=Object.assign(Object.assign({},t),{options:Object.assign(Object.assign({},t.options),{onResponse:(e,t)=>{r=e,null!==i&&void 0!==i&&i(e,t)}})});return{flatResponse:yield s(e,a),rawResponse:{statusCode:r.status,body:r.parsedBody,headers:r.headers.toJSON()}}}),args:{resourceGroupName:t,organizationName:r,options:i},spec:createOperationSpec}),e=yield coreLro.createHttpPoller(e,{restoreFrom:null==i?void 0:i.resumeFrom,intervalInMs:null==i?void 0:i.updateIntervalInMs,resourceLocationConfig:"azure-async-operation"});return yield e.poll(),e})}beginCreateAndWait(e,t,r){return tslib.__awaiter(this,void 0,void 0,function*(){return(yield this.beginCreate(e,t,r)).pollUntilDone()})}update(e,t,r){return this.client.sendOperationRequest({resourceGroupName:e,organizationName:t,options:r},updateOperationSpec)}beginDelete(t,r,i){return tslib.__awaiter(this,void 0,void 0,function*(){const s=(e,t)=>tslib.__awaiter(this,void 0,void 0,function*(){return this.client.sendOperationRequest(e,t)});var e=createLroSpec({sendOperationFn:(t,a)=>tslib.__awaiter(this,void 0,void 0,function*(){let r=void 0;const i=null==(e=t.options)?void 0:e.onResponse;var e=Object.assign(Object.assign({},t),{options:Object.assign(Object.assign({},t.options),{onResponse:(e,t)=>{r=e,null!==i&&void 0!==i&&i(e,t)}})});return{flatResponse:yield s(e,a),rawResponse:{statusCode:r.status,body:r.parsedBody,headers:r.headers.toJSON()}}}),args:{resourceGroupName:t,organizationName:r,options:i},spec:deleteOperationSpec}),e=yield coreLro.createHttpPoller(e,{restoreFrom:null==i?void 0:i.resumeFrom,intervalInMs:null==i?void 0:i.updateIntervalInMs,resourceLocationConfig:"location"});return yield e.poll(),e})}beginDeleteAndWait(e,t,r){return tslib.__awaiter(this,void 0,void 0,function*(){return(yield this.beginDelete(e,t,r)).pollUntilDone()})}_listEnvironments(e,t,r){return this.client.sendOperationRequest({resourceGroupName:e,organizationName:t,options:r},listEnvironmentsOperationSpec$1)}getEnvironmentById(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,organizationName:t,environmentId:r,options:i},getEnvironmentByIdOperationSpec)}_listClusters(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,organizationName:t,environmentId:r,options:i},listClustersOperationSpec$1)}_listSchemaRegistryClusters(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,organizationName:t,environmentId:r,options:i},listSchemaRegistryClustersOperationSpec)}listRegions(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,organizationName:t,body:r,options:i},listRegionsOperationSpec)}createAPIKey(e,t,r,i,a,s){return this.client.sendOperationRequest({resourceGroupName:e,organizationName:t,environmentId:r,clusterId:i,body:a,options:s},createAPIKeyOperationSpec)}deleteClusterAPIKey(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,organizationName:t,apiKeyId:r,options:i},deleteClusterAPIKeyOperationSpec)}getClusterAPIKey(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,organizationName:t,apiKeyId:r,options:i},getClusterAPIKeyOperationSpec)}getSchemaRegistryClusterById(e,t,r,i,a){return this.client.sendOperationRequest({resourceGroupName:e,organizationName:t,environmentId:r,clusterId:i,options:a},getSchemaRegistryClusterByIdOperationSpec)}getClusterById(e,t,r,i,a){return this.client.sendOperationRequest({resourceGroupName:e,organizationName:t,environmentId:r,clusterId:i,options:a},getClusterByIdOperationSpec)}_listBySubscriptionNext(e,t){return this.client.sendOperationRequest({nextLink:e,options:t},listBySubscriptionNextOperationSpec)}_listByResourceGroupNext(e,t,r){return this.client.sendOperationRequest({resourceGroupName:e,nextLink:t,options:r},listByResourceGroupNextOperationSpec)}_listEnvironmentsNext(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,organizationName:t,nextLink:r,options:i},listEnvironmentsNextOperationSpec)}_listClustersNext(e,t,r,i,a){return this.client.sendOperationRequest({resourceGroupName:e,organizationName:t,environmentId:r,nextLink:i,options:a},listClustersNextOperationSpec)}_listSchemaRegistryClustersNext(e,t,r,i,a){return this.client.sendOperationRequest({resourceGroupName:e,organizationName:t,environmentId:r,nextLink:i,options:a},listSchemaRegistryClustersNextOperationSpec)}}const serializer$2=coreClient__namespace.createSerializer(Mappers,!1),listBySubscriptionOperationSpec={path:"/subscriptions/{subscriptionId}/providers/Microsoft.Confluent/organizations",httpMethod:"GET",responses:{200:{bodyMapper:OrganizationResourceListResult},default:{bodyMapper:ResourceProviderDefaultErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId],headerParameters:[accept],serializer:serializer$2},listByResourceGroupOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations",httpMethod:"GET",responses:{200:{bodyMapper:OrganizationResourceListResult},default:{bodyMapper:ResourceProviderDefaultErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName],headerParameters:[accept],serializer:serializer$2},getOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}",httpMethod:"GET",responses:{200:{bodyMapper:OrganizationResource},default:{bodyMapper:ResourceProviderDefaultErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,organizationName],headerParameters:[accept],serializer:serializer$2},createOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}",httpMethod:"PUT",responses:{200:{bodyMapper:OrganizationResource},201:{bodyMapper:OrganizationResource},202:{bodyMapper:OrganizationResource},204:{bodyMapper:OrganizationResource},default:{bodyMapper:ResourceProviderDefaultErrorResponse}},requestBody:body1,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,organizationName],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer$2},updateOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}",httpMethod:"PATCH",responses:{200:{bodyMapper:OrganizationResource},default:{bodyMapper:ResourceProviderDefaultErrorResponse}},requestBody:body2,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,organizationName],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer$2},deleteOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}",httpMethod:"DELETE",responses:{200:{},201:{},202:{},204:{},default:{bodyMapper:ResourceProviderDefaultErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,organizationName],headerParameters:[accept],serializer:serializer$2},listEnvironmentsOperationSpec$1={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}/environments",httpMethod:"GET",responses:{200:{bodyMapper:GetEnvironmentsResponse},default:{bodyMapper:ResourceProviderDefaultErrorResponse}},queryParameters:[apiVersion,pageSize,pageToken],urlParameters:[$host,subscriptionId,organizationName,resourceGroupName1],headerParameters:[accept],serializer:serializer$2},getEnvironmentByIdOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}/environments/{environmentId}",httpMethod:"GET",responses:{200:{bodyMapper:SCEnvironmentRecord},default:{bodyMapper:ResourceProviderDefaultErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,organizationName,resourceGroupName1,environmentId],headerParameters:[accept],serializer:serializer$2},listClustersOperationSpec$1={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}/environments/{environmentId}/clusters",httpMethod:"GET",responses:{200:{bodyMapper:ListClustersSuccessResponse},default:{bodyMapper:ResourceProviderDefaultErrorResponse}},queryParameters:[apiVersion,pageSize,pageToken],urlParameters:[$host,subscriptionId,organizationName,resourceGroupName1,environmentId],headerParameters:[accept],serializer:serializer$2},listSchemaRegistryClustersOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}/environments/{environmentId}/schemaRegistryClusters",httpMethod:"GET",responses:{200:{bodyMapper:ListSchemaRegistryClustersResponse},default:{bodyMapper:ResourceProviderDefaultErrorResponse}},queryParameters:[apiVersion,pageSize,pageToken],urlParameters:[$host,subscriptionId,organizationName,resourceGroupName1,environmentId],headerParameters:[accept],serializer:serializer$2},listRegionsOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}/listRegions",httpMethod:"POST",responses:{200:{bodyMapper:ListRegionsSuccessResponse},default:{bodyMapper:ResourceProviderDefaultErrorResponse}},requestBody:body3,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,organizationName,resourceGroupName1],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer$2},createAPIKeyOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}/environments/{environmentId}/clusters/{clusterId}/createAPIKey",httpMethod:"POST",responses:{200:{bodyMapper:APIKeyRecord},default:{bodyMapper:ResourceProviderDefaultErrorResponse}},requestBody:body4,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,organizationName,resourceGroupName1,environmentId,clusterId],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer$2},deleteClusterAPIKeyOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}/apiKeys/{apiKeyId}",httpMethod:"DELETE",responses:{200:{},204:{},default:{bodyMapper:ResourceProviderDefaultErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,organizationName,resourceGroupName1,apiKeyId],headerParameters:[accept],serializer:serializer$2},getClusterAPIKeyOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}/apiKeys/{apiKeyId}",httpMethod:"GET",responses:{200:{bodyMapper:APIKeyRecord},default:{bodyMapper:ResourceProviderDefaultErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,organizationName,resourceGroupName1,apiKeyId],headerParameters:[accept],serializer:serializer$2},getSchemaRegistryClusterByIdOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}/environments/{environmentId}/schemaRegistryClusters/{clusterId}",httpMethod:"GET",responses:{200:{bodyMapper:SchemaRegistryClusterRecord},default:{bodyMapper:ResourceProviderDefaultErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,organizationName,resourceGroupName1,environmentId,clusterId],headerParameters:[accept],serializer:serializer$2},getClusterByIdOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}/environments/{environmentId}/clusters/{clusterId}",httpMethod:"GET",responses:{200:{bodyMapper:SCClusterRecord},default:{bodyMapper:ResourceProviderDefaultErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,organizationName,resourceGroupName1,environmentId,clusterId],headerParameters:[accept],serializer:serializer$2},listBySubscriptionNextOperationSpec={path:"{nextLink}",httpMethod:"GET",responses:{200:{bodyMapper:OrganizationResourceListResult},default:{bodyMapper:ResourceProviderDefaultErrorResponse}},urlParameters:[$host,subscriptionId,nextLink],headerParameters:[accept],serializer:serializer$2},listByResourceGroupNextOperationSpec={path:"{nextLink}",httpMethod:"GET",responses:{200:{bodyMapper:OrganizationResourceListResult},default:{bodyMapper:ResourceProviderDefaultErrorResponse}},urlParameters:[$host,subscriptionId,nextLink,resourceGroupName],headerParameters:[accept],serializer:serializer$2},listEnvironmentsNextOperationSpec={path:"{nextLink}",httpMethod:"GET",responses:{200:{bodyMapper:GetEnvironmentsResponse},default:{bodyMapper:ResourceProviderDefaultErrorResponse}},urlParameters:[$host,subscriptionId,nextLink,organizationName,resourceGroupName1],headerParameters:[accept],serializer:serializer$2},listClustersNextOperationSpec={path:"{nextLink}",httpMethod:"GET",responses:{200:{bodyMapper:ListClustersSuccessResponse},default:{bodyMapper:ResourceProviderDefaultErrorResponse}},urlParameters:[$host,subscriptionId,nextLink,organizationName,resourceGroupName1,environmentId],headerParameters:[accept],serializer:serializer$2},listSchemaRegistryClustersNextOperationSpec={path:"{nextLink}",httpMethod:"GET",responses:{200:{bodyMapper:ListSchemaRegistryClustersResponse},default:{bodyMapper:ResourceProviderDefaultErrorResponse}},urlParameters:[$host,subscriptionId,nextLink,organizationName,resourceGroupName1,environmentId],headerParameters:[accept],serializer:serializer$2};class ValidationsImpl{constructor(e){this.client=e}validateOrganization(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,organizationName:t,body:r,options:i},validateOrganizationOperationSpec)}validateOrganizationV2(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,organizationName:t,body:r,options:i},validateOrganizationV2OperationSpec)}}const serializer$1=coreClient__namespace.createSerializer(Mappers,!1),validateOrganizationOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/validations/{organizationName}/orgvalidate",httpMethod:"POST",responses:{200:{bodyMapper:OrganizationResource},default:{bodyMapper:ResourceProviderDefaultErrorResponse}},requestBody:body5,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,organizationName],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer$1},validateOrganizationV2OperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/validations/{organizationName}/orgvalidateV2",httpMethod:"POST",responses:{200:{bodyMapper:ValidationResponse},default:{bodyMapper:ResourceProviderDefaultErrorResponse}},requestBody:body5,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,organizationName],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer$1};class AccessImpl{constructor(e){this.client=e}listUsers(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,organizationName:t,body:r,options:i},listUsersOperationSpec)}listServiceAccounts(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,organizationName:t,body:r,options:i},listServiceAccountsOperationSpec)}listInvitations(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,organizationName:t,body:r,options:i},listInvitationsOperationSpec)}inviteUser(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,organizationName:t,body:r,options:i},inviteUserOperationSpec)}listEnvironments(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,organizationName:t,body:r,options:i},listEnvironmentsOperationSpec)}listClusters(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,organizationName:t,body:r,options:i},listClustersOperationSpec)}listRoleBindings(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,organizationName:t,body:r,options:i},listRoleBindingsOperationSpec)}createRoleBinding(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,organizationName:t,body:r,options:i},createRoleBindingOperationSpec)}deleteRoleBinding(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,organizationName:t,roleBindingId:r,options:i},deleteRoleBindingOperationSpec)}listRoleBindingNameList(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,organizationName:t,body:r,options:i},listRoleBindingNameListOperationSpec)}}const serializer=coreClient__namespace.createSerializer(Mappers,!1),listUsersOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}/access/default/listUsers",httpMethod:"POST",responses:{200:{bodyMapper:AccessListUsersSuccessResponse},default:{bodyMapper:ResourceProviderDefaultErrorResponse}},requestBody:body3,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,organizationName],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer},listServiceAccountsOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}/access/default/listServiceAccounts",httpMethod:"POST",responses:{200:{bodyMapper:AccessListServiceAccountsSuccessResponse},default:{bodyMapper:ResourceProviderDefaultErrorResponse}},requestBody:body3,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,organizationName],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer},listInvitationsOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}/access/default/listInvitations",httpMethod:"POST",responses:{200:{bodyMapper:AccessListInvitationsSuccessResponse},default:{bodyMapper:ResourceProviderDefaultErrorResponse}},requestBody:body3,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,organizationName],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer},inviteUserOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}/access/default/createInvitation",httpMethod:"POST",responses:{200:{bodyMapper:InvitationRecord},default:{bodyMapper:ResourceProviderDefaultErrorResponse}},requestBody:body6,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,organizationName],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer},listEnvironmentsOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}/access/default/listEnvironments",httpMethod:"POST",responses:{200:{bodyMapper:AccessListEnvironmentsSuccessResponse},default:{bodyMapper:ResourceProviderDefaultErrorResponse}},requestBody:body3,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,organizationName,resourceGroupName1],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer},listClustersOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}/access/default/listClusters",httpMethod:"POST",responses:{200:{bodyMapper:AccessListClusterSuccessResponse},default:{bodyMapper:ResourceProviderDefaultErrorResponse}},requestBody:body3,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,organizationName,resourceGroupName1],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer},listRoleBindingsOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}/access/default/listRoleBindings",httpMethod:"POST",responses:{200:{bodyMapper:AccessListRoleBindingsSuccessResponse},default:{bodyMapper:ResourceProviderDefaultErrorResponse}},requestBody:body3,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,organizationName,resourceGroupName1],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer},createRoleBindingOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}/access/default/createRoleBinding",httpMethod:"POST",responses:{200:{bodyMapper:RoleBindingRecord},default:{bodyMapper:ResourceProviderDefaultErrorResponse}},requestBody:body7,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,organizationName,resourceGroupName1],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer},deleteRoleBindingOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}/access/default/deleteRoleBinding/{roleBindingId}",httpMethod:"DELETE",responses:{200:{},204:{},default:{bodyMapper:ResourceProviderDefaultErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,organizationName,resourceGroupName1,roleBindingId],headerParameters:[accept],serializer:serializer},listRoleBindingNameListOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}/access/default/listRoleBindingNameList",httpMethod:"POST",responses:{200:{bodyMapper:AccessRoleBindingNameListSuccessResponse},default:{bodyMapper:ResourceProviderDefaultErrorResponse}},requestBody:body3,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,organizationName,resourceGroupName1],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer};class ConfluentManagementClient extends coreClient__namespace.ServiceClient{constructor(e,t,r){if(void 0===e)throw new Error("'credentials' cannot be null");let i;"string"==typeof t?i=t:"object"==typeof t&&(r=t);var a,t="azsdk-js-arm-confluent/3.1.0",t=(r=r||{}).userAgentOptions&&r.userAgentOptions.userAgentPrefix?r.userAgentOptions.userAgentPrefix+" "+t:t,t=Object.assign(Object.assign(Object.assign({},{requestContentType:"application/json; charset=utf-8",credential:e}),r),{userAgentOptions:{userAgentPrefix:t},endpoint:null!=(t=null!=(t=r.endpoint)?t:r.baseUri)?t:"https://management.azure.com"});super(t);let s=!1;null!=r&&r.pipeline&&0<r.pipeline.getOrderedPolicies().length&&(a=r.pipeline.getOrderedPolicies(),s=a.some(e=>e.name===coreRestPipeline__namespace.bearerTokenAuthenticationPolicyName)),r&&r.pipeline&&0!=r.pipeline.getOrderedPolicies().length&&s||(this.pipeline.removePolicy({name:coreRestPipeline__namespace.bearerTokenAuthenticationPolicyName}),this.pipeline.addPolicy(coreRestPipeline__namespace.bearerTokenAuthenticationPolicy({credential:e,scopes:null!=(a=t.credentialScopes)?a:t.endpoint+"/.default",challengeCallbacks:{authorizeRequestOnChallenge:coreClient__namespace.authorizeRequestOnClaimChallenge}}))),this.subscriptionId=i,this.$host=r.$host||"https://management.azure.com",this.apiVersion=r.apiVersion||"2024-02-13",this.marketplaceAgreements=new MarketplaceAgreementsImpl(this),this.organizationOperations=new OrganizationOperationsImpl(this),this.organization=new OrganizationImpl(this),this.validations=new ValidationsImpl(this),this.access=new AccessImpl(this),this.addCustomApiVersionPolicy(r.apiVersion)}addCustomApiVersionPolicy(a){a&&this.pipeline.addPolicy({name:"CustomApiVersionPolicy",sendRequest(r,i){return tslib.__awaiter(this,void 0,void 0,function*(){var e,t=r.url.split("?");return 1<t.length&&(e=t[1].split("&").map(e=>-1<e.indexOf("api-version")?"api-version="+a:e),r.url=t[0]+"?"+e.join("&")),i(r)})}})}}exports.ConfluentManagementClient=ConfluentManagementClient,exports.getContinuationToken=getContinuationToken;