import { OrganizationResource, ValidationsValidateOrganizationOptionalParams, ValidationsValidateOrganizationResponse, ValidationsValidateOrganizationV2OptionalParams, ValidationsValidateOrganizationV2Response } from "../models";
/** Interface representing a Validations. */
export interface Validations {
    /**
     * Organization Validate proxy resource
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param organizationName Organization resource name
     * @param body Organization resource model
     * @param options The options parameters.
     */
    validateOrganization(resourceGroupName: string, organizationName: string, body: OrganizationResource, options?: ValidationsValidateOrganizationOptionalParams): Promise<ValidationsValidateOrganizationResponse>;
    /**
     * Organization Validate proxy resource
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param organizationName Organization resource name
     * @param body Organization resource model
     * @param options The options parameters.
     */
    validateOrganizationV2(resourceGroupName: string, organizationName: string, body: OrganizationResource, options?: ValidationsValidateOrganizationV2OptionalParams): Promise<ValidationsValidateOrganizationV2Response>;
}
//# sourceMappingURL=validations.d.ts.map