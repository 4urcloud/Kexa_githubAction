import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { OrganizationOperations } from "../operationsInterfaces";
import { ConfluentManagementClient } from "../confluentManagementClient";
import { OperationResult, OrganizationOperationsListOptionalParams } from "../models";
/** Class containing OrganizationOperations operations. */
export declare class OrganizationOperationsImpl implements OrganizationOperations {
    private readonly client;
    /**
     * Initialize a new instance of the class OrganizationOperations class.
     * @param client Reference to the service client
     */
    constructor(client: ConfluentManagementClient);
    /**
     * List all operations provided by Microsoft.Confluent.
     * @param options The options parameters.
     */
    list(options?: OrganizationOperationsListOptionalParams): PagedAsyncIterableIterator<OperationResult>;
    private listPagingPage;
    private listPagingAll;
    /**
     * List all operations provided by Microsoft.Confluent.
     * @param options The options parameters.
     */
    private _list;
    /**
     * ListNext
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=organizationOperations.d.ts.map