import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { MarketplaceAgreements } from "../operationsInterfaces";
import { ConfluentManagementClient } from "../confluentManagementClient";
import { ConfluentAgreementResource, MarketplaceAgreementsListOptionalParams, MarketplaceAgreementsCreateOptionalParams, MarketplaceAgreementsCreateResponse } from "../models";
/** Class containing MarketplaceAgreements operations. */
export declare class MarketplaceAgreementsImpl implements MarketplaceAgreements {
    private readonly client;
    /**
     * Initialize a new instance of the class MarketplaceAgreements class.
     * @param client Reference to the service client
     */
    constructor(client: ConfluentManagementClient);
    /**
     * List Confluent marketplace agreements in the subscription.
     * @param options The options parameters.
     */
    list(options?: MarketplaceAgreementsListOptionalParams): PagedAsyncIterableIterator<ConfluentAgreementResource>;
    private listPagingPage;
    private listPagingAll;
    /**
     * List Confluent marketplace agreements in the subscription.
     * @param options The options parameters.
     */
    private _list;
    /**
     * Create Confluent Marketplace agreement in the subscription.
     * @param options The options parameters.
     */
    create(options?: MarketplaceAgreementsCreateOptionalParams): Promise<MarketplaceAgreementsCreateResponse>;
    /**
     * ListNext
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=marketplaceAgreements.d.ts.map