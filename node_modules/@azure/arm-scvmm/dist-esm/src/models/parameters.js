/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { VMMServer as VMMServerMapper, ResourcePatch as ResourcePatchMapper, Cloud as CloudMapper, VirtualNetwork as VirtualNetworkMapper, VirtualMachine as VirtualMachineMapper, VirtualMachineUpdate as VirtualMachineUpdateMapper, StopVirtualMachineOptions as StopVirtualMachineOptionsMapper, VirtualMachineCreateCheckpoint as VirtualMachineCreateCheckpointMapper, VirtualMachineDeleteCheckpoint as VirtualMachineDeleteCheckpointMapper, VirtualMachineRestoreCheckpoint as VirtualMachineRestoreCheckpointMapper, VirtualMachineTemplate as VirtualMachineTemplateMapper, AvailabilitySet as AvailabilitySetMapper, InventoryItem as InventoryItemMapper } from "../models/mappers";
export const accept = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String"
        }
    }
};
export const $host = {
    parameterPath: "$host",
    mapper: {
        serializedName: "$host",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const subscriptionId = {
    parameterPath: "subscriptionId",
    mapper: {
        serializedName: "subscriptionId",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const resourceGroupName = {
    parameterPath: "resourceGroupName",
    mapper: {
        serializedName: "resourceGroupName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const vmmServerName = {
    parameterPath: "vmmServerName",
    mapper: {
        serializedName: "vmmServerName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const apiVersion = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2020-06-05-preview",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
export const contentType = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String"
        }
    }
};
export const body = {
    parameterPath: "body",
    mapper: VMMServerMapper
};
export const force = {
    parameterPath: ["options", "force"],
    mapper: {
        serializedName: "force",
        type: {
            name: "Boolean"
        }
    }
};
export const body1 = {
    parameterPath: "body",
    mapper: ResourcePatchMapper
};
export const nextLink = {
    parameterPath: "nextLink",
    mapper: {
        serializedName: "nextLink",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const cloudName = {
    parameterPath: "cloudName",
    mapper: {
        serializedName: "cloudName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const body2 = {
    parameterPath: "body",
    mapper: CloudMapper
};
export const virtualNetworkName = {
    parameterPath: "virtualNetworkName",
    mapper: {
        serializedName: "virtualNetworkName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const body3 = {
    parameterPath: "body",
    mapper: VirtualNetworkMapper
};
export const virtualMachineName = {
    parameterPath: "virtualMachineName",
    mapper: {
        serializedName: "virtualMachineName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const body4 = {
    parameterPath: "body",
    mapper: VirtualMachineMapper
};
export const retain = {
    parameterPath: ["options", "retain"],
    mapper: {
        serializedName: "retain",
        type: {
            name: "Boolean"
        }
    }
};
export const body5 = {
    parameterPath: "body",
    mapper: VirtualMachineUpdateMapper
};
export const body6 = {
    parameterPath: ["options", "body"],
    mapper: StopVirtualMachineOptionsMapper
};
export const body7 = {
    parameterPath: ["options", "body"],
    mapper: VirtualMachineCreateCheckpointMapper
};
export const body8 = {
    parameterPath: ["options", "body"],
    mapper: VirtualMachineDeleteCheckpointMapper
};
export const body9 = {
    parameterPath: ["options", "body"],
    mapper: VirtualMachineRestoreCheckpointMapper
};
export const virtualMachineTemplateName = {
    parameterPath: "virtualMachineTemplateName",
    mapper: {
        serializedName: "virtualMachineTemplateName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const body10 = {
    parameterPath: "body",
    mapper: VirtualMachineTemplateMapper
};
export const availabilitySetName = {
    parameterPath: "availabilitySetName",
    mapper: {
        serializedName: "availabilitySetName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const body11 = {
    parameterPath: "body",
    mapper: AvailabilitySetMapper
};
export const body12 = {
    parameterPath: ["options", "body"],
    mapper: InventoryItemMapper
};
export const inventoryItemName = {
    parameterPath: "inventoryItemName",
    mapper: {
        serializedName: "inventoryItemName",
        required: true,
        type: {
            name: "String"
        }
    }
};
//# sourceMappingURL=parameters.js.map