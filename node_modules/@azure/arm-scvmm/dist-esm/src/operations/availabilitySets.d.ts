import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { AvailabilitySets } from "../operationsInterfaces";
import { Scvmm } from "../scvmm";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { AvailabilitySet, AvailabilitySetsListByResourceGroupOptionalParams, AvailabilitySetsListBySubscriptionOptionalParams, AvailabilitySetsGetOptionalParams, AvailabilitySetsGetResponse, AvailabilitySetsCreateOrUpdateOptionalParams, AvailabilitySetsCreateOrUpdateResponse, AvailabilitySetsDeleteOptionalParams, ResourcePatch, AvailabilitySetsUpdateOptionalParams, AvailabilitySetsUpdateResponse } from "../models";
/** Class containing AvailabilitySets operations. */
export declare class AvailabilitySetsImpl implements AvailabilitySets {
    private readonly client;
    /**
     * Initialize a new instance of the class AvailabilitySets class.
     * @param client Reference to the service client
     */
    constructor(client: Scvmm);
    /**
     * List of AvailabilitySets in a resource group.
     * @param resourceGroupName The name of the resource group.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: AvailabilitySetsListByResourceGroupOptionalParams): PagedAsyncIterableIterator<AvailabilitySet>;
    private listByResourceGroupPagingPage;
    private listByResourceGroupPagingAll;
    /**
     * List of AvailabilitySets in a subscription.
     * @param options The options parameters.
     */
    listBySubscription(options?: AvailabilitySetsListBySubscriptionOptionalParams): PagedAsyncIterableIterator<AvailabilitySet>;
    private listBySubscriptionPagingPage;
    private listBySubscriptionPagingAll;
    /**
     * Implements AvailabilitySet GET method.
     * @param resourceGroupName The name of the resource group.
     * @param availabilitySetName Name of the AvailabilitySet.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, availabilitySetName: string, options?: AvailabilitySetsGetOptionalParams): Promise<AvailabilitySetsGetResponse>;
    /**
     * Onboards the ScVmm availability set as an Azure resource.
     * @param resourceGroupName The name of the resource group.
     * @param availabilitySetName Name of the AvailabilitySet.
     * @param body Request payload.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, availabilitySetName: string, body: AvailabilitySet, options?: AvailabilitySetsCreateOrUpdateOptionalParams): Promise<PollerLike<PollOperationState<AvailabilitySetsCreateOrUpdateResponse>, AvailabilitySetsCreateOrUpdateResponse>>;
    /**
     * Onboards the ScVmm availability set as an Azure resource.
     * @param resourceGroupName The name of the resource group.
     * @param availabilitySetName Name of the AvailabilitySet.
     * @param body Request payload.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, availabilitySetName: string, body: AvailabilitySet, options?: AvailabilitySetsCreateOrUpdateOptionalParams): Promise<AvailabilitySetsCreateOrUpdateResponse>;
    /**
     * Deregisters the ScVmm availability set from Azure.
     * @param resourceGroupName The name of the resource group.
     * @param availabilitySetName Name of the AvailabilitySet.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, availabilitySetName: string, options?: AvailabilitySetsDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Deregisters the ScVmm availability set from Azure.
     * @param resourceGroupName The name of the resource group.
     * @param availabilitySetName Name of the AvailabilitySet.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, availabilitySetName: string, options?: AvailabilitySetsDeleteOptionalParams): Promise<void>;
    /**
     * Updates the AvailabilitySets resource.
     * @param resourceGroupName The name of the resource group.
     * @param availabilitySetName Name of the AvailabilitySet.
     * @param body AvailabilitySets patch payload.
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, availabilitySetName: string, body: ResourcePatch, options?: AvailabilitySetsUpdateOptionalParams): Promise<PollerLike<PollOperationState<AvailabilitySetsUpdateResponse>, AvailabilitySetsUpdateResponse>>;
    /**
     * Updates the AvailabilitySets resource.
     * @param resourceGroupName The name of the resource group.
     * @param availabilitySetName Name of the AvailabilitySet.
     * @param body AvailabilitySets patch payload.
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, availabilitySetName: string, body: ResourcePatch, options?: AvailabilitySetsUpdateOptionalParams): Promise<AvailabilitySetsUpdateResponse>;
    /**
     * List of AvailabilitySets in a resource group.
     * @param resourceGroupName The name of the resource group.
     * @param options The options parameters.
     */
    private _listByResourceGroup;
    /**
     * List of AvailabilitySets in a subscription.
     * @param options The options parameters.
     */
    private _listBySubscription;
    /**
     * ListByResourceGroupNext
     * @param resourceGroupName The name of the resource group.
     * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.
     * @param options The options parameters.
     */
    private _listByResourceGroupNext;
    /**
     * ListBySubscriptionNext
     * @param nextLink The nextLink from the previous successful call to the ListBySubscription method.
     * @param options The options parameters.
     */
    private _listBySubscriptionNext;
}
//# sourceMappingURL=availabilitySets.d.ts.map