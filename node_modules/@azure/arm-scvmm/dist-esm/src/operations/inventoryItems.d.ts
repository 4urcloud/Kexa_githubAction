import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { InventoryItems } from "../operationsInterfaces";
import { Scvmm } from "../scvmm";
import { InventoryItem, InventoryItemsListByVMMServerOptionalParams, InventoryItemsCreateOptionalParams, InventoryItemsCreateResponse, InventoryItemsGetOptionalParams, InventoryItemsGetResponse, InventoryItemsDeleteOptionalParams } from "../models";
/** Class containing InventoryItems operations. */
export declare class InventoryItemsImpl implements InventoryItems {
    private readonly client;
    /**
     * Initialize a new instance of the class InventoryItems class.
     * @param client Reference to the service client
     */
    constructor(client: Scvmm);
    /**
     * Returns the list of inventoryItems in the given VMMServer.
     * @param resourceGroupName The name of the resource group.
     * @param vmmServerName Name of the VMMServer.
     * @param options The options parameters.
     */
    listByVMMServer(resourceGroupName: string, vmmServerName: string, options?: InventoryItemsListByVMMServerOptionalParams): PagedAsyncIterableIterator<InventoryItem>;
    private listByVMMServerPagingPage;
    private listByVMMServerPagingAll;
    /**
     * Create Or Update InventoryItem.
     * @param resourceGroupName The name of the resource group.
     * @param vmmServerName Name of the VMMServer.
     * @param inventoryItemName Name of the inventoryItem.
     * @param options The options parameters.
     */
    create(resourceGroupName: string, vmmServerName: string, inventoryItemName: string, options?: InventoryItemsCreateOptionalParams): Promise<InventoryItemsCreateResponse>;
    /**
     * Shows an inventory item.
     * @param resourceGroupName The name of the resource group.
     * @param vmmServerName Name of the VMMServer.
     * @param inventoryItemName Name of the inventoryItem.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, vmmServerName: string, inventoryItemName: string, options?: InventoryItemsGetOptionalParams): Promise<InventoryItemsGetResponse>;
    /**
     * Deletes an inventoryItem.
     * @param resourceGroupName The name of the resource group.
     * @param vmmServerName Name of the VMMServer.
     * @param inventoryItemName Name of the inventoryItem.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, vmmServerName: string, inventoryItemName: string, options?: InventoryItemsDeleteOptionalParams): Promise<void>;
    /**
     * Returns the list of inventoryItems in the given VMMServer.
     * @param resourceGroupName The name of the resource group.
     * @param vmmServerName Name of the VMMServer.
     * @param options The options parameters.
     */
    private _listByVMMServer;
    /**
     * ListByVMMServerNext
     * @param resourceGroupName The name of the resource group.
     * @param vmmServerName Name of the VMMServer.
     * @param nextLink The nextLink from the previous successful call to the ListByVMMServer method.
     * @param options The options parameters.
     */
    private _listByVMMServerNext;
}
//# sourceMappingURL=inventoryItems.d.ts.map