import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { VirtualNetworks } from "../operationsInterfaces";
import { Scvmm } from "../scvmm";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { VirtualNetwork, VirtualNetworksListByResourceGroupOptionalParams, VirtualNetworksListBySubscriptionOptionalParams, VirtualNetworksGetOptionalParams, VirtualNetworksGetResponse, VirtualNetworksCreateOrUpdateOptionalParams, VirtualNetworksCreateOrUpdateResponse, VirtualNetworksDeleteOptionalParams, ResourcePatch, VirtualNetworksUpdateOptionalParams, VirtualNetworksUpdateResponse } from "../models";
/** Class containing VirtualNetworks operations. */
export declare class VirtualNetworksImpl implements VirtualNetworks {
    private readonly client;
    /**
     * Initialize a new instance of the class VirtualNetworks class.
     * @param client Reference to the service client
     */
    constructor(client: Scvmm);
    /**
     * List of VirtualNetworks in a resource group.
     * @param resourceGroupName The name of the resource group.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: VirtualNetworksListByResourceGroupOptionalParams): PagedAsyncIterableIterator<VirtualNetwork>;
    private listByResourceGroupPagingPage;
    private listByResourceGroupPagingAll;
    /**
     * List of VirtualNetworks in a subscription.
     * @param options The options parameters.
     */
    listBySubscription(options?: VirtualNetworksListBySubscriptionOptionalParams): PagedAsyncIterableIterator<VirtualNetwork>;
    private listBySubscriptionPagingPage;
    private listBySubscriptionPagingAll;
    /**
     * Implements VirtualNetwork GET method.
     * @param resourceGroupName The name of the resource group.
     * @param virtualNetworkName Name of the VirtualNetwork.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, virtualNetworkName: string, options?: VirtualNetworksGetOptionalParams): Promise<VirtualNetworksGetResponse>;
    /**
     * Onboards the ScVmm virtual network as an Azure virtual network resource.
     * @param resourceGroupName The name of the resource group.
     * @param virtualNetworkName Name of the VirtualNetwork.
     * @param body Request payload.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, virtualNetworkName: string, body: VirtualNetwork, options?: VirtualNetworksCreateOrUpdateOptionalParams): Promise<PollerLike<PollOperationState<VirtualNetworksCreateOrUpdateResponse>, VirtualNetworksCreateOrUpdateResponse>>;
    /**
     * Onboards the ScVmm virtual network as an Azure virtual network resource.
     * @param resourceGroupName The name of the resource group.
     * @param virtualNetworkName Name of the VirtualNetwork.
     * @param body Request payload.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, virtualNetworkName: string, body: VirtualNetwork, options?: VirtualNetworksCreateOrUpdateOptionalParams): Promise<VirtualNetworksCreateOrUpdateResponse>;
    /**
     * Deregisters the ScVmm virtual network from Azure.
     * @param resourceGroupName The name of the resource group.
     * @param virtualNetworkName Name of the VirtualNetwork.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, virtualNetworkName: string, options?: VirtualNetworksDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Deregisters the ScVmm virtual network from Azure.
     * @param resourceGroupName The name of the resource group.
     * @param virtualNetworkName Name of the VirtualNetwork.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, virtualNetworkName: string, options?: VirtualNetworksDeleteOptionalParams): Promise<void>;
    /**
     * Updates the VirtualNetworks resource.
     * @param resourceGroupName The name of the resource group.
     * @param virtualNetworkName Name of the VirtualNetwork.
     * @param body VirtualNetworks patch payload.
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, virtualNetworkName: string, body: ResourcePatch, options?: VirtualNetworksUpdateOptionalParams): Promise<PollerLike<PollOperationState<VirtualNetworksUpdateResponse>, VirtualNetworksUpdateResponse>>;
    /**
     * Updates the VirtualNetworks resource.
     * @param resourceGroupName The name of the resource group.
     * @param virtualNetworkName Name of the VirtualNetwork.
     * @param body VirtualNetworks patch payload.
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, virtualNetworkName: string, body: ResourcePatch, options?: VirtualNetworksUpdateOptionalParams): Promise<VirtualNetworksUpdateResponse>;
    /**
     * List of VirtualNetworks in a resource group.
     * @param resourceGroupName The name of the resource group.
     * @param options The options parameters.
     */
    private _listByResourceGroup;
    /**
     * List of VirtualNetworks in a subscription.
     * @param options The options parameters.
     */
    private _listBySubscription;
    /**
     * ListByResourceGroupNext
     * @param resourceGroupName The name of the resource group.
     * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.
     * @param options The options parameters.
     */
    private _listByResourceGroupNext;
    /**
     * ListBySubscriptionNext
     * @param nextLink The nextLink from the previous successful call to the ListBySubscription method.
     * @param options The options parameters.
     */
    private _listBySubscriptionNext;
}
//# sourceMappingURL=virtualNetworks.d.ts.map