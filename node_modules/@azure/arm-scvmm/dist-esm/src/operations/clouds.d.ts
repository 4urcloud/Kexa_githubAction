import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Clouds } from "../operationsInterfaces";
import { Scvmm } from "../scvmm";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { Cloud, CloudsListByResourceGroupOptionalParams, CloudsListBySubscriptionOptionalParams, CloudsGetOptionalParams, CloudsGetResponse, CloudsCreateOrUpdateOptionalParams, CloudsCreateOrUpdateResponse, CloudsDeleteOptionalParams, ResourcePatch, CloudsUpdateOptionalParams, CloudsUpdateResponse } from "../models";
/** Class containing Clouds operations. */
export declare class CloudsImpl implements Clouds {
    private readonly client;
    /**
     * Initialize a new instance of the class Clouds class.
     * @param client Reference to the service client
     */
    constructor(client: Scvmm);
    /**
     * List of Clouds in a resource group.
     * @param resourceGroupName The name of the resource group.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: CloudsListByResourceGroupOptionalParams): PagedAsyncIterableIterator<Cloud>;
    private listByResourceGroupPagingPage;
    private listByResourceGroupPagingAll;
    /**
     * List of Clouds in a subscription.
     * @param options The options parameters.
     */
    listBySubscription(options?: CloudsListBySubscriptionOptionalParams): PagedAsyncIterableIterator<Cloud>;
    private listBySubscriptionPagingPage;
    private listBySubscriptionPagingAll;
    /**
     * Implements Cloud GET method.
     * @param resourceGroupName The name of the resource group.
     * @param cloudName Name of the Cloud.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, cloudName: string, options?: CloudsGetOptionalParams): Promise<CloudsGetResponse>;
    /**
     * Onboards the ScVmm fabric cloud as an Azure cloud resource.
     * @param resourceGroupName The name of the resource group.
     * @param cloudName Name of the Cloud.
     * @param body Request payload.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, cloudName: string, body: Cloud, options?: CloudsCreateOrUpdateOptionalParams): Promise<PollerLike<PollOperationState<CloudsCreateOrUpdateResponse>, CloudsCreateOrUpdateResponse>>;
    /**
     * Onboards the ScVmm fabric cloud as an Azure cloud resource.
     * @param resourceGroupName The name of the resource group.
     * @param cloudName Name of the Cloud.
     * @param body Request payload.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, cloudName: string, body: Cloud, options?: CloudsCreateOrUpdateOptionalParams): Promise<CloudsCreateOrUpdateResponse>;
    /**
     * Deregisters the ScVmm fabric cloud from Azure.
     * @param resourceGroupName The name of the resource group.
     * @param cloudName Name of the Cloud.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, cloudName: string, options?: CloudsDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Deregisters the ScVmm fabric cloud from Azure.
     * @param resourceGroupName The name of the resource group.
     * @param cloudName Name of the Cloud.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, cloudName: string, options?: CloudsDeleteOptionalParams): Promise<void>;
    /**
     * Updates the Clouds resource.
     * @param resourceGroupName The name of the resource group.
     * @param cloudName Name of the Cloud.
     * @param body Clouds patch payload.
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, cloudName: string, body: ResourcePatch, options?: CloudsUpdateOptionalParams): Promise<PollerLike<PollOperationState<CloudsUpdateResponse>, CloudsUpdateResponse>>;
    /**
     * Updates the Clouds resource.
     * @param resourceGroupName The name of the resource group.
     * @param cloudName Name of the Cloud.
     * @param body Clouds patch payload.
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, cloudName: string, body: ResourcePatch, options?: CloudsUpdateOptionalParams): Promise<CloudsUpdateResponse>;
    /**
     * List of Clouds in a resource group.
     * @param resourceGroupName The name of the resource group.
     * @param options The options parameters.
     */
    private _listByResourceGroup;
    /**
     * List of Clouds in a subscription.
     * @param options The options parameters.
     */
    private _listBySubscription;
    /**
     * ListByResourceGroupNext
     * @param resourceGroupName The name of the resource group.
     * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.
     * @param options The options parameters.
     */
    private _listByResourceGroupNext;
    /**
     * ListBySubscriptionNext
     * @param nextLink The nextLink from the previous successful call to the ListBySubscription method.
     * @param options The options parameters.
     */
    private _listBySubscriptionNext;
}
//# sourceMappingURL=clouds.d.ts.map