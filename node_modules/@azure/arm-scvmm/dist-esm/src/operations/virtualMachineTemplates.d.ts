import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { VirtualMachineTemplates } from "../operationsInterfaces";
import { Scvmm } from "../scvmm";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { VirtualMachineTemplate, VirtualMachineTemplatesListByResourceGroupOptionalParams, VirtualMachineTemplatesListBySubscriptionOptionalParams, VirtualMachineTemplatesGetOptionalParams, VirtualMachineTemplatesGetResponse, VirtualMachineTemplatesCreateOrUpdateOptionalParams, VirtualMachineTemplatesCreateOrUpdateResponse, VirtualMachineTemplatesDeleteOptionalParams, ResourcePatch, VirtualMachineTemplatesUpdateOptionalParams, VirtualMachineTemplatesUpdateResponse } from "../models";
/** Class containing VirtualMachineTemplates operations. */
export declare class VirtualMachineTemplatesImpl implements VirtualMachineTemplates {
    private readonly client;
    /**
     * Initialize a new instance of the class VirtualMachineTemplates class.
     * @param client Reference to the service client
     */
    constructor(client: Scvmm);
    /**
     * List of VirtualMachineTemplates in a resource group.
     * @param resourceGroupName The name of the resource group.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: VirtualMachineTemplatesListByResourceGroupOptionalParams): PagedAsyncIterableIterator<VirtualMachineTemplate>;
    private listByResourceGroupPagingPage;
    private listByResourceGroupPagingAll;
    /**
     * List of VirtualMachineTemplates in a subscription.
     * @param options The options parameters.
     */
    listBySubscription(options?: VirtualMachineTemplatesListBySubscriptionOptionalParams): PagedAsyncIterableIterator<VirtualMachineTemplate>;
    private listBySubscriptionPagingPage;
    private listBySubscriptionPagingAll;
    /**
     * Implements VirtualMachineTemplate GET method.
     * @param resourceGroupName The name of the resource group.
     * @param virtualMachineTemplateName Name of the VirtualMachineTemplate.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, virtualMachineTemplateName: string, options?: VirtualMachineTemplatesGetOptionalParams): Promise<VirtualMachineTemplatesGetResponse>;
    /**
     * Onboards the ScVmm VM Template as an Azure VM Template resource.
     * @param resourceGroupName The name of the resource group.
     * @param virtualMachineTemplateName Name of the VirtualMachineTemplate.
     * @param body Request payload.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, virtualMachineTemplateName: string, body: VirtualMachineTemplate, options?: VirtualMachineTemplatesCreateOrUpdateOptionalParams): Promise<PollerLike<PollOperationState<VirtualMachineTemplatesCreateOrUpdateResponse>, VirtualMachineTemplatesCreateOrUpdateResponse>>;
    /**
     * Onboards the ScVmm VM Template as an Azure VM Template resource.
     * @param resourceGroupName The name of the resource group.
     * @param virtualMachineTemplateName Name of the VirtualMachineTemplate.
     * @param body Request payload.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, virtualMachineTemplateName: string, body: VirtualMachineTemplate, options?: VirtualMachineTemplatesCreateOrUpdateOptionalParams): Promise<VirtualMachineTemplatesCreateOrUpdateResponse>;
    /**
     * Deregisters the ScVmm VM Template from Azure.
     * @param resourceGroupName The name of the resource group.
     * @param virtualMachineTemplateName Name of the VirtualMachineTemplate.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, virtualMachineTemplateName: string, options?: VirtualMachineTemplatesDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Deregisters the ScVmm VM Template from Azure.
     * @param resourceGroupName The name of the resource group.
     * @param virtualMachineTemplateName Name of the VirtualMachineTemplate.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, virtualMachineTemplateName: string, options?: VirtualMachineTemplatesDeleteOptionalParams): Promise<void>;
    /**
     * Updates the VirtualMachineTemplate resource.
     * @param resourceGroupName The name of the resource group.
     * @param virtualMachineTemplateName Name of the VirtualMachineTemplate.
     * @param body VirtualMachineTemplates patch details.
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, virtualMachineTemplateName: string, body: ResourcePatch, options?: VirtualMachineTemplatesUpdateOptionalParams): Promise<PollerLike<PollOperationState<VirtualMachineTemplatesUpdateResponse>, VirtualMachineTemplatesUpdateResponse>>;
    /**
     * Updates the VirtualMachineTemplate resource.
     * @param resourceGroupName The name of the resource group.
     * @param virtualMachineTemplateName Name of the VirtualMachineTemplate.
     * @param body VirtualMachineTemplates patch details.
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, virtualMachineTemplateName: string, body: ResourcePatch, options?: VirtualMachineTemplatesUpdateOptionalParams): Promise<VirtualMachineTemplatesUpdateResponse>;
    /**
     * List of VirtualMachineTemplates in a resource group.
     * @param resourceGroupName The name of the resource group.
     * @param options The options parameters.
     */
    private _listByResourceGroup;
    /**
     * List of VirtualMachineTemplates in a subscription.
     * @param options The options parameters.
     */
    private _listBySubscription;
    /**
     * ListByResourceGroupNext
     * @param resourceGroupName The name of the resource group.
     * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.
     * @param options The options parameters.
     */
    private _listByResourceGroupNext;
    /**
     * ListBySubscriptionNext
     * @param nextLink The nextLink from the previous successful call to the ListBySubscription method.
     * @param options The options parameters.
     */
    private _listBySubscriptionNext;
}
//# sourceMappingURL=virtualMachineTemplates.d.ts.map