/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { Scvmm } from "@azure/arm-scvmm";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Creates a checkpoint in virtual machine.
 *
 * @summary Creates a checkpoint in virtual machine.
 * x-ms-original-file: specification/scvmm/resource-manager/Microsoft.ScVmm/preview/2020-06-05-preview/examples/CreateCheckpointVirtualMachine.json
 */
function createCheckpointVirtualMachine() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["SCVMM_SUBSCRIPTION_ID"] ||
            "fd3c3665-1729-4b7b-9a38-238e83b0f98b";
        const resourceGroupName = process.env["SCVMM_RESOURCE_GROUP"] || "testrg";
        const virtualMachineName = "DemoVM";
        const body = {
            name: "Demo Checkpoint name",
            description: "Demo Checkpoint description"
        };
        const options = { body };
        const credential = new DefaultAzureCredential();
        const client = new Scvmm(credential, subscriptionId);
        const result = yield client.virtualMachines.beginCreateCheckpointAndWait(resourceGroupName, virtualMachineName, options);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        createCheckpointVirtualMachine();
    });
}
main().catch(console.error);
//# sourceMappingURL=virtualMachinesCreateCheckpointSample.js.map