import * as coreAuth from '@azure/core-auth';
import * as coreClient from '@azure/core-client';
import { PagedAsyncIterableIterator } from '@azure/core-paging';

/** Request for account key regeneration */
export declare interface AccountKeyRegenerateRequest {
    /** serial of key to be regenerated */
    serial?: Serial;
}

/** Developer Keys of account */
export declare interface AccountKeys {
    /**
     * value of primary key.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly primaryKey?: string;
    /**
     * value of secondary key.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly secondaryKey?: string;
}

/** Optional parameters. */
export declare interface CheckNameAvailabilityLocalOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the checkNameAvailabilityLocal operation. */
export declare type CheckNameAvailabilityLocalResponse = CheckNameAvailabilityResponse;

/** Check Name Availability Request */
export declare interface CheckNameAvailabilityRequest {
    /** Resource Name To Verify */
    name: string;
    /** Fully qualified resource type which includes provider namespace */
    type: string;
}

/** Check Name Availability Response */
export declare interface CheckNameAvailabilityResponse {
    /** if name Available */
    nameAvailable: boolean;
    /** Resource Name To Verify */
    reason?: NameUnavailableReason;
    /** detail message */
    message?: string;
}

/** An Error response. */
export declare interface CloudError {
    /** An Error response. */
    error?: CloudErrorBody;
}

/** An error response from Azure. */
export declare interface CloudErrorBody {
    /** An identifier for the error. Codes are invariant and are intended to be consumed programmatically. */
    code?: string;
    /** A message describing the error, intended to be suitable for displaying in a user interface. */
    message?: string;
    /** The target of the particular error. For example, the name of the property in error. */
    target?: string;
    /** A list of additional details about the error. */
    details?: CloudErrorBody[];
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export declare type CreatedByType = string;

/** Identity for the resource. */
export declare interface Identity {
    /**
     * The principal ID of resource identity.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly principalId?: string;
    /**
     * The tenant ID of resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly tenantId?: string;
    /** The identity type. */
    type?: "SystemAssigned";
}

/** Known values of {@link CreatedByType} that the service accepts. */
export declare enum KnownCreatedByType {
    User = "User",
    Application = "Application",
    ManagedIdentity = "ManagedIdentity",
    Key = "Key"
}

/** Known values of {@link NameUnavailableReason} that the service accepts. */
export declare enum KnownNameUnavailableReason {
    Invalid = "Invalid",
    AlreadyExists = "AlreadyExists"
}

/** Specifications of the Log for Azure Monitoring */
export declare interface LogSpecification {
    /** Name of the log */
    name?: string;
    /** Localized friendly display name of the log */
    displayName?: string;
    /** Blob duration of the log */
    blobDuration?: string;
}

/** Specifications of the Dimension of metrics */
export declare interface MetricDimension {
    /** Name of the dimension */
    name?: string;
    /** Localized friendly display name of the dimension */
    displayName?: string;
    /** Internal name of the dimension. */
    internalName?: string;
}

/** Specifications of the Metrics for Azure Monitoring */
export declare interface MetricSpecification {
    /** Name of the metric */
    name?: string;
    /** Localized friendly display name of the metric */
    displayName?: string;
    /** Localized friendly description of the metric */
    displayDescription?: string;
    /** Unit that makes sense for the metric */
    unit?: string;
    /** Only provide one value for this field. Valid values: Average, Minimum, Maximum, Total, Count. */
    aggregationType?: string;
    /** Supported aggregation types. Valid values: Average, Minimum, Maximum, Total, Count. */
    supportedAggregationTypes?: string[];
    /** Supported time grains. Valid values: PT1M, PT5M, PT15M, PT30M, PT1H, PT6H, PT12H, P1D */
    supportedTimeGrainTypes?: string[];
    /** Flag to indicate use of regional Mdm accounts */
    enableRegionalMdmAccount?: boolean;
    /** Source mdm account */
    sourceMdmAccount?: string;
    /** Source mdm namespace */
    sourceMdmNamespace?: string;
    /** Metric filter regex pattern */
    metricFilterPattern?: string;
    /** Flag to determine is Zero is returned for time duration where no metric is emitted */
    fillGapWithZero?: boolean;
    /** Metric category */
    category?: string;
    /** Internal metric name. */
    internalMetricName?: string;
    /** Dimensions of the metric */
    dimensions?: MetricDimension[];
    /** Locked aggregation type of the metric */
    lockedAggregationType?: string;
}

export declare class MixedRealityClient extends coreClient.ServiceClient {
    $host: string;
    apiVersion: string;
    subscriptionId: string;
    /**
     * Initializes a new instance of the MixedRealityClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId The Azure subscription ID. This is a GUID-formatted string (e.g.
     *                       00000000-0000-0000-0000-000000000000)
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: MixedRealityClientOptionalParams);
    /**
     * Check Name Availability for local uniqueness
     * @param location The location in which uniqueness will be verified.
     * @param checkNameAvailability Check Name Availability Request.
     * @param options The options parameters.
     */
    checkNameAvailabilityLocal(location: string, checkNameAvailability: CheckNameAvailabilityRequest, options?: CheckNameAvailabilityLocalOptionalParams): Promise<CheckNameAvailabilityLocalResponse>;
    operations: Operations;
    spatialAnchorsAccounts: SpatialAnchorsAccounts;
    remoteRenderingAccounts: RemoteRenderingAccounts;
}

/** Optional parameters. */
export declare interface MixedRealityClientOptionalParams extends coreClient.ServiceClientOptions {
    /** server parameter */
    $host?: string;
    /** Api Version */
    apiVersion?: string;
    /** Overrides client endpoint. */
    endpoint?: string;
}

/**
 * Defines values for NameUnavailableReason. \
 * {@link KnownNameUnavailableReason} can be used interchangeably with NameUnavailableReason,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **AlreadyExists**
 */
export declare type NameUnavailableReason = string;

/** REST API operation */
export declare interface Operation {
    /** Operation name: {provider}/{resource}/{operation} */
    name?: string;
    /** The object that represents the operation. */
    display?: OperationDisplay;
    /** Whether or not this is a data plane operation */
    isDataAction?: boolean;
    /** The origin */
    origin?: string;
    /** Properties of the operation */
    properties?: OperationProperties;
}

/** The object that represents the operation. */
export declare interface OperationDisplay {
    /** Service provider: Microsoft.ResourceProvider */
    provider: string;
    /** Resource on which the operation is performed: Profile, endpoint, etc. */
    resource: string;
    /** Operation type: Read, write, delete, etc. */
    operation: string;
    /** Description of operation */
    description: string;
}

/** Result of the request to list Resource Provider operations. It contains a list of operations and a URL link to get the next set of results. */
export declare interface OperationPage {
    /** List of operations supported by the Resource Provider. */
    value?: Operation[];
    /** URL to get the next set of operation list results if there are any. */
    nextLink?: string;
}

/** Operation properties. */
export declare interface OperationProperties {
    /** Service specification. */
    serviceSpecification?: ServiceSpecification;
}

/** Interface representing a Operations. */
export declare interface Operations {
    /**
     * Exposing Available Operations
     * @param options The options parameters.
     */
    list(options?: OperationsListOptionalParams): PagedAsyncIterableIterator<Operation>;
}

/** Optional parameters. */
export declare interface OperationsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type OperationsListNextResponse = OperationPage;

/** Optional parameters. */
export declare interface OperationsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type OperationsListResponse = OperationPage;

/** RemoteRenderingAccount Response. */
export declare type RemoteRenderingAccount = TrackedResource & {
    /** The identity associated with this account */
    identity?: Identity;
    /** The plan associated with this account */
    plan?: Identity;
    /** The sku associated with this account */
    sku?: Sku;
    /** The kind of account, if supported */
    kind?: Sku;
    /**
     * System metadata for this account
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
    /** The name of the storage account associated with this accountId */
    storageAccountName?: string;
    /**
     * unique id of certain account.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly accountId?: string;
    /**
     * Correspond domain name of certain Spatial Anchors Account
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly accountDomain?: string;
};

/** Result of the request to get resource collection. It contains a list of resources and a URL link to get the next set of results. */
export declare interface RemoteRenderingAccountPage {
    /** List of resources supported by the Resource Provider. */
    value?: RemoteRenderingAccount[];
    /** URL to get the next set of resource list results if there are any. */
    nextLink?: string;
}

/** Interface representing a RemoteRenderingAccounts. */
export declare interface RemoteRenderingAccounts {
    /**
     * List Remote Rendering Accounts by Subscription
     * @param options The options parameters.
     */
    listBySubscription(options?: RemoteRenderingAccountsListBySubscriptionOptionalParams): PagedAsyncIterableIterator<RemoteRenderingAccount>;
    /**
     * List Resources by Resource Group
     * @param resourceGroupName Name of an Azure resource group.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: RemoteRenderingAccountsListByResourceGroupOptionalParams): PagedAsyncIterableIterator<RemoteRenderingAccount>;
    /**
     * Delete a Remote Rendering Account.
     * @param resourceGroupName Name of an Azure resource group.
     * @param accountName Name of an Mixed Reality Account.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, accountName: string, options?: RemoteRenderingAccountsDeleteOptionalParams): Promise<void>;
    /**
     * Retrieve a Remote Rendering Account.
     * @param resourceGroupName Name of an Azure resource group.
     * @param accountName Name of an Mixed Reality Account.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, accountName: string, options?: RemoteRenderingAccountsGetOptionalParams): Promise<RemoteRenderingAccountsGetResponse>;
    /**
     * Updating a Remote Rendering Account
     * @param resourceGroupName Name of an Azure resource group.
     * @param accountName Name of an Mixed Reality Account.
     * @param remoteRenderingAccount Remote Rendering Account parameter.
     * @param options The options parameters.
     */
    update(resourceGroupName: string, accountName: string, remoteRenderingAccount: RemoteRenderingAccount, options?: RemoteRenderingAccountsUpdateOptionalParams): Promise<RemoteRenderingAccountsUpdateResponse>;
    /**
     * Creating or Updating a Remote Rendering Account.
     * @param resourceGroupName Name of an Azure resource group.
     * @param accountName Name of an Mixed Reality Account.
     * @param remoteRenderingAccount Remote Rendering Account parameter.
     * @param options The options parameters.
     */
    create(resourceGroupName: string, accountName: string, remoteRenderingAccount: RemoteRenderingAccount, options?: RemoteRenderingAccountsCreateOptionalParams): Promise<RemoteRenderingAccountsCreateResponse>;
    /**
     * List Both of the 2 Keys of a Remote Rendering Account
     * @param resourceGroupName Name of an Azure resource group.
     * @param accountName Name of an Mixed Reality Account.
     * @param options The options parameters.
     */
    listKeys(resourceGroupName: string, accountName: string, options?: RemoteRenderingAccountsListKeysOptionalParams): Promise<RemoteRenderingAccountsListKeysResponse>;
    /**
     * Regenerate specified Key of a Remote Rendering Account
     * @param resourceGroupName Name of an Azure resource group.
     * @param accountName Name of an Mixed Reality Account.
     * @param regenerate Required information for key regeneration.
     * @param options The options parameters.
     */
    regenerateKeys(resourceGroupName: string, accountName: string, regenerate: AccountKeyRegenerateRequest, options?: RemoteRenderingAccountsRegenerateKeysOptionalParams): Promise<RemoteRenderingAccountsRegenerateKeysResponse>;
}

/** Optional parameters. */
export declare interface RemoteRenderingAccountsCreateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the create operation. */
export declare type RemoteRenderingAccountsCreateResponse = RemoteRenderingAccount;

/** Optional parameters. */
export declare interface RemoteRenderingAccountsDeleteOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface RemoteRenderingAccountsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type RemoteRenderingAccountsGetResponse = RemoteRenderingAccount;

/** Optional parameters. */
export declare interface RemoteRenderingAccountsListByResourceGroupNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroupNext operation. */
export declare type RemoteRenderingAccountsListByResourceGroupNextResponse = RemoteRenderingAccountPage;

/** Optional parameters. */
export declare interface RemoteRenderingAccountsListByResourceGroupOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroup operation. */
export declare type RemoteRenderingAccountsListByResourceGroupResponse = RemoteRenderingAccountPage;

/** Optional parameters. */
export declare interface RemoteRenderingAccountsListBySubscriptionNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listBySubscriptionNext operation. */
export declare type RemoteRenderingAccountsListBySubscriptionNextResponse = RemoteRenderingAccountPage;

/** Optional parameters. */
export declare interface RemoteRenderingAccountsListBySubscriptionOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listBySubscription operation. */
export declare type RemoteRenderingAccountsListBySubscriptionResponse = RemoteRenderingAccountPage;

/** Optional parameters. */
export declare interface RemoteRenderingAccountsListKeysOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listKeys operation. */
export declare type RemoteRenderingAccountsListKeysResponse = AccountKeys;

/** Optional parameters. */
export declare interface RemoteRenderingAccountsRegenerateKeysOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the regenerateKeys operation. */
export declare type RemoteRenderingAccountsRegenerateKeysResponse = AccountKeys;

/** Optional parameters. */
export declare interface RemoteRenderingAccountsUpdateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the update operation. */
export declare type RemoteRenderingAccountsUpdateResponse = RemoteRenderingAccount;

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export declare interface Resource {
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /**
     * The name of the resource
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
}

/** Defines values for Serial. */
export declare type Serial = 1 | 2;

/** Service specification payload */
export declare interface ServiceSpecification {
    /** Specifications of the Log for Azure Monitoring */
    logSpecifications?: LogSpecification[];
    /** Specifications of the Metrics for Azure Monitoring */
    metricSpecifications?: MetricSpecification[];
}

/** The resource model definition representing SKU */
export declare interface Sku {
    /** The name of the SKU. Ex - P3. It is typically a letter+number code */
    name: string;
    /** This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT. */
    tier?: SkuTier;
    /** The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. */
    size?: string;
    /** If the service has different generations of hardware, for the same SKU, then that can be captured here. */
    family?: string;
    /** If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted. */
    capacity?: number;
}

/** Defines values for SkuTier. */
export declare type SkuTier = "Free" | "Basic" | "Standard" | "Premium";

/** SpatialAnchorsAccount Response. */
export declare type SpatialAnchorsAccount = TrackedResource & {
    /** The identity associated with this account */
    identity?: Identity;
    /** The plan associated with this account */
    plan?: Identity;
    /** The sku associated with this account */
    sku?: Sku;
    /** The kind of account, if supported */
    kind?: Sku;
    /**
     * System metadata for this account
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
    /** The name of the storage account associated with this accountId */
    storageAccountName?: string;
    /**
     * unique id of certain account.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly accountId?: string;
    /**
     * Correspond domain name of certain Spatial Anchors Account
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly accountDomain?: string;
};

/** Result of the request to get resource collection. It contains a list of resources and a URL link to get the next set of results. */
export declare interface SpatialAnchorsAccountPage {
    /** List of resources supported by the Resource Provider. */
    value?: SpatialAnchorsAccount[];
    /** URL to get the next set of resource list results if there are any. */
    nextLink?: string;
}

/** Interface representing a SpatialAnchorsAccounts. */
export declare interface SpatialAnchorsAccounts {
    /**
     * List Spatial Anchors Accounts by Subscription
     * @param options The options parameters.
     */
    listBySubscription(options?: SpatialAnchorsAccountsListBySubscriptionOptionalParams): PagedAsyncIterableIterator<SpatialAnchorsAccount>;
    /**
     * List Resources by Resource Group
     * @param resourceGroupName Name of an Azure resource group.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: SpatialAnchorsAccountsListByResourceGroupOptionalParams): PagedAsyncIterableIterator<SpatialAnchorsAccount>;
    /**
     * Delete a Spatial Anchors Account.
     * @param resourceGroupName Name of an Azure resource group.
     * @param accountName Name of an Mixed Reality Account.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, accountName: string, options?: SpatialAnchorsAccountsDeleteOptionalParams): Promise<void>;
    /**
     * Retrieve a Spatial Anchors Account.
     * @param resourceGroupName Name of an Azure resource group.
     * @param accountName Name of an Mixed Reality Account.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, accountName: string, options?: SpatialAnchorsAccountsGetOptionalParams): Promise<SpatialAnchorsAccountsGetResponse>;
    /**
     * Updating a Spatial Anchors Account
     * @param resourceGroupName Name of an Azure resource group.
     * @param accountName Name of an Mixed Reality Account.
     * @param spatialAnchorsAccount Spatial Anchors Account parameter.
     * @param options The options parameters.
     */
    update(resourceGroupName: string, accountName: string, spatialAnchorsAccount: SpatialAnchorsAccount, options?: SpatialAnchorsAccountsUpdateOptionalParams): Promise<SpatialAnchorsAccountsUpdateResponse>;
    /**
     * Creating or Updating a Spatial Anchors Account.
     * @param resourceGroupName Name of an Azure resource group.
     * @param accountName Name of an Mixed Reality Account.
     * @param spatialAnchorsAccount Spatial Anchors Account parameter.
     * @param options The options parameters.
     */
    create(resourceGroupName: string, accountName: string, spatialAnchorsAccount: SpatialAnchorsAccount, options?: SpatialAnchorsAccountsCreateOptionalParams): Promise<SpatialAnchorsAccountsCreateResponse>;
    /**
     * List Both of the 2 Keys of a Spatial Anchors Account
     * @param resourceGroupName Name of an Azure resource group.
     * @param accountName Name of an Mixed Reality Account.
     * @param options The options parameters.
     */
    listKeys(resourceGroupName: string, accountName: string, options?: SpatialAnchorsAccountsListKeysOptionalParams): Promise<SpatialAnchorsAccountsListKeysResponse>;
    /**
     * Regenerate specified Key of a Spatial Anchors Account
     * @param resourceGroupName Name of an Azure resource group.
     * @param accountName Name of an Mixed Reality Account.
     * @param regenerate Required information for key regeneration.
     * @param options The options parameters.
     */
    regenerateKeys(resourceGroupName: string, accountName: string, regenerate: AccountKeyRegenerateRequest, options?: SpatialAnchorsAccountsRegenerateKeysOptionalParams): Promise<SpatialAnchorsAccountsRegenerateKeysResponse>;
}

/** Optional parameters. */
export declare interface SpatialAnchorsAccountsCreateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the create operation. */
export declare type SpatialAnchorsAccountsCreateResponse = SpatialAnchorsAccount;

/** Optional parameters. */
export declare interface SpatialAnchorsAccountsDeleteOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface SpatialAnchorsAccountsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type SpatialAnchorsAccountsGetResponse = SpatialAnchorsAccount;

/** Optional parameters. */
export declare interface SpatialAnchorsAccountsListByResourceGroupNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroupNext operation. */
export declare type SpatialAnchorsAccountsListByResourceGroupNextResponse = SpatialAnchorsAccountPage;

/** Optional parameters. */
export declare interface SpatialAnchorsAccountsListByResourceGroupOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroup operation. */
export declare type SpatialAnchorsAccountsListByResourceGroupResponse = SpatialAnchorsAccountPage;

/** Optional parameters. */
export declare interface SpatialAnchorsAccountsListBySubscriptionNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listBySubscriptionNext operation. */
export declare type SpatialAnchorsAccountsListBySubscriptionNextResponse = SpatialAnchorsAccountPage;

/** Optional parameters. */
export declare interface SpatialAnchorsAccountsListBySubscriptionOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listBySubscription operation. */
export declare type SpatialAnchorsAccountsListBySubscriptionResponse = SpatialAnchorsAccountPage;

/** Optional parameters. */
export declare interface SpatialAnchorsAccountsListKeysOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listKeys operation. */
export declare type SpatialAnchorsAccountsListKeysResponse = AccountKeys;

/** Optional parameters. */
export declare interface SpatialAnchorsAccountsRegenerateKeysOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the regenerateKeys operation. */
export declare type SpatialAnchorsAccountsRegenerateKeysResponse = AccountKeys;

/** Optional parameters. */
export declare interface SpatialAnchorsAccountsUpdateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the update operation. */
export declare type SpatialAnchorsAccountsUpdateResponse = SpatialAnchorsAccount;

/** Metadata pertaining to creation and last modification of the resource. */
export declare interface SystemData {
    /** The identity that created the resource. */
    createdBy?: string;
    /** The type of identity that created the resource. */
    createdByType?: CreatedByType;
    /** The timestamp of resource creation (UTC). */
    createdAt?: Date;
    /** The identity that last modified the resource. */
    lastModifiedBy?: string;
    /** The type of identity that last modified the resource. */
    lastModifiedByType?: CreatedByType;
    /** The timestamp of resource last modification (UTC) */
    lastModifiedAt?: Date;
}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export declare type TrackedResource = Resource & {
    /** Resource tags. */
    tags?: {
        [propertyName: string]: string;
    };
    /** The geo-location where the resource lives */
    location: string;
};

export { }
