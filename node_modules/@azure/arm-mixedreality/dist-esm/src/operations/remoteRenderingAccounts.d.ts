import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { RemoteRenderingAccounts } from "../operationsInterfaces";
import { MixedRealityClient } from "../mixedRealityClient";
import { RemoteRenderingAccount, RemoteRenderingAccountsListBySubscriptionOptionalParams, RemoteRenderingAccountsListByResourceGroupOptionalParams, RemoteRenderingAccountsDeleteOptionalParams, RemoteRenderingAccountsGetOptionalParams, RemoteRenderingAccountsGetResponse, RemoteRenderingAccountsUpdateOptionalParams, RemoteRenderingAccountsUpdateResponse, RemoteRenderingAccountsCreateOptionalParams, RemoteRenderingAccountsCreateResponse, RemoteRenderingAccountsListKeysOptionalParams, RemoteRenderingAccountsListKeysResponse, AccountKeyRegenerateRequest, RemoteRenderingAccountsRegenerateKeysOptionalParams, RemoteRenderingAccountsRegenerateKeysResponse } from "../models";
/** Class containing RemoteRenderingAccounts operations. */
export declare class RemoteRenderingAccountsImpl implements RemoteRenderingAccounts {
    private readonly client;
    /**
     * Initialize a new instance of the class RemoteRenderingAccounts class.
     * @param client Reference to the service client
     */
    constructor(client: MixedRealityClient);
    /**
     * List Remote Rendering Accounts by Subscription
     * @param options The options parameters.
     */
    listBySubscription(options?: RemoteRenderingAccountsListBySubscriptionOptionalParams): PagedAsyncIterableIterator<RemoteRenderingAccount>;
    private listBySubscriptionPagingPage;
    private listBySubscriptionPagingAll;
    /**
     * List Resources by Resource Group
     * @param resourceGroupName Name of an Azure resource group.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: RemoteRenderingAccountsListByResourceGroupOptionalParams): PagedAsyncIterableIterator<RemoteRenderingAccount>;
    private listByResourceGroupPagingPage;
    private listByResourceGroupPagingAll;
    /**
     * List Remote Rendering Accounts by Subscription
     * @param options The options parameters.
     */
    private _listBySubscription;
    /**
     * List Resources by Resource Group
     * @param resourceGroupName Name of an Azure resource group.
     * @param options The options parameters.
     */
    private _listByResourceGroup;
    /**
     * Delete a Remote Rendering Account.
     * @param resourceGroupName Name of an Azure resource group.
     * @param accountName Name of an Mixed Reality Account.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, accountName: string, options?: RemoteRenderingAccountsDeleteOptionalParams): Promise<void>;
    /**
     * Retrieve a Remote Rendering Account.
     * @param resourceGroupName Name of an Azure resource group.
     * @param accountName Name of an Mixed Reality Account.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, accountName: string, options?: RemoteRenderingAccountsGetOptionalParams): Promise<RemoteRenderingAccountsGetResponse>;
    /**
     * Updating a Remote Rendering Account
     * @param resourceGroupName Name of an Azure resource group.
     * @param accountName Name of an Mixed Reality Account.
     * @param remoteRenderingAccount Remote Rendering Account parameter.
     * @param options The options parameters.
     */
    update(resourceGroupName: string, accountName: string, remoteRenderingAccount: RemoteRenderingAccount, options?: RemoteRenderingAccountsUpdateOptionalParams): Promise<RemoteRenderingAccountsUpdateResponse>;
    /**
     * Creating or Updating a Remote Rendering Account.
     * @param resourceGroupName Name of an Azure resource group.
     * @param accountName Name of an Mixed Reality Account.
     * @param remoteRenderingAccount Remote Rendering Account parameter.
     * @param options The options parameters.
     */
    create(resourceGroupName: string, accountName: string, remoteRenderingAccount: RemoteRenderingAccount, options?: RemoteRenderingAccountsCreateOptionalParams): Promise<RemoteRenderingAccountsCreateResponse>;
    /**
     * List Both of the 2 Keys of a Remote Rendering Account
     * @param resourceGroupName Name of an Azure resource group.
     * @param accountName Name of an Mixed Reality Account.
     * @param options The options parameters.
     */
    listKeys(resourceGroupName: string, accountName: string, options?: RemoteRenderingAccountsListKeysOptionalParams): Promise<RemoteRenderingAccountsListKeysResponse>;
    /**
     * Regenerate specified Key of a Remote Rendering Account
     * @param resourceGroupName Name of an Azure resource group.
     * @param accountName Name of an Mixed Reality Account.
     * @param regenerate Required information for key regeneration.
     * @param options The options parameters.
     */
    regenerateKeys(resourceGroupName: string, accountName: string, regenerate: AccountKeyRegenerateRequest, options?: RemoteRenderingAccountsRegenerateKeysOptionalParams): Promise<RemoteRenderingAccountsRegenerateKeysResponse>;
    /**
     * ListBySubscriptionNext
     * @param nextLink The nextLink from the previous successful call to the ListBySubscription method.
     * @param options The options parameters.
     */
    private _listBySubscriptionNext;
    /**
     * ListByResourceGroupNext
     * @param resourceGroupName Name of an Azure resource group.
     * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.
     * @param options The options parameters.
     */
    private _listByResourceGroupNext;
}
//# sourceMappingURL=remoteRenderingAccounts.d.ts.map