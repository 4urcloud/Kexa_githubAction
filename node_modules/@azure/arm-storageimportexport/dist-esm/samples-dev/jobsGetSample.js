/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { StorageImportExport } from "@azure/arm-storageimportexport";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Gets information about an existing job.
 *
 * @summary Gets information about an existing job.
 * x-ms-original-file: specification/storageimportexport/resource-manager/Microsoft.ImportExport/preview/2021-01-01/examples/GetExportJob.json
 */
function getExportJob() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["STORAGEIMPORTEXPORT_SUBSCRIPTION_ID"] ||
            "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx";
        const jobName = "myJob";
        const resourceGroupName = process.env["STORAGEIMPORTEXPORT_RESOURCE_GROUP"] || "myResourceGroup";
        const credential = new DefaultAzureCredential();
        const client = new StorageImportExport(credential, subscriptionId);
        const result = yield client.jobs.get(jobName, resourceGroupName);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Gets information about an existing job.
 *
 * @summary Gets information about an existing job.
 * x-ms-original-file: specification/storageimportexport/resource-manager/Microsoft.ImportExport/preview/2021-01-01/examples/GetJob.json
 */
function getImportJob() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["STORAGEIMPORTEXPORT_SUBSCRIPTION_ID"] ||
            "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx";
        const jobName = "myJob";
        const resourceGroupName = process.env["STORAGEIMPORTEXPORT_RESOURCE_GROUP"] || "myResourceGroup";
        const credential = new DefaultAzureCredential();
        const client = new StorageImportExport(credential, subscriptionId);
        const result = yield client.jobs.get(jobName, resourceGroupName);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        getExportJob();
        getImportJob();
    });
}
main().catch(console.error);
//# sourceMappingURL=jobsGetSample.js.map