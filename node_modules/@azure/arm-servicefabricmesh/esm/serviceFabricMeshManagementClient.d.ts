import * as msRest from "@azure/ms-rest-js";
import { TokenCredential } from "@azure/core-auth";
import * as Models from "./models";
import * as Mappers from "./models/mappers";
import * as operations from "./operations";
import { ServiceFabricMeshManagementClientContext } from "./serviceFabricMeshManagementClientContext";
declare class ServiceFabricMeshManagementClient extends ServiceFabricMeshManagementClientContext {
    operations: operations.Operations;
    secret: operations.Secret;
    secretValue: operations.SecretValueOperations;
    volume: operations.Volume;
    network: operations.Network;
    gateway: operations.Gateway;
    application: operations.Application;
    service: operations.Service;
    serviceReplica: operations.ServiceReplica;
    codePackage: operations.CodePackage;
    /**
     * Initializes a new instance of the ServiceFabricMeshManagementClient class.
     * @param credentials Credentials needed for the client to connect to Azure. Credentials
     * implementing the TokenCredential interface from the @azure/identity package are recommended. For
     * more information about these credentials, see
     * {@link https://www.npmjs.com/package/@azure/identity}. Credentials implementing the
     * ServiceClientCredentials interface from the older packages @azure/ms-rest-nodeauth and
     * @azure/ms-rest-browserauth are also supported.
     * @param subscriptionId The customer subscription identifier
     * @param [options] The parameter options
     */
    constructor(credentials: msRest.ServiceClientCredentials | TokenCredential, subscriptionId: string, options?: Models.ServiceFabricMeshManagementClientOptions);
}
export { ServiceFabricMeshManagementClient, ServiceFabricMeshManagementClientContext, Models as ServiceFabricMeshManagementModels, Mappers as ServiceFabricMeshManagementMappers };
export * from "./operations";
//# sourceMappingURL=serviceFabricMeshManagementClient.d.ts.map