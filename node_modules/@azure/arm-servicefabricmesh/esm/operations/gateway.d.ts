import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { ServiceFabricMeshManagementClientContext } from "../serviceFabricMeshManagementClientContext";
/** Class representing a Gateway. */
export declare class Gateway {
    private readonly client;
    /**
     * Create a Gateway.
     * @param {ServiceFabricMeshManagementClientContext} client Reference to the service client.
     */
    constructor(client: ServiceFabricMeshManagementClientContext);
    /**
     * Creates a gateway resource with the specified name, description and properties. If a gateway
     * resource with the same name exists, then it is updated with the specified description and
     * properties. Use gateway resources to create a gateway for public connectivity for services
     * within your application.
     * @summary Creates or updates a gateway resource.
     * @param resourceGroupName Azure resource group name
     * @param gatewayResourceName The identity of the gateway.
     * @param gatewayResourceDescription Description for creating a Gateway resource.
     * @param [options] The optional parameters
     * @returns Promise<Models.GatewayCreateResponse>
     */
    create(resourceGroupName: string, gatewayResourceName: string, gatewayResourceDescription: Models.GatewayResourceDescription, options?: msRest.RequestOptionsBase): Promise<Models.GatewayCreateResponse>;
    /**
     * @param resourceGroupName Azure resource group name
     * @param gatewayResourceName The identity of the gateway.
     * @param gatewayResourceDescription Description for creating a Gateway resource.
     * @param callback The callback
     */
    create(resourceGroupName: string, gatewayResourceName: string, gatewayResourceDescription: Models.GatewayResourceDescription, callback: msRest.ServiceCallback<Models.GatewayResourceDescription>): void;
    /**
     * @param resourceGroupName Azure resource group name
     * @param gatewayResourceName The identity of the gateway.
     * @param gatewayResourceDescription Description for creating a Gateway resource.
     * @param options The optional parameters
     * @param callback The callback
     */
    create(resourceGroupName: string, gatewayResourceName: string, gatewayResourceDescription: Models.GatewayResourceDescription, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.GatewayResourceDescription>): void;
    /**
     * Gets the information about the gateway resource with the given name. The information include the
     * description and other properties of the gateway.
     * @summary Gets the gateway resource with the given name.
     * @param resourceGroupName Azure resource group name
     * @param gatewayResourceName The identity of the gateway.
     * @param [options] The optional parameters
     * @returns Promise<Models.GatewayGetResponse>
     */
    get(resourceGroupName: string, gatewayResourceName: string, options?: msRest.RequestOptionsBase): Promise<Models.GatewayGetResponse>;
    /**
     * @param resourceGroupName Azure resource group name
     * @param gatewayResourceName The identity of the gateway.
     * @param callback The callback
     */
    get(resourceGroupName: string, gatewayResourceName: string, callback: msRest.ServiceCallback<Models.GatewayResourceDescription>): void;
    /**
     * @param resourceGroupName Azure resource group name
     * @param gatewayResourceName The identity of the gateway.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, gatewayResourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.GatewayResourceDescription>): void;
    /**
     * Deletes the gateway resource identified by the name.
     * @summary Deletes the gateway resource.
     * @param resourceGroupName Azure resource group name
     * @param gatewayResourceName The identity of the gateway.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroupName: string, gatewayResourceName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName Azure resource group name
     * @param gatewayResourceName The identity of the gateway.
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, gatewayResourceName: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName Azure resource group name
     * @param gatewayResourceName The identity of the gateway.
     * @param options The optional parameters
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, gatewayResourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Gets the information about all gateway resources in a given resource group. The information
     * include the description and other properties of the Gateway.
     * @summary Gets all the gateway resources in a given resource group.
     * @param resourceGroupName Azure resource group name
     * @param [options] The optional parameters
     * @returns Promise<Models.GatewayListByResourceGroupResponse>
     */
    listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.GatewayListByResourceGroupResponse>;
    /**
     * @param resourceGroupName Azure resource group name
     * @param callback The callback
     */
    listByResourceGroup(resourceGroupName: string, callback: msRest.ServiceCallback<Models.GatewayResourceDescriptionList>): void;
    /**
     * @param resourceGroupName Azure resource group name
     * @param options The optional parameters
     * @param callback The callback
     */
    listByResourceGroup(resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.GatewayResourceDescriptionList>): void;
    /**
     * Gets the information about all gateway resources in a given resource group. The information
     * include the description and other properties of the gateway.
     * @summary Gets all the gateway resources in a given subscription.
     * @param [options] The optional parameters
     * @returns Promise<Models.GatewayListBySubscriptionResponse>
     */
    listBySubscription(options?: msRest.RequestOptionsBase): Promise<Models.GatewayListBySubscriptionResponse>;
    /**
     * @param callback The callback
     */
    listBySubscription(callback: msRest.ServiceCallback<Models.GatewayResourceDescriptionList>): void;
    /**
     * @param options The optional parameters
     * @param callback The callback
     */
    listBySubscription(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.GatewayResourceDescriptionList>): void;
    /**
     * Gets the information about all gateway resources in a given resource group. The information
     * include the description and other properties of the Gateway.
     * @summary Gets all the gateway resources in a given resource group.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.GatewayListByResourceGroupNextResponse>
     */
    listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.GatewayListByResourceGroupNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByResourceGroupNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.GatewayResourceDescriptionList>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByResourceGroupNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.GatewayResourceDescriptionList>): void;
    /**
     * Gets the information about all gateway resources in a given resource group. The information
     * include the description and other properties of the gateway.
     * @summary Gets all the gateway resources in a given subscription.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.GatewayListBySubscriptionNextResponse>
     */
    listBySubscriptionNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.GatewayListBySubscriptionNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listBySubscriptionNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.GatewayResourceDescriptionList>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listBySubscriptionNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.GatewayResourceDescriptionList>): void;
}
//# sourceMappingURL=gateway.d.ts.map