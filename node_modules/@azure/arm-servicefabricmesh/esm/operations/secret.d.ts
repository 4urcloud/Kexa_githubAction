import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { ServiceFabricMeshManagementClientContext } from "../serviceFabricMeshManagementClientContext";
/** Class representing a Secret. */
export declare class Secret {
    private readonly client;
    /**
     * Create a Secret.
     * @param {ServiceFabricMeshManagementClientContext} client Reference to the service client.
     */
    constructor(client: ServiceFabricMeshManagementClientContext);
    /**
     * Creates a secret resource with the specified name, description and properties. If a secret
     * resource with the same name exists, then it is updated with the specified description and
     * properties.
     * @summary Creates or updates a secret resource.
     * @param resourceGroupName Azure resource group name
     * @param secretResourceName The name of the secret resource.
     * @param secretResourceDescription Description for creating a secret resource.
     * @param [options] The optional parameters
     * @returns Promise<Models.SecretCreateResponse>
     */
    create(resourceGroupName: string, secretResourceName: string, secretResourceDescription: Models.SecretResourceDescription, options?: msRest.RequestOptionsBase): Promise<Models.SecretCreateResponse>;
    /**
     * @param resourceGroupName Azure resource group name
     * @param secretResourceName The name of the secret resource.
     * @param secretResourceDescription Description for creating a secret resource.
     * @param callback The callback
     */
    create(resourceGroupName: string, secretResourceName: string, secretResourceDescription: Models.SecretResourceDescription, callback: msRest.ServiceCallback<Models.SecretResourceDescription>): void;
    /**
     * @param resourceGroupName Azure resource group name
     * @param secretResourceName The name of the secret resource.
     * @param secretResourceDescription Description for creating a secret resource.
     * @param options The optional parameters
     * @param callback The callback
     */
    create(resourceGroupName: string, secretResourceName: string, secretResourceDescription: Models.SecretResourceDescription, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SecretResourceDescription>): void;
    /**
     * Gets the information about the secret resource with the given name. The information include the
     * description and other properties of the secret.
     * @summary Gets the secret resource with the given name.
     * @param resourceGroupName Azure resource group name
     * @param secretResourceName The name of the secret resource.
     * @param [options] The optional parameters
     * @returns Promise<Models.SecretGetResponse>
     */
    get(resourceGroupName: string, secretResourceName: string, options?: msRest.RequestOptionsBase): Promise<Models.SecretGetResponse>;
    /**
     * @param resourceGroupName Azure resource group name
     * @param secretResourceName The name of the secret resource.
     * @param callback The callback
     */
    get(resourceGroupName: string, secretResourceName: string, callback: msRest.ServiceCallback<Models.SecretResourceDescription>): void;
    /**
     * @param resourceGroupName Azure resource group name
     * @param secretResourceName The name of the secret resource.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, secretResourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SecretResourceDescription>): void;
    /**
     * Deletes the secret resource identified by the name.
     * @summary Deletes the secret resource.
     * @param resourceGroupName Azure resource group name
     * @param secretResourceName The name of the secret resource.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroupName: string, secretResourceName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName Azure resource group name
     * @param secretResourceName The name of the secret resource.
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, secretResourceName: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName Azure resource group name
     * @param secretResourceName The name of the secret resource.
     * @param options The optional parameters
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, secretResourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Gets the information about all secret resources in a given resource group. The information
     * include the description and other properties of the Secret.
     * @summary Gets all the secret resources in a given resource group.
     * @param resourceGroupName Azure resource group name
     * @param [options] The optional parameters
     * @returns Promise<Models.SecretListByResourceGroupResponse>
     */
    listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.SecretListByResourceGroupResponse>;
    /**
     * @param resourceGroupName Azure resource group name
     * @param callback The callback
     */
    listByResourceGroup(resourceGroupName: string, callback: msRest.ServiceCallback<Models.SecretResourceDescriptionList>): void;
    /**
     * @param resourceGroupName Azure resource group name
     * @param options The optional parameters
     * @param callback The callback
     */
    listByResourceGroup(resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SecretResourceDescriptionList>): void;
    /**
     * Gets the information about all secret resources in a given resource group. The information
     * include the description and other properties of the secret.
     * @summary Gets all the secret resources in a given subscription.
     * @param [options] The optional parameters
     * @returns Promise<Models.SecretListBySubscriptionResponse>
     */
    listBySubscription(options?: msRest.RequestOptionsBase): Promise<Models.SecretListBySubscriptionResponse>;
    /**
     * @param callback The callback
     */
    listBySubscription(callback: msRest.ServiceCallback<Models.SecretResourceDescriptionList>): void;
    /**
     * @param options The optional parameters
     * @param callback The callback
     */
    listBySubscription(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SecretResourceDescriptionList>): void;
    /**
     * Gets the information about all secret resources in a given resource group. The information
     * include the description and other properties of the Secret.
     * @summary Gets all the secret resources in a given resource group.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.SecretListByResourceGroupNextResponse>
     */
    listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.SecretListByResourceGroupNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByResourceGroupNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.SecretResourceDescriptionList>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByResourceGroupNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SecretResourceDescriptionList>): void;
    /**
     * Gets the information about all secret resources in a given resource group. The information
     * include the description and other properties of the secret.
     * @summary Gets all the secret resources in a given subscription.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.SecretListBySubscriptionNextResponse>
     */
    listBySubscriptionNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.SecretListBySubscriptionNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listBySubscriptionNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.SecretResourceDescriptionList>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listBySubscriptionNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SecretResourceDescriptionList>): void;
}
//# sourceMappingURL=secret.d.ts.map