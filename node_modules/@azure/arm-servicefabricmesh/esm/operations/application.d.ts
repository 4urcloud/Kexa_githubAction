import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { ServiceFabricMeshManagementClientContext } from "../serviceFabricMeshManagementClientContext";
/** Class representing a Application. */
export declare class Application {
    private readonly client;
    /**
     * Create a Application.
     * @param {ServiceFabricMeshManagementClientContext} client Reference to the service client.
     */
    constructor(client: ServiceFabricMeshManagementClientContext);
    /**
     * Creates an application resource with the specified name, description and properties. If an
     * application resource with the same name exists, then it is updated with the specified
     * description and properties.
     * @summary Creates or updates an application resource.
     * @param resourceGroupName Azure resource group name
     * @param applicationResourceName The identity of the application.
     * @param applicationResourceDescription Description for creating a Application resource.
     * @param [options] The optional parameters
     * @returns Promise<Models.ApplicationCreateResponse>
     */
    create(resourceGroupName: string, applicationResourceName: string, applicationResourceDescription: Models.ApplicationResourceDescription, options?: msRest.RequestOptionsBase): Promise<Models.ApplicationCreateResponse>;
    /**
     * @param resourceGroupName Azure resource group name
     * @param applicationResourceName The identity of the application.
     * @param applicationResourceDescription Description for creating a Application resource.
     * @param callback The callback
     */
    create(resourceGroupName: string, applicationResourceName: string, applicationResourceDescription: Models.ApplicationResourceDescription, callback: msRest.ServiceCallback<Models.ApplicationResourceDescription>): void;
    /**
     * @param resourceGroupName Azure resource group name
     * @param applicationResourceName The identity of the application.
     * @param applicationResourceDescription Description for creating a Application resource.
     * @param options The optional parameters
     * @param callback The callback
     */
    create(resourceGroupName: string, applicationResourceName: string, applicationResourceDescription: Models.ApplicationResourceDescription, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ApplicationResourceDescription>): void;
    /**
     * Gets the information about the application resource with the given name. The information include
     * the description and other properties of the application.
     * @summary Gets the application resource with the given name.
     * @param resourceGroupName Azure resource group name
     * @param applicationResourceName The identity of the application.
     * @param [options] The optional parameters
     * @returns Promise<Models.ApplicationGetResponse>
     */
    get(resourceGroupName: string, applicationResourceName: string, options?: msRest.RequestOptionsBase): Promise<Models.ApplicationGetResponse>;
    /**
     * @param resourceGroupName Azure resource group name
     * @param applicationResourceName The identity of the application.
     * @param callback The callback
     */
    get(resourceGroupName: string, applicationResourceName: string, callback: msRest.ServiceCallback<Models.ApplicationResourceDescription>): void;
    /**
     * @param resourceGroupName Azure resource group name
     * @param applicationResourceName The identity of the application.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, applicationResourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ApplicationResourceDescription>): void;
    /**
     * Deletes the application resource identified by the name.
     * @summary Deletes the application resource.
     * @param resourceGroupName Azure resource group name
     * @param applicationResourceName The identity of the application.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroupName: string, applicationResourceName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName Azure resource group name
     * @param applicationResourceName The identity of the application.
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, applicationResourceName: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName Azure resource group name
     * @param applicationResourceName The identity of the application.
     * @param options The optional parameters
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, applicationResourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Gets the information about all application resources in a given resource group. The information
     * include the description and other properties of the Application.
     * @summary Gets all the application resources in a given resource group.
     * @param resourceGroupName Azure resource group name
     * @param [options] The optional parameters
     * @returns Promise<Models.ApplicationListByResourceGroupResponse>
     */
    listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.ApplicationListByResourceGroupResponse>;
    /**
     * @param resourceGroupName Azure resource group name
     * @param callback The callback
     */
    listByResourceGroup(resourceGroupName: string, callback: msRest.ServiceCallback<Models.ApplicationResourceDescriptionList>): void;
    /**
     * @param resourceGroupName Azure resource group name
     * @param options The optional parameters
     * @param callback The callback
     */
    listByResourceGroup(resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ApplicationResourceDescriptionList>): void;
    /**
     * Gets the information about all application resources in a given resource group. The information
     * include the description and other properties of the application.
     * @summary Gets all the application resources in a given subscription.
     * @param [options] The optional parameters
     * @returns Promise<Models.ApplicationListBySubscriptionResponse>
     */
    listBySubscription(options?: msRest.RequestOptionsBase): Promise<Models.ApplicationListBySubscriptionResponse>;
    /**
     * @param callback The callback
     */
    listBySubscription(callback: msRest.ServiceCallback<Models.ApplicationResourceDescriptionList>): void;
    /**
     * @param options The optional parameters
     * @param callback The callback
     */
    listBySubscription(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ApplicationResourceDescriptionList>): void;
    /**
     * Gets the information about all application resources in a given resource group. The information
     * include the description and other properties of the Application.
     * @summary Gets all the application resources in a given resource group.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.ApplicationListByResourceGroupNextResponse>
     */
    listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ApplicationListByResourceGroupNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByResourceGroupNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ApplicationResourceDescriptionList>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByResourceGroupNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ApplicationResourceDescriptionList>): void;
    /**
     * Gets the information about all application resources in a given resource group. The information
     * include the description and other properties of the application.
     * @summary Gets all the application resources in a given subscription.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.ApplicationListBySubscriptionNextResponse>
     */
    listBySubscriptionNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ApplicationListBySubscriptionNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listBySubscriptionNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ApplicationResourceDescriptionList>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listBySubscriptionNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ApplicationResourceDescriptionList>): void;
}
//# sourceMappingURL=application.d.ts.map