import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { ServiceFabricMeshManagementClientContext } from "../serviceFabricMeshManagementClientContext";
/** Class representing a Network. */
export declare class Network {
    private readonly client;
    /**
     * Create a Network.
     * @param {ServiceFabricMeshManagementClientContext} client Reference to the service client.
     */
    constructor(client: ServiceFabricMeshManagementClientContext);
    /**
     * Creates a network resource with the specified name, description and properties. If a network
     * resource with the same name exists, then it is updated with the specified description and
     * properties.
     * @summary Creates or updates a network resource.
     * @param resourceGroupName Azure resource group name
     * @param networkResourceName The identity of the network.
     * @param networkResourceDescription Description for creating a Network resource.
     * @param [options] The optional parameters
     * @returns Promise<Models.NetworkCreateResponse>
     */
    create(resourceGroupName: string, networkResourceName: string, networkResourceDescription: Models.NetworkResourceDescription, options?: msRest.RequestOptionsBase): Promise<Models.NetworkCreateResponse>;
    /**
     * @param resourceGroupName Azure resource group name
     * @param networkResourceName The identity of the network.
     * @param networkResourceDescription Description for creating a Network resource.
     * @param callback The callback
     */
    create(resourceGroupName: string, networkResourceName: string, networkResourceDescription: Models.NetworkResourceDescription, callback: msRest.ServiceCallback<Models.NetworkResourceDescription>): void;
    /**
     * @param resourceGroupName Azure resource group name
     * @param networkResourceName The identity of the network.
     * @param networkResourceDescription Description for creating a Network resource.
     * @param options The optional parameters
     * @param callback The callback
     */
    create(resourceGroupName: string, networkResourceName: string, networkResourceDescription: Models.NetworkResourceDescription, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.NetworkResourceDescription>): void;
    /**
     * Gets the information about the network resource with the given name. The information include the
     * description and other properties of the network.
     * @summary Gets the network resource with the given name.
     * @param resourceGroupName Azure resource group name
     * @param networkResourceName The identity of the network.
     * @param [options] The optional parameters
     * @returns Promise<Models.NetworkGetResponse>
     */
    get(resourceGroupName: string, networkResourceName: string, options?: msRest.RequestOptionsBase): Promise<Models.NetworkGetResponse>;
    /**
     * @param resourceGroupName Azure resource group name
     * @param networkResourceName The identity of the network.
     * @param callback The callback
     */
    get(resourceGroupName: string, networkResourceName: string, callback: msRest.ServiceCallback<Models.NetworkResourceDescription>): void;
    /**
     * @param resourceGroupName Azure resource group name
     * @param networkResourceName The identity of the network.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, networkResourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.NetworkResourceDescription>): void;
    /**
     * Deletes the network resource identified by the name.
     * @summary Deletes the network resource.
     * @param resourceGroupName Azure resource group name
     * @param networkResourceName The identity of the network.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroupName: string, networkResourceName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName Azure resource group name
     * @param networkResourceName The identity of the network.
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, networkResourceName: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName Azure resource group name
     * @param networkResourceName The identity of the network.
     * @param options The optional parameters
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, networkResourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Gets the information about all network resources in a given resource group. The information
     * include the description and other properties of the Network.
     * @summary Gets all the network resources in a given resource group.
     * @param resourceGroupName Azure resource group name
     * @param [options] The optional parameters
     * @returns Promise<Models.NetworkListByResourceGroupResponse>
     */
    listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.NetworkListByResourceGroupResponse>;
    /**
     * @param resourceGroupName Azure resource group name
     * @param callback The callback
     */
    listByResourceGroup(resourceGroupName: string, callback: msRest.ServiceCallback<Models.NetworkResourceDescriptionList>): void;
    /**
     * @param resourceGroupName Azure resource group name
     * @param options The optional parameters
     * @param callback The callback
     */
    listByResourceGroup(resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.NetworkResourceDescriptionList>): void;
    /**
     * Gets the information about all network resources in a given resource group. The information
     * include the description and other properties of the network.
     * @summary Gets all the network resources in a given subscription.
     * @param [options] The optional parameters
     * @returns Promise<Models.NetworkListBySubscriptionResponse>
     */
    listBySubscription(options?: msRest.RequestOptionsBase): Promise<Models.NetworkListBySubscriptionResponse>;
    /**
     * @param callback The callback
     */
    listBySubscription(callback: msRest.ServiceCallback<Models.NetworkResourceDescriptionList>): void;
    /**
     * @param options The optional parameters
     * @param callback The callback
     */
    listBySubscription(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.NetworkResourceDescriptionList>): void;
    /**
     * Gets the information about all network resources in a given resource group. The information
     * include the description and other properties of the Network.
     * @summary Gets all the network resources in a given resource group.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.NetworkListByResourceGroupNextResponse>
     */
    listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.NetworkListByResourceGroupNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByResourceGroupNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.NetworkResourceDescriptionList>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByResourceGroupNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.NetworkResourceDescriptionList>): void;
    /**
     * Gets the information about all network resources in a given resource group. The information
     * include the description and other properties of the network.
     * @summary Gets all the network resources in a given subscription.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.NetworkListBySubscriptionNextResponse>
     */
    listBySubscriptionNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.NetworkListBySubscriptionNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listBySubscriptionNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.NetworkResourceDescriptionList>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listBySubscriptionNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.NetworkResourceDescriptionList>): void;
}
//# sourceMappingURL=network.d.ts.map