/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import { __assign } from "tslib";
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/volumeMappers";
import * as Parameters from "../models/parameters";
/** Class representing a Volume. */
var Volume = /** @class */ (function () {
    /**
     * Create a Volume.
     * @param {ServiceFabricMeshManagementClientContext} client Reference to the service client.
     */
    function Volume(client) {
        this.client = client;
    }
    Volume.prototype.create = function (resourceGroupName, volumeResourceName, volumeResourceDescription, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            volumeResourceName: volumeResourceName,
            volumeResourceDescription: volumeResourceDescription,
            options: options
        }, createOperationSpec, callback);
    };
    Volume.prototype.get = function (resourceGroupName, volumeResourceName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            volumeResourceName: volumeResourceName,
            options: options
        }, getOperationSpec, callback);
    };
    Volume.prototype.deleteMethod = function (resourceGroupName, volumeResourceName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            volumeResourceName: volumeResourceName,
            options: options
        }, deleteMethodOperationSpec, callback);
    };
    Volume.prototype.listByResourceGroup = function (resourceGroupName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            options: options
        }, listByResourceGroupOperationSpec, callback);
    };
    Volume.prototype.listBySubscription = function (options, callback) {
        return this.client.sendOperationRequest({
            options: options
        }, listBySubscriptionOperationSpec, callback);
    };
    Volume.prototype.listByResourceGroupNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listByResourceGroupNextOperationSpec, callback);
    };
    Volume.prototype.listBySubscriptionNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listBySubscriptionNextOperationSpec, callback);
    };
    return Volume;
}());
export { Volume };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var createOperationSpec = {
    httpMethod: "PUT",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/volumes/{volumeResourceName}",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.volumeResourceName
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: "volumeResourceDescription",
        mapper: __assign(__assign({}, Mappers.VolumeResourceDescription), { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.VolumeResourceDescription
        },
        201: {
            bodyMapper: Mappers.VolumeResourceDescription
        },
        202: {},
        default: {
            bodyMapper: Mappers.ErrorModel
        }
    },
    serializer: serializer
};
var getOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/volumes/{volumeResourceName}",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.volumeResourceName
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.VolumeResourceDescription
        },
        default: {
            bodyMapper: Mappers.ErrorModel
        }
    },
    serializer: serializer
};
var deleteMethodOperationSpec = {
    httpMethod: "DELETE",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/volumes/{volumeResourceName}",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.volumeResourceName
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {},
        202: {},
        204: {},
        default: {
            bodyMapper: Mappers.ErrorModel
        }
    },
    serializer: serializer
};
var listByResourceGroupOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/volumes",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.VolumeResourceDescriptionList
        },
        default: {
            bodyMapper: Mappers.ErrorModel
        }
    },
    serializer: serializer
};
var listBySubscriptionOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabricMesh/volumes",
    urlParameters: [
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.VolumeResourceDescriptionList
        },
        default: {
            bodyMapper: Mappers.ErrorModel
        }
    },
    serializer: serializer
};
var listByResourceGroupNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.VolumeResourceDescriptionList
        },
        default: {
            bodyMapper: Mappers.ErrorModel
        }
    },
    serializer: serializer
};
var listBySubscriptionNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.VolumeResourceDescriptionList
        },
        default: {
            bodyMapper: Mappers.ErrorModel
        }
    },
    serializer: serializer
};
//# sourceMappingURL=volume.js.map