import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { ServiceFabricMeshManagementClientContext } from "../serviceFabricMeshManagementClientContext";
/** Class representing a CodePackage. */
export declare class CodePackage {
    private readonly client;
    /**
     * Create a CodePackage.
     * @param {ServiceFabricMeshManagementClientContext} client Reference to the service client.
     */
    constructor(client: ServiceFabricMeshManagementClientContext);
    /**
     * Gets the logs for the container of the specified code package of the service replica.
     * @summary Gets the logs from the container.
     * @param resourceGroupName Azure resource group name
     * @param applicationResourceName The identity of the application.
     * @param serviceResourceName The identity of the service.
     * @param replicaName Service Fabric replica name.
     * @param codePackageName The name of code package of the service.
     * @param [options] The optional parameters
     * @returns Promise<Models.CodePackageGetContainerLogsResponse>
     */
    getContainerLogs(resourceGroupName: string, applicationResourceName: string, serviceResourceName: string, replicaName: string, codePackageName: string, options?: Models.CodePackageGetContainerLogsOptionalParams): Promise<Models.CodePackageGetContainerLogsResponse>;
    /**
     * @param resourceGroupName Azure resource group name
     * @param applicationResourceName The identity of the application.
     * @param serviceResourceName The identity of the service.
     * @param replicaName Service Fabric replica name.
     * @param codePackageName The name of code package of the service.
     * @param callback The callback
     */
    getContainerLogs(resourceGroupName: string, applicationResourceName: string, serviceResourceName: string, replicaName: string, codePackageName: string, callback: msRest.ServiceCallback<Models.ContainerLogs>): void;
    /**
     * @param resourceGroupName Azure resource group name
     * @param applicationResourceName The identity of the application.
     * @param serviceResourceName The identity of the service.
     * @param replicaName Service Fabric replica name.
     * @param codePackageName The name of code package of the service.
     * @param options The optional parameters
     * @param callback The callback
     */
    getContainerLogs(resourceGroupName: string, applicationResourceName: string, serviceResourceName: string, replicaName: string, codePackageName: string, options: Models.CodePackageGetContainerLogsOptionalParams, callback: msRest.ServiceCallback<Models.ContainerLogs>): void;
}
//# sourceMappingURL=codePackage.d.ts.map