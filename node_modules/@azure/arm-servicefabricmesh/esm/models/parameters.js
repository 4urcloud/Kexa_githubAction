/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
export var acceptLanguage = {
    parameterPath: "acceptLanguage",
    mapper: {
        serializedName: "accept-language",
        defaultValue: 'en-US',
        type: {
            name: "String"
        }
    }
};
export var apiVersion = {
    parameterPath: "apiVersion",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "api-version",
        defaultValue: '2018-09-01-preview',
        type: {
            name: "String"
        }
    }
};
export var applicationResourceName = {
    parameterPath: "applicationResourceName",
    mapper: {
        required: true,
        serializedName: "applicationResourceName",
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export var codePackageName = {
    parameterPath: "codePackageName",
    mapper: {
        required: true,
        serializedName: "codePackageName",
        type: {
            name: "String"
        }
    }
};
export var gatewayResourceName = {
    parameterPath: "gatewayResourceName",
    mapper: {
        required: true,
        serializedName: "gatewayResourceName",
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export var networkResourceName = {
    parameterPath: "networkResourceName",
    mapper: {
        required: true,
        serializedName: "networkResourceName",
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export var nextPageLink = {
    parameterPath: "nextPageLink",
    mapper: {
        required: true,
        serializedName: "nextLink",
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export var replicaName = {
    parameterPath: "replicaName",
    mapper: {
        required: true,
        serializedName: "replicaName",
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export var resourceGroupName = {
    parameterPath: "resourceGroupName",
    mapper: {
        required: true,
        serializedName: "resourceGroupName",
        type: {
            name: "String"
        }
    }
};
export var secretResourceName = {
    parameterPath: "secretResourceName",
    mapper: {
        required: true,
        serializedName: "secretResourceName",
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export var secretValueResourceName = {
    parameterPath: "secretValueResourceName",
    mapper: {
        required: true,
        serializedName: "secretValueResourceName",
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export var serviceResourceName = {
    parameterPath: "serviceResourceName",
    mapper: {
        required: true,
        serializedName: "serviceResourceName",
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export var subscriptionId = {
    parameterPath: "subscriptionId",
    mapper: {
        required: true,
        serializedName: "subscriptionId",
        type: {
            name: "String"
        }
    }
};
export var tail = {
    parameterPath: [
        "options",
        "tail"
    ],
    mapper: {
        serializedName: "tail",
        type: {
            name: "Number"
        }
    }
};
export var volumeResourceName = {
    parameterPath: "volumeResourceName",
    mapper: {
        required: true,
        serializedName: "volumeResourceName",
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
//# sourceMappingURL=parameters.js.map