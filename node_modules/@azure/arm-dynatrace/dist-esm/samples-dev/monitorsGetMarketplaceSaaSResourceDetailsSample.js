/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { DynatraceObservability } from "@azure/arm-dynatrace";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Get Marketplace SaaS resource details of a tenant under a specific subscription
 *
 * @summary Get Marketplace SaaS resource details of a tenant under a specific subscription
 * x-ms-original-file: specification/dynatrace/resource-manager/Dynatrace.Observability/stable/2023-04-27/examples/Monitors_GetMarketplaceSaaSResourceDetails_MaximumSet_Gen.json
 */
function monitorsGetMarketplaceSaaSResourceDetailsMaximumSetGen() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["DYNATRACE_SUBSCRIPTION_ID"] || "nqmcgifgaqlf";
        const request = {
            tenantId: "urnmattojzhktcfw"
        };
        const credential = new DefaultAzureCredential();
        const client = new DynatraceObservability(credential, subscriptionId);
        const result = yield client.monitors.getMarketplaceSaaSResourceDetails(request);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Get Marketplace SaaS resource details of a tenant under a specific subscription
 *
 * @summary Get Marketplace SaaS resource details of a tenant under a specific subscription
 * x-ms-original-file: specification/dynatrace/resource-manager/Dynatrace.Observability/stable/2023-04-27/examples/Monitors_GetMarketplaceSaaSResourceDetails_MinimumSet_Gen.json
 */
function monitorsGetMarketplaceSaaSResourceDetailsMinimumSetGen() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["DYNATRACE_SUBSCRIPTION_ID"] || "nqmcgifgaqlf";
        const request = {
            tenantId: "urnmattojzhktcfw"
        };
        const credential = new DefaultAzureCredential();
        const client = new DynatraceObservability(credential, subscriptionId);
        const result = yield client.monitors.getMarketplaceSaaSResourceDetails(request);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        monitorsGetMarketplaceSaaSResourceDetailsMaximumSetGen();
        monitorsGetMarketplaceSaaSResourceDetailsMinimumSetGen();
    });
}
main().catch(console.error);
//# sourceMappingURL=monitorsGetMarketplaceSaaSResourceDetailsSample.js.map