import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Monitors } from "../operationsInterfaces";
import { DynatraceObservability } from "../dynatraceObservability";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import { MonitoredResource, MonitorsListMonitoredResourcesOptionalParams, MonitorResource, MonitorsListBySubscriptionIdOptionalParams, MonitorsListByResourceGroupOptionalParams, VMInfo, MonitorsListHostsOptionalParams, AppServiceInfo, MonitorsListAppServicesOptionalParams, LinkableEnvironmentResponse, LinkableEnvironmentRequest, MonitorsListLinkableEnvironmentsOptionalParams, MonitorsGetVMHostPayloadOptionalParams, MonitorsGetVMHostPayloadResponse, MonitorsGetOptionalParams, MonitorsGetResponse, MonitorsCreateOrUpdateOptionalParams, MonitorsCreateOrUpdateResponse, MonitorResourceUpdate, MonitorsUpdateOptionalParams, MonitorsUpdateResponse, MonitorsDeleteOptionalParams, MarketplaceSaaSResourceDetailsRequest, MonitorsGetMarketplaceSaaSResourceDetailsOptionalParams, MonitorsGetMarketplaceSaaSResourceDetailsResponse, MonitorsGetMetricStatusOptionalParams, MonitorsGetMetricStatusResponse, MonitorsGetSSODetailsOptionalParams, MonitorsGetSSODetailsResponse } from "../models";
/** Class containing Monitors operations. */
export declare class MonitorsImpl implements Monitors {
    private readonly client;
    /**
     * Initialize a new instance of the class Monitors class.
     * @param client Reference to the service client
     */
    constructor(client: DynatraceObservability);
    /**
     * List the resources currently being monitored by the Dynatrace monitor resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name
     * @param options The options parameters.
     */
    listMonitoredResources(resourceGroupName: string, monitorName: string, options?: MonitorsListMonitoredResourcesOptionalParams): PagedAsyncIterableIterator<MonitoredResource>;
    private listMonitoredResourcesPagingPage;
    private listMonitoredResourcesPagingAll;
    /**
     * List all MonitorResource by subscriptionId
     * @param options The options parameters.
     */
    listBySubscriptionId(options?: MonitorsListBySubscriptionIdOptionalParams): PagedAsyncIterableIterator<MonitorResource>;
    private listBySubscriptionIdPagingPage;
    private listBySubscriptionIdPagingAll;
    /**
     * List MonitorResource resources by resource group
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: MonitorsListByResourceGroupOptionalParams): PagedAsyncIterableIterator<MonitorResource>;
    private listByResourceGroupPagingPage;
    private listByResourceGroupPagingAll;
    /**
     * List the VM/VMSS resources currently being monitored by the Dynatrace resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name
     * @param options The options parameters.
     */
    listHosts(resourceGroupName: string, monitorName: string, options?: MonitorsListHostsOptionalParams): PagedAsyncIterableIterator<VMInfo>;
    private listHostsPagingPage;
    private listHostsPagingAll;
    /**
     * Gets list of App Services with Dynatrace PaaS OneAgent enabled
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name
     * @param options The options parameters.
     */
    listAppServices(resourceGroupName: string, monitorName: string, options?: MonitorsListAppServicesOptionalParams): PagedAsyncIterableIterator<AppServiceInfo>;
    private listAppServicesPagingPage;
    private listAppServicesPagingAll;
    /**
     * Gets all the Dynatrace environments that a user can link a azure resource to
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name
     * @param request The details of the linkable environment request.
     * @param options The options parameters.
     */
    listLinkableEnvironments(resourceGroupName: string, monitorName: string, request: LinkableEnvironmentRequest, options?: MonitorsListLinkableEnvironmentsOptionalParams): PagedAsyncIterableIterator<LinkableEnvironmentResponse>;
    private listLinkableEnvironmentsPagingPage;
    private listLinkableEnvironmentsPagingAll;
    /**
     * List the resources currently being monitored by the Dynatrace monitor resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name
     * @param options The options parameters.
     */
    private _listMonitoredResources;
    /**
     * Returns the payload that needs to be passed in the request body for installing Dynatrace agent on a
     * VM.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name
     * @param options The options parameters.
     */
    getVMHostPayload(resourceGroupName: string, monitorName: string, options?: MonitorsGetVMHostPayloadOptionalParams): Promise<MonitorsGetVMHostPayloadResponse>;
    /**
     * Get a MonitorResource
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name
     * @param options The options parameters.
     */
    get(resourceGroupName: string, monitorName: string, options?: MonitorsGetOptionalParams): Promise<MonitorsGetResponse>;
    /**
     * Create a MonitorResource
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name
     * @param resource Resource create parameters.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, monitorName: string, resource: MonitorResource, options?: MonitorsCreateOrUpdateOptionalParams): Promise<SimplePollerLike<OperationState<MonitorsCreateOrUpdateResponse>, MonitorsCreateOrUpdateResponse>>;
    /**
     * Create a MonitorResource
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name
     * @param resource Resource create parameters.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, monitorName: string, resource: MonitorResource, options?: MonitorsCreateOrUpdateOptionalParams): Promise<MonitorsCreateOrUpdateResponse>;
    /**
     * Update a MonitorResource
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name
     * @param resource The resource properties to be updated.
     * @param options The options parameters.
     */
    update(resourceGroupName: string, monitorName: string, resource: MonitorResourceUpdate, options?: MonitorsUpdateOptionalParams): Promise<MonitorsUpdateResponse>;
    /**
     * Delete a MonitorResource
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, monitorName: string, options?: MonitorsDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Delete a MonitorResource
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, monitorName: string, options?: MonitorsDeleteOptionalParams): Promise<void>;
    /**
     * List all MonitorResource by subscriptionId
     * @param options The options parameters.
     */
    private _listBySubscriptionId;
    /**
     * List MonitorResource resources by resource group
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    private _listByResourceGroup;
    /**
     * Get Marketplace SaaS resource details of a tenant under a specific subscription
     * @param request Tenant Id
     * @param options The options parameters.
     */
    getMarketplaceSaaSResourceDetails(request: MarketplaceSaaSResourceDetailsRequest, options?: MonitorsGetMarketplaceSaaSResourceDetailsOptionalParams): Promise<MonitorsGetMarketplaceSaaSResourceDetailsResponse>;
    /**
     * List the VM/VMSS resources currently being monitored by the Dynatrace resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name
     * @param options The options parameters.
     */
    private _listHosts;
    /**
     * Get metric status
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Name of the Monitor resource
     * @param options The options parameters.
     */
    getMetricStatus(resourceGroupName: string, monitorName: string, options?: MonitorsGetMetricStatusOptionalParams): Promise<MonitorsGetMetricStatusResponse>;
    /**
     * Gets list of App Services with Dynatrace PaaS OneAgent enabled
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name
     * @param options The options parameters.
     */
    private _listAppServices;
    /**
     * Gets the SSO configuration details from the partner.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name
     * @param options The options parameters.
     */
    getSSODetails(resourceGroupName: string, monitorName: string, options?: MonitorsGetSSODetailsOptionalParams): Promise<MonitorsGetSSODetailsResponse>;
    /**
     * Gets all the Dynatrace environments that a user can link a azure resource to
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name
     * @param request The details of the linkable environment request.
     * @param options The options parameters.
     */
    private _listLinkableEnvironments;
    /**
     * ListMonitoredResourcesNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name
     * @param nextLink The nextLink from the previous successful call to the ListMonitoredResources method.
     * @param options The options parameters.
     */
    private _listMonitoredResourcesNext;
    /**
     * ListBySubscriptionIdNext
     * @param nextLink The nextLink from the previous successful call to the ListBySubscriptionId method.
     * @param options The options parameters.
     */
    private _listBySubscriptionIdNext;
    /**
     * ListByResourceGroupNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.
     * @param options The options parameters.
     */
    private _listByResourceGroupNext;
    /**
     * ListHostsNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name
     * @param nextLink The nextLink from the previous successful call to the ListHosts method.
     * @param options The options parameters.
     */
    private _listHostsNext;
    /**
     * ListAppServicesNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name
     * @param nextLink The nextLink from the previous successful call to the ListAppServices method.
     * @param options The options parameters.
     */
    private _listAppServicesNext;
    /**
     * ListLinkableEnvironmentsNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param monitorName Monitor resource name
     * @param request The details of the linkable environment request.
     * @param nextLink The nextLink from the previous successful call to the ListLinkableEnvironments
     *                 method.
     * @param options The options parameters.
     */
    private _listLinkableEnvironmentsNext;
}
//# sourceMappingURL=monitors.d.ts.map