import * as coreAuth from '@azure/core-auth';
import * as coreClient from '@azure/core-client';
import { OperationState } from '@azure/core-lro';
import { PagedAsyncIterableIterator } from '@azure/core-paging';
import { SimplePollerLike } from '@azure/core-lro';

/**
 * Defines values for ACLAction. \
 * {@link KnownACLAction} can be used interchangeably with ACLAction,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Allow** \
 * **Deny**
 */
export declare type ACLAction = string;

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export declare type CreatedByType = string;

/** A custom certificate. */
export declare interface CustomCertificate extends ProxyResource {
    /**
     * Metadata pertaining to creation and last modification of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
    /**
     * Provisioning state of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: ProvisioningState;
    /** Base uri of the KeyVault that stores certificate. */
    keyVaultBaseUri: string;
    /** Certificate secret name. */
    keyVaultSecretName: string;
    /** Certificate secret version. */
    keyVaultSecretVersion?: string;
}

/** Custom certificates list. */
export declare interface CustomCertificateList {
    /** List of custom certificates of this resource. */
    value?: CustomCertificate[];
    /**
     * The URL the client should use to fetch the next page (per server side paging).
     * It's null for now, added for future use.
     */
    nextLink?: string;
}

/** A custom domain */
export declare interface CustomDomain extends ProxyResource {
    /**
     * Metadata pertaining to creation and last modification of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
    /**
     * Provisioning state of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: ProvisioningState;
    /** The custom domain name. */
    domainName: string;
    /** Reference to a resource. */
    customCertificate: ResourceReference;
}

/** Custom domains list */
export declare interface CustomDomainList {
    /** List of custom domains that bind to this resource. */
    value?: CustomDomain[];
    /**
     * The URL the client should use to fetch the next page (per server side paging).
     * It's null for now, added for future use.
     */
    nextLink?: string;
}

/** Specifications of the Dimension of metrics. */
export declare interface Dimension {
    /** The public facing name of the dimension. */
    name?: string;
    /** Localized friendly display name of the dimension. */
    displayName?: string;
    /** Name of the dimension as it appears in MDM. */
    internalName?: string;
    /** A Boolean flag indicating whether this dimension should be included for the shoebox export scenario. */
    toBeExportedForShoebox?: boolean;
}

/** The resource management error additional info. */
export declare interface ErrorAdditionalInfo {
    /**
     * The additional info type.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /**
     * The additional info.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly info?: Record<string, unknown>;
}

/** The error detail. */
export declare interface ErrorDetail {
    /**
     * The error code.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly code?: string;
    /**
     * The error message.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly message?: string;
    /**
     * The error target.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly target?: string;
    /**
     * The error details.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly details?: ErrorDetail[];
    /**
     * The error additional info.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export declare interface ErrorResponse {
    /** The error object. */
    error?: ErrorDetail;
}

/** Properties of event handler. */
export declare interface EventHandler {
    /**
     * Gets or sets the EventHandler URL template. You can use a predefined parameter {hub} and {event} inside the template, the value of the EventHandler URL is dynamically calculated when the client request comes in.
     * For example, UrlTemplate can be `http://example.com/api/{hub}/{event}`. The host part can't contains parameters.
     */
    urlTemplate: string;
    /**
     * Gets or sets the matching pattern for event names.
     * There are 3 kinds of patterns supported:
     *     1. "*", it matches any event name
     *     2. Combine multiple events with ",", for example "event1,event2", it matches event "event1" and "event2"
     *     3. A single event name, for example, "event1", it matches "event1"
     */
    userEventPattern?: string;
    /** Gets or sets the list of system events. */
    systemEvents?: string[];
    /** Upstream auth settings. If not set, no auth is used for upstream messages. */
    auth?: UpstreamAuthSettings;
}

/**
 * An Event Hub endpoint.
 * The managed identity of Web PubSub service must be enabled, and the identity should have the "Azure Event Hubs Data sender" role to access Event Hub.
 */
export declare interface EventHubEndpoint extends EventListenerEndpoint {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    type: "EventHub";
    /** The fully qualified namespace name of the Event Hub resource. For example, "example.servicebus.windows.net". */
    fullyQualifiedNamespace: string;
    /** The name of the Event Hub. */
    eventHubName: string;
}

/** A setting defines which kinds of events should be sent to which endpoint. */
declare interface EventListener_2 {
    /** A base class for event filter which determines whether an event should be sent to an event listener. */
    filter: EventListenerFilterUnion;
    /** An endpoint specifying where Web PubSub should send events to. */
    endpoint: EventListenerEndpointUnion;
}
export { EventListener_2 as EventListener }

/** An endpoint specifying where Web PubSub should send events to. */
export declare interface EventListenerEndpoint {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    type: "EventHub";
}

/**
 * Defines values for EventListenerEndpointDiscriminator. \
 * {@link KnownEventListenerEndpointDiscriminator} can be used interchangeably with EventListenerEndpointDiscriminator,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **EventHub**
 */
export declare type EventListenerEndpointDiscriminator = string;

export declare type EventListenerEndpointUnion = EventListenerEndpoint | EventHubEndpoint;

/** A base class for event filter which determines whether an event should be sent to an event listener. */
export declare interface EventListenerFilter {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    type: "EventName";
}

/**
 * Defines values for EventListenerFilterDiscriminator. \
 * {@link KnownEventListenerFilterDiscriminator} can be used interchangeably with EventListenerFilterDiscriminator,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **EventName**
 */
export declare type EventListenerFilterDiscriminator = string;

export declare type EventListenerFilterUnion = EventListenerFilter | EventNameFilter;

/** Filter events by their name. */
export declare interface EventNameFilter extends EventListenerFilter {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    type: "EventName";
    /** Gets or sets a list of system events. Supported events: "connected" and "disconnected". Blocking event "connect" is not supported because it requires a response. */
    systemEvents?: string[];
    /**
     * Gets or sets a matching pattern for event names.
     * There are 3 kinds of patterns supported:
     *     1. "*", it matches any event name
     *     2. Combine multiple events with ",", for example "event1,event2", it matches events "event1" and "event2"
     *     3. A single event name, for example, "event1", it matches "event1"
     */
    userEventPattern?: string;
}

/**
 * Given the last `.value` produced by the `byPage` iterator,
 * returns a continuation token that can be used to begin paging from
 * that point later.
 * @param page An object from accessing `value` on the IteratorResult from a `byPage` iterator.
 * @returns The continuation token that can be passed into byPage() during future calls.
 */
export declare function getContinuationToken(page: unknown): string | undefined;

/**
 * Defines values for KeyType. \
 * {@link KnownKeyType} can be used interchangeably with KeyType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Primary** \
 * **Secondary** \
 * **Salt**
 */
declare type KeyType_2 = string;
export { KeyType_2 as KeyType }

/** Known values of {@link ACLAction} that the service accepts. */
export declare enum KnownACLAction {
    /** Allow */
    Allow = "Allow",
    /** Deny */
    Deny = "Deny"
}

/** Known values of {@link CreatedByType} that the service accepts. */
export declare enum KnownCreatedByType {
    /** User */
    User = "User",
    /** Application */
    Application = "Application",
    /** ManagedIdentity */
    ManagedIdentity = "ManagedIdentity",
    /** Key */
    Key = "Key"
}

/** Known values of {@link EventListenerEndpointDiscriminator} that the service accepts. */
export declare enum KnownEventListenerEndpointDiscriminator {
    /** EventHub */
    EventHub = "EventHub"
}

/** Known values of {@link EventListenerFilterDiscriminator} that the service accepts. */
export declare enum KnownEventListenerFilterDiscriminator {
    /** EventName */
    EventName = "EventName"
}

/** Known values of {@link KeyType} that the service accepts. */
export declare enum KnownKeyType {
    /** Primary */
    Primary = "Primary",
    /** Secondary */
    Secondary = "Secondary",
    /** Salt */
    Salt = "Salt"
}

/** Known values of {@link ManagedIdentityType} that the service accepts. */
export declare enum KnownManagedIdentityType {
    /** None */
    None = "None",
    /** SystemAssigned */
    SystemAssigned = "SystemAssigned",
    /** UserAssigned */
    UserAssigned = "UserAssigned"
}

/** Known values of {@link PrivateLinkServiceConnectionStatus} that the service accepts. */
export declare enum KnownPrivateLinkServiceConnectionStatus {
    /** Pending */
    Pending = "Pending",
    /** Approved */
    Approved = "Approved",
    /** Rejected */
    Rejected = "Rejected",
    /** Disconnected */
    Disconnected = "Disconnected"
}

/** Known values of {@link ProvisioningState} that the service accepts. */
export declare enum KnownProvisioningState {
    /** Unknown */
    Unknown = "Unknown",
    /** Succeeded */
    Succeeded = "Succeeded",
    /** Failed */
    Failed = "Failed",
    /** Canceled */
    Canceled = "Canceled",
    /** Running */
    Running = "Running",
    /** Creating */
    Creating = "Creating",
    /** Updating */
    Updating = "Updating",
    /** Deleting */
    Deleting = "Deleting",
    /** Moving */
    Moving = "Moving"
}

/** Known values of {@link ScaleType} that the service accepts. */
export declare enum KnownScaleType {
    /** None */
    None = "None",
    /** Manual */
    Manual = "Manual",
    /** Automatic */
    Automatic = "Automatic"
}

/** Known values of {@link SharedPrivateLinkResourceStatus} that the service accepts. */
export declare enum KnownSharedPrivateLinkResourceStatus {
    /** Pending */
    Pending = "Pending",
    /** Approved */
    Approved = "Approved",
    /** Rejected */
    Rejected = "Rejected",
    /** Disconnected */
    Disconnected = "Disconnected",
    /** Timeout */
    Timeout = "Timeout"
}

/** Known values of {@link UpstreamAuthType} that the service accepts. */
export declare enum KnownUpstreamAuthType {
    /** None */
    None = "None",
    /** ManagedIdentity */
    ManagedIdentity = "ManagedIdentity"
}

/** Known values of {@link WebPubSubRequestType} that the service accepts. */
export declare enum KnownWebPubSubRequestType {
    /** ClientConnection */
    ClientConnection = "ClientConnection",
    /** ServerConnection */
    ServerConnection = "ServerConnection",
    /** Restapi */
    Restapi = "RESTAPI",
    /** Trace */
    Trace = "Trace"
}

/** Known values of {@link WebPubSubSkuTier} that the service accepts. */
export declare enum KnownWebPubSubSkuTier {
    /** Free */
    Free = "Free",
    /** Basic */
    Basic = "Basic",
    /** Standard */
    Standard = "Standard",
    /** Premium */
    Premium = "Premium"
}

/** Live trace category configuration of a Microsoft.SignalRService resource. */
export declare interface LiveTraceCategory {
    /**
     * Gets or sets the live trace category's name.
     * Available values: ConnectivityLogs, MessagingLogs.
     * Case insensitive.
     */
    name?: string;
    /**
     * Indicates whether or the live trace category is enabled.
     * Available values: true, false.
     * Case insensitive.
     */
    enabled?: string;
}

/** Live trace configuration of a Microsoft.SignalRService resource. */
export declare interface LiveTraceConfiguration {
    /**
     * Indicates whether or not enable live trace.
     * When it's set to true, live trace client can connect to the service.
     * Otherwise, live trace client can't connect to the service, so that you are unable to receive any log, no matter what you configure in "categories".
     * Available values: true, false.
     * Case insensitive.
     */
    enabled?: string;
    /** Gets or sets the list of category configurations. */
    categories?: LiveTraceCategory[];
}

/** Specifications of the Logs for Azure Monitoring. */
export declare interface LogSpecification {
    /** Name of the log. */
    name?: string;
    /** Localized friendly display name of the log. */
    displayName?: string;
}

/** A class represent managed identities used for request and response */
export declare interface ManagedIdentity {
    /** Represents the identity type: systemAssigned, userAssigned, None */
    type?: ManagedIdentityType;
    /** Get or set the user assigned identities */
    userAssignedIdentities?: {
        [propertyName: string]: UserAssignedIdentityProperty;
    };
    /**
     * Get the principal id for the system assigned identity.
     * Only be used in response.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly principalId?: string;
    /**
     * Get the tenant id for the system assigned identity.
     * Only be used in response
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly tenantId?: string;
}

/** Managed identity settings for upstream. */
export declare interface ManagedIdentitySettings {
    /**
     * The Resource indicating the App ID URI of the target resource.
     * It also appears in the aud (audience) claim of the issued token.
     */
    resource?: string;
}

/**
 * Defines values for ManagedIdentityType. \
 * {@link KnownManagedIdentityType} can be used interchangeably with ManagedIdentityType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **SystemAssigned** \
 * **UserAssigned**
 */
export declare type ManagedIdentityType = string;

/** Specifications of the Metrics for Azure Monitoring. */
export declare interface MetricSpecification {
    /** Name of the metric. */
    name?: string;
    /** Localized friendly display name of the metric. */
    displayName?: string;
    /** Localized friendly description of the metric. */
    displayDescription?: string;
    /** The unit that makes sense for the metric. */
    unit?: string;
    /** Only provide one value for this field. Valid values: Average, Minimum, Maximum, Total, Count. */
    aggregationType?: string;
    /**
     * Optional. If set to true, then zero will be returned for time duration where no metric is emitted/published.
     * Ex. a metric that returns the number of times a particular error code was emitted. The error code may not appear
     * often, instead of the RP publishing 0, Shoebox can auto fill in 0s for time periods where nothing was emitted.
     */
    fillGapWithZero?: string;
    /** The name of the metric category that the metric belongs to. A metric can only belong to a single category. */
    category?: string;
    /** The dimensions of the metrics. */
    dimensions?: Dimension[];
}

/** Result of the request to check name availability. It contains a flag and possible reason of failure. */
export declare interface NameAvailability {
    /** Indicates whether the name is available or not. */
    nameAvailable?: boolean;
    /** The reason of the availability. Required if name is not available. */
    reason?: string;
    /** The message of the operation. */
    message?: string;
}

/** Data POST-ed to the nameAvailability action */
export declare interface NameAvailabilityParameters {
    /** The resource type. Can be "Microsoft.SignalRService/SignalR" or "Microsoft.SignalRService/webPubSub" */
    type: string;
    /** The resource name to validate. e.g."my-resource-name" */
    name: string;
}

/** Network ACL */
export declare interface NetworkACL {
    /** Allowed request types. The value can be one or more of: ClientConnection, ServerConnection, RESTAPI. */
    allow?: WebPubSubRequestType[];
    /** Denied request types. The value can be one or more of: ClientConnection, ServerConnection, RESTAPI. */
    deny?: WebPubSubRequestType[];
}

/** REST API operation supported by resource provider. */
export declare interface Operation {
    /** Name of the operation with format: {provider}/{resource}/{operation} */
    name?: string;
    /** If the operation is a data action. (for data plane rbac) */
    isDataAction?: boolean;
    /** The object that describes a operation. */
    display?: OperationDisplay;
    /** Optional. The intended executor of the operation; governs the display of the operation in the RBAC UX and the audit logs UX. */
    origin?: string;
    /** Extra Operation properties. */
    properties?: OperationProperties;
}

/** The object that describes a operation. */
export declare interface OperationDisplay {
    /** Friendly name of the resource provider */
    provider?: string;
    /** Resource type on which the operation is performed. */
    resource?: string;
    /** The localized friendly name for the operation. */
    operation?: string;
    /** The localized friendly description for the operation */
    description?: string;
}

/** Result of the request to list REST API operations. It contains a list of operations. */
export declare interface OperationList {
    /** List of operations supported by the resource provider. */
    value?: Operation[];
    /**
     * The URL the client should use to fetch the next page (per server side paging).
     * It's null for now, added for future use.
     */
    nextLink?: string;
}

/** Extra Operation properties. */
export declare interface OperationProperties {
    /** An object that describes a specification. */
    serviceSpecification?: ServiceSpecification;
}

/** Interface representing a Operations. */
export declare interface Operations {
    /**
     * Lists all of the available REST API operations of the Microsoft.SignalRService provider.
     * @param options The options parameters.
     */
    list(options?: OperationsListOptionalParams): PagedAsyncIterableIterator<Operation>;
}

/** Optional parameters. */
export declare interface OperationsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type OperationsListNextResponse = OperationList;

/** Optional parameters. */
export declare interface OperationsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type OperationsListResponse = OperationList;

/** Private endpoint */
export declare interface PrivateEndpoint {
    /** Full qualified Id of the private endpoint */
    id?: string;
}

/** ACL for a private endpoint */
export declare interface PrivateEndpointACL extends NetworkACL {
    /** Name of the private endpoint connection */
    name: string;
}

/** A private endpoint connection to an azure resource */
export declare interface PrivateEndpointConnection extends ProxyResource {
    /**
     * Metadata pertaining to creation and last modification of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
    /**
     * Provisioning state of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: ProvisioningState;
    /** Private endpoint */
    privateEndpoint?: PrivateEndpoint;
    /**
     * Group IDs
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly groupIds?: string[];
    /** Connection state of the private endpoint connection */
    privateLinkServiceConnectionState?: PrivateLinkServiceConnectionState;
}

/** A list of private endpoint connections */
export declare interface PrivateEndpointConnectionList {
    /** The list of the private endpoint connections */
    value?: PrivateEndpointConnection[];
    /** Request URL that can be used to query next page of private endpoint connections. Returned when the total number of requested private endpoint connections exceed maximum page size. */
    nextLink?: string;
}

/** Private link resource */
export declare interface PrivateLinkResource extends ProxyResource {
    /** Group Id of the private link resource */
    groupId?: string;
    /** Required members of the private link resource */
    requiredMembers?: string[];
    /** Required private DNS zone names */
    requiredZoneNames?: string[];
    /** The list of resources that are onboarded to private link service */
    shareablePrivateLinkResourceTypes?: ShareablePrivateLinkResourceType[];
}

/** Contains a list of PrivateLinkResource and a possible link to query more results */
export declare interface PrivateLinkResourceList {
    /** List of PrivateLinkResource */
    value?: PrivateLinkResource[];
    /**
     * The URL the client should use to fetch the next page (per server side paging).
     * It's null for now, added for future use.
     */
    nextLink?: string;
}

/** Connection state of the private endpoint connection */
export declare interface PrivateLinkServiceConnectionState {
    /** Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service. */
    status?: PrivateLinkServiceConnectionStatus;
    /** The reason for approval/rejection of the connection. */
    description?: string;
    /** A message indicating if changes on the service provider require any updates on the consumer. */
    actionsRequired?: string;
}

/**
 * Defines values for PrivateLinkServiceConnectionStatus. \
 * {@link KnownPrivateLinkServiceConnectionStatus} can be used interchangeably with PrivateLinkServiceConnectionStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Pending** \
 * **Approved** \
 * **Rejected** \
 * **Disconnected**
 */
export declare type PrivateLinkServiceConnectionStatus = string;

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **Succeeded** \
 * **Failed** \
 * **Canceled** \
 * **Running** \
 * **Creating** \
 * **Updating** \
 * **Deleting** \
 * **Moving**
 */
export declare type ProvisioningState = string;

/** The resource model definition for a ARM proxy resource. It will have everything other than required location and tags */
export declare interface ProxyResource extends Resource {
}

/** Parameters describes the request to regenerate access keys */
export declare interface RegenerateKeyParameters {
    /** The type of access key. */
    keyType?: KeyType_2;
}

/** The core properties of ARM resources. */
export declare interface Resource {
    /**
     * Fully qualified resource Id for the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /**
     * The name of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * The type of the resource - e.g. "Microsoft.SignalRService/SignalR"
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
}

/** Resource log category configuration of a Microsoft.SignalRService resource. */
export declare interface ResourceLogCategory {
    /**
     * Gets or sets the resource log category's name.
     * Available values: ConnectivityLogs, MessagingLogs.
     * Case insensitive.
     */
    name?: string;
    /**
     * Indicates whether or the resource log category is enabled.
     * Available values: true, false.
     * Case insensitive.
     */
    enabled?: string;
}

/** Resource log configuration of a Microsoft.SignalRService resource. */
export declare interface ResourceLogConfiguration {
    /** Gets or sets the list of category configurations. */
    categories?: ResourceLogCategory[];
}

/** Reference to a resource. */
export declare interface ResourceReference {
    /** Resource ID. */
    id?: string;
}

/** The billing information of the resource. */
export declare interface ResourceSku {
    /**
     * The name of the SKU. Required.
     *
     * Allowed values: Standard_S1, Free_F1, Premium_P1
     */
    name: string;
    /**
     * Optional tier of this particular SKU. 'Standard' or 'Free'.
     *
     * `Basic` is deprecated, use `Standard` instead.
     */
    tier?: WebPubSubSkuTier;
    /**
     * Not used. Retained for future use.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly size?: string;
    /**
     * Not used. Retained for future use.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly family?: string;
    /**
     * Optional, integer. The unit count of the resource. 1 by default.
     *
     * If present, following values are allowed:
     *     Free: 1;
     *     Standard: 1,2,3,4,5,6,7,8,9,10,20,30,40,50,60,70,80,90,100;
     *     Premium:  1,2,3,4,5,6,7,8,9,10,20,30,40,50,60,70,80,90,100;
     */
    capacity?: number;
}

/**
 * Defines values for ScaleType. \
 * {@link KnownScaleType} can be used interchangeably with ScaleType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **Manual** \
 * **Automatic**
 */
export declare type ScaleType = string;

/** An object that describes a specification. */
export declare interface ServiceSpecification {
    /** Specifications of the Metrics for Azure Monitoring. */
    metricSpecifications?: MetricSpecification[];
    /** Specifications of the Logs for Azure Monitoring. */
    logSpecifications?: LogSpecification[];
}

/** Describes the properties of a resource type that has been onboarded to private link service */
export declare interface ShareablePrivateLinkResourceProperties {
    /** The description of the resource type that has been onboarded to private link service */
    description?: string;
    /** The resource provider group id for the resource that has been onboarded to private link service */
    groupId?: string;
    /** The resource provider type for the resource that has been onboarded to private link service */
    type?: string;
}

/** Describes a  resource type that has been onboarded to private link service */
export declare interface ShareablePrivateLinkResourceType {
    /** The name of the resource type that has been onboarded to private link service */
    name?: string;
    /** Describes the properties of a resource type that has been onboarded to private link service */
    properties?: ShareablePrivateLinkResourceProperties;
}

/** Describes a Shared Private Link Resource */
export declare interface SharedPrivateLinkResource extends ProxyResource {
    /**
     * Metadata pertaining to creation and last modification of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
    /** The group id from the provider of resource the shared private link resource is for */
    groupId?: string;
    /** The resource id of the resource the shared private link resource is for */
    privateLinkResourceId?: string;
    /**
     * Provisioning state of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: ProvisioningState;
    /** The request message for requesting approval of the shared private link resource */
    requestMessage?: string;
    /**
     * Status of the shared private link resource
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly status?: SharedPrivateLinkResourceStatus;
}

/** A list of shared private link resources */
export declare interface SharedPrivateLinkResourceList {
    /** The list of the shared private link resources */
    value?: SharedPrivateLinkResource[];
    /** Request URL that can be used to query next page of private endpoint connections. Returned when the total number of requested private endpoint connections exceed maximum page size. */
    nextLink?: string;
}

/**
 * Defines values for SharedPrivateLinkResourceStatus. \
 * {@link KnownSharedPrivateLinkResourceStatus} can be used interchangeably with SharedPrivateLinkResourceStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Pending** \
 * **Approved** \
 * **Rejected** \
 * **Disconnected** \
 * **Timeout**
 */
export declare type SharedPrivateLinkResourceStatus = string;

/** Object that describes a specific usage of the resources. */
export declare interface SignalRServiceUsage {
    /** Fully qualified ARM resource id */
    id?: string;
    /** Current value for the usage quota. */
    currentValue?: number;
    /** The maximum permitted value for the usage quota. If there is no limit, this value will be -1. */
    limit?: number;
    /** Localizable String object containing the name and a localized value. */
    name?: SignalRServiceUsageName;
    /** Representing the units of the usage quota. Possible values are: Count, Bytes, Seconds, Percent, CountPerSecond, BytesPerSecond. */
    unit?: string;
}

/** Object that includes an array of the resource usages and a possible link for next set. */
export declare interface SignalRServiceUsageList {
    /** List of the resource usages */
    value?: SignalRServiceUsage[];
    /**
     * The URL the client should use to fetch the next page (per server side paging).
     * It's null for now, added for future use.
     */
    nextLink?: string;
}

/** Localizable String object containing the name and a localized value. */
export declare interface SignalRServiceUsageName {
    /** The identifier of the usage. */
    value?: string;
    /** Localized name of the usage. */
    localizedValue?: string;
}

/** Describes an available sku." */
export declare interface Sku {
    /**
     * The resource type that this object applies to
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly resourceType?: string;
    /**
     * The billing information of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly sku?: ResourceSku;
    /**
     * Describes scaling information of a sku.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly capacity?: SkuCapacity;
}

/** Describes scaling information of a sku. */
export declare interface SkuCapacity {
    /**
     * The lowest permitted capacity for this resource
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly minimum?: number;
    /**
     * The highest permitted capacity for this resource
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly maximum?: number;
    /**
     * The default capacity.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly default?: number;
    /**
     * Allows capacity value list.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly allowedValues?: number[];
    /**
     * The scale type applicable to the sku.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly scaleType?: ScaleType;
}

/** The list skus operation response */
export declare interface SkuList {
    /**
     * The list of skus available for the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: Sku[];
    /**
     * The URL the client should use to fetch the next page (per server side paging).
     * It's null for now, added for future use.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Metadata pertaining to creation and last modification of the resource. */
export declare interface SystemData {
    /** The identity that created the resource. */
    createdBy?: string;
    /** The type of identity that created the resource. */
    createdByType?: CreatedByType;
    /** The timestamp of resource creation (UTC). */
    createdAt?: Date;
    /** The identity that last modified the resource. */
    lastModifiedBy?: string;
    /** The type of identity that last modified the resource. */
    lastModifiedByType?: CreatedByType;
    /** The timestamp of resource last modification (UTC) */
    lastModifiedAt?: Date;
}

/** The resource model definition for a ARM tracked top level resource. */
export declare interface TrackedResource extends Resource {
    /** The GEO location of the resource. e.g. West US | East US | North Central US | South Central US. */
    location?: string;
    /** Tags of the service which is a list of key value pairs that describe the resource. */
    tags?: {
        [propertyName: string]: string;
    };
}

/** Upstream auth settings. If not set, no auth is used for upstream messages. */
export declare interface UpstreamAuthSettings {
    /** Upstream auth type enum. */
    type?: UpstreamAuthType;
    /** Managed identity settings for upstream. */
    managedIdentity?: ManagedIdentitySettings;
}

/**
 * Defines values for UpstreamAuthType. \
 * {@link KnownUpstreamAuthType} can be used interchangeably with UpstreamAuthType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **ManagedIdentity**
 */
export declare type UpstreamAuthType = string;

/** Interface representing a Usages. */
export declare interface Usages {
    /**
     * List resource usage quotas by location.
     * @param location the location like "eastus"
     * @param options The options parameters.
     */
    list(location: string, options?: UsagesListOptionalParams): PagedAsyncIterableIterator<SignalRServiceUsage>;
}

/** Optional parameters. */
export declare interface UsagesListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type UsagesListNextResponse = SignalRServiceUsageList;

/** Optional parameters. */
export declare interface UsagesListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type UsagesListResponse = SignalRServiceUsageList;

/** Properties of user assigned identity. */
export declare interface UserAssignedIdentityProperty {
    /**
     * Get the principal id for the user assigned identity
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly principalId?: string;
    /**
     * Get the client id for the user assigned identity
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly clientId?: string;
}

/** Interface representing a WebPubSub. */
export declare interface WebPubSub {
    /**
     * Handles requests to list all resources in a subscription.
     * @param options The options parameters.
     */
    listBySubscription(options?: WebPubSubListBySubscriptionOptionalParams): PagedAsyncIterableIterator<WebPubSubResource>;
    /**
     * Handles requests to list all resources in a resource group.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: WebPubSubListByResourceGroupOptionalParams): PagedAsyncIterableIterator<WebPubSubResource>;
    /**
     * Checks that the resource name is valid and is not already in use.
     * @param location the region
     * @param parameters Parameters supplied to the operation.
     * @param options The options parameters.
     */
    checkNameAvailability(location: string, parameters: NameAvailabilityParameters, options?: WebPubSubCheckNameAvailabilityOptionalParams): Promise<WebPubSubCheckNameAvailabilityResponse>;
    /**
     * Get the resource and its properties.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param resourceName The name of the resource.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, resourceName: string, options?: WebPubSubGetOptionalParams): Promise<WebPubSubGetResponse>;
    /**
     * Create or update a resource.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param resourceName The name of the resource.
     * @param parameters Parameters for the create or update operation
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, resourceName: string, parameters: WebPubSubResource, options?: WebPubSubCreateOrUpdateOptionalParams): Promise<SimplePollerLike<OperationState<WebPubSubCreateOrUpdateResponse>, WebPubSubCreateOrUpdateResponse>>;
    /**
     * Create or update a resource.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param resourceName The name of the resource.
     * @param parameters Parameters for the create or update operation
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, resourceName: string, parameters: WebPubSubResource, options?: WebPubSubCreateOrUpdateOptionalParams): Promise<WebPubSubCreateOrUpdateResponse>;
    /**
     * Operation to delete a resource.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param resourceName The name of the resource.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, resourceName: string, options?: WebPubSubDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Operation to delete a resource.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param resourceName The name of the resource.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, resourceName: string, options?: WebPubSubDeleteOptionalParams): Promise<void>;
    /**
     * Operation to update an exiting resource.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param resourceName The name of the resource.
     * @param parameters Parameters for the update operation
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, resourceName: string, parameters: WebPubSubResource, options?: WebPubSubUpdateOptionalParams): Promise<SimplePollerLike<OperationState<WebPubSubUpdateResponse>, WebPubSubUpdateResponse>>;
    /**
     * Operation to update an exiting resource.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param resourceName The name of the resource.
     * @param parameters Parameters for the update operation
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, resourceName: string, parameters: WebPubSubResource, options?: WebPubSubUpdateOptionalParams): Promise<WebPubSubUpdateResponse>;
    /**
     * Get the access keys of the resource.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param resourceName The name of the resource.
     * @param options The options parameters.
     */
    listKeys(resourceGroupName: string, resourceName: string, options?: WebPubSubListKeysOptionalParams): Promise<WebPubSubListKeysResponse>;
    /**
     * Regenerate the access key for the resource. PrimaryKey and SecondaryKey cannot be regenerated at the
     * same time.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param resourceName The name of the resource.
     * @param parameters Parameter that describes the Regenerate Key Operation.
     * @param options The options parameters.
     */
    beginRegenerateKey(resourceGroupName: string, resourceName: string, parameters: RegenerateKeyParameters, options?: WebPubSubRegenerateKeyOptionalParams): Promise<SimplePollerLike<OperationState<WebPubSubRegenerateKeyResponse>, WebPubSubRegenerateKeyResponse>>;
    /**
     * Regenerate the access key for the resource. PrimaryKey and SecondaryKey cannot be regenerated at the
     * same time.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param resourceName The name of the resource.
     * @param parameters Parameter that describes the Regenerate Key Operation.
     * @param options The options parameters.
     */
    beginRegenerateKeyAndWait(resourceGroupName: string, resourceName: string, parameters: RegenerateKeyParameters, options?: WebPubSubRegenerateKeyOptionalParams): Promise<WebPubSubRegenerateKeyResponse>;
    /**
     * Operation to restart a resource.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param resourceName The name of the resource.
     * @param options The options parameters.
     */
    beginRestart(resourceGroupName: string, resourceName: string, options?: WebPubSubRestartOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Operation to restart a resource.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param resourceName The name of the resource.
     * @param options The options parameters.
     */
    beginRestartAndWait(resourceGroupName: string, resourceName: string, options?: WebPubSubRestartOptionalParams): Promise<void>;
    /**
     * List all available skus of the resource.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param resourceName The name of the resource.
     * @param options The options parameters.
     */
    listSkus(resourceGroupName: string, resourceName: string, options?: WebPubSubListSkusOptionalParams): Promise<WebPubSubListSkusResponse>;
}

/** Optional parameters. */
export declare interface WebPubSubCheckNameAvailabilityOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the checkNameAvailability operation. */
export declare type WebPubSubCheckNameAvailabilityResponse = NameAvailability;

/** Optional parameters. */
export declare interface WebPubSubCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export declare type WebPubSubCreateOrUpdateResponse = WebPubSubResource;

/** Interface representing a WebPubSubCustomCertificates. */
export declare interface WebPubSubCustomCertificates {
    /**
     * List all custom certificates.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param resourceName The name of the resource.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, resourceName: string, options?: WebPubSubCustomCertificatesListOptionalParams): PagedAsyncIterableIterator<CustomCertificate>;
    /**
     * Get a custom certificate.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param resourceName The name of the resource.
     * @param certificateName Custom certificate name
     * @param options The options parameters.
     */
    get(resourceGroupName: string, resourceName: string, certificateName: string, options?: WebPubSubCustomCertificatesGetOptionalParams): Promise<WebPubSubCustomCertificatesGetResponse>;
    /**
     * Create or update a custom certificate.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param resourceName The name of the resource.
     * @param certificateName Custom certificate name
     * @param parameters A custom certificate.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, resourceName: string, certificateName: string, parameters: CustomCertificate, options?: WebPubSubCustomCertificatesCreateOrUpdateOptionalParams): Promise<SimplePollerLike<OperationState<WebPubSubCustomCertificatesCreateOrUpdateResponse>, WebPubSubCustomCertificatesCreateOrUpdateResponse>>;
    /**
     * Create or update a custom certificate.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param resourceName The name of the resource.
     * @param certificateName Custom certificate name
     * @param parameters A custom certificate.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, resourceName: string, certificateName: string, parameters: CustomCertificate, options?: WebPubSubCustomCertificatesCreateOrUpdateOptionalParams): Promise<WebPubSubCustomCertificatesCreateOrUpdateResponse>;
    /**
     * Delete a custom certificate.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param resourceName The name of the resource.
     * @param certificateName Custom certificate name
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, resourceName: string, certificateName: string, options?: WebPubSubCustomCertificatesDeleteOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface WebPubSubCustomCertificatesCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export declare type WebPubSubCustomCertificatesCreateOrUpdateResponse = CustomCertificate;

/** Optional parameters. */
export declare interface WebPubSubCustomCertificatesDeleteOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface WebPubSubCustomCertificatesGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type WebPubSubCustomCertificatesGetResponse = CustomCertificate;

/** Optional parameters. */
export declare interface WebPubSubCustomCertificatesListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type WebPubSubCustomCertificatesListNextResponse = CustomCertificateList;

/** Optional parameters. */
export declare interface WebPubSubCustomCertificatesListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type WebPubSubCustomCertificatesListResponse = CustomCertificateList;

/** Interface representing a WebPubSubCustomDomains. */
export declare interface WebPubSubCustomDomains {
    /**
     * List all custom domains.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param resourceName The name of the resource.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, resourceName: string, options?: WebPubSubCustomDomainsListOptionalParams): PagedAsyncIterableIterator<CustomDomain>;
    /**
     * Get a custom domain.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param resourceName The name of the resource.
     * @param name Custom domain name.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, resourceName: string, name: string, options?: WebPubSubCustomDomainsGetOptionalParams): Promise<WebPubSubCustomDomainsGetResponse>;
    /**
     * Create or update a custom domain.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param resourceName The name of the resource.
     * @param name Custom domain name.
     * @param parameters A custom domain
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, resourceName: string, name: string, parameters: CustomDomain, options?: WebPubSubCustomDomainsCreateOrUpdateOptionalParams): Promise<SimplePollerLike<OperationState<WebPubSubCustomDomainsCreateOrUpdateResponse>, WebPubSubCustomDomainsCreateOrUpdateResponse>>;
    /**
     * Create or update a custom domain.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param resourceName The name of the resource.
     * @param name Custom domain name.
     * @param parameters A custom domain
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, resourceName: string, name: string, parameters: CustomDomain, options?: WebPubSubCustomDomainsCreateOrUpdateOptionalParams): Promise<WebPubSubCustomDomainsCreateOrUpdateResponse>;
    /**
     * Delete a custom domain.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param resourceName The name of the resource.
     * @param name Custom domain name.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, resourceName: string, name: string, options?: WebPubSubCustomDomainsDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Delete a custom domain.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param resourceName The name of the resource.
     * @param name Custom domain name.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, resourceName: string, name: string, options?: WebPubSubCustomDomainsDeleteOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface WebPubSubCustomDomainsCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export declare type WebPubSubCustomDomainsCreateOrUpdateResponse = CustomDomain;

/** Optional parameters. */
export declare interface WebPubSubCustomDomainsDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface WebPubSubCustomDomainsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type WebPubSubCustomDomainsGetResponse = CustomDomain;

/** Optional parameters. */
export declare interface WebPubSubCustomDomainsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type WebPubSubCustomDomainsListNextResponse = CustomDomainList;

/** Optional parameters. */
export declare interface WebPubSubCustomDomainsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type WebPubSubCustomDomainsListResponse = CustomDomainList;

/** Optional parameters. */
export declare interface WebPubSubDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface WebPubSubGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type WebPubSubGetResponse = WebPubSubResource;

/** A hub setting */
export declare interface WebPubSubHub extends ProxyResource {
    /**
     * Metadata pertaining to creation and last modification of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
    /** Properties of a hub. */
    properties: WebPubSubHubProperties;
}

/** Hub setting list */
export declare interface WebPubSubHubList {
    /** List of hub settings to this resource. */
    value?: WebPubSubHub[];
    /**
     * The URL the client should use to fetch the next page (per server side paging).
     * It's null for now, added for future use.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Properties of a hub. */
export declare interface WebPubSubHubProperties {
    /** Event handler of a hub. */
    eventHandlers?: EventHandler[];
    /**
     * Event listener settings for forwarding your client events to listeners.
     * Event listener is transparent to Web PubSub clients, and it doesn't return any result to clients nor interrupt the lifetime of clients.
     * One event can be sent to multiple listeners, as long as it matches the filters in those listeners. The order of the array elements doesn't matter.
     * Maximum count of event listeners among all hubs is 10.
     */
    eventListeners?: EventListener_2[];
    /** The settings for configuring if anonymous connections are allowed for this hub: "allow" or "deny". Default to "deny". */
    anonymousConnectPolicy?: string;
}

/** Interface representing a WebPubSubHubs. */
export declare interface WebPubSubHubs {
    /**
     * List hub settings.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param resourceName The name of the resource.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, resourceName: string, options?: WebPubSubHubsListOptionalParams): PagedAsyncIterableIterator<WebPubSubHub>;
    /**
     * Get a hub setting.
     * @param hubName The hub name.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param resourceName The name of the resource.
     * @param options The options parameters.
     */
    get(hubName: string, resourceGroupName: string, resourceName: string, options?: WebPubSubHubsGetOptionalParams): Promise<WebPubSubHubsGetResponse>;
    /**
     * Create or update a hub setting.
     * @param hubName The hub name.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param resourceName The name of the resource.
     * @param parameters The resource of WebPubSubHub and its properties
     * @param options The options parameters.
     */
    beginCreateOrUpdate(hubName: string, resourceGroupName: string, resourceName: string, parameters: WebPubSubHub, options?: WebPubSubHubsCreateOrUpdateOptionalParams): Promise<SimplePollerLike<OperationState<WebPubSubHubsCreateOrUpdateResponse>, WebPubSubHubsCreateOrUpdateResponse>>;
    /**
     * Create or update a hub setting.
     * @param hubName The hub name.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param resourceName The name of the resource.
     * @param parameters The resource of WebPubSubHub and its properties
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(hubName: string, resourceGroupName: string, resourceName: string, parameters: WebPubSubHub, options?: WebPubSubHubsCreateOrUpdateOptionalParams): Promise<WebPubSubHubsCreateOrUpdateResponse>;
    /**
     * Delete a hub setting.
     * @param hubName The hub name.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param resourceName The name of the resource.
     * @param options The options parameters.
     */
    beginDelete(hubName: string, resourceGroupName: string, resourceName: string, options?: WebPubSubHubsDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Delete a hub setting.
     * @param hubName The hub name.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param resourceName The name of the resource.
     * @param options The options parameters.
     */
    beginDeleteAndWait(hubName: string, resourceGroupName: string, resourceName: string, options?: WebPubSubHubsDeleteOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface WebPubSubHubsCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export declare type WebPubSubHubsCreateOrUpdateResponse = WebPubSubHub;

/** Optional parameters. */
export declare interface WebPubSubHubsDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface WebPubSubHubsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type WebPubSubHubsGetResponse = WebPubSubHub;

/** Optional parameters. */
export declare interface WebPubSubHubsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type WebPubSubHubsListNextResponse = WebPubSubHubList;

/** Optional parameters. */
export declare interface WebPubSubHubsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type WebPubSubHubsListResponse = WebPubSubHubList;

/** A class represents the access keys of the resource. */
export declare interface WebPubSubKeys {
    /** The primary access key. */
    primaryKey?: string;
    /** The secondary access key. */
    secondaryKey?: string;
    /** Connection string constructed via the primaryKey */
    primaryConnectionString?: string;
    /** Connection string constructed via the secondaryKey */
    secondaryConnectionString?: string;
}

/** Optional parameters. */
export declare interface WebPubSubListByResourceGroupNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroupNext operation. */
export declare type WebPubSubListByResourceGroupNextResponse = WebPubSubResourceList;

/** Optional parameters. */
export declare interface WebPubSubListByResourceGroupOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroup operation. */
export declare type WebPubSubListByResourceGroupResponse = WebPubSubResourceList;

/** Optional parameters. */
export declare interface WebPubSubListBySubscriptionNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listBySubscriptionNext operation. */
export declare type WebPubSubListBySubscriptionNextResponse = WebPubSubResourceList;

/** Optional parameters. */
export declare interface WebPubSubListBySubscriptionOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listBySubscription operation. */
export declare type WebPubSubListBySubscriptionResponse = WebPubSubResourceList;

/** Optional parameters. */
export declare interface WebPubSubListKeysOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listKeys operation. */
export declare type WebPubSubListKeysResponse = WebPubSubKeys;

/** Optional parameters. */
export declare interface WebPubSubListSkusOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listSkus operation. */
export declare type WebPubSubListSkusResponse = SkuList;

export declare class WebPubSubManagementClient extends coreClient.ServiceClient {
    $host: string;
    apiVersion: string;
    subscriptionId: string;
    /**
     * Initializes a new instance of the WebPubSubManagementClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId Gets subscription Id which uniquely identify the Microsoft Azure subscription.
     *                       The subscription ID forms part of the URI for every service call.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: WebPubSubManagementClientOptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    operations: Operations;
    webPubSub: WebPubSub;
    usages: Usages;
    webPubSubCustomCertificates: WebPubSubCustomCertificates;
    webPubSubCustomDomains: WebPubSubCustomDomains;
    webPubSubHubs: WebPubSubHubs;
    webPubSubPrivateEndpointConnections: WebPubSubPrivateEndpointConnections;
    webPubSubPrivateLinkResources: WebPubSubPrivateLinkResources;
    webPubSubSharedPrivateLinkResources: WebPubSubSharedPrivateLinkResources;
}

/** Optional parameters. */
export declare interface WebPubSubManagementClientOptionalParams extends coreClient.ServiceClientOptions {
    /** server parameter */
    $host?: string;
    /** Api Version */
    apiVersion?: string;
    /** Overrides client endpoint. */
    endpoint?: string;
}

/** Network ACLs for the resource */
export declare interface WebPubSubNetworkACLs {
    /** Azure Networking ACL Action. */
    defaultAction?: ACLAction;
    /** Network ACL */
    publicNetwork?: NetworkACL;
    /** ACLs for requests from private endpoints */
    privateEndpoints?: PrivateEndpointACL[];
}

/** Interface representing a WebPubSubPrivateEndpointConnections. */
export declare interface WebPubSubPrivateEndpointConnections {
    /**
     * List private endpoint connections
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param resourceName The name of the resource.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, resourceName: string, options?: WebPubSubPrivateEndpointConnectionsListOptionalParams): PagedAsyncIterableIterator<PrivateEndpointConnection>;
    /**
     * Get the specified private endpoint connection
     * @param privateEndpointConnectionName The name of the private endpoint connection
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param resourceName The name of the resource.
     * @param options The options parameters.
     */
    get(privateEndpointConnectionName: string, resourceGroupName: string, resourceName: string, options?: WebPubSubPrivateEndpointConnectionsGetOptionalParams): Promise<WebPubSubPrivateEndpointConnectionsGetResponse>;
    /**
     * Update the state of specified private endpoint connection
     * @param privateEndpointConnectionName The name of the private endpoint connection
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param resourceName The name of the resource.
     * @param parameters The resource of private endpoint and its properties
     * @param options The options parameters.
     */
    update(privateEndpointConnectionName: string, resourceGroupName: string, resourceName: string, parameters: PrivateEndpointConnection, options?: WebPubSubPrivateEndpointConnectionsUpdateOptionalParams): Promise<WebPubSubPrivateEndpointConnectionsUpdateResponse>;
    /**
     * Delete the specified private endpoint connection
     * @param privateEndpointConnectionName The name of the private endpoint connection
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param resourceName The name of the resource.
     * @param options The options parameters.
     */
    beginDelete(privateEndpointConnectionName: string, resourceGroupName: string, resourceName: string, options?: WebPubSubPrivateEndpointConnectionsDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Delete the specified private endpoint connection
     * @param privateEndpointConnectionName The name of the private endpoint connection
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param resourceName The name of the resource.
     * @param options The options parameters.
     */
    beginDeleteAndWait(privateEndpointConnectionName: string, resourceGroupName: string, resourceName: string, options?: WebPubSubPrivateEndpointConnectionsDeleteOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface WebPubSubPrivateEndpointConnectionsDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface WebPubSubPrivateEndpointConnectionsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type WebPubSubPrivateEndpointConnectionsGetResponse = PrivateEndpointConnection;

/** Optional parameters. */
export declare interface WebPubSubPrivateEndpointConnectionsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type WebPubSubPrivateEndpointConnectionsListNextResponse = PrivateEndpointConnectionList;

/** Optional parameters. */
export declare interface WebPubSubPrivateEndpointConnectionsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type WebPubSubPrivateEndpointConnectionsListResponse = PrivateEndpointConnectionList;

/** Optional parameters. */
export declare interface WebPubSubPrivateEndpointConnectionsUpdateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the update operation. */
export declare type WebPubSubPrivateEndpointConnectionsUpdateResponse = PrivateEndpointConnection;

/** Interface representing a WebPubSubPrivateLinkResources. */
export declare interface WebPubSubPrivateLinkResources {
    /**
     * Get the private link resources that need to be created for a resource.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param resourceName The name of the resource.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, resourceName: string, options?: WebPubSubPrivateLinkResourcesListOptionalParams): PagedAsyncIterableIterator<PrivateLinkResource>;
}

/** Optional parameters. */
export declare interface WebPubSubPrivateLinkResourcesListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type WebPubSubPrivateLinkResourcesListNextResponse = PrivateLinkResourceList;

/** Optional parameters. */
export declare interface WebPubSubPrivateLinkResourcesListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type WebPubSubPrivateLinkResourcesListResponse = PrivateLinkResourceList;

/** Optional parameters. */
export declare interface WebPubSubRegenerateKeyOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the regenerateKey operation. */
export declare type WebPubSubRegenerateKeyResponse = WebPubSubKeys;

/**
 * Defines values for WebPubSubRequestType. \
 * {@link KnownWebPubSubRequestType} can be used interchangeably with WebPubSubRequestType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ClientConnection** \
 * **ServerConnection** \
 * **RESTAPI** \
 * **Trace**
 */
export declare type WebPubSubRequestType = string;

/** A class represent a resource. */
export declare interface WebPubSubResource extends TrackedResource {
    /** The billing information of the resource. */
    sku?: ResourceSku;
    /** A class represent managed identities used for request and response */
    identity?: ManagedIdentity;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
    /**
     * Provisioning state of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: ProvisioningState;
    /**
     * The publicly accessible IP of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly externalIP?: string;
    /**
     * FQDN of the service instance.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly hostName?: string;
    /**
     * The publicly accessible port of the resource which is designed for browser/client side usage.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly publicPort?: number;
    /**
     * The publicly accessible port of the resource which is designed for customer server side usage.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly serverPort?: number;
    /**
     * Version of the resource. Probably you need the same or higher version of client SDKs.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly version?: string;
    /**
     * Private endpoint connections to the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly privateEndpointConnections?: PrivateEndpointConnection[];
    /**
     * The list of shared private link resources.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly sharedPrivateLinkResources?: SharedPrivateLinkResource[];
    /** TLS settings for the resource */
    tls?: WebPubSubTlsSettings;
    /**
     * Deprecated.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly hostNamePrefix?: string;
    /** Live trace configuration of a Microsoft.SignalRService resource. */
    liveTraceConfiguration?: LiveTraceConfiguration;
    /** Resource log configuration of a Microsoft.SignalRService resource. */
    resourceLogConfiguration?: ResourceLogConfiguration;
    /** Network ACLs for the resource */
    networkACLs?: WebPubSubNetworkACLs;
    /**
     * Enable or disable public network access. Default to "Enabled".
     * When it's Enabled, network ACLs still apply.
     * When it's Disabled, public network access is always disabled no matter what you set in network ACLs.
     */
    publicNetworkAccess?: string;
    /**
     * DisableLocalAuth
     * Enable or disable local auth with AccessKey
     * When set as true, connection with AccessKey=xxx won't work.
     */
    disableLocalAuth?: boolean;
    /**
     * DisableLocalAuth
     * Enable or disable aad auth
     * When set as true, connection with AuthType=aad won't work.
     */
    disableAadAuth?: boolean;
}

/** Object that includes an array of resources and a possible link for next set. */
export declare interface WebPubSubResourceList {
    /** List of the resources */
    value?: WebPubSubResource[];
    /**
     * The URL the client should use to fetch the next page (per server side paging).
     * It's null for now, added for future use.
     */
    nextLink?: string;
}

/** Optional parameters. */
export declare interface WebPubSubRestartOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Interface representing a WebPubSubSharedPrivateLinkResources. */
export declare interface WebPubSubSharedPrivateLinkResources {
    /**
     * List shared private link resources
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param resourceName The name of the resource.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, resourceName: string, options?: WebPubSubSharedPrivateLinkResourcesListOptionalParams): PagedAsyncIterableIterator<SharedPrivateLinkResource>;
    /**
     * Get the specified shared private link resource
     * @param sharedPrivateLinkResourceName The name of the shared private link resource
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param resourceName The name of the resource.
     * @param options The options parameters.
     */
    get(sharedPrivateLinkResourceName: string, resourceGroupName: string, resourceName: string, options?: WebPubSubSharedPrivateLinkResourcesGetOptionalParams): Promise<WebPubSubSharedPrivateLinkResourcesGetResponse>;
    /**
     * Create or update a shared private link resource
     * @param sharedPrivateLinkResourceName The name of the shared private link resource
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param resourceName The name of the resource.
     * @param parameters The shared private link resource
     * @param options The options parameters.
     */
    beginCreateOrUpdate(sharedPrivateLinkResourceName: string, resourceGroupName: string, resourceName: string, parameters: SharedPrivateLinkResource, options?: WebPubSubSharedPrivateLinkResourcesCreateOrUpdateOptionalParams): Promise<SimplePollerLike<OperationState<WebPubSubSharedPrivateLinkResourcesCreateOrUpdateResponse>, WebPubSubSharedPrivateLinkResourcesCreateOrUpdateResponse>>;
    /**
     * Create or update a shared private link resource
     * @param sharedPrivateLinkResourceName The name of the shared private link resource
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param resourceName The name of the resource.
     * @param parameters The shared private link resource
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(sharedPrivateLinkResourceName: string, resourceGroupName: string, resourceName: string, parameters: SharedPrivateLinkResource, options?: WebPubSubSharedPrivateLinkResourcesCreateOrUpdateOptionalParams): Promise<WebPubSubSharedPrivateLinkResourcesCreateOrUpdateResponse>;
    /**
     * Delete the specified shared private link resource
     * @param sharedPrivateLinkResourceName The name of the shared private link resource
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param resourceName The name of the resource.
     * @param options The options parameters.
     */
    beginDelete(sharedPrivateLinkResourceName: string, resourceGroupName: string, resourceName: string, options?: WebPubSubSharedPrivateLinkResourcesDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Delete the specified shared private link resource
     * @param sharedPrivateLinkResourceName The name of the shared private link resource
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param resourceName The name of the resource.
     * @param options The options parameters.
     */
    beginDeleteAndWait(sharedPrivateLinkResourceName: string, resourceGroupName: string, resourceName: string, options?: WebPubSubSharedPrivateLinkResourcesDeleteOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface WebPubSubSharedPrivateLinkResourcesCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export declare type WebPubSubSharedPrivateLinkResourcesCreateOrUpdateResponse = SharedPrivateLinkResource;

/** Optional parameters. */
export declare interface WebPubSubSharedPrivateLinkResourcesDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface WebPubSubSharedPrivateLinkResourcesGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type WebPubSubSharedPrivateLinkResourcesGetResponse = SharedPrivateLinkResource;

/** Optional parameters. */
export declare interface WebPubSubSharedPrivateLinkResourcesListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type WebPubSubSharedPrivateLinkResourcesListNextResponse = SharedPrivateLinkResourceList;

/** Optional parameters. */
export declare interface WebPubSubSharedPrivateLinkResourcesListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type WebPubSubSharedPrivateLinkResourcesListResponse = SharedPrivateLinkResourceList;

/**
 * Defines values for WebPubSubSkuTier. \
 * {@link KnownWebPubSubSkuTier} can be used interchangeably with WebPubSubSkuTier,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Free** \
 * **Basic** \
 * **Standard** \
 * **Premium**
 */
export declare type WebPubSubSkuTier = string;

/** TLS settings for the resource */
export declare interface WebPubSubTlsSettings {
    /** Request client certificate during TLS handshake if enabled */
    clientCertEnabled?: boolean;
}

/** Optional parameters. */
export declare interface WebPubSubUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the update operation. */
export declare type WebPubSubUpdateResponse = WebPubSubResource;

export { }
