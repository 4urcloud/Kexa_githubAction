/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { ConfidentialLedgerClient } from "@azure/arm-confidentialledger";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Retrieves the properties of a Confidential Ledger.
 *
 * @summary Retrieves the properties of a Confidential Ledger.
 * x-ms-original-file: specification/confidentialledger/resource-manager/Microsoft.ConfidentialLedger/stable/2022-05-13/examples/ConfidentialLedger_Get.json
 */
function confidentialLedgerGet() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["CONFIDENTIALLEDGER_SUBSCRIPTION_ID"] ||
            "0000000-0000-0000-0000-000000000001";
        const resourceGroupName = process.env["CONFIDENTIALLEDGER_RESOURCE_GROUP"] ||
            "DummyResourceGroupName";
        const ledgerName = "DummyLedgerName";
        const credential = new DefaultAzureCredential();
        const client = new ConfidentialLedgerClient(credential, subscriptionId);
        const result = yield client.ledger.get(resourceGroupName, ledgerName);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        confidentialLedgerGet();
    });
}
main().catch(console.error);
//# sourceMappingURL=ledgerGetSample.js.map