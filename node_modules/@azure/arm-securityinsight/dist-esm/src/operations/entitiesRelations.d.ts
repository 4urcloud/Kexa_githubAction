import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { EntitiesRelations } from "../operationsInterfaces";
import { SecurityInsights } from "../securityInsights";
import { Relation, EntitiesRelationsListOptionalParams } from "../models";
/** Class containing EntitiesRelations operations. */
export declare class EntitiesRelationsImpl implements EntitiesRelations {
    private readonly client;
    /**
     * Initialize a new instance of the class EntitiesRelations class.
     * @param client Reference to the service client
     */
    constructor(client: SecurityInsights);
    /**
     * Gets all relations of an entity.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param entityId entity ID
     * @param options The options parameters.
     */
    list(resourceGroupName: string, workspaceName: string, entityId: string, options?: EntitiesRelationsListOptionalParams): PagedAsyncIterableIterator<Relation>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Gets all relations of an entity.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param entityId entity ID
     * @param options The options parameters.
     */
    private _list;
    /**
     * ListNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param entityId entity ID
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=entitiesRelations.d.ts.map