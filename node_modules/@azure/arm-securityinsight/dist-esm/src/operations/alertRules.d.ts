import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { AlertRules } from "../operationsInterfaces";
import { SecurityInsights } from "../securityInsights";
import { AlertRuleUnion, AlertRulesListOptionalParams, AlertRulesGetOptionalParams, AlertRulesGetResponse, AlertRulesCreateOrUpdateOptionalParams, AlertRulesCreateOrUpdateResponse, AlertRulesDeleteOptionalParams } from "../models";
/** Class containing AlertRules operations. */
export declare class AlertRulesImpl implements AlertRules {
    private readonly client;
    /**
     * Initialize a new instance of the class AlertRules class.
     * @param client Reference to the service client
     */
    constructor(client: SecurityInsights);
    /**
     * Gets all alert rules.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, workspaceName: string, options?: AlertRulesListOptionalParams): PagedAsyncIterableIterator<AlertRuleUnion>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Gets all alert rules.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param options The options parameters.
     */
    private _list;
    /**
     * Gets the alert rule.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param ruleId Alert rule ID
     * @param options The options parameters.
     */
    get(resourceGroupName: string, workspaceName: string, ruleId: string, options?: AlertRulesGetOptionalParams): Promise<AlertRulesGetResponse>;
    /**
     * Creates or updates the alert rule.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param ruleId Alert rule ID
     * @param alertRule The alert rule
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, workspaceName: string, ruleId: string, alertRule: AlertRuleUnion, options?: AlertRulesCreateOrUpdateOptionalParams): Promise<AlertRulesCreateOrUpdateResponse>;
    /**
     * Delete the alert rule.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param ruleId Alert rule ID
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, workspaceName: string, ruleId: string, options?: AlertRulesDeleteOptionalParams): Promise<void>;
    /**
     * ListNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=alertRules.d.ts.map