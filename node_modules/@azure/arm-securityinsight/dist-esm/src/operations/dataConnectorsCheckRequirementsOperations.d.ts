import { DataConnectorsCheckRequirementsOperations } from "../operationsInterfaces";
import { SecurityInsights } from "../securityInsights";
import { DataConnectorsCheckRequirementsUnion, DataConnectorsCheckRequirementsPostOptionalParams, DataConnectorsCheckRequirementsPostResponse } from "../models";
/** Class containing DataConnectorsCheckRequirementsOperations operations. */
export declare class DataConnectorsCheckRequirementsOperationsImpl implements DataConnectorsCheckRequirementsOperations {
    private readonly client;
    /**
     * Initialize a new instance of the class DataConnectorsCheckRequirementsOperations class.
     * @param client Reference to the service client
     */
    constructor(client: SecurityInsights);
    /**
     * Get requirements state for a data connector type.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param dataConnectorsCheckRequirements The parameters for requirements check message
     * @param options The options parameters.
     */
    post(resourceGroupName: string, workspaceName: string, dataConnectorsCheckRequirements: DataConnectorsCheckRequirementsUnion, options?: DataConnectorsCheckRequirementsPostOptionalParams): Promise<DataConnectorsCheckRequirementsPostResponse>;
}
//# sourceMappingURL=dataConnectorsCheckRequirementsOperations.d.ts.map