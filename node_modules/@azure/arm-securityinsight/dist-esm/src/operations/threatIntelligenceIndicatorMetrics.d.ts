import { ThreatIntelligenceIndicatorMetrics } from "../operationsInterfaces";
import { SecurityInsights } from "../securityInsights";
import { ThreatIntelligenceIndicatorMetricsListOptionalParams, ThreatIntelligenceIndicatorMetricsListResponse } from "../models";
/** Class containing ThreatIntelligenceIndicatorMetrics operations. */
export declare class ThreatIntelligenceIndicatorMetricsImpl implements ThreatIntelligenceIndicatorMetrics {
    private readonly client;
    /**
     * Initialize a new instance of the class ThreatIntelligenceIndicatorMetrics class.
     * @param client Reference to the service client
     */
    constructor(client: SecurityInsights);
    /**
     * Get threat intelligence indicators metrics (Indicators counts by Type, Threat Type, Source).
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, workspaceName: string, options?: ThreatIntelligenceIndicatorMetricsListOptionalParams): Promise<ThreatIntelligenceIndicatorMetricsListResponse>;
}
//# sourceMappingURL=threatIntelligenceIndicatorMetrics.d.ts.map