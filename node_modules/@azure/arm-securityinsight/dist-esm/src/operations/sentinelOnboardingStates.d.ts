import { SentinelOnboardingStates } from "../operationsInterfaces";
import { SecurityInsights } from "../securityInsights";
import { SentinelOnboardingStatesGetOptionalParams, SentinelOnboardingStatesGetResponse, SentinelOnboardingStatesCreateOptionalParams, SentinelOnboardingStatesCreateResponse, SentinelOnboardingStatesDeleteOptionalParams, SentinelOnboardingStatesListOptionalParams, SentinelOnboardingStatesListResponse } from "../models";
/** Class containing SentinelOnboardingStates operations. */
export declare class SentinelOnboardingStatesImpl implements SentinelOnboardingStates {
    private readonly client;
    /**
     * Initialize a new instance of the class SentinelOnboardingStates class.
     * @param client Reference to the service client
     */
    constructor(client: SecurityInsights);
    /**
     * Get Sentinel onboarding state
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param sentinelOnboardingStateName The Sentinel onboarding state name. Supports - default
     * @param options The options parameters.
     */
    get(resourceGroupName: string, workspaceName: string, sentinelOnboardingStateName: string, options?: SentinelOnboardingStatesGetOptionalParams): Promise<SentinelOnboardingStatesGetResponse>;
    /**
     * Create Sentinel onboarding state
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param sentinelOnboardingStateName The Sentinel onboarding state name. Supports - default
     * @param options The options parameters.
     */
    create(resourceGroupName: string, workspaceName: string, sentinelOnboardingStateName: string, options?: SentinelOnboardingStatesCreateOptionalParams): Promise<SentinelOnboardingStatesCreateResponse>;
    /**
     * Delete Sentinel onboarding state
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param sentinelOnboardingStateName The Sentinel onboarding state name. Supports - default
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, workspaceName: string, sentinelOnboardingStateName: string, options?: SentinelOnboardingStatesDeleteOptionalParams): Promise<void>;
    /**
     * Gets all Sentinel onboarding states
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, workspaceName: string, options?: SentinelOnboardingStatesListOptionalParams): Promise<SentinelOnboardingStatesListResponse>;
}
//# sourceMappingURL=sentinelOnboardingStates.d.ts.map