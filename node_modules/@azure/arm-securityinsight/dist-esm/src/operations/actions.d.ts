import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Actions } from "../operationsInterfaces";
import { SecurityInsights } from "../securityInsights";
import { ActionResponse, ActionsListByAlertRuleOptionalParams, ActionsGetOptionalParams, ActionsGetResponse, ActionRequest, ActionsCreateOrUpdateOptionalParams, ActionsCreateOrUpdateResponse, ActionsDeleteOptionalParams } from "../models";
/** Class containing Actions operations. */
export declare class ActionsImpl implements Actions {
    private readonly client;
    /**
     * Initialize a new instance of the class Actions class.
     * @param client Reference to the service client
     */
    constructor(client: SecurityInsights);
    /**
     * Gets all actions of alert rule.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param ruleId Alert rule ID
     * @param options The options parameters.
     */
    listByAlertRule(resourceGroupName: string, workspaceName: string, ruleId: string, options?: ActionsListByAlertRuleOptionalParams): PagedAsyncIterableIterator<ActionResponse>;
    private listByAlertRulePagingPage;
    private listByAlertRulePagingAll;
    /**
     * Gets all actions of alert rule.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param ruleId Alert rule ID
     * @param options The options parameters.
     */
    private _listByAlertRule;
    /**
     * Gets the action of alert rule.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param ruleId Alert rule ID
     * @param actionId Action ID
     * @param options The options parameters.
     */
    get(resourceGroupName: string, workspaceName: string, ruleId: string, actionId: string, options?: ActionsGetOptionalParams): Promise<ActionsGetResponse>;
    /**
     * Creates or updates the action of alert rule.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param ruleId Alert rule ID
     * @param actionId Action ID
     * @param action The action
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, workspaceName: string, ruleId: string, actionId: string, action: ActionRequest, options?: ActionsCreateOrUpdateOptionalParams): Promise<ActionsCreateOrUpdateResponse>;
    /**
     * Delete the action of alert rule.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param ruleId Alert rule ID
     * @param actionId Action ID
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, workspaceName: string, ruleId: string, actionId: string, options?: ActionsDeleteOptionalParams): Promise<void>;
    /**
     * ListByAlertRuleNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param ruleId Alert rule ID
     * @param nextLink The nextLink from the previous successful call to the ListByAlertRule method.
     * @param options The options parameters.
     */
    private _listByAlertRuleNext;
}
//# sourceMappingURL=actions.d.ts.map