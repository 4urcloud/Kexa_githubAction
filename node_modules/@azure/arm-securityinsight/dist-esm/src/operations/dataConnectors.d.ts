import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { DataConnectors } from "../operationsInterfaces";
import { SecurityInsights } from "../securityInsights";
import { DataConnectorUnion, DataConnectorsListOptionalParams, DataConnectorsGetOptionalParams, DataConnectorsGetResponse, DataConnectorsCreateOrUpdateOptionalParams, DataConnectorsCreateOrUpdateResponse, DataConnectorsDeleteOptionalParams, DataConnectorConnectBody, DataConnectorsConnectOptionalParams, DataConnectorsDisconnectOptionalParams } from "../models";
/** Class containing DataConnectors operations. */
export declare class DataConnectorsImpl implements DataConnectors {
    private readonly client;
    /**
     * Initialize a new instance of the class DataConnectors class.
     * @param client Reference to the service client
     */
    constructor(client: SecurityInsights);
    /**
     * Gets all data connectors.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, workspaceName: string, options?: DataConnectorsListOptionalParams): PagedAsyncIterableIterator<DataConnectorUnion>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Gets all data connectors.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param options The options parameters.
     */
    private _list;
    /**
     * Gets a data connector.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param dataConnectorId Connector ID
     * @param options The options parameters.
     */
    get(resourceGroupName: string, workspaceName: string, dataConnectorId: string, options?: DataConnectorsGetOptionalParams): Promise<DataConnectorsGetResponse>;
    /**
     * Creates or updates the data connector.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param dataConnectorId Connector ID
     * @param dataConnector The data connector
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, workspaceName: string, dataConnectorId: string, dataConnector: DataConnectorUnion, options?: DataConnectorsCreateOrUpdateOptionalParams): Promise<DataConnectorsCreateOrUpdateResponse>;
    /**
     * Delete the data connector.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param dataConnectorId Connector ID
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, workspaceName: string, dataConnectorId: string, options?: DataConnectorsDeleteOptionalParams): Promise<void>;
    /**
     * Connects a data connector.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param dataConnectorId Connector ID
     * @param connectBody The data connector
     * @param options The options parameters.
     */
    connect(resourceGroupName: string, workspaceName: string, dataConnectorId: string, connectBody: DataConnectorConnectBody, options?: DataConnectorsConnectOptionalParams): Promise<void>;
    /**
     * Disconnect a data connector.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param dataConnectorId Connector ID
     * @param options The options parameters.
     */
    disconnect(resourceGroupName: string, workspaceName: string, dataConnectorId: string, options?: DataConnectorsDisconnectOptionalParams): Promise<void>;
    /**
     * ListNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=dataConnectors.d.ts.map