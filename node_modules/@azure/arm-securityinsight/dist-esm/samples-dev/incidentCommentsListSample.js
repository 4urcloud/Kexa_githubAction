/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __asyncValues, __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { SecurityInsights } from "@azure/arm-securityinsight";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Gets all incident comments.
 *
 * @summary Gets all incident comments.
 * x-ms-original-file: specification/securityinsights/resource-manager/Microsoft.SecurityInsights/preview/2022-09-01-preview/examples/incidents/comments/GetAllIncidentComments.json
 */
function getAllIncidentComments() {
    var e_1, _a;
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["SECURITYINSIGHT_SUBSCRIPTION_ID"] ||
            "d0cfe6b2-9ac0-4464-9919-dccaee2e48c0";
        const resourceGroupName = process.env["SECURITYINSIGHT_RESOURCE_GROUP"] || "myRg";
        const workspaceName = "myWorkspace";
        const incidentId = "73e01a99-5cd7-4139-a149-9f2736ff2ab5";
        const credential = new DefaultAzureCredential();
        const client = new SecurityInsights(credential, subscriptionId);
        const resArray = new Array();
        try {
            for (var _b = __asyncValues(client.incidentComments.list(resourceGroupName, workspaceName, incidentId)), _c; _c = yield _b.next(), !_c.done;) {
                let item = _c.value;
                resArray.push(item);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) yield _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        console.log(resArray);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        getAllIncidentComments();
    });
}
main().catch(console.error);
//# sourceMappingURL=incidentCommentsListSample.js.map