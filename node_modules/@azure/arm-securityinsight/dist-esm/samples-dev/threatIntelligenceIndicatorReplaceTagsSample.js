/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { SecurityInsights } from "@azure/arm-securityinsight";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Replace tags added to a threat intelligence indicator.
 *
 * @summary Replace tags added to a threat intelligence indicator.
 * x-ms-original-file: specification/securityinsights/resource-manager/Microsoft.SecurityInsights/preview/2022-09-01-preview/examples/threatintelligence/ReplaceTagsThreatIntelligence.json
 */
function replaceTagsToAThreatIntelligence() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["SECURITYINSIGHT_SUBSCRIPTION_ID"] ||
            "bd794837-4d29-4647-9105-6339bfdb4e6a";
        const resourceGroupName = process.env["SECURITYINSIGHT_RESOURCE_GROUP"] || "myRg";
        const workspaceName = "myWorkspace";
        const name = "d9cd6f0b-96b9-3984-17cd-a779d1e15a93";
        const threatIntelligenceReplaceTags = {
            etag: '"0000262c-0000-0800-0000-5e9767060000"',
            kind: "indicator",
            threatIntelligenceTags: ["patching tags"]
        };
        const credential = new DefaultAzureCredential();
        const client = new SecurityInsights(credential, subscriptionId);
        const result = yield client.threatIntelligenceIndicator.replaceTags(resourceGroupName, workspaceName, name, threatIntelligenceReplaceTags);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        replaceTagsToAThreatIntelligence();
    });
}
main().catch(console.error);
//# sourceMappingURL=threatIntelligenceIndicatorReplaceTagsSample.js.map