import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import { IoTSpacesClientContext } from "../ioTSpacesClientContext";
/** Class representing a IoTSpaces. */
export declare class IoTSpaces {
    private readonly client;
    /**
     * Create a IoTSpaces.
     * @param {IoTSpacesClientContext} client Reference to the service client.
     */
    constructor(client: IoTSpacesClientContext);
    /**
     * Get the metadata of a IoTSpaces instance.
     * @param resourceGroupName The name of the resource group that contains the IoTSpaces instance.
     * @param resourceName The name of the IoTSpaces instance.
     * @param [options] The optional parameters
     * @returns Promise<Models.IoTSpacesGetResponse>
     */
    get(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase): Promise<Models.IoTSpacesGetResponse>;
    /**
     * @param resourceGroupName The name of the resource group that contains the IoTSpaces instance.
     * @param resourceName The name of the IoTSpaces instance.
     * @param callback The callback
     */
    get(resourceGroupName: string, resourceName: string, callback: msRest.ServiceCallback<Models.IoTSpacesDescription>): void;
    /**
     * @param resourceGroupName The name of the resource group that contains the IoTSpaces instance.
     * @param resourceName The name of the IoTSpaces instance.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, resourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.IoTSpacesDescription>): void;
    /**
     * Create or update the metadata of an IoTSpaces instance. The usual pattern to modify a property
     * is to retrieve the IoTSpaces instance metadata and security metadata, and then combine them with
     * the modified values in a new body to update the IoTSpaces instance.
     * @param resourceGroupName The name of the resource group that contains the IoTSpaces instance.
     * @param resourceName The name of the IoTSpaces instance.
     * @param iotSpaceDescription The IoTSpaces instance metadata and security metadata.
     * @param [options] The optional parameters
     * @returns Promise<Models.IoTSpacesCreateOrUpdateResponse>
     */
    createOrUpdate(resourceGroupName: string, resourceName: string, iotSpaceDescription: Models.IoTSpacesDescription, options?: msRest.RequestOptionsBase): Promise<Models.IoTSpacesCreateOrUpdateResponse>;
    /**
     * Update the metadata of a IoTSpaces instance.
     * @param resourceGroupName The name of the resource group that contains the IoTSpaces instance.
     * @param resourceName The name of the IoTSpaces instance.
     * @param iotSpacePatchDescription The IoTSpaces instance metadata and security metadata.
     * @param [options] The optional parameters
     * @returns Promise<Models.IoTSpacesUpdateResponse>
     */
    update(resourceGroupName: string, resourceName: string, iotSpacePatchDescription: Models.IoTSpacesPatchDescription, options?: msRest.RequestOptionsBase): Promise<Models.IoTSpacesUpdateResponse>;
    /**
     * Delete an IoTSpaces instance.
     * @param resourceGroupName The name of the resource group that contains the IoTSpaces instance.
     * @param resourceName The name of the IoTSpaces instance.
     * @param [options] The optional parameters
     * @returns Promise<Models.IoTSpacesDeleteMethodResponse>
     */
    deleteMethod(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase): Promise<Models.IoTSpacesDeleteMethodResponse>;
    /**
     * Get all the IoTSpaces instances in a subscription.
     * @param [options] The optional parameters
     * @returns Promise<Models.IoTSpacesListResponse>
     */
    list(options?: msRest.RequestOptionsBase): Promise<Models.IoTSpacesListResponse>;
    /**
     * @param callback The callback
     */
    list(callback: msRest.ServiceCallback<Models.IoTSpacesDescriptionListResult>): void;
    /**
     * @param options The optional parameters
     * @param callback The callback
     */
    list(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.IoTSpacesDescriptionListResult>): void;
    /**
     * Get all the IoTSpaces instances in a resource group.
     * @param resourceGroupName The name of the resource group that contains the IoTSpaces instance.
     * @param [options] The optional parameters
     * @returns Promise<Models.IoTSpacesListByResourceGroupResponse>
     */
    listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.IoTSpacesListByResourceGroupResponse>;
    /**
     * @param resourceGroupName The name of the resource group that contains the IoTSpaces instance.
     * @param callback The callback
     */
    listByResourceGroup(resourceGroupName: string, callback: msRest.ServiceCallback<Models.IoTSpacesDescriptionListResult>): void;
    /**
     * @param resourceGroupName The name of the resource group that contains the IoTSpaces instance.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByResourceGroup(resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.IoTSpacesDescriptionListResult>): void;
    /**
     * Check if an IoTSpaces instance name is available.
     * @param operationInputs Set the name parameter in the OperationInputs structure to the name of
     * the IoTSpaces instance to check.
     * @param [options] The optional parameters
     * @returns Promise<Models.IoTSpacesCheckNameAvailabilityResponse>
     */
    checkNameAvailability(operationInputs: Models.OperationInputs, options?: msRest.RequestOptionsBase): Promise<Models.IoTSpacesCheckNameAvailabilityResponse>;
    /**
     * @param operationInputs Set the name parameter in the OperationInputs structure to the name of
     * the IoTSpaces instance to check.
     * @param callback The callback
     */
    checkNameAvailability(operationInputs: Models.OperationInputs, callback: msRest.ServiceCallback<Models.IoTSpacesNameAvailabilityInfo>): void;
    /**
     * @param operationInputs Set the name parameter in the OperationInputs structure to the name of
     * the IoTSpaces instance to check.
     * @param options The optional parameters
     * @param callback The callback
     */
    checkNameAvailability(operationInputs: Models.OperationInputs, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.IoTSpacesNameAvailabilityInfo>): void;
    /**
     * Create or update the metadata of an IoTSpaces instance. The usual pattern to modify a property
     * is to retrieve the IoTSpaces instance metadata and security metadata, and then combine them with
     * the modified values in a new body to update the IoTSpaces instance.
     * @param resourceGroupName The name of the resource group that contains the IoTSpaces instance.
     * @param resourceName The name of the IoTSpaces instance.
     * @param iotSpaceDescription The IoTSpaces instance metadata and security metadata.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginCreateOrUpdate(resourceGroupName: string, resourceName: string, iotSpaceDescription: Models.IoTSpacesDescription, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Update the metadata of a IoTSpaces instance.
     * @param resourceGroupName The name of the resource group that contains the IoTSpaces instance.
     * @param resourceName The name of the IoTSpaces instance.
     * @param iotSpacePatchDescription The IoTSpaces instance metadata and security metadata.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginUpdate(resourceGroupName: string, resourceName: string, iotSpacePatchDescription: Models.IoTSpacesPatchDescription, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Delete an IoTSpaces instance.
     * @param resourceGroupName The name of the resource group that contains the IoTSpaces instance.
     * @param resourceName The name of the IoTSpaces instance.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginDeleteMethod(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Get all the IoTSpaces instances in a subscription.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.IoTSpacesListNextResponse>
     */
    listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.IoTSpacesListNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.IoTSpacesDescriptionListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.IoTSpacesDescriptionListResult>): void;
    /**
     * Get all the IoTSpaces instances in a resource group.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.IoTSpacesListByResourceGroupNextResponse>
     */
    listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.IoTSpacesListByResourceGroupNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByResourceGroupNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.IoTSpacesDescriptionListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByResourceGroupNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.IoTSpacesDescriptionListResult>): void;
}
//# sourceMappingURL=ioTSpaces.d.ts.map