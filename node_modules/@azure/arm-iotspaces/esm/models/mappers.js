/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import { __assign } from "tslib";
import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
export var CloudError = CloudErrorMapper;
export var BaseResource = BaseResourceMapper;
export var StorageContainerProperties = {
    serializedName: "StorageContainerProperties",
    type: {
        name: "Composite",
        className: "StorageContainerProperties",
        modelProperties: {
            connectionString: {
                serializedName: "connectionString",
                type: {
                    name: "String"
                }
            },
            subscriptionId: {
                serializedName: "subscriptionId",
                type: {
                    name: "String"
                }
            },
            resourceGroup: {
                serializedName: "resourceGroup",
                type: {
                    name: "String"
                }
            },
            containerName: {
                serializedName: "containerName",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var IoTSpacesProperties = {
    serializedName: "IoTSpacesProperties",
    type: {
        name: "Composite",
        className: "IoTSpacesProperties",
        modelProperties: {
            provisioningState: {
                readOnly: true,
                serializedName: "provisioningState",
                type: {
                    name: "String"
                }
            },
            managementApiUrl: {
                readOnly: true,
                serializedName: "managementApiUrl",
                type: {
                    name: "String"
                }
            },
            webPortalUrl: {
                readOnly: true,
                serializedName: "webPortalUrl",
                type: {
                    name: "String"
                }
            },
            storageContainer: {
                serializedName: "storageContainer",
                type: {
                    name: "Composite",
                    className: "StorageContainerProperties"
                }
            }
        }
    }
};
export var IoTSpacesSkuInfo = {
    serializedName: "IoTSpacesSkuInfo",
    type: {
        name: "Composite",
        className: "IoTSpacesSkuInfo",
        modelProperties: {
            name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var Resource = {
    serializedName: "Resource",
    type: {
        name: "Composite",
        className: "Resource",
        modelProperties: {
            id: {
                readOnly: true,
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            name: {
                readOnly: true,
                serializedName: "name",
                constraints: {
                    Pattern: /^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$/
                },
                type: {
                    name: "String"
                }
            },
            type: {
                readOnly: true,
                serializedName: "type",
                type: {
                    name: "String"
                }
            },
            location: {
                required: true,
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export var IoTSpacesDescription = {
    serializedName: "IoTSpacesDescription",
    type: {
        name: "Composite",
        className: "IoTSpacesDescription",
        modelProperties: __assign(__assign({}, Resource.type.modelProperties), { properties: {
                serializedName: "properties",
                type: {
                    name: "Composite",
                    className: "IoTSpacesProperties"
                }
            }, sku: {
                required: true,
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "IoTSpacesSkuInfo"
                }
            } })
    }
};
export var IoTSpacesPatchDescription = {
    serializedName: "IoTSpacesPatchDescription",
    type: {
        name: "Composite",
        className: "IoTSpacesPatchDescription",
        modelProperties: {
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            properties: {
                serializedName: "properties",
                type: {
                    name: "Composite",
                    className: "IoTSpacesProperties"
                }
            }
        }
    }
};
export var ErrorDetails = {
    serializedName: "ErrorDetails",
    type: {
        name: "Composite",
        className: "ErrorDetails",
        modelProperties: {
            code: {
                readOnly: true,
                serializedName: "code",
                type: {
                    name: "String"
                }
            },
            message: {
                readOnly: true,
                serializedName: "message",
                type: {
                    name: "String"
                }
            },
            target: {
                readOnly: true,
                serializedName: "target",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var OperationDisplay = {
    serializedName: "OperationDisplay",
    type: {
        name: "Composite",
        className: "OperationDisplay",
        modelProperties: {
            provider: {
                readOnly: true,
                serializedName: "provider",
                type: {
                    name: "String"
                }
            },
            resource: {
                readOnly: true,
                serializedName: "resource",
                type: {
                    name: "String"
                }
            },
            operation: {
                readOnly: true,
                serializedName: "operation",
                type: {
                    name: "String"
                }
            },
            description: {
                readOnly: true,
                serializedName: "description",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var Operation = {
    serializedName: "Operation",
    type: {
        name: "Composite",
        className: "Operation",
        modelProperties: {
            name: {
                readOnly: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            display: {
                serializedName: "display",
                type: {
                    name: "Composite",
                    className: "OperationDisplay"
                }
            }
        }
    }
};
export var OperationInputs = {
    serializedName: "OperationInputs",
    type: {
        name: "Composite",
        className: "OperationInputs",
        modelProperties: {
            name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var IoTSpacesNameAvailabilityInfo = {
    serializedName: "IoTSpacesNameAvailabilityInfo",
    type: {
        name: "Composite",
        className: "IoTSpacesNameAvailabilityInfo",
        modelProperties: {
            nameAvailable: {
                readOnly: true,
                serializedName: "nameAvailable",
                type: {
                    name: "Boolean"
                }
            },
            reason: {
                readOnly: true,
                serializedName: "reason",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Invalid",
                        "AlreadyExists"
                    ]
                }
            },
            message: {
                serializedName: "message",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var IoTSpacesDescriptionListResult = {
    serializedName: "IoTSpacesDescriptionListResult",
    type: {
        name: "Composite",
        className: "IoTSpacesDescriptionListResult",
        modelProperties: {
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            },
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "IoTSpacesDescription"
                        }
                    }
                }
            }
        }
    }
};
export var OperationListResult = {
    serializedName: "OperationListResult",
    type: {
        name: "Composite",
        className: "OperationListResult",
        modelProperties: {
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            },
            value: {
                readOnly: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Operation"
                        }
                    }
                }
            }
        }
    }
};
//# sourceMappingURL=mappers.js.map