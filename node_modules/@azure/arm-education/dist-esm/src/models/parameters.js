/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { LabDetails as LabDetailsMapper, InviteCodeGenerateRequest as InviteCodeGenerateRequestMapper, RedeemRequest as RedeemRequestMapper, StudentDetails as StudentDetailsMapper } from "../models/mappers";
export const accept = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String"
        }
    }
};
export const $host = {
    parameterPath: "$host",
    mapper: {
        serializedName: "$host",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const apiVersion = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2021-12-01-preview",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
export const includeAllocatedBudget = {
    parameterPath: ["options", "includeAllocatedBudget"],
    mapper: {
        serializedName: "includeAllocatedBudget",
        type: {
            name: "Boolean"
        }
    }
};
export const billingAccountName = {
    parameterPath: "billingAccountName",
    mapper: {
        serializedName: "billingAccountName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const billingProfileName = {
    parameterPath: "billingProfileName",
    mapper: {
        serializedName: "billingProfileName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const nextLink = {
    parameterPath: "nextLink",
    mapper: {
        serializedName: "nextLink",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const includeBudget = {
    parameterPath: ["options", "includeBudget"],
    mapper: {
        serializedName: "includeBudget",
        type: {
            name: "Boolean"
        }
    }
};
export const includeDeleted = {
    parameterPath: ["options", "includeDeleted"],
    mapper: {
        serializedName: "includeDeleted",
        type: {
            name: "Boolean"
        }
    }
};
export const invoiceSectionName = {
    parameterPath: "invoiceSectionName",
    mapper: {
        serializedName: "invoiceSectionName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const contentType = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String"
        }
    }
};
export const parameters = {
    parameterPath: "parameters",
    mapper: LabDetailsMapper
};
export const parameters1 = {
    parameterPath: "parameters",
    mapper: InviteCodeGenerateRequestMapper
};
export const onlyUpdateStudentCountParameter = {
    parameterPath: ["options", "onlyUpdateStudentCountParameter"],
    mapper: {
        serializedName: "onlyUpdateStudentCountParameter",
        type: {
            name: "Boolean"
        }
    }
};
export const includeDenied = {
    parameterPath: ["options", "includeDenied"],
    mapper: {
        serializedName: "includeDenied",
        type: {
            name: "Boolean"
        }
    }
};
export const joinRequestName = {
    parameterPath: "joinRequestName",
    mapper: {
        serializedName: "joinRequestName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const parameters2 = {
    parameterPath: "parameters",
    mapper: RedeemRequestMapper
};
export const studentAlias = {
    parameterPath: "studentAlias",
    mapper: {
        serializedName: "studentAlias",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const parameters3 = {
    parameterPath: "parameters",
    mapper: StudentDetailsMapper
};
export const studentLabName = {
    parameterPath: "studentLabName",
    mapper: {
        serializedName: "studentLabName",
        required: true,
        type: {
            name: "String"
        }
    }
};
//# sourceMappingURL=parameters.js.map