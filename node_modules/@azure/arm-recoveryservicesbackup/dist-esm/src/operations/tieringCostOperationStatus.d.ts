import { TieringCostOperationStatus } from "../operationsInterfaces";
import { RecoveryServicesBackupClient } from "../recoveryServicesBackupClient";
import { TieringCostOperationStatusGetOptionalParams, TieringCostOperationStatusGetResponse } from "../models";
/** Class containing TieringCostOperationStatus operations. */
export declare class TieringCostOperationStatusImpl implements TieringCostOperationStatus {
    private readonly client;
    /**
     * Initialize a new instance of the class TieringCostOperationStatus class.
     * @param client Reference to the service client
     */
    constructor(client: RecoveryServicesBackupClient);
    /**
     * Gets the status of async operations of tiering cost
     * @param resourceGroupName The name of the resource group where the recovery services vault is
     *                          present.
     * @param vaultName The name of the recovery services vault.
     * @param operationId
     * @param options The options parameters.
     */
    get(resourceGroupName: string, vaultName: string, operationId: string, options?: TieringCostOperationStatusGetOptionalParams): Promise<TieringCostOperationStatusGetResponse>;
}
//# sourceMappingURL=tieringCostOperationStatus.d.ts.map