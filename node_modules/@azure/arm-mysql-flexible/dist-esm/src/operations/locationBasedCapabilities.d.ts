import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { LocationBasedCapabilities } from "../operationsInterfaces";
import { MySQLManagementFlexibleServerClient } from "../mySQLManagementFlexibleServerClient";
import { CapabilityProperties, LocationBasedCapabilitiesListOptionalParams } from "../models";
/** Class containing LocationBasedCapabilities operations. */
export declare class LocationBasedCapabilitiesImpl implements LocationBasedCapabilities {
    private readonly client;
    /**
     * Initialize a new instance of the class LocationBasedCapabilities class.
     * @param client Reference to the service client
     */
    constructor(client: MySQLManagementFlexibleServerClient);
    /**
     * Get capabilities at specified location in a given subscription.
     * @param locationName The name of the location.
     * @param options The options parameters.
     */
    list(locationName: string, options?: LocationBasedCapabilitiesListOptionalParams): PagedAsyncIterableIterator<CapabilityProperties>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Get capabilities at specified location in a given subscription.
     * @param locationName The name of the location.
     * @param options The options parameters.
     */
    private _list;
    /**
     * ListNext
     * @param locationName The name of the location.
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=locationBasedCapabilities.d.ts.map