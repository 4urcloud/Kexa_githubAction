import * as coreAuth from '@azure/core-auth';
import * as coreClient from '@azure/core-client';
import { PagedAsyncIterableIterator } from '@azure/core-paging';

/** Common properties for all Azure resources. */
export declare interface AzureResourceBase {
    /**
     * String Id used to locate any resource on Azure.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /**
     * Name of this resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * Type of this resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export declare type CreatedByType = string;

/** The resource management error additional info. */
export declare interface ErrorAdditionalInfo {
    /**
     * The additional info type.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /**
     * The additional info.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly info?: Record<string, unknown>;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.) */
export declare interface ErrorResponse {
    /**
     * The error code.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly code?: string;
    /**
     * The error message.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly message?: string;
    /**
     * The error target.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly target?: string;
    /**
     * The error details.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly details?: ErrorResponse[];
    /**
     * The error additional info.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly additionalInfo?: ErrorAdditionalInfo[];
}

/**
 * Given a result page from a pageable operation, returns a
 * continuation token that can be used to begin paging from
 * that point later.
 * @param page A result object from calling .byPage() on a paged operation.
 * @returns The continuation token that can be passed into byPage().
 */
export declare function getContinuationToken(page: unknown): string | undefined;

/** Known values of {@link CreatedByType} that the service accepts. */
export declare enum KnownCreatedByType {
    /** User */
    User = "User",
    /** Application */
    Application = "Application",
    /** ManagedIdentity */
    ManagedIdentity = "ManagedIdentity",
    /** Key */
    Key = "Key"
}

/** Known values of {@link TemplateSpecExpandKind} that the service accepts. */
export declare enum KnownTemplateSpecExpandKind {
    /** Includes version information with the Template Spec. */
    Versions = "versions"
}

/** Represents a Template Spec artifact containing an embedded Azure Resource Manager template for use as a linked template. */
export declare interface LinkedTemplateArtifact {
    /** A filesystem safe relative path of the artifact. */
    path: string;
    /** The Azure Resource Manager template. */
    template: Record<string, unknown>;
}

/** Metadata pertaining to creation and last modification of the resource. */
export declare interface SystemData {
    /** The identity that created the resource. */
    createdBy?: string;
    /** The type of identity that created the resource. */
    createdByType?: CreatedByType;
    /** The timestamp of resource creation (UTC). */
    createdAt?: Date;
    /** The identity that last modified the resource. */
    lastModifiedBy?: string;
    /** The type of identity that last modified the resource. */
    lastModifiedByType?: CreatedByType;
    /** The timestamp of resource last modification (UTC) */
    lastModifiedAt?: Date;
}

/** Template Spec object. */
export declare interface TemplateSpec extends AzureResourceBase {
    /** The location of the Template Spec. It cannot be changed after Template Spec creation. It must be one of the supported Azure locations. */
    location: string;
    /** Resource tags. */
    tags?: {
        [propertyName: string]: string;
    };
    /** Template Spec description. */
    description?: string;
    /** Template Spec display name. */
    displayName?: string;
    /** The Template Spec metadata. Metadata is an open-ended object and is typically a collection of key-value pairs. */
    metadata?: Record<string, unknown>;
    /**
     * High-level information about the versions within this Template Spec. The keys are the version names. Only populated if the $expand query parameter is set to 'versions'.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly versions?: {
        [propertyName: string]: TemplateSpecVersionInfo;
    };
}

/**
 * Defines values for TemplateSpecExpandKind. \
 * {@link KnownTemplateSpecExpandKind} can be used interchangeably with TemplateSpecExpandKind,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **versions**: Includes version information with the Template Spec.
 */
export declare type TemplateSpecExpandKind = string;

/** Interface representing a TemplateSpecs. */
export declare interface TemplateSpecs {
    /**
     * Lists all the Template Specs within the specified subscriptions.
     * @param options The options parameters.
     */
    listBySubscription(options?: TemplateSpecsListBySubscriptionOptionalParams): PagedAsyncIterableIterator<TemplateSpec>;
    /**
     * Lists all the Template Specs within the specified resource group.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: TemplateSpecsListByResourceGroupOptionalParams): PagedAsyncIterableIterator<TemplateSpec>;
    /**
     * Creates or updates a Template Spec.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param templateSpecName Name of the Template Spec.
     * @param templateSpec Template Spec supplied to the operation.
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, templateSpecName: string, templateSpec: TemplateSpec, options?: TemplateSpecsCreateOrUpdateOptionalParams): Promise<TemplateSpecsCreateOrUpdateResponse>;
    /**
     * Updates Template Spec tags with specified values.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param templateSpecName Name of the Template Spec.
     * @param options The options parameters.
     */
    update(resourceGroupName: string, templateSpecName: string, options?: TemplateSpecsUpdateOptionalParams): Promise<TemplateSpecsUpdateResponse>;
    /**
     * Gets a Template Spec with a given name.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param templateSpecName Name of the Template Spec.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, templateSpecName: string, options?: TemplateSpecsGetOptionalParams): Promise<TemplateSpecsGetResponse>;
    /**
     * Deletes a Template Spec by name. When operation completes, status code 200 returned without content.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param templateSpecName Name of the Template Spec.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, templateSpecName: string, options?: TemplateSpecsDeleteOptionalParams): Promise<void>;
}

export declare class TemplateSpecsClient extends coreClient.ServiceClient {
    $host: string;
    subscriptionId: string;
    apiVersion: string;
    /**
     * Initializes a new instance of the TemplateSpecsClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId Subscription Id which forms part of the URI for every service call.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: TemplateSpecsClientOptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    templateSpecs: TemplateSpecs;
    templateSpecVersions: TemplateSpecVersions;
}

/** Optional parameters. */
export declare interface TemplateSpecsClientOptionalParams extends coreClient.ServiceClientOptions {
    /** server parameter */
    $host?: string;
    /** Api Version */
    apiVersion?: string;
    /** Overrides client endpoint. */
    endpoint?: string;
}

/** Optional parameters. */
export declare interface TemplateSpecsCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the createOrUpdate operation. */
export declare type TemplateSpecsCreateOrUpdateResponse = TemplateSpec;

/** Optional parameters. */
export declare interface TemplateSpecsDeleteOptionalParams extends coreClient.OperationOptions {
}

/** Template Specs error response. */
export declare interface TemplateSpecsError {
    /** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.) */
    error?: ErrorResponse;
}

/** Optional parameters. */
export declare interface TemplateSpecsGetOptionalParams extends coreClient.OperationOptions {
    /** Allows for expansion of additional Template Spec details in the response. Optional. */
    expand?: TemplateSpecExpandKind;
}

/** Contains response data for the get operation. */
export declare type TemplateSpecsGetResponse = TemplateSpec;

/** Optional parameters. */
export declare interface TemplateSpecsListByResourceGroupNextOptionalParams extends coreClient.OperationOptions {
    /** Allows for expansion of additional Template Spec details in the response. Optional. */
    expand?: TemplateSpecExpandKind;
}

/** Contains response data for the listByResourceGroupNext operation. */
export declare type TemplateSpecsListByResourceGroupNextResponse = TemplateSpecsListResult;

/** Optional parameters. */
export declare interface TemplateSpecsListByResourceGroupOptionalParams extends coreClient.OperationOptions {
    /** Allows for expansion of additional Template Spec details in the response. Optional. */
    expand?: TemplateSpecExpandKind;
}

/** Contains response data for the listByResourceGroup operation. */
export declare type TemplateSpecsListByResourceGroupResponse = TemplateSpecsListResult;

/** Optional parameters. */
export declare interface TemplateSpecsListBySubscriptionNextOptionalParams extends coreClient.OperationOptions {
    /** Allows for expansion of additional Template Spec details in the response. Optional. */
    expand?: TemplateSpecExpandKind;
}

/** Contains response data for the listBySubscriptionNext operation. */
export declare type TemplateSpecsListBySubscriptionNextResponse = TemplateSpecsListResult;

/** Optional parameters. */
export declare interface TemplateSpecsListBySubscriptionOptionalParams extends coreClient.OperationOptions {
    /** Allows for expansion of additional Template Spec details in the response. Optional. */
    expand?: TemplateSpecExpandKind;
}

/** Contains response data for the listBySubscription operation. */
export declare type TemplateSpecsListBySubscriptionResponse = TemplateSpecsListResult;

/** List of Template Specs. */
export declare interface TemplateSpecsListResult {
    /** An array of Template Specs. */
    value?: TemplateSpec[];
    /**
     * The URL to use for getting the next set of results.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Optional parameters. */
export declare interface TemplateSpecsUpdateOptionalParams extends coreClient.OperationOptions {
    /** Template Spec resource with the tags to be updated. */
    templateSpec?: TemplateSpecUpdateModel;
}

/** Contains response data for the update operation. */
export declare type TemplateSpecsUpdateResponse = TemplateSpec;

/** Template Spec properties to be updated (only tags are currently supported). */
export declare interface TemplateSpecUpdateModel extends AzureResourceBase {
    /** Resource tags. */
    tags?: {
        [propertyName: string]: string;
    };
}

/** Template Spec Version object. */
export declare interface TemplateSpecVersion extends AzureResourceBase {
    /** The location of the Template Spec Version. It must match the location of the parent Template Spec. */
    location: string;
    /** Resource tags. */
    tags?: {
        [propertyName: string]: string;
    };
    /** Template Spec version description. */
    description?: string;
    /** An array of linked template artifacts. */
    linkedTemplates?: LinkedTemplateArtifact[];
    /** The version metadata. Metadata is an open-ended object and is typically a collection of key-value pairs. */
    metadata?: Record<string, unknown>;
    /** The main Azure Resource Manager template content. */
    mainTemplate?: Record<string, unknown>;
    /** The Azure Resource Manager template UI definition content. */
    uiFormDefinition?: Record<string, unknown>;
}

/** High-level information about a Template Spec version. */
export declare interface TemplateSpecVersionInfo {
    /**
     * Template Spec version description.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly description?: string;
    /**
     * The timestamp of when the version was created.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly timeCreated?: Date;
    /**
     * The timestamp of when the version was last modified.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly timeModified?: Date;
}

/** Interface representing a TemplateSpecVersions. */
export declare interface TemplateSpecVersions {
    /**
     * Lists all the Template Spec versions in the specified Template Spec.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param templateSpecName Name of the Template Spec.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, templateSpecName: string, options?: TemplateSpecVersionsListOptionalParams): PagedAsyncIterableIterator<TemplateSpecVersion>;
    /**
     * Creates or updates a Template Spec version.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param templateSpecName Name of the Template Spec.
     * @param templateSpecVersion The version of the Template Spec.
     * @param templateSpecVersionModel Template Spec Version supplied to the operation.
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, templateSpecName: string, templateSpecVersion: string, templateSpecVersionModel: TemplateSpecVersion, options?: TemplateSpecVersionsCreateOrUpdateOptionalParams): Promise<TemplateSpecVersionsCreateOrUpdateResponse>;
    /**
     * Updates Template Spec Version tags with specified values.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param templateSpecName Name of the Template Spec.
     * @param templateSpecVersion The version of the Template Spec.
     * @param options The options parameters.
     */
    update(resourceGroupName: string, templateSpecName: string, templateSpecVersion: string, options?: TemplateSpecVersionsUpdateOptionalParams): Promise<TemplateSpecVersionsUpdateResponse>;
    /**
     * Gets a Template Spec version from a specific Template Spec.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param templateSpecName Name of the Template Spec.
     * @param templateSpecVersion The version of the Template Spec.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, templateSpecName: string, templateSpecVersion: string, options?: TemplateSpecVersionsGetOptionalParams): Promise<TemplateSpecVersionsGetResponse>;
    /**
     * Deletes a specific version from a Template Spec. When operation completes, status code 200 returned
     * without content.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param templateSpecName Name of the Template Spec.
     * @param templateSpecVersion The version of the Template Spec.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, templateSpecName: string, templateSpecVersion: string, options?: TemplateSpecVersionsDeleteOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface TemplateSpecVersionsCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the createOrUpdate operation. */
export declare type TemplateSpecVersionsCreateOrUpdateResponse = TemplateSpecVersion;

/** Optional parameters. */
export declare interface TemplateSpecVersionsDeleteOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface TemplateSpecVersionsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type TemplateSpecVersionsGetResponse = TemplateSpecVersion;

/** Optional parameters. */
export declare interface TemplateSpecVersionsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type TemplateSpecVersionsListNextResponse = TemplateSpecVersionsListResult;

/** Optional parameters. */
export declare interface TemplateSpecVersionsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type TemplateSpecVersionsListResponse = TemplateSpecVersionsListResult;

/** List of Template Specs versions */
export declare interface TemplateSpecVersionsListResult {
    /** An array of Template Spec versions. */
    value?: TemplateSpecVersion[];
    /**
     * The URL to use for getting the next set of results.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Optional parameters. */
export declare interface TemplateSpecVersionsUpdateOptionalParams extends coreClient.OperationOptions {
    /** Template Spec Version resource with the tags to be updated. */
    templateSpecVersionUpdateModel?: TemplateSpecVersionUpdateModel;
}

/** Contains response data for the update operation. */
export declare type TemplateSpecVersionsUpdateResponse = TemplateSpecVersion;

/** Template Spec Version properties to be updated (only tags are currently supported). */
export declare interface TemplateSpecVersionUpdateModel extends AzureResourceBase {
    /** Resource tags. */
    tags?: {
        [propertyName: string]: string;
    };
}

export { }
