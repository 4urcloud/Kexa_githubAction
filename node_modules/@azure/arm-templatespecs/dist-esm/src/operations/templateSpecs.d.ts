import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { TemplateSpecs } from "../operationsInterfaces";
import { TemplateSpecsClient } from "../templateSpecsClient";
import { TemplateSpec, TemplateSpecsListBySubscriptionOptionalParams, TemplateSpecsListByResourceGroupOptionalParams, TemplateSpecsCreateOrUpdateOptionalParams, TemplateSpecsCreateOrUpdateResponse, TemplateSpecsUpdateOptionalParams, TemplateSpecsUpdateResponse, TemplateSpecsGetOptionalParams, TemplateSpecsGetResponse, TemplateSpecsDeleteOptionalParams } from "../models";
/** Class containing TemplateSpecs operations. */
export declare class TemplateSpecsImpl implements TemplateSpecs {
    private readonly client;
    /**
     * Initialize a new instance of the class TemplateSpecs class.
     * @param client Reference to the service client
     */
    constructor(client: TemplateSpecsClient);
    /**
     * Lists all the Template Specs within the specified subscriptions.
     * @param options The options parameters.
     */
    listBySubscription(options?: TemplateSpecsListBySubscriptionOptionalParams): PagedAsyncIterableIterator<TemplateSpec>;
    private listBySubscriptionPagingPage;
    private listBySubscriptionPagingAll;
    /**
     * Lists all the Template Specs within the specified resource group.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: TemplateSpecsListByResourceGroupOptionalParams): PagedAsyncIterableIterator<TemplateSpec>;
    private listByResourceGroupPagingPage;
    private listByResourceGroupPagingAll;
    /**
     * Creates or updates a Template Spec.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param templateSpecName Name of the Template Spec.
     * @param templateSpec Template Spec supplied to the operation.
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, templateSpecName: string, templateSpec: TemplateSpec, options?: TemplateSpecsCreateOrUpdateOptionalParams): Promise<TemplateSpecsCreateOrUpdateResponse>;
    /**
     * Updates Template Spec tags with specified values.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param templateSpecName Name of the Template Spec.
     * @param options The options parameters.
     */
    update(resourceGroupName: string, templateSpecName: string, options?: TemplateSpecsUpdateOptionalParams): Promise<TemplateSpecsUpdateResponse>;
    /**
     * Gets a Template Spec with a given name.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param templateSpecName Name of the Template Spec.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, templateSpecName: string, options?: TemplateSpecsGetOptionalParams): Promise<TemplateSpecsGetResponse>;
    /**
     * Deletes a Template Spec by name. When operation completes, status code 200 returned without content.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param templateSpecName Name of the Template Spec.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, templateSpecName: string, options?: TemplateSpecsDeleteOptionalParams): Promise<void>;
    /**
     * Lists all the Template Specs within the specified subscriptions.
     * @param options The options parameters.
     */
    private _listBySubscription;
    /**
     * Lists all the Template Specs within the specified resource group.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    private _listByResourceGroup;
    /**
     * ListBySubscriptionNext
     * @param nextLink The nextLink from the previous successful call to the ListBySubscription method.
     * @param options The options parameters.
     */
    private _listBySubscriptionNext;
    /**
     * ListByResourceGroupNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.
     * @param options The options parameters.
     */
    private _listByResourceGroupNext;
}
//# sourceMappingURL=templateSpecs.d.ts.map