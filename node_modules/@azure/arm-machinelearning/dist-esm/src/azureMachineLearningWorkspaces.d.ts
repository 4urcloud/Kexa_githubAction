import * as coreClient from "@azure/core-client";
import * as coreAuth from "@azure/core-auth";
import { Operations, Workspaces, Usages, VirtualMachineSizes, Quotas, ComputeOperations, PrivateEndpointConnections, PrivateLinkResources, WorkspaceConnections, BatchEndpoints, BatchDeployments, CodeContainers, CodeVersions, ComponentContainers, ComponentVersions, DataContainers, DataVersions, Datastores, EnvironmentContainers, EnvironmentVersions, Jobs, ModelContainers, ModelVersions, OnlineEndpoints, OnlineDeployments, Schedules, WorkspaceFeatures } from "./operationsInterfaces";
import { AzureMachineLearningWorkspacesOptionalParams } from "./models";
export declare class AzureMachineLearningWorkspaces extends coreClient.ServiceClient {
    $host: string;
    apiVersion: string;
    subscriptionId: string;
    /**
     * Initializes a new instance of the AzureMachineLearningWorkspaces class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId The ID of the target subscription.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: AzureMachineLearningWorkspacesOptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    operations: Operations;
    workspaces: Workspaces;
    usages: Usages;
    virtualMachineSizes: VirtualMachineSizes;
    quotas: Quotas;
    computeOperations: ComputeOperations;
    privateEndpointConnections: PrivateEndpointConnections;
    privateLinkResources: PrivateLinkResources;
    workspaceConnections: WorkspaceConnections;
    batchEndpoints: BatchEndpoints;
    batchDeployments: BatchDeployments;
    codeContainers: CodeContainers;
    codeVersions: CodeVersions;
    componentContainers: ComponentContainers;
    componentVersions: ComponentVersions;
    dataContainers: DataContainers;
    dataVersions: DataVersions;
    datastores: Datastores;
    environmentContainers: EnvironmentContainers;
    environmentVersions: EnvironmentVersions;
    jobs: Jobs;
    modelContainers: ModelContainers;
    modelVersions: ModelVersions;
    onlineEndpoints: OnlineEndpoints;
    onlineDeployments: OnlineDeployments;
    schedules: Schedules;
    workspaceFeatures: WorkspaceFeatures;
}
//# sourceMappingURL=azureMachineLearningWorkspaces.d.ts.map