import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Workspaces } from "../operationsInterfaces";
import { AzureMachineLearningWorkspaces } from "../azureMachineLearningWorkspaces";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { Workspace, WorkspacesListByResourceGroupOptionalParams, WorkspacesListBySubscriptionOptionalParams, WorkspacesGetOptionalParams, WorkspacesGetResponse, WorkspacesCreateOrUpdateOptionalParams, WorkspacesCreateOrUpdateResponse, WorkspacesDeleteOptionalParams, WorkspaceUpdateParameters, WorkspacesUpdateOptionalParams, WorkspacesUpdateResponse, WorkspacesDiagnoseOptionalParams, WorkspacesDiagnoseResponse, WorkspacesListKeysOptionalParams, WorkspacesListKeysResponse, WorkspacesResyncKeysOptionalParams, WorkspacesListNotebookAccessTokenOptionalParams, WorkspacesListNotebookAccessTokenResponse, WorkspacesPrepareNotebookOptionalParams, WorkspacesPrepareNotebookResponse, WorkspacesListStorageAccountKeysOptionalParams, WorkspacesListStorageAccountKeysResponse, WorkspacesListNotebookKeysOptionalParams, WorkspacesListNotebookKeysResponse, WorkspacesListOutboundNetworkDependenciesEndpointsOptionalParams, WorkspacesListOutboundNetworkDependenciesEndpointsResponse } from "../models";
/** Class containing Workspaces operations. */
export declare class WorkspacesImpl implements Workspaces {
    private readonly client;
    /**
     * Initialize a new instance of the class Workspaces class.
     * @param client Reference to the service client
     */
    constructor(client: AzureMachineLearningWorkspaces);
    /**
     * Lists all the available machine learning workspaces under the specified resource group.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: WorkspacesListByResourceGroupOptionalParams): PagedAsyncIterableIterator<Workspace>;
    private listByResourceGroupPagingPage;
    private listByResourceGroupPagingAll;
    /**
     * Lists all the available machine learning workspaces under the specified subscription.
     * @param options The options parameters.
     */
    listBySubscription(options?: WorkspacesListBySubscriptionOptionalParams): PagedAsyncIterableIterator<Workspace>;
    private listBySubscriptionPagingPage;
    private listBySubscriptionPagingAll;
    /**
     * Gets the properties of the specified machine learning workspace.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, workspaceName: string, options?: WorkspacesGetOptionalParams): Promise<WorkspacesGetResponse>;
    /**
     * Creates or updates a workspace with the specified parameters.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param parameters The parameters for creating or updating a machine learning workspace.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, workspaceName: string, parameters: Workspace, options?: WorkspacesCreateOrUpdateOptionalParams): Promise<PollerLike<PollOperationState<WorkspacesCreateOrUpdateResponse>, WorkspacesCreateOrUpdateResponse>>;
    /**
     * Creates or updates a workspace with the specified parameters.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param parameters The parameters for creating or updating a machine learning workspace.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, workspaceName: string, parameters: Workspace, options?: WorkspacesCreateOrUpdateOptionalParams): Promise<WorkspacesCreateOrUpdateResponse>;
    /**
     * Deletes a machine learning workspace.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, workspaceName: string, options?: WorkspacesDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Deletes a machine learning workspace.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, workspaceName: string, options?: WorkspacesDeleteOptionalParams): Promise<void>;
    /**
     * Updates a machine learning workspace with the specified parameters.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param parameters The parameters for updating a machine learning workspace.
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, workspaceName: string, parameters: WorkspaceUpdateParameters, options?: WorkspacesUpdateOptionalParams): Promise<PollerLike<PollOperationState<WorkspacesUpdateResponse>, WorkspacesUpdateResponse>>;
    /**
     * Updates a machine learning workspace with the specified parameters.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param parameters The parameters for updating a machine learning workspace.
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, workspaceName: string, parameters: WorkspaceUpdateParameters, options?: WorkspacesUpdateOptionalParams): Promise<WorkspacesUpdateResponse>;
    /**
     * Lists all the available machine learning workspaces under the specified resource group.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    private _listByResourceGroup;
    /**
     * Diagnose workspace setup issue.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param options The options parameters.
     */
    beginDiagnose(resourceGroupName: string, workspaceName: string, options?: WorkspacesDiagnoseOptionalParams): Promise<PollerLike<PollOperationState<WorkspacesDiagnoseResponse>, WorkspacesDiagnoseResponse>>;
    /**
     * Diagnose workspace setup issue.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param options The options parameters.
     */
    beginDiagnoseAndWait(resourceGroupName: string, workspaceName: string, options?: WorkspacesDiagnoseOptionalParams): Promise<WorkspacesDiagnoseResponse>;
    /**
     * Lists all the keys associated with this workspace. This includes keys for the storage account, app
     * insights and password for container registry
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param options The options parameters.
     */
    listKeys(resourceGroupName: string, workspaceName: string, options?: WorkspacesListKeysOptionalParams): Promise<WorkspacesListKeysResponse>;
    /**
     * Resync all the keys associated with this workspace. This includes keys for the storage account, app
     * insights and password for container registry
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param options The options parameters.
     */
    beginResyncKeys(resourceGroupName: string, workspaceName: string, options?: WorkspacesResyncKeysOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Resync all the keys associated with this workspace. This includes keys for the storage account, app
     * insights and password for container registry
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param options The options parameters.
     */
    beginResyncKeysAndWait(resourceGroupName: string, workspaceName: string, options?: WorkspacesResyncKeysOptionalParams): Promise<void>;
    /**
     * Lists all the available machine learning workspaces under the specified subscription.
     * @param options The options parameters.
     */
    private _listBySubscription;
    /**
     * return notebook access token and refresh token
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param options The options parameters.
     */
    listNotebookAccessToken(resourceGroupName: string, workspaceName: string, options?: WorkspacesListNotebookAccessTokenOptionalParams): Promise<WorkspacesListNotebookAccessTokenResponse>;
    /**
     * Prepare a notebook.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param options The options parameters.
     */
    beginPrepareNotebook(resourceGroupName: string, workspaceName: string, options?: WorkspacesPrepareNotebookOptionalParams): Promise<PollerLike<PollOperationState<WorkspacesPrepareNotebookResponse>, WorkspacesPrepareNotebookResponse>>;
    /**
     * Prepare a notebook.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param options The options parameters.
     */
    beginPrepareNotebookAndWait(resourceGroupName: string, workspaceName: string, options?: WorkspacesPrepareNotebookOptionalParams): Promise<WorkspacesPrepareNotebookResponse>;
    /**
     * List storage account keys of a workspace.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param options The options parameters.
     */
    listStorageAccountKeys(resourceGroupName: string, workspaceName: string, options?: WorkspacesListStorageAccountKeysOptionalParams): Promise<WorkspacesListStorageAccountKeysResponse>;
    /**
     * List keys of a notebook.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param options The options parameters.
     */
    listNotebookKeys(resourceGroupName: string, workspaceName: string, options?: WorkspacesListNotebookKeysOptionalParams): Promise<WorkspacesListNotebookKeysResponse>;
    /**
     * Called by Client (Portal, CLI, etc) to get a list of all external outbound dependencies (FQDNs)
     * programmatically.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param options The options parameters.
     */
    listOutboundNetworkDependenciesEndpoints(resourceGroupName: string, workspaceName: string, options?: WorkspacesListOutboundNetworkDependenciesEndpointsOptionalParams): Promise<WorkspacesListOutboundNetworkDependenciesEndpointsResponse>;
    /**
     * ListByResourceGroupNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.
     * @param options The options parameters.
     */
    private _listByResourceGroupNext;
    /**
     * ListBySubscriptionNext
     * @param nextLink The nextLink from the previous successful call to the ListBySubscription method.
     * @param options The options parameters.
     */
    private _listBySubscriptionNext;
}
//# sourceMappingURL=workspaces.d.ts.map