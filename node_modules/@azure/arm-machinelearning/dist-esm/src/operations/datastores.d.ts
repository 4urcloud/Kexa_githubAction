import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Datastores } from "../operationsInterfaces";
import { AzureMachineLearningWorkspaces } from "../azureMachineLearningWorkspaces";
import { Datastore, DatastoresListOptionalParams, DatastoresDeleteOptionalParams, DatastoresGetOptionalParams, DatastoresGetResponse, DatastoresCreateOrUpdateOptionalParams, DatastoresCreateOrUpdateResponse, DatastoresListSecretsOptionalParams, DatastoresListSecretsResponse } from "../models";
/** Class containing Datastores operations. */
export declare class DatastoresImpl implements Datastores {
    private readonly client;
    /**
     * Initialize a new instance of the class Datastores class.
     * @param client Reference to the service client
     */
    constructor(client: AzureMachineLearningWorkspaces);
    /**
     * List datastores.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, workspaceName: string, options?: DatastoresListOptionalParams): PagedAsyncIterableIterator<Datastore>;
    private listPagingPage;
    private listPagingAll;
    /**
     * List datastores.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param options The options parameters.
     */
    private _list;
    /**
     * Delete datastore.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param name Datastore name.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, workspaceName: string, name: string, options?: DatastoresDeleteOptionalParams): Promise<void>;
    /**
     * Get datastore.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param name Datastore name.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, workspaceName: string, name: string, options?: DatastoresGetOptionalParams): Promise<DatastoresGetResponse>;
    /**
     * Create or update datastore.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param name Datastore name.
     * @param body Datastore entity to create or update.
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, workspaceName: string, name: string, body: Datastore, options?: DatastoresCreateOrUpdateOptionalParams): Promise<DatastoresCreateOrUpdateResponse>;
    /**
     * Get datastore secrets.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param name Datastore name.
     * @param options The options parameters.
     */
    listSecrets(resourceGroupName: string, workspaceName: string, name: string, options?: DatastoresListSecretsOptionalParams): Promise<DatastoresListSecretsResponse>;
    /**
     * ListNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=datastores.d.ts.map