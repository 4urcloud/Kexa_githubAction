/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { AzureMachineLearningWorkspaces } from "@azure/arm-machinelearning";
import { DefaultAzureCredential } from "@azure/identity";
/**
 * This sample demonstrates how to Create or update schedule.
 *
 * @summary Create or update schedule.
 * x-ms-original-file: specification/machinelearningservices/resource-manager/Microsoft.MachineLearningServices/stable/2022-10-01/examples/Schedule/createOrUpdate.json
 */
function createOrUpdateSchedule() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "00000000-1111-2222-3333-444444444444";
        const resourceGroupName = "test-rg";
        const workspaceName = "my-aml-workspace";
        const name = "string";
        const body = {
            properties: {
                description: "string",
                action: {
                    actionType: "InvokeBatchEndpoint",
                    endpointInvocationDefinition: {
                        "9965593e-526f-4b89-bb36-761138cf2794": null
                    }
                },
                displayName: "string",
                isEnabled: false,
                properties: { string: "string" },
                tags: { string: "string" },
                trigger: {
                    endTime: "string",
                    expression: "string",
                    startTime: "string",
                    timeZone: "string",
                    triggerType: "Cron"
                }
            }
        };
        const credential = new DefaultAzureCredential();
        const client = new AzureMachineLearningWorkspaces(credential, subscriptionId);
        const result = yield client.schedules.beginCreateOrUpdateAndWait(resourceGroupName, workspaceName, name, body);
        console.log(result);
    });
}
createOrUpdateSchedule().catch(console.error);
//# sourceMappingURL=schedulesCreateOrUpdateSample.js.map