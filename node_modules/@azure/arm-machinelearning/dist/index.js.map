{"version":3,"file":"index.js","sources":["../src/pagingHelper.ts","../src/models/index.ts","../src/models/mappers.ts","../src/models/parameters.ts","../src/operations/operations.ts","../src/lroImpl.ts","../src/operations/workspaces.ts","../src/operations/usages.ts","../src/operations/virtualMachineSizes.ts","../src/operations/quotas.ts","../src/operations/computeOperations.ts","../src/operations/privateEndpointConnections.ts","../src/operations/privateLinkResources.ts","../src/operations/workspaceConnections.ts","../src/operations/batchEndpoints.ts","../src/operations/batchDeployments.ts","../src/operations/codeContainers.ts","../src/operations/codeVersions.ts","../src/operations/componentContainers.ts","../src/operations/componentVersions.ts","../src/operations/dataContainers.ts","../src/operations/dataVersions.ts","../src/operations/datastores.ts","../src/operations/environmentContainers.ts","../src/operations/environmentVersions.ts","../src/operations/jobs.ts","../src/operations/modelContainers.ts","../src/operations/modelVersions.ts","../src/operations/onlineEndpoints.ts","../src/operations/onlineDeployments.ts","../src/operations/schedules.ts","../src/operations/workspaceFeatures.ts","../src/azureMachineLearningWorkspaces.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport interface PageInfo {\n  continuationToken?: string;\n}\n\nconst pageMap = new WeakMap<object, PageInfo>();\n\n/**\n * Given a result page from a pageable operation, returns a\n * continuation token that can be used to begin paging from\n * that point later.\n * @param page A result object from calling .byPage() on a paged operation.\n * @returns The continuation token that can be passed into byPage().\n */\nexport function getContinuationToken(page: unknown): string | undefined {\n  if (typeof page !== \"object\" || page === null) {\n    return undefined;\n  }\n  return pageMap.get(page)?.continuationToken;\n}\n\nexport function setContinuationToken(\n  page: unknown,\n  continuationToken: string | undefined\n): void {\n  if (typeof page !== \"object\" || page === null || !continuationToken) {\n    return;\n  }\n  const pageInfo = pageMap.get(page) ?? {};\n  pageInfo.continuationToken = continuationToken;\n  pageMap.set(page, pageInfo);\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport type ComputeUnion =\n  | Compute\n  | Aks\n  | Kubernetes\n  | AmlCompute\n  | ComputeInstance\n  | VirtualMachine\n  | HDInsight\n  | DataFactory\n  | Databricks\n  | DataLakeAnalytics\n  | SynapseSpark;\nexport type ComputeSecretsUnion =\n  | ComputeSecrets\n  | AksComputeSecrets\n  | VirtualMachineSecrets\n  | DatabricksComputeSecrets;\nexport type WorkspaceConnectionPropertiesV2Union =\n  | WorkspaceConnectionPropertiesV2\n  | PATAuthTypeWorkspaceConnectionProperties\n  | SASAuthTypeWorkspaceConnectionProperties\n  | UsernamePasswordAuthTypeWorkspaceConnectionProperties\n  | NoneAuthTypeWorkspaceConnectionProperties\n  | ManagedIdentityAuthTypeWorkspaceConnectionProperties;\nexport type AssetReferenceBaseUnion =\n  | AssetReferenceBase\n  | DataPathAssetReference\n  | IdAssetReference\n  | OutputPathAssetReference;\nexport type DatastoreCredentialsUnion =\n  | DatastoreCredentials\n  | AccountKeyDatastoreCredentials\n  | CertificateDatastoreCredentials\n  | NoneDatastoreCredentials\n  | SasDatastoreCredentials\n  | ServicePrincipalDatastoreCredentials;\nexport type DatastoreSecretsUnion =\n  | DatastoreSecrets\n  | AccountKeyDatastoreSecrets\n  | CertificateDatastoreSecrets\n  | SasDatastoreSecrets\n  | ServicePrincipalDatastoreSecrets;\nexport type IdentityConfigurationUnion =\n  | IdentityConfiguration\n  | AmlToken\n  | ManagedIdentity\n  | UserIdentity;\nexport type OnlineScaleSettingsUnion =\n  | OnlineScaleSettings\n  | DefaultScaleSettings\n  | TargetUtilizationScaleSettings;\nexport type ScheduleActionBaseUnion =\n  | ScheduleActionBase\n  | EndpointScheduleAction\n  | JobScheduleAction;\nexport type TriggerBaseUnion = TriggerBase | RecurrenceTrigger | CronTrigger;\nexport type ForecastHorizonUnion =\n  | ForecastHorizon\n  | AutoForecastHorizon\n  | CustomForecastHorizon;\nexport type JobOutputUnion =\n  | JobOutput\n  | CustomModelJobOutput\n  | MLFlowModelJobOutput\n  | MLTableJobOutput\n  | TritonModelJobOutput\n  | UriFileJobOutput\n  | UriFolderJobOutput;\nexport type AutoMLVerticalUnion =\n  | AutoMLVertical\n  | Classification\n  | Forecasting\n  | ImageClassification\n  | ImageClassificationMultilabel\n  | ImageInstanceSegmentation\n  | ImageObjectDetection\n  | Regression\n  | TextClassification\n  | TextClassificationMultilabel\n  | TextNer;\nexport type JobInputUnion =\n  | JobInput\n  | MLTableJobInput\n  | CustomModelJobInput\n  | MLFlowModelJobInput\n  | LiteralJobInput\n  | TritonModelJobInput\n  | UriFileJobInput\n  | UriFolderJobInput;\nexport type NCrossValidationsUnion =\n  | NCrossValidations\n  | AutoNCrossValidations\n  | CustomNCrossValidations;\nexport type SeasonalityUnion =\n  | Seasonality\n  | AutoSeasonality\n  | CustomSeasonality;\nexport type TargetLagsUnion = TargetLags | AutoTargetLags | CustomTargetLags;\nexport type TargetRollingWindowSizeUnion =\n  | TargetRollingWindowSize\n  | AutoTargetRollingWindowSize\n  | CustomTargetRollingWindowSize;\nexport type EarlyTerminationPolicyUnion =\n  | EarlyTerminationPolicy\n  | BanditPolicy\n  | MedianStoppingPolicy\n  | TruncationSelectionPolicy;\nexport type SamplingAlgorithmUnion =\n  | SamplingAlgorithm\n  | BayesianSamplingAlgorithm\n  | GridSamplingAlgorithm\n  | RandomSamplingAlgorithm;\nexport type DistributionConfigurationUnion =\n  | DistributionConfiguration\n  | Mpi\n  | PyTorch\n  | TensorFlow;\nexport type JobLimitsUnion = JobLimits | CommandJobLimits | SweepJobLimits;\nexport type OnlineDeploymentPropertiesUnion =\n  | OnlineDeploymentProperties\n  | KubernetesOnlineDeployment\n  | ManagedOnlineDeployment;\nexport type DatastorePropertiesUnion =\n  | DatastoreProperties\n  | AzureBlobDatastore\n  | AzureDataLakeGen1Datastore\n  | AzureDataLakeGen2Datastore\n  | AzureFileDatastore;\nexport type JobBasePropertiesUnion =\n  | JobBaseProperties\n  | AutoMLJob\n  | CommandJob\n  | PipelineJob\n  | SweepJob;\nexport type DataVersionBasePropertiesUnion =\n  | DataVersionBaseProperties\n  | MLTableData\n  | UriFileDataVersion\n  | UriFolderDataVersion;\n\n/** An array of operations supported by the resource provider. */\nexport interface AmlOperationListResult {\n  /** List of AML workspace operations supported by the AML workspace resource provider. */\n  value?: AmlOperation[];\n}\n\n/** Azure Machine Learning workspace REST API operation */\nexport interface AmlOperation {\n  /** Operation name: {provider}/{resource}/{operation} */\n  name?: string;\n  /** Display name of operation */\n  display?: AmlOperationDisplay;\n  /** Indicates whether the operation applies to data-plane */\n  isDataAction?: boolean;\n}\n\n/** Display name of operation */\nexport interface AmlOperationDisplay {\n  /** The resource provider name: Microsoft.MachineLearningExperimentation */\n  provider?: string;\n  /** The resource on which the operation is performed. */\n  resource?: string;\n  /** The operation that users can perform. */\n  operation?: string;\n  /** The description for the operation. */\n  description?: string;\n}\n\n/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */\nexport interface ErrorResponse {\n  /** The error object. */\n  error?: ErrorDetail;\n}\n\n/** The error detail. */\nexport interface ErrorDetail {\n  /**\n   * The error code.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly code?: string;\n  /**\n   * The error message.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n  /**\n   * The error target.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly target?: string;\n  /**\n   * The error details.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly details?: ErrorDetail[];\n  /**\n   * The error additional info.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly additionalInfo?: ErrorAdditionalInfo[];\n}\n\n/** The resource management error additional info. */\nexport interface ErrorAdditionalInfo {\n  /**\n   * The additional info type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * The additional info.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly info?: Record<string, unknown>;\n}\n\nexport interface EncryptionProperty {\n  /** Indicates whether or not the encryption is enabled for the workspace. */\n  status: EncryptionStatus;\n  /** The identity that will be used to access the key vault for encryption at rest. */\n  identity?: IdentityForCmk;\n  /** Customer Key vault properties. */\n  keyVaultProperties: EncryptionKeyVaultProperties;\n}\n\n/** Identity that will be used to access key vault for encryption at rest */\nexport interface IdentityForCmk {\n  /** The ArmId of the user assigned identity that will be used to access the customer managed key vault */\n  userAssignedIdentity?: string;\n}\n\nexport interface EncryptionKeyVaultProperties {\n  /** The ArmId of the keyVault where the customer owned encryption key is present. */\n  keyVaultArmId: string;\n  /** Key vault uri to access the encryption key. */\n  keyIdentifier: string;\n  /** For future use - The client id of the identity which will be used to access key vault. */\n  identityClientId?: string;\n}\n\n/** The Private Endpoint resource. */\nexport interface PrivateEndpoint {\n  /**\n   * The ARM identifier for Private Endpoint\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The ARM identifier for Subnet resource that private endpoint links to\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly subnetArmId?: string;\n}\n\n/** A collection of information about the state of the connection between service consumer and provider. */\nexport interface PrivateLinkServiceConnectionState {\n  /** Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service. */\n  status?: PrivateEndpointServiceConnectionStatus;\n  /** The reason for approval/rejection of the connection. */\n  description?: string;\n  /** A message indicating if changes on the service provider require any updates on the consumer. */\n  actionsRequired?: string;\n}\n\n/** Managed service identity (system assigned and/or user assigned identities) */\nexport interface ManagedServiceIdentity {\n  /**\n   * The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly principalId?: string;\n  /**\n   * The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantId?: string;\n  /** Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed). */\n  type: ManagedServiceIdentityType;\n  /** The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests. */\n  userAssignedIdentities?: { [propertyName: string]: UserAssignedIdentity };\n}\n\n/** User assigned identity properties */\nexport interface UserAssignedIdentity {\n  /**\n   * The principal ID of the assigned identity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly principalId?: string;\n  /**\n   * The client ID of the assigned identity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly clientId?: string;\n}\n\n/** The resource model definition representing SKU */\nexport interface Sku {\n  /** The name of the SKU. Ex - P3. It is typically a letter+number code */\n  name: string;\n  /** This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT. */\n  tier?: SkuTier;\n  /** The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. */\n  size?: string;\n  /** If the service has different generations of hardware, for the same SKU, then that can be captured here. */\n  family?: string;\n  /** If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted. */\n  capacity?: number;\n}\n\n/** Common fields that are returned in the response for all Azure Resource Manager resources */\nexport interface Resource {\n  /**\n   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The name of the resource\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * Azure Resource Manager metadata containing createdBy and modifiedBy information.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n}\n\n/** Metadata pertaining to creation and last modification of the resource. */\nexport interface SystemData {\n  /** The identity that created the resource. */\n  createdBy?: string;\n  /** The type of identity that created the resource. */\n  createdByType?: CreatedByType;\n  /** The timestamp of resource creation (UTC). */\n  createdAt?: Date;\n  /** The identity that last modified the resource. */\n  lastModifiedBy?: string;\n  /** The type of identity that last modified the resource. */\n  lastModifiedByType?: CreatedByType;\n  /** The timestamp of resource last modification (UTC) */\n  lastModifiedAt?: Date;\n}\n\nexport interface SharedPrivateLinkResource {\n  /** Unique name of the private link. */\n  name?: string;\n  /** The resource id that private link links to. */\n  privateLinkResourceId?: string;\n  /** The private link resource group id. */\n  groupId?: string;\n  /** Request message. */\n  requestMessage?: string;\n  /** Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service. */\n  status?: PrivateEndpointServiceConnectionStatus;\n}\n\nexport interface NotebookResourceInfo {\n  fqdn?: string;\n  /** the data plane resourceId that used to initialize notebook component */\n  resourceId?: string;\n  /** The error that occurs when preparing notebook. */\n  notebookPreparationError?: NotebookPreparationError;\n}\n\nexport interface NotebookPreparationError {\n  errorMessage?: string;\n  statusCode?: number;\n}\n\nexport interface ServiceManagedResourcesSettings {\n  /** The settings for the service managed cosmosdb account. */\n  cosmosDb?: CosmosDbSettings;\n}\n\nexport interface CosmosDbSettings {\n  /** The throughput of the collections in cosmosdb database */\n  collectionsThroughput?: number;\n}\n\n/** The parameters for updating a machine learning workspace. */\nexport interface WorkspaceUpdateParameters {\n  /** The resource tags for the machine learning workspace. */\n  tags?: { [propertyName: string]: string };\n  /** The sku of the workspace. */\n  sku?: Sku;\n  /** The identity of the resource. */\n  identity?: ManagedServiceIdentity;\n  /** The description of this workspace. */\n  description?: string;\n  /** The friendly name for this workspace. */\n  friendlyName?: string;\n  /** The compute name for image build */\n  imageBuildCompute?: string;\n  /** The service managed resource settings. */\n  serviceManagedResourcesSettings?: ServiceManagedResourcesSettings;\n  /** The user assigned identity resource id that represents the workspace identity. */\n  primaryUserAssignedIdentity?: string;\n  /** Whether requests from Public Network are allowed. */\n  publicNetworkAccess?: PublicNetworkAccess;\n  /** ARM id of the application insights associated with this workspace. */\n  applicationInsights?: string;\n  /** ARM id of the container registry associated with this workspace. */\n  containerRegistry?: string;\n}\n\n/** The result of a request to list machine learning workspaces. */\nexport interface WorkspaceListResult {\n  /** The list of machine learning workspaces. Since this list may be incomplete, the nextLink field should be used to request the next list of machine learning workspaces. */\n  value?: Workspace[];\n  /** The URI that can be used to request the next list of machine learning workspaces. */\n  nextLink?: string;\n}\n\n/** Parameters to diagnose a workspace */\nexport interface DiagnoseWorkspaceParameters {\n  /** Value of Parameters */\n  value?: DiagnoseRequestProperties;\n}\n\nexport interface DiagnoseRequestProperties {\n  /** Setting for diagnosing user defined routing */\n  udr?: { [propertyName: string]: Record<string, unknown> };\n  /** Setting for diagnosing network security group */\n  nsg?: { [propertyName: string]: Record<string, unknown> };\n  /** Setting for diagnosing resource lock */\n  resourceLock?: { [propertyName: string]: Record<string, unknown> };\n  /** Setting for diagnosing dns resolution */\n  dnsResolution?: { [propertyName: string]: Record<string, unknown> };\n  /** Setting for diagnosing dependent storage account */\n  storageAccount?: { [propertyName: string]: Record<string, unknown> };\n  /** Setting for diagnosing dependent key vault */\n  keyVault?: { [propertyName: string]: Record<string, unknown> };\n  /** Setting for diagnosing dependent container registry */\n  containerRegistry?: { [propertyName: string]: Record<string, unknown> };\n  /** Setting for diagnosing dependent application insights */\n  applicationInsights?: { [propertyName: string]: Record<string, unknown> };\n  /** Setting for diagnosing unclassified category of problems */\n  others?: { [propertyName: string]: Record<string, unknown> };\n}\n\nexport interface DiagnoseResponseResult {\n  value?: DiagnoseResponseResultValue;\n}\n\nexport interface DiagnoseResponseResultValue {\n  userDefinedRouteResults?: DiagnoseResult[];\n  networkSecurityRuleResults?: DiagnoseResult[];\n  resourceLockResults?: DiagnoseResult[];\n  dnsResolutionResults?: DiagnoseResult[];\n  storageAccountResults?: DiagnoseResult[];\n  keyVaultResults?: DiagnoseResult[];\n  containerRegistryResults?: DiagnoseResult[];\n  applicationInsightsResults?: DiagnoseResult[];\n  otherResults?: DiagnoseResult[];\n}\n\n/** Result of Diagnose */\nexport interface DiagnoseResult {\n  /**\n   * Code for workspace setup error\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly code?: string;\n  /**\n   * Level of workspace setup error\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly level?: DiagnoseResultLevel;\n  /**\n   * Message of workspace setup error\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n}\n\nexport interface ListWorkspaceKeysResult {\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly userStorageKey?: string;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly userStorageResourceId?: string;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly appInsightsInstrumentationKey?: string;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly containerRegistryCredentials?: RegistryListCredentialsResult;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly notebookAccessKeys?: ListNotebookKeysResult;\n}\n\nexport interface RegistryListCredentialsResult {\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly location?: string;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly username?: string;\n  passwords?: Password[];\n}\n\nexport interface Password {\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly name?: string;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly value?: string;\n}\n\nexport interface ListNotebookKeysResult {\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly primaryAccessKey?: string;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly secondaryAccessKey?: string;\n}\n\n/** The List Usages operation response. */\nexport interface ListUsagesResult {\n  /**\n   * The list of AML resource usages.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: Usage[];\n  /**\n   * The URI to fetch the next page of AML resource usage information. Call ListNext() with this to fetch the next page of AML resource usage information.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Describes AML Resource Usage. */\nexport interface Usage {\n  /**\n   * Specifies the resource ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Region of the AML workspace in the id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly amlWorkspaceLocation?: string;\n  /**\n   * Specifies the resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * An enum describing the unit of usage measurement.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly unit?: UsageUnit;\n  /**\n   * The current usage of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currentValue?: number;\n  /**\n   * The maximum permitted usage of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly limit?: number;\n  /**\n   * The name of the type of usage.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: UsageName;\n}\n\n/** The Usage Names. */\nexport interface UsageName {\n  /**\n   * The name of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: string;\n  /**\n   * The localized name of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly localizedValue?: string;\n}\n\n/** The List Virtual Machine size operation response. */\nexport interface VirtualMachineSizeListResult {\n  /** The list of virtual machine sizes supported by AmlCompute. */\n  value?: VirtualMachineSize[];\n}\n\n/** Describes the properties of a VM size. */\nexport interface VirtualMachineSize {\n  /**\n   * The name of the virtual machine size.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The family name of the virtual machine size.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly family?: string;\n  /**\n   * The number of vCPUs supported by the virtual machine size.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly vCPUs?: number;\n  /**\n   * The number of gPUs supported by the virtual machine size.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly gpus?: number;\n  /**\n   * The OS VHD disk size, in MB, allowed by the virtual machine size.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly osVhdSizeMB?: number;\n  /**\n   * The resource volume size, in MB, allowed by the virtual machine size.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly maxResourceVolumeMB?: number;\n  /**\n   * The amount of memory, in GB, supported by the virtual machine size.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly memoryGB?: number;\n  /**\n   * Specifies if the virtual machine size supports low priority VMs.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lowPriorityCapable?: boolean;\n  /**\n   * Specifies if the virtual machine size supports premium IO.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly premiumIO?: boolean;\n  /** The estimated price information for using a VM. */\n  estimatedVMPrices?: EstimatedVMPrices;\n  /** Specifies the compute types supported by the virtual machine size. */\n  supportedComputeTypes?: string[];\n}\n\n/** The estimated price info for using a VM. */\nexport interface EstimatedVMPrices {\n  /** Three lettered code specifying the currency of the VM price. Example: USD */\n  billingCurrency: BillingCurrency;\n  /** The unit of time measurement for the specified VM price. Example: OneHour */\n  unitOfMeasure: UnitOfMeasure;\n  /** The list of estimated prices for using a VM of a particular OS type, tier, etc. */\n  values: EstimatedVMPrice[];\n}\n\n/** The estimated price info for using a VM of a particular OS type, tier, etc. */\nexport interface EstimatedVMPrice {\n  /** The price charged for using the VM. */\n  retailPrice: number;\n  /** Operating system type used by the VM. */\n  osType: VMPriceOSType;\n  /** The type of the VM. */\n  vmTier: VMTier;\n}\n\n/** Quota update parameters. */\nexport interface QuotaUpdateParameters {\n  /** The list for update quota. */\n  value?: QuotaBaseProperties[];\n  /** Region of workspace quota to be updated. */\n  location?: string;\n}\n\n/** The properties for Quota update or retrieval. */\nexport interface QuotaBaseProperties {\n  /** Specifies the resource ID. */\n  id?: string;\n  /** Specifies the resource type. */\n  type?: string;\n  /** The maximum permitted quota of the resource. */\n  limit?: number;\n  /** An enum describing the unit of quota measurement. */\n  unit?: QuotaUnit;\n}\n\n/** The result of update workspace quota. */\nexport interface UpdateWorkspaceQuotasResult {\n  /**\n   * The list of workspace quota update result.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: UpdateWorkspaceQuotas[];\n  /**\n   * The URI to fetch the next page of workspace quota update result. Call ListNext() with this to fetch the next page of Workspace Quota update result.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The properties for update Quota response. */\nexport interface UpdateWorkspaceQuotas {\n  /**\n   * Specifies the resource ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Specifies the resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** The maximum permitted quota of the resource. */\n  limit?: number;\n  /**\n   * An enum describing the unit of quota measurement.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly unit?: QuotaUnit;\n  /** Status of update workspace quota. */\n  status?: Status;\n}\n\n/** The List WorkspaceQuotasByVMFamily operation response. */\nexport interface ListWorkspaceQuotas {\n  /**\n   * The list of Workspace Quotas by VM Family\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ResourceQuota[];\n  /**\n   * The URI to fetch the next page of workspace quota information by VM Family. Call ListNext() with this to fetch the next page of Workspace Quota information.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The quota assigned to a resource. */\nexport interface ResourceQuota {\n  /**\n   * Specifies the resource ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Region of the AML workspace in the id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly amlWorkspaceLocation?: string;\n  /**\n   * Specifies the resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * Name of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: ResourceName;\n  /**\n   * The maximum permitted quota of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly limit?: number;\n  /**\n   * An enum describing the unit of quota measurement.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly unit?: QuotaUnit;\n}\n\n/** The Resource Name. */\nexport interface ResourceName {\n  /**\n   * The name of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: string;\n  /**\n   * The localized name of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly localizedValue?: string;\n}\n\n/** Paginated list of Machine Learning compute objects wrapped in ARM resource envelope. */\nexport interface PaginatedComputeResourcesList {\n  /** An array of Machine Learning compute objects wrapped in ARM resource envelope. */\n  value?: ComputeResource[];\n  /** A continuation link (absolute URI) to the next page of results in the list. */\n  nextLink?: string;\n}\n\nexport interface ComputeResourceSchema {\n  /** Compute properties */\n  properties?: ComputeUnion;\n}\n\n/** Machine Learning compute object. */\nexport interface Compute {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  computeType:\n    | \"AKS\"\n    | \"Kubernetes\"\n    | \"AmlCompute\"\n    | \"ComputeInstance\"\n    | \"VirtualMachine\"\n    | \"HDInsight\"\n    | \"DataFactory\"\n    | \"Databricks\"\n    | \"DataLakeAnalytics\"\n    | \"SynapseSpark\";\n  /** Location for the underlying compute */\n  computeLocation?: string;\n  /**\n   * The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** The description of the Machine Learning compute. */\n  description?: string;\n  /**\n   * The time at which the compute was created.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly createdOn?: Date;\n  /**\n   * The time at which the compute was last modified.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly modifiedOn?: Date;\n  /** ARM resource id of the underlying compute */\n  resourceId?: string;\n  /**\n   * Errors during provisioning\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningErrors?: ErrorResponse[];\n  /**\n   * Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isAttachedCompute?: boolean;\n  /** Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication. */\n  disableLocalAuth?: boolean;\n}\n\n/** AmlCompute update parameters. */\nexport interface ClusterUpdateParameters {\n  /** Properties of ClusterUpdate */\n  properties?: ScaleSettingsInformation;\n}\n\n/** Desired scale settings for the amlCompute. */\nexport interface ScaleSettingsInformation {\n  /** scale settings for AML Compute */\n  scaleSettings?: ScaleSettings;\n}\n\n/** scale settings for AML Compute */\nexport interface ScaleSettings {\n  /** Max number of nodes to use */\n  maxNodeCount: number;\n  /** Min number of nodes to use */\n  minNodeCount?: number;\n  /** Node Idle Time before scaling down amlCompute. This string needs to be in the RFC Format. */\n  nodeIdleTimeBeforeScaleDown?: string;\n}\n\n/** Result of AmlCompute Nodes */\nexport interface AmlComputeNodesInformation {\n  /**\n   * The collection of returned AmlCompute nodes details.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nodes?: AmlComputeNodeInformation[];\n  /**\n   * The continuation token.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Compute node information related to a AmlCompute. */\nexport interface AmlComputeNodeInformation {\n  /**\n   * ID of the compute node.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nodeId?: string;\n  /**\n   * Private IP address of the compute node.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly privateIpAddress?: string;\n  /**\n   * Public IP address of the compute node.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly publicIpAddress?: string;\n  /**\n   * SSH port number of the node.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly port?: number;\n  /**\n   * State of the compute node. Values are idle, running, preparing, unusable, leaving and preempted.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nodeState?: NodeState;\n  /**\n   * ID of the Experiment running on the node, if any else null.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly runId?: string;\n}\n\nexport interface NotebookAccessTokenResult {\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly notebookResourceId?: string;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly hostName?: string;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly publicDns?: string;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly accessToken?: string;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly tokenType?: string;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly expiresIn?: number;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly refreshToken?: string;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly scope?: string;\n}\n\n/** Secrets related to a Machine Learning compute. Might differ for every type of compute. */\nexport interface ComputeSecrets {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  computeType: \"AKS\" | \"VirtualMachine\" | \"Databricks\";\n}\n\n/** List of private endpoint connection associated with the specified workspace */\nexport interface PrivateEndpointConnectionListResult {\n  /** Array of private endpoint connections */\n  value?: PrivateEndpointConnection[];\n}\n\n/** A list of private link resources */\nexport interface PrivateLinkResourceListResult {\n  /** Array of private link resources */\n  value?: PrivateLinkResource[];\n}\n\nexport interface ListStorageAccountKeysResult {\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly userStorageKey?: string;\n}\n\nexport interface WorkspaceConnectionPropertiesV2 {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  authType: \"PAT\" | \"SAS\" | \"UsernamePassword\" | \"None\" | \"ManagedIdentity\";\n  /** Category of the connection */\n  category?: ConnectionCategory;\n  target?: string;\n  /** Value details of the workspace connection. */\n  value?: string;\n  /** format for the workspace connection value */\n  valueFormat?: ValueFormat;\n}\n\nexport interface WorkspaceConnectionPropertiesV2BasicResourceArmPaginatedResult {\n  value?: WorkspaceConnectionPropertiesV2BasicResource[];\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly nextLink?: string;\n}\n\nexport interface ExternalFqdnResponse {\n  value?: FqdnEndpoints[];\n}\n\nexport interface FqdnEndpoints {\n  properties?: FqdnEndpointsProperties;\n}\n\nexport interface FqdnEndpointsProperties {\n  category?: string;\n  endpoints?: FqdnEndpoint[];\n}\n\nexport interface FqdnEndpoint {\n  domainName?: string;\n  endpointDetails?: FqdnEndpointDetail[];\n}\n\nexport interface FqdnEndpointDetail {\n  port?: number;\n}\n\n/** A paginated list of BatchEndpoint entities. */\nexport interface BatchEndpointTrackedResourceArmPaginatedResult {\n  /** The link to the next page of BatchEndpoint objects. If null, there are no additional pages. */\n  nextLink?: string;\n  /** An array of objects of type BatchEndpoint. */\n  value?: BatchEndpoint[];\n}\n\n/** Batch endpoint default values */\nexport interface BatchEndpointDefaults {\n  /**\n   * Name of the deployment that will be default for the endpoint.\n   * This deployment will end up getting 100% traffic when the endpoint scoring URL is invoked.\n   */\n  deploymentName?: string;\n}\n\n/** Inference Endpoint base definition */\nexport interface EndpointPropertiesBase {\n  /** [Required] Use 'Key' for key based authentication and 'AMLToken' for Azure Machine Learning token-based authentication. 'Key' doesn't expire but 'AMLToken' does. */\n  authMode: EndpointAuthMode;\n  /** Description of the inference endpoint. */\n  description?: string;\n  /**\n   * EndpointAuthKeys to set initially on an Endpoint.\n   * This property will always be returned as null. AuthKey values must be retrieved using the ListKeys API.\n   */\n  keys?: EndpointAuthKeys;\n  /** Property dictionary. Properties can be added, but not removed or altered. */\n  properties?: { [propertyName: string]: string | null };\n  /**\n   * Endpoint URI.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly scoringUri?: string;\n  /**\n   * Endpoint Swagger URI.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly swaggerUri?: string;\n}\n\n/** Keys for endpoint authentication. */\nexport interface EndpointAuthKeys {\n  /** The primary key. */\n  primaryKey?: string;\n  /** The secondary key. */\n  secondaryKey?: string;\n}\n\n/** Managed service identity (system assigned and/or user assigned identities) */\nexport interface PartialManagedServiceIdentity {\n  /** Managed service identity (system assigned and/or user assigned identities) */\n  type?: ManagedServiceIdentityType;\n  /** The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests. */\n  userAssignedIdentities?: { [propertyName: string]: Record<string, unknown> };\n}\n\n/** Strictly used in update requests. */\nexport interface PartialMinimalTrackedResource {\n  /** Resource tags. */\n  tags?: { [propertyName: string]: string | null };\n}\n\n/** A paginated list of BatchDeployment entities. */\nexport interface BatchDeploymentTrackedResourceArmPaginatedResult {\n  /** The link to the next page of BatchDeployment objects. If null, there are no additional pages. */\n  nextLink?: string;\n  /** An array of objects of type BatchDeployment. */\n  value?: BatchDeployment[];\n}\n\n/** Base definition for asset references. */\nexport interface AssetReferenceBase {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  referenceType: \"DataPath\" | \"Id\" | \"OutputPath\";\n}\n\nexport interface ResourceConfiguration {\n  /** Optional number of instances or nodes used by the compute target. */\n  instanceCount?: number;\n  /** Optional type of VM used as supported by the compute target. */\n  instanceType?: string;\n  /** Additional properties bag. */\n  properties?: { [propertyName: string]: Record<string, unknown> };\n}\n\n/** Retry settings for a batch inference operation. */\nexport interface BatchRetrySettings {\n  /** Maximum retry count for a mini-batch */\n  maxRetries?: number;\n  /** Invocation timeout for a mini-batch, in ISO 8601 format. */\n  timeout?: string;\n}\n\n/** Base definition for endpoint deployment. */\nexport interface EndpointDeploymentPropertiesBase {\n  /** Code configuration for the endpoint deployment. */\n  codeConfiguration?: CodeConfiguration;\n  /** Description of the endpoint deployment. */\n  description?: string;\n  /** ARM resource ID or AssetId of the environment specification for the endpoint deployment. */\n  environmentId?: string;\n  /** Environment variables configuration for the deployment. */\n  environmentVariables?: { [propertyName: string]: string | null };\n  /** Property dictionary. Properties can be added, but not removed or altered. */\n  properties?: { [propertyName: string]: string | null };\n}\n\n/** Configuration for a scoring code asset. */\nexport interface CodeConfiguration {\n  /** ARM resource ID of the code asset. */\n  codeId?: string;\n  /** [Required] The script to execute on startup. eg. \"score.py\" */\n  scoringScript: string;\n}\n\n/** Strictly used in update requests. */\nexport interface PartialBatchDeploymentPartialMinimalTrackedResourceWithProperties {\n  /** Additional attributes of the entity. */\n  properties?: PartialBatchDeployment;\n  /** Resource tags. */\n  tags?: { [propertyName: string]: string | null };\n}\n\n/** Mutable batch inference settings per deployment. */\nexport interface PartialBatchDeployment {\n  /** Description of the endpoint deployment. */\n  description?: string;\n}\n\n/** A paginated list of CodeContainer entities. */\nexport interface CodeContainerResourceArmPaginatedResult {\n  /** The link to the next page of CodeContainer objects. If null, there are no additional pages. */\n  nextLink?: string;\n  /** An array of objects of type CodeContainer. */\n  value?: CodeContainer[];\n}\n\nexport interface ResourceBase {\n  /** The asset description text. */\n  description?: string;\n  /** The asset property dictionary. */\n  properties?: { [propertyName: string]: string | null };\n  /** Tag dictionary. Tags can be added, removed, and updated. */\n  tags?: { [propertyName: string]: string | null };\n}\n\n/** A paginated list of CodeVersion entities. */\nexport interface CodeVersionResourceArmPaginatedResult {\n  /** The link to the next page of CodeVersion objects. If null, there are no additional pages. */\n  nextLink?: string;\n  /** An array of objects of type CodeVersion. */\n  value?: CodeVersion[];\n}\n\n/** A paginated list of ComponentContainer entities. */\nexport interface ComponentContainerResourceArmPaginatedResult {\n  /** The link to the next page of ComponentContainer objects. If null, there are no additional pages. */\n  nextLink?: string;\n  /** An array of objects of type ComponentContainer. */\n  value?: ComponentContainer[];\n}\n\n/** A paginated list of ComponentVersion entities. */\nexport interface ComponentVersionResourceArmPaginatedResult {\n  /** The link to the next page of ComponentVersion objects. If null, there are no additional pages. */\n  nextLink?: string;\n  /** An array of objects of type ComponentVersion. */\n  value?: ComponentVersion[];\n}\n\n/** A paginated list of DataContainer entities. */\nexport interface DataContainerResourceArmPaginatedResult {\n  /** The link to the next page of DataContainer objects. If null, there are no additional pages. */\n  nextLink?: string;\n  /** An array of objects of type DataContainer. */\n  value?: DataContainer[];\n}\n\n/** A paginated list of DataVersionBase entities. */\nexport interface DataVersionBaseResourceArmPaginatedResult {\n  /** The link to the next page of DataVersionBase objects. If null, there are no additional pages. */\n  nextLink?: string;\n  /** An array of objects of type DataVersionBase. */\n  value?: DataVersionBase[];\n}\n\n/** A paginated list of Datastore entities. */\nexport interface DatastoreResourceArmPaginatedResult {\n  /** The link to the next page of Datastore objects. If null, there are no additional pages. */\n  nextLink?: string;\n  /** An array of objects of type Datastore. */\n  value?: Datastore[];\n}\n\n/** Base definition for datastore credentials. */\nexport interface DatastoreCredentials {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  credentialsType:\n    | \"AccountKey\"\n    | \"Certificate\"\n    | \"None\"\n    | \"Sas\"\n    | \"ServicePrincipal\";\n}\n\n/** Base definition for datastore secrets. */\nexport interface DatastoreSecrets {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  secretsType: \"AccountKey\" | \"Certificate\" | \"Sas\" | \"ServicePrincipal\";\n}\n\n/** A paginated list of EnvironmentContainer entities. */\nexport interface EnvironmentContainerResourceArmPaginatedResult {\n  /** The link to the next page of EnvironmentContainer objects. If null, there are no additional pages. */\n  nextLink?: string;\n  /** An array of objects of type EnvironmentContainer. */\n  value?: EnvironmentContainer[];\n}\n\n/** A paginated list of EnvironmentVersion entities. */\nexport interface EnvironmentVersionResourceArmPaginatedResult {\n  /** The link to the next page of EnvironmentVersion objects. If null, there are no additional pages. */\n  nextLink?: string;\n  /** An array of objects of type EnvironmentVersion. */\n  value?: EnvironmentVersion[];\n}\n\n/** Configuration settings for Docker build context */\nexport interface BuildContext {\n  /**\n   * [Required] URI of the Docker build context used to build the image. Supports blob URIs on environment creation and may return blob or Git URIs.\n   * <seealso href=\"https://docs.docker.com/engine/reference/commandline/build/#extended-description\" />\n   */\n  contextUri: string;\n  /**\n   * Path to the Dockerfile in the build context.\n   * <seealso href=\"https://docs.docker.com/engine/reference/builder/\" />\n   */\n  dockerfilePath?: string;\n}\n\nexport interface InferenceContainerProperties {\n  /** The route to check the liveness of the inference server container. */\n  livenessRoute?: Route;\n  /** The route to check the readiness of the inference server container. */\n  readinessRoute?: Route;\n  /** The port to send the scoring requests to, within the inference server container. */\n  scoringRoute?: Route;\n}\n\nexport interface Route {\n  /** [Required] The path for the route. */\n  path: string;\n  /** [Required] The port for the route. */\n  port: number;\n}\n\n/** A paginated list of JobBase entities. */\nexport interface JobBaseResourceArmPaginatedResult {\n  /** The link to the next page of JobBase objects. If null, there are no additional pages. */\n  nextLink?: string;\n  /** An array of objects of type JobBase. */\n  value?: JobBase[];\n}\n\n/** Base definition for identity configuration. */\nexport interface IdentityConfiguration {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  identityType: \"AMLToken\" | \"Managed\" | \"UserIdentity\";\n}\n\n/** Job endpoint definition */\nexport interface JobService {\n  /** Url for endpoint. */\n  endpoint?: string;\n  /**\n   * Any error in the service.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly errorMessage?: string;\n  /** Endpoint type. */\n  jobServiceType?: string;\n  /** Port for endpoint. */\n  port?: number;\n  /** Additional properties to set on the endpoint. */\n  properties?: { [propertyName: string]: string | null };\n  /**\n   * Status of endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: string;\n}\n\n/** A paginated list of ModelContainer entities. */\nexport interface ModelContainerResourceArmPaginatedResult {\n  /** The link to the next page of ModelContainer objects. If null, there are no additional pages. */\n  nextLink?: string;\n  /** An array of objects of type ModelContainer. */\n  value?: ModelContainer[];\n}\n\n/** A paginated list of ModelVersion entities. */\nexport interface ModelVersionResourceArmPaginatedResult {\n  /** The link to the next page of ModelVersion objects. If null, there are no additional pages. */\n  nextLink?: string;\n  /** An array of objects of type ModelVersion. */\n  value?: ModelVersion[];\n}\n\nexport interface FlavorData {\n  /** Model flavor-specific data. */\n  data?: { [propertyName: string]: string | null };\n}\n\n/** A paginated list of OnlineEndpoint entities. */\nexport interface OnlineEndpointTrackedResourceArmPaginatedResult {\n  /** The link to the next page of OnlineEndpoint objects. If null, there are no additional pages. */\n  nextLink?: string;\n  /** An array of objects of type OnlineEndpoint. */\n  value?: OnlineEndpoint[];\n}\n\n/** A paginated list of OnlineDeployment entities. */\nexport interface OnlineDeploymentTrackedResourceArmPaginatedResult {\n  /** The link to the next page of OnlineDeployment objects. If null, there are no additional pages. */\n  nextLink?: string;\n  /** An array of objects of type OnlineDeployment. */\n  value?: OnlineDeployment[];\n}\n\n/** Deployment container liveness/readiness probe configuration. */\nexport interface ProbeSettings {\n  /** The number of failures to allow before returning an unhealthy status. */\n  failureThreshold?: number;\n  /** The delay before the first probe in ISO 8601 format. */\n  initialDelay?: string;\n  /** The length of time between probes in ISO 8601 format. */\n  period?: string;\n  /** The number of successful probes before returning a healthy status. */\n  successThreshold?: number;\n  /** The probe timeout in ISO 8601 format. */\n  timeout?: string;\n}\n\n/** Online deployment scoring requests configuration. */\nexport interface OnlineRequestSettings {\n  /** The number of maximum concurrent requests per node allowed per deployment. Defaults to 1. */\n  maxConcurrentRequestsPerInstance?: number;\n  /**\n   * The maximum amount of time a request will stay in the queue in ISO 8601 format.\n   * Defaults to 500ms.\n   */\n  maxQueueWait?: string;\n  /**\n   * The scoring timeout in ISO 8601 format.\n   * Defaults to 5000ms.\n   */\n  requestTimeout?: string;\n}\n\n/** Online deployment scaling configuration. */\nexport interface OnlineScaleSettings {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  scaleType: \"Default\" | \"TargetUtilization\";\n}\n\n/** Common SKU definition. */\nexport interface PartialSku {\n  /** If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted. */\n  capacity?: number;\n  /** If the service has different generations of hardware, for the same SKU, then that can be captured here. */\n  family?: string;\n  /** The name of the SKU. Ex - P3. It is typically a letter+number code. */\n  name?: string;\n  /** The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. */\n  size?: string;\n  /** This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT. */\n  tier?: SkuTier;\n}\n\nexport interface DeploymentLogsRequest {\n  /** The type of container to retrieve logs from. */\n  containerType?: ContainerType;\n  /** The maximum number of lines to tail. */\n  tail?: number;\n}\n\nexport interface DeploymentLogs {\n  /** The retrieved online deployment logs. */\n  content?: string;\n}\n\n/** A paginated list of SkuResource entities. */\nexport interface SkuResourceArmPaginatedResult {\n  /** The link to the next page of SkuResource objects. If null, there are no additional pages. */\n  nextLink?: string;\n  /** An array of objects of type SkuResource. */\n  value?: SkuResource[];\n}\n\n/** Fulfills ARM Contract requirement to list all available SKUS for a resource. */\nexport interface SkuResource {\n  /** Gets or sets the Sku Capacity. */\n  capacity?: SkuCapacity;\n  /**\n   * The resource type name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceType?: string;\n  /** Gets or sets the Sku. */\n  sku?: SkuSetting;\n}\n\n/** SKU capacity information */\nexport interface SkuCapacity {\n  /** Gets or sets the default capacity. */\n  default?: number;\n  /** Gets or sets the maximum. */\n  maximum?: number;\n  /** Gets or sets the minimum. */\n  minimum?: number;\n  /** Gets or sets the type of the scale. */\n  scaleType?: SkuScaleType;\n}\n\n/** SkuSetting fulfills the need for stripped down SKU info in ARM contract. */\nexport interface SkuSetting {\n  /** [Required] The name of the SKU. Ex - P3. It is typically a letter+number code. */\n  name: string;\n  /** This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT. */\n  tier?: SkuTier;\n}\n\nexport interface RegenerateEndpointKeysRequest {\n  /** [Required] Specification for which type of key to generate. Primary or Secondary. */\n  keyType: KeyType;\n  /** The value the key is set to. */\n  keyValue?: string;\n}\n\n/** Service Token */\nexport interface EndpointAuthToken {\n  /** Access token for endpoint authentication. */\n  accessToken?: string;\n  /** Access token expiry time (UTC). */\n  expiryTimeUtc?: number;\n  /** Refresh access token after time (UTC). */\n  refreshAfterTimeUtc?: number;\n  /** Access token type. */\n  tokenType?: string;\n}\n\n/** A paginated list of Schedule entities. */\nexport interface ScheduleResourceArmPaginatedResult {\n  /** The link to the next page of Schedule objects. If null, there are no additional pages. */\n  nextLink?: string;\n  /** An array of objects of type Schedule. */\n  value?: Schedule[];\n}\n\nexport interface ScheduleActionBase {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  actionType: \"InvokeBatchEndpoint\" | \"CreateJob\";\n}\n\nexport interface TriggerBase {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  triggerType: \"Recurrence\" | \"Cron\";\n  /**\n   * Specifies end time of schedule in ISO 8601, but without a UTC offset. Refer https://en.wikipedia.org/wiki/ISO_8601.\n   * Recommented format would be \"2022-06-01T00:00:01\"\n   * If not present, the schedule will run indefinitely\n   */\n  endTime?: string;\n  /** Specifies start time of schedule in ISO 8601 format, but without a UTC offset. */\n  startTime?: string;\n  /**\n   * Specifies time zone in which the schedule runs.\n   * TimeZone should follow Windows time zone format. Refer: https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/default-time-zones?view=windows-11\n   */\n  timeZone?: string;\n}\n\n/** The List Aml user feature operation response. */\nexport interface ListAmlUserFeatureResult {\n  /**\n   * The list of AML user facing features.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: AmlUserFeature[];\n  /**\n   * The URI to fetch the next page of AML user features information. Call ListNext() with this to fetch the next page of AML user features information.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Features enabled for a workspace */\nexport interface AmlUserFeature {\n  /** Specifies the feature ID */\n  id?: string;\n  /** Specifies the feature name */\n  displayName?: string;\n  /** Describes the feature for user experience */\n  description?: string;\n}\n\n/** Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet. */\nexport interface ResourceId {\n  /** The ID of the resource */\n  id: string;\n}\n\nexport interface AKSSchema {\n  /** AKS properties */\n  properties?: AKSSchemaProperties;\n}\n\n/** AKS properties */\nexport interface AKSSchemaProperties {\n  /** Cluster full qualified domain name */\n  clusterFqdn?: string;\n  /**\n   * System services\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemServices?: SystemService[];\n  /** Number of agents */\n  agentCount?: number;\n  /** Agent virtual machine size */\n  agentVmSize?: string;\n  /** Intended usage of the cluster */\n  clusterPurpose?: ClusterPurpose;\n  /** SSL configuration */\n  sslConfiguration?: SslConfiguration;\n  /** AKS networking configuration for vnet */\n  aksNetworkingConfiguration?: AksNetworkingConfiguration;\n  /** Load Balancer Type */\n  loadBalancerType?: LoadBalancerType;\n  /** Load Balancer Subnet */\n  loadBalancerSubnet?: string;\n}\n\n/** A system service running on a compute. */\nexport interface SystemService {\n  /**\n   * The type of this system service.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemServiceType?: string;\n  /**\n   * Public IP address\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly publicIpAddress?: string;\n  /**\n   * The version for this type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly version?: string;\n}\n\n/** The ssl configuration for scoring */\nexport interface SslConfiguration {\n  /** Enable or disable ssl for scoring */\n  status?: SslConfigStatus;\n  /** Cert data */\n  cert?: string;\n  /** Key data */\n  key?: string;\n  /** CNAME of the cert */\n  cname?: string;\n  /** Leaf domain label of public endpoint */\n  leafDomainLabel?: string;\n  /** Indicates whether to overwrite existing domain label. */\n  overwriteExistingDomain?: boolean;\n}\n\n/** Advance configuration for AKS networking */\nexport interface AksNetworkingConfiguration {\n  /** Virtual network subnet resource ID the compute nodes belong to */\n  subnetId?: string;\n  /** A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges. */\n  serviceCidr?: string;\n  /** An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr. */\n  dnsServiceIP?: string;\n  /** A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range. */\n  dockerBridgeCidr?: string;\n}\n\n/** Kubernetes Compute Schema */\nexport interface KubernetesSchema {\n  /** Properties of Kubernetes */\n  properties?: KubernetesProperties;\n}\n\n/** Kubernetes properties */\nexport interface KubernetesProperties {\n  /** Relay connection string. */\n  relayConnectionString?: string;\n  /** ServiceBus connection string. */\n  serviceBusConnectionString?: string;\n  /** Extension principal-id. */\n  extensionPrincipalId?: string;\n  /** Extension instance release train. */\n  extensionInstanceReleaseTrain?: string;\n  /** VC name. */\n  vcName?: string;\n  /** Compute namespace */\n  namespace?: string;\n  /** Default instance type */\n  defaultInstanceType?: string;\n  /** Instance Type Schema */\n  instanceTypes?: { [propertyName: string]: InstanceTypeSchema };\n}\n\n/** Instance type schema. */\nexport interface InstanceTypeSchema {\n  /** Node Selector */\n  nodeSelector?: { [propertyName: string]: string | null };\n  /** Resource requests/limits for this instance type */\n  resources?: InstanceTypeSchemaResources;\n}\n\n/** Resource requests/limits for this instance type */\nexport interface InstanceTypeSchemaResources {\n  /** Resource requests for this instance type */\n  requests?: { [propertyName: string]: string };\n  /** Resource limits for this instance type */\n  limits?: { [propertyName: string]: string };\n}\n\n/** AML Compute properties */\nexport interface AmlComputeProperties {\n  /** Compute OS Type */\n  osType?: OsType;\n  /** Virtual Machine Size */\n  vmSize?: string;\n  /** Virtual Machine priority */\n  vmPriority?: VmPriority;\n  /** Virtual Machine image for AML Compute - windows only */\n  virtualMachineImage?: VirtualMachineImage;\n  /** Network is isolated or not */\n  isolatedNetwork?: boolean;\n  /** Scale settings for AML Compute */\n  scaleSettings?: ScaleSettings;\n  /** Credentials for an administrator user account that will be created on each compute node. */\n  userAccountCredentials?: UserAccountCredentials;\n  /** Virtual network subnet resource ID the compute nodes belong to. */\n  subnet?: ResourceId;\n  /** State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on all nodes of the cluster. Enabled - Indicates that the public ssh port is open on all nodes of the cluster. NotSpecified - Indicates that the public ssh port is closed on all nodes of the cluster if VNet is defined, else is open all public nodes. It can be default only during cluster creation time, after creation it will be either enabled or disabled. */\n  remoteLoginPortPublicAccess?: RemoteLoginPortPublicAccess;\n  /**\n   * Allocation state of the compute. Possible values are: steady - Indicates that the compute is not resizing. There are no changes to the number of compute nodes in the compute in progress. A compute enters this state when it is created and when no operations are being performed on the compute to change the number of compute nodes. resizing - Indicates that the compute is resizing; that is, compute nodes are being added to or removed from the compute.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly allocationState?: AllocationState;\n  /**\n   * The time at which the compute entered its current allocation state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly allocationStateTransitionTime?: Date;\n  /**\n   * Collection of errors encountered by various compute nodes during node setup.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly errors?: ErrorResponse[];\n  /**\n   * The number of compute nodes currently assigned to the compute.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currentNodeCount?: number;\n  /**\n   * The target number of compute nodes for the compute. If the allocationState is resizing, this property denotes the target node count for the ongoing resize operation. If the allocationState is steady, this property denotes the target node count for the previous resize operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly targetNodeCount?: number;\n  /**\n   * Counts of various node states on the compute.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nodeStateCounts?: NodeStateCounts;\n  /** Enable or disable node public IP address provisioning. Possible values are: Possible values are: true - Indicates that the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will have a private endpoint and no public IPs. */\n  enableNodePublicIp?: boolean;\n  /** A property bag containing additional properties. */\n  propertyBag?: Record<string, unknown>;\n}\n\n/** Virtual Machine image for Windows AML Compute */\nexport interface VirtualMachineImage {\n  /** Virtual Machine image path */\n  id: string;\n}\n\n/** Settings for user account that gets created on each on the nodes of a compute. */\nexport interface UserAccountCredentials {\n  /** Name of the administrator user account which can be used to SSH to nodes. */\n  adminUserName: string;\n  /** SSH public key of the administrator user account. */\n  adminUserSshPublicKey?: string;\n  /** Password of the administrator user account. */\n  adminUserPassword?: string;\n}\n\n/** Counts of various compute node states on the amlCompute. */\nexport interface NodeStateCounts {\n  /**\n   * Number of compute nodes in idle state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly idleNodeCount?: number;\n  /**\n   * Number of compute nodes which are running jobs.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly runningNodeCount?: number;\n  /**\n   * Number of compute nodes which are being prepared.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly preparingNodeCount?: number;\n  /**\n   * Number of compute nodes which are in unusable state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly unusableNodeCount?: number;\n  /**\n   * Number of compute nodes which are leaving the amlCompute.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly leavingNodeCount?: number;\n  /**\n   * Number of compute nodes which are in preempted state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly preemptedNodeCount?: number;\n}\n\n/** Properties(top level) of AmlCompute */\nexport interface AmlComputeSchema {\n  /** Properties of AmlCompute */\n  properties?: AmlComputeProperties;\n}\n\n/** Compute Instance properties */\nexport interface ComputeInstanceProperties {\n  /** Virtual Machine Size */\n  vmSize?: string;\n  /** Virtual network subnet resource ID the compute nodes belong to. */\n  subnet?: ResourceId;\n  /** Policy for sharing applications on this compute instance among users of parent workspace. If Personal, only the creator can access applications on this compute instance. When Shared, any workspace user can access applications on this instance depending on his/her assigned role. */\n  applicationSharingPolicy?: ApplicationSharingPolicy;\n  /** Specifies policy and settings for SSH access. */\n  sshSettings?: ComputeInstanceSshSettings;\n  /**\n   * Describes all connectivity endpoints available for this ComputeInstance.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly connectivityEndpoints?: ComputeInstanceConnectivityEndpoints;\n  /**\n   * Describes available applications and their endpoints on this ComputeInstance.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly applications?: ComputeInstanceApplication[];\n  /**\n   * Describes information on user who created this ComputeInstance.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly createdBy?: ComputeInstanceCreatedBy;\n  /**\n   * Collection of errors encountered on this ComputeInstance.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly errors?: ErrorResponse[];\n  /**\n   * The current state of this ComputeInstance.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly state?: ComputeInstanceState;\n  /** The Compute Instance Authorization type. Available values are personal (default). */\n  computeInstanceAuthorizationType?: ComputeInstanceAuthorizationType;\n  /** Settings for a personal compute instance. */\n  personalComputeInstanceSettings?: PersonalComputeInstanceSettings;\n  /** Details of customized scripts to execute for setting up the cluster. */\n  setupScripts?: SetupScripts;\n  /**\n   * The last operation on ComputeInstance.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastOperation?: ComputeInstanceLastOperation;\n  /**\n   * The list of schedules to be applied on the computes.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly schedules?: ComputeSchedules;\n  /** Enable or disable node public IP address provisioning. Possible values are: Possible values are: true - Indicates that the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will have a private endpoint and no public IPs. */\n  enableNodePublicIp?: boolean;\n  /**\n   * Describes informations of containers on this ComputeInstance.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly containers?: ComputeInstanceContainer[];\n  /**\n   * Describes informations of dataDisks on this ComputeInstance.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly dataDisks?: ComputeInstanceDataDisk[];\n  /**\n   * Describes informations of dataMounts on this ComputeInstance.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly dataMounts?: ComputeInstanceDataMount[];\n  /**\n   * ComputeInstance version.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly versions?: ComputeInstanceVersion;\n}\n\n/** Specifies policy and settings for SSH access. */\nexport interface ComputeInstanceSshSettings {\n  /** State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on this instance. Enabled - Indicates that the public ssh port is open and accessible according to the VNet/subnet policy if applicable. */\n  sshPublicAccess?: SshPublicAccess;\n  /**\n   * Describes the admin user name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly adminUserName?: string;\n  /**\n   * Describes the port for connecting through SSH.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sshPort?: number;\n  /** Specifies the SSH rsa public key file as a string. Use \"ssh-keygen -t rsa -b 2048\" to generate your SSH key pairs. */\n  adminPublicKey?: string;\n}\n\n/** Defines all connectivity endpoints and properties for an ComputeInstance. */\nexport interface ComputeInstanceConnectivityEndpoints {\n  /**\n   * Public IP Address of this ComputeInstance.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly publicIpAddress?: string;\n  /**\n   * Private IP Address of this ComputeInstance (local to the VNET in which the compute instance is deployed).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly privateIpAddress?: string;\n}\n\n/** Defines an Aml Instance application and its connectivity endpoint URI. */\nexport interface ComputeInstanceApplication {\n  /** Name of the ComputeInstance application. */\n  displayName?: string;\n  /** Application' endpoint URI. */\n  endpointUri?: string;\n}\n\n/** Describes information on user who created this ComputeInstance. */\nexport interface ComputeInstanceCreatedBy {\n  /**\n   * Name of the user.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly userName?: string;\n  /**\n   * Uniquely identifies user' Azure Active Directory organization.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly userOrgId?: string;\n  /**\n   * Uniquely identifies the user within his/her organization.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly userId?: string;\n}\n\n/** Settings for a personal compute instance. */\nexport interface PersonalComputeInstanceSettings {\n  /** A user explicitly assigned to a personal compute instance. */\n  assignedUser?: AssignedUser;\n}\n\n/** A user that can be assigned to a compute instance. */\nexport interface AssignedUser {\n  /** User’s AAD Object Id. */\n  objectId: string;\n  /** User’s AAD Tenant Id. */\n  tenantId: string;\n}\n\n/** Details of customized scripts to execute for setting up the cluster. */\nexport interface SetupScripts {\n  /** Customized setup scripts */\n  scripts?: ScriptsToExecute;\n}\n\n/** Customized setup scripts */\nexport interface ScriptsToExecute {\n  /** Script that's run every time the machine starts. */\n  startupScript?: ScriptReference;\n  /** Script that's run only once during provision of the compute. */\n  creationScript?: ScriptReference;\n}\n\n/** Script reference */\nexport interface ScriptReference {\n  /** The storage source of the script: workspace. */\n  scriptSource?: string;\n  /** The location of scripts in the mounted volume. */\n  scriptData?: string;\n  /** Optional command line arguments passed to the script to run. */\n  scriptArguments?: string;\n  /** Optional time period passed to timeout command. */\n  timeout?: string;\n}\n\n/** The last operation on ComputeInstance. */\nexport interface ComputeInstanceLastOperation {\n  /** Name of the last operation. */\n  operationName?: OperationName;\n  /** Time of the last operation. */\n  operationTime?: Date;\n  /** Operation status. */\n  operationStatus?: OperationStatus;\n  /** Trigger of operation. */\n  operationTrigger?: OperationTrigger;\n}\n\n/** The list of schedules to be applied on the computes */\nexport interface ComputeSchedules {\n  /** The list of compute start stop schedules to be applied. */\n  computeStartStop?: ComputeStartStopSchedule[];\n}\n\n/** Compute start stop schedule properties */\nexport interface ComputeStartStopSchedule {\n  /**\n   * A system assigned id for the schedule.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The current deployment state of schedule.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningStatus?: ProvisioningStatus;\n  /** Is the schedule enabled or disabled? */\n  status?: ScheduleStatus;\n  /** [Required] The compute power action. */\n  action?: ComputePowerAction;\n  /** [Required] The schedule trigger type. */\n  triggerType?: TriggerType;\n  /** Required if triggerType is Recurrence. */\n  recurrence?: RecurrenceTrigger;\n  /** Required if triggerType is Cron. */\n  cron?: CronTrigger;\n  /** [Deprecated] Not used any more. */\n  schedule?: ScheduleBase;\n}\n\nexport interface RecurrenceSchedule {\n  /** [Required] List of hours for the schedule. */\n  hours: number[];\n  /** [Required] List of minutes for the schedule. */\n  minutes: number[];\n  /** List of month days for the schedule */\n  monthDays?: number[];\n  /** List of days for the schedule. */\n  weekDays?: WeekDay[];\n}\n\nexport interface ScheduleBase {\n  /** A system assigned id for the schedule. */\n  id?: string;\n  /** The current deployment state of schedule. */\n  provisioningStatus?: ScheduleProvisioningState;\n  /** Is the schedule enabled or disabled? */\n  status?: ScheduleStatus;\n}\n\n/** Defines an Aml Instance container. */\nexport interface ComputeInstanceContainer {\n  /** Name of the ComputeInstance container. */\n  name?: string;\n  /** Auto save settings. */\n  autosave?: Autosave;\n  /** Information of GPU. */\n  gpu?: string;\n  /** network of this container. */\n  network?: Network;\n  /** Environment information of this container. */\n  environment?: ComputeInstanceEnvironmentInfo;\n  /**\n   * services of this containers.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly services?: Record<string, unknown>[];\n}\n\n/** Environment information */\nexport interface ComputeInstanceEnvironmentInfo {\n  /** name of environment. */\n  name?: string;\n  /** version of environment. */\n  version?: string;\n}\n\n/** Defines an Aml Instance DataDisk. */\nexport interface ComputeInstanceDataDisk {\n  /** Caching type of Data Disk. */\n  caching?: Caching;\n  /** The initial disk size in gigabytes. */\n  diskSizeGB?: number;\n  /** The lun is used to uniquely identify each data disk. If attaching multiple disks, each should have a distinct lun. */\n  lun?: number;\n  /** type of this storage account. */\n  storageAccountType?: StorageAccountType;\n}\n\n/** Defines an Aml Instance DataMount. */\nexport interface ComputeInstanceDataMount {\n  /** Source of the ComputeInstance data mount. */\n  source?: string;\n  /** Data source type. */\n  sourceType?: SourceType;\n  /** name of the ComputeInstance data mount. */\n  mountName?: string;\n  /** Mount Action. */\n  mountAction?: MountAction;\n  /** who this data mount created by. */\n  createdBy?: string;\n  /** Path of this data mount. */\n  mountPath?: string;\n  /** Mount state. */\n  mountState?: MountState;\n  /** The time when the disk mounted. */\n  mountedOn?: Date;\n  /** Error of this data mount. */\n  error?: string;\n}\n\n/** Version of computeInstance. */\nexport interface ComputeInstanceVersion {\n  /** Runtime of compute instance. */\n  runtime?: string;\n}\n\n/** Properties(top level) of ComputeInstance */\nexport interface ComputeInstanceSchema {\n  /** Properties of ComputeInstance */\n  properties?: ComputeInstanceProperties;\n}\n\nexport interface VirtualMachineSchema {\n  properties?: VirtualMachineSchemaProperties;\n}\n\nexport interface VirtualMachineSchemaProperties {\n  /** Virtual Machine size */\n  virtualMachineSize?: string;\n  /** Port open for ssh connections. */\n  sshPort?: number;\n  /** Notebook server port open for ssh connections. */\n  notebookServerPort?: number;\n  /** Public IP address of the virtual machine. */\n  address?: string;\n  /** Admin credentials for virtual machine */\n  administratorAccount?: VirtualMachineSshCredentials;\n  /** Indicates whether this compute will be used for running notebooks. */\n  isNotebookInstanceCompute?: boolean;\n}\n\n/** Admin credentials for virtual machine */\nexport interface VirtualMachineSshCredentials {\n  /** Username of admin account */\n  username?: string;\n  /** Password of admin account */\n  password?: string;\n  /** Public key data */\n  publicKeyData?: string;\n  /** Private key data */\n  privateKeyData?: string;\n}\n\n/** HDInsight compute properties */\nexport interface HDInsightProperties {\n  /** Port open for ssh connections on the master node of the cluster. */\n  sshPort?: number;\n  /** Public IP address of the master node of the cluster. */\n  address?: string;\n  /** Admin credentials for master node of the cluster */\n  administratorAccount?: VirtualMachineSshCredentials;\n}\n\nexport interface HDInsightSchema {\n  /** HDInsight compute properties */\n  properties?: HDInsightProperties;\n}\n\n/** Properties of Databricks */\nexport interface DatabricksProperties {\n  /** Databricks access token */\n  databricksAccessToken?: string;\n  /** Workspace Url */\n  workspaceUrl?: string;\n}\n\nexport interface DatabricksSchema {\n  /** Properties of Databricks */\n  properties?: DatabricksProperties;\n}\n\nexport interface DataLakeAnalyticsSchema {\n  properties?: DataLakeAnalyticsSchemaProperties;\n}\n\nexport interface DataLakeAnalyticsSchemaProperties {\n  /** DataLake Store Account Name */\n  dataLakeStoreAccountName?: string;\n}\n\nexport interface SynapseSparkProperties {\n  /** Auto scale properties. */\n  autoScaleProperties?: AutoScaleProperties;\n  /** Auto pause properties. */\n  autoPauseProperties?: AutoPauseProperties;\n  /** Spark version. */\n  sparkVersion?: string;\n  /** The number of compute nodes currently assigned to the compute. */\n  nodeCount?: number;\n  /** Node size. */\n  nodeSize?: string;\n  /** Node size family. */\n  nodeSizeFamily?: string;\n  /** Azure subscription identifier. */\n  subscriptionId?: string;\n  /** Name of the resource group in which workspace is located. */\n  resourceGroup?: string;\n  /** Name of Azure Machine Learning workspace. */\n  workspaceName?: string;\n  /** Pool name. */\n  poolName?: string;\n}\n\n/** Auto scale properties */\nexport interface AutoScaleProperties {\n  minNodeCount?: number;\n  enabled?: boolean;\n  maxNodeCount?: number;\n}\n\n/** Auto pause properties */\nexport interface AutoPauseProperties {\n  delayInMinutes?: number;\n  enabled?: boolean;\n}\n\n/** Properties of AksComputeSecrets */\nexport interface AksComputeSecretsProperties {\n  /** Content of kubeconfig file that can be used to connect to the Kubernetes cluster. */\n  userKubeConfig?: string;\n  /** Content of kubeconfig file that can be used to connect to the Kubernetes cluster. */\n  adminKubeConfig?: string;\n  /** Image registry pull secret. */\n  imagePullSecretName?: string;\n}\n\nexport interface VirtualMachineSecretsSchema {\n  /** Admin credentials for virtual machine. */\n  administratorAccount?: VirtualMachineSshCredentials;\n}\n\n/** Properties of Databricks Compute Secrets */\nexport interface DatabricksComputeSecretsProperties {\n  /** access token for databricks account. */\n  databricksAccessToken?: string;\n}\n\nexport interface WorkspaceConnectionUsernamePassword {\n  username?: string;\n  password?: string;\n}\n\nexport interface WorkspaceConnectionPersonalAccessToken {\n  pat?: string;\n}\n\nexport interface WorkspaceConnectionSharedAccessSignature {\n  sas?: string;\n}\n\nexport interface WorkspaceConnectionManagedIdentity {\n  resourceId?: string;\n  clientId?: string;\n}\n\n/** Asset input type. */\nexport interface AssetJobInput {\n  /** Input Asset Delivery Mode. */\n  mode?: InputDeliveryMode;\n  /** [Required] Input Asset URI. */\n  uri: string;\n}\n\n/** Asset output type. */\nexport interface AssetJobOutput {\n  /** Output Asset Delivery Mode. */\n  mode?: OutputDeliveryMode;\n  /** Output Asset URI. */\n  uri?: string;\n}\n\n/** The desired maximum forecast horizon in units of time-series frequency. */\nexport interface ForecastHorizon {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  mode: \"Auto\" | \"Custom\";\n}\n\n/** Job output definition container information on where to find job output/logs. */\nexport interface JobOutput {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  jobOutputType:\n    | \"custom_model\"\n    | \"mlflow_model\"\n    | \"mltable\"\n    | \"triton_model\"\n    | \"uri_file\"\n    | \"uri_folder\";\n  /** Description for the output. */\n  description?: string;\n}\n\n/**\n * AutoML vertical class.\n * Base class for AutoML verticals - TableVertical/ImageVertical/NLPVertical\n */\nexport interface AutoMLVertical {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  taskType:\n    | \"Classification\"\n    | \"Forecasting\"\n    | \"ImageClassification\"\n    | \"ImageClassificationMultilabel\"\n    | \"ImageInstanceSegmentation\"\n    | \"ImageObjectDetection\"\n    | \"Regression\"\n    | \"TextClassification\"\n    | \"TextClassificationMultilabel\"\n    | \"TextNER\";\n  /** Log verbosity for the job. */\n  logVerbosity?: LogVerbosity;\n  /**\n   * Target column name: This is prediction values column.\n   * Also known as label column name in context of classification tasks.\n   */\n  targetColumnName?: string;\n  /** [Required] Training data input. */\n  trainingData: MLTableJobInput;\n}\n\n/** Command job definition. */\nexport interface JobInput {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  jobInputType:\n    | \"mltable\"\n    | \"custom_model\"\n    | \"mlflow_model\"\n    | \"literal\"\n    | \"triton_model\"\n    | \"uri_file\"\n    | \"uri_folder\";\n  /** Description for the input. */\n  description?: string;\n}\n\n/** N-Cross validations value. */\nexport interface NCrossValidations {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  mode: \"Auto\" | \"Custom\";\n}\n\n/** Forecasting seasonality. */\nexport interface Seasonality {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  mode: \"Auto\" | \"Custom\";\n}\n\n/** The number of past periods to lag from the target column. */\nexport interface TargetLags {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  mode: \"Auto\" | \"Custom\";\n}\n\n/** Forecasting target rolling window size. */\nexport interface TargetRollingWindowSize {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  mode: \"Auto\" | \"Custom\";\n}\n\n/** Early termination policies enable canceling poor-performing runs before they complete */\nexport interface EarlyTerminationPolicy {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  policyType: \"Bandit\" | \"MedianStopping\" | \"TruncationSelection\";\n  /** Number of intervals by which to delay the first evaluation. */\n  delayEvaluation?: number;\n  /** Interval (number of runs) between policy evaluations. */\n  evaluationInterval?: number;\n}\n\n/**\n * The Sampling Algorithm used to generate hyperparameter values, along with properties to\n * configure the algorithm\n */\nexport interface SamplingAlgorithm {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  samplingAlgorithmType: \"Bayesian\" | \"Grid\" | \"Random\";\n}\n\n/** Training related configuration. */\nexport interface TrainingSettings {\n  /** Enable recommendation of DNN models. */\n  enableDnnTraining?: boolean;\n  /** Flag to turn on explainability on best model. */\n  enableModelExplainability?: boolean;\n  /** Flag for enabling onnx compatible models. */\n  enableOnnxCompatibleModels?: boolean;\n  /** Enable stack ensemble run. */\n  enableStackEnsemble?: boolean;\n  /** Enable voting ensemble run. */\n  enableVoteEnsemble?: boolean;\n  /**\n   * During VotingEnsemble and StackEnsemble model generation, multiple fitted models from the previous child runs are downloaded.\n   * Configure this parameter with a higher value than 300 secs, if more time is needed.\n   */\n  ensembleModelDownloadTimeout?: string;\n  /** Stack ensemble settings for stack ensemble run. */\n  stackEnsembleSettings?: StackEnsembleSettings;\n}\n\n/** Advances setting to customize StackEnsemble run. */\nexport interface StackEnsembleSettings {\n  /** Optional parameters to pass to the initializer of the meta-learner. */\n  stackMetaLearnerKWargs?: Record<string, unknown>;\n  /** Specifies the proportion of the training set (when choosing train and validation type of training) to be reserved for training the meta-learner. Default value is 0.2. */\n  stackMetaLearnerTrainPercentage?: number;\n  /** The meta-learner is a model trained on the output of the individual heterogeneous models. */\n  stackMetaLearnerType?: StackMetaLearnerType;\n}\n\n/** Abstract class for AutoML tasks that use table dataset as input - such as Classification/Regression/Forecasting. */\nexport interface TableVertical {\n  /** Columns to use for CVSplit data. */\n  cvSplitColumnNames?: string[];\n  /** Featurization inputs needed for AutoML job. */\n  featurizationSettings?: TableVerticalFeaturizationSettings;\n  /** Execution constraints for AutoMLJob. */\n  limitSettings?: TableVerticalLimitSettings;\n  /**\n   * Number of cross validation folds to be applied on training dataset\n   * when validation dataset is not provided.\n   */\n  nCrossValidations?: NCrossValidationsUnion;\n  /** Test data input. */\n  testData?: MLTableJobInput;\n  /**\n   * The fraction of test dataset that needs to be set aside for validation purpose.\n   * Values between (0.0 , 1.0)\n   * Applied when validation dataset is not provided.\n   */\n  testDataSize?: number;\n  /** Validation data inputs. */\n  validationData?: MLTableJobInput;\n  /**\n   * The fraction of training dataset that needs to be set aside for validation purpose.\n   * Values between (0.0 , 1.0)\n   * Applied when validation dataset is not provided.\n   */\n  validationDataSize?: number;\n  /** The name of the sample weight column. Automated ML supports a weighted column as an input, causing rows in the data to be weighted up or down. */\n  weightColumnName?: string;\n}\n\n/** Column transformer parameters. */\nexport interface ColumnTransformer {\n  /** Fields to apply transformer logic on. */\n  fields?: string[];\n  /**\n   * Different properties to be passed to transformer.\n   * Input expected is dictionary of key,value pairs in JSON format.\n   */\n  parameters?: Record<string, unknown>;\n}\n\n/** Featurization Configuration. */\nexport interface FeaturizationSettings {\n  /** Dataset language, useful for the text data. */\n  datasetLanguage?: string;\n}\n\n/** Job execution constraints. */\nexport interface TableVerticalLimitSettings {\n  /** Enable early termination, determines whether or not if AutoMLJob will terminate early if there is no score improvement in last 20 iterations. */\n  enableEarlyTermination?: boolean;\n  /** Exit score for the AutoML job. */\n  exitScore?: number;\n  /** Maximum Concurrent iterations. */\n  maxConcurrentTrials?: number;\n  /** Max cores per iteration. */\n  maxCoresPerTrial?: number;\n  /** Number of iterations. */\n  maxTrials?: number;\n  /** AutoML job timeout. */\n  timeout?: string;\n  /** Iteration timeout. */\n  trialTimeout?: string;\n}\n\n/** Base definition for job distribution configuration. */\nexport interface DistributionConfiguration {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  distributionType: \"Mpi\" | \"PyTorch\" | \"TensorFlow\";\n}\n\nexport interface JobLimits {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  jobLimitsType: \"Command\" | \"Sweep\";\n  /** The max run duration in ISO 8601 format, after which the job will be cancelled. Only supports duration with precision as low as Seconds. */\n  timeout?: string;\n}\n\n/** Resource requirements for each container instance within an online deployment. */\nexport interface ContainerResourceRequirements {\n  /** Container resource limit info: */\n  containerResourceLimits?: ContainerResourceSettings;\n  /** Container resource request info: */\n  containerResourceRequests?: ContainerResourceSettings;\n}\n\nexport interface ContainerResourceSettings {\n  /**\n   * Number of vCPUs request/limit for container. More info:\n   * https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/\n   */\n  cpu?: string;\n  /**\n   * Number of Nvidia GPU cards request/limit for container. More info:\n   * https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/\n   */\n  gpu?: string;\n  /**\n   * Memory size request/limit for container. More info:\n   * https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/\n   */\n  memory?: string;\n}\n\n/** Forecasting specific parameters. */\nexport interface ForecastingSettings {\n  /**\n   * Country or region for holidays for forecasting tasks.\n   * These should be ISO 3166 two-letter country/region codes, for example 'US' or 'GB'.\n   */\n  countryOrRegionForHolidays?: string;\n  /**\n   * Number of periods between the origin time of one CV fold and the next fold. For\n   * example, if `CVStepSize` = 3 for daily data, the origin time for each fold will be\n   * three days apart.\n   */\n  cvStepSize?: number;\n  /** Flag for generating lags for the numeric features with 'auto' or null. */\n  featureLags?: FeatureLags;\n  /** The desired maximum forecast horizon in units of time-series frequency. */\n  forecastHorizon?: ForecastHorizonUnion;\n  /** When forecasting, this parameter represents the period with which the forecast is desired, for example daily, weekly, yearly, etc. The forecast frequency is dataset frequency by default. */\n  frequency?: string;\n  /**\n   * Set time series seasonality as an integer multiple of the series frequency.\n   * If seasonality is set to 'auto', it will be inferred.\n   */\n  seasonality?: SeasonalityUnion;\n  /** The parameter defining how if AutoML should handle short time series. */\n  shortSeriesHandlingConfig?: ShortSeriesHandlingConfiguration;\n  /**\n   * The function to be used to aggregate the time series target column to conform to a user specified frequency.\n   * If the TargetAggregateFunction is set i.e. not 'None', but the freq parameter is not set, the error is raised. The possible target aggregation functions are: \"sum\", \"max\", \"min\" and \"mean\".\n   */\n  targetAggregateFunction?: TargetAggregationFunction;\n  /** The number of past periods to lag from the target column. */\n  targetLags?: TargetLagsUnion;\n  /** The number of past periods used to create a rolling window average of the target column. */\n  targetRollingWindowSize?: TargetRollingWindowSizeUnion;\n  /** The name of the time column. This parameter is required when forecasting to specify the datetime column in the input data used for building the time series and inferring its frequency. */\n  timeColumnName?: string;\n  /**\n   * The names of columns used to group a timeseries. It can be used to create multiple series.\n   * If grain is not defined, the data set is assumed to be one time-series. This parameter is used with task type forecasting.\n   */\n  timeSeriesIdColumnNames?: string[];\n  /** Configure STL Decomposition of the time-series target column. */\n  useStl?: UseStl;\n}\n\n/**\n * Settings used for training the model.\n * For more information on the available settings please visit the official documentation:\n * https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.\n */\nexport interface ImageModelSettings {\n  /** Settings for advanced scenarios. */\n  advancedSettings?: string;\n  /** Enable AMSGrad when optimizer is 'adam' or 'adamw'. */\n  amsGradient?: boolean;\n  /** Settings for using Augmentations. */\n  augmentations?: string;\n  /** Value of 'beta1' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1]. */\n  beta1?: number;\n  /** Value of 'beta2' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1]. */\n  beta2?: number;\n  /** Frequency to store model checkpoints. Must be a positive integer. */\n  checkpointFrequency?: number;\n  /** The pretrained checkpoint model for incremental training. */\n  checkpointModel?: MLFlowModelJobInput;\n  /** The id of a previous run that has a pretrained checkpoint for incremental training. */\n  checkpointRunId?: string;\n  /** Whether to use distributed training. */\n  distributed?: boolean;\n  /** Enable early stopping logic during training. */\n  earlyStopping?: boolean;\n  /**\n   * Minimum number of epochs or validation evaluations to wait before primary metric improvement\n   * is tracked for early stopping. Must be a positive integer.\n   */\n  earlyStoppingDelay?: number;\n  /**\n   * Minimum number of epochs or validation evaluations with no primary metric improvement before\n   * the run is stopped. Must be a positive integer.\n   */\n  earlyStoppingPatience?: number;\n  /** Enable normalization when exporting ONNX model. */\n  enableOnnxNormalization?: boolean;\n  /** Frequency to evaluate validation dataset to get metric scores. Must be a positive integer. */\n  evaluationFrequency?: number;\n  /**\n   * Gradient accumulation means running a configured number of \"GradAccumulationStep\" steps without\n   * updating the model weights while accumulating the gradients of those steps, and then using\n   * the accumulated gradients to compute the weight updates. Must be a positive integer.\n   */\n  gradientAccumulationStep?: number;\n  /**\n   * Number of layers to freeze for the model. Must be a positive integer.\n   * For instance, passing 2 as value for 'seresnext' means\n   * freezing layer0 and layer1. For a full list of models supported and details on layer freeze, please\n   * see: https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.\n   */\n  layersToFreeze?: number;\n  /** Initial learning rate. Must be a float in the range [0, 1]. */\n  learningRate?: number;\n  /** Type of learning rate scheduler. Must be 'warmup_cosine' or 'step'. */\n  learningRateScheduler?: LearningRateScheduler;\n  /**\n   * Name of the model to use for training.\n   * For more information on the available models please visit the official documentation:\n   * https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.\n   */\n  modelName?: string;\n  /** Value of momentum when optimizer is 'sgd'. Must be a float in the range [0, 1]. */\n  momentum?: number;\n  /** Enable nesterov when optimizer is 'sgd'. */\n  nesterov?: boolean;\n  /** Number of training epochs. Must be a positive integer. */\n  numberOfEpochs?: number;\n  /** Number of data loader workers. Must be a non-negative integer. */\n  numberOfWorkers?: number;\n  /** Type of optimizer. */\n  optimizer?: StochasticOptimizer;\n  /** Random seed to be used when using deterministic training. */\n  randomSeed?: number;\n  /** Value of gamma when learning rate scheduler is 'step'. Must be a float in the range [0, 1]. */\n  stepLRGamma?: number;\n  /** Value of step size when learning rate scheduler is 'step'. Must be a positive integer. */\n  stepLRStepSize?: number;\n  /** Training batch size. Must be a positive integer. */\n  trainingBatchSize?: number;\n  /** Validation batch size. Must be a positive integer. */\n  validationBatchSize?: number;\n  /** Value of cosine cycle when learning rate scheduler is 'warmup_cosine'. Must be a float in the range [0, 1]. */\n  warmupCosineLRCycles?: number;\n  /** Value of warmup epochs when learning rate scheduler is 'warmup_cosine'. Must be a positive integer. */\n  warmupCosineLRWarmupEpochs?: number;\n  /** Value of weight decay when optimizer is 'sgd', 'adam', or 'adamw'. Must be a float in the range[0, 1]. */\n  weightDecay?: number;\n}\n\n/**\n * Distribution expressions to sweep over values of model settings.\n * <example>\n * Some examples are:\n * <code>\n * ModelName = \"choice('seresnext', 'resnest50')\";\n * LearningRate = \"uniform(0.001, 0.01)\";\n * LayersToFreeze = \"choice(0, 2)\";\n * </code></example>\n * All distributions can be specified as distribution_name(min, max) or choice(val1, val2, ..., valn)\n * where distribution name can be: uniform, quniform, loguniform, etc\n * For more details on how to compose distribution expressions please check the documentation:\n * https://docs.microsoft.com/en-us/azure/machine-learning/how-to-tune-hyperparameters\n * For more information on the available settings please visit the official documentation:\n * https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.\n */\nexport interface ImageModelDistributionSettings {\n  /** Enable AMSGrad when optimizer is 'adam' or 'adamw'. */\n  amsGradient?: string;\n  /** Settings for using Augmentations. */\n  augmentations?: string;\n  /** Value of 'beta1' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1]. */\n  beta1?: string;\n  /** Value of 'beta2' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1]. */\n  beta2?: string;\n  /** Whether to use distributer training. */\n  distributed?: string;\n  /** Enable early stopping logic during training. */\n  earlyStopping?: string;\n  /**\n   * Minimum number of epochs or validation evaluations to wait before primary metric improvement\n   * is tracked for early stopping. Must be a positive integer.\n   */\n  earlyStoppingDelay?: string;\n  /**\n   * Minimum number of epochs or validation evaluations with no primary metric improvement before\n   * the run is stopped. Must be a positive integer.\n   */\n  earlyStoppingPatience?: string;\n  /** Enable normalization when exporting ONNX model. */\n  enableOnnxNormalization?: string;\n  /** Frequency to evaluate validation dataset to get metric scores. Must be a positive integer. */\n  evaluationFrequency?: string;\n  /**\n   * Gradient accumulation means running a configured number of \"GradAccumulationStep\" steps without\n   * updating the model weights while accumulating the gradients of those steps, and then using\n   * the accumulated gradients to compute the weight updates. Must be a positive integer.\n   */\n  gradientAccumulationStep?: string;\n  /**\n   * Number of layers to freeze for the model. Must be a positive integer.\n   * For instance, passing 2 as value for 'seresnext' means\n   * freezing layer0 and layer1. For a full list of models supported and details on layer freeze, please\n   * see: https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.\n   */\n  layersToFreeze?: string;\n  /** Initial learning rate. Must be a float in the range [0, 1]. */\n  learningRate?: string;\n  /** Type of learning rate scheduler. Must be 'warmup_cosine' or 'step'. */\n  learningRateScheduler?: string;\n  /**\n   * Name of the model to use for training.\n   * For more information on the available models please visit the official documentation:\n   * https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.\n   */\n  modelName?: string;\n  /** Value of momentum when optimizer is 'sgd'. Must be a float in the range [0, 1]. */\n  momentum?: string;\n  /** Enable nesterov when optimizer is 'sgd'. */\n  nesterov?: string;\n  /** Number of training epochs. Must be a positive integer. */\n  numberOfEpochs?: string;\n  /** Number of data loader workers. Must be a non-negative integer. */\n  numberOfWorkers?: string;\n  /** Type of optimizer. Must be either 'sgd', 'adam', or 'adamw'. */\n  optimizer?: string;\n  /** Random seed to be used when using deterministic training. */\n  randomSeed?: string;\n  /** Value of gamma when learning rate scheduler is 'step'. Must be a float in the range [0, 1]. */\n  stepLRGamma?: string;\n  /** Value of step size when learning rate scheduler is 'step'. Must be a positive integer. */\n  stepLRStepSize?: string;\n  /** Training batch size. Must be a positive integer. */\n  trainingBatchSize?: string;\n  /** Validation batch size. Must be a positive integer. */\n  validationBatchSize?: string;\n  /** Value of cosine cycle when learning rate scheduler is 'warmup_cosine'. Must be a float in the range [0, 1]. */\n  warmupCosineLRCycles?: string;\n  /** Value of warmup epochs when learning rate scheduler is 'warmup_cosine'. Must be a positive integer. */\n  warmupCosineLRWarmupEpochs?: string;\n  /** Value of weight decay when optimizer is 'sgd', 'adam', or 'adamw'. Must be a float in the range[0, 1]. */\n  weightDecay?: string;\n}\n\n/**\n * Abstract class for AutoML tasks that train image (computer vision) models -\n * such as Image Classification / Image Classification Multilabel / Image Object Detection / Image Instance Segmentation.\n */\nexport interface ImageVertical {\n  /** [Required] Limit settings for the AutoML job. */\n  limitSettings: ImageLimitSettings;\n  /** Model sweeping and hyperparameter sweeping related settings. */\n  sweepSettings?: ImageSweepSettings;\n  /** Validation data inputs. */\n  validationData?: MLTableJobInput;\n  /**\n   * The fraction of training dataset that needs to be set aside for validation purpose.\n   * Values between (0.0 , 1.0)\n   * Applied when validation dataset is not provided.\n   */\n  validationDataSize?: number;\n}\n\n/** Limit settings for the AutoML job. */\nexport interface ImageLimitSettings {\n  /** Maximum number of concurrent AutoML iterations. */\n  maxConcurrentTrials?: number;\n  /** Maximum number of AutoML iterations. */\n  maxTrials?: number;\n  /** AutoML job timeout. */\n  timeout?: string;\n}\n\n/** Model sweeping and hyperparameter sweeping related settings. */\nexport interface ImageSweepSettings {\n  /** Type of early termination policy. */\n  earlyTermination?: EarlyTerminationPolicyUnion;\n  /** [Required] Type of the hyperparameter sampling algorithms. */\n  samplingAlgorithm: SamplingAlgorithmType;\n}\n\n/**\n * Abstract class for NLP related AutoML tasks.\n * NLP - Natural Language Processing.\n */\nexport interface NlpVertical {\n  /** Featurization inputs needed for AutoML job. */\n  featurizationSettings?: NlpVerticalFeaturizationSettings;\n  /** Execution constraints for AutoMLJob. */\n  limitSettings?: NlpVerticalLimitSettings;\n  /** Validation data inputs. */\n  validationData?: MLTableJobInput;\n}\n\n/** Job execution constraints. */\nexport interface NlpVerticalLimitSettings {\n  /** Maximum Concurrent AutoML iterations. */\n  maxConcurrentTrials?: number;\n  /** Number of AutoML iterations. */\n  maxTrials?: number;\n  /** AutoML job timeout. */\n  timeout?: string;\n}\n\n/** Optimization objective. */\nexport interface Objective {\n  /** [Required] Defines supported metric goals for hyperparameter tuning */\n  goal: Goal;\n  /** [Required] Name of the metric to optimize. */\n  primaryMetric: string;\n}\n\n/** Trial component definition. */\nexport interface TrialComponent {\n  /** ARM resource ID of the code asset. */\n  codeId?: string;\n  /** [Required] The command to execute on startup of the job. eg. \"python train.py\" */\n  command: string;\n  /** Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null. */\n  distribution?: DistributionConfigurationUnion;\n  /** [Required] The ARM resource ID of the Environment specification for the job. */\n  environmentId: string;\n  /** Environment variables included in the job. */\n  environmentVariables?: { [propertyName: string]: string | null };\n  /** Compute Resource configuration for the job. */\n  resources?: JobResourceConfiguration;\n}\n\n/** The Private Endpoint Connection resource. */\nexport interface PrivateEndpointConnection extends Resource {\n  /** The identity of the resource. */\n  identity?: ManagedServiceIdentity;\n  /** Specifies the location of the resource. */\n  location?: string;\n  /** Contains resource tags defined as key/value pairs. */\n  tags?: { [propertyName: string]: string };\n  /** The sku of the workspace. */\n  sku?: Sku;\n  /** The resource of private end point. */\n  privateEndpoint?: PrivateEndpoint;\n  /** A collection of information about the state of the connection between service consumer and provider. */\n  privateLinkServiceConnectionState?: PrivateLinkServiceConnectionState;\n  /**\n   * The provisioning state of the private endpoint connection resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: PrivateEndpointConnectionProvisioningState;\n}\n\n/** An object that represents a machine learning workspace. */\nexport interface Workspace extends Resource {\n  /** The identity of the resource. */\n  identity?: ManagedServiceIdentity;\n  /** Specifies the location of the resource. */\n  location?: string;\n  /** Contains resource tags defined as key/value pairs. */\n  tags?: { [propertyName: string]: string };\n  /** The sku of the workspace. */\n  sku?: Sku;\n  /**\n   * The immutable id associated with this workspace.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly workspaceId?: string;\n  /** The description of this workspace. */\n  description?: string;\n  /** The friendly name for this workspace. This name in mutable */\n  friendlyName?: string;\n  /** ARM id of the key vault associated with this workspace. This cannot be changed once the workspace has been created */\n  keyVault?: string;\n  /** ARM id of the application insights associated with this workspace. */\n  applicationInsights?: string;\n  /** ARM id of the container registry associated with this workspace. */\n  containerRegistry?: string;\n  /** ARM id of the storage account associated with this workspace. This cannot be changed once the workspace has been created */\n  storageAccount?: string;\n  /** Url for the discovery service to identify regional endpoints for machine learning experimentation services */\n  discoveryUrl?: string;\n  /**\n   * The current deployment state of workspace resource. The provisioningState is to indicate states for resource provisioning.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** The encryption settings of Azure ML workspace. */\n  encryption?: EncryptionProperty;\n  /** The flag to signal HBI data in the workspace and reduce diagnostic data collected by the service */\n  hbiWorkspace?: boolean;\n  /**\n   * The name of the managed resource group created by workspace RP in customer subscription if the workspace is CMK workspace\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly serviceProvisionedResourceGroup?: string;\n  /**\n   * Count of private connections in the workspace\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly privateLinkCount?: number;\n  /** The compute name for image build */\n  imageBuildCompute?: string;\n  /** The flag to indicate whether to allow public access when behind VNet. */\n  allowPublicAccessWhenBehindVnet?: boolean;\n  /** Whether requests from Public Network are allowed. */\n  publicNetworkAccess?: PublicNetworkAccess;\n  /**\n   * The list of private endpoint connections in the workspace.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly privateEndpointConnections?: PrivateEndpointConnection[];\n  /** The list of shared private link resources in this workspace. */\n  sharedPrivateLinkResources?: SharedPrivateLinkResource[];\n  /**\n   * The notebook info of Azure ML workspace.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly notebookInfo?: NotebookResourceInfo;\n  /** The service managed resource settings. */\n  serviceManagedResourcesSettings?: ServiceManagedResourcesSettings;\n  /** The user assigned identity resource id that represents the workspace identity. */\n  primaryUserAssignedIdentity?: string;\n  /**\n   * The tenant id associated with this workspace.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantId?: string;\n  /**\n   * If the storage associated with the workspace has hierarchical namespace(HNS) enabled.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly storageHnsEnabled?: boolean;\n  /**\n   * The URI associated with this workspace that machine learning flow must point at to set up tracking.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly mlFlowTrackingUri?: string;\n  /** Enabling v1_legacy_mode may prevent you from using features provided by the v2 API. */\n  v1LegacyMode?: boolean;\n}\n\n/** Machine Learning compute object wrapped into ARM resource envelope. */\nexport interface ComputeResource extends Resource, ComputeResourceSchema {\n  /** The identity of the resource. */\n  identity?: ManagedServiceIdentity;\n  /** Specifies the location of the resource. */\n  location?: string;\n  /** Contains resource tags defined as key/value pairs. */\n  tags?: { [propertyName: string]: string };\n  /** The sku of the workspace. */\n  sku?: Sku;\n}\n\n/** A private link resource */\nexport interface PrivateLinkResource extends Resource {\n  /** The identity of the resource. */\n  identity?: ManagedServiceIdentity;\n  /** Specifies the location of the resource. */\n  location?: string;\n  /** Contains resource tags defined as key/value pairs. */\n  tags?: { [propertyName: string]: string };\n  /** The sku of the workspace. */\n  sku?: Sku;\n  /**\n   * The private link resource group id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly groupId?: string;\n  /**\n   * The private link resource required member names.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly requiredMembers?: string[];\n  /** The private link resource Private link DNS zone name. */\n  requiredZoneNames?: string[];\n}\n\nexport interface WorkspaceConnectionPropertiesV2BasicResource extends Resource {\n  properties: WorkspaceConnectionPropertiesV2Union;\n}\n\n/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */\nexport interface TrackedResource extends Resource {\n  /** Resource tags. */\n  tags?: { [propertyName: string]: string };\n  /** The geo-location where the resource lives */\n  location: string;\n}\n\n/** Azure Resource Manager resource envelope. */\nexport interface CodeContainer extends Resource {\n  /** [Required] Additional attributes of the entity. */\n  properties: CodeContainerProperties;\n}\n\n/** Azure Resource Manager resource envelope. */\nexport interface CodeVersion extends Resource {\n  /** [Required] Additional attributes of the entity. */\n  properties: CodeVersionProperties;\n}\n\n/** Azure Resource Manager resource envelope. */\nexport interface ComponentContainer extends Resource {\n  /** [Required] Additional attributes of the entity. */\n  properties: ComponentContainerProperties;\n}\n\n/** Azure Resource Manager resource envelope. */\nexport interface ComponentVersion extends Resource {\n  /** [Required] Additional attributes of the entity. */\n  properties: ComponentVersionProperties;\n}\n\n/** Azure Resource Manager resource envelope. */\nexport interface DataContainer extends Resource {\n  /** [Required] Additional attributes of the entity. */\n  properties: DataContainerProperties;\n}\n\n/** Azure Resource Manager resource envelope. */\nexport interface DataVersionBase extends Resource {\n  /** [Required] Additional attributes of the entity. */\n  properties: DataVersionBasePropertiesUnion;\n}\n\n/** Azure Resource Manager resource envelope. */\nexport interface Datastore extends Resource {\n  /** [Required] Additional attributes of the entity. */\n  properties: DatastorePropertiesUnion;\n}\n\n/** Azure Resource Manager resource envelope. */\nexport interface EnvironmentContainer extends Resource {\n  /** [Required] Additional attributes of the entity. */\n  properties: EnvironmentContainerProperties;\n}\n\n/** Azure Resource Manager resource envelope. */\nexport interface EnvironmentVersion extends Resource {\n  /** [Required] Additional attributes of the entity. */\n  properties: EnvironmentVersionProperties;\n}\n\n/** Azure Resource Manager resource envelope. */\nexport interface JobBase extends Resource {\n  /** [Required] Additional attributes of the entity. */\n  properties: JobBasePropertiesUnion;\n}\n\n/** Azure Resource Manager resource envelope. */\nexport interface ModelContainer extends Resource {\n  /** [Required] Additional attributes of the entity. */\n  properties: ModelContainerProperties;\n}\n\n/** Azure Resource Manager resource envelope. */\nexport interface ModelVersion extends Resource {\n  /** [Required] Additional attributes of the entity. */\n  properties: ModelVersionProperties;\n}\n\n/** Azure Resource Manager resource envelope. */\nexport interface Schedule extends Resource {\n  /** [Required] Additional attributes of the entity. */\n  properties: ScheduleProperties;\n}\n\n/** A Machine Learning compute based on AKS. */\nexport interface Aks extends Compute, AKSSchema {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  computeType: \"AKS\";\n}\n\n/** A Machine Learning compute based on Kubernetes Compute. */\nexport interface Kubernetes extends Compute, KubernetesSchema {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  computeType: \"Kubernetes\";\n}\n\n/** An Azure Machine Learning compute. */\nexport interface AmlCompute extends Compute, AmlComputeSchema {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  computeType: \"AmlCompute\";\n}\n\n/** An Azure Machine Learning compute instance. */\nexport interface ComputeInstance extends Compute, ComputeInstanceSchema {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  computeType: \"ComputeInstance\";\n}\n\n/** A Machine Learning compute based on Azure Virtual Machines. */\nexport interface VirtualMachine extends Compute, VirtualMachineSchema {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  computeType: \"VirtualMachine\";\n}\n\n/** A HDInsight compute. */\nexport interface HDInsight extends Compute, HDInsightSchema {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  computeType: \"HDInsight\";\n}\n\n/** A DataFactory compute. */\nexport interface DataFactory extends Compute {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  computeType: \"DataFactory\";\n}\n\n/** A DataFactory compute. */\nexport interface Databricks extends Compute, DatabricksSchema {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  computeType: \"Databricks\";\n}\n\n/** A DataLakeAnalytics compute. */\nexport interface DataLakeAnalytics extends Compute, DataLakeAnalyticsSchema {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  computeType: \"DataLakeAnalytics\";\n}\n\n/** A SynapseSpark compute. */\nexport interface SynapseSpark extends Compute {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  computeType: \"SynapseSpark\";\n  properties?: SynapseSparkProperties;\n}\n\n/** Secrets related to a Machine Learning compute based on AKS. */\nexport interface AksComputeSecrets\n  extends ComputeSecrets,\n    AksComputeSecretsProperties {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  computeType: \"AKS\";\n}\n\n/** Secrets related to a Machine Learning compute based on AKS. */\nexport interface VirtualMachineSecrets\n  extends ComputeSecrets,\n    VirtualMachineSecretsSchema {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  computeType: \"VirtualMachine\";\n}\n\n/** Secrets related to a Machine Learning compute based on Databricks. */\nexport interface DatabricksComputeSecrets\n  extends ComputeSecrets,\n    DatabricksComputeSecretsProperties {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  computeType: \"Databricks\";\n}\n\nexport interface PATAuthTypeWorkspaceConnectionProperties\n  extends WorkspaceConnectionPropertiesV2 {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  authType: \"PAT\";\n  credentials?: WorkspaceConnectionPersonalAccessToken;\n}\n\nexport interface SASAuthTypeWorkspaceConnectionProperties\n  extends WorkspaceConnectionPropertiesV2 {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  authType: \"SAS\";\n  credentials?: WorkspaceConnectionSharedAccessSignature;\n}\n\nexport interface UsernamePasswordAuthTypeWorkspaceConnectionProperties\n  extends WorkspaceConnectionPropertiesV2 {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  authType: \"UsernamePassword\";\n  credentials?: WorkspaceConnectionUsernamePassword;\n}\n\nexport interface NoneAuthTypeWorkspaceConnectionProperties\n  extends WorkspaceConnectionPropertiesV2 {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  authType: \"None\";\n}\n\nexport interface ManagedIdentityAuthTypeWorkspaceConnectionProperties\n  extends WorkspaceConnectionPropertiesV2 {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  authType: \"ManagedIdentity\";\n  credentials?: WorkspaceConnectionManagedIdentity;\n}\n\n/** Batch endpoint configuration. */\nexport interface BatchEndpointProperties extends EndpointPropertiesBase {\n  /** Default values for Batch Endpoint */\n  defaults?: BatchEndpointDefaults;\n  /**\n   * Provisioning state for the endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: EndpointProvisioningState;\n}\n\n/** Online endpoint configuration */\nexport interface OnlineEndpointProperties extends EndpointPropertiesBase {\n  /**\n   * ARM resource ID of the compute if it exists.\n   * optional\n   */\n  compute?: string;\n  /**\n   * Provisioning state for the endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: EndpointProvisioningState;\n  /** Set to \"Enabled\" for endpoints that should allow public access when Private Link is enabled. */\n  publicNetworkAccess?: PublicNetworkAccessType;\n  /** Percentage of traffic from endpoint to divert to each deployment. Traffic values need to sum to 100. */\n  traffic?: { [propertyName: string]: number };\n}\n\n/** Strictly used in update requests. */\nexport interface PartialMinimalTrackedResourceWithIdentity\n  extends PartialMinimalTrackedResource {\n  /** Managed service identity (system assigned and/or user assigned identities) */\n  identity?: PartialManagedServiceIdentity;\n}\n\n/** Strictly used in update requests. */\nexport interface PartialMinimalTrackedResourceWithSku\n  extends PartialMinimalTrackedResource {\n  /** Sku details required for ARM contract for Autoscaling. */\n  sku?: PartialSku;\n}\n\n/** Reference to an asset via its path in a datastore. */\nexport interface DataPathAssetReference extends AssetReferenceBase {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  referenceType: \"DataPath\";\n  /** ARM resource ID of the datastore where the asset is located. */\n  datastoreId?: string;\n  /** The path of the file/directory in the datastore. */\n  path?: string;\n}\n\n/** Reference to an asset via its ARM resource ID. */\nexport interface IdAssetReference extends AssetReferenceBase {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  referenceType: \"Id\";\n  /** [Required] ARM resource ID of the asset. */\n  assetId: string;\n}\n\n/** Reference to an asset via its path in a job output. */\nexport interface OutputPathAssetReference extends AssetReferenceBase {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  referenceType: \"OutputPath\";\n  /** ARM resource ID of the job. */\n  jobId?: string;\n  /** The path of the file/directory in the job output. */\n  path?: string;\n}\n\nexport interface DeploymentResourceConfiguration\n  extends ResourceConfiguration {}\n\nexport interface JobResourceConfiguration extends ResourceConfiguration {\n  /** Extra arguments to pass to the Docker run command. This would override any parameters that have already been set by the system, or in this section. This parameter is only supported for Azure ML compute types. */\n  dockerArgs?: string;\n  /** Size of the docker container's shared memory block. This should be in the format of (number)(unit) where number as to be greater than 0 and the unit can be one of b(bytes), k(kilobytes), m(megabytes), or g(gigabytes). */\n  shmSize?: string;\n}\n\n/** Batch inference settings per deployment. */\nexport interface BatchDeploymentProperties\n  extends EndpointDeploymentPropertiesBase {\n  /** Compute target for batch inference operation. */\n  compute?: string;\n  /**\n   * Error threshold, if the error count for the entire input goes above this value,\n   * the batch inference will be aborted. Range is [-1, int.MaxValue].\n   * For FileDataset, this value is the count of file failures.\n   * For TabularDataset, this value is the count of record failures.\n   * If set to -1 (the lower bound), all failures during batch inference will be ignored.\n   */\n  errorThreshold?: number;\n  /** Logging level for batch inference operation. */\n  loggingLevel?: BatchLoggingLevel;\n  /** Indicates maximum number of parallelism per instance. */\n  maxConcurrencyPerInstance?: number;\n  /**\n   * Size of the mini-batch passed to each batch invocation.\n   * For FileDataset, this is the number of files per mini-batch.\n   * For TabularDataset, this is the size of the records in bytes, per mini-batch.\n   */\n  miniBatchSize?: number;\n  /** Reference to the model asset for the endpoint deployment. */\n  model?: AssetReferenceBaseUnion;\n  /** Indicates how the output will be organized. */\n  outputAction?: BatchOutputAction;\n  /** Customized output file name for append_row output action. */\n  outputFileName?: string;\n  /**\n   * Provisioning state for the endpoint deployment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: DeploymentProvisioningState;\n  /**\n   * Indicates compute configuration for the job.\n   * If not provided, will default to the defaults defined in ResourceConfiguration.\n   */\n  resources?: DeploymentResourceConfiguration;\n  /**\n   * Retry Settings for the batch inference operation.\n   * If not provided, will default to the defaults defined in BatchRetrySettings.\n   */\n  retrySettings?: BatchRetrySettings;\n}\n\nexport interface OnlineDeploymentProperties\n  extends EndpointDeploymentPropertiesBase {\n  /** If true, enables Application Insights logging. */\n  appInsightsEnabled?: boolean;\n  /** If Enabled, allow egress public network access. If Disabled, this will create secure egress. Default: Enabled. */\n  egressPublicNetworkAccess?: EgressPublicNetworkAccessType;\n  /** [Required] The compute type of the endpoint. */\n  endpointComputeType: EndpointComputeType;\n  /** Compute instance type. */\n  instanceType?: string;\n  /** Liveness probe monitors the health of the container regularly. */\n  livenessProbe?: ProbeSettings;\n  /** The URI path to the model. */\n  model?: string;\n  /** The path to mount the model in custom container. */\n  modelMountPath?: string;\n  /**\n   * Provisioning state for the endpoint deployment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: DeploymentProvisioningState;\n  /** Readiness probe validates if the container is ready to serve traffic. The properties and defaults are the same as liveness probe. */\n  readinessProbe?: ProbeSettings;\n  /** Request settings for the deployment. */\n  requestSettings?: OnlineRequestSettings;\n  /**\n   * Scale settings for the deployment.\n   * If it is null or not provided,\n   * it defaults to TargetUtilizationScaleSettings for KubernetesOnlineDeployment\n   * and to DefaultScaleSettings for ManagedOnlineDeployment.\n   */\n  scaleSettings?: OnlineScaleSettingsUnion;\n}\n\nexport interface AssetContainer extends ResourceBase {\n  /** Is the asset archived? */\n  isArchived?: boolean;\n  /**\n   * The latest version inside this container.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly latestVersion?: string;\n  /**\n   * The next auto incremental version\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextVersion?: string;\n}\n\nexport interface AssetBase extends ResourceBase {\n  /** If the name version are system generated (anonymous registration). */\n  isAnonymous?: boolean;\n  /** Is the asset archived? */\n  isArchived?: boolean;\n}\n\n/** Base definition for datastore contents configuration. */\nexport interface DatastoreProperties extends ResourceBase {\n  /** [Required] Account credentials. */\n  credentials: DatastoreCredentialsUnion;\n  /** [Required] Storage type backing the datastore. */\n  datastoreType: DatastoreType;\n  /**\n   * Readonly property to indicate if datastore is the workspace default datastore\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isDefault?: boolean;\n}\n\n/** Base definition for a job. */\nexport interface JobBaseProperties extends ResourceBase {\n  /** ARM resource ID of the component resource. */\n  componentId?: string;\n  /** ARM resource ID of the compute resource. */\n  computeId?: string;\n  /** Display name of job. */\n  displayName?: string;\n  /** The name of the experiment the job belongs to. If not set, the job is placed in the \"Default\" experiment. */\n  experimentName?: string;\n  /**\n   * Identity configuration. If set, this should be one of AmlToken, ManagedIdentity, UserIdentity or null.\n   * Defaults to AmlToken if null.\n   */\n  identity?: IdentityConfigurationUnion;\n  /** Is the asset archived? */\n  isArchived?: boolean;\n  /** [Required] Specifies the type of job. */\n  jobType: JobType;\n  /**\n   * List of JobEndpoints.\n   * For local jobs, a job endpoint will have an endpoint value of FileStreamObject.\n   */\n  services?: { [propertyName: string]: JobService | null };\n  /**\n   * Status of the job.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: JobStatus;\n}\n\n/** Base definition of a schedule */\nexport interface ScheduleProperties extends ResourceBase {\n  /** [Required] Specifies the action of the schedule */\n  action: ScheduleActionBaseUnion;\n  /** Display name of schedule. */\n  displayName?: string;\n  /** Is the schedule enabled? */\n  isEnabled?: boolean;\n  /**\n   * Provisioning state for the schedule.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ScheduleProvisioningStatus;\n  /** [Required] Specifies the trigger details */\n  trigger: TriggerBaseUnion;\n}\n\n/** Account key datastore credentials configuration. */\nexport interface AccountKeyDatastoreCredentials extends DatastoreCredentials {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  credentialsType: \"AccountKey\";\n  /** [Required] Storage account secrets. */\n  secrets: AccountKeyDatastoreSecrets;\n}\n\n/** Certificate datastore credentials configuration. */\nexport interface CertificateDatastoreCredentials extends DatastoreCredentials {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  credentialsType: \"Certificate\";\n  /** Authority URL used for authentication. */\n  authorityUrl?: string;\n  /** [Required] Service principal client ID. */\n  clientId: string;\n  /** Resource the service principal has access to. */\n  resourceUrl?: string;\n  /** [Required] Service principal secrets. */\n  secrets: CertificateDatastoreSecrets;\n  /** [Required] ID of the tenant to which the service principal belongs. */\n  tenantId: string;\n  /** [Required] Thumbprint of the certificate used for authentication. */\n  thumbprint: string;\n}\n\n/** Empty/none datastore credentials. */\nexport interface NoneDatastoreCredentials extends DatastoreCredentials {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  credentialsType: \"None\";\n}\n\n/** SAS datastore credentials configuration. */\nexport interface SasDatastoreCredentials extends DatastoreCredentials {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  credentialsType: \"Sas\";\n  /** [Required] Storage container secrets. */\n  secrets: SasDatastoreSecrets;\n}\n\n/** Service Principal datastore credentials configuration. */\nexport interface ServicePrincipalDatastoreCredentials\n  extends DatastoreCredentials {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  credentialsType: \"ServicePrincipal\";\n  /** Authority URL used for authentication. */\n  authorityUrl?: string;\n  /** [Required] Service principal client ID. */\n  clientId: string;\n  /** Resource the service principal has access to. */\n  resourceUrl?: string;\n  /** [Required] Service principal secrets. */\n  secrets: ServicePrincipalDatastoreSecrets;\n  /** [Required] ID of the tenant to which the service principal belongs. */\n  tenantId: string;\n}\n\n/** Datastore account key secrets. */\nexport interface AccountKeyDatastoreSecrets extends DatastoreSecrets {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  secretsType: \"AccountKey\";\n  /** Storage account key. */\n  key?: string;\n}\n\n/** Datastore certificate secrets. */\nexport interface CertificateDatastoreSecrets extends DatastoreSecrets {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  secretsType: \"Certificate\";\n  /** Service principal certificate. */\n  certificate?: string;\n}\n\n/** Datastore SAS secrets. */\nexport interface SasDatastoreSecrets extends DatastoreSecrets {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  secretsType: \"Sas\";\n  /** Storage container SAS token. */\n  sasToken?: string;\n}\n\n/** Datastore Service Principal secrets. */\nexport interface ServicePrincipalDatastoreSecrets extends DatastoreSecrets {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  secretsType: \"ServicePrincipal\";\n  /** Service principal secret. */\n  clientSecret?: string;\n}\n\n/** AML Token identity configuration. */\nexport interface AmlToken extends IdentityConfiguration {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  identityType: \"AMLToken\";\n}\n\n/** Managed identity configuration. */\nexport interface ManagedIdentity extends IdentityConfiguration {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  identityType: \"Managed\";\n  /** Specifies a user-assigned identity by client ID. For system-assigned, do not set this field. */\n  clientId?: string;\n  /** Specifies a user-assigned identity by object ID. For system-assigned, do not set this field. */\n  objectId?: string;\n  /** Specifies a user-assigned identity by ARM resource ID. For system-assigned, do not set this field. */\n  resourceId?: string;\n}\n\n/** User identity configuration. */\nexport interface UserIdentity extends IdentityConfiguration {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  identityType: \"UserIdentity\";\n}\n\nexport interface DefaultScaleSettings extends OnlineScaleSettings {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  scaleType: \"Default\";\n}\n\nexport interface TargetUtilizationScaleSettings extends OnlineScaleSettings {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  scaleType: \"TargetUtilization\";\n  /** The maximum number of instances that the deployment can scale to. The quota will be reserved for max_instances. */\n  maxInstances?: number;\n  /** The minimum number of instances to always be present. */\n  minInstances?: number;\n  /** The polling interval in ISO 8691 format. Only supports duration with precision as low as Seconds. */\n  pollingInterval?: string;\n  /** Target CPU usage for the autoscaler. */\n  targetUtilizationPercentage?: number;\n}\n\nexport interface EndpointScheduleAction extends ScheduleActionBase {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  actionType: \"InvokeBatchEndpoint\";\n  /**\n   * [Required] Defines Schedule action definition details.\n   * <see href=\"TBD\" />\n   */\n  endpointInvocationDefinition: Record<string, unknown>;\n}\n\nexport interface JobScheduleAction extends ScheduleActionBase {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  actionType: \"CreateJob\";\n  /** [Required] Defines Schedule action definition details. */\n  jobDefinition: JobBasePropertiesUnion;\n}\n\nexport interface RecurrenceTrigger extends TriggerBase {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  triggerType: \"Recurrence\";\n  /** [Required] The frequency to trigger schedule. */\n  frequency: RecurrenceFrequency;\n  /** [Required] Specifies schedule interval in conjunction with frequency */\n  interval: number;\n  /** The recurrence schedule. */\n  schedule?: RecurrenceSchedule;\n}\n\nexport interface CronTrigger extends TriggerBase {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  triggerType: \"Cron\";\n  /**\n   * [Required] Specifies cron expression of schedule.\n   * The expression should follow NCronTab format.\n   */\n  expression: string;\n}\n\nexport interface MLTableJobInput extends AssetJobInput, JobInput {}\n\nexport interface CustomModelJobInput extends AssetJobInput, JobInput {}\n\nexport interface MLFlowModelJobInput extends AssetJobInput, JobInput {}\n\nexport interface TritonModelJobInput extends AssetJobInput, JobInput {}\n\nexport interface UriFileJobInput extends AssetJobInput, JobInput {}\n\nexport interface UriFolderJobInput extends AssetJobInput, JobInput {}\n\nexport interface CustomModelJobOutput extends AssetJobOutput, JobOutput {}\n\nexport interface MLFlowModelJobOutput extends AssetJobOutput, JobOutput {}\n\nexport interface MLTableJobOutput extends AssetJobOutput, JobOutput {}\n\nexport interface TritonModelJobOutput extends AssetJobOutput, JobOutput {}\n\nexport interface UriFileJobOutput extends AssetJobOutput, JobOutput {}\n\nexport interface UriFolderJobOutput extends AssetJobOutput, JobOutput {}\n\n/** Forecast horizon determined automatically by system. */\nexport interface AutoForecastHorizon extends ForecastHorizon {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  mode: \"Auto\";\n}\n\n/** The desired maximum forecast horizon in units of time-series frequency. */\nexport interface CustomForecastHorizon extends ForecastHorizon {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  mode: \"Custom\";\n  /** [Required] Forecast horizon value. */\n  value: number;\n}\n\n/** Classification task in AutoML Table vertical. */\nexport interface Classification extends TableVertical, AutoMLVertical {\n  /** Positive label for binary metrics calculation. */\n  positiveLabel?: string;\n  /** Primary metric for the task. */\n  primaryMetric?: ClassificationPrimaryMetrics;\n  /** Inputs for training phase for an AutoML Job. */\n  trainingSettings?: ClassificationTrainingSettings;\n}\n\n/** Forecasting task in AutoML Table vertical. */\nexport interface Forecasting extends TableVertical, AutoMLVertical {\n  /** Forecasting task specific inputs. */\n  forecastingSettings?: ForecastingSettings;\n  /** Primary metric for forecasting task. */\n  primaryMetric?: ForecastingPrimaryMetrics;\n  /** Inputs for training phase for an AutoML Job. */\n  trainingSettings?: ForecastingTrainingSettings;\n}\n\n/**\n * Image Classification. Multi-class image classification is used when an image is classified with only a single label\n * from a set of classes - e.g. each image is classified as either an image of a 'cat' or a 'dog' or a 'duck'.\n */\nexport interface ImageClassification\n  extends ImageClassificationBase,\n    AutoMLVertical {\n  /** Primary metric to optimize for this task. */\n  primaryMetric?: ClassificationPrimaryMetrics;\n}\n\n/**\n * Image Classification Multilabel. Multi-label image classification is used when an image could have one or more labels\n * from a set of labels - e.g. an image could be labeled with both 'cat' and 'dog'.\n */\nexport interface ImageClassificationMultilabel\n  extends ImageClassificationBase,\n    AutoMLVertical {\n  /** Primary metric to optimize for this task. */\n  primaryMetric?: ClassificationMultilabelPrimaryMetrics;\n}\n\n/**\n * Image Instance Segmentation. Instance segmentation is used to identify objects in an image at the pixel level,\n * drawing a polygon around each object in the image.\n */\nexport interface ImageInstanceSegmentation\n  extends ImageObjectDetectionBase,\n    AutoMLVertical {\n  /** Primary metric to optimize for this task. */\n  primaryMetric?: InstanceSegmentationPrimaryMetrics;\n}\n\n/**\n * Image Object Detection. Object detection is used to identify objects in an image and locate each object with a\n * bounding box e.g. locate all dogs and cats in an image and draw a bounding box around each.\n */\nexport interface ImageObjectDetection\n  extends ImageObjectDetectionBase,\n    AutoMLVertical {\n  /** Primary metric to optimize for this task. */\n  primaryMetric?: ObjectDetectionPrimaryMetrics;\n}\n\n/** Regression task in AutoML Table vertical. */\nexport interface Regression extends TableVertical, AutoMLVertical {\n  /** Primary metric for regression task. */\n  primaryMetric?: RegressionPrimaryMetrics;\n  /** Inputs for training phase for an AutoML Job. */\n  trainingSettings?: RegressionTrainingSettings;\n}\n\n/**\n * Text Classification task in AutoML NLP vertical.\n * NLP - Natural Language Processing.\n */\nexport interface TextClassification extends NlpVertical, AutoMLVertical {\n  /** Primary metric for Text-Classification task. */\n  primaryMetric?: ClassificationPrimaryMetrics;\n}\n\n/**\n * Text Classification Multilabel task in AutoML NLP vertical.\n * NLP - Natural Language Processing.\n */\nexport interface TextClassificationMultilabel\n  extends NlpVertical,\n    AutoMLVertical {\n  /**\n   * Primary metric for Text-Classification-Multilabel task.\n   * Currently only Accuracy is supported as primary metric, hence user need not set it explicitly.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly primaryMetric?: ClassificationMultilabelPrimaryMetrics;\n}\n\n/**\n * Text-NER task in AutoML NLP vertical.\n * NER - Named Entity Recognition.\n * NLP - Natural Language Processing.\n */\nexport interface TextNer extends NlpVertical, AutoMLVertical {\n  /**\n   * Primary metric for Text-NER task.\n   * Only 'Accuracy' is supported for Text-NER, so user need not set this explicitly.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly primaryMetric?: ClassificationPrimaryMetrics;\n}\n\n/** Literal input type. */\nexport interface LiteralJobInput extends JobInput {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  jobInputType: \"literal\";\n  /** [Required] Literal value for the input. */\n  value: string;\n}\n\n/** N-Cross validations determined automatically. */\nexport interface AutoNCrossValidations extends NCrossValidations {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  mode: \"Auto\";\n}\n\n/** N-Cross validations are specified by user. */\nexport interface CustomNCrossValidations extends NCrossValidations {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  mode: \"Custom\";\n  /** [Required] N-Cross validations value. */\n  value: number;\n}\n\nexport interface AutoSeasonality extends Seasonality {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  mode: \"Auto\";\n}\n\nexport interface CustomSeasonality extends Seasonality {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  mode: \"Custom\";\n  /** [Required] Seasonality value. */\n  value: number;\n}\n\nexport interface AutoTargetLags extends TargetLags {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  mode: \"Auto\";\n}\n\nexport interface CustomTargetLags extends TargetLags {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  mode: \"Custom\";\n  /** [Required] Set target lags values. */\n  values: number[];\n}\n\n/** Target lags rolling window determined automatically. */\nexport interface AutoTargetRollingWindowSize extends TargetRollingWindowSize {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  mode: \"Auto\";\n}\n\nexport interface CustomTargetRollingWindowSize extends TargetRollingWindowSize {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  mode: \"Custom\";\n  /** [Required] TargetRollingWindowSize value. */\n  value: number;\n}\n\n/** Defines an early termination policy based on slack criteria, and a frequency and delay interval for evaluation */\nexport interface BanditPolicy extends EarlyTerminationPolicy {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  policyType: \"Bandit\";\n  /** Absolute distance allowed from the best performing run. */\n  slackAmount?: number;\n  /** Ratio of the allowed distance from the best performing run. */\n  slackFactor?: number;\n}\n\n/** Defines an early termination policy based on running averages of the primary metric of all runs */\nexport interface MedianStoppingPolicy extends EarlyTerminationPolicy {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  policyType: \"MedianStopping\";\n}\n\n/** Defines an early termination policy that cancels a given percentage of runs at each evaluation interval. */\nexport interface TruncationSelectionPolicy extends EarlyTerminationPolicy {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  policyType: \"TruncationSelection\";\n  /** The percentage of runs to cancel at each evaluation interval. */\n  truncationPercentage?: number;\n}\n\n/** Defines a Sampling Algorithm that generates values based on previous values */\nexport interface BayesianSamplingAlgorithm extends SamplingAlgorithm {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  samplingAlgorithmType: \"Bayesian\";\n}\n\n/** Defines a Sampling Algorithm that exhaustively generates every value combination in the space */\nexport interface GridSamplingAlgorithm extends SamplingAlgorithm {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  samplingAlgorithmType: \"Grid\";\n}\n\n/** Defines a Sampling Algorithm that generates values randomly */\nexport interface RandomSamplingAlgorithm extends SamplingAlgorithm {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  samplingAlgorithmType: \"Random\";\n  /** The specific type of random algorithm */\n  rule?: RandomSamplingAlgorithmRule;\n  /** An optional integer to use as the seed for random number generation */\n  seed?: number;\n}\n\n/** Classification Training related configuration. */\nexport interface ClassificationTrainingSettings extends TrainingSettings {\n  /** Allowed models for classification task. */\n  allowedTrainingAlgorithms?: ClassificationModels[];\n  /** Blocked models for classification task. */\n  blockedTrainingAlgorithms?: ClassificationModels[];\n}\n\n/** Forecasting Training related configuration. */\nexport interface ForecastingTrainingSettings extends TrainingSettings {\n  /** Allowed models for forecasting task. */\n  allowedTrainingAlgorithms?: ForecastingModels[];\n  /** Blocked models for forecasting task. */\n  blockedTrainingAlgorithms?: ForecastingModels[];\n}\n\n/** Regression Training related configuration. */\nexport interface RegressionTrainingSettings extends TrainingSettings {\n  /** Allowed models for regression task. */\n  allowedTrainingAlgorithms?: RegressionModels[];\n  /** Blocked models for regression task. */\n  blockedTrainingAlgorithms?: RegressionModels[];\n}\n\n/** Featurization Configuration. */\nexport interface TableVerticalFeaturizationSettings\n  extends FeaturizationSettings {\n  /** These transformers shall not be used in featurization. */\n  blockedTransformers?: BlockedTransformers[];\n  /** Dictionary of column name and its type (int, float, string, datetime etc). */\n  columnNameAndTypes?: { [propertyName: string]: string | null };\n  /** Determines whether to use Dnn based featurizers for data featurization. */\n  enableDnnFeaturization?: boolean;\n  /**\n   * Featurization mode - User can keep the default 'Auto' mode and AutoML will take care of necessary transformation of the data in featurization phase.\n   * If 'Off' is selected then no featurization is done.\n   * If 'Custom' is selected then user can specify additional inputs to customize how featurization is done.\n   */\n  mode?: FeaturizationMode;\n  /** User can specify additional transformers to be used along with the columns to which it would be applied and parameters for the transformer constructor. */\n  transformerParams?: { [propertyName: string]: ColumnTransformer[] | null };\n}\n\nexport interface NlpVerticalFeaturizationSettings\n  extends FeaturizationSettings {}\n\n/** MPI distribution configuration. */\nexport interface Mpi extends DistributionConfiguration {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  distributionType: \"Mpi\";\n  /** Number of processes per MPI node. */\n  processCountPerInstance?: number;\n}\n\n/** PyTorch distribution configuration. */\nexport interface PyTorch extends DistributionConfiguration {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  distributionType: \"PyTorch\";\n  /** Number of processes per node. */\n  processCountPerInstance?: number;\n}\n\n/** TensorFlow distribution configuration. */\nexport interface TensorFlow extends DistributionConfiguration {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  distributionType: \"TensorFlow\";\n  /** Number of parameter server tasks. */\n  parameterServerCount?: number;\n  /** Number of workers. If not specified, will default to the instance count. */\n  workerCount?: number;\n}\n\n/** Command Job limit class. */\nexport interface CommandJobLimits extends JobLimits {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  jobLimitsType: \"Command\";\n}\n\n/** Sweep Job limit class. */\nexport interface SweepJobLimits extends JobLimits {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  jobLimitsType: \"Sweep\";\n  /** Sweep Job max concurrent trials. */\n  maxConcurrentTrials?: number;\n  /** Sweep Job max total trials. */\n  maxTotalTrials?: number;\n  /** Sweep Job Trial timeout value. */\n  trialTimeout?: string;\n}\n\n/**\n * Settings used for training the model.\n * For more information on the available settings please visit the official documentation:\n * https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.\n */\nexport interface ImageModelSettingsClassification extends ImageModelSettings {\n  /** Image crop size that is input to the neural network for the training dataset. Must be a positive integer. */\n  trainingCropSize?: number;\n  /** Image crop size that is input to the neural network for the validation dataset. Must be a positive integer. */\n  validationCropSize?: number;\n  /** Image size to which to resize before cropping for validation dataset. Must be a positive integer. */\n  validationResizeSize?: number;\n  /**\n   * Weighted loss. The accepted values are 0 for no weighted loss.\n   * 1 for weighted loss with sqrt.(class_weights). 2 for weighted loss with class_weights. Must be 0 or 1 or 2.\n   */\n  weightedLoss?: number;\n}\n\n/**\n * Settings used for training the model.\n * For more information on the available settings please visit the official documentation:\n * https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.\n */\nexport interface ImageModelSettingsObjectDetection extends ImageModelSettings {\n  /**\n   * Maximum number of detections per image, for all classes. Must be a positive integer.\n   * Note: This settings is not supported for the 'yolov5' algorithm.\n   */\n  boxDetectionsPerImage?: number;\n  /**\n   * During inference, only return proposals with a classification score greater than\n   * BoxScoreThreshold. Must be a float in the range[0, 1].\n   */\n  boxScoreThreshold?: number;\n  /**\n   * Image size for train and validation. Must be a positive integer.\n   * Note: The training run may get into CUDA OOM if the size is too big.\n   * Note: This settings is only supported for the 'yolov5' algorithm.\n   */\n  imageSize?: number;\n  /**\n   * Maximum size of the image to be rescaled before feeding it to the backbone.\n   * Must be a positive integer. Note: training run may get into CUDA OOM if the size is too big.\n   * Note: This settings is not supported for the 'yolov5' algorithm.\n   */\n  maxSize?: number;\n  /**\n   * Minimum size of the image to be rescaled before feeding it to the backbone.\n   * Must be a positive integer. Note: training run may get into CUDA OOM if the size is too big.\n   * Note: This settings is not supported for the 'yolov5' algorithm.\n   */\n  minSize?: number;\n  /**\n   * Model size. Must be 'small', 'medium', 'large', or 'xlarge'.\n   * Note: training run may get into CUDA OOM if the model size is too big.\n   * Note: This settings is only supported for the 'yolov5' algorithm.\n   */\n  modelSize?: ModelSize;\n  /**\n   * Enable multi-scale image by varying image size by +/- 50%.\n   * Note: training run may get into CUDA OOM if no sufficient GPU memory.\n   * Note: This settings is only supported for the 'yolov5' algorithm.\n   */\n  multiScale?: boolean;\n  /** IOU threshold used during inference in NMS post processing. Must be a float in the range [0, 1]. */\n  nmsIouThreshold?: number;\n  /**\n   * The grid size to use for tiling each image. Note: TileGridSize must not be\n   * None to enable small object detection logic. A string containing two integers in mxn format.\n   * Note: This settings is not supported for the 'yolov5' algorithm.\n   */\n  tileGridSize?: string;\n  /**\n   * Overlap ratio between adjacent tiles in each dimension. Must be float in the range [0, 1).\n   * Note: This settings is not supported for the 'yolov5' algorithm.\n   */\n  tileOverlapRatio?: number;\n  /**\n   * The IOU threshold to use to perform NMS while merging predictions from tiles and image.\n   * Used in validation/ inference. Must be float in the range [0, 1].\n   * Note: This settings is not supported for the 'yolov5' algorithm.\n   */\n  tilePredictionsNmsThreshold?: number;\n  /** IOU threshold to use when computing validation metric. Must be float in the range [0, 1]. */\n  validationIouThreshold?: number;\n  /** Metric computation method to use for validation metrics. */\n  validationMetricType?: ValidationMetricType;\n}\n\n/**\n * Distribution expressions to sweep over values of model settings.\n * <example>\n * Some examples are:\n * <code>\n * ModelName = \"choice('seresnext', 'resnest50')\";\n * LearningRate = \"uniform(0.001, 0.01)\";\n * LayersToFreeze = \"choice(0, 2)\";\n * </code></example>\n * For more details on how to compose distribution expressions please check the documentation:\n * https://docs.microsoft.com/en-us/azure/machine-learning/how-to-tune-hyperparameters\n * For more information on the available settings please visit the official documentation:\n * https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.\n */\nexport interface ImageModelDistributionSettingsClassification\n  extends ImageModelDistributionSettings {\n  /** Image crop size that is input to the neural network for the training dataset. Must be a positive integer. */\n  trainingCropSize?: string;\n  /** Image crop size that is input to the neural network for the validation dataset. Must be a positive integer. */\n  validationCropSize?: string;\n  /** Image size to which to resize before cropping for validation dataset. Must be a positive integer. */\n  validationResizeSize?: string;\n  /**\n   * Weighted loss. The accepted values are 0 for no weighted loss.\n   * 1 for weighted loss with sqrt.(class_weights). 2 for weighted loss with class_weights. Must be 0 or 1 or 2.\n   */\n  weightedLoss?: string;\n}\n\n/**\n * Distribution expressions to sweep over values of model settings.\n * <example>\n * Some examples are:\n * <code>\n * ModelName = \"choice('seresnext', 'resnest50')\";\n * LearningRate = \"uniform(0.001, 0.01)\";\n * LayersToFreeze = \"choice(0, 2)\";\n * </code></example>\n * For more details on how to compose distribution expressions please check the documentation:\n * https://docs.microsoft.com/en-us/azure/machine-learning/how-to-tune-hyperparameters\n * For more information on the available settings please visit the official documentation:\n * https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.\n */\nexport interface ImageModelDistributionSettingsObjectDetection\n  extends ImageModelDistributionSettings {\n  /**\n   * Maximum number of detections per image, for all classes. Must be a positive integer.\n   * Note: This settings is not supported for the 'yolov5' algorithm.\n   */\n  boxDetectionsPerImage?: string;\n  /**\n   * During inference, only return proposals with a classification score greater than\n   * BoxScoreThreshold. Must be a float in the range[0, 1].\n   */\n  boxScoreThreshold?: string;\n  /**\n   * Image size for train and validation. Must be a positive integer.\n   * Note: The training run may get into CUDA OOM if the size is too big.\n   * Note: This settings is only supported for the 'yolov5' algorithm.\n   */\n  imageSize?: string;\n  /**\n   * Maximum size of the image to be rescaled before feeding it to the backbone.\n   * Must be a positive integer. Note: training run may get into CUDA OOM if the size is too big.\n   * Note: This settings is not supported for the 'yolov5' algorithm.\n   */\n  maxSize?: string;\n  /**\n   * Minimum size of the image to be rescaled before feeding it to the backbone.\n   * Must be a positive integer. Note: training run may get into CUDA OOM if the size is too big.\n   * Note: This settings is not supported for the 'yolov5' algorithm.\n   */\n  minSize?: string;\n  /**\n   * Model size. Must be 'small', 'medium', 'large', or 'xlarge'.\n   * Note: training run may get into CUDA OOM if the model size is too big.\n   * Note: This settings is only supported for the 'yolov5' algorithm.\n   */\n  modelSize?: string;\n  /**\n   * Enable multi-scale image by varying image size by +/- 50%.\n   * Note: training run may get into CUDA OOM if no sufficient GPU memory.\n   * Note: This settings is only supported for the 'yolov5' algorithm.\n   */\n  multiScale?: string;\n  /** IOU threshold used during inference in NMS post processing. Must be float in the range [0, 1]. */\n  nmsIouThreshold?: string;\n  /**\n   * The grid size to use for tiling each image. Note: TileGridSize must not be\n   * None to enable small object detection logic. A string containing two integers in mxn format.\n   * Note: This settings is not supported for the 'yolov5' algorithm.\n   */\n  tileGridSize?: string;\n  /**\n   * Overlap ratio between adjacent tiles in each dimension. Must be float in the range [0, 1).\n   * Note: This settings is not supported for the 'yolov5' algorithm.\n   */\n  tileOverlapRatio?: string;\n  /**\n   * The IOU threshold to use to perform NMS while merging predictions from tiles and image.\n   * Used in validation/ inference. Must be float in the range [0, 1].\n   * Note: This settings is not supported for the 'yolov5' algorithm.\n   * NMS: Non-maximum suppression\n   */\n  tilePredictionsNmsThreshold?: string;\n  /** IOU threshold to use when computing validation metric. Must be float in the range [0, 1]. */\n  validationIouThreshold?: string;\n  /** Metric computation method to use for validation metrics. Must be 'none', 'coco', 'voc', or 'coco_voc'. */\n  validationMetricType?: string;\n}\n\nexport interface ImageClassificationBase extends ImageVertical {\n  /** Settings used for training the model. */\n  modelSettings?: ImageModelSettingsClassification;\n  /** Search space for sampling different combinations of models and their hyperparameters. */\n  searchSpace?: ImageModelDistributionSettingsClassification[];\n}\n\nexport interface ImageObjectDetectionBase extends ImageVertical {\n  /** Settings used for training the model. */\n  modelSettings?: ImageModelSettingsObjectDetection;\n  /** Search space for sampling different combinations of models and their hyperparameters. */\n  searchSpace?: ImageModelDistributionSettingsObjectDetection[];\n}\n\nexport interface BatchEndpoint extends TrackedResource {\n  /** Managed service identity (system assigned and/or user assigned identities) */\n  identity?: ManagedServiceIdentity;\n  /** Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. */\n  kind?: string;\n  /** [Required] Additional attributes of the entity. */\n  properties: BatchEndpointProperties;\n  /** Sku details required for ARM contract for Autoscaling. */\n  sku?: Sku;\n}\n\nexport interface BatchDeployment extends TrackedResource {\n  /** Managed service identity (system assigned and/or user assigned identities) */\n  identity?: ManagedServiceIdentity;\n  /** Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. */\n  kind?: string;\n  /** [Required] Additional attributes of the entity. */\n  properties: BatchDeploymentProperties;\n  /** Sku details required for ARM contract for Autoscaling. */\n  sku?: Sku;\n}\n\nexport interface OnlineEndpoint extends TrackedResource {\n  /** Managed service identity (system assigned and/or user assigned identities) */\n  identity?: ManagedServiceIdentity;\n  /** Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. */\n  kind?: string;\n  /** [Required] Additional attributes of the entity. */\n  properties: OnlineEndpointProperties;\n  /** Sku details required for ARM contract for Autoscaling. */\n  sku?: Sku;\n}\n\nexport interface OnlineDeployment extends TrackedResource {\n  /** Managed service identity (system assigned and/or user assigned identities) */\n  identity?: ManagedServiceIdentity;\n  /** Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. */\n  kind?: string;\n  /** [Required] Additional attributes of the entity. */\n  properties: OnlineDeploymentPropertiesUnion;\n  /** Sku details required for ARM contract for Autoscaling. */\n  sku?: Sku;\n}\n\n/** Properties specific to a KubernetesOnlineDeployment. */\nexport interface KubernetesOnlineDeployment extends OnlineDeploymentProperties {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  endpointComputeType: \"Kubernetes\";\n  /** The resource requirements for the container (cpu and memory). */\n  containerResourceRequirements?: ContainerResourceRequirements;\n}\n\n/** Properties specific to a ManagedOnlineDeployment. */\nexport interface ManagedOnlineDeployment extends OnlineDeploymentProperties {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  endpointComputeType: \"Managed\";\n}\n\n/** Container for code asset versions. */\nexport interface CodeContainerProperties extends AssetContainer {}\n\n/**\n * Component container definition.\n * <see href=\"https://docs.microsoft.com/en-us/azure/machine-learning/reference-yaml-component-command\" />\n */\nexport interface ComponentContainerProperties extends AssetContainer {}\n\n/** Container for data asset versions. */\nexport interface DataContainerProperties extends AssetContainer {\n  /** [Required] Specifies the type of data. */\n  dataType: DataType;\n}\n\n/** Container for environment specification versions. */\nexport interface EnvironmentContainerProperties extends AssetContainer {}\n\nexport interface ModelContainerProperties extends AssetContainer {}\n\n/** Code asset version details. */\nexport interface CodeVersionProperties extends AssetBase {\n  /** Uri where code is located */\n  codeUri?: string;\n}\n\n/** Definition of a component version: defines resources that span component types. */\nexport interface ComponentVersionProperties extends AssetBase {\n  /**\n   * Defines Component definition details.\n   * <see href=\"https://docs.microsoft.com/en-us/azure/machine-learning/reference-yaml-component-command\" />\n   */\n  componentSpec?: Record<string, unknown>;\n}\n\n/** Data version base definition */\nexport interface DataVersionBaseProperties extends AssetBase {\n  /** [Required] Specifies the type of data. */\n  dataType: DataType;\n  /** [Required] Uri of the data. Usage/meaning depends on Microsoft.MachineLearning.ManagementFrontEnd.Contracts.V20221001.Assets.DataVersionBase.DataType */\n  dataUri: string;\n}\n\n/** Environment version details. */\nexport interface EnvironmentVersionProperties extends AssetBase {\n  /** Defines if image needs to be rebuilt based on base image changes. */\n  autoRebuild?: AutoRebuildSetting;\n  /** Configuration settings for Docker build context. */\n  build?: BuildContext;\n  /**\n   * Standard configuration file used by Conda that lets you install any kind of package, including Python, R, and C/C++ packages.\n   * <see href=\"https://repo2docker.readthedocs.io/en/latest/config_files.html#environment-yml-install-a-conda-environment\" />\n   */\n  condaFile?: string;\n  /**\n   * Environment type is either user managed or curated by the Azure ML service\n   * <see href=\"https://docs.microsoft.com/en-us/azure/machine-learning/resource-curated-environments\" />\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly environmentType?: EnvironmentType;\n  /**\n   * Name of the image that will be used for the environment.\n   * <seealso href=\"https://docs.microsoft.com/en-us/azure/machine-learning/how-to-deploy-custom-docker-image#use-a-custom-base-image\" />\n   */\n  image?: string;\n  /** Defines configuration specific to inference. */\n  inferenceConfig?: InferenceContainerProperties;\n  /** The OS type of the environment. */\n  osType?: OperatingSystemType;\n}\n\n/** Model asset version details. */\nexport interface ModelVersionProperties extends AssetBase {\n  /** Mapping of model flavors to their properties. */\n  flavors?: { [propertyName: string]: FlavorData | null };\n  /** Name of the training job which produced this model */\n  jobName?: string;\n  /** The storage format for this entity. Used for NCD. */\n  modelType?: string;\n  /** The URI path to the model contents. */\n  modelUri?: string;\n}\n\n/** Azure Blob datastore configuration. */\nexport interface AzureBlobDatastore extends DatastoreProperties {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  datastoreType: \"AzureBlob\";\n  /** Storage account name. */\n  accountName?: string;\n  /** Storage account container name. */\n  containerName?: string;\n  /** Azure cloud endpoint for the storage account. */\n  endpoint?: string;\n  /** Protocol used to communicate with the storage account. */\n  protocol?: string;\n  /** Indicates which identity to use to authenticate service data access to customer's storage. */\n  serviceDataAccessAuthIdentity?: ServiceDataAccessAuthIdentity;\n}\n\n/** Azure Data Lake Gen1 datastore configuration. */\nexport interface AzureDataLakeGen1Datastore extends DatastoreProperties {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  datastoreType: \"AzureDataLakeGen1\";\n  /** Indicates which identity to use to authenticate service data access to customer's storage. */\n  serviceDataAccessAuthIdentity?: ServiceDataAccessAuthIdentity;\n  /** [Required] Azure Data Lake store name. */\n  storeName: string;\n}\n\n/** Azure Data Lake Gen2 datastore configuration. */\nexport interface AzureDataLakeGen2Datastore extends DatastoreProperties {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  datastoreType: \"AzureDataLakeGen2\";\n  /** [Required] Storage account name. */\n  accountName: string;\n  /** Azure cloud endpoint for the storage account. */\n  endpoint?: string;\n  /** [Required] The name of the Data Lake Gen2 filesystem. */\n  filesystem: string;\n  /** Protocol used to communicate with the storage account. */\n  protocol?: string;\n  /** Indicates which identity to use to authenticate service data access to customer's storage. */\n  serviceDataAccessAuthIdentity?: ServiceDataAccessAuthIdentity;\n}\n\n/** Azure File datastore configuration. */\nexport interface AzureFileDatastore extends DatastoreProperties {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  datastoreType: \"AzureFile\";\n  /** [Required] Storage account name. */\n  accountName: string;\n  /** Azure cloud endpoint for the storage account. */\n  endpoint?: string;\n  /** [Required] The name of the Azure file share that the datastore points to. */\n  fileShareName: string;\n  /** Protocol used to communicate with the storage account. */\n  protocol?: string;\n  /** Indicates which identity to use to authenticate service data access to customer's storage. */\n  serviceDataAccessAuthIdentity?: ServiceDataAccessAuthIdentity;\n}\n\n/**\n * AutoMLJob class.\n * Use this class for executing AutoML tasks like Classification/Regression etc.\n * See TaskType enum for all the tasks supported.\n */\nexport interface AutoMLJob extends JobBaseProperties {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  jobType: \"AutoML\";\n  /**\n   * The ARM resource ID of the Environment specification for the job.\n   * This is optional value to provide, if not provided, AutoML will default this to Production AutoML curated environment version when running the job.\n   */\n  environmentId?: string;\n  /** Environment variables included in the job. */\n  environmentVariables?: { [propertyName: string]: string | null };\n  /** Mapping of output data bindings used in the job. */\n  outputs?: { [propertyName: string]: JobOutputUnion | null };\n  /** Compute Resource configuration for the job. */\n  resources?: JobResourceConfiguration;\n  /** [Required] This represents scenario which can be one of Tables/NLP/Image */\n  taskDetails: AutoMLVerticalUnion;\n}\n\n/** Command job definition. */\nexport interface CommandJob extends JobBaseProperties {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  jobType: \"Command\";\n  /** ARM resource ID of the code asset. */\n  codeId?: string;\n  /** [Required] The command to execute on startup of the job. eg. \"python train.py\" */\n  command: string;\n  /** Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null. */\n  distribution?: DistributionConfigurationUnion;\n  /** [Required] The ARM resource ID of the Environment specification for the job. */\n  environmentId: string;\n  /** Environment variables included in the job. */\n  environmentVariables?: { [propertyName: string]: string | null };\n  /** Mapping of input data bindings used in the job. */\n  inputs?: { [propertyName: string]: JobInputUnion | null };\n  /** Command Job limit. */\n  limits?: CommandJobLimits;\n  /** Mapping of output data bindings used in the job. */\n  outputs?: { [propertyName: string]: JobOutputUnion | null };\n  /**\n   * Input parameters.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly parameters?: Record<string, unknown>;\n  /** Compute Resource configuration for the job. */\n  resources?: JobResourceConfiguration;\n}\n\n/** Pipeline Job definition: defines generic to MFE attributes. */\nexport interface PipelineJob extends JobBaseProperties {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  jobType: \"Pipeline\";\n  /** Inputs for the pipeline job. */\n  inputs?: { [propertyName: string]: JobInputUnion | null };\n  /** Jobs construct the Pipeline Job. */\n  jobs?: { [propertyName: string]: Record<string, unknown> };\n  /** Outputs for the pipeline job */\n  outputs?: { [propertyName: string]: JobOutputUnion | null };\n  /** Pipeline settings, for things like ContinueRunOnStepFailure etc. */\n  settings?: Record<string, unknown>;\n  /** ARM resource ID of source job. */\n  sourceJobId?: string;\n}\n\n/** Sweep job definition. */\nexport interface SweepJob extends JobBaseProperties {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  jobType: \"Sweep\";\n  /** Early termination policies enable canceling poor-performing runs before they complete */\n  earlyTermination?: EarlyTerminationPolicyUnion;\n  /** Mapping of input data bindings used in the job. */\n  inputs?: { [propertyName: string]: JobInputUnion | null };\n  /** Sweep Job limit. */\n  limits?: SweepJobLimits;\n  /** [Required] Optimization objective. */\n  objective: Objective;\n  /** Mapping of output data bindings used in the job. */\n  outputs?: { [propertyName: string]: JobOutputUnion | null };\n  /** [Required] The hyperparameter sampling algorithm */\n  samplingAlgorithm: SamplingAlgorithmUnion;\n  /** [Required] A dictionary containing each parameter and its distribution. The dictionary key is the name of the parameter */\n  searchSpace: Record<string, unknown>;\n  /** [Required] Trial component definition. */\n  trial: TrialComponent;\n}\n\n/** MLTable data definition */\nexport interface MLTableData extends DataVersionBaseProperties {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  dataType: \"mltable\";\n  /** Uris referenced in the MLTable definition (required for lineage) */\n  referencedUris?: string[];\n}\n\n/** uri-file data version entity */\nexport interface UriFileDataVersion extends DataVersionBaseProperties {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  dataType: \"uri_file\";\n}\n\n/** uri-folder data version entity */\nexport interface UriFolderDataVersion extends DataVersionBaseProperties {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  dataType: \"uri_folder\";\n}\n\n/** Defines headers for Workspaces_diagnose operation. */\nexport interface WorkspacesDiagnoseHeaders {\n  /** URI to poll for asynchronous operation result. */\n  location?: string;\n  /** Duration the client should wait between requests, in seconds. */\n  retryAfter?: number;\n}\n\n/** Defines headers for Compute_createOrUpdate operation. */\nexport interface ComputeCreateOrUpdateHeaders {\n  /** URI to poll for asynchronous operation status. */\n  azureAsyncOperation?: string;\n}\n\n/** Defines headers for Compute_delete operation. */\nexport interface ComputeDeleteHeaders {\n  /** URI to poll for asynchronous operation status. */\n  azureAsyncOperation?: string;\n  /** URI to poll for asynchronous operation result. */\n  location?: string;\n}\n\n/** Defines headers for BatchEndpoints_delete operation. */\nexport interface BatchEndpointsDeleteHeaders {\n  /** Timeout for the client to use when polling the asynchronous operation. */\n  xMsAsyncOperationTimeout?: string;\n  /** URI to poll for asynchronous operation result. */\n  location?: string;\n  /** Duration the client should wait between requests, in seconds. */\n  retryAfter?: number;\n}\n\n/** Defines headers for BatchEndpoints_update operation. */\nexport interface BatchEndpointsUpdateHeaders {\n  /** Timeout for the client to use when polling the asynchronous operation. */\n  xMsAsyncOperationTimeout?: string;\n  /** URI to poll for asynchronous operation result. */\n  location?: string;\n  /** Duration the client should wait between requests, in seconds. */\n  retryAfter?: number;\n}\n\n/** Defines headers for BatchEndpoints_createOrUpdate operation. */\nexport interface BatchEndpointsCreateOrUpdateHeaders {\n  /** Timeout for the client to use when polling the asynchronous operation. */\n  xMsAsyncOperationTimeout?: string;\n  /** URI to poll for asynchronous operation status. */\n  azureAsyncOperation?: string;\n}\n\n/** Defines headers for BatchDeployments_delete operation. */\nexport interface BatchDeploymentsDeleteHeaders {\n  /** Timeout for the client to use when polling the asynchronous operation. */\n  xMsAsyncOperationTimeout?: string;\n  /** URI to poll for asynchronous operation result. */\n  location?: string;\n  /** Duration the client should wait between requests, in seconds. */\n  retryAfter?: number;\n}\n\n/** Defines headers for BatchDeployments_update operation. */\nexport interface BatchDeploymentsUpdateHeaders {\n  /** Timeout for the client to use when polling the asynchronous operation. */\n  xMsAsyncOperationTimeout?: string;\n  /** URI to poll for asynchronous operation result. */\n  location?: string;\n  /** Duration the client should wait between requests, in seconds. */\n  retryAfter?: number;\n}\n\n/** Defines headers for BatchDeployments_createOrUpdate operation. */\nexport interface BatchDeploymentsCreateOrUpdateHeaders {\n  /** Timeout for the client to use when polling the asynchronous operation. */\n  xMsAsyncOperationTimeout?: string;\n  /** URI to poll for asynchronous operation status. */\n  azureAsyncOperation?: string;\n}\n\n/** Defines headers for Jobs_delete operation. */\nexport interface JobsDeleteHeaders {\n  /** Timeout for the client to use when polling the asynchronous operation. */\n  xMsAsyncOperationTimeout?: string;\n  /** URI to poll for asynchronous operation result. */\n  location?: string;\n  /** Duration the client should wait between requests, in seconds. */\n  retryAfter?: number;\n}\n\n/** Defines headers for Jobs_cancel operation. */\nexport interface JobsCancelHeaders {\n  /** URI to poll for asynchronous operation result. */\n  location?: string;\n  /** Duration the client should wait between requests, in seconds. */\n  retryAfter?: number;\n}\n\n/** Defines headers for OnlineEndpoints_delete operation. */\nexport interface OnlineEndpointsDeleteHeaders {\n  /** Timeout for the client to use when polling the asynchronous operation. */\n  xMsAsyncOperationTimeout?: string;\n  /** URI to poll for asynchronous operation result. */\n  location?: string;\n  /** Duration the client should wait between requests, in seconds. */\n  retryAfter?: number;\n}\n\n/** Defines headers for OnlineEndpoints_update operation. */\nexport interface OnlineEndpointsUpdateHeaders {\n  /** Timeout for the client to use when polling the asynchronous operation. */\n  xMsAsyncOperationTimeout?: string;\n  /** URI to poll for asynchronous operation result. */\n  location?: string;\n  /** Duration the client should wait between requests, in seconds. */\n  retryAfter?: number;\n}\n\n/** Defines headers for OnlineEndpoints_createOrUpdate operation. */\nexport interface OnlineEndpointsCreateOrUpdateHeaders {\n  /** Timeout for the client to use when polling the asynchronous operation. */\n  xMsAsyncOperationTimeout?: string;\n  /** URI to poll for asynchronous operation status. */\n  azureAsyncOperation?: string;\n}\n\n/** Defines headers for OnlineEndpoints_regenerateKeys operation. */\nexport interface OnlineEndpointsRegenerateKeysHeaders {\n  /** URI to poll for asynchronous operation result. */\n  location?: string;\n  /** Duration the client should wait between requests, in seconds. */\n  retryAfter?: number;\n}\n\n/** Defines headers for OnlineDeployments_delete operation. */\nexport interface OnlineDeploymentsDeleteHeaders {\n  /** Timeout for the client to use when polling the asynchronous operation. */\n  xMsAsyncOperationTimeout?: string;\n  /** URI to poll for asynchronous operation result. */\n  location?: string;\n  /** Duration the client should wait between requests, in seconds. */\n  retryAfter?: number;\n}\n\n/** Defines headers for OnlineDeployments_update operation. */\nexport interface OnlineDeploymentsUpdateHeaders {\n  /** Timeout for the client to use when polling the asynchronous operation. */\n  xMsAsyncOperationTimeout?: string;\n  /** URI to poll for asynchronous operation result. */\n  location?: string;\n  /** Duration the client should wait between requests, in seconds. */\n  retryAfter?: number;\n}\n\n/** Defines headers for OnlineDeployments_createOrUpdate operation. */\nexport interface OnlineDeploymentsCreateOrUpdateHeaders {\n  /** Timeout for the client to use when polling the asynchronous operation. */\n  xMsAsyncOperationTimeout?: string;\n  /** URI to poll for asynchronous operation status. */\n  azureAsyncOperation?: string;\n}\n\n/** Defines headers for Schedules_delete operation. */\nexport interface SchedulesDeleteHeaders {\n  /** Timeout for the client to use when polling the asynchronous operation. */\n  xMsAsyncOperationTimeout?: string;\n  /** URI to poll for asynchronous operation result. */\n  location?: string;\n  /** Duration the client should wait between requests, in seconds. */\n  retryAfter?: number;\n}\n\n/** Defines headers for Schedules_createOrUpdate operation. */\nexport interface SchedulesCreateOrUpdateHeaders {\n  /** Timeout for the client to use when polling the asynchronous operation. */\n  xMsAsyncOperationTimeout?: string;\n  /** URI to poll for asynchronous operation status. */\n  azureAsyncOperation?: string;\n}\n\n/** Known values of {@link ProvisioningState} that the service accepts. */\nexport enum KnownProvisioningState {\n  /** Unknown */\n  Unknown = \"Unknown\",\n  /** Updating */\n  Updating = \"Updating\",\n  /** Creating */\n  Creating = \"Creating\",\n  /** Deleting */\n  Deleting = \"Deleting\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Canceled */\n  Canceled = \"Canceled\"\n}\n\n/**\n * Defines values for ProvisioningState. \\\n * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unknown** \\\n * **Updating** \\\n * **Creating** \\\n * **Deleting** \\\n * **Succeeded** \\\n * **Failed** \\\n * **Canceled**\n */\nexport type ProvisioningState = string;\n\n/** Known values of {@link EncryptionStatus} that the service accepts. */\nexport enum KnownEncryptionStatus {\n  /** Enabled */\n  Enabled = \"Enabled\",\n  /** Disabled */\n  Disabled = \"Disabled\"\n}\n\n/**\n * Defines values for EncryptionStatus. \\\n * {@link KnownEncryptionStatus} can be used interchangeably with EncryptionStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled** \\\n * **Disabled**\n */\nexport type EncryptionStatus = string;\n\n/** Known values of {@link PublicNetworkAccess} that the service accepts. */\nexport enum KnownPublicNetworkAccess {\n  /** Enabled */\n  Enabled = \"Enabled\",\n  /** Disabled */\n  Disabled = \"Disabled\"\n}\n\n/**\n * Defines values for PublicNetworkAccess. \\\n * {@link KnownPublicNetworkAccess} can be used interchangeably with PublicNetworkAccess,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled** \\\n * **Disabled**\n */\nexport type PublicNetworkAccess = string;\n\n/** Known values of {@link PrivateEndpointServiceConnectionStatus} that the service accepts. */\nexport enum KnownPrivateEndpointServiceConnectionStatus {\n  /** Pending */\n  Pending = \"Pending\",\n  /** Approved */\n  Approved = \"Approved\",\n  /** Rejected */\n  Rejected = \"Rejected\",\n  /** Disconnected */\n  Disconnected = \"Disconnected\",\n  /** Timeout */\n  Timeout = \"Timeout\"\n}\n\n/**\n * Defines values for PrivateEndpointServiceConnectionStatus. \\\n * {@link KnownPrivateEndpointServiceConnectionStatus} can be used interchangeably with PrivateEndpointServiceConnectionStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Pending** \\\n * **Approved** \\\n * **Rejected** \\\n * **Disconnected** \\\n * **Timeout**\n */\nexport type PrivateEndpointServiceConnectionStatus = string;\n\n/** Known values of {@link PrivateEndpointConnectionProvisioningState} that the service accepts. */\nexport enum KnownPrivateEndpointConnectionProvisioningState {\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Creating */\n  Creating = \"Creating\",\n  /** Deleting */\n  Deleting = \"Deleting\",\n  /** Failed */\n  Failed = \"Failed\"\n}\n\n/**\n * Defines values for PrivateEndpointConnectionProvisioningState. \\\n * {@link KnownPrivateEndpointConnectionProvisioningState} can be used interchangeably with PrivateEndpointConnectionProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Succeeded** \\\n * **Creating** \\\n * **Deleting** \\\n * **Failed**\n */\nexport type PrivateEndpointConnectionProvisioningState = string;\n\n/** Known values of {@link ManagedServiceIdentityType} that the service accepts. */\nexport enum KnownManagedServiceIdentityType {\n  /** None */\n  None = \"None\",\n  /** SystemAssigned */\n  SystemAssigned = \"SystemAssigned\",\n  /** UserAssigned */\n  UserAssigned = \"UserAssigned\",\n  /** SystemAssignedUserAssigned */\n  SystemAssignedUserAssigned = \"SystemAssigned,UserAssigned\"\n}\n\n/**\n * Defines values for ManagedServiceIdentityType. \\\n * {@link KnownManagedServiceIdentityType} can be used interchangeably with ManagedServiceIdentityType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **SystemAssigned** \\\n * **UserAssigned** \\\n * **SystemAssigned,UserAssigned**\n */\nexport type ManagedServiceIdentityType = string;\n\n/** Known values of {@link CreatedByType} that the service accepts. */\nexport enum KnownCreatedByType {\n  /** User */\n  User = \"User\",\n  /** Application */\n  Application = \"Application\",\n  /** ManagedIdentity */\n  ManagedIdentity = \"ManagedIdentity\",\n  /** Key */\n  Key = \"Key\"\n}\n\n/**\n * Defines values for CreatedByType. \\\n * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **User** \\\n * **Application** \\\n * **ManagedIdentity** \\\n * **Key**\n */\nexport type CreatedByType = string;\n\n/** Known values of {@link DiagnoseResultLevel} that the service accepts. */\nexport enum KnownDiagnoseResultLevel {\n  /** Warning */\n  Warning = \"Warning\",\n  /** Error */\n  Error = \"Error\",\n  /** Information */\n  Information = \"Information\"\n}\n\n/**\n * Defines values for DiagnoseResultLevel. \\\n * {@link KnownDiagnoseResultLevel} can be used interchangeably with DiagnoseResultLevel,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Warning** \\\n * **Error** \\\n * **Information**\n */\nexport type DiagnoseResultLevel = string;\n\n/** Known values of {@link UsageUnit} that the service accepts. */\nexport enum KnownUsageUnit {\n  /** Count */\n  Count = \"Count\"\n}\n\n/**\n * Defines values for UsageUnit. \\\n * {@link KnownUsageUnit} can be used interchangeably with UsageUnit,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Count**\n */\nexport type UsageUnit = string;\n\n/** Known values of {@link BillingCurrency} that the service accepts. */\nexport enum KnownBillingCurrency {\n  /** USD */\n  USD = \"USD\"\n}\n\n/**\n * Defines values for BillingCurrency. \\\n * {@link KnownBillingCurrency} can be used interchangeably with BillingCurrency,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **USD**\n */\nexport type BillingCurrency = string;\n\n/** Known values of {@link UnitOfMeasure} that the service accepts. */\nexport enum KnownUnitOfMeasure {\n  /** OneHour */\n  OneHour = \"OneHour\"\n}\n\n/**\n * Defines values for UnitOfMeasure. \\\n * {@link KnownUnitOfMeasure} can be used interchangeably with UnitOfMeasure,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **OneHour**\n */\nexport type UnitOfMeasure = string;\n\n/** Known values of {@link VMPriceOSType} that the service accepts. */\nexport enum KnownVMPriceOSType {\n  /** Linux */\n  Linux = \"Linux\",\n  /** Windows */\n  Windows = \"Windows\"\n}\n\n/**\n * Defines values for VMPriceOSType. \\\n * {@link KnownVMPriceOSType} can be used interchangeably with VMPriceOSType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Linux** \\\n * **Windows**\n */\nexport type VMPriceOSType = string;\n\n/** Known values of {@link VMTier} that the service accepts. */\nexport enum KnownVMTier {\n  /** Standard */\n  Standard = \"Standard\",\n  /** LowPriority */\n  LowPriority = \"LowPriority\",\n  /** Spot */\n  Spot = \"Spot\"\n}\n\n/**\n * Defines values for VMTier. \\\n * {@link KnownVMTier} can be used interchangeably with VMTier,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Standard** \\\n * **LowPriority** \\\n * **Spot**\n */\nexport type VMTier = string;\n\n/** Known values of {@link QuotaUnit} that the service accepts. */\nexport enum KnownQuotaUnit {\n  /** Count */\n  Count = \"Count\"\n}\n\n/**\n * Defines values for QuotaUnit. \\\n * {@link KnownQuotaUnit} can be used interchangeably with QuotaUnit,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Count**\n */\nexport type QuotaUnit = string;\n\n/** Known values of {@link Status} that the service accepts. */\nexport enum KnownStatus {\n  /** Undefined */\n  Undefined = \"Undefined\",\n  /** Success */\n  Success = \"Success\",\n  /** Failure */\n  Failure = \"Failure\",\n  /** InvalidQuotaBelowClusterMinimum */\n  InvalidQuotaBelowClusterMinimum = \"InvalidQuotaBelowClusterMinimum\",\n  /** InvalidQuotaExceedsSubscriptionLimit */\n  InvalidQuotaExceedsSubscriptionLimit = \"InvalidQuotaExceedsSubscriptionLimit\",\n  /** InvalidVMFamilyName */\n  InvalidVMFamilyName = \"InvalidVMFamilyName\",\n  /** OperationNotSupportedForSku */\n  OperationNotSupportedForSku = \"OperationNotSupportedForSku\",\n  /** OperationNotEnabledForRegion */\n  OperationNotEnabledForRegion = \"OperationNotEnabledForRegion\"\n}\n\n/**\n * Defines values for Status. \\\n * {@link KnownStatus} can be used interchangeably with Status,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Undefined** \\\n * **Success** \\\n * **Failure** \\\n * **InvalidQuotaBelowClusterMinimum** \\\n * **InvalidQuotaExceedsSubscriptionLimit** \\\n * **InvalidVMFamilyName** \\\n * **OperationNotSupportedForSku** \\\n * **OperationNotEnabledForRegion**\n */\nexport type Status = string;\n\n/** Known values of {@link ComputeType} that the service accepts. */\nexport enum KnownComputeType {\n  /** AKS */\n  AKS = \"AKS\",\n  /** Kubernetes */\n  Kubernetes = \"Kubernetes\",\n  /** AmlCompute */\n  AmlCompute = \"AmlCompute\",\n  /** ComputeInstance */\n  ComputeInstance = \"ComputeInstance\",\n  /** DataFactory */\n  DataFactory = \"DataFactory\",\n  /** VirtualMachine */\n  VirtualMachine = \"VirtualMachine\",\n  /** HDInsight */\n  HDInsight = \"HDInsight\",\n  /** Databricks */\n  Databricks = \"Databricks\",\n  /** DataLakeAnalytics */\n  DataLakeAnalytics = \"DataLakeAnalytics\",\n  /** SynapseSpark */\n  SynapseSpark = \"SynapseSpark\"\n}\n\n/**\n * Defines values for ComputeType. \\\n * {@link KnownComputeType} can be used interchangeably with ComputeType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **AKS** \\\n * **Kubernetes** \\\n * **AmlCompute** \\\n * **ComputeInstance** \\\n * **DataFactory** \\\n * **VirtualMachine** \\\n * **HDInsight** \\\n * **Databricks** \\\n * **DataLakeAnalytics** \\\n * **SynapseSpark**\n */\nexport type ComputeType = string;\n\n/** Known values of {@link UnderlyingResourceAction} that the service accepts. */\nexport enum KnownUnderlyingResourceAction {\n  /** Delete */\n  Delete = \"Delete\",\n  /** Detach */\n  Detach = \"Detach\"\n}\n\n/**\n * Defines values for UnderlyingResourceAction. \\\n * {@link KnownUnderlyingResourceAction} can be used interchangeably with UnderlyingResourceAction,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Delete** \\\n * **Detach**\n */\nexport type UnderlyingResourceAction = string;\n\n/** Known values of {@link NodeState} that the service accepts. */\nexport enum KnownNodeState {\n  /** Idle */\n  Idle = \"idle\",\n  /** Running */\n  Running = \"running\",\n  /** Preparing */\n  Preparing = \"preparing\",\n  /** Unusable */\n  Unusable = \"unusable\",\n  /** Leaving */\n  Leaving = \"leaving\",\n  /** Preempted */\n  Preempted = \"preempted\"\n}\n\n/**\n * Defines values for NodeState. \\\n * {@link KnownNodeState} can be used interchangeably with NodeState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **idle** \\\n * **running** \\\n * **preparing** \\\n * **unusable** \\\n * **leaving** \\\n * **preempted**\n */\nexport type NodeState = string;\n\n/** Known values of {@link ConnectionAuthType} that the service accepts. */\nexport enum KnownConnectionAuthType {\n  /** PAT */\n  PAT = \"PAT\",\n  /** ManagedIdentity */\n  ManagedIdentity = \"ManagedIdentity\",\n  /** UsernamePassword */\n  UsernamePassword = \"UsernamePassword\",\n  /** None */\n  None = \"None\",\n  /** SAS */\n  SAS = \"SAS\"\n}\n\n/**\n * Defines values for ConnectionAuthType. \\\n * {@link KnownConnectionAuthType} can be used interchangeably with ConnectionAuthType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **PAT** \\\n * **ManagedIdentity** \\\n * **UsernamePassword** \\\n * **None** \\\n * **SAS**\n */\nexport type ConnectionAuthType = string;\n\n/** Known values of {@link ConnectionCategory} that the service accepts. */\nexport enum KnownConnectionCategory {\n  /** PythonFeed */\n  PythonFeed = \"PythonFeed\",\n  /** ContainerRegistry */\n  ContainerRegistry = \"ContainerRegistry\",\n  /** Git */\n  Git = \"Git\"\n}\n\n/**\n * Defines values for ConnectionCategory. \\\n * {@link KnownConnectionCategory} can be used interchangeably with ConnectionCategory,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **PythonFeed** \\\n * **ContainerRegistry** \\\n * **Git**\n */\nexport type ConnectionCategory = string;\n\n/** Known values of {@link ValueFormat} that the service accepts. */\nexport enum KnownValueFormat {\n  /** Json */\n  Json = \"JSON\"\n}\n\n/**\n * Defines values for ValueFormat. \\\n * {@link KnownValueFormat} can be used interchangeably with ValueFormat,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **JSON**\n */\nexport type ValueFormat = string;\n\n/** Known values of {@link EndpointProvisioningState} that the service accepts. */\nexport enum KnownEndpointProvisioningState {\n  /** Creating */\n  Creating = \"Creating\",\n  /** Deleting */\n  Deleting = \"Deleting\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Updating */\n  Updating = \"Updating\",\n  /** Canceled */\n  Canceled = \"Canceled\"\n}\n\n/**\n * Defines values for EndpointProvisioningState. \\\n * {@link KnownEndpointProvisioningState} can be used interchangeably with EndpointProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Creating** \\\n * **Deleting** \\\n * **Succeeded** \\\n * **Failed** \\\n * **Updating** \\\n * **Canceled**\n */\nexport type EndpointProvisioningState = string;\n\n/** Known values of {@link EndpointAuthMode} that the service accepts. */\nexport enum KnownEndpointAuthMode {\n  /** AMLToken */\n  AMLToken = \"AMLToken\",\n  /** Key */\n  Key = \"Key\",\n  /** AADToken */\n  AADToken = \"AADToken\"\n}\n\n/**\n * Defines values for EndpointAuthMode. \\\n * {@link KnownEndpointAuthMode} can be used interchangeably with EndpointAuthMode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **AMLToken** \\\n * **Key** \\\n * **AADToken**\n */\nexport type EndpointAuthMode = string;\n\n/** Known values of {@link BatchLoggingLevel} that the service accepts. */\nexport enum KnownBatchLoggingLevel {\n  /** Info */\n  Info = \"Info\",\n  /** Warning */\n  Warning = \"Warning\",\n  /** Debug */\n  Debug = \"Debug\"\n}\n\n/**\n * Defines values for BatchLoggingLevel. \\\n * {@link KnownBatchLoggingLevel} can be used interchangeably with BatchLoggingLevel,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Info** \\\n * **Warning** \\\n * **Debug**\n */\nexport type BatchLoggingLevel = string;\n\n/** Known values of {@link ReferenceType} that the service accepts. */\nexport enum KnownReferenceType {\n  /** Id */\n  Id = \"Id\",\n  /** DataPath */\n  DataPath = \"DataPath\",\n  /** OutputPath */\n  OutputPath = \"OutputPath\"\n}\n\n/**\n * Defines values for ReferenceType. \\\n * {@link KnownReferenceType} can be used interchangeably with ReferenceType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Id** \\\n * **DataPath** \\\n * **OutputPath**\n */\nexport type ReferenceType = string;\n\n/** Known values of {@link BatchOutputAction} that the service accepts. */\nexport enum KnownBatchOutputAction {\n  /** SummaryOnly */\n  SummaryOnly = \"SummaryOnly\",\n  /** AppendRow */\n  AppendRow = \"AppendRow\"\n}\n\n/**\n * Defines values for BatchOutputAction. \\\n * {@link KnownBatchOutputAction} can be used interchangeably with BatchOutputAction,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **SummaryOnly** \\\n * **AppendRow**\n */\nexport type BatchOutputAction = string;\n\n/** Known values of {@link DeploymentProvisioningState} that the service accepts. */\nexport enum KnownDeploymentProvisioningState {\n  /** Creating */\n  Creating = \"Creating\",\n  /** Deleting */\n  Deleting = \"Deleting\",\n  /** Scaling */\n  Scaling = \"Scaling\",\n  /** Updating */\n  Updating = \"Updating\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Canceled */\n  Canceled = \"Canceled\"\n}\n\n/**\n * Defines values for DeploymentProvisioningState. \\\n * {@link KnownDeploymentProvisioningState} can be used interchangeably with DeploymentProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Creating** \\\n * **Deleting** \\\n * **Scaling** \\\n * **Updating** \\\n * **Succeeded** \\\n * **Failed** \\\n * **Canceled**\n */\nexport type DeploymentProvisioningState = string;\n\n/** Known values of {@link ListViewType} that the service accepts. */\nexport enum KnownListViewType {\n  /** ActiveOnly */\n  ActiveOnly = \"ActiveOnly\",\n  /** ArchivedOnly */\n  ArchivedOnly = \"ArchivedOnly\",\n  /** All */\n  All = \"All\"\n}\n\n/**\n * Defines values for ListViewType. \\\n * {@link KnownListViewType} can be used interchangeably with ListViewType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **ActiveOnly** \\\n * **ArchivedOnly** \\\n * **All**\n */\nexport type ListViewType = string;\n\n/** Known values of {@link DataType} that the service accepts. */\nexport enum KnownDataType {\n  /** UriFile */\n  UriFile = \"uri_file\",\n  /** UriFolder */\n  UriFolder = \"uri_folder\",\n  /** Mltable */\n  Mltable = \"mltable\"\n}\n\n/**\n * Defines values for DataType. \\\n * {@link KnownDataType} can be used interchangeably with DataType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **uri_file** \\\n * **uri_folder** \\\n * **mltable**\n */\nexport type DataType = string;\n\n/** Known values of {@link CredentialsType} that the service accepts. */\nexport enum KnownCredentialsType {\n  /** AccountKey */\n  AccountKey = \"AccountKey\",\n  /** Certificate */\n  Certificate = \"Certificate\",\n  /** None */\n  None = \"None\",\n  /** Sas */\n  Sas = \"Sas\",\n  /** ServicePrincipal */\n  ServicePrincipal = \"ServicePrincipal\"\n}\n\n/**\n * Defines values for CredentialsType. \\\n * {@link KnownCredentialsType} can be used interchangeably with CredentialsType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **AccountKey** \\\n * **Certificate** \\\n * **None** \\\n * **Sas** \\\n * **ServicePrincipal**\n */\nexport type CredentialsType = string;\n\n/** Known values of {@link DatastoreType} that the service accepts. */\nexport enum KnownDatastoreType {\n  /** AzureBlob */\n  AzureBlob = \"AzureBlob\",\n  /** AzureDataLakeGen1 */\n  AzureDataLakeGen1 = \"AzureDataLakeGen1\",\n  /** AzureDataLakeGen2 */\n  AzureDataLakeGen2 = \"AzureDataLakeGen2\",\n  /** AzureFile */\n  AzureFile = \"AzureFile\"\n}\n\n/**\n * Defines values for DatastoreType. \\\n * {@link KnownDatastoreType} can be used interchangeably with DatastoreType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **AzureBlob** \\\n * **AzureDataLakeGen1** \\\n * **AzureDataLakeGen2** \\\n * **AzureFile**\n */\nexport type DatastoreType = string;\n\n/** Known values of {@link SecretsType} that the service accepts. */\nexport enum KnownSecretsType {\n  /** AccountKey */\n  AccountKey = \"AccountKey\",\n  /** Certificate */\n  Certificate = \"Certificate\",\n  /** Sas */\n  Sas = \"Sas\",\n  /** ServicePrincipal */\n  ServicePrincipal = \"ServicePrincipal\"\n}\n\n/**\n * Defines values for SecretsType. \\\n * {@link KnownSecretsType} can be used interchangeably with SecretsType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **AccountKey** \\\n * **Certificate** \\\n * **Sas** \\\n * **ServicePrincipal**\n */\nexport type SecretsType = string;\n\n/** Known values of {@link AutoRebuildSetting} that the service accepts. */\nexport enum KnownAutoRebuildSetting {\n  /** Disabled */\n  Disabled = \"Disabled\",\n  /** OnBaseImageUpdate */\n  OnBaseImageUpdate = \"OnBaseImageUpdate\"\n}\n\n/**\n * Defines values for AutoRebuildSetting. \\\n * {@link KnownAutoRebuildSetting} can be used interchangeably with AutoRebuildSetting,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Disabled** \\\n * **OnBaseImageUpdate**\n */\nexport type AutoRebuildSetting = string;\n\n/** Known values of {@link EnvironmentType} that the service accepts. */\nexport enum KnownEnvironmentType {\n  /** Curated */\n  Curated = \"Curated\",\n  /** UserCreated */\n  UserCreated = \"UserCreated\"\n}\n\n/**\n * Defines values for EnvironmentType. \\\n * {@link KnownEnvironmentType} can be used interchangeably with EnvironmentType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Curated** \\\n * **UserCreated**\n */\nexport type EnvironmentType = string;\n\n/** Known values of {@link OperatingSystemType} that the service accepts. */\nexport enum KnownOperatingSystemType {\n  /** Linux */\n  Linux = \"Linux\",\n  /** Windows */\n  Windows = \"Windows\"\n}\n\n/**\n * Defines values for OperatingSystemType. \\\n * {@link KnownOperatingSystemType} can be used interchangeably with OperatingSystemType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Linux** \\\n * **Windows**\n */\nexport type OperatingSystemType = string;\n\n/** Known values of {@link IdentityConfigurationType} that the service accepts. */\nexport enum KnownIdentityConfigurationType {\n  /** Managed */\n  Managed = \"Managed\",\n  /** AMLToken */\n  AMLToken = \"AMLToken\",\n  /** UserIdentity */\n  UserIdentity = \"UserIdentity\"\n}\n\n/**\n * Defines values for IdentityConfigurationType. \\\n * {@link KnownIdentityConfigurationType} can be used interchangeably with IdentityConfigurationType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Managed** \\\n * **AMLToken** \\\n * **UserIdentity**\n */\nexport type IdentityConfigurationType = string;\n\n/** Known values of {@link JobType} that the service accepts. */\nexport enum KnownJobType {\n  /** AutoML */\n  AutoML = \"AutoML\",\n  /** Command */\n  Command = \"Command\",\n  /** Sweep */\n  Sweep = \"Sweep\",\n  /** Pipeline */\n  Pipeline = \"Pipeline\"\n}\n\n/**\n * Defines values for JobType. \\\n * {@link KnownJobType} can be used interchangeably with JobType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **AutoML** \\\n * **Command** \\\n * **Sweep** \\\n * **Pipeline**\n */\nexport type JobType = string;\n\n/** Known values of {@link JobStatus} that the service accepts. */\nexport enum KnownJobStatus {\n  /** Run hasn't started yet. */\n  NotStarted = \"NotStarted\",\n  /** Run has started. The user has a run ID. */\n  Starting = \"Starting\",\n  /** (Not used currently) It will be used if ES is creating the compute target. */\n  Provisioning = \"Provisioning\",\n  /** The run environment is being prepared. */\n  Preparing = \"Preparing\",\n  /** The job is queued in the compute target. For example, in BatchAI the job is in queued state, while waiting for all required nodes to be ready. */\n  Queued = \"Queued\",\n  /** The job started to run in the compute target. */\n  Running = \"Running\",\n  /** Job is completed in the target. It is in output collection state now. */\n  Finalizing = \"Finalizing\",\n  /** Cancellation has been requested for the job. */\n  CancelRequested = \"CancelRequested\",\n  /** Job completed successfully. This reflects that both the job itself and output collection states completed successfully */\n  Completed = \"Completed\",\n  /** Job failed. */\n  Failed = \"Failed\",\n  /** Following cancellation request, the job is now successfully canceled. */\n  Canceled = \"Canceled\",\n  /**\n   * When heartbeat is enabled, if the run isn't updating any information to RunHistory then the run goes to NotResponding state.\n   * NotResponding is the only state that is exempt from strict transition orders. A run can go from NotResponding to any of the previous states.\n   */\n  NotResponding = \"NotResponding\",\n  /** The job is paused by users. Some adjustment to labeling jobs can be made only in paused state. */\n  Paused = \"Paused\",\n  /** Default job status if not mapped to all other statuses */\n  Unknown = \"Unknown\"\n}\n\n/**\n * Defines values for JobStatus. \\\n * {@link KnownJobStatus} can be used interchangeably with JobStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NotStarted**: Run hasn't started yet. \\\n * **Starting**: Run has started. The user has a run ID. \\\n * **Provisioning**: (Not used currently) It will be used if ES is creating the compute target. \\\n * **Preparing**: The run environment is being prepared. \\\n * **Queued**: The job is queued in the compute target. For example, in BatchAI the job is in queued state, while waiting for all required nodes to be ready. \\\n * **Running**: The job started to run in the compute target. \\\n * **Finalizing**: Job is completed in the target. It is in output collection state now. \\\n * **CancelRequested**: Cancellation has been requested for the job. \\\n * **Completed**: Job completed successfully. This reflects that both the job itself and output collection states completed successfully \\\n * **Failed**: Job failed. \\\n * **Canceled**: Following cancellation request, the job is now successfully canceled. \\\n * **NotResponding**: When heartbeat is enabled, if the run isn't updating any information to RunHistory then the run goes to NotResponding state.\n * NotResponding is the only state that is exempt from strict transition orders. A run can go from NotResponding to any of the previous states. \\\n * **Paused**: The job is paused by users. Some adjustment to labeling jobs can be made only in paused state. \\\n * **Unknown**: Default job status if not mapped to all other statuses\n */\nexport type JobStatus = string;\n\n/** Known values of {@link EndpointComputeType} that the service accepts. */\nexport enum KnownEndpointComputeType {\n  /** Managed */\n  Managed = \"Managed\",\n  /** Kubernetes */\n  Kubernetes = \"Kubernetes\",\n  /** AzureMLCompute */\n  AzureMLCompute = \"AzureMLCompute\"\n}\n\n/**\n * Defines values for EndpointComputeType. \\\n * {@link KnownEndpointComputeType} can be used interchangeably with EndpointComputeType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Managed** \\\n * **Kubernetes** \\\n * **AzureMLCompute**\n */\nexport type EndpointComputeType = string;\n\n/** Known values of {@link OrderString} that the service accepts. */\nexport enum KnownOrderString {\n  /** CreatedAtDesc */\n  CreatedAtDesc = \"CreatedAtDesc\",\n  /** CreatedAtAsc */\n  CreatedAtAsc = \"CreatedAtAsc\",\n  /** UpdatedAtDesc */\n  UpdatedAtDesc = \"UpdatedAtDesc\",\n  /** UpdatedAtAsc */\n  UpdatedAtAsc = \"UpdatedAtAsc\"\n}\n\n/**\n * Defines values for OrderString. \\\n * {@link KnownOrderString} can be used interchangeably with OrderString,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **CreatedAtDesc** \\\n * **CreatedAtAsc** \\\n * **UpdatedAtDesc** \\\n * **UpdatedAtAsc**\n */\nexport type OrderString = string;\n\n/** Known values of {@link PublicNetworkAccessType} that the service accepts. */\nexport enum KnownPublicNetworkAccessType {\n  /** Enabled */\n  Enabled = \"Enabled\",\n  /** Disabled */\n  Disabled = \"Disabled\"\n}\n\n/**\n * Defines values for PublicNetworkAccessType. \\\n * {@link KnownPublicNetworkAccessType} can be used interchangeably with PublicNetworkAccessType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled** \\\n * **Disabled**\n */\nexport type PublicNetworkAccessType = string;\n\n/** Known values of {@link EgressPublicNetworkAccessType} that the service accepts. */\nexport enum KnownEgressPublicNetworkAccessType {\n  /** Enabled */\n  Enabled = \"Enabled\",\n  /** Disabled */\n  Disabled = \"Disabled\"\n}\n\n/**\n * Defines values for EgressPublicNetworkAccessType. \\\n * {@link KnownEgressPublicNetworkAccessType} can be used interchangeably with EgressPublicNetworkAccessType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled** \\\n * **Disabled**\n */\nexport type EgressPublicNetworkAccessType = string;\n\n/** Known values of {@link ScaleType} that the service accepts. */\nexport enum KnownScaleType {\n  /** Default */\n  Default = \"Default\",\n  /** TargetUtilization */\n  TargetUtilization = \"TargetUtilization\"\n}\n\n/**\n * Defines values for ScaleType. \\\n * {@link KnownScaleType} can be used interchangeably with ScaleType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Default** \\\n * **TargetUtilization**\n */\nexport type ScaleType = string;\n\n/** Known values of {@link ContainerType} that the service accepts. */\nexport enum KnownContainerType {\n  /** StorageInitializer */\n  StorageInitializer = \"StorageInitializer\",\n  /** InferenceServer */\n  InferenceServer = \"InferenceServer\"\n}\n\n/**\n * Defines values for ContainerType. \\\n * {@link KnownContainerType} can be used interchangeably with ContainerType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **StorageInitializer** \\\n * **InferenceServer**\n */\nexport type ContainerType = string;\n\n/** Known values of {@link SkuScaleType} that the service accepts. */\nexport enum KnownSkuScaleType {\n  /** Automatically scales node count. */\n  Automatic = \"Automatic\",\n  /** Node count scaled upon user request. */\n  Manual = \"Manual\",\n  /** Fixed set of nodes. */\n  None = \"None\"\n}\n\n/**\n * Defines values for SkuScaleType. \\\n * {@link KnownSkuScaleType} can be used interchangeably with SkuScaleType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Automatic**: Automatically scales node count. \\\n * **Manual**: Node count scaled upon user request. \\\n * **None**: Fixed set of nodes.\n */\nexport type SkuScaleType = string;\n\n/** Known values of {@link KeyType} that the service accepts. */\nexport enum KnownKeyType {\n  /** Primary */\n  Primary = \"Primary\",\n  /** Secondary */\n  Secondary = \"Secondary\"\n}\n\n/**\n * Defines values for KeyType. \\\n * {@link KnownKeyType} can be used interchangeably with KeyType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Primary** \\\n * **Secondary**\n */\nexport type KeyType = string;\n\n/** Known values of {@link ScheduleListViewType} that the service accepts. */\nexport enum KnownScheduleListViewType {\n  /** EnabledOnly */\n  EnabledOnly = \"EnabledOnly\",\n  /** DisabledOnly */\n  DisabledOnly = \"DisabledOnly\",\n  /** All */\n  All = \"All\"\n}\n\n/**\n * Defines values for ScheduleListViewType. \\\n * {@link KnownScheduleListViewType} can be used interchangeably with ScheduleListViewType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **EnabledOnly** \\\n * **DisabledOnly** \\\n * **All**\n */\nexport type ScheduleListViewType = string;\n\n/** Known values of {@link ScheduleActionType} that the service accepts. */\nexport enum KnownScheduleActionType {\n  /** CreateJob */\n  CreateJob = \"CreateJob\",\n  /** InvokeBatchEndpoint */\n  InvokeBatchEndpoint = \"InvokeBatchEndpoint\"\n}\n\n/**\n * Defines values for ScheduleActionType. \\\n * {@link KnownScheduleActionType} can be used interchangeably with ScheduleActionType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **CreateJob** \\\n * **InvokeBatchEndpoint**\n */\nexport type ScheduleActionType = string;\n\n/** Known values of {@link ScheduleProvisioningStatus} that the service accepts. */\nexport enum KnownScheduleProvisioningStatus {\n  /** Creating */\n  Creating = \"Creating\",\n  /** Updating */\n  Updating = \"Updating\",\n  /** Deleting */\n  Deleting = \"Deleting\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Canceled */\n  Canceled = \"Canceled\"\n}\n\n/**\n * Defines values for ScheduleProvisioningStatus. \\\n * {@link KnownScheduleProvisioningStatus} can be used interchangeably with ScheduleProvisioningStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Creating** \\\n * **Updating** \\\n * **Deleting** \\\n * **Succeeded** \\\n * **Failed** \\\n * **Canceled**\n */\nexport type ScheduleProvisioningStatus = string;\n\n/** Known values of {@link TriggerType} that the service accepts. */\nexport enum KnownTriggerType {\n  /** Recurrence */\n  Recurrence = \"Recurrence\",\n  /** Cron */\n  Cron = \"Cron\"\n}\n\n/**\n * Defines values for TriggerType. \\\n * {@link KnownTriggerType} can be used interchangeably with TriggerType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Recurrence** \\\n * **Cron**\n */\nexport type TriggerType = string;\n\n/** Known values of {@link ClusterPurpose} that the service accepts. */\nexport enum KnownClusterPurpose {\n  /** FastProd */\n  FastProd = \"FastProd\",\n  /** DenseProd */\n  DenseProd = \"DenseProd\",\n  /** DevTest */\n  DevTest = \"DevTest\"\n}\n\n/**\n * Defines values for ClusterPurpose. \\\n * {@link KnownClusterPurpose} can be used interchangeably with ClusterPurpose,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **FastProd** \\\n * **DenseProd** \\\n * **DevTest**\n */\nexport type ClusterPurpose = string;\n\n/** Known values of {@link SslConfigStatus} that the service accepts. */\nexport enum KnownSslConfigStatus {\n  /** Disabled */\n  Disabled = \"Disabled\",\n  /** Enabled */\n  Enabled = \"Enabled\",\n  /** Auto */\n  Auto = \"Auto\"\n}\n\n/**\n * Defines values for SslConfigStatus. \\\n * {@link KnownSslConfigStatus} can be used interchangeably with SslConfigStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Disabled** \\\n * **Enabled** \\\n * **Auto**\n */\nexport type SslConfigStatus = string;\n\n/** Known values of {@link LoadBalancerType} that the service accepts. */\nexport enum KnownLoadBalancerType {\n  /** PublicIp */\n  PublicIp = \"PublicIp\",\n  /** InternalLoadBalancer */\n  InternalLoadBalancer = \"InternalLoadBalancer\"\n}\n\n/**\n * Defines values for LoadBalancerType. \\\n * {@link KnownLoadBalancerType} can be used interchangeably with LoadBalancerType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **PublicIp** \\\n * **InternalLoadBalancer**\n */\nexport type LoadBalancerType = string;\n\n/** Known values of {@link OsType} that the service accepts. */\nexport enum KnownOsType {\n  /** Linux */\n  Linux = \"Linux\",\n  /** Windows */\n  Windows = \"Windows\"\n}\n\n/**\n * Defines values for OsType. \\\n * {@link KnownOsType} can be used interchangeably with OsType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Linux** \\\n * **Windows**\n */\nexport type OsType = string;\n\n/** Known values of {@link VmPriority} that the service accepts. */\nexport enum KnownVmPriority {\n  /** Dedicated */\n  Dedicated = \"Dedicated\",\n  /** LowPriority */\n  LowPriority = \"LowPriority\"\n}\n\n/**\n * Defines values for VmPriority. \\\n * {@link KnownVmPriority} can be used interchangeably with VmPriority,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Dedicated** \\\n * **LowPriority**\n */\nexport type VmPriority = string;\n\n/** Known values of {@link RemoteLoginPortPublicAccess} that the service accepts. */\nexport enum KnownRemoteLoginPortPublicAccess {\n  /** Enabled */\n  Enabled = \"Enabled\",\n  /** Disabled */\n  Disabled = \"Disabled\",\n  /** NotSpecified */\n  NotSpecified = \"NotSpecified\"\n}\n\n/**\n * Defines values for RemoteLoginPortPublicAccess. \\\n * {@link KnownRemoteLoginPortPublicAccess} can be used interchangeably with RemoteLoginPortPublicAccess,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled** \\\n * **Disabled** \\\n * **NotSpecified**\n */\nexport type RemoteLoginPortPublicAccess = string;\n\n/** Known values of {@link AllocationState} that the service accepts. */\nexport enum KnownAllocationState {\n  /** Steady */\n  Steady = \"Steady\",\n  /** Resizing */\n  Resizing = \"Resizing\"\n}\n\n/**\n * Defines values for AllocationState. \\\n * {@link KnownAllocationState} can be used interchangeably with AllocationState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Steady** \\\n * **Resizing**\n */\nexport type AllocationState = string;\n\n/** Known values of {@link ApplicationSharingPolicy} that the service accepts. */\nexport enum KnownApplicationSharingPolicy {\n  /** Personal */\n  Personal = \"Personal\",\n  /** Shared */\n  Shared = \"Shared\"\n}\n\n/**\n * Defines values for ApplicationSharingPolicy. \\\n * {@link KnownApplicationSharingPolicy} can be used interchangeably with ApplicationSharingPolicy,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Personal** \\\n * **Shared**\n */\nexport type ApplicationSharingPolicy = string;\n\n/** Known values of {@link SshPublicAccess} that the service accepts. */\nexport enum KnownSshPublicAccess {\n  /** Enabled */\n  Enabled = \"Enabled\",\n  /** Disabled */\n  Disabled = \"Disabled\"\n}\n\n/**\n * Defines values for SshPublicAccess. \\\n * {@link KnownSshPublicAccess} can be used interchangeably with SshPublicAccess,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled** \\\n * **Disabled**\n */\nexport type SshPublicAccess = string;\n\n/** Known values of {@link ComputeInstanceState} that the service accepts. */\nexport enum KnownComputeInstanceState {\n  /** Creating */\n  Creating = \"Creating\",\n  /** CreateFailed */\n  CreateFailed = \"CreateFailed\",\n  /** Deleting */\n  Deleting = \"Deleting\",\n  /** Running */\n  Running = \"Running\",\n  /** Restarting */\n  Restarting = \"Restarting\",\n  /** JobRunning */\n  JobRunning = \"JobRunning\",\n  /** SettingUp */\n  SettingUp = \"SettingUp\",\n  /** SetupFailed */\n  SetupFailed = \"SetupFailed\",\n  /** Starting */\n  Starting = \"Starting\",\n  /** Stopped */\n  Stopped = \"Stopped\",\n  /** Stopping */\n  Stopping = \"Stopping\",\n  /** UserSettingUp */\n  UserSettingUp = \"UserSettingUp\",\n  /** UserSetupFailed */\n  UserSetupFailed = \"UserSetupFailed\",\n  /** Unknown */\n  Unknown = \"Unknown\",\n  /** Unusable */\n  Unusable = \"Unusable\"\n}\n\n/**\n * Defines values for ComputeInstanceState. \\\n * {@link KnownComputeInstanceState} can be used interchangeably with ComputeInstanceState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Creating** \\\n * **CreateFailed** \\\n * **Deleting** \\\n * **Running** \\\n * **Restarting** \\\n * **JobRunning** \\\n * **SettingUp** \\\n * **SetupFailed** \\\n * **Starting** \\\n * **Stopped** \\\n * **Stopping** \\\n * **UserSettingUp** \\\n * **UserSetupFailed** \\\n * **Unknown** \\\n * **Unusable**\n */\nexport type ComputeInstanceState = string;\n\n/** Known values of {@link ComputeInstanceAuthorizationType} that the service accepts. */\nexport enum KnownComputeInstanceAuthorizationType {\n  /** Personal */\n  Personal = \"personal\"\n}\n\n/**\n * Defines values for ComputeInstanceAuthorizationType. \\\n * {@link KnownComputeInstanceAuthorizationType} can be used interchangeably with ComputeInstanceAuthorizationType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **personal**\n */\nexport type ComputeInstanceAuthorizationType = string;\n\n/** Known values of {@link OperationName} that the service accepts. */\nexport enum KnownOperationName {\n  /** Create */\n  Create = \"Create\",\n  /** Start */\n  Start = \"Start\",\n  /** Stop */\n  Stop = \"Stop\",\n  /** Restart */\n  Restart = \"Restart\",\n  /** Reimage */\n  Reimage = \"Reimage\",\n  /** Delete */\n  Delete = \"Delete\"\n}\n\n/**\n * Defines values for OperationName. \\\n * {@link KnownOperationName} can be used interchangeably with OperationName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Create** \\\n * **Start** \\\n * **Stop** \\\n * **Restart** \\\n * **Reimage** \\\n * **Delete**\n */\nexport type OperationName = string;\n\n/** Known values of {@link OperationStatus} that the service accepts. */\nexport enum KnownOperationStatus {\n  /** InProgress */\n  InProgress = \"InProgress\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** CreateFailed */\n  CreateFailed = \"CreateFailed\",\n  /** StartFailed */\n  StartFailed = \"StartFailed\",\n  /** StopFailed */\n  StopFailed = \"StopFailed\",\n  /** RestartFailed */\n  RestartFailed = \"RestartFailed\",\n  /** ReimageFailed */\n  ReimageFailed = \"ReimageFailed\",\n  /** DeleteFailed */\n  DeleteFailed = \"DeleteFailed\"\n}\n\n/**\n * Defines values for OperationStatus. \\\n * {@link KnownOperationStatus} can be used interchangeably with OperationStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **InProgress** \\\n * **Succeeded** \\\n * **CreateFailed** \\\n * **StartFailed** \\\n * **StopFailed** \\\n * **RestartFailed** \\\n * **ReimageFailed** \\\n * **DeleteFailed**\n */\nexport type OperationStatus = string;\n\n/** Known values of {@link OperationTrigger} that the service accepts. */\nexport enum KnownOperationTrigger {\n  /** User */\n  User = \"User\",\n  /** Schedule */\n  Schedule = \"Schedule\",\n  /** IdleShutdown */\n  IdleShutdown = \"IdleShutdown\"\n}\n\n/**\n * Defines values for OperationTrigger. \\\n * {@link KnownOperationTrigger} can be used interchangeably with OperationTrigger,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **User** \\\n * **Schedule** \\\n * **IdleShutdown**\n */\nexport type OperationTrigger = string;\n\n/** Known values of {@link ProvisioningStatus} that the service accepts. */\nexport enum KnownProvisioningStatus {\n  /** Completed */\n  Completed = \"Completed\",\n  /** Provisioning */\n  Provisioning = \"Provisioning\",\n  /** Failed */\n  Failed = \"Failed\"\n}\n\n/**\n * Defines values for ProvisioningStatus. \\\n * {@link KnownProvisioningStatus} can be used interchangeably with ProvisioningStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Completed** \\\n * **Provisioning** \\\n * **Failed**\n */\nexport type ProvisioningStatus = string;\n\n/** Known values of {@link ScheduleStatus} that the service accepts. */\nexport enum KnownScheduleStatus {\n  /** Enabled */\n  Enabled = \"Enabled\",\n  /** Disabled */\n  Disabled = \"Disabled\"\n}\n\n/**\n * Defines values for ScheduleStatus. \\\n * {@link KnownScheduleStatus} can be used interchangeably with ScheduleStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled** \\\n * **Disabled**\n */\nexport type ScheduleStatus = string;\n\n/** Known values of {@link ComputePowerAction} that the service accepts. */\nexport enum KnownComputePowerAction {\n  /** Start */\n  Start = \"Start\",\n  /** Stop */\n  Stop = \"Stop\"\n}\n\n/**\n * Defines values for ComputePowerAction. \\\n * {@link KnownComputePowerAction} can be used interchangeably with ComputePowerAction,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Start** \\\n * **Stop**\n */\nexport type ComputePowerAction = string;\n\n/** Known values of {@link RecurrenceFrequency} that the service accepts. */\nexport enum KnownRecurrenceFrequency {\n  /** Minute frequency */\n  Minute = \"Minute\",\n  /** Hour frequency */\n  Hour = \"Hour\",\n  /** Day frequency */\n  Day = \"Day\",\n  /** Week frequency */\n  Week = \"Week\",\n  /** Month frequency */\n  Month = \"Month\"\n}\n\n/**\n * Defines values for RecurrenceFrequency. \\\n * {@link KnownRecurrenceFrequency} can be used interchangeably with RecurrenceFrequency,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Minute**: Minute frequency \\\n * **Hour**: Hour frequency \\\n * **Day**: Day frequency \\\n * **Week**: Week frequency \\\n * **Month**: Month frequency\n */\nexport type RecurrenceFrequency = string;\n\n/** Known values of {@link WeekDay} that the service accepts. */\nexport enum KnownWeekDay {\n  /** Monday weekday */\n  Monday = \"Monday\",\n  /** Tuesday weekday */\n  Tuesday = \"Tuesday\",\n  /** Wednesday weekday */\n  Wednesday = \"Wednesday\",\n  /** Thursday weekday */\n  Thursday = \"Thursday\",\n  /** Friday weekday */\n  Friday = \"Friday\",\n  /** Saturday weekday */\n  Saturday = \"Saturday\",\n  /** Sunday weekday */\n  Sunday = \"Sunday\"\n}\n\n/**\n * Defines values for WeekDay. \\\n * {@link KnownWeekDay} can be used interchangeably with WeekDay,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Monday**: Monday weekday \\\n * **Tuesday**: Tuesday weekday \\\n * **Wednesday**: Wednesday weekday \\\n * **Thursday**: Thursday weekday \\\n * **Friday**: Friday weekday \\\n * **Saturday**: Saturday weekday \\\n * **Sunday**: Sunday weekday\n */\nexport type WeekDay = string;\n\n/** Known values of {@link ScheduleProvisioningState} that the service accepts. */\nexport enum KnownScheduleProvisioningState {\n  /** Completed */\n  Completed = \"Completed\",\n  /** Provisioning */\n  Provisioning = \"Provisioning\",\n  /** Failed */\n  Failed = \"Failed\"\n}\n\n/**\n * Defines values for ScheduleProvisioningState. \\\n * {@link KnownScheduleProvisioningState} can be used interchangeably with ScheduleProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Completed** \\\n * **Provisioning** \\\n * **Failed**\n */\nexport type ScheduleProvisioningState = string;\n\n/** Known values of {@link Autosave} that the service accepts. */\nexport enum KnownAutosave {\n  /** None */\n  None = \"None\",\n  /** Local */\n  Local = \"Local\",\n  /** Remote */\n  Remote = \"Remote\"\n}\n\n/**\n * Defines values for Autosave. \\\n * {@link KnownAutosave} can be used interchangeably with Autosave,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **Local** \\\n * **Remote**\n */\nexport type Autosave = string;\n\n/** Known values of {@link Network} that the service accepts. */\nexport enum KnownNetwork {\n  /** Bridge */\n  Bridge = \"Bridge\",\n  /** Host */\n  Host = \"Host\"\n}\n\n/**\n * Defines values for Network. \\\n * {@link KnownNetwork} can be used interchangeably with Network,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Bridge** \\\n * **Host**\n */\nexport type Network = string;\n\n/** Known values of {@link Caching} that the service accepts. */\nexport enum KnownCaching {\n  /** None */\n  None = \"None\",\n  /** ReadOnly */\n  ReadOnly = \"ReadOnly\",\n  /** ReadWrite */\n  ReadWrite = \"ReadWrite\"\n}\n\n/**\n * Defines values for Caching. \\\n * {@link KnownCaching} can be used interchangeably with Caching,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **ReadOnly** \\\n * **ReadWrite**\n */\nexport type Caching = string;\n\n/** Known values of {@link StorageAccountType} that the service accepts. */\nexport enum KnownStorageAccountType {\n  /** StandardLRS */\n  StandardLRS = \"Standard_LRS\",\n  /** PremiumLRS */\n  PremiumLRS = \"Premium_LRS\"\n}\n\n/**\n * Defines values for StorageAccountType. \\\n * {@link KnownStorageAccountType} can be used interchangeably with StorageAccountType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Standard_LRS** \\\n * **Premium_LRS**\n */\nexport type StorageAccountType = string;\n\n/** Known values of {@link SourceType} that the service accepts. */\nexport enum KnownSourceType {\n  /** Dataset */\n  Dataset = \"Dataset\",\n  /** Datastore */\n  Datastore = \"Datastore\",\n  /** URI */\n  URI = \"URI\"\n}\n\n/**\n * Defines values for SourceType. \\\n * {@link KnownSourceType} can be used interchangeably with SourceType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Dataset** \\\n * **Datastore** \\\n * **URI**\n */\nexport type SourceType = string;\n\n/** Known values of {@link MountAction} that the service accepts. */\nexport enum KnownMountAction {\n  /** Mount */\n  Mount = \"Mount\",\n  /** Unmount */\n  Unmount = \"Unmount\"\n}\n\n/**\n * Defines values for MountAction. \\\n * {@link KnownMountAction} can be used interchangeably with MountAction,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Mount** \\\n * **Unmount**\n */\nexport type MountAction = string;\n\n/** Known values of {@link MountState} that the service accepts. */\nexport enum KnownMountState {\n  /** MountRequested */\n  MountRequested = \"MountRequested\",\n  /** Mounted */\n  Mounted = \"Mounted\",\n  /** MountFailed */\n  MountFailed = \"MountFailed\",\n  /** UnmountRequested */\n  UnmountRequested = \"UnmountRequested\",\n  /** UnmountFailed */\n  UnmountFailed = \"UnmountFailed\",\n  /** Unmounted */\n  Unmounted = \"Unmounted\"\n}\n\n/**\n * Defines values for MountState. \\\n * {@link KnownMountState} can be used interchangeably with MountState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **MountRequested** \\\n * **Mounted** \\\n * **MountFailed** \\\n * **UnmountRequested** \\\n * **UnmountFailed** \\\n * **Unmounted**\n */\nexport type MountState = string;\n\n/** Known values of {@link InputDeliveryMode} that the service accepts. */\nexport enum KnownInputDeliveryMode {\n  /** ReadOnlyMount */\n  ReadOnlyMount = \"ReadOnlyMount\",\n  /** ReadWriteMount */\n  ReadWriteMount = \"ReadWriteMount\",\n  /** Download */\n  Download = \"Download\",\n  /** Direct */\n  Direct = \"Direct\",\n  /** EvalMount */\n  EvalMount = \"EvalMount\",\n  /** EvalDownload */\n  EvalDownload = \"EvalDownload\"\n}\n\n/**\n * Defines values for InputDeliveryMode. \\\n * {@link KnownInputDeliveryMode} can be used interchangeably with InputDeliveryMode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **ReadOnlyMount** \\\n * **ReadWriteMount** \\\n * **Download** \\\n * **Direct** \\\n * **EvalMount** \\\n * **EvalDownload**\n */\nexport type InputDeliveryMode = string;\n\n/** Known values of {@link OutputDeliveryMode} that the service accepts. */\nexport enum KnownOutputDeliveryMode {\n  /** ReadWriteMount */\n  ReadWriteMount = \"ReadWriteMount\",\n  /** Upload */\n  Upload = \"Upload\"\n}\n\n/**\n * Defines values for OutputDeliveryMode. \\\n * {@link KnownOutputDeliveryMode} can be used interchangeably with OutputDeliveryMode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **ReadWriteMount** \\\n * **Upload**\n */\nexport type OutputDeliveryMode = string;\n\n/** Known values of {@link ForecastHorizonMode} that the service accepts. */\nexport enum KnownForecastHorizonMode {\n  /** Forecast horizon to be determined automatically. */\n  Auto = \"Auto\",\n  /** Use the custom forecast horizon. */\n  Custom = \"Custom\"\n}\n\n/**\n * Defines values for ForecastHorizonMode. \\\n * {@link KnownForecastHorizonMode} can be used interchangeably with ForecastHorizonMode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Auto**: Forecast horizon to be determined automatically. \\\n * **Custom**: Use the custom forecast horizon.\n */\nexport type ForecastHorizonMode = string;\n\n/** Known values of {@link JobOutputType} that the service accepts. */\nexport enum KnownJobOutputType {\n  /** UriFile */\n  UriFile = \"uri_file\",\n  /** UriFolder */\n  UriFolder = \"uri_folder\",\n  /** Mltable */\n  Mltable = \"mltable\",\n  /** CustomModel */\n  CustomModel = \"custom_model\",\n  /** MlflowModel */\n  MlflowModel = \"mlflow_model\",\n  /** TritonModel */\n  TritonModel = \"triton_model\"\n}\n\n/**\n * Defines values for JobOutputType. \\\n * {@link KnownJobOutputType} can be used interchangeably with JobOutputType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **uri_file** \\\n * **uri_folder** \\\n * **mltable** \\\n * **custom_model** \\\n * **mlflow_model** \\\n * **triton_model**\n */\nexport type JobOutputType = string;\n\n/** Known values of {@link LogVerbosity} that the service accepts. */\nexport enum KnownLogVerbosity {\n  /** No logs emitted. */\n  NotSet = \"NotSet\",\n  /** Debug and above log statements logged. */\n  Debug = \"Debug\",\n  /** Info and above log statements logged. */\n  Info = \"Info\",\n  /** Warning and above log statements logged. */\n  Warning = \"Warning\",\n  /** Error and above log statements logged. */\n  Error = \"Error\",\n  /** Only critical statements logged. */\n  Critical = \"Critical\"\n}\n\n/**\n * Defines values for LogVerbosity. \\\n * {@link KnownLogVerbosity} can be used interchangeably with LogVerbosity,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NotSet**: No logs emitted. \\\n * **Debug**: Debug and above log statements logged. \\\n * **Info**: Info and above log statements logged. \\\n * **Warning**: Warning and above log statements logged. \\\n * **Error**: Error and above log statements logged. \\\n * **Critical**: Only critical statements logged.\n */\nexport type LogVerbosity = string;\n\n/** Known values of {@link TaskType} that the service accepts. */\nexport enum KnownTaskType {\n  /**\n   * Classification in machine learning and statistics is a supervised learning approach in which\n   * the computer program learns from the data given to it and make new observations or classifications.\n   */\n  Classification = \"Classification\",\n  /** Regression means to predict the value using the input data. Regression models are used to predict a continuous value. */\n  Regression = \"Regression\",\n  /**\n   * Forecasting is a special kind of regression task that deals with time-series data and creates forecasting model\n   * that can be used to predict the near future values based on the inputs.\n   */\n  Forecasting = \"Forecasting\",\n  /**\n   * Image Classification. Multi-class image classification is used when an image is classified with only a single label\n   * from a set of classes - e.g. each image is classified as either an image of a 'cat' or a 'dog' or a 'duck'.\n   */\n  ImageClassification = \"ImageClassification\",\n  /**\n   * Image Classification Multilabel. Multi-label image classification is used when an image could have one or more labels\n   * from a set of labels - e.g. an image could be labeled with both 'cat' and 'dog'.\n   */\n  ImageClassificationMultilabel = \"ImageClassificationMultilabel\",\n  /**\n   * Image Object Detection. Object detection is used to identify objects in an image and locate each object with a\n   * bounding box e.g. locate all dogs and cats in an image and draw a bounding box around each.\n   */\n  ImageObjectDetection = \"ImageObjectDetection\",\n  /**\n   * Image Instance Segmentation. Instance segmentation is used to identify objects in an image at the pixel level,\n   * drawing a polygon around each object in the image.\n   */\n  ImageInstanceSegmentation = \"ImageInstanceSegmentation\",\n  /**\n   * Text classification (also known as text tagging or text categorization) is the process of sorting texts into categories.\n   * Categories are mutually exclusive.\n   */\n  TextClassification = \"TextClassification\",\n  /** Multilabel classification task assigns each sample to a group (zero or more) of target labels. */\n  TextClassificationMultilabel = \"TextClassificationMultilabel\",\n  /**\n   * Text Named Entity Recognition a.k.a. TextNER.\n   * Named Entity Recognition (NER) is the ability to take free-form text and identify the occurrences of entities such as people, locations, organizations, and more.\n   */\n  TextNER = \"TextNER\"\n}\n\n/**\n * Defines values for TaskType. \\\n * {@link KnownTaskType} can be used interchangeably with TaskType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Classification**: Classification in machine learning and statistics is a supervised learning approach in which\n * the computer program learns from the data given to it and make new observations or classifications. \\\n * **Regression**: Regression means to predict the value using the input data. Regression models are used to predict a continuous value. \\\n * **Forecasting**: Forecasting is a special kind of regression task that deals with time-series data and creates forecasting model\n * that can be used to predict the near future values based on the inputs. \\\n * **ImageClassification**: Image Classification. Multi-class image classification is used when an image is classified with only a single label\n * from a set of classes - e.g. each image is classified as either an image of a 'cat' or a 'dog' or a 'duck'. \\\n * **ImageClassificationMultilabel**: Image Classification Multilabel. Multi-label image classification is used when an image could have one or more labels\n * from a set of labels - e.g. an image could be labeled with both 'cat' and 'dog'. \\\n * **ImageObjectDetection**: Image Object Detection. Object detection is used to identify objects in an image and locate each object with a\n * bounding box e.g. locate all dogs and cats in an image and draw a bounding box around each. \\\n * **ImageInstanceSegmentation**: Image Instance Segmentation. Instance segmentation is used to identify objects in an image at the pixel level,\n * drawing a polygon around each object in the image. \\\n * **TextClassification**: Text classification (also known as text tagging or text categorization) is the process of sorting texts into categories.\n * Categories are mutually exclusive. \\\n * **TextClassificationMultilabel**: Multilabel classification task assigns each sample to a group (zero or more) of target labels. \\\n * **TextNER**: Text Named Entity Recognition a.k.a. TextNER.\n * Named Entity Recognition (NER) is the ability to take free-form text and identify the occurrences of entities such as people, locations, organizations, and more.\n */\nexport type TaskType = string;\n\n/** Known values of {@link JobInputType} that the service accepts. */\nexport enum KnownJobInputType {\n  /** Literal */\n  Literal = \"literal\",\n  /** UriFile */\n  UriFile = \"uri_file\",\n  /** UriFolder */\n  UriFolder = \"uri_folder\",\n  /** Mltable */\n  Mltable = \"mltable\",\n  /** CustomModel */\n  CustomModel = \"custom_model\",\n  /** MlflowModel */\n  MlflowModel = \"mlflow_model\",\n  /** TritonModel */\n  TritonModel = \"triton_model\"\n}\n\n/**\n * Defines values for JobInputType. \\\n * {@link KnownJobInputType} can be used interchangeably with JobInputType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **literal** \\\n * **uri_file** \\\n * **uri_folder** \\\n * **mltable** \\\n * **custom_model** \\\n * **mlflow_model** \\\n * **triton_model**\n */\nexport type JobInputType = string;\n\n/** Known values of {@link NCrossValidationsMode} that the service accepts. */\nexport enum KnownNCrossValidationsMode {\n  /** Determine N-Cross validations value automatically. Supported only for 'Forecasting' AutoML task. */\n  Auto = \"Auto\",\n  /** Use custom N-Cross validations value. */\n  Custom = \"Custom\"\n}\n\n/**\n * Defines values for NCrossValidationsMode. \\\n * {@link KnownNCrossValidationsMode} can be used interchangeably with NCrossValidationsMode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Auto**: Determine N-Cross validations value automatically. Supported only for 'Forecasting' AutoML task. \\\n * **Custom**: Use custom N-Cross validations value.\n */\nexport type NCrossValidationsMode = string;\n\n/** Known values of {@link SeasonalityMode} that the service accepts. */\nexport enum KnownSeasonalityMode {\n  /** Seasonality to be determined automatically. */\n  Auto = \"Auto\",\n  /** Use the custom seasonality value. */\n  Custom = \"Custom\"\n}\n\n/**\n * Defines values for SeasonalityMode. \\\n * {@link KnownSeasonalityMode} can be used interchangeably with SeasonalityMode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Auto**: Seasonality to be determined automatically. \\\n * **Custom**: Use the custom seasonality value.\n */\nexport type SeasonalityMode = string;\n\n/** Known values of {@link TargetLagsMode} that the service accepts. */\nexport enum KnownTargetLagsMode {\n  /** Target lags to be determined automatically. */\n  Auto = \"Auto\",\n  /** Use the custom target lags. */\n  Custom = \"Custom\"\n}\n\n/**\n * Defines values for TargetLagsMode. \\\n * {@link KnownTargetLagsMode} can be used interchangeably with TargetLagsMode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Auto**: Target lags to be determined automatically. \\\n * **Custom**: Use the custom target lags.\n */\nexport type TargetLagsMode = string;\n\n/** Known values of {@link TargetRollingWindowSizeMode} that the service accepts. */\nexport enum KnownTargetRollingWindowSizeMode {\n  /** Determine rolling windows size automatically. */\n  Auto = \"Auto\",\n  /** Use the specified rolling window size. */\n  Custom = \"Custom\"\n}\n\n/**\n * Defines values for TargetRollingWindowSizeMode. \\\n * {@link KnownTargetRollingWindowSizeMode} can be used interchangeably with TargetRollingWindowSizeMode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Auto**: Determine rolling windows size automatically. \\\n * **Custom**: Use the specified rolling window size.\n */\nexport type TargetRollingWindowSizeMode = string;\n\n/** Known values of {@link ServiceDataAccessAuthIdentity} that the service accepts. */\nexport enum KnownServiceDataAccessAuthIdentity {\n  /** Do not use any identity for service data access. */\n  None = \"None\",\n  /** Use the system assigned managed identity of the Workspace to authenticate service data access. */\n  WorkspaceSystemAssignedIdentity = \"WorkspaceSystemAssignedIdentity\",\n  /** Use the user assigned managed identity of the Workspace to authenticate service data access. */\n  WorkspaceUserAssignedIdentity = \"WorkspaceUserAssignedIdentity\"\n}\n\n/**\n * Defines values for ServiceDataAccessAuthIdentity. \\\n * {@link KnownServiceDataAccessAuthIdentity} can be used interchangeably with ServiceDataAccessAuthIdentity,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None**: Do not use any identity for service data access. \\\n * **WorkspaceSystemAssignedIdentity**: Use the system assigned managed identity of the Workspace to authenticate service data access. \\\n * **WorkspaceUserAssignedIdentity**: Use the user assigned managed identity of the Workspace to authenticate service data access.\n */\nexport type ServiceDataAccessAuthIdentity = string;\n\n/** Known values of {@link EarlyTerminationPolicyType} that the service accepts. */\nexport enum KnownEarlyTerminationPolicyType {\n  /** Bandit */\n  Bandit = \"Bandit\",\n  /** MedianStopping */\n  MedianStopping = \"MedianStopping\",\n  /** TruncationSelection */\n  TruncationSelection = \"TruncationSelection\"\n}\n\n/**\n * Defines values for EarlyTerminationPolicyType. \\\n * {@link KnownEarlyTerminationPolicyType} can be used interchangeably with EarlyTerminationPolicyType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Bandit** \\\n * **MedianStopping** \\\n * **TruncationSelection**\n */\nexport type EarlyTerminationPolicyType = string;\n\n/** Known values of {@link SamplingAlgorithmType} that the service accepts. */\nexport enum KnownSamplingAlgorithmType {\n  /** Grid */\n  Grid = \"Grid\",\n  /** Random */\n  Random = \"Random\",\n  /** Bayesian */\n  Bayesian = \"Bayesian\"\n}\n\n/**\n * Defines values for SamplingAlgorithmType. \\\n * {@link KnownSamplingAlgorithmType} can be used interchangeably with SamplingAlgorithmType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Grid** \\\n * **Random** \\\n * **Bayesian**\n */\nexport type SamplingAlgorithmType = string;\n\n/** Known values of {@link ClassificationPrimaryMetrics} that the service accepts. */\nexport enum KnownClassificationPrimaryMetrics {\n  /**\n   * AUC is the Area under the curve.\n   * This metric represents arithmetic mean of the score for each class,\n   * weighted by the number of true instances in each class.\n   */\n  AUCWeighted = \"AUCWeighted\",\n  /** Accuracy is the ratio of predictions that exactly match the true class labels. */\n  Accuracy = \"Accuracy\",\n  /**\n   * Normalized macro recall is recall macro-averaged and normalized, so that random\n   * performance has a score of 0, and perfect performance has a score of 1.\n   */\n  NormMacroRecall = \"NormMacroRecall\",\n  /**\n   * The arithmetic mean of the average precision score for each class, weighted by\n   * the number of true instances in each class.\n   */\n  AveragePrecisionScoreWeighted = \"AveragePrecisionScoreWeighted\",\n  /** The arithmetic mean of precision for each class, weighted by number of true instances in each class. */\n  PrecisionScoreWeighted = \"PrecisionScoreWeighted\"\n}\n\n/**\n * Defines values for ClassificationPrimaryMetrics. \\\n * {@link KnownClassificationPrimaryMetrics} can be used interchangeably with ClassificationPrimaryMetrics,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **AUCWeighted**: AUC is the Area under the curve.\n * This metric represents arithmetic mean of the score for each class,\n * weighted by the number of true instances in each class. \\\n * **Accuracy**: Accuracy is the ratio of predictions that exactly match the true class labels. \\\n * **NormMacroRecall**: Normalized macro recall is recall macro-averaged and normalized, so that random\n * performance has a score of 0, and perfect performance has a score of 1. \\\n * **AveragePrecisionScoreWeighted**: The arithmetic mean of the average precision score for each class, weighted by\n * the number of true instances in each class. \\\n * **PrecisionScoreWeighted**: The arithmetic mean of precision for each class, weighted by number of true instances in each class.\n */\nexport type ClassificationPrimaryMetrics = string;\n\n/** Known values of {@link ClassificationModels} that the service accepts. */\nexport enum KnownClassificationModels {\n  /**\n   * Logistic regression is a fundamental classification technique.\n   * It belongs to the group of linear classifiers and is somewhat similar to polynomial and linear regression.\n   * Logistic regression is fast and relatively uncomplicated, and it's convenient for you to interpret the results.\n   * Although it's essentially a method for binary classification, it can also be applied to multiclass problems.\n   */\n  LogisticRegression = \"LogisticRegression\",\n  /**\n   * SGD: Stochastic gradient descent is an optimization algorithm often used in machine learning applications\n   * to find the model parameters that correspond to the best fit between predicted and actual outputs.\n   */\n  SGD = \"SGD\",\n  /**\n   * The multinomial Naive Bayes classifier is suitable for classification with discrete features (e.g., word counts for text classification).\n   * The multinomial distribution normally requires integer feature counts. However, in practice, fractional counts such as tf-idf may also work.\n   */\n  MultinomialNaiveBayes = \"MultinomialNaiveBayes\",\n  /** Naive Bayes classifier for multivariate Bernoulli models. */\n  BernoulliNaiveBayes = \"BernoulliNaiveBayes\",\n  /**\n   * A support vector machine (SVM) is a supervised machine learning model that uses classification algorithms for two-group classification problems.\n   * After giving an SVM model sets of labeled training data for each category, they're able to categorize new text.\n   */\n  SVM = \"SVM\",\n  /**\n   * A support vector machine (SVM) is a supervised machine learning model that uses classification algorithms for two-group classification problems.\n   * After giving an SVM model sets of labeled training data for each category, they're able to categorize new text.\n   * Linear SVM performs best when input data is linear, i.e., data can be easily classified by drawing the straight line between classified values on a plotted graph.\n   */\n  LinearSVM = \"LinearSVM\",\n  /**\n   * K-nearest neighbors (KNN) algorithm uses 'feature similarity' to predict the values of new datapoints\n   * which further means that the new data point will be assigned a value based on how closely it matches the points in the training set.\n   */\n  KNN = \"KNN\",\n  /**\n   * Decision Trees are a non-parametric supervised learning method used for both classification and regression tasks.\n   * The goal is to create a model that predicts the value of a target variable by learning simple decision rules inferred from the data features.\n   */\n  DecisionTree = \"DecisionTree\",\n  /**\n   * Random forest is a supervised learning algorithm.\n   * The \"forest\" it builds, is an ensemble of decision trees, usually trained with the “bagging” method.\n   * The general idea of the bagging method is that a combination of learning models increases the overall result.\n   */\n  RandomForest = \"RandomForest\",\n  /** Extreme Trees is an ensemble machine learning algorithm that combines the predictions from many decision trees. It is related to the widely used random forest algorithm. */\n  ExtremeRandomTrees = \"ExtremeRandomTrees\",\n  /** LightGBM is a gradient boosting framework that uses tree based learning algorithms. */\n  LightGBM = \"LightGBM\",\n  /** The technique of transiting week learners into a strong learner is called Boosting. The gradient boosting algorithm process works on this theory of execution. */\n  GradientBoosting = \"GradientBoosting\",\n  /** XGBoost: Extreme Gradient Boosting Algorithm. This algorithm is used for structured data where target column values can be divided into distinct class values. */\n  XGBoostClassifier = \"XGBoostClassifier\"\n}\n\n/**\n * Defines values for ClassificationModels. \\\n * {@link KnownClassificationModels} can be used interchangeably with ClassificationModels,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **LogisticRegression**: Logistic regression is a fundamental classification technique.\n * It belongs to the group of linear classifiers and is somewhat similar to polynomial and linear regression.\n * Logistic regression is fast and relatively uncomplicated, and it's convenient for you to interpret the results.\n * Although it's essentially a method for binary classification, it can also be applied to multiclass problems. \\\n * **SGD**: SGD: Stochastic gradient descent is an optimization algorithm often used in machine learning applications\n * to find the model parameters that correspond to the best fit between predicted and actual outputs. \\\n * **MultinomialNaiveBayes**: The multinomial Naive Bayes classifier is suitable for classification with discrete features (e.g., word counts for text classification).\n * The multinomial distribution normally requires integer feature counts. However, in practice, fractional counts such as tf-idf may also work. \\\n * **BernoulliNaiveBayes**: Naive Bayes classifier for multivariate Bernoulli models. \\\n * **SVM**: A support vector machine (SVM) is a supervised machine learning model that uses classification algorithms for two-group classification problems.\n * After giving an SVM model sets of labeled training data for each category, they're able to categorize new text. \\\n * **LinearSVM**: A support vector machine (SVM) is a supervised machine learning model that uses classification algorithms for two-group classification problems.\n * After giving an SVM model sets of labeled training data for each category, they're able to categorize new text.\n * Linear SVM performs best when input data is linear, i.e., data can be easily classified by drawing the straight line between classified values on a plotted graph. \\\n * **KNN**: K-nearest neighbors (KNN) algorithm uses 'feature similarity' to predict the values of new datapoints\n * which further means that the new data point will be assigned a value based on how closely it matches the points in the training set. \\\n * **DecisionTree**: Decision Trees are a non-parametric supervised learning method used for both classification and regression tasks.\n * The goal is to create a model that predicts the value of a target variable by learning simple decision rules inferred from the data features. \\\n * **RandomForest**: Random forest is a supervised learning algorithm.\n * The \"forest\" it builds, is an ensemble of decision trees, usually trained with the “bagging” method.\n * The general idea of the bagging method is that a combination of learning models increases the overall result. \\\n * **ExtremeRandomTrees**: Extreme Trees is an ensemble machine learning algorithm that combines the predictions from many decision trees. It is related to the widely used random forest algorithm. \\\n * **LightGBM**: LightGBM is a gradient boosting framework that uses tree based learning algorithms. \\\n * **GradientBoosting**: The technique of transiting week learners into a strong learner is called Boosting. The gradient boosting algorithm process works on this theory of execution. \\\n * **XGBoostClassifier**: XGBoost: Extreme Gradient Boosting Algorithm. This algorithm is used for structured data where target column values can be divided into distinct class values.\n */\nexport type ClassificationModels = string;\n\n/** Known values of {@link StackMetaLearnerType} that the service accepts. */\nexport enum KnownStackMetaLearnerType {\n  /** None */\n  None = \"None\",\n  /** Default meta-learners are LogisticRegression for classification tasks. */\n  LogisticRegression = \"LogisticRegression\",\n  /** Default meta-learners are LogisticRegression for classification task when CV is on. */\n  LogisticRegressionCV = \"LogisticRegressionCV\",\n  /** LightGBMClassifier */\n  LightGBMClassifier = \"LightGBMClassifier\",\n  /** Default meta-learners are LogisticRegression for regression task. */\n  ElasticNet = \"ElasticNet\",\n  /** Default meta-learners are LogisticRegression for regression task when CV is on. */\n  ElasticNetCV = \"ElasticNetCV\",\n  /** LightGBMRegressor */\n  LightGBMRegressor = \"LightGBMRegressor\",\n  /** LinearRegression */\n  LinearRegression = \"LinearRegression\"\n}\n\n/**\n * Defines values for StackMetaLearnerType. \\\n * {@link KnownStackMetaLearnerType} can be used interchangeably with StackMetaLearnerType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **LogisticRegression**: Default meta-learners are LogisticRegression for classification tasks. \\\n * **LogisticRegressionCV**: Default meta-learners are LogisticRegression for classification task when CV is on. \\\n * **LightGBMClassifier** \\\n * **ElasticNet**: Default meta-learners are LogisticRegression for regression task. \\\n * **ElasticNetCV**: Default meta-learners are LogisticRegression for regression task when CV is on. \\\n * **LightGBMRegressor** \\\n * **LinearRegression**\n */\nexport type StackMetaLearnerType = string;\n\n/** Known values of {@link BlockedTransformers} that the service accepts. */\nexport enum KnownBlockedTransformers {\n  /** Target encoding for text data. */\n  TextTargetEncoder = \"TextTargetEncoder\",\n  /** Ohe hot encoding creates a binary feature transformation. */\n  OneHotEncoder = \"OneHotEncoder\",\n  /** Target encoding for categorical data. */\n  CatTargetEncoder = \"CatTargetEncoder\",\n  /** Tf-Idf stands for, term-frequency times inverse document-frequency. This is a common term weighting scheme for identifying information from documents. */\n  TfIdf = \"TfIdf\",\n  /** Weight of Evidence encoding is a technique used to encode categorical variables. It uses the natural log of the P(1)/P(0) to create weights. */\n  WoETargetEncoder = \"WoETargetEncoder\",\n  /** Label encoder converts labels/categorical variables in a numerical form. */\n  LabelEncoder = \"LabelEncoder\",\n  /** Word embedding helps represents words or phrases as a vector, or a series of numbers. */\n  WordEmbedding = \"WordEmbedding\",\n  /** Naive Bayes is a classified that is used for classification of discrete features that are categorically distributed. */\n  NaiveBayes = \"NaiveBayes\",\n  /** Count Vectorizer converts a collection of text documents to a matrix of token counts. */\n  CountVectorizer = \"CountVectorizer\",\n  /** Hashing One Hot Encoder can turn categorical variables into a limited number of new features. This is often used for high-cardinality categorical features. */\n  HashOneHotEncoder = \"HashOneHotEncoder\"\n}\n\n/**\n * Defines values for BlockedTransformers. \\\n * {@link KnownBlockedTransformers} can be used interchangeably with BlockedTransformers,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **TextTargetEncoder**: Target encoding for text data. \\\n * **OneHotEncoder**: Ohe hot encoding creates a binary feature transformation. \\\n * **CatTargetEncoder**: Target encoding for categorical data. \\\n * **TfIdf**: Tf-Idf stands for, term-frequency times inverse document-frequency. This is a common term weighting scheme for identifying information from documents. \\\n * **WoETargetEncoder**: Weight of Evidence encoding is a technique used to encode categorical variables. It uses the natural log of the P(1)\\/P(0) to create weights. \\\n * **LabelEncoder**: Label encoder converts labels\\/categorical variables in a numerical form. \\\n * **WordEmbedding**: Word embedding helps represents words or phrases as a vector, or a series of numbers. \\\n * **NaiveBayes**: Naive Bayes is a classified that is used for classification of discrete features that are categorically distributed. \\\n * **CountVectorizer**: Count Vectorizer converts a collection of text documents to a matrix of token counts. \\\n * **HashOneHotEncoder**: Hashing One Hot Encoder can turn categorical variables into a limited number of new features. This is often used for high-cardinality categorical features.\n */\nexport type BlockedTransformers = string;\n\n/** Known values of {@link FeaturizationMode} that the service accepts. */\nexport enum KnownFeaturizationMode {\n  /** Auto mode, system performs featurization without any custom featurization inputs. */\n  Auto = \"Auto\",\n  /** Custom featurization. */\n  Custom = \"Custom\",\n  /** Featurization off. 'Forecasting' task cannot use this value. */\n  Off = \"Off\"\n}\n\n/**\n * Defines values for FeaturizationMode. \\\n * {@link KnownFeaturizationMode} can be used interchangeably with FeaturizationMode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Auto**: Auto mode, system performs featurization without any custom featurization inputs. \\\n * **Custom**: Custom featurization. \\\n * **Off**: Featurization off. 'Forecasting' task cannot use this value.\n */\nexport type FeaturizationMode = string;\n\n/** Known values of {@link DistributionType} that the service accepts. */\nexport enum KnownDistributionType {\n  /** PyTorch */\n  PyTorch = \"PyTorch\",\n  /** TensorFlow */\n  TensorFlow = \"TensorFlow\",\n  /** Mpi */\n  Mpi = \"Mpi\"\n}\n\n/**\n * Defines values for DistributionType. \\\n * {@link KnownDistributionType} can be used interchangeably with DistributionType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **PyTorch** \\\n * **TensorFlow** \\\n * **Mpi**\n */\nexport type DistributionType = string;\n\n/** Known values of {@link JobLimitsType} that the service accepts. */\nexport enum KnownJobLimitsType {\n  /** Command */\n  Command = \"Command\",\n  /** Sweep */\n  Sweep = \"Sweep\"\n}\n\n/**\n * Defines values for JobLimitsType. \\\n * {@link KnownJobLimitsType} can be used interchangeably with JobLimitsType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Command** \\\n * **Sweep**\n */\nexport type JobLimitsType = string;\n\n/** Known values of {@link FeatureLags} that the service accepts. */\nexport enum KnownFeatureLags {\n  /** No feature lags generated. */\n  None = \"None\",\n  /** System auto-generates feature lags. */\n  Auto = \"Auto\"\n}\n\n/**\n * Defines values for FeatureLags. \\\n * {@link KnownFeatureLags} can be used interchangeably with FeatureLags,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None**: No feature lags generated. \\\n * **Auto**: System auto-generates feature lags.\n */\nexport type FeatureLags = string;\n\n/** Known values of {@link ShortSeriesHandlingConfiguration} that the service accepts. */\nexport enum KnownShortSeriesHandlingConfiguration {\n  /** Represents no/null value. */\n  None = \"None\",\n  /** Short series will be padded if there are no long series, otherwise short series will be dropped. */\n  Auto = \"Auto\",\n  /** All the short series will be padded. */\n  Pad = \"Pad\",\n  /** All the short series will be dropped. */\n  Drop = \"Drop\"\n}\n\n/**\n * Defines values for ShortSeriesHandlingConfiguration. \\\n * {@link KnownShortSeriesHandlingConfiguration} can be used interchangeably with ShortSeriesHandlingConfiguration,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None**: Represents no\\/null value. \\\n * **Auto**: Short series will be padded if there are no long series, otherwise short series will be dropped. \\\n * **Pad**: All the short series will be padded. \\\n * **Drop**: All the short series will be dropped.\n */\nexport type ShortSeriesHandlingConfiguration = string;\n\n/** Known values of {@link TargetAggregationFunction} that the service accepts. */\nexport enum KnownTargetAggregationFunction {\n  /** Represent no value set. */\n  None = \"None\",\n  /** Sum */\n  Sum = \"Sum\",\n  /** Max */\n  Max = \"Max\",\n  /** Min */\n  Min = \"Min\",\n  /** Mean */\n  Mean = \"Mean\"\n}\n\n/**\n * Defines values for TargetAggregationFunction. \\\n * {@link KnownTargetAggregationFunction} can be used interchangeably with TargetAggregationFunction,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None**: Represent no value set. \\\n * **Sum** \\\n * **Max** \\\n * **Min** \\\n * **Mean**\n */\nexport type TargetAggregationFunction = string;\n\n/** Known values of {@link UseStl} that the service accepts. */\nexport enum KnownUseStl {\n  /** No stl decomposition. */\n  None = \"None\",\n  /** Season */\n  Season = \"Season\",\n  /** SeasonTrend */\n  SeasonTrend = \"SeasonTrend\"\n}\n\n/**\n * Defines values for UseStl. \\\n * {@link KnownUseStl} can be used interchangeably with UseStl,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None**: No stl decomposition. \\\n * **Season** \\\n * **SeasonTrend**\n */\nexport type UseStl = string;\n\n/** Known values of {@link ForecastingPrimaryMetrics} that the service accepts. */\nexport enum KnownForecastingPrimaryMetrics {\n  /** The Spearman's rank coefficient of correlation is a non-parametric measure of rank correlation. */\n  SpearmanCorrelation = \"SpearmanCorrelation\",\n  /** The Normalized Root Mean Squared Error (NRMSE) the RMSE facilitates the comparison between models with different scales. */\n  NormalizedRootMeanSquaredError = \"NormalizedRootMeanSquaredError\",\n  /** The R2 score is one of the performance evaluation measures for forecasting-based machine learning models. */\n  R2Score = \"R2Score\",\n  /** The Normalized Mean Absolute Error (NMAE) is a validation metric to compare the Mean Absolute Error (MAE) of (time) series with different scales. */\n  NormalizedMeanAbsoluteError = \"NormalizedMeanAbsoluteError\"\n}\n\n/**\n * Defines values for ForecastingPrimaryMetrics. \\\n * {@link KnownForecastingPrimaryMetrics} can be used interchangeably with ForecastingPrimaryMetrics,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **SpearmanCorrelation**: The Spearman's rank coefficient of correlation is a non-parametric measure of rank correlation. \\\n * **NormalizedRootMeanSquaredError**: The Normalized Root Mean Squared Error (NRMSE) the RMSE facilitates the comparison between models with different scales. \\\n * **R2Score**: The R2 score is one of the performance evaluation measures for forecasting-based machine learning models. \\\n * **NormalizedMeanAbsoluteError**: The Normalized Mean Absolute Error (NMAE) is a validation metric to compare the Mean Absolute Error (MAE) of (time) series with different scales.\n */\nexport type ForecastingPrimaryMetrics = string;\n\n/** Known values of {@link ForecastingModels} that the service accepts. */\nexport enum KnownForecastingModels {\n  /**\n   * Auto-Autoregressive Integrated Moving Average (ARIMA) model uses time-series data and statistical analysis to interpret the data and make future predictions.\n   * This model aims to explain data by using time series data on its past values and uses linear regression to make predictions.\n   */\n  AutoArima = \"AutoArima\",\n  /**\n   * Prophet is a procedure for forecasting time series data based on an additive model where non-linear trends are fit with yearly, weekly, and daily seasonality, plus holiday effects.\n   * It works best with time series that have strong seasonal effects and several seasons of historical data. Prophet is robust to missing data and shifts in the trend, and typically handles outliers well.\n   */\n  Prophet = \"Prophet\",\n  /** The Naive forecasting model makes predictions by carrying forward the latest target value for each time-series in the training data. */\n  Naive = \"Naive\",\n  /** The Seasonal Naive forecasting model makes predictions by carrying forward the latest season of target values for each time-series in the training data. */\n  SeasonalNaive = \"SeasonalNaive\",\n  /** The Average forecasting model makes predictions by carrying forward the average of the target values for each time-series in the training data. */\n  Average = \"Average\",\n  /** The Seasonal Average forecasting model makes predictions by carrying forward the average value of the latest season of data for each time-series in the training data. */\n  SeasonalAverage = \"SeasonalAverage\",\n  /** Exponential smoothing is a time series forecasting method for univariate data that can be extended to support data with a systematic trend or seasonal component. */\n  ExponentialSmoothing = \"ExponentialSmoothing\",\n  /**\n   * An Autoregressive Integrated Moving Average with Explanatory Variable (ARIMAX) model can be viewed as a multiple regression model with one or more autoregressive (AR) terms and/or one or more moving average (MA) terms.\n   * This method is suitable for forecasting when data is stationary/non stationary, and multivariate with any type of data pattern, i.e., level/trend /seasonality/cyclicity.\n   */\n  Arimax = \"Arimax\",\n  /** TCNForecaster: Temporal Convolutional Networks Forecaster. //TODO: Ask forecasting team for brief intro. */\n  TCNForecaster = \"TCNForecaster\",\n  /** Elastic net is a popular type of regularized linear regression that combines two popular penalties, specifically the L1 and L2 penalty functions. */\n  ElasticNet = \"ElasticNet\",\n  /** The technique of transiting week learners into a strong learner is called Boosting. The gradient boosting algorithm process works on this theory of execution. */\n  GradientBoosting = \"GradientBoosting\",\n  /**\n   * Decision Trees are a non-parametric supervised learning method used for both classification and regression tasks.\n   * The goal is to create a model that predicts the value of a target variable by learning simple decision rules inferred from the data features.\n   */\n  DecisionTree = \"DecisionTree\",\n  /**\n   * K-nearest neighbors (KNN) algorithm uses 'feature similarity' to predict the values of new datapoints\n   * which further means that the new data point will be assigned a value based on how closely it matches the points in the training set.\n   */\n  KNN = \"KNN\",\n  /** Lasso model fit with Least Angle Regression a.k.a. Lars. It is a Linear Model trained with an L1 prior as regularizer. */\n  LassoLars = \"LassoLars\",\n  /**\n   * SGD: Stochastic gradient descent is an optimization algorithm often used in machine learning applications\n   * to find the model parameters that correspond to the best fit between predicted and actual outputs.\n   * It's an inexact but powerful technique.\n   */\n  SGD = \"SGD\",\n  /**\n   * Random forest is a supervised learning algorithm.\n   * The \"forest\" it builds, is an ensemble of decision trees, usually trained with the “bagging” method.\n   * The general idea of the bagging method is that a combination of learning models increases the overall result.\n   */\n  RandomForest = \"RandomForest\",\n  /** Extreme Trees is an ensemble machine learning algorithm that combines the predictions from many decision trees. It is related to the widely used random forest algorithm. */\n  ExtremeRandomTrees = \"ExtremeRandomTrees\",\n  /** LightGBM is a gradient boosting framework that uses tree based learning algorithms. */\n  LightGBM = \"LightGBM\",\n  /** XGBoostRegressor: Extreme Gradient Boosting Regressor is a supervised machine learning model using ensemble of base learners. */\n  XGBoostRegressor = \"XGBoostRegressor\"\n}\n\n/**\n * Defines values for ForecastingModels. \\\n * {@link KnownForecastingModels} can be used interchangeably with ForecastingModels,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **AutoArima**: Auto-Autoregressive Integrated Moving Average (ARIMA) model uses time-series data and statistical analysis to interpret the data and make future predictions.\n * This model aims to explain data by using time series data on its past values and uses linear regression to make predictions. \\\n * **Prophet**: Prophet is a procedure for forecasting time series data based on an additive model where non-linear trends are fit with yearly, weekly, and daily seasonality, plus holiday effects.\n * It works best with time series that have strong seasonal effects and several seasons of historical data. Prophet is robust to missing data and shifts in the trend, and typically handles outliers well. \\\n * **Naive**: The Naive forecasting model makes predictions by carrying forward the latest target value for each time-series in the training data. \\\n * **SeasonalNaive**: The Seasonal Naive forecasting model makes predictions by carrying forward the latest season of target values for each time-series in the training data. \\\n * **Average**: The Average forecasting model makes predictions by carrying forward the average of the target values for each time-series in the training data. \\\n * **SeasonalAverage**: The Seasonal Average forecasting model makes predictions by carrying forward the average value of the latest season of data for each time-series in the training data. \\\n * **ExponentialSmoothing**: Exponential smoothing is a time series forecasting method for univariate data that can be extended to support data with a systematic trend or seasonal component. \\\n * **Arimax**: An Autoregressive Integrated Moving Average with Explanatory Variable (ARIMAX) model can be viewed as a multiple regression model with one or more autoregressive (AR) terms and\\/or one or more moving average (MA) terms.\n * This method is suitable for forecasting when data is stationary\\/non stationary, and multivariate with any type of data pattern, i.e., level\\/trend \\/seasonality\\/cyclicity. \\\n * **TCNForecaster**: TCNForecaster: Temporal Convolutional Networks Forecaster. \\/\\/TODO: Ask forecasting team for brief intro. \\\n * **ElasticNet**: Elastic net is a popular type of regularized linear regression that combines two popular penalties, specifically the L1 and L2 penalty functions. \\\n * **GradientBoosting**: The technique of transiting week learners into a strong learner is called Boosting. The gradient boosting algorithm process works on this theory of execution. \\\n * **DecisionTree**: Decision Trees are a non-parametric supervised learning method used for both classification and regression tasks.\n * The goal is to create a model that predicts the value of a target variable by learning simple decision rules inferred from the data features. \\\n * **KNN**: K-nearest neighbors (KNN) algorithm uses 'feature similarity' to predict the values of new datapoints\n * which further means that the new data point will be assigned a value based on how closely it matches the points in the training set. \\\n * **LassoLars**: Lasso model fit with Least Angle Regression a.k.a. Lars. It is a Linear Model trained with an L1 prior as regularizer. \\\n * **SGD**: SGD: Stochastic gradient descent is an optimization algorithm often used in machine learning applications\n * to find the model parameters that correspond to the best fit between predicted and actual outputs.\n * It's an inexact but powerful technique. \\\n * **RandomForest**: Random forest is a supervised learning algorithm.\n * The \"forest\" it builds, is an ensemble of decision trees, usually trained with the “bagging” method.\n * The general idea of the bagging method is that a combination of learning models increases the overall result. \\\n * **ExtremeRandomTrees**: Extreme Trees is an ensemble machine learning algorithm that combines the predictions from many decision trees. It is related to the widely used random forest algorithm. \\\n * **LightGBM**: LightGBM is a gradient boosting framework that uses tree based learning algorithms. \\\n * **XGBoostRegressor**: XGBoostRegressor: Extreme Gradient Boosting Regressor is a supervised machine learning model using ensemble of base learners.\n */\nexport type ForecastingModels = string;\n\n/** Known values of {@link LearningRateScheduler} that the service accepts. */\nexport enum KnownLearningRateScheduler {\n  /** No learning rate scheduler selected. */\n  None = \"None\",\n  /** Cosine Annealing With Warmup. */\n  WarmupCosine = \"WarmupCosine\",\n  /** Step learning rate scheduler. */\n  Step = \"Step\"\n}\n\n/**\n * Defines values for LearningRateScheduler. \\\n * {@link KnownLearningRateScheduler} can be used interchangeably with LearningRateScheduler,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None**: No learning rate scheduler selected. \\\n * **WarmupCosine**: Cosine Annealing With Warmup. \\\n * **Step**: Step learning rate scheduler.\n */\nexport type LearningRateScheduler = string;\n\n/** Known values of {@link StochasticOptimizer} that the service accepts. */\nexport enum KnownStochasticOptimizer {\n  /** No optimizer selected. */\n  None = \"None\",\n  /** Stochastic Gradient Descent optimizer. */\n  Sgd = \"Sgd\",\n  /** Adam is algorithm the optimizes stochastic objective functions based on adaptive estimates of moments */\n  Adam = \"Adam\",\n  /** AdamW is a variant of the optimizer Adam that has an improved implementation of weight decay. */\n  Adamw = \"Adamw\"\n}\n\n/**\n * Defines values for StochasticOptimizer. \\\n * {@link KnownStochasticOptimizer} can be used interchangeably with StochasticOptimizer,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None**: No optimizer selected. \\\n * **Sgd**: Stochastic Gradient Descent optimizer. \\\n * **Adam**: Adam is algorithm the optimizes stochastic objective functions based on adaptive estimates of moments \\\n * **Adamw**: AdamW is a variant of the optimizer Adam that has an improved implementation of weight decay.\n */\nexport type StochasticOptimizer = string;\n\n/** Known values of {@link ClassificationMultilabelPrimaryMetrics} that the service accepts. */\nexport enum KnownClassificationMultilabelPrimaryMetrics {\n  /**\n   * AUC is the Area under the curve.\n   * This metric represents arithmetic mean of the score for each class,\n   * weighted by the number of true instances in each class.\n   */\n  AUCWeighted = \"AUCWeighted\",\n  /** Accuracy is the ratio of predictions that exactly match the true class labels. */\n  Accuracy = \"Accuracy\",\n  /**\n   * Normalized macro recall is recall macro-averaged and normalized, so that random\n   * performance has a score of 0, and perfect performance has a score of 1.\n   */\n  NormMacroRecall = \"NormMacroRecall\",\n  /**\n   * The arithmetic mean of the average precision score for each class, weighted by\n   * the number of true instances in each class.\n   */\n  AveragePrecisionScoreWeighted = \"AveragePrecisionScoreWeighted\",\n  /** The arithmetic mean of precision for each class, weighted by number of true instances in each class. */\n  PrecisionScoreWeighted = \"PrecisionScoreWeighted\",\n  /** Intersection Over Union. Intersection of predictions divided by union of predictions. */\n  IOU = \"IOU\"\n}\n\n/**\n * Defines values for ClassificationMultilabelPrimaryMetrics. \\\n * {@link KnownClassificationMultilabelPrimaryMetrics} can be used interchangeably with ClassificationMultilabelPrimaryMetrics,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **AUCWeighted**: AUC is the Area under the curve.\n * This metric represents arithmetic mean of the score for each class,\n * weighted by the number of true instances in each class. \\\n * **Accuracy**: Accuracy is the ratio of predictions that exactly match the true class labels. \\\n * **NormMacroRecall**: Normalized macro recall is recall macro-averaged and normalized, so that random\n * performance has a score of 0, and perfect performance has a score of 1. \\\n * **AveragePrecisionScoreWeighted**: The arithmetic mean of the average precision score for each class, weighted by\n * the number of true instances in each class. \\\n * **PrecisionScoreWeighted**: The arithmetic mean of precision for each class, weighted by number of true instances in each class. \\\n * **IOU**: Intersection Over Union. Intersection of predictions divided by union of predictions.\n */\nexport type ClassificationMultilabelPrimaryMetrics = string;\n\n/** Known values of {@link InstanceSegmentationPrimaryMetrics} that the service accepts. */\nexport enum KnownInstanceSegmentationPrimaryMetrics {\n  /**\n   * Mean Average Precision (MAP) is the average of AP (Average Precision).\n   * AP is calculated for each class and averaged to get the MAP.\n   */\n  MeanAveragePrecision = \"MeanAveragePrecision\"\n}\n\n/**\n * Defines values for InstanceSegmentationPrimaryMetrics. \\\n * {@link KnownInstanceSegmentationPrimaryMetrics} can be used interchangeably with InstanceSegmentationPrimaryMetrics,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **MeanAveragePrecision**: Mean Average Precision (MAP) is the average of AP (Average Precision).\n * AP is calculated for each class and averaged to get the MAP.\n */\nexport type InstanceSegmentationPrimaryMetrics = string;\n\n/** Known values of {@link ModelSize} that the service accepts. */\nexport enum KnownModelSize {\n  /** No value selected. */\n  None = \"None\",\n  /** Small size. */\n  Small = \"Small\",\n  /** Medium size. */\n  Medium = \"Medium\",\n  /** Large size. */\n  Large = \"Large\",\n  /** Extra large size. */\n  ExtraLarge = \"ExtraLarge\"\n}\n\n/**\n * Defines values for ModelSize. \\\n * {@link KnownModelSize} can be used interchangeably with ModelSize,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None**: No value selected. \\\n * **Small**: Small size. \\\n * **Medium**: Medium size. \\\n * **Large**: Large size. \\\n * **ExtraLarge**: Extra large size.\n */\nexport type ModelSize = string;\n\n/** Known values of {@link ValidationMetricType} that the service accepts. */\nexport enum KnownValidationMetricType {\n  /** No metric. */\n  None = \"None\",\n  /** Coco metric. */\n  Coco = \"Coco\",\n  /** Voc metric. */\n  Voc = \"Voc\",\n  /** CocoVoc metric. */\n  CocoVoc = \"CocoVoc\"\n}\n\n/**\n * Defines values for ValidationMetricType. \\\n * {@link KnownValidationMetricType} can be used interchangeably with ValidationMetricType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None**: No metric. \\\n * **Coco**: Coco metric. \\\n * **Voc**: Voc metric. \\\n * **CocoVoc**: CocoVoc metric.\n */\nexport type ValidationMetricType = string;\n\n/** Known values of {@link ObjectDetectionPrimaryMetrics} that the service accepts. */\nexport enum KnownObjectDetectionPrimaryMetrics {\n  /**\n   * Mean Average Precision (MAP) is the average of AP (Average Precision).\n   * AP is calculated for each class and averaged to get the MAP.\n   */\n  MeanAveragePrecision = \"MeanAveragePrecision\"\n}\n\n/**\n * Defines values for ObjectDetectionPrimaryMetrics. \\\n * {@link KnownObjectDetectionPrimaryMetrics} can be used interchangeably with ObjectDetectionPrimaryMetrics,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **MeanAveragePrecision**: Mean Average Precision (MAP) is the average of AP (Average Precision).\n * AP is calculated for each class and averaged to get the MAP.\n */\nexport type ObjectDetectionPrimaryMetrics = string;\n\n/** Known values of {@link Goal} that the service accepts. */\nexport enum KnownGoal {\n  /** Minimize */\n  Minimize = \"Minimize\",\n  /** Maximize */\n  Maximize = \"Maximize\"\n}\n\n/**\n * Defines values for Goal. \\\n * {@link KnownGoal} can be used interchangeably with Goal,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Minimize** \\\n * **Maximize**\n */\nexport type Goal = string;\n\n/** Known values of {@link RandomSamplingAlgorithmRule} that the service accepts. */\nexport enum KnownRandomSamplingAlgorithmRule {\n  /** Random */\n  Random = \"Random\",\n  /** Sobol */\n  Sobol = \"Sobol\"\n}\n\n/**\n * Defines values for RandomSamplingAlgorithmRule. \\\n * {@link KnownRandomSamplingAlgorithmRule} can be used interchangeably with RandomSamplingAlgorithmRule,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Random** \\\n * **Sobol**\n */\nexport type RandomSamplingAlgorithmRule = string;\n\n/** Known values of {@link RegressionPrimaryMetrics} that the service accepts. */\nexport enum KnownRegressionPrimaryMetrics {\n  /** The Spearman's rank coefficient of correlation is a nonparametric measure of rank correlation. */\n  SpearmanCorrelation = \"SpearmanCorrelation\",\n  /** The Normalized Root Mean Squared Error (NRMSE) the RMSE facilitates the comparison between models with different scales. */\n  NormalizedRootMeanSquaredError = \"NormalizedRootMeanSquaredError\",\n  /** The R2 score is one of the performance evaluation measures for forecasting-based machine learning models. */\n  R2Score = \"R2Score\",\n  /** The Normalized Mean Absolute Error (NMAE) is a validation metric to compare the Mean Absolute Error (MAE) of (time) series with different scales. */\n  NormalizedMeanAbsoluteError = \"NormalizedMeanAbsoluteError\"\n}\n\n/**\n * Defines values for RegressionPrimaryMetrics. \\\n * {@link KnownRegressionPrimaryMetrics} can be used interchangeably with RegressionPrimaryMetrics,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **SpearmanCorrelation**: The Spearman's rank coefficient of correlation is a nonparametric measure of rank correlation. \\\n * **NormalizedRootMeanSquaredError**: The Normalized Root Mean Squared Error (NRMSE) the RMSE facilitates the comparison between models with different scales. \\\n * **R2Score**: The R2 score is one of the performance evaluation measures for forecasting-based machine learning models. \\\n * **NormalizedMeanAbsoluteError**: The Normalized Mean Absolute Error (NMAE) is a validation metric to compare the Mean Absolute Error (MAE) of (time) series with different scales.\n */\nexport type RegressionPrimaryMetrics = string;\n\n/** Known values of {@link RegressionModels} that the service accepts. */\nexport enum KnownRegressionModels {\n  /** Elastic net is a popular type of regularized linear regression that combines two popular penalties, specifically the L1 and L2 penalty functions. */\n  ElasticNet = \"ElasticNet\",\n  /** The technique of transiting week learners into a strong learner is called Boosting. The gradient boosting algorithm process works on this theory of execution. */\n  GradientBoosting = \"GradientBoosting\",\n  /**\n   * Decision Trees are a non-parametric supervised learning method used for both classification and regression tasks.\n   * The goal is to create a model that predicts the value of a target variable by learning simple decision rules inferred from the data features.\n   */\n  DecisionTree = \"DecisionTree\",\n  /**\n   * K-nearest neighbors (KNN) algorithm uses 'feature similarity' to predict the values of new datapoints\n   * which further means that the new data point will be assigned a value based on how closely it matches the points in the training set.\n   */\n  KNN = \"KNN\",\n  /** Lasso model fit with Least Angle Regression a.k.a. Lars. It is a Linear Model trained with an L1 prior as regularizer. */\n  LassoLars = \"LassoLars\",\n  /**\n   * SGD: Stochastic gradient descent is an optimization algorithm often used in machine learning applications\n   * to find the model parameters that correspond to the best fit between predicted and actual outputs.\n   * It's an inexact but powerful technique.\n   */\n  SGD = \"SGD\",\n  /**\n   * Random forest is a supervised learning algorithm.\n   * The \"forest\" it builds, is an ensemble of decision trees, usually trained with the “bagging” method.\n   * The general idea of the bagging method is that a combination of learning models increases the overall result.\n   */\n  RandomForest = \"RandomForest\",\n  /** Extreme Trees is an ensemble machine learning algorithm that combines the predictions from many decision trees. It is related to the widely used random forest algorithm. */\n  ExtremeRandomTrees = \"ExtremeRandomTrees\",\n  /** LightGBM is a gradient boosting framework that uses tree based learning algorithms. */\n  LightGBM = \"LightGBM\",\n  /** XGBoostRegressor: Extreme Gradient Boosting Regressor is a supervised machine learning model using ensemble of base learners. */\n  XGBoostRegressor = \"XGBoostRegressor\"\n}\n\n/**\n * Defines values for RegressionModels. \\\n * {@link KnownRegressionModels} can be used interchangeably with RegressionModels,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **ElasticNet**: Elastic net is a popular type of regularized linear regression that combines two popular penalties, specifically the L1 and L2 penalty functions. \\\n * **GradientBoosting**: The technique of transiting week learners into a strong learner is called Boosting. The gradient boosting algorithm process works on this theory of execution. \\\n * **DecisionTree**: Decision Trees are a non-parametric supervised learning method used for both classification and regression tasks.\n * The goal is to create a model that predicts the value of a target variable by learning simple decision rules inferred from the data features. \\\n * **KNN**: K-nearest neighbors (KNN) algorithm uses 'feature similarity' to predict the values of new datapoints\n * which further means that the new data point will be assigned a value based on how closely it matches the points in the training set. \\\n * **LassoLars**: Lasso model fit with Least Angle Regression a.k.a. Lars. It is a Linear Model trained with an L1 prior as regularizer. \\\n * **SGD**: SGD: Stochastic gradient descent is an optimization algorithm often used in machine learning applications\n * to find the model parameters that correspond to the best fit between predicted and actual outputs.\n * It's an inexact but powerful technique. \\\n * **RandomForest**: Random forest is a supervised learning algorithm.\n * The \"forest\" it builds, is an ensemble of decision trees, usually trained with the “bagging” method.\n * The general idea of the bagging method is that a combination of learning models increases the overall result. \\\n * **ExtremeRandomTrees**: Extreme Trees is an ensemble machine learning algorithm that combines the predictions from many decision trees. It is related to the widely used random forest algorithm. \\\n * **LightGBM**: LightGBM is a gradient boosting framework that uses tree based learning algorithms. \\\n * **XGBoostRegressor**: XGBoostRegressor: Extreme Gradient Boosting Regressor is a supervised machine learning model using ensemble of base learners.\n */\nexport type RegressionModels = string;\n/** Defines values for SkuTier. */\nexport type SkuTier = \"Free\" | \"Basic\" | \"Standard\" | \"Premium\";\n\n/** Optional parameters. */\nexport interface OperationsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type OperationsListResponse = AmlOperationListResult;\n\n/** Optional parameters. */\nexport interface WorkspacesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type WorkspacesGetResponse = Workspace;\n\n/** Optional parameters. */\nexport interface WorkspacesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type WorkspacesCreateOrUpdateResponse = Workspace;\n\n/** Optional parameters. */\nexport interface WorkspacesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface WorkspacesUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type WorkspacesUpdateResponse = Workspace;\n\n/** Optional parameters. */\nexport interface WorkspacesListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skip?: string;\n}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type WorkspacesListByResourceGroupResponse = WorkspaceListResult;\n\n/** Optional parameters. */\nexport interface WorkspacesDiagnoseOptionalParams\n  extends coreClient.OperationOptions {\n  /** The parameter of diagnosing workspace health */\n  parameters?: DiagnoseWorkspaceParameters;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the diagnose operation. */\nexport type WorkspacesDiagnoseResponse = DiagnoseResponseResult;\n\n/** Optional parameters. */\nexport interface WorkspacesListKeysOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listKeys operation. */\nexport type WorkspacesListKeysResponse = ListWorkspaceKeysResult;\n\n/** Optional parameters. */\nexport interface WorkspacesResyncKeysOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface WorkspacesListBySubscriptionOptionalParams\n  extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skip?: string;\n}\n\n/** Contains response data for the listBySubscription operation. */\nexport type WorkspacesListBySubscriptionResponse = WorkspaceListResult;\n\n/** Optional parameters. */\nexport interface WorkspacesListNotebookAccessTokenOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNotebookAccessToken operation. */\nexport type WorkspacesListNotebookAccessTokenResponse = NotebookAccessTokenResult;\n\n/** Optional parameters. */\nexport interface WorkspacesPrepareNotebookOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the prepareNotebook operation. */\nexport type WorkspacesPrepareNotebookResponse = NotebookResourceInfo;\n\n/** Optional parameters. */\nexport interface WorkspacesListStorageAccountKeysOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listStorageAccountKeys operation. */\nexport type WorkspacesListStorageAccountKeysResponse = ListStorageAccountKeysResult;\n\n/** Optional parameters. */\nexport interface WorkspacesListNotebookKeysOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNotebookKeys operation. */\nexport type WorkspacesListNotebookKeysResponse = ListNotebookKeysResult;\n\n/** Optional parameters. */\nexport interface WorkspacesListOutboundNetworkDependenciesEndpointsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listOutboundNetworkDependenciesEndpoints operation. */\nexport type WorkspacesListOutboundNetworkDependenciesEndpointsResponse = ExternalFqdnResponse;\n\n/** Optional parameters. */\nexport interface WorkspacesListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skip?: string;\n}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type WorkspacesListByResourceGroupNextResponse = WorkspaceListResult;\n\n/** Optional parameters. */\nexport interface WorkspacesListBySubscriptionNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skip?: string;\n}\n\n/** Contains response data for the listBySubscriptionNext operation. */\nexport type WorkspacesListBySubscriptionNextResponse = WorkspaceListResult;\n\n/** Optional parameters. */\nexport interface UsagesListOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type UsagesListResponse = ListUsagesResult;\n\n/** Optional parameters. */\nexport interface UsagesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type UsagesListNextResponse = ListUsagesResult;\n\n/** Optional parameters. */\nexport interface VirtualMachineSizesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type VirtualMachineSizesListResponse = VirtualMachineSizeListResult;\n\n/** Optional parameters. */\nexport interface QuotasUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the update operation. */\nexport type QuotasUpdateResponse = UpdateWorkspaceQuotasResult;\n\n/** Optional parameters. */\nexport interface QuotasListOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type QuotasListResponse = ListWorkspaceQuotas;\n\n/** Optional parameters. */\nexport interface QuotasListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type QuotasListNextResponse = ListWorkspaceQuotas;\n\n/** Optional parameters. */\nexport interface ComputeListOptionalParams extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skip?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type ComputeListResponse = PaginatedComputeResourcesList;\n\n/** Optional parameters. */\nexport interface ComputeGetOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ComputeGetResponse = ComputeResource;\n\n/** Optional parameters. */\nexport interface ComputeCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ComputeCreateOrUpdateResponse = ComputeResource;\n\n/** Optional parameters. */\nexport interface ComputeUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type ComputeUpdateResponse = ComputeResource;\n\n/** Optional parameters. */\nexport interface ComputeDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ComputeListNodesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNodes operation. */\nexport type ComputeListNodesResponse = AmlComputeNodesInformation;\n\n/** Optional parameters. */\nexport interface ComputeListKeysOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listKeys operation. */\nexport type ComputeListKeysResponse = ComputeSecretsUnion;\n\n/** Optional parameters. */\nexport interface ComputeStartOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ComputeStopOptionalParams extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ComputeRestartOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ComputeListNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skip?: string;\n}\n\n/** Contains response data for the listNext operation. */\nexport type ComputeListNextResponse = PaginatedComputeResourcesList;\n\n/** Optional parameters. */\nexport interface ComputeListNodesNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNodesNext operation. */\nexport type ComputeListNodesNextResponse = AmlComputeNodesInformation;\n\n/** Optional parameters. */\nexport interface PrivateEndpointConnectionsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type PrivateEndpointConnectionsListResponse = PrivateEndpointConnectionListResult;\n\n/** Optional parameters. */\nexport interface PrivateEndpointConnectionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type PrivateEndpointConnectionsGetResponse = PrivateEndpointConnection;\n\n/** Optional parameters. */\nexport interface PrivateEndpointConnectionsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type PrivateEndpointConnectionsCreateOrUpdateResponse = PrivateEndpointConnection;\n\n/** Optional parameters. */\nexport interface PrivateEndpointConnectionsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface PrivateLinkResourcesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type PrivateLinkResourcesListResponse = PrivateLinkResourceListResult;\n\n/** Optional parameters. */\nexport interface WorkspaceConnectionsCreateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the create operation. */\nexport type WorkspaceConnectionsCreateResponse = WorkspaceConnectionPropertiesV2BasicResource;\n\n/** Optional parameters. */\nexport interface WorkspaceConnectionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type WorkspaceConnectionsGetResponse = WorkspaceConnectionPropertiesV2BasicResource;\n\n/** Optional parameters. */\nexport interface WorkspaceConnectionsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface WorkspaceConnectionsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** Target of the workspace connection. */\n  target?: string;\n  /** Category of the workspace connection. */\n  category?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type WorkspaceConnectionsListResponse = WorkspaceConnectionPropertiesV2BasicResourceArmPaginatedResult;\n\n/** Optional parameters. */\nexport interface WorkspaceConnectionsListNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Target of the workspace connection. */\n  target?: string;\n  /** Category of the workspace connection. */\n  category?: string;\n}\n\n/** Contains response data for the listNext operation. */\nexport type WorkspaceConnectionsListNextResponse = WorkspaceConnectionPropertiesV2BasicResourceArmPaginatedResult;\n\n/** Optional parameters. */\nexport interface BatchEndpointsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skip?: string;\n  /** Number of endpoints to be retrieved in a page of results. */\n  count?: number;\n}\n\n/** Contains response data for the list operation. */\nexport type BatchEndpointsListResponse = BatchEndpointTrackedResourceArmPaginatedResult;\n\n/** Optional parameters. */\nexport interface BatchEndpointsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface BatchEndpointsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type BatchEndpointsGetResponse = BatchEndpoint;\n\n/** Optional parameters. */\nexport interface BatchEndpointsUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type BatchEndpointsUpdateResponse = BatchEndpoint;\n\n/** Optional parameters. */\nexport interface BatchEndpointsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type BatchEndpointsCreateOrUpdateResponse = BatchEndpoint;\n\n/** Optional parameters. */\nexport interface BatchEndpointsListKeysOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listKeys operation. */\nexport type BatchEndpointsListKeysResponse = EndpointAuthKeys;\n\n/** Optional parameters. */\nexport interface BatchEndpointsListNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skip?: string;\n  /** Number of endpoints to be retrieved in a page of results. */\n  count?: number;\n}\n\n/** Contains response data for the listNext operation. */\nexport type BatchEndpointsListNextResponse = BatchEndpointTrackedResourceArmPaginatedResult;\n\n/** Optional parameters. */\nexport interface BatchDeploymentsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skip?: string;\n  /** Ordering of list. */\n  orderBy?: string;\n  /** Top of list. */\n  top?: number;\n}\n\n/** Contains response data for the list operation. */\nexport type BatchDeploymentsListResponse = BatchDeploymentTrackedResourceArmPaginatedResult;\n\n/** Optional parameters. */\nexport interface BatchDeploymentsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface BatchDeploymentsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type BatchDeploymentsGetResponse = BatchDeployment;\n\n/** Optional parameters. */\nexport interface BatchDeploymentsUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type BatchDeploymentsUpdateResponse = BatchDeployment;\n\n/** Optional parameters. */\nexport interface BatchDeploymentsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type BatchDeploymentsCreateOrUpdateResponse = BatchDeployment;\n\n/** Optional parameters. */\nexport interface BatchDeploymentsListNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skip?: string;\n  /** Ordering of list. */\n  orderBy?: string;\n  /** Top of list. */\n  top?: number;\n}\n\n/** Contains response data for the listNext operation. */\nexport type BatchDeploymentsListNextResponse = BatchDeploymentTrackedResourceArmPaginatedResult;\n\n/** Optional parameters. */\nexport interface CodeContainersListOptionalParams\n  extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skip?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type CodeContainersListResponse = CodeContainerResourceArmPaginatedResult;\n\n/** Optional parameters. */\nexport interface CodeContainersDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface CodeContainersGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type CodeContainersGetResponse = CodeContainer;\n\n/** Optional parameters. */\nexport interface CodeContainersCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type CodeContainersCreateOrUpdateResponse = CodeContainer;\n\n/** Optional parameters. */\nexport interface CodeContainersListNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skip?: string;\n}\n\n/** Contains response data for the listNext operation. */\nexport type CodeContainersListNextResponse = CodeContainerResourceArmPaginatedResult;\n\n/** Optional parameters. */\nexport interface CodeVersionsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skip?: string;\n  /** Ordering of list. */\n  orderBy?: string;\n  /** Maximum number of records to return. */\n  top?: number;\n}\n\n/** Contains response data for the list operation. */\nexport type CodeVersionsListResponse = CodeVersionResourceArmPaginatedResult;\n\n/** Optional parameters. */\nexport interface CodeVersionsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface CodeVersionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type CodeVersionsGetResponse = CodeVersion;\n\n/** Optional parameters. */\nexport interface CodeVersionsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type CodeVersionsCreateOrUpdateResponse = CodeVersion;\n\n/** Optional parameters. */\nexport interface CodeVersionsListNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skip?: string;\n  /** Ordering of list. */\n  orderBy?: string;\n  /** Maximum number of records to return. */\n  top?: number;\n}\n\n/** Contains response data for the listNext operation. */\nexport type CodeVersionsListNextResponse = CodeVersionResourceArmPaginatedResult;\n\n/** Optional parameters. */\nexport interface ComponentContainersListOptionalParams\n  extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skip?: string;\n  /** View type for including/excluding (for example) archived entities. */\n  listViewType?: ListViewType;\n}\n\n/** Contains response data for the list operation. */\nexport type ComponentContainersListResponse = ComponentContainerResourceArmPaginatedResult;\n\n/** Optional parameters. */\nexport interface ComponentContainersDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ComponentContainersGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ComponentContainersGetResponse = ComponentContainer;\n\n/** Optional parameters. */\nexport interface ComponentContainersCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ComponentContainersCreateOrUpdateResponse = ComponentContainer;\n\n/** Optional parameters. */\nexport interface ComponentContainersListNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skip?: string;\n  /** View type for including/excluding (for example) archived entities. */\n  listViewType?: ListViewType;\n}\n\n/** Contains response data for the listNext operation. */\nexport type ComponentContainersListNextResponse = ComponentContainerResourceArmPaginatedResult;\n\n/** Optional parameters. */\nexport interface ComponentVersionsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skip?: string;\n  /** Ordering of list. */\n  orderBy?: string;\n  /** Maximum number of records to return. */\n  top?: number;\n  /** View type for including/excluding (for example) archived entities. */\n  listViewType?: ListViewType;\n}\n\n/** Contains response data for the list operation. */\nexport type ComponentVersionsListResponse = ComponentVersionResourceArmPaginatedResult;\n\n/** Optional parameters. */\nexport interface ComponentVersionsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ComponentVersionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ComponentVersionsGetResponse = ComponentVersion;\n\n/** Optional parameters. */\nexport interface ComponentVersionsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ComponentVersionsCreateOrUpdateResponse = ComponentVersion;\n\n/** Optional parameters. */\nexport interface ComponentVersionsListNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skip?: string;\n  /** Ordering of list. */\n  orderBy?: string;\n  /** Maximum number of records to return. */\n  top?: number;\n  /** View type for including/excluding (for example) archived entities. */\n  listViewType?: ListViewType;\n}\n\n/** Contains response data for the listNext operation. */\nexport type ComponentVersionsListNextResponse = ComponentVersionResourceArmPaginatedResult;\n\n/** Optional parameters. */\nexport interface DataContainersListOptionalParams\n  extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skip?: string;\n  /** View type for including/excluding (for example) archived entities. */\n  listViewType?: ListViewType;\n}\n\n/** Contains response data for the list operation. */\nexport type DataContainersListResponse = DataContainerResourceArmPaginatedResult;\n\n/** Optional parameters. */\nexport interface DataContainersDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface DataContainersGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type DataContainersGetResponse = DataContainer;\n\n/** Optional parameters. */\nexport interface DataContainersCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type DataContainersCreateOrUpdateResponse = DataContainer;\n\n/** Optional parameters. */\nexport interface DataContainersListNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skip?: string;\n  /** View type for including/excluding (for example) archived entities. */\n  listViewType?: ListViewType;\n}\n\n/** Contains response data for the listNext operation. */\nexport type DataContainersListNextResponse = DataContainerResourceArmPaginatedResult;\n\n/** Optional parameters. */\nexport interface DataVersionsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skip?: string;\n  /** Please choose OrderBy value from ['createdtime', 'modifiedtime'] */\n  orderBy?: string;\n  /**\n   * Top count of results, top count cannot be greater than the page size.\n   *                               If topCount > page size, results with be default page size count will be returned\n   */\n  top?: number;\n  /** [ListViewType.ActiveOnly, ListViewType.ArchivedOnly, ListViewType.All]View type for including/excluding (for example) archived entities. */\n  listViewType?: ListViewType;\n  /** Comma-separated list of tag names (and optionally values). Example: tag1,tag2=value2 */\n  tags?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type DataVersionsListResponse = DataVersionBaseResourceArmPaginatedResult;\n\n/** Optional parameters. */\nexport interface DataVersionsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface DataVersionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type DataVersionsGetResponse = DataVersionBase;\n\n/** Optional parameters. */\nexport interface DataVersionsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type DataVersionsCreateOrUpdateResponse = DataVersionBase;\n\n/** Optional parameters. */\nexport interface DataVersionsListNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skip?: string;\n  /** Please choose OrderBy value from ['createdtime', 'modifiedtime'] */\n  orderBy?: string;\n  /**\n   * Top count of results, top count cannot be greater than the page size.\n   *                               If topCount > page size, results with be default page size count will be returned\n   */\n  top?: number;\n  /** [ListViewType.ActiveOnly, ListViewType.ArchivedOnly, ListViewType.All]View type for including/excluding (for example) archived entities. */\n  listViewType?: ListViewType;\n  /** Comma-separated list of tag names (and optionally values). Example: tag1,tag2=value2 */\n  tags?: string;\n}\n\n/** Contains response data for the listNext operation. */\nexport type DataVersionsListNextResponse = DataVersionBaseResourceArmPaginatedResult;\n\n/** Optional parameters. */\nexport interface DatastoresListOptionalParams\n  extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skip?: string;\n  /** Maximum number of results to return. */\n  count?: number;\n  /** Filter down to the workspace default datastore. */\n  isDefault?: boolean;\n  /** Names of datastores to return. */\n  names?: string[];\n  /** Text to search for in the datastore names. */\n  searchText?: string;\n  /** Order by property (createdtime | modifiedtime | name). */\n  orderBy?: string;\n  /** Order by property in ascending order. */\n  orderByAsc?: boolean;\n}\n\n/** Contains response data for the list operation. */\nexport type DatastoresListResponse = DatastoreResourceArmPaginatedResult;\n\n/** Optional parameters. */\nexport interface DatastoresDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface DatastoresGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type DatastoresGetResponse = Datastore;\n\n/** Optional parameters. */\nexport interface DatastoresCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Flag to skip validation. */\n  skipValidation?: boolean;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type DatastoresCreateOrUpdateResponse = Datastore;\n\n/** Optional parameters. */\nexport interface DatastoresListSecretsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listSecrets operation. */\nexport type DatastoresListSecretsResponse = DatastoreSecretsUnion;\n\n/** Optional parameters. */\nexport interface DatastoresListNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skip?: string;\n  /** Maximum number of results to return. */\n  count?: number;\n  /** Filter down to the workspace default datastore. */\n  isDefault?: boolean;\n  /** Names of datastores to return. */\n  names?: string[];\n  /** Text to search for in the datastore names. */\n  searchText?: string;\n  /** Order by property (createdtime | modifiedtime | name). */\n  orderBy?: string;\n  /** Order by property in ascending order. */\n  orderByAsc?: boolean;\n}\n\n/** Contains response data for the listNext operation. */\nexport type DatastoresListNextResponse = DatastoreResourceArmPaginatedResult;\n\n/** Optional parameters. */\nexport interface EnvironmentContainersListOptionalParams\n  extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skip?: string;\n  /** View type for including/excluding (for example) archived entities. */\n  listViewType?: ListViewType;\n}\n\n/** Contains response data for the list operation. */\nexport type EnvironmentContainersListResponse = EnvironmentContainerResourceArmPaginatedResult;\n\n/** Optional parameters. */\nexport interface EnvironmentContainersDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface EnvironmentContainersGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type EnvironmentContainersGetResponse = EnvironmentContainer;\n\n/** Optional parameters. */\nexport interface EnvironmentContainersCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type EnvironmentContainersCreateOrUpdateResponse = EnvironmentContainer;\n\n/** Optional parameters. */\nexport interface EnvironmentContainersListNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skip?: string;\n  /** View type for including/excluding (for example) archived entities. */\n  listViewType?: ListViewType;\n}\n\n/** Contains response data for the listNext operation. */\nexport type EnvironmentContainersListNextResponse = EnvironmentContainerResourceArmPaginatedResult;\n\n/** Optional parameters. */\nexport interface EnvironmentVersionsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skip?: string;\n  /** Ordering of list. */\n  orderBy?: string;\n  /** Maximum number of records to return. */\n  top?: number;\n  /** View type for including/excluding (for example) archived entities. */\n  listViewType?: ListViewType;\n}\n\n/** Contains response data for the list operation. */\nexport type EnvironmentVersionsListResponse = EnvironmentVersionResourceArmPaginatedResult;\n\n/** Optional parameters. */\nexport interface EnvironmentVersionsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface EnvironmentVersionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type EnvironmentVersionsGetResponse = EnvironmentVersion;\n\n/** Optional parameters. */\nexport interface EnvironmentVersionsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type EnvironmentVersionsCreateOrUpdateResponse = EnvironmentVersion;\n\n/** Optional parameters. */\nexport interface EnvironmentVersionsListNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skip?: string;\n  /** Ordering of list. */\n  orderBy?: string;\n  /** Maximum number of records to return. */\n  top?: number;\n  /** View type for including/excluding (for example) archived entities. */\n  listViewType?: ListViewType;\n}\n\n/** Contains response data for the listNext operation. */\nexport type EnvironmentVersionsListNextResponse = EnvironmentVersionResourceArmPaginatedResult;\n\n/** Optional parameters. */\nexport interface JobsListOptionalParams extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skip?: string;\n  /** View type for including/excluding (for example) archived entities. */\n  listViewType?: ListViewType;\n  /** Type of job to be returned. */\n  jobType?: string;\n  /** Jobs returned will have this tag key. */\n  tag?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type JobsListResponse = JobBaseResourceArmPaginatedResult;\n\n/** Optional parameters. */\nexport interface JobsDeleteOptionalParams extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface JobsGetOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type JobsGetResponse = JobBase;\n\n/** Optional parameters. */\nexport interface JobsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type JobsCreateOrUpdateResponse = JobBase;\n\n/** Optional parameters. */\nexport interface JobsCancelOptionalParams extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface JobsListNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skip?: string;\n  /** View type for including/excluding (for example) archived entities. */\n  listViewType?: ListViewType;\n  /** Type of job to be returned. */\n  jobType?: string;\n  /** Jobs returned will have this tag key. */\n  tag?: string;\n}\n\n/** Contains response data for the listNext operation. */\nexport type JobsListNextResponse = JobBaseResourceArmPaginatedResult;\n\n/** Optional parameters. */\nexport interface ModelContainersListOptionalParams\n  extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skip?: string;\n  /** Maximum number of results to return. */\n  count?: number;\n  /** View type for including/excluding (for example) archived entities. */\n  listViewType?: ListViewType;\n}\n\n/** Contains response data for the list operation. */\nexport type ModelContainersListResponse = ModelContainerResourceArmPaginatedResult;\n\n/** Optional parameters. */\nexport interface ModelContainersDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ModelContainersGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ModelContainersGetResponse = ModelContainer;\n\n/** Optional parameters. */\nexport interface ModelContainersCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ModelContainersCreateOrUpdateResponse = ModelContainer;\n\n/** Optional parameters. */\nexport interface ModelContainersListNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skip?: string;\n  /** Maximum number of results to return. */\n  count?: number;\n  /** View type for including/excluding (for example) archived entities. */\n  listViewType?: ListViewType;\n}\n\n/** Contains response data for the listNext operation. */\nexport type ModelContainersListNextResponse = ModelContainerResourceArmPaginatedResult;\n\n/** Optional parameters. */\nexport interface ModelVersionsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skip?: string;\n  /** Ordering of list. */\n  orderBy?: string;\n  /** Maximum number of records to return. */\n  top?: number;\n  /** View type for including/excluding (for example) archived entities. */\n  listViewType?: ListViewType;\n  /** Model version. */\n  version?: string;\n  /** Model description. */\n  description?: string;\n  /** Number of initial results to skip. */\n  offset?: number;\n  /** Comma-separated list of tag names (and optionally values). Example: tag1,tag2=value2 */\n  tags?: string;\n  /** Comma-separated list of property names (and optionally values). Example: prop1,prop2=value2 */\n  properties?: string;\n  /** Name of the feed. */\n  feed?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type ModelVersionsListResponse = ModelVersionResourceArmPaginatedResult;\n\n/** Optional parameters. */\nexport interface ModelVersionsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ModelVersionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ModelVersionsGetResponse = ModelVersion;\n\n/** Optional parameters. */\nexport interface ModelVersionsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ModelVersionsCreateOrUpdateResponse = ModelVersion;\n\n/** Optional parameters. */\nexport interface ModelVersionsListNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skip?: string;\n  /** Ordering of list. */\n  orderBy?: string;\n  /** Maximum number of records to return. */\n  top?: number;\n  /** View type for including/excluding (for example) archived entities. */\n  listViewType?: ListViewType;\n  /** Model version. */\n  version?: string;\n  /** Model description. */\n  description?: string;\n  /** Number of initial results to skip. */\n  offset?: number;\n  /** Comma-separated list of tag names (and optionally values). Example: tag1,tag2=value2 */\n  tags?: string;\n  /** Comma-separated list of property names (and optionally values). Example: prop1,prop2=value2 */\n  properties?: string;\n  /** Name of the feed. */\n  feed?: string;\n}\n\n/** Contains response data for the listNext operation. */\nexport type ModelVersionsListNextResponse = ModelVersionResourceArmPaginatedResult;\n\n/** Optional parameters. */\nexport interface OnlineEndpointsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skip?: string;\n  /** Number of endpoints to be retrieved in a page of results. */\n  count?: number;\n  /** A set of tags with which to filter the returned models. It is a comma separated string of tags key or tags key=value. Example: tagKey1,tagKey2,tagKey3=value3 . */\n  tags?: string;\n  /** A set of properties with which to filter the returned models. It is a comma separated string of properties key and/or properties key=value Example: propKey1,propKey2,propKey3=value3 . */\n  properties?: string;\n  /** Name of the endpoint. */\n  name?: string;\n  /** EndpointComputeType to be filtered by. */\n  computeType?: EndpointComputeType;\n  /** The option to order the response. */\n  orderBy?: OrderString;\n}\n\n/** Contains response data for the list operation. */\nexport type OnlineEndpointsListResponse = OnlineEndpointTrackedResourceArmPaginatedResult;\n\n/** Optional parameters. */\nexport interface OnlineEndpointsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface OnlineEndpointsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type OnlineEndpointsGetResponse = OnlineEndpoint;\n\n/** Optional parameters. */\nexport interface OnlineEndpointsUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type OnlineEndpointsUpdateResponse = OnlineEndpoint;\n\n/** Optional parameters. */\nexport interface OnlineEndpointsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type OnlineEndpointsCreateOrUpdateResponse = OnlineEndpoint;\n\n/** Optional parameters. */\nexport interface OnlineEndpointsListKeysOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listKeys operation. */\nexport type OnlineEndpointsListKeysResponse = EndpointAuthKeys;\n\n/** Optional parameters. */\nexport interface OnlineEndpointsRegenerateKeysOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface OnlineEndpointsGetTokenOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getToken operation. */\nexport type OnlineEndpointsGetTokenResponse = EndpointAuthToken;\n\n/** Optional parameters. */\nexport interface OnlineEndpointsListNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skip?: string;\n  /** Number of endpoints to be retrieved in a page of results. */\n  count?: number;\n  /** A set of tags with which to filter the returned models. It is a comma separated string of tags key or tags key=value. Example: tagKey1,tagKey2,tagKey3=value3 . */\n  tags?: string;\n  /** A set of properties with which to filter the returned models. It is a comma separated string of properties key and/or properties key=value Example: propKey1,propKey2,propKey3=value3 . */\n  properties?: string;\n  /** Name of the endpoint. */\n  name?: string;\n  /** EndpointComputeType to be filtered by. */\n  computeType?: EndpointComputeType;\n  /** The option to order the response. */\n  orderBy?: OrderString;\n}\n\n/** Contains response data for the listNext operation. */\nexport type OnlineEndpointsListNextResponse = OnlineEndpointTrackedResourceArmPaginatedResult;\n\n/** Optional parameters. */\nexport interface OnlineDeploymentsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skip?: string;\n  /** Ordering of list. */\n  orderBy?: string;\n  /** Top of list. */\n  top?: number;\n}\n\n/** Contains response data for the list operation. */\nexport type OnlineDeploymentsListResponse = OnlineDeploymentTrackedResourceArmPaginatedResult;\n\n/** Optional parameters. */\nexport interface OnlineDeploymentsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface OnlineDeploymentsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type OnlineDeploymentsGetResponse = OnlineDeployment;\n\n/** Optional parameters. */\nexport interface OnlineDeploymentsUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type OnlineDeploymentsUpdateResponse = OnlineDeployment;\n\n/** Optional parameters. */\nexport interface OnlineDeploymentsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type OnlineDeploymentsCreateOrUpdateResponse = OnlineDeployment;\n\n/** Optional parameters. */\nexport interface OnlineDeploymentsGetLogsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getLogs operation. */\nexport type OnlineDeploymentsGetLogsResponse = DeploymentLogs;\n\n/** Optional parameters. */\nexport interface OnlineDeploymentsListSkusOptionalParams\n  extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skip?: string;\n  /** Number of Skus to be retrieved in a page of results. */\n  count?: number;\n}\n\n/** Contains response data for the listSkus operation. */\nexport type OnlineDeploymentsListSkusResponse = SkuResourceArmPaginatedResult;\n\n/** Optional parameters. */\nexport interface OnlineDeploymentsListNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skip?: string;\n  /** Ordering of list. */\n  orderBy?: string;\n  /** Top of list. */\n  top?: number;\n}\n\n/** Contains response data for the listNext operation. */\nexport type OnlineDeploymentsListNextResponse = OnlineDeploymentTrackedResourceArmPaginatedResult;\n\n/** Optional parameters. */\nexport interface OnlineDeploymentsListSkusNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skip?: string;\n  /** Number of Skus to be retrieved in a page of results. */\n  count?: number;\n}\n\n/** Contains response data for the listSkusNext operation. */\nexport type OnlineDeploymentsListSkusNextResponse = SkuResourceArmPaginatedResult;\n\n/** Optional parameters. */\nexport interface SchedulesListOptionalParams\n  extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skip?: string;\n  /** Status filter for schedule. */\n  listViewType?: ScheduleListViewType;\n}\n\n/** Contains response data for the list operation. */\nexport type SchedulesListResponse = ScheduleResourceArmPaginatedResult;\n\n/** Optional parameters. */\nexport interface SchedulesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface SchedulesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type SchedulesGetResponse = Schedule;\n\n/** Optional parameters. */\nexport interface SchedulesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type SchedulesCreateOrUpdateResponse = Schedule;\n\n/** Optional parameters. */\nexport interface SchedulesListNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skip?: string;\n  /** Status filter for schedule. */\n  listViewType?: ScheduleListViewType;\n}\n\n/** Contains response data for the listNext operation. */\nexport type SchedulesListNextResponse = ScheduleResourceArmPaginatedResult;\n\n/** Optional parameters. */\nexport interface WorkspaceFeaturesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type WorkspaceFeaturesListResponse = ListAmlUserFeatureResult;\n\n/** Optional parameters. */\nexport interface WorkspaceFeaturesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type WorkspaceFeaturesListNextResponse = ListAmlUserFeatureResult;\n\n/** Optional parameters. */\nexport interface AzureMachineLearningWorkspacesOptionalParams\n  extends coreClient.ServiceClientOptions {\n  /** server parameter */\n  $host?: string;\n  /** Api Version */\n  apiVersion?: string;\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport const AmlOperationListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AmlOperationListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"AmlOperation\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const AmlOperation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AmlOperation\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      display: {\n        serializedName: \"display\",\n        type: {\n          name: \"Composite\",\n          className: \"AmlOperationDisplay\"\n        }\n      },\n      isDataAction: {\n        serializedName: \"isDataAction\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const AmlOperationDisplay: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AmlOperationDisplay\",\n    modelProperties: {\n      provider: {\n        serializedName: \"provider\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resource: {\n        serializedName: \"resource\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operation: {\n        serializedName: \"operation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorResponse\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorDetail\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorDetail: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorDetail\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      target: {\n        serializedName: \"target\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      details: {\n        serializedName: \"details\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorDetail\"\n            }\n          }\n        }\n      },\n      additionalInfo: {\n        serializedName: \"additionalInfo\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorAdditionalInfo\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorAdditionalInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorAdditionalInfo\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      info: {\n        serializedName: \"info\",\n        readOnly: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const EncryptionProperty: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EncryptionProperty\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"IdentityForCmk\"\n        }\n      },\n      keyVaultProperties: {\n        serializedName: \"keyVaultProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"EncryptionKeyVaultProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const IdentityForCmk: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IdentityForCmk\",\n    modelProperties: {\n      userAssignedIdentity: {\n        serializedName: \"userAssignedIdentity\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EncryptionKeyVaultProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EncryptionKeyVaultProperties\",\n    modelProperties: {\n      keyVaultArmId: {\n        serializedName: \"keyVaultArmId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      keyIdentifier: {\n        serializedName: \"keyIdentifier\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      identityClientId: {\n        serializedName: \"identityClientId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateEndpoint: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateEndpoint\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      subnetArmId: {\n        serializedName: \"subnetArmId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateLinkServiceConnectionState: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateLinkServiceConnectionState\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      actionsRequired: {\n        serializedName: \"actionsRequired\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedServiceIdentity: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedServiceIdentity\",\n    modelProperties: {\n      principalId: {\n        serializedName: \"principalId\",\n        readOnly: true,\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      tenantId: {\n        serializedName: \"tenantId\",\n        readOnly: true,\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      userAssignedIdentities: {\n        serializedName: \"userAssignedIdentities\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Composite\", className: \"UserAssignedIdentity\" }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const UserAssignedIdentity: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UserAssignedIdentity\",\n    modelProperties: {\n      principalId: {\n        serializedName: \"principalId\",\n        readOnly: true,\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      clientId: {\n        serializedName: \"clientId\",\n        readOnly: true,\n        type: {\n          name: \"Uuid\"\n        }\n      }\n    }\n  }\n};\n\nexport const Sku: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Sku\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tier: {\n        serializedName: \"tier\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Free\", \"Basic\", \"Standard\", \"Premium\"]\n        }\n      },\n      size: {\n        serializedName: \"size\",\n        type: {\n          name: \"String\"\n        }\n      },\n      family: {\n        serializedName: \"family\",\n        type: {\n          name: \"String\"\n        }\n      },\n      capacity: {\n        serializedName: \"capacity\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Resource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Resource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      }\n    }\n  }\n};\n\nexport const SystemData: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SystemData\",\n    modelProperties: {\n      createdBy: {\n        serializedName: \"createdBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdByType: {\n        serializedName: \"createdByType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdAt: {\n        serializedName: \"createdAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastModifiedBy: {\n        serializedName: \"lastModifiedBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedByType: {\n        serializedName: \"lastModifiedByType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedAt: {\n        serializedName: \"lastModifiedAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const SharedPrivateLinkResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SharedPrivateLinkResource\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      privateLinkResourceId: {\n        serializedName: \"properties.privateLinkResourceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      groupId: {\n        serializedName: \"properties.groupId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestMessage: {\n        serializedName: \"properties.requestMessage\",\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"properties.status\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NotebookResourceInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NotebookResourceInfo\",\n    modelProperties: {\n      fqdn: {\n        serializedName: \"fqdn\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceId: {\n        serializedName: \"resourceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      notebookPreparationError: {\n        serializedName: \"notebookPreparationError\",\n        type: {\n          name: \"Composite\",\n          className: \"NotebookPreparationError\"\n        }\n      }\n    }\n  }\n};\n\nexport const NotebookPreparationError: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NotebookPreparationError\",\n    modelProperties: {\n      errorMessage: {\n        serializedName: \"errorMessage\",\n        type: {\n          name: \"String\"\n        }\n      },\n      statusCode: {\n        serializedName: \"statusCode\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceManagedResourcesSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServiceManagedResourcesSettings\",\n    modelProperties: {\n      cosmosDb: {\n        serializedName: \"cosmosDb\",\n        type: {\n          name: \"Composite\",\n          className: \"CosmosDbSettings\"\n        }\n      }\n    }\n  }\n};\n\nexport const CosmosDbSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CosmosDbSettings\",\n    modelProperties: {\n      collectionsThroughput: {\n        serializedName: \"collectionsThroughput\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const WorkspaceUpdateParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WorkspaceUpdateParameters\",\n    modelProperties: {\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagedServiceIdentity\"\n        }\n      },\n      description: {\n        serializedName: \"properties.description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      friendlyName: {\n        serializedName: \"properties.friendlyName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      imageBuildCompute: {\n        serializedName: \"properties.imageBuildCompute\",\n        type: {\n          name: \"String\"\n        }\n      },\n      serviceManagedResourcesSettings: {\n        serializedName: \"properties.serviceManagedResourcesSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"ServiceManagedResourcesSettings\"\n        }\n      },\n      primaryUserAssignedIdentity: {\n        serializedName: \"properties.primaryUserAssignedIdentity\",\n        type: {\n          name: \"String\"\n        }\n      },\n      publicNetworkAccess: {\n        serializedName: \"properties.publicNetworkAccess\",\n        type: {\n          name: \"String\"\n        }\n      },\n      applicationInsights: {\n        serializedName: \"properties.applicationInsights\",\n        type: {\n          name: \"String\"\n        }\n      },\n      containerRegistry: {\n        serializedName: \"properties.containerRegistry\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const WorkspaceListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WorkspaceListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Workspace\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DiagnoseWorkspaceParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DiagnoseWorkspaceParameters\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Composite\",\n          className: \"DiagnoseRequestProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const DiagnoseRequestProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DiagnoseRequestProperties\",\n    modelProperties: {\n      udr: {\n        serializedName: \"udr\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n          }\n        }\n      },\n      nsg: {\n        serializedName: \"nsg\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n          }\n        }\n      },\n      resourceLock: {\n        serializedName: \"resourceLock\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n          }\n        }\n      },\n      dnsResolution: {\n        serializedName: \"dnsResolution\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n          }\n        }\n      },\n      storageAccount: {\n        serializedName: \"storageAccount\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n          }\n        }\n      },\n      keyVault: {\n        serializedName: \"keyVault\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n          }\n        }\n      },\n      containerRegistry: {\n        serializedName: \"containerRegistry\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n          }\n        }\n      },\n      applicationInsights: {\n        serializedName: \"applicationInsights\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n          }\n        }\n      },\n      others: {\n        serializedName: \"others\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DiagnoseResponseResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DiagnoseResponseResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Composite\",\n          className: \"DiagnoseResponseResultValue\"\n        }\n      }\n    }\n  }\n};\n\nexport const DiagnoseResponseResultValue: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DiagnoseResponseResultValue\",\n    modelProperties: {\n      userDefinedRouteResults: {\n        serializedName: \"userDefinedRouteResults\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DiagnoseResult\"\n            }\n          }\n        }\n      },\n      networkSecurityRuleResults: {\n        serializedName: \"networkSecurityRuleResults\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DiagnoseResult\"\n            }\n          }\n        }\n      },\n      resourceLockResults: {\n        serializedName: \"resourceLockResults\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DiagnoseResult\"\n            }\n          }\n        }\n      },\n      dnsResolutionResults: {\n        serializedName: \"dnsResolutionResults\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DiagnoseResult\"\n            }\n          }\n        }\n      },\n      storageAccountResults: {\n        serializedName: \"storageAccountResults\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DiagnoseResult\"\n            }\n          }\n        }\n      },\n      keyVaultResults: {\n        serializedName: \"keyVaultResults\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DiagnoseResult\"\n            }\n          }\n        }\n      },\n      containerRegistryResults: {\n        serializedName: \"containerRegistryResults\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DiagnoseResult\"\n            }\n          }\n        }\n      },\n      applicationInsightsResults: {\n        serializedName: \"applicationInsightsResults\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DiagnoseResult\"\n            }\n          }\n        }\n      },\n      otherResults: {\n        serializedName: \"otherResults\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DiagnoseResult\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DiagnoseResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DiagnoseResult\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      level: {\n        serializedName: \"level\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ListWorkspaceKeysResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ListWorkspaceKeysResult\",\n    modelProperties: {\n      userStorageKey: {\n        serializedName: \"userStorageKey\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      userStorageResourceId: {\n        serializedName: \"userStorageResourceId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      appInsightsInstrumentationKey: {\n        serializedName: \"appInsightsInstrumentationKey\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      containerRegistryCredentials: {\n        serializedName: \"containerRegistryCredentials\",\n        type: {\n          name: \"Composite\",\n          className: \"RegistryListCredentialsResult\"\n        }\n      },\n      notebookAccessKeys: {\n        serializedName: \"notebookAccessKeys\",\n        type: {\n          name: \"Composite\",\n          className: \"ListNotebookKeysResult\"\n        }\n      }\n    }\n  }\n};\n\nexport const RegistryListCredentialsResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RegistryListCredentialsResult\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      username: {\n        serializedName: \"username\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      passwords: {\n        serializedName: \"passwords\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Password\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Password: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Password\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ListNotebookKeysResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ListNotebookKeysResult\",\n    modelProperties: {\n      primaryAccessKey: {\n        serializedName: \"primaryAccessKey\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      secondaryAccessKey: {\n        serializedName: \"secondaryAccessKey\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ListUsagesResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ListUsagesResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Usage\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Usage: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Usage\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      amlWorkspaceLocation: {\n        serializedName: \"amlWorkspaceLocation\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      unit: {\n        serializedName: \"unit\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      currentValue: {\n        serializedName: \"currentValue\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      limit: {\n        serializedName: \"limit\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"Composite\",\n          className: \"UsageName\"\n        }\n      }\n    }\n  }\n};\n\nexport const UsageName: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UsageName\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      localizedValue: {\n        serializedName: \"localizedValue\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineSizeListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineSizeListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VirtualMachineSize\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineSize: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineSize\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      family: {\n        serializedName: \"family\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      vCPUs: {\n        serializedName: \"vCPUs\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      gpus: {\n        serializedName: \"gpus\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      osVhdSizeMB: {\n        serializedName: \"osVhdSizeMB\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      maxResourceVolumeMB: {\n        serializedName: \"maxResourceVolumeMB\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      memoryGB: {\n        serializedName: \"memoryGB\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      lowPriorityCapable: {\n        serializedName: \"lowPriorityCapable\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      premiumIO: {\n        serializedName: \"premiumIO\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      estimatedVMPrices: {\n        serializedName: \"estimatedVMPrices\",\n        type: {\n          name: \"Composite\",\n          className: \"EstimatedVMPrices\"\n        }\n      },\n      supportedComputeTypes: {\n        serializedName: \"supportedComputeTypes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const EstimatedVMPrices: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EstimatedVMPrices\",\n    modelProperties: {\n      billingCurrency: {\n        serializedName: \"billingCurrency\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      unitOfMeasure: {\n        serializedName: \"unitOfMeasure\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      values: {\n        serializedName: \"values\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"EstimatedVMPrice\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const EstimatedVMPrice: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EstimatedVMPrice\",\n    modelProperties: {\n      retailPrice: {\n        serializedName: \"retailPrice\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      osType: {\n        serializedName: \"osType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      vmTier: {\n        serializedName: \"vmTier\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const QuotaUpdateParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"QuotaUpdateParameters\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"QuotaBaseProperties\"\n            }\n          }\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const QuotaBaseProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"QuotaBaseProperties\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      limit: {\n        serializedName: \"limit\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      unit: {\n        serializedName: \"unit\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UpdateWorkspaceQuotasResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UpdateWorkspaceQuotasResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"UpdateWorkspaceQuotas\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UpdateWorkspaceQuotas: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UpdateWorkspaceQuotas\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      limit: {\n        serializedName: \"limit\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      unit: {\n        serializedName: \"unit\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ListWorkspaceQuotas: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ListWorkspaceQuotas\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourceQuota\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceQuota: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceQuota\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      amlWorkspaceLocation: {\n        serializedName: \"amlWorkspaceLocation\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceName\"\n        }\n      },\n      limit: {\n        serializedName: \"limit\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      unit: {\n        serializedName: \"unit\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceName: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceName\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      localizedValue: {\n        serializedName: \"localizedValue\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PaginatedComputeResourcesList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PaginatedComputeResourcesList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ComputeResource\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeResourceSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ComputeResourceSchema\",\n    modelProperties: {\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"Compute\"\n        }\n      }\n    }\n  }\n};\n\nexport const Compute: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Compute\",\n    uberParent: \"Compute\",\n    polymorphicDiscriminator: {\n      serializedName: \"computeType\",\n      clientName: \"computeType\"\n    },\n    modelProperties: {\n      computeType: {\n        serializedName: \"computeType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      computeLocation: {\n        serializedName: \"computeLocation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      createdOn: {\n        serializedName: \"createdOn\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      modifiedOn: {\n        serializedName: \"modifiedOn\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      resourceId: {\n        serializedName: \"resourceId\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningErrors: {\n        serializedName: \"provisioningErrors\",\n        readOnly: true,\n        nullable: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorResponse\"\n            }\n          }\n        }\n      },\n      isAttachedCompute: {\n        serializedName: \"isAttachedCompute\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      disableLocalAuth: {\n        serializedName: \"disableLocalAuth\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const ClusterUpdateParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ClusterUpdateParameters\",\n    modelProperties: {\n      properties: {\n        serializedName: \"properties.properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ScaleSettingsInformation\"\n        }\n      }\n    }\n  }\n};\n\nexport const ScaleSettingsInformation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ScaleSettingsInformation\",\n    modelProperties: {\n      scaleSettings: {\n        serializedName: \"scaleSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"ScaleSettings\"\n        }\n      }\n    }\n  }\n};\n\nexport const ScaleSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ScaleSettings\",\n    modelProperties: {\n      maxNodeCount: {\n        serializedName: \"maxNodeCount\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      minNodeCount: {\n        defaultValue: 0,\n        serializedName: \"minNodeCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      nodeIdleTimeBeforeScaleDown: {\n        serializedName: \"nodeIdleTimeBeforeScaleDown\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      }\n    }\n  }\n};\n\nexport const AmlComputeNodesInformation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AmlComputeNodesInformation\",\n    modelProperties: {\n      nodes: {\n        serializedName: \"nodes\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"AmlComputeNodeInformation\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AmlComputeNodeInformation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AmlComputeNodeInformation\",\n    modelProperties: {\n      nodeId: {\n        serializedName: \"nodeId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      privateIpAddress: {\n        serializedName: \"privateIpAddress\",\n        readOnly: true,\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      publicIpAddress: {\n        serializedName: \"publicIpAddress\",\n        readOnly: true,\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      port: {\n        serializedName: \"port\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      nodeState: {\n        serializedName: \"nodeState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      runId: {\n        serializedName: \"runId\",\n        readOnly: true,\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NotebookAccessTokenResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NotebookAccessTokenResult\",\n    modelProperties: {\n      notebookResourceId: {\n        serializedName: \"notebookResourceId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      hostName: {\n        serializedName: \"hostName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      publicDns: {\n        serializedName: \"publicDns\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      accessToken: {\n        serializedName: \"accessToken\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tokenType: {\n        serializedName: \"tokenType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      expiresIn: {\n        serializedName: \"expiresIn\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      refreshToken: {\n        serializedName: \"refreshToken\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      scope: {\n        serializedName: \"scope\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeSecrets: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ComputeSecrets\",\n    uberParent: \"ComputeSecrets\",\n    polymorphicDiscriminator: {\n      serializedName: \"computeType\",\n      clientName: \"computeType\"\n    },\n    modelProperties: {\n      computeType: {\n        serializedName: \"computeType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateEndpointConnectionListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateEndpointConnectionListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PrivateEndpointConnection\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateLinkResourceListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateLinkResourceListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PrivateLinkResource\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ListStorageAccountKeysResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ListStorageAccountKeysResult\",\n    modelProperties: {\n      userStorageKey: {\n        serializedName: \"userStorageKey\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const WorkspaceConnectionPropertiesV2: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WorkspaceConnectionPropertiesV2\",\n    uberParent: \"WorkspaceConnectionPropertiesV2\",\n    polymorphicDiscriminator: {\n      serializedName: \"authType\",\n      clientName: \"authType\"\n    },\n    modelProperties: {\n      authType: {\n        serializedName: \"authType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      category: {\n        serializedName: \"category\",\n        type: {\n          name: \"String\"\n        }\n      },\n      target: {\n        serializedName: \"target\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      },\n      valueFormat: {\n        serializedName: \"valueFormat\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const WorkspaceConnectionPropertiesV2BasicResourceArmPaginatedResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WorkspaceConnectionPropertiesV2BasicResourceArmPaginatedResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"WorkspaceConnectionPropertiesV2BasicResource\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ExternalFqdnResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExternalFqdnResponse\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"FqdnEndpoints\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const FqdnEndpoints: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FqdnEndpoints\",\n    modelProperties: {\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"FqdnEndpointsProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const FqdnEndpointsProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FqdnEndpointsProperties\",\n    modelProperties: {\n      category: {\n        serializedName: \"category\",\n        type: {\n          name: \"String\"\n        }\n      },\n      endpoints: {\n        serializedName: \"endpoints\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"FqdnEndpoint\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const FqdnEndpoint: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FqdnEndpoint\",\n    modelProperties: {\n      domainName: {\n        serializedName: \"domainName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      endpointDetails: {\n        serializedName: \"endpointDetails\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"FqdnEndpointDetail\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const FqdnEndpointDetail: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FqdnEndpointDetail\",\n    modelProperties: {\n      port: {\n        serializedName: \"port\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const BatchEndpointTrackedResourceArmPaginatedResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BatchEndpointTrackedResourceArmPaginatedResult\",\n    modelProperties: {\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BatchEndpoint\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const BatchEndpointDefaults: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BatchEndpointDefaults\",\n    modelProperties: {\n      deploymentName: {\n        serializedName: \"deploymentName\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EndpointPropertiesBase: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EndpointPropertiesBase\",\n    modelProperties: {\n      authMode: {\n        serializedName: \"authMode\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      keys: {\n        serializedName: \"keys\",\n        type: {\n          name: \"Composite\",\n          className: \"EndpointAuthKeys\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        nullable: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      scoringUri: {\n        serializedName: \"scoringUri\",\n        readOnly: true,\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      swaggerUri: {\n        serializedName: \"swaggerUri\",\n        readOnly: true,\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EndpointAuthKeys: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EndpointAuthKeys\",\n    modelProperties: {\n      primaryKey: {\n        serializedName: \"primaryKey\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      secondaryKey: {\n        serializedName: \"secondaryKey\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PartialManagedServiceIdentity: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PartialManagedServiceIdentity\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      userAssignedIdentities: {\n        serializedName: \"userAssignedIdentities\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const PartialMinimalTrackedResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PartialMinimalTrackedResource\",\n    modelProperties: {\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const BatchDeploymentTrackedResourceArmPaginatedResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BatchDeploymentTrackedResourceArmPaginatedResult\",\n    modelProperties: {\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BatchDeployment\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const AssetReferenceBase: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AssetReferenceBase\",\n    uberParent: \"AssetReferenceBase\",\n    polymorphicDiscriminator: {\n      serializedName: \"referenceType\",\n      clientName: \"referenceType\"\n    },\n    modelProperties: {\n      referenceType: {\n        serializedName: \"referenceType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceConfiguration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceConfiguration\",\n    modelProperties: {\n      instanceCount: {\n        defaultValue: 1,\n        serializedName: \"instanceCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      instanceType: {\n        serializedName: \"instanceType\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        nullable: true,\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const BatchRetrySettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BatchRetrySettings\",\n    modelProperties: {\n      maxRetries: {\n        defaultValue: 3,\n        serializedName: \"maxRetries\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      timeout: {\n        defaultValue: \"PT30S\",\n        serializedName: \"timeout\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      }\n    }\n  }\n};\n\nexport const EndpointDeploymentPropertiesBase: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EndpointDeploymentPropertiesBase\",\n    modelProperties: {\n      codeConfiguration: {\n        serializedName: \"codeConfiguration\",\n        type: {\n          name: \"Composite\",\n          className: \"CodeConfiguration\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      environmentId: {\n        serializedName: \"environmentId\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      environmentVariables: {\n        serializedName: \"environmentVariables\",\n        nullable: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        nullable: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const CodeConfiguration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CodeConfiguration\",\n    modelProperties: {\n      codeId: {\n        serializedName: \"codeId\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      scoringScript: {\n        constraints: {\n          Pattern: new RegExp(\"[a-zA-Z0-9_]\"),\n          MinLength: 1\n        },\n        serializedName: \"scoringScript\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PartialBatchDeploymentPartialMinimalTrackedResourceWithProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"PartialBatchDeploymentPartialMinimalTrackedResourceWithProperties\",\n    modelProperties: {\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"PartialBatchDeployment\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const PartialBatchDeployment: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PartialBatchDeployment\",\n    modelProperties: {\n      description: {\n        serializedName: \"description\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CodeContainerResourceArmPaginatedResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CodeContainerResourceArmPaginatedResult\",\n    modelProperties: {\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CodeContainer\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceBase: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceBase\",\n    modelProperties: {\n      description: {\n        serializedName: \"description\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        nullable: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        nullable: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const CodeVersionResourceArmPaginatedResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CodeVersionResourceArmPaginatedResult\",\n    modelProperties: {\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CodeVersion\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ComponentContainerResourceArmPaginatedResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ComponentContainerResourceArmPaginatedResult\",\n    modelProperties: {\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ComponentContainer\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ComponentVersionResourceArmPaginatedResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ComponentVersionResourceArmPaginatedResult\",\n    modelProperties: {\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ComponentVersion\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DataContainerResourceArmPaginatedResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DataContainerResourceArmPaginatedResult\",\n    modelProperties: {\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DataContainer\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DataVersionBaseResourceArmPaginatedResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DataVersionBaseResourceArmPaginatedResult\",\n    modelProperties: {\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DataVersionBase\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DatastoreResourceArmPaginatedResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DatastoreResourceArmPaginatedResult\",\n    modelProperties: {\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Datastore\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DatastoreCredentials: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DatastoreCredentials\",\n    uberParent: \"DatastoreCredentials\",\n    polymorphicDiscriminator: {\n      serializedName: \"credentialsType\",\n      clientName: \"credentialsType\"\n    },\n    modelProperties: {\n      credentialsType: {\n        serializedName: \"credentialsType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DatastoreSecrets: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DatastoreSecrets\",\n    uberParent: \"DatastoreSecrets\",\n    polymorphicDiscriminator: {\n      serializedName: \"secretsType\",\n      clientName: \"secretsType\"\n    },\n    modelProperties: {\n      secretsType: {\n        serializedName: \"secretsType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EnvironmentContainerResourceArmPaginatedResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EnvironmentContainerResourceArmPaginatedResult\",\n    modelProperties: {\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"EnvironmentContainer\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const EnvironmentVersionResourceArmPaginatedResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EnvironmentVersionResourceArmPaginatedResult\",\n    modelProperties: {\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"EnvironmentVersion\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const BuildContext: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BuildContext\",\n    modelProperties: {\n      contextUri: {\n        constraints: {\n          Pattern: new RegExp(\"[a-zA-Z0-9_]\")\n        },\n        serializedName: \"contextUri\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      dockerfilePath: {\n        defaultValue: \"Dockerfile\",\n        serializedName: \"dockerfilePath\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const InferenceContainerProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"InferenceContainerProperties\",\n    modelProperties: {\n      livenessRoute: {\n        serializedName: \"livenessRoute\",\n        type: {\n          name: \"Composite\",\n          className: \"Route\"\n        }\n      },\n      readinessRoute: {\n        serializedName: \"readinessRoute\",\n        type: {\n          name: \"Composite\",\n          className: \"Route\"\n        }\n      },\n      scoringRoute: {\n        serializedName: \"scoringRoute\",\n        type: {\n          name: \"Composite\",\n          className: \"Route\"\n        }\n      }\n    }\n  }\n};\n\nexport const Route: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Route\",\n    modelProperties: {\n      path: {\n        constraints: {\n          Pattern: new RegExp(\"[a-zA-Z0-9_]\")\n        },\n        serializedName: \"path\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      port: {\n        serializedName: \"port\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const JobBaseResourceArmPaginatedResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"JobBaseResourceArmPaginatedResult\",\n    modelProperties: {\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"JobBase\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const IdentityConfiguration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IdentityConfiguration\",\n    uberParent: \"IdentityConfiguration\",\n    polymorphicDiscriminator: {\n      serializedName: \"identityType\",\n      clientName: \"identityType\"\n    },\n    modelProperties: {\n      identityType: {\n        serializedName: \"identityType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const JobService: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"JobService\",\n    modelProperties: {\n      endpoint: {\n        serializedName: \"endpoint\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      errorMessage: {\n        serializedName: \"errorMessage\",\n        readOnly: true,\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      jobServiceType: {\n        serializedName: \"jobServiceType\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      port: {\n        serializedName: \"port\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        nullable: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ModelContainerResourceArmPaginatedResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ModelContainerResourceArmPaginatedResult\",\n    modelProperties: {\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ModelContainer\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ModelVersionResourceArmPaginatedResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ModelVersionResourceArmPaginatedResult\",\n    modelProperties: {\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ModelVersion\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const FlavorData: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FlavorData\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        nullable: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const OnlineEndpointTrackedResourceArmPaginatedResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OnlineEndpointTrackedResourceArmPaginatedResult\",\n    modelProperties: {\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"OnlineEndpoint\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const OnlineDeploymentTrackedResourceArmPaginatedResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OnlineDeploymentTrackedResourceArmPaginatedResult\",\n    modelProperties: {\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"OnlineDeployment\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ProbeSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProbeSettings\",\n    modelProperties: {\n      failureThreshold: {\n        defaultValue: 30,\n        serializedName: \"failureThreshold\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      initialDelay: {\n        serializedName: \"initialDelay\",\n        nullable: true,\n        type: {\n          name: \"TimeSpan\"\n        }\n      },\n      period: {\n        defaultValue: \"PT10S\",\n        serializedName: \"period\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      },\n      successThreshold: {\n        defaultValue: 1,\n        serializedName: \"successThreshold\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      timeout: {\n        defaultValue: \"PT2S\",\n        serializedName: \"timeout\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      }\n    }\n  }\n};\n\nexport const OnlineRequestSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OnlineRequestSettings\",\n    modelProperties: {\n      maxConcurrentRequestsPerInstance: {\n        defaultValue: 1,\n        serializedName: \"maxConcurrentRequestsPerInstance\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      maxQueueWait: {\n        defaultValue: \"PT0.5S\",\n        serializedName: \"maxQueueWait\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      },\n      requestTimeout: {\n        defaultValue: \"PT5S\",\n        serializedName: \"requestTimeout\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      }\n    }\n  }\n};\n\nexport const OnlineScaleSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OnlineScaleSettings\",\n    uberParent: \"OnlineScaleSettings\",\n    polymorphicDiscriminator: {\n      serializedName: \"scaleType\",\n      clientName: \"scaleType\"\n    },\n    modelProperties: {\n      scaleType: {\n        serializedName: \"scaleType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PartialSku: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PartialSku\",\n    modelProperties: {\n      capacity: {\n        serializedName: \"capacity\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      family: {\n        serializedName: \"family\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      size: {\n        serializedName: \"size\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tier: {\n        serializedName: \"tier\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Free\", \"Basic\", \"Standard\", \"Premium\"]\n        }\n      }\n    }\n  }\n};\n\nexport const DeploymentLogsRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentLogsRequest\",\n    modelProperties: {\n      containerType: {\n        serializedName: \"containerType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tail: {\n        serializedName: \"tail\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeploymentLogs: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentLogs\",\n    modelProperties: {\n      content: {\n        serializedName: \"content\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SkuResourceArmPaginatedResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SkuResourceArmPaginatedResult\",\n    modelProperties: {\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SkuResource\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SkuResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SkuResource\",\n    modelProperties: {\n      capacity: {\n        serializedName: \"capacity\",\n        type: {\n          name: \"Composite\",\n          className: \"SkuCapacity\"\n        }\n      },\n      resourceType: {\n        serializedName: \"resourceType\",\n        readOnly: true,\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"SkuSetting\"\n        }\n      }\n    }\n  }\n};\n\nexport const SkuCapacity: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SkuCapacity\",\n    modelProperties: {\n      default: {\n        defaultValue: 0,\n        serializedName: \"default\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      maximum: {\n        defaultValue: 0,\n        serializedName: \"maximum\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      minimum: {\n        defaultValue: 0,\n        serializedName: \"minimum\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      scaleType: {\n        serializedName: \"scaleType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SkuSetting: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SkuSetting\",\n    modelProperties: {\n      name: {\n        constraints: {\n          Pattern: new RegExp(\"[a-zA-Z0-9_]\")\n        },\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tier: {\n        serializedName: \"tier\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Free\", \"Basic\", \"Standard\", \"Premium\"]\n        }\n      }\n    }\n  }\n};\n\nexport const RegenerateEndpointKeysRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RegenerateEndpointKeysRequest\",\n    modelProperties: {\n      keyType: {\n        serializedName: \"keyType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      keyValue: {\n        serializedName: \"keyValue\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EndpointAuthToken: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EndpointAuthToken\",\n    modelProperties: {\n      accessToken: {\n        serializedName: \"accessToken\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      expiryTimeUtc: {\n        defaultValue: 0,\n        serializedName: \"expiryTimeUtc\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      refreshAfterTimeUtc: {\n        defaultValue: 0,\n        serializedName: \"refreshAfterTimeUtc\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      tokenType: {\n        serializedName: \"tokenType\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ScheduleResourceArmPaginatedResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ScheduleResourceArmPaginatedResult\",\n    modelProperties: {\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Schedule\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ScheduleActionBase: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ScheduleActionBase\",\n    uberParent: \"ScheduleActionBase\",\n    polymorphicDiscriminator: {\n      serializedName: \"actionType\",\n      clientName: \"actionType\"\n    },\n    modelProperties: {\n      actionType: {\n        serializedName: \"actionType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TriggerBase: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TriggerBase\",\n    uberParent: \"TriggerBase\",\n    polymorphicDiscriminator: {\n      serializedName: \"triggerType\",\n      clientName: \"triggerType\"\n    },\n    modelProperties: {\n      endTime: {\n        serializedName: \"endTime\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      startTime: {\n        serializedName: \"startTime\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      timeZone: {\n        defaultValue: \"UTC\",\n        serializedName: \"timeZone\",\n        type: {\n          name: \"String\"\n        }\n      },\n      triggerType: {\n        serializedName: \"triggerType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ListAmlUserFeatureResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ListAmlUserFeatureResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"AmlUserFeature\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AmlUserFeature: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AmlUserFeature\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceId: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceId\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AKSSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AKSSchema\",\n    modelProperties: {\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"AKSSchemaProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const AKSSchemaProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AKSSchemaProperties\",\n    modelProperties: {\n      clusterFqdn: {\n        serializedName: \"clusterFqdn\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      systemServices: {\n        serializedName: \"systemServices\",\n        readOnly: true,\n        nullable: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SystemService\"\n            }\n          }\n        }\n      },\n      agentCount: {\n        constraints: {\n          InclusiveMinimum: 0\n        },\n        serializedName: \"agentCount\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      agentVmSize: {\n        serializedName: \"agentVmSize\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      clusterPurpose: {\n        defaultValue: \"FastProd\",\n        serializedName: \"clusterPurpose\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sslConfiguration: {\n        serializedName: \"sslConfiguration\",\n        type: {\n          name: \"Composite\",\n          className: \"SslConfiguration\"\n        }\n      },\n      aksNetworkingConfiguration: {\n        serializedName: \"aksNetworkingConfiguration\",\n        type: {\n          name: \"Composite\",\n          className: \"AksNetworkingConfiguration\"\n        }\n      },\n      loadBalancerType: {\n        defaultValue: \"PublicIp\",\n        serializedName: \"loadBalancerType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      loadBalancerSubnet: {\n        serializedName: \"loadBalancerSubnet\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SystemService: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SystemService\",\n    modelProperties: {\n      systemServiceType: {\n        serializedName: \"systemServiceType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      publicIpAddress: {\n        serializedName: \"publicIpAddress\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"version\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SslConfiguration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SslConfiguration\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      cert: {\n        serializedName: \"cert\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      key: {\n        serializedName: \"key\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      cname: {\n        serializedName: \"cname\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      leafDomainLabel: {\n        serializedName: \"leafDomainLabel\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      overwriteExistingDomain: {\n        serializedName: \"overwriteExistingDomain\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const AksNetworkingConfiguration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AksNetworkingConfiguration\",\n    modelProperties: {\n      subnetId: {\n        serializedName: \"subnetId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      serviceCidr: {\n        constraints: {\n          Pattern: new RegExp(\n            \"^([0-9]{1,3}\\\\.){3}[0-9]{1,3}(\\\\/([0-9]|[1-2][0-9]|3[0-2]))?$\"\n          )\n        },\n        serializedName: \"serviceCidr\",\n        type: {\n          name: \"String\"\n        }\n      },\n      dnsServiceIP: {\n        constraints: {\n          Pattern: new RegExp(\n            \"^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$\"\n          )\n        },\n        serializedName: \"dnsServiceIP\",\n        type: {\n          name: \"String\"\n        }\n      },\n      dockerBridgeCidr: {\n        constraints: {\n          Pattern: new RegExp(\n            \"^([0-9]{1,3}\\\\.){3}[0-9]{1,3}(\\\\/([0-9]|[1-2][0-9]|3[0-2]))?$\"\n          )\n        },\n        serializedName: \"dockerBridgeCidr\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const KubernetesSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KubernetesSchema\",\n    modelProperties: {\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"KubernetesProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const KubernetesProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KubernetesProperties\",\n    modelProperties: {\n      relayConnectionString: {\n        serializedName: \"relayConnectionString\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      serviceBusConnectionString: {\n        serializedName: \"serviceBusConnectionString\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      extensionPrincipalId: {\n        serializedName: \"extensionPrincipalId\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      extensionInstanceReleaseTrain: {\n        serializedName: \"extensionInstanceReleaseTrain\",\n        type: {\n          name: \"String\"\n        }\n      },\n      vcName: {\n        serializedName: \"vcName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      namespace: {\n        defaultValue: \"default\",\n        serializedName: \"namespace\",\n        type: {\n          name: \"String\"\n        }\n      },\n      defaultInstanceType: {\n        serializedName: \"defaultInstanceType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      instanceTypes: {\n        serializedName: \"instanceTypes\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Composite\", className: \"InstanceTypeSchema\" }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const InstanceTypeSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"InstanceTypeSchema\",\n    modelProperties: {\n      nodeSelector: {\n        serializedName: \"nodeSelector\",\n        nullable: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      resources: {\n        serializedName: \"resources\",\n        type: {\n          name: \"Composite\",\n          className: \"InstanceTypeSchemaResources\"\n        }\n      }\n    }\n  }\n};\n\nexport const InstanceTypeSchemaResources: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"InstanceTypeSchemaResources\",\n    modelProperties: {\n      requests: {\n        serializedName: \"requests\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      limits: {\n        serializedName: \"limits\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const AmlComputeProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AmlComputeProperties\",\n    modelProperties: {\n      osType: {\n        defaultValue: \"Linux\",\n        serializedName: \"osType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      vmSize: {\n        serializedName: \"vmSize\",\n        type: {\n          name: \"String\"\n        }\n      },\n      vmPriority: {\n        serializedName: \"vmPriority\",\n        type: {\n          name: \"String\"\n        }\n      },\n      virtualMachineImage: {\n        serializedName: \"virtualMachineImage\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineImage\"\n        }\n      },\n      isolatedNetwork: {\n        serializedName: \"isolatedNetwork\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      scaleSettings: {\n        serializedName: \"scaleSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"ScaleSettings\"\n        }\n      },\n      userAccountCredentials: {\n        serializedName: \"userAccountCredentials\",\n        type: {\n          name: \"Composite\",\n          className: \"UserAccountCredentials\"\n        }\n      },\n      subnet: {\n        serializedName: \"subnet\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceId\"\n        }\n      },\n      remoteLoginPortPublicAccess: {\n        defaultValue: \"NotSpecified\",\n        serializedName: \"remoteLoginPortPublicAccess\",\n        type: {\n          name: \"String\"\n        }\n      },\n      allocationState: {\n        serializedName: \"allocationState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      allocationStateTransitionTime: {\n        serializedName: \"allocationStateTransitionTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      errors: {\n        serializedName: \"errors\",\n        readOnly: true,\n        nullable: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorResponse\"\n            }\n          }\n        }\n      },\n      currentNodeCount: {\n        serializedName: \"currentNodeCount\",\n        readOnly: true,\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      targetNodeCount: {\n        serializedName: \"targetNodeCount\",\n        readOnly: true,\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      nodeStateCounts: {\n        serializedName: \"nodeStateCounts\",\n        type: {\n          name: \"Composite\",\n          className: \"NodeStateCounts\"\n        }\n      },\n      enableNodePublicIp: {\n        defaultValue: true,\n        serializedName: \"enableNodePublicIp\",\n        nullable: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      propertyBag: {\n        serializedName: \"propertyBag\",\n        nullable: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineImage: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineImage\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UserAccountCredentials: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UserAccountCredentials\",\n    modelProperties: {\n      adminUserName: {\n        serializedName: \"adminUserName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      adminUserSshPublicKey: {\n        serializedName: \"adminUserSshPublicKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      adminUserPassword: {\n        serializedName: \"adminUserPassword\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NodeStateCounts: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NodeStateCounts\",\n    modelProperties: {\n      idleNodeCount: {\n        serializedName: \"idleNodeCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      runningNodeCount: {\n        serializedName: \"runningNodeCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      preparingNodeCount: {\n        serializedName: \"preparingNodeCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      unusableNodeCount: {\n        serializedName: \"unusableNodeCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      leavingNodeCount: {\n        serializedName: \"leavingNodeCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      preemptedNodeCount: {\n        serializedName: \"preemptedNodeCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const AmlComputeSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AmlComputeSchema\",\n    modelProperties: {\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"AmlComputeProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeInstanceProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ComputeInstanceProperties\",\n    modelProperties: {\n      vmSize: {\n        serializedName: \"vmSize\",\n        type: {\n          name: \"String\"\n        }\n      },\n      subnet: {\n        serializedName: \"subnet\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceId\"\n        }\n      },\n      applicationSharingPolicy: {\n        defaultValue: \"Shared\",\n        serializedName: \"applicationSharingPolicy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sshSettings: {\n        serializedName: \"sshSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"ComputeInstanceSshSettings\"\n        }\n      },\n      connectivityEndpoints: {\n        serializedName: \"connectivityEndpoints\",\n        type: {\n          name: \"Composite\",\n          className: \"ComputeInstanceConnectivityEndpoints\"\n        }\n      },\n      applications: {\n        serializedName: \"applications\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ComputeInstanceApplication\"\n            }\n          }\n        }\n      },\n      createdBy: {\n        serializedName: \"createdBy\",\n        type: {\n          name: \"Composite\",\n          className: \"ComputeInstanceCreatedBy\"\n        }\n      },\n      errors: {\n        serializedName: \"errors\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorResponse\"\n            }\n          }\n        }\n      },\n      state: {\n        serializedName: \"state\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      computeInstanceAuthorizationType: {\n        defaultValue: \"personal\",\n        serializedName: \"computeInstanceAuthorizationType\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      personalComputeInstanceSettings: {\n        serializedName: \"personalComputeInstanceSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"PersonalComputeInstanceSettings\"\n        }\n      },\n      setupScripts: {\n        serializedName: \"setupScripts\",\n        type: {\n          name: \"Composite\",\n          className: \"SetupScripts\"\n        }\n      },\n      lastOperation: {\n        serializedName: \"lastOperation\",\n        type: {\n          name: \"Composite\",\n          className: \"ComputeInstanceLastOperation\"\n        }\n      },\n      schedules: {\n        serializedName: \"schedules\",\n        type: {\n          name: \"Composite\",\n          className: \"ComputeSchedules\"\n        }\n      },\n      enableNodePublicIp: {\n        serializedName: \"enableNodePublicIp\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      containers: {\n        serializedName: \"containers\",\n        readOnly: true,\n        nullable: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ComputeInstanceContainer\"\n            }\n          }\n        }\n      },\n      dataDisks: {\n        serializedName: \"dataDisks\",\n        readOnly: true,\n        nullable: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ComputeInstanceDataDisk\"\n            }\n          }\n        }\n      },\n      dataMounts: {\n        serializedName: \"dataMounts\",\n        readOnly: true,\n        nullable: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ComputeInstanceDataMount\"\n            }\n          }\n        }\n      },\n      versions: {\n        serializedName: \"versions\",\n        type: {\n          name: \"Composite\",\n          className: \"ComputeInstanceVersion\"\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeInstanceSshSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ComputeInstanceSshSettings\",\n    modelProperties: {\n      sshPublicAccess: {\n        defaultValue: \"Disabled\",\n        serializedName: \"sshPublicAccess\",\n        type: {\n          name: \"String\"\n        }\n      },\n      adminUserName: {\n        serializedName: \"adminUserName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      sshPort: {\n        serializedName: \"sshPort\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      adminPublicKey: {\n        serializedName: \"adminPublicKey\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeInstanceConnectivityEndpoints: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ComputeInstanceConnectivityEndpoints\",\n    modelProperties: {\n      publicIpAddress: {\n        serializedName: \"publicIpAddress\",\n        readOnly: true,\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      privateIpAddress: {\n        serializedName: \"privateIpAddress\",\n        readOnly: true,\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeInstanceApplication: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ComputeInstanceApplication\",\n    modelProperties: {\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      endpointUri: {\n        serializedName: \"endpointUri\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeInstanceCreatedBy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ComputeInstanceCreatedBy\",\n    modelProperties: {\n      userName: {\n        serializedName: \"userName\",\n        readOnly: true,\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      userOrgId: {\n        serializedName: \"userOrgId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      userId: {\n        serializedName: \"userId\",\n        readOnly: true,\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PersonalComputeInstanceSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PersonalComputeInstanceSettings\",\n    modelProperties: {\n      assignedUser: {\n        serializedName: \"assignedUser\",\n        type: {\n          name: \"Composite\",\n          className: \"AssignedUser\"\n        }\n      }\n    }\n  }\n};\n\nexport const AssignedUser: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AssignedUser\",\n    modelProperties: {\n      objectId: {\n        serializedName: \"objectId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantId: {\n        serializedName: \"tenantId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SetupScripts: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SetupScripts\",\n    modelProperties: {\n      scripts: {\n        serializedName: \"scripts\",\n        type: {\n          name: \"Composite\",\n          className: \"ScriptsToExecute\"\n        }\n      }\n    }\n  }\n};\n\nexport const ScriptsToExecute: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ScriptsToExecute\",\n    modelProperties: {\n      startupScript: {\n        serializedName: \"startupScript\",\n        type: {\n          name: \"Composite\",\n          className: \"ScriptReference\"\n        }\n      },\n      creationScript: {\n        serializedName: \"creationScript\",\n        type: {\n          name: \"Composite\",\n          className: \"ScriptReference\"\n        }\n      }\n    }\n  }\n};\n\nexport const ScriptReference: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ScriptReference\",\n    modelProperties: {\n      scriptSource: {\n        serializedName: \"scriptSource\",\n        type: {\n          name: \"String\"\n        }\n      },\n      scriptData: {\n        serializedName: \"scriptData\",\n        type: {\n          name: \"String\"\n        }\n      },\n      scriptArguments: {\n        serializedName: \"scriptArguments\",\n        type: {\n          name: \"String\"\n        }\n      },\n      timeout: {\n        serializedName: \"timeout\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeInstanceLastOperation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ComputeInstanceLastOperation\",\n    modelProperties: {\n      operationName: {\n        serializedName: \"operationName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operationTime: {\n        serializedName: \"operationTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      operationStatus: {\n        serializedName: \"operationStatus\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operationTrigger: {\n        serializedName: \"operationTrigger\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeSchedules: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ComputeSchedules\",\n    modelProperties: {\n      computeStartStop: {\n        serializedName: \"computeStartStop\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ComputeStartStopSchedule\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeStartStopSchedule: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ComputeStartStopSchedule\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningStatus: {\n        serializedName: \"provisioningStatus\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      action: {\n        serializedName: \"action\",\n        type: {\n          name: \"String\"\n        }\n      },\n      triggerType: {\n        serializedName: \"triggerType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      recurrence: {\n        serializedName: \"recurrence\",\n        type: {\n          name: \"Composite\",\n          className: \"RecurrenceTrigger\"\n        }\n      },\n      cron: {\n        serializedName: \"cron\",\n        type: {\n          name: \"Composite\",\n          className: \"CronTrigger\"\n        }\n      },\n      schedule: {\n        serializedName: \"schedule\",\n        type: {\n          name: \"Composite\",\n          className: \"ScheduleBase\"\n        }\n      }\n    }\n  }\n};\n\nexport const RecurrenceSchedule: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RecurrenceSchedule\",\n    modelProperties: {\n      hours: {\n        serializedName: \"hours\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Number\"\n            }\n          }\n        }\n      },\n      minutes: {\n        serializedName: \"minutes\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Number\"\n            }\n          }\n        }\n      },\n      monthDays: {\n        serializedName: \"monthDays\",\n        nullable: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Number\"\n            }\n          }\n        }\n      },\n      weekDays: {\n        serializedName: \"weekDays\",\n        nullable: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ScheduleBase: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ScheduleBase\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningStatus: {\n        serializedName: \"provisioningStatus\",\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeInstanceContainer: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ComputeInstanceContainer\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      autosave: {\n        serializedName: \"autosave\",\n        type: {\n          name: \"String\"\n        }\n      },\n      gpu: {\n        serializedName: \"gpu\",\n        type: {\n          name: \"String\"\n        }\n      },\n      network: {\n        serializedName: \"network\",\n        type: {\n          name: \"String\"\n        }\n      },\n      environment: {\n        serializedName: \"environment\",\n        type: {\n          name: \"Composite\",\n          className: \"ComputeInstanceEnvironmentInfo\"\n        }\n      },\n      services: {\n        serializedName: \"services\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Dictionary\",\n              value: { type: { name: \"any\" } }\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeInstanceEnvironmentInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ComputeInstanceEnvironmentInfo\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"version\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeInstanceDataDisk: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ComputeInstanceDataDisk\",\n    modelProperties: {\n      caching: {\n        serializedName: \"caching\",\n        type: {\n          name: \"String\"\n        }\n      },\n      diskSizeGB: {\n        serializedName: \"diskSizeGB\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      lun: {\n        serializedName: \"lun\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      storageAccountType: {\n        defaultValue: \"Standard_LRS\",\n        serializedName: \"storageAccountType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeInstanceDataMount: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ComputeInstanceDataMount\",\n    modelProperties: {\n      source: {\n        serializedName: \"source\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sourceType: {\n        serializedName: \"sourceType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      mountName: {\n        serializedName: \"mountName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      mountAction: {\n        serializedName: \"mountAction\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdBy: {\n        serializedName: \"createdBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      mountPath: {\n        serializedName: \"mountPath\",\n        type: {\n          name: \"String\"\n        }\n      },\n      mountState: {\n        serializedName: \"mountState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      mountedOn: {\n        serializedName: \"mountedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeInstanceVersion: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ComputeInstanceVersion\",\n    modelProperties: {\n      runtime: {\n        serializedName: \"runtime\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeInstanceSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ComputeInstanceSchema\",\n    modelProperties: {\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ComputeInstanceProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineSchema\",\n    modelProperties: {\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineSchemaProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineSchemaProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineSchemaProperties\",\n    modelProperties: {\n      virtualMachineSize: {\n        serializedName: \"virtualMachineSize\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sshPort: {\n        serializedName: \"sshPort\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      notebookServerPort: {\n        serializedName: \"notebookServerPort\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      address: {\n        serializedName: \"address\",\n        type: {\n          name: \"String\"\n        }\n      },\n      administratorAccount: {\n        serializedName: \"administratorAccount\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineSshCredentials\"\n        }\n      },\n      isNotebookInstanceCompute: {\n        serializedName: \"isNotebookInstanceCompute\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineSshCredentials: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineSshCredentials\",\n    modelProperties: {\n      username: {\n        serializedName: \"username\",\n        type: {\n          name: \"String\"\n        }\n      },\n      password: {\n        serializedName: \"password\",\n        type: {\n          name: \"String\"\n        }\n      },\n      publicKeyData: {\n        serializedName: \"publicKeyData\",\n        type: {\n          name: \"String\"\n        }\n      },\n      privateKeyData: {\n        serializedName: \"privateKeyData\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const HDInsightProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"HDInsightProperties\",\n    modelProperties: {\n      sshPort: {\n        serializedName: \"sshPort\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      address: {\n        serializedName: \"address\",\n        type: {\n          name: \"String\"\n        }\n      },\n      administratorAccount: {\n        serializedName: \"administratorAccount\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineSshCredentials\"\n        }\n      }\n    }\n  }\n};\n\nexport const HDInsightSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"HDInsightSchema\",\n    modelProperties: {\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"HDInsightProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const DatabricksProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DatabricksProperties\",\n    modelProperties: {\n      databricksAccessToken: {\n        serializedName: \"databricksAccessToken\",\n        type: {\n          name: \"String\"\n        }\n      },\n      workspaceUrl: {\n        serializedName: \"workspaceUrl\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DatabricksSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DatabricksSchema\",\n    modelProperties: {\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DatabricksProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const DataLakeAnalyticsSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DataLakeAnalyticsSchema\",\n    modelProperties: {\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DataLakeAnalyticsSchemaProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const DataLakeAnalyticsSchemaProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DataLakeAnalyticsSchemaProperties\",\n    modelProperties: {\n      dataLakeStoreAccountName: {\n        serializedName: \"dataLakeStoreAccountName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SynapseSparkProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SynapseSparkProperties\",\n    modelProperties: {\n      autoScaleProperties: {\n        serializedName: \"autoScaleProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"AutoScaleProperties\"\n        }\n      },\n      autoPauseProperties: {\n        serializedName: \"autoPauseProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"AutoPauseProperties\"\n        }\n      },\n      sparkVersion: {\n        serializedName: \"sparkVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      nodeCount: {\n        serializedName: \"nodeCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      nodeSize: {\n        serializedName: \"nodeSize\",\n        type: {\n          name: \"String\"\n        }\n      },\n      nodeSizeFamily: {\n        serializedName: \"nodeSizeFamily\",\n        type: {\n          name: \"String\"\n        }\n      },\n      subscriptionId: {\n        serializedName: \"subscriptionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceGroup: {\n        serializedName: \"resourceGroup\",\n        type: {\n          name: \"String\"\n        }\n      },\n      workspaceName: {\n        serializedName: \"workspaceName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      poolName: {\n        serializedName: \"poolName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AutoScaleProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AutoScaleProperties\",\n    modelProperties: {\n      minNodeCount: {\n        serializedName: \"minNodeCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      enabled: {\n        serializedName: \"enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      maxNodeCount: {\n        serializedName: \"maxNodeCount\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const AutoPauseProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AutoPauseProperties\",\n    modelProperties: {\n      delayInMinutes: {\n        serializedName: \"delayInMinutes\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      enabled: {\n        serializedName: \"enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const AksComputeSecretsProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AksComputeSecretsProperties\",\n    modelProperties: {\n      userKubeConfig: {\n        serializedName: \"userKubeConfig\",\n        type: {\n          name: \"String\"\n        }\n      },\n      adminKubeConfig: {\n        serializedName: \"adminKubeConfig\",\n        type: {\n          name: \"String\"\n        }\n      },\n      imagePullSecretName: {\n        serializedName: \"imagePullSecretName\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineSecretsSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineSecretsSchema\",\n    modelProperties: {\n      administratorAccount: {\n        serializedName: \"administratorAccount\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineSshCredentials\"\n        }\n      }\n    }\n  }\n};\n\nexport const DatabricksComputeSecretsProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DatabricksComputeSecretsProperties\",\n    modelProperties: {\n      databricksAccessToken: {\n        serializedName: \"databricksAccessToken\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const WorkspaceConnectionUsernamePassword: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WorkspaceConnectionUsernamePassword\",\n    modelProperties: {\n      username: {\n        serializedName: \"username\",\n        type: {\n          name: \"String\"\n        }\n      },\n      password: {\n        serializedName: \"password\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const WorkspaceConnectionPersonalAccessToken: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WorkspaceConnectionPersonalAccessToken\",\n    modelProperties: {\n      pat: {\n        serializedName: \"pat\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const WorkspaceConnectionSharedAccessSignature: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WorkspaceConnectionSharedAccessSignature\",\n    modelProperties: {\n      sas: {\n        serializedName: \"sas\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const WorkspaceConnectionManagedIdentity: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WorkspaceConnectionManagedIdentity\",\n    modelProperties: {\n      resourceId: {\n        serializedName: \"resourceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientId: {\n        serializedName: \"clientId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AssetJobInput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AssetJobInput\",\n    modelProperties: {\n      mode: {\n        serializedName: \"mode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      uri: {\n        constraints: {\n          Pattern: new RegExp(\"[a-zA-Z0-9_]\")\n        },\n        serializedName: \"uri\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AssetJobOutput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AssetJobOutput\",\n    modelProperties: {\n      mode: {\n        serializedName: \"mode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      uri: {\n        serializedName: \"uri\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ForecastHorizon: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ForecastHorizon\",\n    uberParent: \"ForecastHorizon\",\n    polymorphicDiscriminator: {\n      serializedName: \"mode\",\n      clientName: \"mode\"\n    },\n    modelProperties: {\n      mode: {\n        serializedName: \"mode\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const JobOutput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"JobOutput\",\n    uberParent: \"JobOutput\",\n    polymorphicDiscriminator: {\n      serializedName: \"jobOutputType\",\n      clientName: \"jobOutputType\"\n    },\n    modelProperties: {\n      description: {\n        serializedName: \"description\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      jobOutputType: {\n        serializedName: \"jobOutputType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AutoMLVertical: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AutoMLVertical\",\n    uberParent: \"AutoMLVertical\",\n    polymorphicDiscriminator: {\n      serializedName: \"taskType\",\n      clientName: \"taskType\"\n    },\n    modelProperties: {\n      logVerbosity: {\n        serializedName: \"logVerbosity\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetColumnName: {\n        serializedName: \"targetColumnName\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      taskType: {\n        serializedName: \"taskType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      trainingData: {\n        serializedName: \"trainingData\",\n        type: {\n          name: \"Composite\",\n          className: \"MLTableJobInput\"\n        }\n      }\n    }\n  }\n};\n\nexport const JobInput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"JobInput\",\n    uberParent: \"JobInput\",\n    polymorphicDiscriminator: {\n      serializedName: \"jobInputType\",\n      clientName: \"jobInputType\"\n    },\n    modelProperties: {\n      description: {\n        serializedName: \"description\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      jobInputType: {\n        serializedName: \"jobInputType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NCrossValidations: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NCrossValidations\",\n    uberParent: \"NCrossValidations\",\n    polymorphicDiscriminator: {\n      serializedName: \"mode\",\n      clientName: \"mode\"\n    },\n    modelProperties: {\n      mode: {\n        serializedName: \"mode\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Seasonality: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Seasonality\",\n    uberParent: \"Seasonality\",\n    polymorphicDiscriminator: {\n      serializedName: \"mode\",\n      clientName: \"mode\"\n    },\n    modelProperties: {\n      mode: {\n        serializedName: \"mode\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TargetLags: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TargetLags\",\n    uberParent: \"TargetLags\",\n    polymorphicDiscriminator: {\n      serializedName: \"mode\",\n      clientName: \"mode\"\n    },\n    modelProperties: {\n      mode: {\n        serializedName: \"mode\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TargetRollingWindowSize: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TargetRollingWindowSize\",\n    uberParent: \"TargetRollingWindowSize\",\n    polymorphicDiscriminator: {\n      serializedName: \"mode\",\n      clientName: \"mode\"\n    },\n    modelProperties: {\n      mode: {\n        serializedName: \"mode\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EarlyTerminationPolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EarlyTerminationPolicy\",\n    uberParent: \"EarlyTerminationPolicy\",\n    polymorphicDiscriminator: {\n      serializedName: \"policyType\",\n      clientName: \"policyType\"\n    },\n    modelProperties: {\n      delayEvaluation: {\n        defaultValue: 0,\n        serializedName: \"delayEvaluation\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      evaluationInterval: {\n        defaultValue: 0,\n        serializedName: \"evaluationInterval\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      policyType: {\n        serializedName: \"policyType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SamplingAlgorithm: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SamplingAlgorithm\",\n    uberParent: \"SamplingAlgorithm\",\n    polymorphicDiscriminator: {\n      serializedName: \"samplingAlgorithmType\",\n      clientName: \"samplingAlgorithmType\"\n    },\n    modelProperties: {\n      samplingAlgorithmType: {\n        serializedName: \"samplingAlgorithmType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TrainingSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TrainingSettings\",\n    modelProperties: {\n      enableDnnTraining: {\n        defaultValue: false,\n        serializedName: \"enableDnnTraining\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      enableModelExplainability: {\n        defaultValue: true,\n        serializedName: \"enableModelExplainability\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      enableOnnxCompatibleModels: {\n        defaultValue: false,\n        serializedName: \"enableOnnxCompatibleModels\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      enableStackEnsemble: {\n        defaultValue: true,\n        serializedName: \"enableStackEnsemble\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      enableVoteEnsemble: {\n        defaultValue: true,\n        serializedName: \"enableVoteEnsemble\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      ensembleModelDownloadTimeout: {\n        defaultValue: \"PT5M\",\n        serializedName: \"ensembleModelDownloadTimeout\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      },\n      stackEnsembleSettings: {\n        serializedName: \"stackEnsembleSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"StackEnsembleSettings\"\n        }\n      }\n    }\n  }\n};\n\nexport const StackEnsembleSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StackEnsembleSettings\",\n    modelProperties: {\n      stackMetaLearnerKWargs: {\n        serializedName: \"stackMetaLearnerKWargs\",\n        nullable: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      stackMetaLearnerTrainPercentage: {\n        defaultValue: 0.2,\n        serializedName: \"stackMetaLearnerTrainPercentage\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      stackMetaLearnerType: {\n        serializedName: \"stackMetaLearnerType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TableVertical: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TableVertical\",\n    modelProperties: {\n      cvSplitColumnNames: {\n        serializedName: \"cvSplitColumnNames\",\n        nullable: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      featurizationSettings: {\n        serializedName: \"featurizationSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"TableVerticalFeaturizationSettings\"\n        }\n      },\n      limitSettings: {\n        serializedName: \"limitSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"TableVerticalLimitSettings\"\n        }\n      },\n      nCrossValidations: {\n        serializedName: \"nCrossValidations\",\n        type: {\n          name: \"Composite\",\n          className: \"NCrossValidations\"\n        }\n      },\n      testData: {\n        serializedName: \"testData\",\n        type: {\n          name: \"Composite\",\n          className: \"MLTableJobInput\"\n        }\n      },\n      testDataSize: {\n        serializedName: \"testDataSize\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      validationData: {\n        serializedName: \"validationData\",\n        type: {\n          name: \"Composite\",\n          className: \"MLTableJobInput\"\n        }\n      },\n      validationDataSize: {\n        serializedName: \"validationDataSize\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      weightColumnName: {\n        serializedName: \"weightColumnName\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ColumnTransformer: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ColumnTransformer\",\n    modelProperties: {\n      fields: {\n        serializedName: \"fields\",\n        nullable: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      parameters: {\n        serializedName: \"parameters\",\n        nullable: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const FeaturizationSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FeaturizationSettings\",\n    modelProperties: {\n      datasetLanguage: {\n        serializedName: \"datasetLanguage\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TableVerticalLimitSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TableVerticalLimitSettings\",\n    modelProperties: {\n      enableEarlyTermination: {\n        defaultValue: true,\n        serializedName: \"enableEarlyTermination\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      exitScore: {\n        serializedName: \"exitScore\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      maxConcurrentTrials: {\n        defaultValue: 1,\n        serializedName: \"maxConcurrentTrials\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      maxCoresPerTrial: {\n        defaultValue: -1,\n        serializedName: \"maxCoresPerTrial\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      maxTrials: {\n        defaultValue: 1000,\n        serializedName: \"maxTrials\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      timeout: {\n        defaultValue: \"PT6H\",\n        serializedName: \"timeout\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      },\n      trialTimeout: {\n        defaultValue: \"PT30M\",\n        serializedName: \"trialTimeout\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      }\n    }\n  }\n};\n\nexport const DistributionConfiguration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DistributionConfiguration\",\n    uberParent: \"DistributionConfiguration\",\n    polymorphicDiscriminator: {\n      serializedName: \"distributionType\",\n      clientName: \"distributionType\"\n    },\n    modelProperties: {\n      distributionType: {\n        serializedName: \"distributionType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const JobLimits: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"JobLimits\",\n    uberParent: \"JobLimits\",\n    polymorphicDiscriminator: {\n      serializedName: \"jobLimitsType\",\n      clientName: \"jobLimitsType\"\n    },\n    modelProperties: {\n      jobLimitsType: {\n        serializedName: \"jobLimitsType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      timeout: {\n        serializedName: \"timeout\",\n        nullable: true,\n        type: {\n          name: \"TimeSpan\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerResourceRequirements: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContainerResourceRequirements\",\n    modelProperties: {\n      containerResourceLimits: {\n        serializedName: \"containerResourceLimits\",\n        type: {\n          name: \"Composite\",\n          className: \"ContainerResourceSettings\"\n        }\n      },\n      containerResourceRequests: {\n        serializedName: \"containerResourceRequests\",\n        type: {\n          name: \"Composite\",\n          className: \"ContainerResourceSettings\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerResourceSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContainerResourceSettings\",\n    modelProperties: {\n      cpu: {\n        serializedName: \"cpu\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      gpu: {\n        serializedName: \"gpu\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      memory: {\n        serializedName: \"memory\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ForecastingSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ForecastingSettings\",\n    modelProperties: {\n      countryOrRegionForHolidays: {\n        serializedName: \"countryOrRegionForHolidays\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      cvStepSize: {\n        serializedName: \"cvStepSize\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      featureLags: {\n        serializedName: \"featureLags\",\n        type: {\n          name: \"String\"\n        }\n      },\n      forecastHorizon: {\n        serializedName: \"forecastHorizon\",\n        type: {\n          name: \"Composite\",\n          className: \"ForecastHorizon\"\n        }\n      },\n      frequency: {\n        serializedName: \"frequency\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      seasonality: {\n        serializedName: \"seasonality\",\n        type: {\n          name: \"Composite\",\n          className: \"Seasonality\"\n        }\n      },\n      shortSeriesHandlingConfig: {\n        serializedName: \"shortSeriesHandlingConfig\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetAggregateFunction: {\n        serializedName: \"targetAggregateFunction\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetLags: {\n        serializedName: \"targetLags\",\n        type: {\n          name: \"Composite\",\n          className: \"TargetLags\"\n        }\n      },\n      targetRollingWindowSize: {\n        serializedName: \"targetRollingWindowSize\",\n        type: {\n          name: \"Composite\",\n          className: \"TargetRollingWindowSize\"\n        }\n      },\n      timeColumnName: {\n        serializedName: \"timeColumnName\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      timeSeriesIdColumnNames: {\n        serializedName: \"timeSeriesIdColumnNames\",\n        nullable: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      useStl: {\n        serializedName: \"useStl\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ImageModelSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ImageModelSettings\",\n    modelProperties: {\n      advancedSettings: {\n        serializedName: \"advancedSettings\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      amsGradient: {\n        serializedName: \"amsGradient\",\n        nullable: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      augmentations: {\n        serializedName: \"augmentations\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      beta1: {\n        serializedName: \"beta1\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      beta2: {\n        serializedName: \"beta2\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      checkpointFrequency: {\n        serializedName: \"checkpointFrequency\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      checkpointModel: {\n        serializedName: \"checkpointModel\",\n        type: {\n          name: \"Composite\",\n          className: \"MLFlowModelJobInput\"\n        }\n      },\n      checkpointRunId: {\n        serializedName: \"checkpointRunId\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      distributed: {\n        serializedName: \"distributed\",\n        nullable: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      earlyStopping: {\n        serializedName: \"earlyStopping\",\n        nullable: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      earlyStoppingDelay: {\n        serializedName: \"earlyStoppingDelay\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      earlyStoppingPatience: {\n        serializedName: \"earlyStoppingPatience\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      enableOnnxNormalization: {\n        serializedName: \"enableOnnxNormalization\",\n        nullable: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      evaluationFrequency: {\n        serializedName: \"evaluationFrequency\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      gradientAccumulationStep: {\n        serializedName: \"gradientAccumulationStep\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      layersToFreeze: {\n        serializedName: \"layersToFreeze\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      learningRate: {\n        serializedName: \"learningRate\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      learningRateScheduler: {\n        serializedName: \"learningRateScheduler\",\n        type: {\n          name: \"String\"\n        }\n      },\n      modelName: {\n        serializedName: \"modelName\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      momentum: {\n        serializedName: \"momentum\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      nesterov: {\n        serializedName: \"nesterov\",\n        nullable: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      numberOfEpochs: {\n        serializedName: \"numberOfEpochs\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      numberOfWorkers: {\n        serializedName: \"numberOfWorkers\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      optimizer: {\n        serializedName: \"optimizer\",\n        type: {\n          name: \"String\"\n        }\n      },\n      randomSeed: {\n        serializedName: \"randomSeed\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      stepLRGamma: {\n        serializedName: \"stepLRGamma\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      stepLRStepSize: {\n        serializedName: \"stepLRStepSize\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      trainingBatchSize: {\n        serializedName: \"trainingBatchSize\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      validationBatchSize: {\n        serializedName: \"validationBatchSize\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      warmupCosineLRCycles: {\n        serializedName: \"warmupCosineLRCycles\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      warmupCosineLRWarmupEpochs: {\n        serializedName: \"warmupCosineLRWarmupEpochs\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      weightDecay: {\n        serializedName: \"weightDecay\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ImageModelDistributionSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ImageModelDistributionSettings\",\n    modelProperties: {\n      amsGradient: {\n        serializedName: \"amsGradient\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      augmentations: {\n        serializedName: \"augmentations\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      beta1: {\n        serializedName: \"beta1\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      beta2: {\n        serializedName: \"beta2\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      distributed: {\n        serializedName: \"distributed\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      earlyStopping: {\n        serializedName: \"earlyStopping\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      earlyStoppingDelay: {\n        serializedName: \"earlyStoppingDelay\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      earlyStoppingPatience: {\n        serializedName: \"earlyStoppingPatience\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      enableOnnxNormalization: {\n        serializedName: \"enableOnnxNormalization\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      evaluationFrequency: {\n        serializedName: \"evaluationFrequency\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      gradientAccumulationStep: {\n        serializedName: \"gradientAccumulationStep\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      layersToFreeze: {\n        serializedName: \"layersToFreeze\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      learningRate: {\n        serializedName: \"learningRate\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      learningRateScheduler: {\n        serializedName: \"learningRateScheduler\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      modelName: {\n        serializedName: \"modelName\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      momentum: {\n        serializedName: \"momentum\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nesterov: {\n        serializedName: \"nesterov\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      numberOfEpochs: {\n        serializedName: \"numberOfEpochs\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      numberOfWorkers: {\n        serializedName: \"numberOfWorkers\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      optimizer: {\n        serializedName: \"optimizer\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      randomSeed: {\n        serializedName: \"randomSeed\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      stepLRGamma: {\n        serializedName: \"stepLRGamma\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      stepLRStepSize: {\n        serializedName: \"stepLRStepSize\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      trainingBatchSize: {\n        serializedName: \"trainingBatchSize\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      validationBatchSize: {\n        serializedName: \"validationBatchSize\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      warmupCosineLRCycles: {\n        serializedName: \"warmupCosineLRCycles\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      warmupCosineLRWarmupEpochs: {\n        serializedName: \"warmupCosineLRWarmupEpochs\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      weightDecay: {\n        serializedName: \"weightDecay\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ImageVertical: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ImageVertical\",\n    modelProperties: {\n      limitSettings: {\n        serializedName: \"limitSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"ImageLimitSettings\"\n        }\n      },\n      sweepSettings: {\n        serializedName: \"sweepSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"ImageSweepSettings\"\n        }\n      },\n      validationData: {\n        serializedName: \"validationData\",\n        type: {\n          name: \"Composite\",\n          className: \"MLTableJobInput\"\n        }\n      },\n      validationDataSize: {\n        serializedName: \"validationDataSize\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ImageLimitSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ImageLimitSettings\",\n    modelProperties: {\n      maxConcurrentTrials: {\n        defaultValue: 1,\n        serializedName: \"maxConcurrentTrials\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      maxTrials: {\n        defaultValue: 1,\n        serializedName: \"maxTrials\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      timeout: {\n        defaultValue: \"P7D\",\n        serializedName: \"timeout\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      }\n    }\n  }\n};\n\nexport const ImageSweepSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ImageSweepSettings\",\n    modelProperties: {\n      earlyTermination: {\n        serializedName: \"earlyTermination\",\n        type: {\n          name: \"Composite\",\n          className: \"EarlyTerminationPolicy\"\n        }\n      },\n      samplingAlgorithm: {\n        serializedName: \"samplingAlgorithm\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NlpVertical: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NlpVertical\",\n    modelProperties: {\n      featurizationSettings: {\n        serializedName: \"featurizationSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"NlpVerticalFeaturizationSettings\"\n        }\n      },\n      limitSettings: {\n        serializedName: \"limitSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"NlpVerticalLimitSettings\"\n        }\n      },\n      validationData: {\n        serializedName: \"validationData\",\n        type: {\n          name: \"Composite\",\n          className: \"MLTableJobInput\"\n        }\n      }\n    }\n  }\n};\n\nexport const NlpVerticalLimitSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NlpVerticalLimitSettings\",\n    modelProperties: {\n      maxConcurrentTrials: {\n        defaultValue: 1,\n        serializedName: \"maxConcurrentTrials\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      maxTrials: {\n        defaultValue: 1,\n        serializedName: \"maxTrials\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      timeout: {\n        serializedName: \"timeout\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      }\n    }\n  }\n};\n\nexport const Objective: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Objective\",\n    modelProperties: {\n      goal: {\n        serializedName: \"goal\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      primaryMetric: {\n        constraints: {\n          Pattern: new RegExp(\"[a-zA-Z0-9_]\")\n        },\n        serializedName: \"primaryMetric\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TrialComponent: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TrialComponent\",\n    modelProperties: {\n      codeId: {\n        serializedName: \"codeId\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      command: {\n        constraints: {\n          Pattern: new RegExp(\"[a-zA-Z0-9_]\"),\n          MinLength: 1\n        },\n        serializedName: \"command\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      distribution: {\n        serializedName: \"distribution\",\n        type: {\n          name: \"Composite\",\n          className: \"DistributionConfiguration\"\n        }\n      },\n      environmentId: {\n        constraints: {\n          Pattern: new RegExp(\"[a-zA-Z0-9_]\")\n        },\n        serializedName: \"environmentId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      environmentVariables: {\n        serializedName: \"environmentVariables\",\n        nullable: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      resources: {\n        serializedName: \"resources\",\n        type: {\n          name: \"Composite\",\n          className: \"JobResourceConfiguration\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateEndpointConnection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateEndpointConnection\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagedServiceIdentity\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      privateEndpoint: {\n        serializedName: \"properties.privateEndpoint\",\n        type: {\n          name: \"Composite\",\n          className: \"PrivateEndpoint\"\n        }\n      },\n      privateLinkServiceConnectionState: {\n        serializedName: \"properties.privateLinkServiceConnectionState\",\n        type: {\n          name: \"Composite\",\n          className: \"PrivateLinkServiceConnectionState\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Workspace: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Workspace\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagedServiceIdentity\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      workspaceId: {\n        serializedName: \"properties.workspaceId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"properties.description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      friendlyName: {\n        serializedName: \"properties.friendlyName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      keyVault: {\n        serializedName: \"properties.keyVault\",\n        type: {\n          name: \"String\"\n        }\n      },\n      applicationInsights: {\n        serializedName: \"properties.applicationInsights\",\n        type: {\n          name: \"String\"\n        }\n      },\n      containerRegistry: {\n        serializedName: \"properties.containerRegistry\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      storageAccount: {\n        serializedName: \"properties.storageAccount\",\n        type: {\n          name: \"String\"\n        }\n      },\n      discoveryUrl: {\n        serializedName: \"properties.discoveryUrl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      encryption: {\n        serializedName: \"properties.encryption\",\n        type: {\n          name: \"Composite\",\n          className: \"EncryptionProperty\"\n        }\n      },\n      hbiWorkspace: {\n        defaultValue: false,\n        serializedName: \"properties.hbiWorkspace\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      serviceProvisionedResourceGroup: {\n        serializedName: \"properties.serviceProvisionedResourceGroup\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      privateLinkCount: {\n        serializedName: \"properties.privateLinkCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      imageBuildCompute: {\n        serializedName: \"properties.imageBuildCompute\",\n        type: {\n          name: \"String\"\n        }\n      },\n      allowPublicAccessWhenBehindVnet: {\n        defaultValue: false,\n        serializedName: \"properties.allowPublicAccessWhenBehindVnet\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      publicNetworkAccess: {\n        serializedName: \"properties.publicNetworkAccess\",\n        type: {\n          name: \"String\"\n        }\n      },\n      privateEndpointConnections: {\n        serializedName: \"properties.privateEndpointConnections\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PrivateEndpointConnection\"\n            }\n          }\n        }\n      },\n      sharedPrivateLinkResources: {\n        serializedName: \"properties.sharedPrivateLinkResources\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SharedPrivateLinkResource\"\n            }\n          }\n        }\n      },\n      notebookInfo: {\n        serializedName: \"properties.notebookInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"NotebookResourceInfo\"\n        }\n      },\n      serviceManagedResourcesSettings: {\n        serializedName: \"properties.serviceManagedResourcesSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"ServiceManagedResourcesSettings\"\n        }\n      },\n      primaryUserAssignedIdentity: {\n        serializedName: \"properties.primaryUserAssignedIdentity\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantId: {\n        serializedName: \"properties.tenantId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      storageHnsEnabled: {\n        serializedName: \"properties.storageHnsEnabled\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      mlFlowTrackingUri: {\n        serializedName: \"properties.mlFlowTrackingUri\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      v1LegacyMode: {\n        defaultValue: false,\n        serializedName: \"properties.v1LegacyMode\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ComputeResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      ...ComputeResourceSchema.type.modelProperties,\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagedServiceIdentity\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        nullable: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateLinkResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateLinkResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagedServiceIdentity\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      groupId: {\n        serializedName: \"properties.groupId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      requiredMembers: {\n        serializedName: \"properties.requiredMembers\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      requiredZoneNames: {\n        serializedName: \"properties.requiredZoneNames\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const WorkspaceConnectionPropertiesV2BasicResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WorkspaceConnectionPropertiesV2BasicResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"WorkspaceConnectionPropertiesV2\"\n        }\n      }\n    }\n  }\n};\n\nexport const TrackedResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TrackedResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CodeContainer: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CodeContainer\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"CodeContainerProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const CodeVersion: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CodeVersion\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"CodeVersionProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const ComponentContainer: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ComponentContainer\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ComponentContainerProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const ComponentVersion: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ComponentVersion\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ComponentVersionProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const DataContainer: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DataContainer\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DataContainerProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const DataVersionBase: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DataVersionBase\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DataVersionBaseProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const Datastore: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Datastore\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DatastoreProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const EnvironmentContainer: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EnvironmentContainer\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"EnvironmentContainerProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const EnvironmentVersion: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EnvironmentVersion\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"EnvironmentVersionProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const JobBase: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"JobBase\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"JobBaseProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const ModelContainer: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ModelContainer\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ModelContainerProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const ModelVersion: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ModelVersion\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ModelVersionProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const Schedule: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Schedule\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ScheduleProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const Aks: coreClient.CompositeMapper = {\n  serializedName: \"AKS\",\n  type: {\n    name: \"Composite\",\n    className: \"Aks\",\n    uberParent: \"Compute\",\n    polymorphicDiscriminator: Compute.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...Compute.type.modelProperties,\n      ...AKSSchema.type.modelProperties\n    }\n  }\n};\n\nexport const Kubernetes: coreClient.CompositeMapper = {\n  serializedName: \"Kubernetes\",\n  type: {\n    name: \"Composite\",\n    className: \"Kubernetes\",\n    uberParent: \"Compute\",\n    polymorphicDiscriminator: Compute.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...Compute.type.modelProperties,\n      ...KubernetesSchema.type.modelProperties\n    }\n  }\n};\n\nexport const AmlCompute: coreClient.CompositeMapper = {\n  serializedName: \"AmlCompute\",\n  type: {\n    name: \"Composite\",\n    className: \"AmlCompute\",\n    uberParent: \"Compute\",\n    polymorphicDiscriminator: Compute.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...Compute.type.modelProperties,\n      ...AmlComputeSchema.type.modelProperties\n    }\n  }\n};\n\nexport const ComputeInstance: coreClient.CompositeMapper = {\n  serializedName: \"ComputeInstance\",\n  type: {\n    name: \"Composite\",\n    className: \"ComputeInstance\",\n    uberParent: \"Compute\",\n    polymorphicDiscriminator: Compute.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...Compute.type.modelProperties,\n      ...ComputeInstanceSchema.type.modelProperties\n    }\n  }\n};\n\nexport const VirtualMachine: coreClient.CompositeMapper = {\n  serializedName: \"VirtualMachine\",\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachine\",\n    uberParent: \"Compute\",\n    polymorphicDiscriminator: Compute.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...Compute.type.modelProperties,\n      ...VirtualMachineSchema.type.modelProperties\n    }\n  }\n};\n\nexport const HDInsight: coreClient.CompositeMapper = {\n  serializedName: \"HDInsight\",\n  type: {\n    name: \"Composite\",\n    className: \"HDInsight\",\n    uberParent: \"Compute\",\n    polymorphicDiscriminator: Compute.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...Compute.type.modelProperties,\n      ...HDInsightSchema.type.modelProperties\n    }\n  }\n};\n\nexport const DataFactory: coreClient.CompositeMapper = {\n  serializedName: \"DataFactory\",\n  type: {\n    name: \"Composite\",\n    className: \"DataFactory\",\n    uberParent: \"Compute\",\n    polymorphicDiscriminator: Compute.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...Compute.type.modelProperties\n    }\n  }\n};\n\nexport const Databricks: coreClient.CompositeMapper = {\n  serializedName: \"Databricks\",\n  type: {\n    name: \"Composite\",\n    className: \"Databricks\",\n    uberParent: \"Compute\",\n    polymorphicDiscriminator: Compute.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...Compute.type.modelProperties,\n      ...DatabricksSchema.type.modelProperties\n    }\n  }\n};\n\nexport const DataLakeAnalytics: coreClient.CompositeMapper = {\n  serializedName: \"DataLakeAnalytics\",\n  type: {\n    name: \"Composite\",\n    className: \"DataLakeAnalytics\",\n    uberParent: \"Compute\",\n    polymorphicDiscriminator: Compute.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...Compute.type.modelProperties,\n      ...DataLakeAnalyticsSchema.type.modelProperties\n    }\n  }\n};\n\nexport const SynapseSpark: coreClient.CompositeMapper = {\n  serializedName: \"SynapseSpark\",\n  type: {\n    name: \"Composite\",\n    className: \"SynapseSpark\",\n    uberParent: \"Compute\",\n    polymorphicDiscriminator: Compute.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...Compute.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"SynapseSparkProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const AksComputeSecrets: coreClient.CompositeMapper = {\n  serializedName: \"AKS\",\n  type: {\n    name: \"Composite\",\n    className: \"AksComputeSecrets\",\n    uberParent: \"ComputeSecrets\",\n    polymorphicDiscriminator: ComputeSecrets.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...ComputeSecrets.type.modelProperties,\n      ...AksComputeSecretsProperties.type.modelProperties\n    }\n  }\n};\n\nexport const VirtualMachineSecrets: coreClient.CompositeMapper = {\n  serializedName: \"VirtualMachine\",\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineSecrets\",\n    uberParent: \"ComputeSecrets\",\n    polymorphicDiscriminator: ComputeSecrets.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...ComputeSecrets.type.modelProperties,\n      ...VirtualMachineSecretsSchema.type.modelProperties\n    }\n  }\n};\n\nexport const DatabricksComputeSecrets: coreClient.CompositeMapper = {\n  serializedName: \"Databricks\",\n  type: {\n    name: \"Composite\",\n    className: \"DatabricksComputeSecrets\",\n    uberParent: \"ComputeSecrets\",\n    polymorphicDiscriminator: ComputeSecrets.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...ComputeSecrets.type.modelProperties,\n      ...DatabricksComputeSecretsProperties.type.modelProperties\n    }\n  }\n};\n\nexport const PATAuthTypeWorkspaceConnectionProperties: coreClient.CompositeMapper = {\n  serializedName: \"PAT\",\n  type: {\n    name: \"Composite\",\n    className: \"PATAuthTypeWorkspaceConnectionProperties\",\n    uberParent: \"WorkspaceConnectionPropertiesV2\",\n    polymorphicDiscriminator:\n      WorkspaceConnectionPropertiesV2.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...WorkspaceConnectionPropertiesV2.type.modelProperties,\n      credentials: {\n        serializedName: \"credentials\",\n        type: {\n          name: \"Composite\",\n          className: \"WorkspaceConnectionPersonalAccessToken\"\n        }\n      }\n    }\n  }\n};\n\nexport const SASAuthTypeWorkspaceConnectionProperties: coreClient.CompositeMapper = {\n  serializedName: \"SAS\",\n  type: {\n    name: \"Composite\",\n    className: \"SASAuthTypeWorkspaceConnectionProperties\",\n    uberParent: \"WorkspaceConnectionPropertiesV2\",\n    polymorphicDiscriminator:\n      WorkspaceConnectionPropertiesV2.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...WorkspaceConnectionPropertiesV2.type.modelProperties,\n      credentials: {\n        serializedName: \"credentials\",\n        type: {\n          name: \"Composite\",\n          className: \"WorkspaceConnectionSharedAccessSignature\"\n        }\n      }\n    }\n  }\n};\n\nexport const UsernamePasswordAuthTypeWorkspaceConnectionProperties: coreClient.CompositeMapper = {\n  serializedName: \"UsernamePassword\",\n  type: {\n    name: \"Composite\",\n    className: \"UsernamePasswordAuthTypeWorkspaceConnectionProperties\",\n    uberParent: \"WorkspaceConnectionPropertiesV2\",\n    polymorphicDiscriminator:\n      WorkspaceConnectionPropertiesV2.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...WorkspaceConnectionPropertiesV2.type.modelProperties,\n      credentials: {\n        serializedName: \"credentials\",\n        type: {\n          name: \"Composite\",\n          className: \"WorkspaceConnectionUsernamePassword\"\n        }\n      }\n    }\n  }\n};\n\nexport const NoneAuthTypeWorkspaceConnectionProperties: coreClient.CompositeMapper = {\n  serializedName: \"None\",\n  type: {\n    name: \"Composite\",\n    className: \"NoneAuthTypeWorkspaceConnectionProperties\",\n    uberParent: \"WorkspaceConnectionPropertiesV2\",\n    polymorphicDiscriminator:\n      WorkspaceConnectionPropertiesV2.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...WorkspaceConnectionPropertiesV2.type.modelProperties\n    }\n  }\n};\n\nexport const ManagedIdentityAuthTypeWorkspaceConnectionProperties: coreClient.CompositeMapper = {\n  serializedName: \"ManagedIdentity\",\n  type: {\n    name: \"Composite\",\n    className: \"ManagedIdentityAuthTypeWorkspaceConnectionProperties\",\n    uberParent: \"WorkspaceConnectionPropertiesV2\",\n    polymorphicDiscriminator:\n      WorkspaceConnectionPropertiesV2.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...WorkspaceConnectionPropertiesV2.type.modelProperties,\n      credentials: {\n        serializedName: \"credentials\",\n        type: {\n          name: \"Composite\",\n          className: \"WorkspaceConnectionManagedIdentity\"\n        }\n      }\n    }\n  }\n};\n\nexport const BatchEndpointProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BatchEndpointProperties\",\n    modelProperties: {\n      ...EndpointPropertiesBase.type.modelProperties,\n      defaults: {\n        serializedName: \"defaults\",\n        type: {\n          name: \"Composite\",\n          className: \"BatchEndpointDefaults\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OnlineEndpointProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OnlineEndpointProperties\",\n    modelProperties: {\n      ...EndpointPropertiesBase.type.modelProperties,\n      compute: {\n        serializedName: \"compute\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      publicNetworkAccess: {\n        serializedName: \"publicNetworkAccess\",\n        type: {\n          name: \"String\"\n        }\n      },\n      traffic: {\n        serializedName: \"traffic\",\n        nullable: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"Number\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const PartialMinimalTrackedResourceWithIdentity: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PartialMinimalTrackedResourceWithIdentity\",\n    modelProperties: {\n      ...PartialMinimalTrackedResource.type.modelProperties,\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"PartialManagedServiceIdentity\"\n        }\n      }\n    }\n  }\n};\n\nexport const PartialMinimalTrackedResourceWithSku: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PartialMinimalTrackedResourceWithSku\",\n    modelProperties: {\n      ...PartialMinimalTrackedResource.type.modelProperties,\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"PartialSku\"\n        }\n      }\n    }\n  }\n};\n\nexport const DataPathAssetReference: coreClient.CompositeMapper = {\n  serializedName: \"DataPath\",\n  type: {\n    name: \"Composite\",\n    className: \"DataPathAssetReference\",\n    uberParent: \"AssetReferenceBase\",\n    polymorphicDiscriminator: AssetReferenceBase.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...AssetReferenceBase.type.modelProperties,\n      datastoreId: {\n        serializedName: \"datastoreId\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      path: {\n        serializedName: \"path\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const IdAssetReference: coreClient.CompositeMapper = {\n  serializedName: \"Id\",\n  type: {\n    name: \"Composite\",\n    className: \"IdAssetReference\",\n    uberParent: \"AssetReferenceBase\",\n    polymorphicDiscriminator: AssetReferenceBase.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...AssetReferenceBase.type.modelProperties,\n      assetId: {\n        constraints: {\n          Pattern: new RegExp(\"[a-zA-Z0-9_]\")\n        },\n        serializedName: \"assetId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OutputPathAssetReference: coreClient.CompositeMapper = {\n  serializedName: \"OutputPath\",\n  type: {\n    name: \"Composite\",\n    className: \"OutputPathAssetReference\",\n    uberParent: \"AssetReferenceBase\",\n    polymorphicDiscriminator: AssetReferenceBase.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...AssetReferenceBase.type.modelProperties,\n      jobId: {\n        serializedName: \"jobId\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      path: {\n        serializedName: \"path\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeploymentResourceConfiguration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentResourceConfiguration\",\n    modelProperties: {\n      ...ResourceConfiguration.type.modelProperties\n    }\n  }\n};\n\nexport const JobResourceConfiguration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"JobResourceConfiguration\",\n    modelProperties: {\n      ...ResourceConfiguration.type.modelProperties,\n      dockerArgs: {\n        serializedName: \"dockerArgs\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      shmSize: {\n        defaultValue: \"2g\",\n        constraints: {\n          Pattern: new RegExp(\"\\\\d+[bBkKmMgG]\")\n        },\n        serializedName: \"shmSize\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BatchDeploymentProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BatchDeploymentProperties\",\n    modelProperties: {\n      ...EndpointDeploymentPropertiesBase.type.modelProperties,\n      compute: {\n        serializedName: \"compute\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      errorThreshold: {\n        defaultValue: -1,\n        serializedName: \"errorThreshold\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      loggingLevel: {\n        serializedName: \"loggingLevel\",\n        type: {\n          name: \"String\"\n        }\n      },\n      maxConcurrencyPerInstance: {\n        defaultValue: 1,\n        serializedName: \"maxConcurrencyPerInstance\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      miniBatchSize: {\n        defaultValue: 10,\n        serializedName: \"miniBatchSize\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      model: {\n        serializedName: \"model\",\n        type: {\n          name: \"Composite\",\n          className: \"AssetReferenceBase\"\n        }\n      },\n      outputAction: {\n        serializedName: \"outputAction\",\n        type: {\n          name: \"String\"\n        }\n      },\n      outputFileName: {\n        defaultValue: \"predictions.csv\",\n        serializedName: \"outputFileName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resources: {\n        serializedName: \"resources\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentResourceConfiguration\"\n        }\n      },\n      retrySettings: {\n        serializedName: \"retrySettings\",\n        type: {\n          name: \"Composite\",\n          className: \"BatchRetrySettings\"\n        }\n      }\n    }\n  }\n};\n\nexport const OnlineDeploymentProperties: coreClient.CompositeMapper = {\n  serializedName: \"OnlineDeploymentProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"OnlineDeploymentProperties\",\n    uberParent: \"EndpointDeploymentPropertiesBase\",\n    polymorphicDiscriminator: {\n      serializedName: \"endpointComputeType\",\n      clientName: \"endpointComputeType\"\n    },\n    modelProperties: {\n      ...EndpointDeploymentPropertiesBase.type.modelProperties,\n      appInsightsEnabled: {\n        defaultValue: false,\n        serializedName: \"appInsightsEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      egressPublicNetworkAccess: {\n        serializedName: \"egressPublicNetworkAccess\",\n        type: {\n          name: \"String\"\n        }\n      },\n      endpointComputeType: {\n        serializedName: \"endpointComputeType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      instanceType: {\n        serializedName: \"instanceType\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      livenessProbe: {\n        serializedName: \"livenessProbe\",\n        type: {\n          name: \"Composite\",\n          className: \"ProbeSettings\"\n        }\n      },\n      model: {\n        serializedName: \"model\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      modelMountPath: {\n        serializedName: \"modelMountPath\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      readinessProbe: {\n        serializedName: \"readinessProbe\",\n        type: {\n          name: \"Composite\",\n          className: \"ProbeSettings\"\n        }\n      },\n      requestSettings: {\n        serializedName: \"requestSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"OnlineRequestSettings\"\n        }\n      },\n      scaleSettings: {\n        serializedName: \"scaleSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"OnlineScaleSettings\"\n        }\n      }\n    }\n  }\n};\n\nexport const AssetContainer: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AssetContainer\",\n    modelProperties: {\n      ...ResourceBase.type.modelProperties,\n      isArchived: {\n        defaultValue: false,\n        serializedName: \"isArchived\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      latestVersion: {\n        serializedName: \"latestVersion\",\n        readOnly: true,\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nextVersion: {\n        serializedName: \"nextVersion\",\n        readOnly: true,\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AssetBase: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AssetBase\",\n    modelProperties: {\n      ...ResourceBase.type.modelProperties,\n      isAnonymous: {\n        defaultValue: false,\n        serializedName: \"isAnonymous\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isArchived: {\n        defaultValue: false,\n        serializedName: \"isArchived\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const DatastoreProperties: coreClient.CompositeMapper = {\n  serializedName: \"DatastoreProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"DatastoreProperties\",\n    uberParent: \"ResourceBase\",\n    polymorphicDiscriminator: {\n      serializedName: \"datastoreType\",\n      clientName: \"datastoreType\"\n    },\n    modelProperties: {\n      ...ResourceBase.type.modelProperties,\n      credentials: {\n        serializedName: \"credentials\",\n        type: {\n          name: \"Composite\",\n          className: \"DatastoreCredentials\"\n        }\n      },\n      datastoreType: {\n        serializedName: \"datastoreType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      isDefault: {\n        serializedName: \"isDefault\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const JobBaseProperties: coreClient.CompositeMapper = {\n  serializedName: \"JobBaseProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"JobBaseProperties\",\n    uberParent: \"ResourceBase\",\n    polymorphicDiscriminator: {\n      serializedName: \"jobType\",\n      clientName: \"jobType\"\n    },\n    modelProperties: {\n      ...ResourceBase.type.modelProperties,\n      componentId: {\n        serializedName: \"componentId\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      computeId: {\n        serializedName: \"computeId\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      experimentName: {\n        defaultValue: \"Default\",\n        serializedName: \"experimentName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"IdentityConfiguration\"\n        }\n      },\n      isArchived: {\n        defaultValue: false,\n        serializedName: \"isArchived\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      jobType: {\n        serializedName: \"jobType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      services: {\n        serializedName: \"services\",\n        nullable: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"Composite\", className: \"JobService\" } }\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ScheduleProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ScheduleProperties\",\n    modelProperties: {\n      ...ResourceBase.type.modelProperties,\n      action: {\n        serializedName: \"action\",\n        type: {\n          name: \"Composite\",\n          className: \"ScheduleActionBase\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      isEnabled: {\n        defaultValue: true,\n        serializedName: \"isEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      trigger: {\n        serializedName: \"trigger\",\n        type: {\n          name: \"Composite\",\n          className: \"TriggerBase\"\n        }\n      }\n    }\n  }\n};\n\nexport const AccountKeyDatastoreCredentials: coreClient.CompositeMapper = {\n  serializedName: \"AccountKey\",\n  type: {\n    name: \"Composite\",\n    className: \"AccountKeyDatastoreCredentials\",\n    uberParent: \"DatastoreCredentials\",\n    polymorphicDiscriminator:\n      DatastoreCredentials.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...DatastoreCredentials.type.modelProperties,\n      secrets: {\n        serializedName: \"secrets\",\n        type: {\n          name: \"Composite\",\n          className: \"AccountKeyDatastoreSecrets\"\n        }\n      }\n    }\n  }\n};\n\nexport const CertificateDatastoreCredentials: coreClient.CompositeMapper = {\n  serializedName: \"Certificate\",\n  type: {\n    name: \"Composite\",\n    className: \"CertificateDatastoreCredentials\",\n    uberParent: \"DatastoreCredentials\",\n    polymorphicDiscriminator:\n      DatastoreCredentials.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...DatastoreCredentials.type.modelProperties,\n      authorityUrl: {\n        serializedName: \"authorityUrl\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      clientId: {\n        serializedName: \"clientId\",\n        required: true,\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      resourceUrl: {\n        serializedName: \"resourceUrl\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      secrets: {\n        serializedName: \"secrets\",\n        type: {\n          name: \"Composite\",\n          className: \"CertificateDatastoreSecrets\"\n        }\n      },\n      tenantId: {\n        serializedName: \"tenantId\",\n        required: true,\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      thumbprint: {\n        constraints: {\n          Pattern: new RegExp(\"[a-zA-Z0-9_]\")\n        },\n        serializedName: \"thumbprint\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NoneDatastoreCredentials: coreClient.CompositeMapper = {\n  serializedName: \"None\",\n  type: {\n    name: \"Composite\",\n    className: \"NoneDatastoreCredentials\",\n    uberParent: \"DatastoreCredentials\",\n    polymorphicDiscriminator:\n      DatastoreCredentials.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...DatastoreCredentials.type.modelProperties\n    }\n  }\n};\n\nexport const SasDatastoreCredentials: coreClient.CompositeMapper = {\n  serializedName: \"Sas\",\n  type: {\n    name: \"Composite\",\n    className: \"SasDatastoreCredentials\",\n    uberParent: \"DatastoreCredentials\",\n    polymorphicDiscriminator:\n      DatastoreCredentials.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...DatastoreCredentials.type.modelProperties,\n      secrets: {\n        serializedName: \"secrets\",\n        type: {\n          name: \"Composite\",\n          className: \"SasDatastoreSecrets\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServicePrincipalDatastoreCredentials: coreClient.CompositeMapper = {\n  serializedName: \"ServicePrincipal\",\n  type: {\n    name: \"Composite\",\n    className: \"ServicePrincipalDatastoreCredentials\",\n    uberParent: \"DatastoreCredentials\",\n    polymorphicDiscriminator:\n      DatastoreCredentials.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...DatastoreCredentials.type.modelProperties,\n      authorityUrl: {\n        serializedName: \"authorityUrl\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      clientId: {\n        serializedName: \"clientId\",\n        required: true,\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      resourceUrl: {\n        serializedName: \"resourceUrl\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      secrets: {\n        serializedName: \"secrets\",\n        type: {\n          name: \"Composite\",\n          className: \"ServicePrincipalDatastoreSecrets\"\n        }\n      },\n      tenantId: {\n        serializedName: \"tenantId\",\n        required: true,\n        type: {\n          name: \"Uuid\"\n        }\n      }\n    }\n  }\n};\n\nexport const AccountKeyDatastoreSecrets: coreClient.CompositeMapper = {\n  serializedName: \"AccountKey\",\n  type: {\n    name: \"Composite\",\n    className: \"AccountKeyDatastoreSecrets\",\n    uberParent: \"DatastoreSecrets\",\n    polymorphicDiscriminator: DatastoreSecrets.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...DatastoreSecrets.type.modelProperties,\n      key: {\n        serializedName: \"key\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CertificateDatastoreSecrets: coreClient.CompositeMapper = {\n  serializedName: \"Certificate\",\n  type: {\n    name: \"Composite\",\n    className: \"CertificateDatastoreSecrets\",\n    uberParent: \"DatastoreSecrets\",\n    polymorphicDiscriminator: DatastoreSecrets.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...DatastoreSecrets.type.modelProperties,\n      certificate: {\n        serializedName: \"certificate\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SasDatastoreSecrets: coreClient.CompositeMapper = {\n  serializedName: \"Sas\",\n  type: {\n    name: \"Composite\",\n    className: \"SasDatastoreSecrets\",\n    uberParent: \"DatastoreSecrets\",\n    polymorphicDiscriminator: DatastoreSecrets.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...DatastoreSecrets.type.modelProperties,\n      sasToken: {\n        serializedName: \"sasToken\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServicePrincipalDatastoreSecrets: coreClient.CompositeMapper = {\n  serializedName: \"ServicePrincipal\",\n  type: {\n    name: \"Composite\",\n    className: \"ServicePrincipalDatastoreSecrets\",\n    uberParent: \"DatastoreSecrets\",\n    polymorphicDiscriminator: DatastoreSecrets.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...DatastoreSecrets.type.modelProperties,\n      clientSecret: {\n        serializedName: \"clientSecret\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AmlToken: coreClient.CompositeMapper = {\n  serializedName: \"AMLToken\",\n  type: {\n    name: \"Composite\",\n    className: \"AmlToken\",\n    uberParent: \"IdentityConfiguration\",\n    polymorphicDiscriminator:\n      IdentityConfiguration.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...IdentityConfiguration.type.modelProperties\n    }\n  }\n};\n\nexport const ManagedIdentity: coreClient.CompositeMapper = {\n  serializedName: \"Managed\",\n  type: {\n    name: \"Composite\",\n    className: \"ManagedIdentity\",\n    uberParent: \"IdentityConfiguration\",\n    polymorphicDiscriminator:\n      IdentityConfiguration.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...IdentityConfiguration.type.modelProperties,\n      clientId: {\n        serializedName: \"clientId\",\n        nullable: true,\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      objectId: {\n        serializedName: \"objectId\",\n        nullable: true,\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      resourceId: {\n        serializedName: \"resourceId\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UserIdentity: coreClient.CompositeMapper = {\n  serializedName: \"UserIdentity\",\n  type: {\n    name: \"Composite\",\n    className: \"UserIdentity\",\n    uberParent: \"IdentityConfiguration\",\n    polymorphicDiscriminator:\n      IdentityConfiguration.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...IdentityConfiguration.type.modelProperties\n    }\n  }\n};\n\nexport const DefaultScaleSettings: coreClient.CompositeMapper = {\n  serializedName: \"Default\",\n  type: {\n    name: \"Composite\",\n    className: \"DefaultScaleSettings\",\n    uberParent: \"OnlineScaleSettings\",\n    polymorphicDiscriminator: OnlineScaleSettings.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...OnlineScaleSettings.type.modelProperties\n    }\n  }\n};\n\nexport const TargetUtilizationScaleSettings: coreClient.CompositeMapper = {\n  serializedName: \"TargetUtilization\",\n  type: {\n    name: \"Composite\",\n    className: \"TargetUtilizationScaleSettings\",\n    uberParent: \"OnlineScaleSettings\",\n    polymorphicDiscriminator: OnlineScaleSettings.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...OnlineScaleSettings.type.modelProperties,\n      maxInstances: {\n        defaultValue: 1,\n        serializedName: \"maxInstances\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      minInstances: {\n        defaultValue: 1,\n        serializedName: \"minInstances\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      pollingInterval: {\n        defaultValue: \"PT1S\",\n        serializedName: \"pollingInterval\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      },\n      targetUtilizationPercentage: {\n        defaultValue: 70,\n        serializedName: \"targetUtilizationPercentage\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const EndpointScheduleAction: coreClient.CompositeMapper = {\n  serializedName: \"InvokeBatchEndpoint\",\n  type: {\n    name: \"Composite\",\n    className: \"EndpointScheduleAction\",\n    uberParent: \"ScheduleActionBase\",\n    polymorphicDiscriminator: ScheduleActionBase.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...ScheduleActionBase.type.modelProperties,\n      endpointInvocationDefinition: {\n        serializedName: \"endpointInvocationDefinition\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const JobScheduleAction: coreClient.CompositeMapper = {\n  serializedName: \"CreateJob\",\n  type: {\n    name: \"Composite\",\n    className: \"JobScheduleAction\",\n    uberParent: \"ScheduleActionBase\",\n    polymorphicDiscriminator: ScheduleActionBase.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...ScheduleActionBase.type.modelProperties,\n      jobDefinition: {\n        serializedName: \"jobDefinition\",\n        type: {\n          name: \"Composite\",\n          className: \"JobBaseProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const RecurrenceTrigger: coreClient.CompositeMapper = {\n  serializedName: \"Recurrence\",\n  type: {\n    name: \"Composite\",\n    className: \"RecurrenceTrigger\",\n    uberParent: \"TriggerBase\",\n    polymorphicDiscriminator: TriggerBase.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...TriggerBase.type.modelProperties,\n      frequency: {\n        serializedName: \"frequency\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      interval: {\n        serializedName: \"interval\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      schedule: {\n        serializedName: \"schedule\",\n        type: {\n          name: \"Composite\",\n          className: \"RecurrenceSchedule\"\n        }\n      }\n    }\n  }\n};\n\nexport const CronTrigger: coreClient.CompositeMapper = {\n  serializedName: \"Cron\",\n  type: {\n    name: \"Composite\",\n    className: \"CronTrigger\",\n    uberParent: \"TriggerBase\",\n    polymorphicDiscriminator: TriggerBase.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...TriggerBase.type.modelProperties,\n      expression: {\n        constraints: {\n          Pattern: new RegExp(\"[a-zA-Z0-9_]\")\n        },\n        serializedName: \"expression\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MLTableJobInput: coreClient.CompositeMapper = {\n  serializedName: \"mltable\",\n  type: {\n    name: \"Composite\",\n    className: \"MLTableJobInput\",\n    uberParent: \"AssetJobInput\",\n    polymorphicDiscriminator: AssetJobInput.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...AssetJobInput.type.modelProperties,\n      ...JobInput.type.modelProperties\n    }\n  }\n};\n\nexport const CustomModelJobInput: coreClient.CompositeMapper = {\n  serializedName: \"custom_model\",\n  type: {\n    name: \"Composite\",\n    className: \"CustomModelJobInput\",\n    uberParent: \"AssetJobInput\",\n    polymorphicDiscriminator: AssetJobInput.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...AssetJobInput.type.modelProperties,\n      ...JobInput.type.modelProperties\n    }\n  }\n};\n\nexport const MLFlowModelJobInput: coreClient.CompositeMapper = {\n  serializedName: \"mlflow_model\",\n  type: {\n    name: \"Composite\",\n    className: \"MLFlowModelJobInput\",\n    uberParent: \"AssetJobInput\",\n    polymorphicDiscriminator: AssetJobInput.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...AssetJobInput.type.modelProperties,\n      ...JobInput.type.modelProperties\n    }\n  }\n};\n\nexport const TritonModelJobInput: coreClient.CompositeMapper = {\n  serializedName: \"triton_model\",\n  type: {\n    name: \"Composite\",\n    className: \"TritonModelJobInput\",\n    uberParent: \"AssetJobInput\",\n    polymorphicDiscriminator: AssetJobInput.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...AssetJobInput.type.modelProperties,\n      ...JobInput.type.modelProperties\n    }\n  }\n};\n\nexport const UriFileJobInput: coreClient.CompositeMapper = {\n  serializedName: \"uri_file\",\n  type: {\n    name: \"Composite\",\n    className: \"UriFileJobInput\",\n    uberParent: \"AssetJobInput\",\n    polymorphicDiscriminator: AssetJobInput.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...AssetJobInput.type.modelProperties,\n      ...JobInput.type.modelProperties\n    }\n  }\n};\n\nexport const UriFolderJobInput: coreClient.CompositeMapper = {\n  serializedName: \"uri_folder\",\n  type: {\n    name: \"Composite\",\n    className: \"UriFolderJobInput\",\n    uberParent: \"AssetJobInput\",\n    polymorphicDiscriminator: AssetJobInput.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...AssetJobInput.type.modelProperties,\n      ...JobInput.type.modelProperties\n    }\n  }\n};\n\nexport const CustomModelJobOutput: coreClient.CompositeMapper = {\n  serializedName: \"custom_model\",\n  type: {\n    name: \"Composite\",\n    className: \"CustomModelJobOutput\",\n    uberParent: \"AssetJobOutput\",\n    polymorphicDiscriminator: AssetJobOutput.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...AssetJobOutput.type.modelProperties,\n      ...JobOutput.type.modelProperties\n    }\n  }\n};\n\nexport const MLFlowModelJobOutput: coreClient.CompositeMapper = {\n  serializedName: \"mlflow_model\",\n  type: {\n    name: \"Composite\",\n    className: \"MLFlowModelJobOutput\",\n    uberParent: \"AssetJobOutput\",\n    polymorphicDiscriminator: AssetJobOutput.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...AssetJobOutput.type.modelProperties,\n      ...JobOutput.type.modelProperties\n    }\n  }\n};\n\nexport const MLTableJobOutput: coreClient.CompositeMapper = {\n  serializedName: \"mltable\",\n  type: {\n    name: \"Composite\",\n    className: \"MLTableJobOutput\",\n    uberParent: \"AssetJobOutput\",\n    polymorphicDiscriminator: AssetJobOutput.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...AssetJobOutput.type.modelProperties,\n      ...JobOutput.type.modelProperties\n    }\n  }\n};\n\nexport const TritonModelJobOutput: coreClient.CompositeMapper = {\n  serializedName: \"triton_model\",\n  type: {\n    name: \"Composite\",\n    className: \"TritonModelJobOutput\",\n    uberParent: \"AssetJobOutput\",\n    polymorphicDiscriminator: AssetJobOutput.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...AssetJobOutput.type.modelProperties,\n      ...JobOutput.type.modelProperties\n    }\n  }\n};\n\nexport const UriFileJobOutput: coreClient.CompositeMapper = {\n  serializedName: \"uri_file\",\n  type: {\n    name: \"Composite\",\n    className: \"UriFileJobOutput\",\n    uberParent: \"AssetJobOutput\",\n    polymorphicDiscriminator: AssetJobOutput.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...AssetJobOutput.type.modelProperties,\n      ...JobOutput.type.modelProperties\n    }\n  }\n};\n\nexport const UriFolderJobOutput: coreClient.CompositeMapper = {\n  serializedName: \"uri_folder\",\n  type: {\n    name: \"Composite\",\n    className: \"UriFolderJobOutput\",\n    uberParent: \"AssetJobOutput\",\n    polymorphicDiscriminator: AssetJobOutput.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...AssetJobOutput.type.modelProperties,\n      ...JobOutput.type.modelProperties\n    }\n  }\n};\n\nexport const AutoForecastHorizon: coreClient.CompositeMapper = {\n  serializedName: \"Auto\",\n  type: {\n    name: \"Composite\",\n    className: \"AutoForecastHorizon\",\n    uberParent: \"ForecastHorizon\",\n    polymorphicDiscriminator: ForecastHorizon.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...ForecastHorizon.type.modelProperties\n    }\n  }\n};\n\nexport const CustomForecastHorizon: coreClient.CompositeMapper = {\n  serializedName: \"Custom\",\n  type: {\n    name: \"Composite\",\n    className: \"CustomForecastHorizon\",\n    uberParent: \"ForecastHorizon\",\n    polymorphicDiscriminator: ForecastHorizon.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...ForecastHorizon.type.modelProperties,\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Classification: coreClient.CompositeMapper = {\n  serializedName: \"Classification\",\n  type: {\n    name: \"Composite\",\n    className: \"Classification\",\n    uberParent: \"TableVertical\",\n    polymorphicDiscriminator: TableVertical.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...TableVertical.type.modelProperties,\n      ...AutoMLVertical.type.modelProperties,\n      positiveLabel: {\n        serializedName: \"positiveLabel\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      primaryMetric: {\n        serializedName: \"primaryMetric\",\n        type: {\n          name: \"String\"\n        }\n      },\n      trainingSettings: {\n        serializedName: \"trainingSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"ClassificationTrainingSettings\"\n        }\n      }\n    }\n  }\n};\n\nexport const Forecasting: coreClient.CompositeMapper = {\n  serializedName: \"Forecasting\",\n  type: {\n    name: \"Composite\",\n    className: \"Forecasting\",\n    uberParent: \"TableVertical\",\n    polymorphicDiscriminator: TableVertical.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...TableVertical.type.modelProperties,\n      ...AutoMLVertical.type.modelProperties,\n      forecastingSettings: {\n        serializedName: \"forecastingSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"ForecastingSettings\"\n        }\n      },\n      primaryMetric: {\n        serializedName: \"primaryMetric\",\n        type: {\n          name: \"String\"\n        }\n      },\n      trainingSettings: {\n        serializedName: \"trainingSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"ForecastingTrainingSettings\"\n        }\n      }\n    }\n  }\n};\n\nexport const ImageClassificationBase: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ImageClassificationBase\",\n    modelProperties: {\n      ...ImageVertical.type.modelProperties,\n      modelSettings: {\n        serializedName: \"modelSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"ImageModelSettingsClassification\"\n        }\n      },\n      searchSpace: {\n        serializedName: \"searchSpace\",\n        nullable: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ImageModelDistributionSettingsClassification\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ImageClassification: coreClient.CompositeMapper = {\n  serializedName: \"ImageClassification\",\n  type: {\n    name: \"Composite\",\n    className: \"ImageClassification\",\n    uberParent: \"ImageClassificationBase\",\n    modelProperties: {\n      ...ImageClassificationBase.type.modelProperties,\n      ...AutoMLVertical.type.modelProperties,\n      primaryMetric: {\n        serializedName: \"primaryMetric\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nImageClassificationBase.type.polymorphicDiscriminator =\n  ImageClassificationBase.type.polymorphicDiscriminator;\n\nexport const ImageClassificationMultilabel: coreClient.CompositeMapper = {\n  serializedName: \"ImageClassificationMultilabel\",\n  type: {\n    name: \"Composite\",\n    className: \"ImageClassificationMultilabel\",\n    uberParent: \"ImageClassificationBase\",\n    polymorphicDiscriminator:\n      ImageClassificationBase.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...ImageClassificationBase.type.modelProperties,\n      ...AutoMLVertical.type.modelProperties,\n      primaryMetric: {\n        serializedName: \"primaryMetric\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ImageObjectDetectionBase: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ImageObjectDetectionBase\",\n    modelProperties: {\n      ...ImageVertical.type.modelProperties,\n      modelSettings: {\n        serializedName: \"modelSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"ImageModelSettingsObjectDetection\"\n        }\n      },\n      searchSpace: {\n        serializedName: \"searchSpace\",\n        nullable: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ImageModelDistributionSettingsObjectDetection\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ImageInstanceSegmentation: coreClient.CompositeMapper = {\n  serializedName: \"ImageInstanceSegmentation\",\n  type: {\n    name: \"Composite\",\n    className: \"ImageInstanceSegmentation\",\n    uberParent: \"ImageObjectDetectionBase\",\n    polymorphicDiscriminator:\n      ImageObjectDetectionBase.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...ImageObjectDetectionBase.type.modelProperties,\n      ...AutoMLVertical.type.modelProperties,\n      primaryMetric: {\n        serializedName: \"primaryMetric\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ImageObjectDetection: coreClient.CompositeMapper = {\n  serializedName: \"ImageObjectDetection\",\n  type: {\n    name: \"Composite\",\n    className: \"ImageObjectDetection\",\n    uberParent: \"ImageObjectDetectionBase\",\n    modelProperties: {\n      ...ImageObjectDetectionBase.type.modelProperties,\n      ...AutoMLVertical.type.modelProperties,\n      primaryMetric: {\n        serializedName: \"primaryMetric\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\nImageObjectDetectionBase.type.polymorphicDiscriminator =\n  ImageObjectDetectionBase.type.polymorphicDiscriminator;\n\nexport const Regression: coreClient.CompositeMapper = {\n  serializedName: \"Regression\",\n  type: {\n    name: \"Composite\",\n    className: \"Regression\",\n    uberParent: \"TableVertical\",\n    polymorphicDiscriminator: TableVertical.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...TableVertical.type.modelProperties,\n      ...AutoMLVertical.type.modelProperties,\n      primaryMetric: {\n        serializedName: \"primaryMetric\",\n        type: {\n          name: \"String\"\n        }\n      },\n      trainingSettings: {\n        serializedName: \"trainingSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"RegressionTrainingSettings\"\n        }\n      }\n    }\n  }\n};\n\nexport const TextClassification: coreClient.CompositeMapper = {\n  serializedName: \"TextClassification\",\n  type: {\n    name: \"Composite\",\n    className: \"TextClassification\",\n    uberParent: \"NlpVertical\",\n    polymorphicDiscriminator: NlpVertical.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...NlpVertical.type.modelProperties,\n      ...AutoMLVertical.type.modelProperties,\n      primaryMetric: {\n        serializedName: \"primaryMetric\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TextClassificationMultilabel: coreClient.CompositeMapper = {\n  serializedName: \"TextClassificationMultilabel\",\n  type: {\n    name: \"Composite\",\n    className: \"TextClassificationMultilabel\",\n    uberParent: \"NlpVertical\",\n    polymorphicDiscriminator: NlpVertical.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...NlpVertical.type.modelProperties,\n      ...AutoMLVertical.type.modelProperties,\n      primaryMetric: {\n        serializedName: \"primaryMetric\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TextNer: coreClient.CompositeMapper = {\n  serializedName: \"TextNER\",\n  type: {\n    name: \"Composite\",\n    className: \"TextNer\",\n    uberParent: \"NlpVertical\",\n    polymorphicDiscriminator: NlpVertical.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...NlpVertical.type.modelProperties,\n      ...AutoMLVertical.type.modelProperties,\n      primaryMetric: {\n        serializedName: \"primaryMetric\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const LiteralJobInput: coreClient.CompositeMapper = {\n  serializedName: \"literal\",\n  type: {\n    name: \"Composite\",\n    className: \"LiteralJobInput\",\n    uberParent: \"JobInput\",\n    polymorphicDiscriminator: JobInput.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...JobInput.type.modelProperties,\n      value: {\n        constraints: {\n          Pattern: new RegExp(\"[a-zA-Z0-9_]\")\n        },\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AutoNCrossValidations: coreClient.CompositeMapper = {\n  serializedName: \"Auto\",\n  type: {\n    name: \"Composite\",\n    className: \"AutoNCrossValidations\",\n    uberParent: \"NCrossValidations\",\n    polymorphicDiscriminator: NCrossValidations.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...NCrossValidations.type.modelProperties\n    }\n  }\n};\n\nexport const CustomNCrossValidations: coreClient.CompositeMapper = {\n  serializedName: \"Custom\",\n  type: {\n    name: \"Composite\",\n    className: \"CustomNCrossValidations\",\n    uberParent: \"NCrossValidations\",\n    polymorphicDiscriminator: NCrossValidations.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...NCrossValidations.type.modelProperties,\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const AutoSeasonality: coreClient.CompositeMapper = {\n  serializedName: \"Auto\",\n  type: {\n    name: \"Composite\",\n    className: \"AutoSeasonality\",\n    uberParent: \"Seasonality\",\n    polymorphicDiscriminator: Seasonality.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...Seasonality.type.modelProperties\n    }\n  }\n};\n\nexport const CustomSeasonality: coreClient.CompositeMapper = {\n  serializedName: \"Custom\",\n  type: {\n    name: \"Composite\",\n    className: \"CustomSeasonality\",\n    uberParent: \"Seasonality\",\n    polymorphicDiscriminator: Seasonality.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...Seasonality.type.modelProperties,\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const AutoTargetLags: coreClient.CompositeMapper = {\n  serializedName: \"Auto\",\n  type: {\n    name: \"Composite\",\n    className: \"AutoTargetLags\",\n    uberParent: \"TargetLags\",\n    polymorphicDiscriminator: TargetLags.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...TargetLags.type.modelProperties\n    }\n  }\n};\n\nexport const CustomTargetLags: coreClient.CompositeMapper = {\n  serializedName: \"Custom\",\n  type: {\n    name: \"Composite\",\n    className: \"CustomTargetLags\",\n    uberParent: \"TargetLags\",\n    polymorphicDiscriminator: TargetLags.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...TargetLags.type.modelProperties,\n      values: {\n        serializedName: \"values\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Number\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const AutoTargetRollingWindowSize: coreClient.CompositeMapper = {\n  serializedName: \"Auto\",\n  type: {\n    name: \"Composite\",\n    className: \"AutoTargetRollingWindowSize\",\n    uberParent: \"TargetRollingWindowSize\",\n    polymorphicDiscriminator:\n      TargetRollingWindowSize.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...TargetRollingWindowSize.type.modelProperties\n    }\n  }\n};\n\nexport const CustomTargetRollingWindowSize: coreClient.CompositeMapper = {\n  serializedName: \"Custom\",\n  type: {\n    name: \"Composite\",\n    className: \"CustomTargetRollingWindowSize\",\n    uberParent: \"TargetRollingWindowSize\",\n    polymorphicDiscriminator:\n      TargetRollingWindowSize.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...TargetRollingWindowSize.type.modelProperties,\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const BanditPolicy: coreClient.CompositeMapper = {\n  serializedName: \"Bandit\",\n  type: {\n    name: \"Composite\",\n    className: \"BanditPolicy\",\n    uberParent: \"EarlyTerminationPolicy\",\n    polymorphicDiscriminator:\n      EarlyTerminationPolicy.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...EarlyTerminationPolicy.type.modelProperties,\n      slackAmount: {\n        defaultValue: 0,\n        serializedName: \"slackAmount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      slackFactor: {\n        defaultValue: 0,\n        serializedName: \"slackFactor\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const MedianStoppingPolicy: coreClient.CompositeMapper = {\n  serializedName: \"MedianStopping\",\n  type: {\n    name: \"Composite\",\n    className: \"MedianStoppingPolicy\",\n    uberParent: \"EarlyTerminationPolicy\",\n    polymorphicDiscriminator:\n      EarlyTerminationPolicy.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...EarlyTerminationPolicy.type.modelProperties\n    }\n  }\n};\n\nexport const TruncationSelectionPolicy: coreClient.CompositeMapper = {\n  serializedName: \"TruncationSelection\",\n  type: {\n    name: \"Composite\",\n    className: \"TruncationSelectionPolicy\",\n    uberParent: \"EarlyTerminationPolicy\",\n    polymorphicDiscriminator:\n      EarlyTerminationPolicy.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...EarlyTerminationPolicy.type.modelProperties,\n      truncationPercentage: {\n        defaultValue: 0,\n        serializedName: \"truncationPercentage\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const BayesianSamplingAlgorithm: coreClient.CompositeMapper = {\n  serializedName: \"Bayesian\",\n  type: {\n    name: \"Composite\",\n    className: \"BayesianSamplingAlgorithm\",\n    uberParent: \"SamplingAlgorithm\",\n    polymorphicDiscriminator: SamplingAlgorithm.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...SamplingAlgorithm.type.modelProperties\n    }\n  }\n};\n\nexport const GridSamplingAlgorithm: coreClient.CompositeMapper = {\n  serializedName: \"Grid\",\n  type: {\n    name: \"Composite\",\n    className: \"GridSamplingAlgorithm\",\n    uberParent: \"SamplingAlgorithm\",\n    polymorphicDiscriminator: SamplingAlgorithm.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...SamplingAlgorithm.type.modelProperties\n    }\n  }\n};\n\nexport const RandomSamplingAlgorithm: coreClient.CompositeMapper = {\n  serializedName: \"Random\",\n  type: {\n    name: \"Composite\",\n    className: \"RandomSamplingAlgorithm\",\n    uberParent: \"SamplingAlgorithm\",\n    polymorphicDiscriminator: SamplingAlgorithm.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...SamplingAlgorithm.type.modelProperties,\n      rule: {\n        serializedName: \"rule\",\n        type: {\n          name: \"String\"\n        }\n      },\n      seed: {\n        serializedName: \"seed\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ClassificationTrainingSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ClassificationTrainingSettings\",\n    modelProperties: {\n      ...TrainingSettings.type.modelProperties,\n      allowedTrainingAlgorithms: {\n        serializedName: \"allowedTrainingAlgorithms\",\n        nullable: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      blockedTrainingAlgorithms: {\n        serializedName: \"blockedTrainingAlgorithms\",\n        nullable: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ForecastingTrainingSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ForecastingTrainingSettings\",\n    modelProperties: {\n      ...TrainingSettings.type.modelProperties,\n      allowedTrainingAlgorithms: {\n        serializedName: \"allowedTrainingAlgorithms\",\n        nullable: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      blockedTrainingAlgorithms: {\n        serializedName: \"blockedTrainingAlgorithms\",\n        nullable: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const RegressionTrainingSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RegressionTrainingSettings\",\n    modelProperties: {\n      ...TrainingSettings.type.modelProperties,\n      allowedTrainingAlgorithms: {\n        serializedName: \"allowedTrainingAlgorithms\",\n        nullable: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      blockedTrainingAlgorithms: {\n        serializedName: \"blockedTrainingAlgorithms\",\n        nullable: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const TableVerticalFeaturizationSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TableVerticalFeaturizationSettings\",\n    modelProperties: {\n      ...FeaturizationSettings.type.modelProperties,\n      blockedTransformers: {\n        serializedName: \"blockedTransformers\",\n        nullable: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      columnNameAndTypes: {\n        serializedName: \"columnNameAndTypes\",\n        nullable: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      enableDnnFeaturization: {\n        defaultValue: false,\n        serializedName: \"enableDnnFeaturization\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      mode: {\n        serializedName: \"mode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      transformerParams: {\n        serializedName: \"transformerParams\",\n        nullable: true,\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"Sequence\",\n              element: {\n                type: { name: \"Composite\", className: \"ColumnTransformer\" }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const NlpVerticalFeaturizationSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NlpVerticalFeaturizationSettings\",\n    modelProperties: {\n      ...FeaturizationSettings.type.modelProperties\n    }\n  }\n};\n\nexport const Mpi: coreClient.CompositeMapper = {\n  serializedName: \"Mpi\",\n  type: {\n    name: \"Composite\",\n    className: \"Mpi\",\n    uberParent: \"DistributionConfiguration\",\n    polymorphicDiscriminator:\n      DistributionConfiguration.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...DistributionConfiguration.type.modelProperties,\n      processCountPerInstance: {\n        serializedName: \"processCountPerInstance\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const PyTorch: coreClient.CompositeMapper = {\n  serializedName: \"PyTorch\",\n  type: {\n    name: \"Composite\",\n    className: \"PyTorch\",\n    uberParent: \"DistributionConfiguration\",\n    polymorphicDiscriminator:\n      DistributionConfiguration.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...DistributionConfiguration.type.modelProperties,\n      processCountPerInstance: {\n        serializedName: \"processCountPerInstance\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const TensorFlow: coreClient.CompositeMapper = {\n  serializedName: \"TensorFlow\",\n  type: {\n    name: \"Composite\",\n    className: \"TensorFlow\",\n    uberParent: \"DistributionConfiguration\",\n    polymorphicDiscriminator:\n      DistributionConfiguration.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...DistributionConfiguration.type.modelProperties,\n      parameterServerCount: {\n        defaultValue: 0,\n        serializedName: \"parameterServerCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      workerCount: {\n        serializedName: \"workerCount\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const CommandJobLimits: coreClient.CompositeMapper = {\n  serializedName: \"Command\",\n  type: {\n    name: \"Composite\",\n    className: \"CommandJobLimits\",\n    uberParent: \"JobLimits\",\n    polymorphicDiscriminator: JobLimits.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...JobLimits.type.modelProperties\n    }\n  }\n};\n\nexport const SweepJobLimits: coreClient.CompositeMapper = {\n  serializedName: \"Sweep\",\n  type: {\n    name: \"Composite\",\n    className: \"SweepJobLimits\",\n    uberParent: \"JobLimits\",\n    polymorphicDiscriminator: JobLimits.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...JobLimits.type.modelProperties,\n      maxConcurrentTrials: {\n        serializedName: \"maxConcurrentTrials\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      maxTotalTrials: {\n        serializedName: \"maxTotalTrials\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      trialTimeout: {\n        serializedName: \"trialTimeout\",\n        nullable: true,\n        type: {\n          name: \"TimeSpan\"\n        }\n      }\n    }\n  }\n};\n\nexport const ImageModelSettingsClassification: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ImageModelSettingsClassification\",\n    modelProperties: {\n      ...ImageModelSettings.type.modelProperties,\n      trainingCropSize: {\n        serializedName: \"trainingCropSize\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      validationCropSize: {\n        serializedName: \"validationCropSize\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      validationResizeSize: {\n        serializedName: \"validationResizeSize\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      weightedLoss: {\n        serializedName: \"weightedLoss\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ImageModelSettingsObjectDetection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ImageModelSettingsObjectDetection\",\n    modelProperties: {\n      ...ImageModelSettings.type.modelProperties,\n      boxDetectionsPerImage: {\n        serializedName: \"boxDetectionsPerImage\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      boxScoreThreshold: {\n        serializedName: \"boxScoreThreshold\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      imageSize: {\n        serializedName: \"imageSize\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      maxSize: {\n        serializedName: \"maxSize\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      minSize: {\n        serializedName: \"minSize\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      modelSize: {\n        serializedName: \"modelSize\",\n        type: {\n          name: \"String\"\n        }\n      },\n      multiScale: {\n        serializedName: \"multiScale\",\n        nullable: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      nmsIouThreshold: {\n        serializedName: \"nmsIouThreshold\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      tileGridSize: {\n        serializedName: \"tileGridSize\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tileOverlapRatio: {\n        serializedName: \"tileOverlapRatio\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      tilePredictionsNmsThreshold: {\n        serializedName: \"tilePredictionsNmsThreshold\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      validationIouThreshold: {\n        serializedName: \"validationIouThreshold\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      validationMetricType: {\n        serializedName: \"validationMetricType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ImageModelDistributionSettingsClassification: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ImageModelDistributionSettingsClassification\",\n    modelProperties: {\n      ...ImageModelDistributionSettings.type.modelProperties,\n      trainingCropSize: {\n        serializedName: \"trainingCropSize\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      validationCropSize: {\n        serializedName: \"validationCropSize\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      validationResizeSize: {\n        serializedName: \"validationResizeSize\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      weightedLoss: {\n        serializedName: \"weightedLoss\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ImageModelDistributionSettingsObjectDetection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ImageModelDistributionSettingsObjectDetection\",\n    modelProperties: {\n      ...ImageModelDistributionSettings.type.modelProperties,\n      boxDetectionsPerImage: {\n        serializedName: \"boxDetectionsPerImage\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      boxScoreThreshold: {\n        serializedName: \"boxScoreThreshold\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      imageSize: {\n        serializedName: \"imageSize\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      maxSize: {\n        serializedName: \"maxSize\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      minSize: {\n        serializedName: \"minSize\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      modelSize: {\n        serializedName: \"modelSize\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      multiScale: {\n        serializedName: \"multiScale\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nmsIouThreshold: {\n        serializedName: \"nmsIouThreshold\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tileGridSize: {\n        serializedName: \"tileGridSize\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tileOverlapRatio: {\n        serializedName: \"tileOverlapRatio\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tilePredictionsNmsThreshold: {\n        serializedName: \"tilePredictionsNmsThreshold\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      validationIouThreshold: {\n        serializedName: \"validationIouThreshold\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      validationMetricType: {\n        serializedName: \"validationMetricType\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BatchEndpoint: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BatchEndpoint\",\n    modelProperties: {\n      ...TrackedResource.type.modelProperties,\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagedServiceIdentity\"\n        }\n      },\n      kind: {\n        serializedName: \"kind\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"BatchEndpointProperties\"\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      }\n    }\n  }\n};\n\nexport const BatchDeployment: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BatchDeployment\",\n    modelProperties: {\n      ...TrackedResource.type.modelProperties,\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagedServiceIdentity\"\n        }\n      },\n      kind: {\n        serializedName: \"kind\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"BatchDeploymentProperties\"\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      }\n    }\n  }\n};\n\nexport const OnlineEndpoint: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OnlineEndpoint\",\n    modelProperties: {\n      ...TrackedResource.type.modelProperties,\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagedServiceIdentity\"\n        }\n      },\n      kind: {\n        serializedName: \"kind\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"OnlineEndpointProperties\"\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      }\n    }\n  }\n};\n\nexport const OnlineDeployment: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OnlineDeployment\",\n    modelProperties: {\n      ...TrackedResource.type.modelProperties,\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagedServiceIdentity\"\n        }\n      },\n      kind: {\n        serializedName: \"kind\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"OnlineDeploymentProperties\"\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      }\n    }\n  }\n};\n\nexport const KubernetesOnlineDeployment: coreClient.CompositeMapper = {\n  serializedName: \"Kubernetes\",\n  type: {\n    name: \"Composite\",\n    className: \"KubernetesOnlineDeployment\",\n    uberParent: \"OnlineDeploymentProperties\",\n    polymorphicDiscriminator:\n      OnlineDeploymentProperties.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...OnlineDeploymentProperties.type.modelProperties,\n      containerResourceRequirements: {\n        serializedName: \"containerResourceRequirements\",\n        type: {\n          name: \"Composite\",\n          className: \"ContainerResourceRequirements\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedOnlineDeployment: coreClient.CompositeMapper = {\n  serializedName: \"Managed\",\n  type: {\n    name: \"Composite\",\n    className: \"ManagedOnlineDeployment\",\n    uberParent: \"OnlineDeploymentProperties\",\n    polymorphicDiscriminator:\n      OnlineDeploymentProperties.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...OnlineDeploymentProperties.type.modelProperties\n    }\n  }\n};\n\nexport const CodeContainerProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CodeContainerProperties\",\n    modelProperties: {\n      ...AssetContainer.type.modelProperties\n    }\n  }\n};\n\nexport const ComponentContainerProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ComponentContainerProperties\",\n    modelProperties: {\n      ...AssetContainer.type.modelProperties\n    }\n  }\n};\n\nexport const DataContainerProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DataContainerProperties\",\n    modelProperties: {\n      ...AssetContainer.type.modelProperties,\n      dataType: {\n        serializedName: \"dataType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EnvironmentContainerProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EnvironmentContainerProperties\",\n    modelProperties: {\n      ...AssetContainer.type.modelProperties\n    }\n  }\n};\n\nexport const ModelContainerProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ModelContainerProperties\",\n    modelProperties: {\n      ...AssetContainer.type.modelProperties\n    }\n  }\n};\n\nexport const CodeVersionProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CodeVersionProperties\",\n    modelProperties: {\n      ...AssetBase.type.modelProperties,\n      codeUri: {\n        serializedName: \"codeUri\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ComponentVersionProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ComponentVersionProperties\",\n    modelProperties: {\n      ...AssetBase.type.modelProperties,\n      componentSpec: {\n        serializedName: \"componentSpec\",\n        nullable: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const DataVersionBaseProperties: coreClient.CompositeMapper = {\n  serializedName: \"DataVersionBaseProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"DataVersionBaseProperties\",\n    uberParent: \"AssetBase\",\n    polymorphicDiscriminator: {\n      serializedName: \"dataType\",\n      clientName: \"dataType\"\n    },\n    modelProperties: {\n      ...AssetBase.type.modelProperties,\n      dataType: {\n        serializedName: \"dataType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      dataUri: {\n        constraints: {\n          Pattern: new RegExp(\"[a-zA-Z0-9_]\")\n        },\n        serializedName: \"dataUri\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EnvironmentVersionProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EnvironmentVersionProperties\",\n    modelProperties: {\n      ...AssetBase.type.modelProperties,\n      autoRebuild: {\n        serializedName: \"autoRebuild\",\n        type: {\n          name: \"String\"\n        }\n      },\n      build: {\n        serializedName: \"build\",\n        type: {\n          name: \"Composite\",\n          className: \"BuildContext\"\n        }\n      },\n      condaFile: {\n        serializedName: \"condaFile\",\n        type: {\n          name: \"String\"\n        }\n      },\n      environmentType: {\n        serializedName: \"environmentType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      image: {\n        serializedName: \"image\",\n        type: {\n          name: \"String\"\n        }\n      },\n      inferenceConfig: {\n        serializedName: \"inferenceConfig\",\n        type: {\n          name: \"Composite\",\n          className: \"InferenceContainerProperties\"\n        }\n      },\n      osType: {\n        serializedName: \"osType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ModelVersionProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ModelVersionProperties\",\n    modelProperties: {\n      ...AssetBase.type.modelProperties,\n      flavors: {\n        serializedName: \"flavors\",\n        nullable: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"Composite\", className: \"FlavorData\" } }\n        }\n      },\n      jobName: {\n        serializedName: \"jobName\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      modelType: {\n        serializedName: \"modelType\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      modelUri: {\n        serializedName: \"modelUri\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AzureBlobDatastore: coreClient.CompositeMapper = {\n  serializedName: \"AzureBlob\",\n  type: {\n    name: \"Composite\",\n    className: \"AzureBlobDatastore\",\n    uberParent: \"DatastoreProperties\",\n    polymorphicDiscriminator: DatastoreProperties.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...DatastoreProperties.type.modelProperties,\n      accountName: {\n        serializedName: \"accountName\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      containerName: {\n        serializedName: \"containerName\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      endpoint: {\n        serializedName: \"endpoint\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      protocol: {\n        serializedName: \"protocol\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      serviceDataAccessAuthIdentity: {\n        serializedName: \"serviceDataAccessAuthIdentity\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AzureDataLakeGen1Datastore: coreClient.CompositeMapper = {\n  serializedName: \"AzureDataLakeGen1\",\n  type: {\n    name: \"Composite\",\n    className: \"AzureDataLakeGen1Datastore\",\n    uberParent: \"DatastoreProperties\",\n    polymorphicDiscriminator: DatastoreProperties.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...DatastoreProperties.type.modelProperties,\n      serviceDataAccessAuthIdentity: {\n        serializedName: \"serviceDataAccessAuthIdentity\",\n        type: {\n          name: \"String\"\n        }\n      },\n      storeName: {\n        constraints: {\n          Pattern: new RegExp(\"[a-zA-Z0-9_]\")\n        },\n        serializedName: \"storeName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AzureDataLakeGen2Datastore: coreClient.CompositeMapper = {\n  serializedName: \"AzureDataLakeGen2\",\n  type: {\n    name: \"Composite\",\n    className: \"AzureDataLakeGen2Datastore\",\n    uberParent: \"DatastoreProperties\",\n    polymorphicDiscriminator: DatastoreProperties.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...DatastoreProperties.type.modelProperties,\n      accountName: {\n        constraints: {\n          Pattern: new RegExp(\"[a-zA-Z0-9_]\")\n        },\n        serializedName: \"accountName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      endpoint: {\n        serializedName: \"endpoint\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      filesystem: {\n        constraints: {\n          Pattern: new RegExp(\"[a-zA-Z0-9_]\")\n        },\n        serializedName: \"filesystem\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      protocol: {\n        serializedName: \"protocol\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      serviceDataAccessAuthIdentity: {\n        serializedName: \"serviceDataAccessAuthIdentity\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AzureFileDatastore: coreClient.CompositeMapper = {\n  serializedName: \"AzureFile\",\n  type: {\n    name: \"Composite\",\n    className: \"AzureFileDatastore\",\n    uberParent: \"DatastoreProperties\",\n    polymorphicDiscriminator: DatastoreProperties.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...DatastoreProperties.type.modelProperties,\n      accountName: {\n        constraints: {\n          Pattern: new RegExp(\"[a-zA-Z0-9_]\")\n        },\n        serializedName: \"accountName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      endpoint: {\n        serializedName: \"endpoint\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fileShareName: {\n        constraints: {\n          Pattern: new RegExp(\"[a-zA-Z0-9_]\")\n        },\n        serializedName: \"fileShareName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      protocol: {\n        serializedName: \"protocol\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      serviceDataAccessAuthIdentity: {\n        serializedName: \"serviceDataAccessAuthIdentity\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AutoMLJob: coreClient.CompositeMapper = {\n  serializedName: \"AutoML\",\n  type: {\n    name: \"Composite\",\n    className: \"AutoMLJob\",\n    uberParent: \"JobBaseProperties\",\n    polymorphicDiscriminator: JobBaseProperties.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...JobBaseProperties.type.modelProperties,\n      environmentId: {\n        serializedName: \"environmentId\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      environmentVariables: {\n        serializedName: \"environmentVariables\",\n        nullable: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      outputs: {\n        serializedName: \"outputs\",\n        nullable: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"Composite\", className: \"JobOutput\" } }\n        }\n      },\n      resources: {\n        serializedName: \"resources\",\n        type: {\n          name: \"Composite\",\n          className: \"JobResourceConfiguration\"\n        }\n      },\n      taskDetails: {\n        serializedName: \"taskDetails\",\n        type: {\n          name: \"Composite\",\n          className: \"AutoMLVertical\"\n        }\n      }\n    }\n  }\n};\n\nexport const CommandJob: coreClient.CompositeMapper = {\n  serializedName: \"Command\",\n  type: {\n    name: \"Composite\",\n    className: \"CommandJob\",\n    uberParent: \"JobBaseProperties\",\n    polymorphicDiscriminator: JobBaseProperties.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...JobBaseProperties.type.modelProperties,\n      codeId: {\n        serializedName: \"codeId\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      command: {\n        constraints: {\n          Pattern: new RegExp(\"[a-zA-Z0-9_]\"),\n          MinLength: 1\n        },\n        serializedName: \"command\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      distribution: {\n        serializedName: \"distribution\",\n        type: {\n          name: \"Composite\",\n          className: \"DistributionConfiguration\"\n        }\n      },\n      environmentId: {\n        constraints: {\n          Pattern: new RegExp(\"[a-zA-Z0-9_]\")\n        },\n        serializedName: \"environmentId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      environmentVariables: {\n        serializedName: \"environmentVariables\",\n        nullable: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      inputs: {\n        serializedName: \"inputs\",\n        nullable: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"Composite\", className: \"JobInput\" } }\n        }\n      },\n      limits: {\n        serializedName: \"limits\",\n        type: {\n          name: \"Composite\",\n          className: \"CommandJobLimits\"\n        }\n      },\n      outputs: {\n        serializedName: \"outputs\",\n        nullable: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"Composite\", className: \"JobOutput\" } }\n        }\n      },\n      parameters: {\n        serializedName: \"parameters\",\n        readOnly: true,\n        nullable: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      resources: {\n        serializedName: \"resources\",\n        type: {\n          name: \"Composite\",\n          className: \"JobResourceConfiguration\"\n        }\n      }\n    }\n  }\n};\n\nexport const PipelineJob: coreClient.CompositeMapper = {\n  serializedName: \"Pipeline\",\n  type: {\n    name: \"Composite\",\n    className: \"PipelineJob\",\n    uberParent: \"JobBaseProperties\",\n    polymorphicDiscriminator: JobBaseProperties.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...JobBaseProperties.type.modelProperties,\n      inputs: {\n        serializedName: \"inputs\",\n        nullable: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"Composite\", className: \"JobInput\" } }\n        }\n      },\n      jobs: {\n        serializedName: \"jobs\",\n        nullable: true,\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n          }\n        }\n      },\n      outputs: {\n        serializedName: \"outputs\",\n        nullable: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"Composite\", className: \"JobOutput\" } }\n        }\n      },\n      settings: {\n        serializedName: \"settings\",\n        nullable: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      sourceJobId: {\n        serializedName: \"sourceJobId\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SweepJob: coreClient.CompositeMapper = {\n  serializedName: \"Sweep\",\n  type: {\n    name: \"Composite\",\n    className: \"SweepJob\",\n    uberParent: \"JobBaseProperties\",\n    polymorphicDiscriminator: JobBaseProperties.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...JobBaseProperties.type.modelProperties,\n      earlyTermination: {\n        serializedName: \"earlyTermination\",\n        type: {\n          name: \"Composite\",\n          className: \"EarlyTerminationPolicy\"\n        }\n      },\n      inputs: {\n        serializedName: \"inputs\",\n        nullable: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"Composite\", className: \"JobInput\" } }\n        }\n      },\n      limits: {\n        serializedName: \"limits\",\n        type: {\n          name: \"Composite\",\n          className: \"SweepJobLimits\"\n        }\n      },\n      objective: {\n        serializedName: \"objective\",\n        type: {\n          name: \"Composite\",\n          className: \"Objective\"\n        }\n      },\n      outputs: {\n        serializedName: \"outputs\",\n        nullable: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"Composite\", className: \"JobOutput\" } }\n        }\n      },\n      samplingAlgorithm: {\n        serializedName: \"samplingAlgorithm\",\n        type: {\n          name: \"Composite\",\n          className: \"SamplingAlgorithm\"\n        }\n      },\n      searchSpace: {\n        serializedName: \"searchSpace\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      trial: {\n        serializedName: \"trial\",\n        type: {\n          name: \"Composite\",\n          className: \"TrialComponent\"\n        }\n      }\n    }\n  }\n};\n\nexport const MLTableData: coreClient.CompositeMapper = {\n  serializedName: \"mltable\",\n  type: {\n    name: \"Composite\",\n    className: \"MLTableData\",\n    uberParent: \"DataVersionBaseProperties\",\n    polymorphicDiscriminator:\n      DataVersionBaseProperties.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...DataVersionBaseProperties.type.modelProperties,\n      referencedUris: {\n        serializedName: \"referencedUris\",\n        nullable: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const UriFileDataVersion: coreClient.CompositeMapper = {\n  serializedName: \"uri_file\",\n  type: {\n    name: \"Composite\",\n    className: \"UriFileDataVersion\",\n    uberParent: \"DataVersionBaseProperties\",\n    polymorphicDiscriminator:\n      DataVersionBaseProperties.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...DataVersionBaseProperties.type.modelProperties\n    }\n  }\n};\n\nexport const UriFolderDataVersion: coreClient.CompositeMapper = {\n  serializedName: \"uri_folder\",\n  type: {\n    name: \"Composite\",\n    className: \"UriFolderDataVersion\",\n    uberParent: \"DataVersionBaseProperties\",\n    polymorphicDiscriminator:\n      DataVersionBaseProperties.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...DataVersionBaseProperties.type.modelProperties\n    }\n  }\n};\n\nexport const WorkspacesDiagnoseHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WorkspacesDiagnoseHeaders\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retryAfter: {\n        constraints: {\n          InclusiveMaximum: 600,\n          InclusiveMinimum: 10\n        },\n        serializedName: \"retry-after\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeCreateOrUpdateHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ComputeCreateOrUpdateHeaders\",\n    modelProperties: {\n      azureAsyncOperation: {\n        serializedName: \"azure-asyncoperation\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeDeleteHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ComputeDeleteHeaders\",\n    modelProperties: {\n      azureAsyncOperation: {\n        serializedName: \"azure-asyncoperation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BatchEndpointsDeleteHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BatchEndpointsDeleteHeaders\",\n    modelProperties: {\n      xMsAsyncOperationTimeout: {\n        serializedName: \"x-ms-async-operation-timeout\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retryAfter: {\n        constraints: {\n          InclusiveMaximum: 600,\n          InclusiveMinimum: 10\n        },\n        serializedName: \"retry-after\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const BatchEndpointsUpdateHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BatchEndpointsUpdateHeaders\",\n    modelProperties: {\n      xMsAsyncOperationTimeout: {\n        serializedName: \"x-ms-async-operation-timeout\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retryAfter: {\n        constraints: {\n          InclusiveMaximum: 600,\n          InclusiveMinimum: 10\n        },\n        serializedName: \"retry-after\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const BatchEndpointsCreateOrUpdateHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BatchEndpointsCreateOrUpdateHeaders\",\n    modelProperties: {\n      xMsAsyncOperationTimeout: {\n        serializedName: \"x-ms-async-operation-timeout\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      },\n      azureAsyncOperation: {\n        serializedName: \"azure-asyncoperation\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BatchDeploymentsDeleteHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BatchDeploymentsDeleteHeaders\",\n    modelProperties: {\n      xMsAsyncOperationTimeout: {\n        serializedName: \"x-ms-async-operation-timeout\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retryAfter: {\n        constraints: {\n          InclusiveMaximum: 600,\n          InclusiveMinimum: 10\n        },\n        serializedName: \"retry-after\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const BatchDeploymentsUpdateHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BatchDeploymentsUpdateHeaders\",\n    modelProperties: {\n      xMsAsyncOperationTimeout: {\n        serializedName: \"x-ms-async-operation-timeout\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retryAfter: {\n        constraints: {\n          InclusiveMaximum: 600,\n          InclusiveMinimum: 10\n        },\n        serializedName: \"retry-after\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const BatchDeploymentsCreateOrUpdateHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BatchDeploymentsCreateOrUpdateHeaders\",\n    modelProperties: {\n      xMsAsyncOperationTimeout: {\n        serializedName: \"x-ms-async-operation-timeout\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      },\n      azureAsyncOperation: {\n        serializedName: \"azure-asyncoperation\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const JobsDeleteHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"JobsDeleteHeaders\",\n    modelProperties: {\n      xMsAsyncOperationTimeout: {\n        serializedName: \"x-ms-async-operation-timeout\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retryAfter: {\n        constraints: {\n          InclusiveMaximum: 600,\n          InclusiveMinimum: 10\n        },\n        serializedName: \"retry-after\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const JobsCancelHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"JobsCancelHeaders\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retryAfter: {\n        constraints: {\n          InclusiveMaximum: 600,\n          InclusiveMinimum: 10\n        },\n        serializedName: \"retry-after\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const OnlineEndpointsDeleteHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OnlineEndpointsDeleteHeaders\",\n    modelProperties: {\n      xMsAsyncOperationTimeout: {\n        serializedName: \"x-ms-async-operation-timeout\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retryAfter: {\n        constraints: {\n          InclusiveMaximum: 600,\n          InclusiveMinimum: 10\n        },\n        serializedName: \"retry-after\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const OnlineEndpointsUpdateHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OnlineEndpointsUpdateHeaders\",\n    modelProperties: {\n      xMsAsyncOperationTimeout: {\n        serializedName: \"x-ms-async-operation-timeout\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retryAfter: {\n        constraints: {\n          InclusiveMaximum: 600,\n          InclusiveMinimum: 10\n        },\n        serializedName: \"retry-after\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const OnlineEndpointsCreateOrUpdateHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OnlineEndpointsCreateOrUpdateHeaders\",\n    modelProperties: {\n      xMsAsyncOperationTimeout: {\n        serializedName: \"x-ms-async-operation-timeout\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      },\n      azureAsyncOperation: {\n        serializedName: \"azure-asyncoperation\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OnlineEndpointsRegenerateKeysHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OnlineEndpointsRegenerateKeysHeaders\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retryAfter: {\n        constraints: {\n          InclusiveMaximum: 600,\n          InclusiveMinimum: 10\n        },\n        serializedName: \"retry-after\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const OnlineDeploymentsDeleteHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OnlineDeploymentsDeleteHeaders\",\n    modelProperties: {\n      xMsAsyncOperationTimeout: {\n        serializedName: \"x-ms-async-operation-timeout\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retryAfter: {\n        constraints: {\n          InclusiveMaximum: 600,\n          InclusiveMinimum: 10\n        },\n        serializedName: \"retry-after\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const OnlineDeploymentsUpdateHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OnlineDeploymentsUpdateHeaders\",\n    modelProperties: {\n      xMsAsyncOperationTimeout: {\n        serializedName: \"x-ms-async-operation-timeout\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retryAfter: {\n        constraints: {\n          InclusiveMaximum: 600,\n          InclusiveMinimum: 10\n        },\n        serializedName: \"retry-after\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const OnlineDeploymentsCreateOrUpdateHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OnlineDeploymentsCreateOrUpdateHeaders\",\n    modelProperties: {\n      xMsAsyncOperationTimeout: {\n        serializedName: \"x-ms-async-operation-timeout\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      },\n      azureAsyncOperation: {\n        serializedName: \"azure-asyncoperation\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SchedulesDeleteHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SchedulesDeleteHeaders\",\n    modelProperties: {\n      xMsAsyncOperationTimeout: {\n        serializedName: \"x-ms-async-operation-timeout\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retryAfter: {\n        constraints: {\n          InclusiveMaximum: 600,\n          InclusiveMinimum: 10\n        },\n        serializedName: \"retry-after\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const SchedulesCreateOrUpdateHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SchedulesCreateOrUpdateHeaders\",\n    modelProperties: {\n      xMsAsyncOperationTimeout: {\n        serializedName: \"x-ms-async-operation-timeout\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      },\n      azureAsyncOperation: {\n        serializedName: \"azure-asyncoperation\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport let discriminators = {\n  Compute: Compute,\n  ComputeSecrets: ComputeSecrets,\n  WorkspaceConnectionPropertiesV2: WorkspaceConnectionPropertiesV2,\n  AssetReferenceBase: AssetReferenceBase,\n  DatastoreCredentials: DatastoreCredentials,\n  DatastoreSecrets: DatastoreSecrets,\n  IdentityConfiguration: IdentityConfiguration,\n  OnlineScaleSettings: OnlineScaleSettings,\n  ScheduleActionBase: ScheduleActionBase,\n  TriggerBase: TriggerBase,\n  ForecastHorizon: ForecastHorizon,\n  JobOutput: JobOutput,\n  AutoMLVertical: AutoMLVertical,\n  JobInput: JobInput,\n  NCrossValidations: NCrossValidations,\n  Seasonality: Seasonality,\n  TargetLags: TargetLags,\n  TargetRollingWindowSize: TargetRollingWindowSize,\n  EarlyTerminationPolicy: EarlyTerminationPolicy,\n  SamplingAlgorithm: SamplingAlgorithm,\n  DistributionConfiguration: DistributionConfiguration,\n  JobLimits: JobLimits,\n  \"Compute.AKS\": Aks,\n  \"Compute.Kubernetes\": Kubernetes,\n  \"Compute.AmlCompute\": AmlCompute,\n  \"Compute.ComputeInstance\": ComputeInstance,\n  \"Compute.VirtualMachine\": VirtualMachine,\n  \"Compute.HDInsight\": HDInsight,\n  \"Compute.DataFactory\": DataFactory,\n  \"Compute.Databricks\": Databricks,\n  \"Compute.DataLakeAnalytics\": DataLakeAnalytics,\n  \"Compute.SynapseSpark\": SynapseSpark,\n  \"ComputeSecrets.AKS\": AksComputeSecrets,\n  \"ComputeSecrets.VirtualMachine\": VirtualMachineSecrets,\n  \"ComputeSecrets.Databricks\": DatabricksComputeSecrets,\n  \"WorkspaceConnectionPropertiesV2.PAT\": PATAuthTypeWorkspaceConnectionProperties,\n  \"WorkspaceConnectionPropertiesV2.SAS\": SASAuthTypeWorkspaceConnectionProperties,\n  \"WorkspaceConnectionPropertiesV2.UsernamePassword\": UsernamePasswordAuthTypeWorkspaceConnectionProperties,\n  \"WorkspaceConnectionPropertiesV2.None\": NoneAuthTypeWorkspaceConnectionProperties,\n  \"WorkspaceConnectionPropertiesV2.ManagedIdentity\": ManagedIdentityAuthTypeWorkspaceConnectionProperties,\n  \"AssetReferenceBase.DataPath\": DataPathAssetReference,\n  \"AssetReferenceBase.Id\": IdAssetReference,\n  \"AssetReferenceBase.OutputPath\": OutputPathAssetReference,\n  \"EndpointDeploymentPropertiesBase.OnlineDeploymentProperties\": OnlineDeploymentProperties,\n  \"ResourceBase.DatastoreProperties\": DatastoreProperties,\n  \"ResourceBase.JobBaseProperties\": JobBaseProperties,\n  \"DatastoreCredentials.AccountKey\": AccountKeyDatastoreCredentials,\n  \"DatastoreCredentials.Certificate\": CertificateDatastoreCredentials,\n  \"DatastoreCredentials.None\": NoneDatastoreCredentials,\n  \"DatastoreCredentials.Sas\": SasDatastoreCredentials,\n  \"DatastoreCredentials.ServicePrincipal\": ServicePrincipalDatastoreCredentials,\n  \"DatastoreSecrets.AccountKey\": AccountKeyDatastoreSecrets,\n  \"DatastoreSecrets.Certificate\": CertificateDatastoreSecrets,\n  \"DatastoreSecrets.Sas\": SasDatastoreSecrets,\n  \"DatastoreSecrets.ServicePrincipal\": ServicePrincipalDatastoreSecrets,\n  \"IdentityConfiguration.AMLToken\": AmlToken,\n  \"IdentityConfiguration.Managed\": ManagedIdentity,\n  \"IdentityConfiguration.UserIdentity\": UserIdentity,\n  \"OnlineScaleSettings.Default\": DefaultScaleSettings,\n  \"OnlineScaleSettings.TargetUtilization\": TargetUtilizationScaleSettings,\n  \"ScheduleActionBase.InvokeBatchEndpoint\": EndpointScheduleAction,\n  \"ScheduleActionBase.CreateJob\": JobScheduleAction,\n  \"TriggerBase.Recurrence\": RecurrenceTrigger,\n  \"TriggerBase.Cron\": CronTrigger,\n  \"AssetJobInput.mltable\": MLTableJobInput,\n  \"AssetJobInput.custom_model\": CustomModelJobInput,\n  \"AssetJobInput.mlflow_model\": MLFlowModelJobInput,\n  \"AssetJobInput.triton_model\": TritonModelJobInput,\n  \"AssetJobInput.uri_file\": UriFileJobInput,\n  \"AssetJobInput.uri_folder\": UriFolderJobInput,\n  \"AssetJobOutput.custom_model\": CustomModelJobOutput,\n  \"AssetJobOutput.mlflow_model\": MLFlowModelJobOutput,\n  \"AssetJobOutput.mltable\": MLTableJobOutput,\n  \"AssetJobOutput.triton_model\": TritonModelJobOutput,\n  \"AssetJobOutput.uri_file\": UriFileJobOutput,\n  \"AssetJobOutput.uri_folder\": UriFolderJobOutput,\n  \"ForecastHorizon.Auto\": AutoForecastHorizon,\n  \"ForecastHorizon.Custom\": CustomForecastHorizon,\n  \"TableVertical.Classification\": Classification,\n  \"TableVertical.Forecasting\": Forecasting,\n  \"ImageClassificationBase.ImageClassification\": ImageClassification,\n  \"ImageClassificationBase.ImageClassificationMultilabel\": ImageClassificationMultilabel,\n  \"ImageObjectDetectionBase.ImageInstanceSegmentation\": ImageInstanceSegmentation,\n  \"ImageObjectDetectionBase.ImageObjectDetection\": ImageObjectDetection,\n  \"TableVertical.Regression\": Regression,\n  \"NlpVertical.TextClassification\": TextClassification,\n  \"NlpVertical.TextClassificationMultilabel\": TextClassificationMultilabel,\n  \"NlpVertical.TextNER\": TextNer,\n  \"JobInput.literal\": LiteralJobInput,\n  \"NCrossValidations.Auto\": AutoNCrossValidations,\n  \"NCrossValidations.Custom\": CustomNCrossValidations,\n  \"Seasonality.Auto\": AutoSeasonality,\n  \"Seasonality.Custom\": CustomSeasonality,\n  \"TargetLags.Auto\": AutoTargetLags,\n  \"TargetLags.Custom\": CustomTargetLags,\n  \"TargetRollingWindowSize.Auto\": AutoTargetRollingWindowSize,\n  \"TargetRollingWindowSize.Custom\": CustomTargetRollingWindowSize,\n  \"EarlyTerminationPolicy.Bandit\": BanditPolicy,\n  \"EarlyTerminationPolicy.MedianStopping\": MedianStoppingPolicy,\n  \"EarlyTerminationPolicy.TruncationSelection\": TruncationSelectionPolicy,\n  \"SamplingAlgorithm.Bayesian\": BayesianSamplingAlgorithm,\n  \"SamplingAlgorithm.Grid\": GridSamplingAlgorithm,\n  \"SamplingAlgorithm.Random\": RandomSamplingAlgorithm,\n  \"DistributionConfiguration.Mpi\": Mpi,\n  \"DistributionConfiguration.PyTorch\": PyTorch,\n  \"DistributionConfiguration.TensorFlow\": TensorFlow,\n  \"JobLimits.Command\": CommandJobLimits,\n  \"JobLimits.Sweep\": SweepJobLimits,\n  \"OnlineDeploymentProperties.Kubernetes\": KubernetesOnlineDeployment,\n  \"OnlineDeploymentProperties.Managed\": ManagedOnlineDeployment,\n  \"AssetBase.DataVersionBaseProperties\": DataVersionBaseProperties,\n  \"DatastoreProperties.AzureBlob\": AzureBlobDatastore,\n  \"DatastoreProperties.AzureDataLakeGen1\": AzureDataLakeGen1Datastore,\n  \"DatastoreProperties.AzureDataLakeGen2\": AzureDataLakeGen2Datastore,\n  \"DatastoreProperties.AzureFile\": AzureFileDatastore,\n  \"JobBaseProperties.AutoML\": AutoMLJob,\n  \"JobBaseProperties.Command\": CommandJob,\n  \"JobBaseProperties.Pipeline\": PipelineJob,\n  \"JobBaseProperties.Sweep\": SweepJob,\n  \"DataVersionBaseProperties.mltable\": MLTableData,\n  \"DataVersionBaseProperties.uri_file\": UriFileDataVersion,\n  \"DataVersionBaseProperties.uri_folder\": UriFolderDataVersion\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter\n} from \"@azure/core-client\";\nimport {\n  Workspace as WorkspaceMapper,\n  WorkspaceUpdateParameters as WorkspaceUpdateParametersMapper,\n  DiagnoseWorkspaceParameters as DiagnoseWorkspaceParametersMapper,\n  QuotaUpdateParameters as QuotaUpdateParametersMapper,\n  ComputeResource as ComputeResourceMapper,\n  ClusterUpdateParameters as ClusterUpdateParametersMapper,\n  PrivateEndpointConnection as PrivateEndpointConnectionMapper,\n  WorkspaceConnectionPropertiesV2BasicResource as WorkspaceConnectionPropertiesV2BasicResourceMapper,\n  PartialMinimalTrackedResourceWithIdentity as PartialMinimalTrackedResourceWithIdentityMapper,\n  BatchEndpoint as BatchEndpointMapper,\n  PartialBatchDeploymentPartialMinimalTrackedResourceWithProperties as PartialBatchDeploymentPartialMinimalTrackedResourceWithPropertiesMapper,\n  BatchDeployment as BatchDeploymentMapper,\n  CodeContainer as CodeContainerMapper,\n  CodeVersion as CodeVersionMapper,\n  ComponentContainer as ComponentContainerMapper,\n  ComponentVersion as ComponentVersionMapper,\n  DataContainer as DataContainerMapper,\n  DataVersionBase as DataVersionBaseMapper,\n  Datastore as DatastoreMapper,\n  EnvironmentContainer as EnvironmentContainerMapper,\n  EnvironmentVersion as EnvironmentVersionMapper,\n  JobBase as JobBaseMapper,\n  ModelContainer as ModelContainerMapper,\n  ModelVersion as ModelVersionMapper,\n  OnlineEndpoint as OnlineEndpointMapper,\n  RegenerateEndpointKeysRequest as RegenerateEndpointKeysRequestMapper,\n  PartialMinimalTrackedResourceWithSku as PartialMinimalTrackedResourceWithSkuMapper,\n  OnlineDeployment as OnlineDeploymentMapper,\n  DeploymentLogsRequest as DeploymentLogsRequestMapper,\n  Schedule as ScheduleMapper\n} from \"../models/mappers\";\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2022-10-01\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const subscriptionId: OperationURLParameter = {\n  parameterPath: \"subscriptionId\",\n  mapper: {\n    constraints: {\n      MinLength: 1\n    },\n    serializedName: \"subscriptionId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const resourceGroupName: OperationURLParameter = {\n  parameterPath: \"resourceGroupName\",\n  mapper: {\n    constraints: {\n      MaxLength: 90,\n      MinLength: 1\n    },\n    serializedName: \"resourceGroupName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const workspaceName: OperationURLParameter = {\n  parameterPath: \"workspaceName\",\n  mapper: {\n    serializedName: \"workspaceName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: WorkspaceMapper\n};\n\nexport const parameters1: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: WorkspaceUpdateParametersMapper\n};\n\nexport const skip: OperationQueryParameter = {\n  parameterPath: [\"options\", \"skip\"],\n  mapper: {\n    serializedName: \"$skip\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters2: OperationParameter = {\n  parameterPath: [\"options\", \"parameters\"],\n  mapper: DiagnoseWorkspaceParametersMapper\n};\n\nexport const nextLink: OperationURLParameter = {\n  parameterPath: \"nextLink\",\n  mapper: {\n    serializedName: \"nextLink\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const location: OperationURLParameter = {\n  parameterPath: \"location\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[-\\\\w\\\\._]+$\")\n    },\n    serializedName: \"location\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters3: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: QuotaUpdateParametersMapper\n};\n\nexport const computeName: OperationURLParameter = {\n  parameterPath: \"computeName\",\n  mapper: {\n    serializedName: \"computeName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters4: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ComputeResourceMapper\n};\n\nexport const parameters5: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ClusterUpdateParametersMapper\n};\n\nexport const underlyingResourceAction: OperationQueryParameter = {\n  parameterPath: \"underlyingResourceAction\",\n  mapper: {\n    serializedName: \"underlyingResourceAction\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const privateEndpointConnectionName: OperationURLParameter = {\n  parameterPath: \"privateEndpointConnectionName\",\n  mapper: {\n    serializedName: \"privateEndpointConnectionName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const properties: OperationParameter = {\n  parameterPath: \"properties\",\n  mapper: PrivateEndpointConnectionMapper\n};\n\nexport const parameters6: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: WorkspaceConnectionPropertiesV2BasicResourceMapper\n};\n\nexport const connectionName: OperationURLParameter = {\n  parameterPath: \"connectionName\",\n  mapper: {\n    serializedName: \"connectionName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const target: OperationQueryParameter = {\n  parameterPath: [\"options\", \"target\"],\n  mapper: {\n    serializedName: \"target\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const category: OperationQueryParameter = {\n  parameterPath: [\"options\", \"category\"],\n  mapper: {\n    serializedName: \"category\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const count: OperationQueryParameter = {\n  parameterPath: [\"options\", \"count\"],\n  mapper: {\n    serializedName: \"count\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const endpointName: OperationURLParameter = {\n  parameterPath: \"endpointName\",\n  mapper: {\n    serializedName: \"endpointName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const body: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: PartialMinimalTrackedResourceWithIdentityMapper\n};\n\nexport const endpointName1: OperationURLParameter = {\n  parameterPath: \"endpointName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[a-zA-Z0-9][a-zA-Z0-9\\\\-_]{0,254}$\")\n    },\n    serializedName: \"endpointName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const body1: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: BatchEndpointMapper\n};\n\nexport const orderBy: OperationQueryParameter = {\n  parameterPath: [\"options\", \"orderBy\"],\n  mapper: {\n    serializedName: \"$orderBy\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const top: OperationQueryParameter = {\n  parameterPath: [\"options\", \"top\"],\n  mapper: {\n    serializedName: \"$top\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const deploymentName: OperationURLParameter = {\n  parameterPath: \"deploymentName\",\n  mapper: {\n    serializedName: \"deploymentName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const body2: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: PartialBatchDeploymentPartialMinimalTrackedResourceWithPropertiesMapper\n};\n\nexport const deploymentName1: OperationURLParameter = {\n  parameterPath: \"deploymentName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[a-zA-Z0-9][a-zA-Z0-9\\\\-_]{0,254}$\")\n    },\n    serializedName: \"deploymentName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const body3: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: BatchDeploymentMapper\n};\n\nexport const name: OperationURLParameter = {\n  parameterPath: \"name\",\n  mapper: {\n    serializedName: \"name\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const body4: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: CodeContainerMapper\n};\n\nexport const name1: OperationURLParameter = {\n  parameterPath: \"name\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[a-zA-Z0-9][a-zA-Z0-9\\\\-_]{0,254}$\")\n    },\n    serializedName: \"name\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const version: OperationURLParameter = {\n  parameterPath: \"version\",\n  mapper: {\n    serializedName: \"version\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const body5: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: CodeVersionMapper\n};\n\nexport const listViewType: OperationQueryParameter = {\n  parameterPath: [\"options\", \"listViewType\"],\n  mapper: {\n    serializedName: \"listViewType\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const body6: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: ComponentContainerMapper\n};\n\nexport const body7: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: ComponentVersionMapper\n};\n\nexport const body8: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: DataContainerMapper\n};\n\nexport const tags: OperationQueryParameter = {\n  parameterPath: [\"options\", \"tags\"],\n  mapper: {\n    serializedName: \"$tags\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const body9: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: DataVersionBaseMapper\n};\n\nexport const count1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"count\"],\n  mapper: {\n    defaultValue: 30,\n    serializedName: \"count\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const isDefault: OperationQueryParameter = {\n  parameterPath: [\"options\", \"isDefault\"],\n  mapper: {\n    serializedName: \"isDefault\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\n\nexport const names: OperationQueryParameter = {\n  parameterPath: [\"options\", \"names\"],\n  mapper: {\n    serializedName: \"names\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  },\n  collectionFormat: \"CSV\"\n};\n\nexport const searchText: OperationQueryParameter = {\n  parameterPath: [\"options\", \"searchText\"],\n  mapper: {\n    serializedName: \"searchText\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const orderBy1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"orderBy\"],\n  mapper: {\n    serializedName: \"orderBy\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const orderByAsc: OperationQueryParameter = {\n  parameterPath: [\"options\", \"orderByAsc\"],\n  mapper: {\n    defaultValue: false,\n    serializedName: \"orderByAsc\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\n\nexport const body10: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: DatastoreMapper\n};\n\nexport const skipValidation: OperationQueryParameter = {\n  parameterPath: [\"options\", \"skipValidation\"],\n  mapper: {\n    defaultValue: false,\n    serializedName: \"skipValidation\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\n\nexport const body11: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: EnvironmentContainerMapper\n};\n\nexport const body12: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: EnvironmentVersionMapper\n};\n\nexport const jobType: OperationQueryParameter = {\n  parameterPath: [\"options\", \"jobType\"],\n  mapper: {\n    serializedName: \"jobType\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const tag: OperationQueryParameter = {\n  parameterPath: [\"options\", \"tag\"],\n  mapper: {\n    serializedName: \"tag\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const id: OperationURLParameter = {\n  parameterPath: \"id\",\n  mapper: {\n    serializedName: \"id\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const body13: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: JobBaseMapper\n};\n\nexport const id1: OperationURLParameter = {\n  parameterPath: \"id\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[a-zA-Z0-9][a-zA-Z0-9\\\\-_]{0,254}$\")\n    },\n    serializedName: \"id\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const body14: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: ModelContainerMapper\n};\n\nexport const version1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"version\"],\n  mapper: {\n    serializedName: \"version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const description: OperationQueryParameter = {\n  parameterPath: [\"options\", \"description\"],\n  mapper: {\n    serializedName: \"description\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const offset: OperationQueryParameter = {\n  parameterPath: [\"options\", \"offset\"],\n  mapper: {\n    serializedName: \"offset\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const tags1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"tags\"],\n  mapper: {\n    serializedName: \"tags\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const properties1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"properties\"],\n  mapper: {\n    serializedName: \"properties\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const feed: OperationQueryParameter = {\n  parameterPath: [\"options\", \"feed\"],\n  mapper: {\n    serializedName: \"feed\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const body15: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: ModelVersionMapper\n};\n\nexport const name2: OperationQueryParameter = {\n  parameterPath: [\"options\", \"name\"],\n  mapper: {\n    serializedName: \"name\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const computeType: OperationQueryParameter = {\n  parameterPath: [\"options\", \"computeType\"],\n  mapper: {\n    serializedName: \"computeType\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const orderBy2: OperationQueryParameter = {\n  parameterPath: [\"options\", \"orderBy\"],\n  mapper: {\n    serializedName: \"orderBy\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const body16: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: OnlineEndpointMapper\n};\n\nexport const body17: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: RegenerateEndpointKeysRequestMapper\n};\n\nexport const body18: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: PartialMinimalTrackedResourceWithSkuMapper\n};\n\nexport const body19: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: OnlineDeploymentMapper\n};\n\nexport const body20: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: DeploymentLogsRequestMapper\n};\n\nexport const listViewType1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"listViewType\"],\n  mapper: {\n    serializedName: \"listViewType\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const body21: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: ScheduleMapper\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { Operations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureMachineLearningWorkspaces } from \"../azureMachineLearningWorkspaces\";\nimport {\n  AmlOperation,\n  OperationsListOptionalParams,\n  OperationsListResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Operations operations. */\nexport class OperationsImpl implements Operations {\n  private readonly client: AzureMachineLearningWorkspaces;\n\n  /**\n   * Initialize a new instance of the class Operations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureMachineLearningWorkspaces) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all of the available Azure Machine Learning Workspaces REST API operations.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: OperationsListOptionalParams\n  ): PagedAsyncIterableIterator<AmlOperation> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: OperationsListOptionalParams,\n    _settings?: PageSettings\n  ): AsyncIterableIterator<AmlOperation[]> {\n    let result: OperationsListResponse;\n    result = await this._list(options);\n    yield result.value || [];\n  }\n\n  private async *listPagingAll(\n    options?: OperationsListOptionalParams\n  ): AsyncIterableIterator<AmlOperation> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all of the available Azure Machine Learning Workspaces REST API operations.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: OperationsListOptionalParams\n  ): Promise<OperationsListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.MachineLearningServices/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AmlOperationListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { LongRunningOperation, LroResponse } from \"@azure/core-lro\";\n\nexport class LroImpl<T> implements LongRunningOperation<T> {\n  constructor(\n    private sendOperationFn: (args: any, spec: any) => Promise<LroResponse<T>>,\n    private args: Record<string, unknown>,\n    private spec: {\n      readonly requestBody?: unknown;\n      readonly path?: string;\n      readonly httpMethod: string;\n    } & Record<string, any>,\n    public requestPath: string = spec.path!,\n    public requestMethod: string = spec.httpMethod\n  ) {}\n  public async sendInitialRequest(): Promise<LroResponse<T>> {\n    return this.sendOperationFn(this.args, this.spec);\n  }\n  public async sendPollRequest(path: string): Promise<LroResponse<T>> {\n    const { requestBody, ...restSpec } = this.spec;\n    return this.sendOperationFn(this.args, {\n      ...restSpec,\n      path,\n      httpMethod: \"GET\"\n    });\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Workspaces } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureMachineLearningWorkspaces } from \"../azureMachineLearningWorkspaces\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  Workspace,\n  WorkspacesListByResourceGroupNextOptionalParams,\n  WorkspacesListByResourceGroupOptionalParams,\n  WorkspacesListByResourceGroupResponse,\n  WorkspacesListBySubscriptionNextOptionalParams,\n  WorkspacesListBySubscriptionOptionalParams,\n  WorkspacesListBySubscriptionResponse,\n  WorkspacesGetOptionalParams,\n  WorkspacesGetResponse,\n  WorkspacesCreateOrUpdateOptionalParams,\n  WorkspacesCreateOrUpdateResponse,\n  WorkspacesDeleteOptionalParams,\n  WorkspaceUpdateParameters,\n  WorkspacesUpdateOptionalParams,\n  WorkspacesUpdateResponse,\n  WorkspacesDiagnoseOptionalParams,\n  WorkspacesDiagnoseResponse,\n  WorkspacesListKeysOptionalParams,\n  WorkspacesListKeysResponse,\n  WorkspacesResyncKeysOptionalParams,\n  WorkspacesListNotebookAccessTokenOptionalParams,\n  WorkspacesListNotebookAccessTokenResponse,\n  WorkspacesPrepareNotebookOptionalParams,\n  WorkspacesPrepareNotebookResponse,\n  WorkspacesListStorageAccountKeysOptionalParams,\n  WorkspacesListStorageAccountKeysResponse,\n  WorkspacesListNotebookKeysOptionalParams,\n  WorkspacesListNotebookKeysResponse,\n  WorkspacesListOutboundNetworkDependenciesEndpointsOptionalParams,\n  WorkspacesListOutboundNetworkDependenciesEndpointsResponse,\n  WorkspacesListByResourceGroupNextResponse,\n  WorkspacesListBySubscriptionNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Workspaces operations. */\nexport class WorkspacesImpl implements Workspaces {\n  private readonly client: AzureMachineLearningWorkspaces;\n\n  /**\n   * Initialize a new instance of the class Workspaces class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureMachineLearningWorkspaces) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all the available machine learning workspaces under the specified resource group.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  public listByResourceGroup(\n    resourceGroupName: string,\n    options?: WorkspacesListByResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<Workspace> {\n    const iter = this.listByResourceGroupPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByResourceGroupPagingPage(\n          resourceGroupName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: WorkspacesListByResourceGroupOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Workspace[]> {\n    let result: WorkspacesListByResourceGroupResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByResourceGroup(resourceGroupName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByResourceGroupNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: WorkspacesListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<Workspace> {\n    for await (const page of this.listByResourceGroupPagingPage(\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all the available machine learning workspaces under the specified subscription.\n   * @param options The options parameters.\n   */\n  public listBySubscription(\n    options?: WorkspacesListBySubscriptionOptionalParams\n  ): PagedAsyncIterableIterator<Workspace> {\n    const iter = this.listBySubscriptionPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listBySubscriptionPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listBySubscriptionPagingPage(\n    options?: WorkspacesListBySubscriptionOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Workspace[]> {\n    let result: WorkspacesListBySubscriptionResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listBySubscription(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listBySubscriptionNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listBySubscriptionPagingAll(\n    options?: WorkspacesListBySubscriptionOptionalParams\n  ): AsyncIterableIterator<Workspace> {\n    for await (const page of this.listBySubscriptionPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets the properties of the specified machine learning workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspacesGetOptionalParams\n  ): Promise<WorkspacesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a workspace with the specified parameters.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param parameters The parameters for creating or updating a machine learning workspace.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    parameters: Workspace,\n    options?: WorkspacesCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<WorkspacesCreateOrUpdateResponse>,\n      WorkspacesCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<WorkspacesCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates or updates a workspace with the specified parameters.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param parameters The parameters for creating or updating a machine learning workspace.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    parameters: Workspace,\n    options?: WorkspacesCreateOrUpdateOptionalParams\n  ): Promise<WorkspacesCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      workspaceName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes a machine learning workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspacesDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes a machine learning workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspacesDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      workspaceName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Updates a machine learning workspace with the specified parameters.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param parameters The parameters for updating a machine learning workspace.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    parameters: WorkspaceUpdateParameters,\n    options?: WorkspacesUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<WorkspacesUpdateResponse>,\n      WorkspacesUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<WorkspacesUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, parameters, options },\n      updateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Updates a machine learning workspace with the specified parameters.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param parameters The parameters for updating a machine learning workspace.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    parameters: WorkspaceUpdateParameters,\n    options?: WorkspacesUpdateOptionalParams\n  ): Promise<WorkspacesUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      workspaceName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Lists all the available machine learning workspaces under the specified resource group.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroup(\n    resourceGroupName: string,\n    options?: WorkspacesListByResourceGroupOptionalParams\n  ): Promise<WorkspacesListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listByResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Diagnose workspace setup issue.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  async beginDiagnose(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspacesDiagnoseOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<WorkspacesDiagnoseResponse>,\n      WorkspacesDiagnoseResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<WorkspacesDiagnoseResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, options },\n      diagnoseOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"location\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Diagnose workspace setup issue.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  async beginDiagnoseAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspacesDiagnoseOptionalParams\n  ): Promise<WorkspacesDiagnoseResponse> {\n    const poller = await this.beginDiagnose(\n      resourceGroupName,\n      workspaceName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Lists all the keys associated with this workspace. This includes keys for the storage account, app\n   * insights and password for container registry\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  listKeys(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspacesListKeysOptionalParams\n  ): Promise<WorkspacesListKeysResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listKeysOperationSpec\n    );\n  }\n\n  /**\n   * Resync all the keys associated with this workspace. This includes keys for the storage account, app\n   * insights and password for container registry\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  async beginResyncKeys(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspacesResyncKeysOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, options },\n      resyncKeysOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Resync all the keys associated with this workspace. This includes keys for the storage account, app\n   * insights and password for container registry\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  async beginResyncKeysAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspacesResyncKeysOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginResyncKeys(\n      resourceGroupName,\n      workspaceName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Lists all the available machine learning workspaces under the specified subscription.\n   * @param options The options parameters.\n   */\n  private _listBySubscription(\n    options?: WorkspacesListBySubscriptionOptionalParams\n  ): Promise<WorkspacesListBySubscriptionResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      listBySubscriptionOperationSpec\n    );\n  }\n\n  /**\n   * return notebook access token and refresh token\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  listNotebookAccessToken(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspacesListNotebookAccessTokenOptionalParams\n  ): Promise<WorkspacesListNotebookAccessTokenResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listNotebookAccessTokenOperationSpec\n    );\n  }\n\n  /**\n   * Prepare a notebook.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  async beginPrepareNotebook(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspacesPrepareNotebookOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<WorkspacesPrepareNotebookResponse>,\n      WorkspacesPrepareNotebookResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<WorkspacesPrepareNotebookResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, options },\n      prepareNotebookOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"location\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Prepare a notebook.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  async beginPrepareNotebookAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspacesPrepareNotebookOptionalParams\n  ): Promise<WorkspacesPrepareNotebookResponse> {\n    const poller = await this.beginPrepareNotebook(\n      resourceGroupName,\n      workspaceName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * List storage account keys of a workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  listStorageAccountKeys(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspacesListStorageAccountKeysOptionalParams\n  ): Promise<WorkspacesListStorageAccountKeysResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listStorageAccountKeysOperationSpec\n    );\n  }\n\n  /**\n   * List keys of a notebook.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  listNotebookKeys(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspacesListNotebookKeysOptionalParams\n  ): Promise<WorkspacesListNotebookKeysResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listNotebookKeysOperationSpec\n    );\n  }\n\n  /**\n   * Called by Client (Portal, CLI, etc) to get a list of all external outbound dependencies (FQDNs)\n   * programmatically.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  listOutboundNetworkDependenciesEndpoints(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspacesListOutboundNetworkDependenciesEndpointsOptionalParams\n  ): Promise<WorkspacesListOutboundNetworkDependenciesEndpointsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listOutboundNetworkDependenciesEndpointsOperationSpec\n    );\n  }\n\n  /**\n   * ListByResourceGroupNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: WorkspacesListByResourceGroupNextOptionalParams\n  ): Promise<WorkspacesListByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listByResourceGroupNextOperationSpec\n    );\n  }\n\n  /**\n   * ListBySubscriptionNext\n   * @param nextLink The nextLink from the previous successful call to the ListBySubscription method.\n   * @param options The options parameters.\n   */\n  private _listBySubscriptionNext(\n    nextLink: string,\n    options?: WorkspacesListBySubscriptionNextOptionalParams\n  ): Promise<WorkspacesListBySubscriptionNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listBySubscriptionNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Workspace\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Workspace\n    },\n    201: {\n      bodyMapper: Mappers.Workspace\n    },\n    202: {\n      bodyMapper: Mappers.Workspace\n    },\n    204: {\n      bodyMapper: Mappers.Workspace\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Workspace\n    },\n    201: {\n      bodyMapper: Mappers.Workspace\n    },\n    202: {\n      bodyMapper: Mappers.Workspace\n    },\n    204: {\n      bodyMapper: Mappers.Workspace\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkspaceListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.skip],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst diagnoseOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/diagnose\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DiagnoseResponseResult\n    },\n    201: {\n      bodyMapper: Mappers.DiagnoseResponseResult\n    },\n    202: {\n      bodyMapper: Mappers.DiagnoseResponseResult\n    },\n    204: {\n      bodyMapper: Mappers.DiagnoseResponseResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters2,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listKeysOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/listKeys\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListWorkspaceKeysResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst resyncKeysOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/resyncKeys\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listBySubscriptionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/workspaces\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkspaceListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.skip],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNotebookAccessTokenOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/listNotebookAccessToken\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NotebookAccessTokenResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst prepareNotebookOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/prepareNotebook\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NotebookResourceInfo\n    },\n    201: {\n      bodyMapper: Mappers.NotebookResourceInfo\n    },\n    202: {\n      bodyMapper: Mappers.NotebookResourceInfo\n    },\n    204: {\n      bodyMapper: Mappers.NotebookResourceInfo\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listStorageAccountKeysOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/listStorageAccountKeys\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListStorageAccountKeysResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNotebookKeysOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/listNotebookKeys\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListNotebookKeysResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOutboundNetworkDependenciesEndpointsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/outboundNetworkDependenciesEndpoints\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ExternalFqdnResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkspaceListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.skip],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listBySubscriptionNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkspaceListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.skip],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Usages } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureMachineLearningWorkspaces } from \"../azureMachineLearningWorkspaces\";\nimport {\n  Usage,\n  UsagesListNextOptionalParams,\n  UsagesListOptionalParams,\n  UsagesListResponse,\n  UsagesListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Usages operations. */\nexport class UsagesImpl implements Usages {\n  private readonly client: AzureMachineLearningWorkspaces;\n\n  /**\n   * Initialize a new instance of the class Usages class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureMachineLearningWorkspaces) {\n    this.client = client;\n  }\n\n  /**\n   * Gets the current usage information as well as limits for AML resources for given subscription and\n   * location.\n   * @param location The location for which resource usage is queried.\n   * @param options The options parameters.\n   */\n  public list(\n    location: string,\n    options?: UsagesListOptionalParams\n  ): PagedAsyncIterableIterator<Usage> {\n    const iter = this.listPagingAll(location, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(location, options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    location: string,\n    options?: UsagesListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Usage[]> {\n    let result: UsagesListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(location, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(location, continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    location: string,\n    options?: UsagesListOptionalParams\n  ): AsyncIterableIterator<Usage> {\n    for await (const page of this.listPagingPage(location, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets the current usage information as well as limits for AML resources for given subscription and\n   * location.\n   * @param location The location for which resource usage is queried.\n   * @param options The options parameters.\n   */\n  private _list(\n    location: string,\n    options?: UsagesListOptionalParams\n  ): Promise<UsagesListResponse> {\n    return this.client.sendOperationRequest(\n      { location, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param location The location for which resource usage is queried.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    location: string,\n    nextLink: string,\n    options?: UsagesListNextOptionalParams\n  ): Promise<UsagesListNextResponse> {\n    return this.client.sendOperationRequest(\n      { location, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/locations/{location}/usages\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListUsagesResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListUsagesResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.location\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { VirtualMachineSizes } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureMachineLearningWorkspaces } from \"../azureMachineLearningWorkspaces\";\nimport {\n  VirtualMachineSizesListOptionalParams,\n  VirtualMachineSizesListResponse\n} from \"../models\";\n\n/** Class containing VirtualMachineSizes operations. */\nexport class VirtualMachineSizesImpl implements VirtualMachineSizes {\n  private readonly client: AzureMachineLearningWorkspaces;\n\n  /**\n   * Initialize a new instance of the class VirtualMachineSizes class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureMachineLearningWorkspaces) {\n    this.client = client;\n  }\n\n  /**\n   * Returns supported VM Sizes in a location\n   * @param location The location upon which virtual-machine-sizes is queried.\n   * @param options The options parameters.\n   */\n  list(\n    location: string,\n    options?: VirtualMachineSizesListOptionalParams\n  ): Promise<VirtualMachineSizesListResponse> {\n    return this.client.sendOperationRequest(\n      { location, options },\n      listOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/locations/{location}/vmSizes\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineSizeListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Quotas } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureMachineLearningWorkspaces } from \"../azureMachineLearningWorkspaces\";\nimport {\n  ResourceQuota,\n  QuotasListNextOptionalParams,\n  QuotasListOptionalParams,\n  QuotasListResponse,\n  QuotaUpdateParameters,\n  QuotasUpdateOptionalParams,\n  QuotasUpdateResponse,\n  QuotasListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Quotas operations. */\nexport class QuotasImpl implements Quotas {\n  private readonly client: AzureMachineLearningWorkspaces;\n\n  /**\n   * Initialize a new instance of the class Quotas class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureMachineLearningWorkspaces) {\n    this.client = client;\n  }\n\n  /**\n   * Gets the currently assigned Workspace Quotas based on VMFamily.\n   * @param location The location for which resource usage is queried.\n   * @param options The options parameters.\n   */\n  public list(\n    location: string,\n    options?: QuotasListOptionalParams\n  ): PagedAsyncIterableIterator<ResourceQuota> {\n    const iter = this.listPagingAll(location, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(location, options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    location: string,\n    options?: QuotasListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ResourceQuota[]> {\n    let result: QuotasListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(location, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(location, continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    location: string,\n    options?: QuotasListOptionalParams\n  ): AsyncIterableIterator<ResourceQuota> {\n    for await (const page of this.listPagingPage(location, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Update quota for each VM family in workspace.\n   * @param location The location for update quota is queried.\n   * @param parameters Quota update parameters.\n   * @param options The options parameters.\n   */\n  update(\n    location: string,\n    parameters: QuotaUpdateParameters,\n    options?: QuotasUpdateOptionalParams\n  ): Promise<QuotasUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { location, parameters, options },\n      updateOperationSpec\n    );\n  }\n\n  /**\n   * Gets the currently assigned Workspace Quotas based on VMFamily.\n   * @param location The location for which resource usage is queried.\n   * @param options The options parameters.\n   */\n  private _list(\n    location: string,\n    options?: QuotasListOptionalParams\n  ): Promise<QuotasListResponse> {\n    return this.client.sendOperationRequest(\n      { location, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param location The location for which resource usage is queried.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    location: string,\n    nextLink: string,\n    options?: QuotasListNextOptionalParams\n  ): Promise<QuotasListNextResponse> {\n    return this.client.sendOperationRequest(\n      { location, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/locations/{location}/updateQuotas\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.UpdateWorkspaceQuotasResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters3,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/locations/{location}/quotas\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListWorkspaceQuotas\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListWorkspaceQuotas\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.location\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ComputeOperations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureMachineLearningWorkspaces } from \"../azureMachineLearningWorkspaces\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  ComputeResource,\n  ComputeListNextOptionalParams,\n  ComputeListOptionalParams,\n  ComputeListResponse,\n  AmlComputeNodeInformation,\n  ComputeListNodesNextOptionalParams,\n  ComputeListNodesOptionalParams,\n  ComputeListNodesResponse,\n  ComputeGetOptionalParams,\n  ComputeGetResponse,\n  ComputeCreateOrUpdateOptionalParams,\n  ComputeCreateOrUpdateResponse,\n  ClusterUpdateParameters,\n  ComputeUpdateOptionalParams,\n  ComputeUpdateResponse,\n  UnderlyingResourceAction,\n  ComputeDeleteOptionalParams,\n  ComputeListKeysOptionalParams,\n  ComputeListKeysResponse,\n  ComputeStartOptionalParams,\n  ComputeStopOptionalParams,\n  ComputeRestartOptionalParams,\n  ComputeListNextResponse,\n  ComputeListNodesNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ComputeOperations operations. */\nexport class ComputeOperationsImpl implements ComputeOperations {\n  private readonly client: AzureMachineLearningWorkspaces;\n\n  /**\n   * Initialize a new instance of the class ComputeOperations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureMachineLearningWorkspaces) {\n    this.client = client;\n  }\n\n  /**\n   * Gets computes in specified workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: ComputeListOptionalParams\n  ): PagedAsyncIterableIterator<ComputeResource> {\n    const iter = this.listPagingAll(resourceGroupName, workspaceName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          workspaceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: ComputeListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ComputeResource[]> {\n    let result: ComputeListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(resourceGroupName, workspaceName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        workspaceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: ComputeListOptionalParams\n  ): AsyncIterableIterator<ComputeResource> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      workspaceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get the details (e.g IP address, port etc) of all the compute nodes in the compute.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param computeName Name of the Azure Machine Learning compute.\n   * @param options The options parameters.\n   */\n  public listNodes(\n    resourceGroupName: string,\n    workspaceName: string,\n    computeName: string,\n    options?: ComputeListNodesOptionalParams\n  ): PagedAsyncIterableIterator<AmlComputeNodeInformation> {\n    const iter = this.listNodesPagingAll(\n      resourceGroupName,\n      workspaceName,\n      computeName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listNodesPagingPage(\n          resourceGroupName,\n          workspaceName,\n          computeName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listNodesPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    computeName: string,\n    options?: ComputeListNodesOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<AmlComputeNodeInformation[]> {\n    let result: ComputeListNodesResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listNodes(\n        resourceGroupName,\n        workspaceName,\n        computeName,\n        options\n      );\n      let page = result.nodes || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNodesNext(\n        resourceGroupName,\n        workspaceName,\n        computeName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.nodes || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listNodesPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    computeName: string,\n    options?: ComputeListNodesOptionalParams\n  ): AsyncIterableIterator<AmlComputeNodeInformation> {\n    for await (const page of this.listNodesPagingPage(\n      resourceGroupName,\n      workspaceName,\n      computeName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets computes in specified workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: ComputeListOptionalParams\n  ): Promise<ComputeListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Gets compute definition by its name. Any secrets (storage keys, service credentials, etc) are not\n   * returned - use 'keys' nested resource to get them.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param computeName Name of the Azure Machine Learning compute.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    computeName: string,\n    options?: ComputeGetOptionalParams\n  ): Promise<ComputeGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, computeName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates compute. This call will overwrite a compute if it exists. This is a\n   * nonrecoverable operation. If your intent is to create a new compute, do a GET first to verify that\n   * it does not exist yet.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param computeName Name of the Azure Machine Learning compute.\n   * @param parameters Payload with Machine Learning compute definition.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    computeName: string,\n    parameters: ComputeResource,\n    options?: ComputeCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<ComputeCreateOrUpdateResponse>,\n      ComputeCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ComputeCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, computeName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates or updates compute. This call will overwrite a compute if it exists. This is a\n   * nonrecoverable operation. If your intent is to create a new compute, do a GET first to verify that\n   * it does not exist yet.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param computeName Name of the Azure Machine Learning compute.\n   * @param parameters Payload with Machine Learning compute definition.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    computeName: string,\n    parameters: ComputeResource,\n    options?: ComputeCreateOrUpdateOptionalParams\n  ): Promise<ComputeCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      workspaceName,\n      computeName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Updates properties of a compute. This call will overwrite a compute if it exists. This is a\n   * nonrecoverable operation.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param computeName Name of the Azure Machine Learning compute.\n   * @param parameters Additional parameters for cluster update.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    computeName: string,\n    parameters: ClusterUpdateParameters,\n    options?: ComputeUpdateOptionalParams\n  ): Promise<\n    PollerLike<PollOperationState<ComputeUpdateResponse>, ComputeUpdateResponse>\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ComputeUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, computeName, parameters, options },\n      updateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Updates properties of a compute. This call will overwrite a compute if it exists. This is a\n   * nonrecoverable operation.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param computeName Name of the Azure Machine Learning compute.\n   * @param parameters Additional parameters for cluster update.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    computeName: string,\n    parameters: ClusterUpdateParameters,\n    options?: ComputeUpdateOptionalParams\n  ): Promise<ComputeUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      workspaceName,\n      computeName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes specified Machine Learning compute.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param computeName Name of the Azure Machine Learning compute.\n   * @param underlyingResourceAction Delete the underlying compute if 'Delete', or detach the underlying\n   *                                 compute from workspace if 'Detach'.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    workspaceName: string,\n    computeName: string,\n    underlyingResourceAction: UnderlyingResourceAction,\n    options?: ComputeDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        workspaceName,\n        computeName,\n        underlyingResourceAction,\n        options\n      },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes specified Machine Learning compute.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param computeName Name of the Azure Machine Learning compute.\n   * @param underlyingResourceAction Delete the underlying compute if 'Delete', or detach the underlying\n   *                                 compute from workspace if 'Detach'.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    computeName: string,\n    underlyingResourceAction: UnderlyingResourceAction,\n    options?: ComputeDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      workspaceName,\n      computeName,\n      underlyingResourceAction,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Get the details (e.g IP address, port etc) of all the compute nodes in the compute.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param computeName Name of the Azure Machine Learning compute.\n   * @param options The options parameters.\n   */\n  private _listNodes(\n    resourceGroupName: string,\n    workspaceName: string,\n    computeName: string,\n    options?: ComputeListNodesOptionalParams\n  ): Promise<ComputeListNodesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, computeName, options },\n      listNodesOperationSpec\n    );\n  }\n\n  /**\n   * Gets secrets related to Machine Learning compute (storage keys, service credentials, etc).\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param computeName Name of the Azure Machine Learning compute.\n   * @param options The options parameters.\n   */\n  listKeys(\n    resourceGroupName: string,\n    workspaceName: string,\n    computeName: string,\n    options?: ComputeListKeysOptionalParams\n  ): Promise<ComputeListKeysResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, computeName, options },\n      listKeysOperationSpec\n    );\n  }\n\n  /**\n   * Posts a start action to a compute instance\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param computeName Name of the Azure Machine Learning compute.\n   * @param options The options parameters.\n   */\n  async beginStart(\n    resourceGroupName: string,\n    workspaceName: string,\n    computeName: string,\n    options?: ComputeStartOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, computeName, options },\n      startOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Posts a start action to a compute instance\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param computeName Name of the Azure Machine Learning compute.\n   * @param options The options parameters.\n   */\n  async beginStartAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    computeName: string,\n    options?: ComputeStartOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginStart(\n      resourceGroupName,\n      workspaceName,\n      computeName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Posts a stop action to a compute instance\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param computeName Name of the Azure Machine Learning compute.\n   * @param options The options parameters.\n   */\n  async beginStop(\n    resourceGroupName: string,\n    workspaceName: string,\n    computeName: string,\n    options?: ComputeStopOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, computeName, options },\n      stopOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Posts a stop action to a compute instance\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param computeName Name of the Azure Machine Learning compute.\n   * @param options The options parameters.\n   */\n  async beginStopAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    computeName: string,\n    options?: ComputeStopOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginStop(\n      resourceGroupName,\n      workspaceName,\n      computeName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Posts a restart action to a compute instance\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param computeName Name of the Azure Machine Learning compute.\n   * @param options The options parameters.\n   */\n  async beginRestart(\n    resourceGroupName: string,\n    workspaceName: string,\n    computeName: string,\n    options?: ComputeRestartOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, computeName, options },\n      restartOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Posts a restart action to a compute instance\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param computeName Name of the Azure Machine Learning compute.\n   * @param options The options parameters.\n   */\n  async beginRestartAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    computeName: string,\n    options?: ComputeRestartOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginRestart(\n      resourceGroupName,\n      workspaceName,\n      computeName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    nextLink: string,\n    options?: ComputeListNextOptionalParams\n  ): Promise<ComputeListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n\n  /**\n   * ListNodesNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param computeName Name of the Azure Machine Learning compute.\n   * @param nextLink The nextLink from the previous successful call to the ListNodes method.\n   * @param options The options parameters.\n   */\n  private _listNodesNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    computeName: string,\n    nextLink: string,\n    options?: ComputeListNodesNextOptionalParams\n  ): Promise<ComputeListNodesNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, computeName, nextLink, options },\n      listNodesNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PaginatedComputeResourcesList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.skip],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ComputeResource\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.computeName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ComputeResource\n    },\n    201: {\n      bodyMapper: Mappers.ComputeResource\n    },\n    202: {\n      bodyMapper: Mappers.ComputeResource\n    },\n    204: {\n      bodyMapper: Mappers.ComputeResource\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters4,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.computeName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ComputeResource\n    },\n    201: {\n      bodyMapper: Mappers.ComputeResource\n    },\n    202: {\n      bodyMapper: Mappers.ComputeResource\n    },\n    204: {\n      bodyMapper: Mappers.ComputeResource\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters5,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.computeName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.underlyingResourceAction],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.computeName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNodesOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}/listNodes\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AmlComputeNodesInformation\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.computeName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listKeysOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}/listKeys\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ComputeSecrets\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.computeName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst startOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}/start\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.computeName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst stopOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}/stop\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.computeName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst restartOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}/restart\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.computeName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PaginatedComputeResourcesList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.skip],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNodesNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AmlComputeNodesInformation\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink,\n    Parameters.computeName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { PrivateEndpointConnections } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureMachineLearningWorkspaces } from \"../azureMachineLearningWorkspaces\";\nimport {\n  PrivateEndpointConnection,\n  PrivateEndpointConnectionsListOptionalParams,\n  PrivateEndpointConnectionsListResponse,\n  PrivateEndpointConnectionsGetOptionalParams,\n  PrivateEndpointConnectionsGetResponse,\n  PrivateEndpointConnectionsCreateOrUpdateOptionalParams,\n  PrivateEndpointConnectionsCreateOrUpdateResponse,\n  PrivateEndpointConnectionsDeleteOptionalParams\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing PrivateEndpointConnections operations. */\nexport class PrivateEndpointConnectionsImpl\n  implements PrivateEndpointConnections {\n  private readonly client: AzureMachineLearningWorkspaces;\n\n  /**\n   * Initialize a new instance of the class PrivateEndpointConnections class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureMachineLearningWorkspaces) {\n    this.client = client;\n  }\n\n  /**\n   * List all the private endpoint connections associated with the workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: PrivateEndpointConnectionsListOptionalParams\n  ): PagedAsyncIterableIterator<PrivateEndpointConnection> {\n    const iter = this.listPagingAll(resourceGroupName, workspaceName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          workspaceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: PrivateEndpointConnectionsListOptionalParams,\n    _settings?: PageSettings\n  ): AsyncIterableIterator<PrivateEndpointConnection[]> {\n    let result: PrivateEndpointConnectionsListResponse;\n    result = await this._list(resourceGroupName, workspaceName, options);\n    yield result.value || [];\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: PrivateEndpointConnectionsListOptionalParams\n  ): AsyncIterableIterator<PrivateEndpointConnection> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      workspaceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List all the private endpoint connections associated with the workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: PrivateEndpointConnectionsListOptionalParams\n  ): Promise<PrivateEndpointConnectionsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Gets the specified private endpoint connection associated with the workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param privateEndpointConnectionName The name of the private endpoint connection associated with the\n   *                                      workspace\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    privateEndpointConnectionName: string,\n    options?: PrivateEndpointConnectionsGetOptionalParams\n  ): Promise<PrivateEndpointConnectionsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        privateEndpointConnectionName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Update the state of specified private endpoint connection associated with the workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param privateEndpointConnectionName The name of the private endpoint connection associated with the\n   *                                      workspace\n   * @param properties The private endpoint connection properties.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    privateEndpointConnectionName: string,\n    properties: PrivateEndpointConnection,\n    options?: PrivateEndpointConnectionsCreateOrUpdateOptionalParams\n  ): Promise<PrivateEndpointConnectionsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        privateEndpointConnectionName,\n        properties,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Deletes the specified private endpoint connection associated with the workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param privateEndpointConnectionName The name of the private endpoint connection associated with the\n   *                                      workspace\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    workspaceName: string,\n    privateEndpointConnectionName: string,\n    options?: PrivateEndpointConnectionsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        privateEndpointConnectionName,\n        options\n      },\n      deleteOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/privateEndpointConnections\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateEndpointConnectionListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/privateEndpointConnections/{privateEndpointConnectionName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateEndpointConnection\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.privateEndpointConnectionName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/privateEndpointConnections/{privateEndpointConnectionName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateEndpointConnection\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.properties,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.privateEndpointConnectionName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/privateEndpointConnections/{privateEndpointConnectionName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.privateEndpointConnectionName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PrivateLinkResources } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureMachineLearningWorkspaces } from \"../azureMachineLearningWorkspaces\";\nimport {\n  PrivateLinkResourcesListOptionalParams,\n  PrivateLinkResourcesListResponse\n} from \"../models\";\n\n/** Class containing PrivateLinkResources operations. */\nexport class PrivateLinkResourcesImpl implements PrivateLinkResources {\n  private readonly client: AzureMachineLearningWorkspaces;\n\n  /**\n   * Initialize a new instance of the class PrivateLinkResources class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureMachineLearningWorkspaces) {\n    this.client = client;\n  }\n\n  /**\n   * Gets the private link resources that need to be created for a workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: PrivateLinkResourcesListOptionalParams\n  ): Promise<PrivateLinkResourcesListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/privateLinkResources\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateLinkResourceListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { WorkspaceConnections } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureMachineLearningWorkspaces } from \"../azureMachineLearningWorkspaces\";\nimport {\n  WorkspaceConnectionPropertiesV2BasicResource,\n  WorkspaceConnectionsListNextOptionalParams,\n  WorkspaceConnectionsListOptionalParams,\n  WorkspaceConnectionsListResponse,\n  WorkspaceConnectionsCreateOptionalParams,\n  WorkspaceConnectionsCreateResponse,\n  WorkspaceConnectionsGetOptionalParams,\n  WorkspaceConnectionsGetResponse,\n  WorkspaceConnectionsDeleteOptionalParams,\n  WorkspaceConnectionsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing WorkspaceConnections operations. */\nexport class WorkspaceConnectionsImpl implements WorkspaceConnections {\n  private readonly client: AzureMachineLearningWorkspaces;\n\n  /**\n   * Initialize a new instance of the class WorkspaceConnections class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureMachineLearningWorkspaces) {\n    this.client = client;\n  }\n\n  /**\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspaceConnectionsListOptionalParams\n  ): PagedAsyncIterableIterator<WorkspaceConnectionPropertiesV2BasicResource> {\n    const iter = this.listPagingAll(resourceGroupName, workspaceName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          workspaceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspaceConnectionsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<WorkspaceConnectionPropertiesV2BasicResource[]> {\n    let result: WorkspaceConnectionsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(resourceGroupName, workspaceName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        workspaceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspaceConnectionsListOptionalParams\n  ): AsyncIterableIterator<WorkspaceConnectionPropertiesV2BasicResource> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      workspaceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param connectionName Friendly name of the workspace connection\n   * @param parameters The object for creating or updating a new workspace connection\n   * @param options The options parameters.\n   */\n  create(\n    resourceGroupName: string,\n    workspaceName: string,\n    connectionName: string,\n    parameters: WorkspaceConnectionPropertiesV2BasicResource,\n    options?: WorkspaceConnectionsCreateOptionalParams\n  ): Promise<WorkspaceConnectionsCreateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, connectionName, parameters, options },\n      createOperationSpec\n    );\n  }\n\n  /**\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param connectionName Friendly name of the workspace connection\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    connectionName: string,\n    options?: WorkspaceConnectionsGetOptionalParams\n  ): Promise<WorkspaceConnectionsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, connectionName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param connectionName Friendly name of the workspace connection\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    workspaceName: string,\n    connectionName: string,\n    options?: WorkspaceConnectionsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, connectionName, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspaceConnectionsListOptionalParams\n  ): Promise<WorkspaceConnectionsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    nextLink: string,\n    options?: WorkspaceConnectionsListNextOptionalParams\n  ): Promise<WorkspaceConnectionsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/connections/{connectionName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkspaceConnectionPropertiesV2BasicResource\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters6,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.connectionName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/connections/{connectionName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkspaceConnectionPropertiesV2BasicResource\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.connectionName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/connections/{connectionName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.connectionName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/connections\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.WorkspaceConnectionPropertiesV2BasicResourceArmPaginatedResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.target,\n    Parameters.category\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.WorkspaceConnectionPropertiesV2BasicResourceArmPaginatedResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.target,\n    Parameters.category\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { BatchEndpoints } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureMachineLearningWorkspaces } from \"../azureMachineLearningWorkspaces\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  BatchEndpoint,\n  BatchEndpointsListNextOptionalParams,\n  BatchEndpointsListOptionalParams,\n  BatchEndpointsListResponse,\n  BatchEndpointsDeleteOptionalParams,\n  BatchEndpointsGetOptionalParams,\n  BatchEndpointsGetResponse,\n  PartialMinimalTrackedResourceWithIdentity,\n  BatchEndpointsUpdateOptionalParams,\n  BatchEndpointsUpdateResponse,\n  BatchEndpointsCreateOrUpdateOptionalParams,\n  BatchEndpointsCreateOrUpdateResponse,\n  BatchEndpointsListKeysOptionalParams,\n  BatchEndpointsListKeysResponse,\n  BatchEndpointsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing BatchEndpoints operations. */\nexport class BatchEndpointsImpl implements BatchEndpoints {\n  private readonly client: AzureMachineLearningWorkspaces;\n\n  /**\n   * Initialize a new instance of the class BatchEndpoints class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureMachineLearningWorkspaces) {\n    this.client = client;\n  }\n\n  /**\n   * Lists Batch inference endpoint in the workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: BatchEndpointsListOptionalParams\n  ): PagedAsyncIterableIterator<BatchEndpoint> {\n    const iter = this.listPagingAll(resourceGroupName, workspaceName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          workspaceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: BatchEndpointsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<BatchEndpoint[]> {\n    let result: BatchEndpointsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(resourceGroupName, workspaceName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        workspaceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: BatchEndpointsListOptionalParams\n  ): AsyncIterableIterator<BatchEndpoint> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      workspaceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists Batch inference endpoint in the workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: BatchEndpointsListOptionalParams\n  ): Promise<BatchEndpointsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Delete Batch Inference Endpoint (asynchronous).\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param endpointName Inference Endpoint name.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    workspaceName: string,\n    endpointName: string,\n    options?: BatchEndpointsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, endpointName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Delete Batch Inference Endpoint (asynchronous).\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param endpointName Inference Endpoint name.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    endpointName: string,\n    options?: BatchEndpointsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      workspaceName,\n      endpointName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a batch inference endpoint by name.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param endpointName Name for the Batch Endpoint.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    endpointName: string,\n    options?: BatchEndpointsGetOptionalParams\n  ): Promise<BatchEndpointsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, endpointName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Update a batch inference endpoint (asynchronous).\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param endpointName Name for the Batch inference endpoint.\n   * @param body Mutable batch inference endpoint definition object.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    endpointName: string,\n    body: PartialMinimalTrackedResourceWithIdentity,\n    options?: BatchEndpointsUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<BatchEndpointsUpdateResponse>,\n      BatchEndpointsUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<BatchEndpointsUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, endpointName, body, options },\n      updateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Update a batch inference endpoint (asynchronous).\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param endpointName Name for the Batch inference endpoint.\n   * @param body Mutable batch inference endpoint definition object.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    endpointName: string,\n    body: PartialMinimalTrackedResourceWithIdentity,\n    options?: BatchEndpointsUpdateOptionalParams\n  ): Promise<BatchEndpointsUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      workspaceName,\n      endpointName,\n      body,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Creates a batch inference endpoint (asynchronous).\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param endpointName Name for the Batch inference endpoint.\n   * @param body Batch inference endpoint definition object.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    endpointName: string,\n    body: BatchEndpoint,\n    options?: BatchEndpointsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<BatchEndpointsCreateOrUpdateResponse>,\n      BatchEndpointsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<BatchEndpointsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, endpointName, body, options },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates a batch inference endpoint (asynchronous).\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param endpointName Name for the Batch inference endpoint.\n   * @param body Batch inference endpoint definition object.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    endpointName: string,\n    body: BatchEndpoint,\n    options?: BatchEndpointsCreateOrUpdateOptionalParams\n  ): Promise<BatchEndpointsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      workspaceName,\n      endpointName,\n      body,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Lists batch Inference Endpoint keys.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param endpointName Inference Endpoint name.\n   * @param options The options parameters.\n   */\n  listKeys(\n    resourceGroupName: string,\n    workspaceName: string,\n    endpointName: string,\n    options?: BatchEndpointsListKeysOptionalParams\n  ): Promise<BatchEndpointsListKeysResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, endpointName, options },\n      listKeysOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    nextLink: string,\n    options?: BatchEndpointsListNextOptionalParams\n  ): Promise<BatchEndpointsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/batchEndpoints\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BatchEndpointTrackedResourceArmPaginatedResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.skip, Parameters.count],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/batchEndpoints/{endpointName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.endpointName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/batchEndpoints/{endpointName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BatchEndpoint\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.endpointName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/batchEndpoints/{endpointName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BatchEndpoint\n    },\n    201: {\n      bodyMapper: Mappers.BatchEndpoint\n    },\n    202: {\n      bodyMapper: Mappers.BatchEndpoint\n    },\n    204: {\n      bodyMapper: Mappers.BatchEndpoint\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.body,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.endpointName1\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/batchEndpoints/{endpointName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BatchEndpoint\n    },\n    201: {\n      bodyMapper: Mappers.BatchEndpoint\n    },\n    202: {\n      bodyMapper: Mappers.BatchEndpoint\n    },\n    204: {\n      bodyMapper: Mappers.BatchEndpoint\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.body1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.endpointName1\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listKeysOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/batchEndpoints/{endpointName}/listkeys\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EndpointAuthKeys\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.endpointName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BatchEndpointTrackedResourceArmPaginatedResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.skip, Parameters.count],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { BatchDeployments } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureMachineLearningWorkspaces } from \"../azureMachineLearningWorkspaces\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  BatchDeployment,\n  BatchDeploymentsListNextOptionalParams,\n  BatchDeploymentsListOptionalParams,\n  BatchDeploymentsListResponse,\n  BatchDeploymentsDeleteOptionalParams,\n  BatchDeploymentsGetOptionalParams,\n  BatchDeploymentsGetResponse,\n  PartialBatchDeploymentPartialMinimalTrackedResourceWithProperties,\n  BatchDeploymentsUpdateOptionalParams,\n  BatchDeploymentsUpdateResponse,\n  BatchDeploymentsCreateOrUpdateOptionalParams,\n  BatchDeploymentsCreateOrUpdateResponse,\n  BatchDeploymentsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing BatchDeployments operations. */\nexport class BatchDeploymentsImpl implements BatchDeployments {\n  private readonly client: AzureMachineLearningWorkspaces;\n\n  /**\n   * Initialize a new instance of the class BatchDeployments class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureMachineLearningWorkspaces) {\n    this.client = client;\n  }\n\n  /**\n   * Lists Batch inference deployments in the workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param endpointName Endpoint name\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    workspaceName: string,\n    endpointName: string,\n    options?: BatchDeploymentsListOptionalParams\n  ): PagedAsyncIterableIterator<BatchDeployment> {\n    const iter = this.listPagingAll(\n      resourceGroupName,\n      workspaceName,\n      endpointName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          workspaceName,\n          endpointName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    endpointName: string,\n    options?: BatchDeploymentsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<BatchDeployment[]> {\n    let result: BatchDeploymentsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(\n        resourceGroupName,\n        workspaceName,\n        endpointName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        workspaceName,\n        endpointName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    endpointName: string,\n    options?: BatchDeploymentsListOptionalParams\n  ): AsyncIterableIterator<BatchDeployment> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      workspaceName,\n      endpointName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists Batch inference deployments in the workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param endpointName Endpoint name\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    workspaceName: string,\n    endpointName: string,\n    options?: BatchDeploymentsListOptionalParams\n  ): Promise<BatchDeploymentsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, endpointName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Delete Batch Inference deployment (asynchronous).\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param endpointName Endpoint name\n   * @param deploymentName Inference deployment identifier.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    workspaceName: string,\n    endpointName: string,\n    deploymentName: string,\n    options?: BatchDeploymentsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        workspaceName,\n        endpointName,\n        deploymentName,\n        options\n      },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Delete Batch Inference deployment (asynchronous).\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param endpointName Endpoint name\n   * @param deploymentName Inference deployment identifier.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    endpointName: string,\n    deploymentName: string,\n    options?: BatchDeploymentsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      workspaceName,\n      endpointName,\n      deploymentName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a batch inference deployment by id.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param endpointName Endpoint name\n   * @param deploymentName The identifier for the Batch deployments.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    endpointName: string,\n    deploymentName: string,\n    options?: BatchDeploymentsGetOptionalParams\n  ): Promise<BatchDeploymentsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        endpointName,\n        deploymentName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Update a batch inference deployment (asynchronous).\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param endpointName Inference endpoint name\n   * @param deploymentName The identifier for the Batch inference deployment.\n   * @param body Batch inference deployment definition object.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    endpointName: string,\n    deploymentName: string,\n    body: PartialBatchDeploymentPartialMinimalTrackedResourceWithProperties,\n    options?: BatchDeploymentsUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<BatchDeploymentsUpdateResponse>,\n      BatchDeploymentsUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<BatchDeploymentsUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        workspaceName,\n        endpointName,\n        deploymentName,\n        body,\n        options\n      },\n      updateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Update a batch inference deployment (asynchronous).\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param endpointName Inference endpoint name\n   * @param deploymentName The identifier for the Batch inference deployment.\n   * @param body Batch inference deployment definition object.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    endpointName: string,\n    deploymentName: string,\n    body: PartialBatchDeploymentPartialMinimalTrackedResourceWithProperties,\n    options?: BatchDeploymentsUpdateOptionalParams\n  ): Promise<BatchDeploymentsUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      workspaceName,\n      endpointName,\n      deploymentName,\n      body,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Creates/updates a batch inference deployment (asynchronous).\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param endpointName Inference endpoint name\n   * @param deploymentName The identifier for the Batch inference deployment.\n   * @param body Batch inference deployment definition object.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    endpointName: string,\n    deploymentName: string,\n    body: BatchDeployment,\n    options?: BatchDeploymentsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<BatchDeploymentsCreateOrUpdateResponse>,\n      BatchDeploymentsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<BatchDeploymentsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        workspaceName,\n        endpointName,\n        deploymentName,\n        body,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates/updates a batch inference deployment (asynchronous).\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param endpointName Inference endpoint name\n   * @param deploymentName The identifier for the Batch inference deployment.\n   * @param body Batch inference deployment definition object.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    endpointName: string,\n    deploymentName: string,\n    body: BatchDeployment,\n    options?: BatchDeploymentsCreateOrUpdateOptionalParams\n  ): Promise<BatchDeploymentsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      workspaceName,\n      endpointName,\n      deploymentName,\n      body,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param endpointName Endpoint name\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    endpointName: string,\n    nextLink: string,\n    options?: BatchDeploymentsListNextOptionalParams\n  ): Promise<BatchDeploymentsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, endpointName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/batchEndpoints/{endpointName}/deployments\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BatchDeploymentTrackedResourceArmPaginatedResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.skip,\n    Parameters.orderBy,\n    Parameters.top\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.endpointName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/batchEndpoints/{endpointName}/deployments/{deploymentName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.endpointName,\n    Parameters.deploymentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/batchEndpoints/{endpointName}/deployments/{deploymentName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BatchDeployment\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.endpointName,\n    Parameters.deploymentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/batchEndpoints/{endpointName}/deployments/{deploymentName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BatchDeployment\n    },\n    201: {\n      bodyMapper: Mappers.BatchDeployment\n    },\n    202: {\n      bodyMapper: Mappers.BatchDeployment\n    },\n    204: {\n      bodyMapper: Mappers.BatchDeployment\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.body2,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.endpointName1,\n    Parameters.deploymentName1\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/batchEndpoints/{endpointName}/deployments/{deploymentName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BatchDeployment\n    },\n    201: {\n      bodyMapper: Mappers.BatchDeployment\n    },\n    202: {\n      bodyMapper: Mappers.BatchDeployment\n    },\n    204: {\n      bodyMapper: Mappers.BatchDeployment\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.body3,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.endpointName1,\n    Parameters.deploymentName1\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BatchDeploymentTrackedResourceArmPaginatedResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.skip,\n    Parameters.orderBy,\n    Parameters.top\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink,\n    Parameters.endpointName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { CodeContainers } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureMachineLearningWorkspaces } from \"../azureMachineLearningWorkspaces\";\nimport {\n  CodeContainer,\n  CodeContainersListNextOptionalParams,\n  CodeContainersListOptionalParams,\n  CodeContainersListResponse,\n  CodeContainersDeleteOptionalParams,\n  CodeContainersGetOptionalParams,\n  CodeContainersGetResponse,\n  CodeContainersCreateOrUpdateOptionalParams,\n  CodeContainersCreateOrUpdateResponse,\n  CodeContainersListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing CodeContainers operations. */\nexport class CodeContainersImpl implements CodeContainers {\n  private readonly client: AzureMachineLearningWorkspaces;\n\n  /**\n   * Initialize a new instance of the class CodeContainers class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureMachineLearningWorkspaces) {\n    this.client = client;\n  }\n\n  /**\n   * List containers.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: CodeContainersListOptionalParams\n  ): PagedAsyncIterableIterator<CodeContainer> {\n    const iter = this.listPagingAll(resourceGroupName, workspaceName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          workspaceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: CodeContainersListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<CodeContainer[]> {\n    let result: CodeContainersListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(resourceGroupName, workspaceName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        workspaceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: CodeContainersListOptionalParams\n  ): AsyncIterableIterator<CodeContainer> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      workspaceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List containers.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: CodeContainersListOptionalParams\n  ): Promise<CodeContainersListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Delete container.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Container name. This is case-sensitive.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    options?: CodeContainersDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, name, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Get container.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Container name. This is case-sensitive.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    options?: CodeContainersGetOptionalParams\n  ): Promise<CodeContainersGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, name, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create or update container.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Container name. This is case-sensitive.\n   * @param body Container entity to create or update.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    body: CodeContainer,\n    options?: CodeContainersCreateOrUpdateOptionalParams\n  ): Promise<CodeContainersCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, name, body, options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    nextLink: string,\n    options?: CodeContainersListNextOptionalParams\n  ): Promise<CodeContainersListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/codes\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CodeContainerResourceArmPaginatedResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.skip],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/codes/{name}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/codes/{name}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CodeContainer\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/codes/{name}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CodeContainer\n    },\n    201: {\n      bodyMapper: Mappers.CodeContainer\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.body4,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.name1\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CodeContainerResourceArmPaginatedResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.skip],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { CodeVersions } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureMachineLearningWorkspaces } from \"../azureMachineLearningWorkspaces\";\nimport {\n  CodeVersion,\n  CodeVersionsListNextOptionalParams,\n  CodeVersionsListOptionalParams,\n  CodeVersionsListResponse,\n  CodeVersionsDeleteOptionalParams,\n  CodeVersionsGetOptionalParams,\n  CodeVersionsGetResponse,\n  CodeVersionsCreateOrUpdateOptionalParams,\n  CodeVersionsCreateOrUpdateResponse,\n  CodeVersionsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing CodeVersions operations. */\nexport class CodeVersionsImpl implements CodeVersions {\n  private readonly client: AzureMachineLearningWorkspaces;\n\n  /**\n   * Initialize a new instance of the class CodeVersions class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureMachineLearningWorkspaces) {\n    this.client = client;\n  }\n\n  /**\n   * List versions.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Container name. This is case-sensitive.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    options?: CodeVersionsListOptionalParams\n  ): PagedAsyncIterableIterator<CodeVersion> {\n    const iter = this.listPagingAll(\n      resourceGroupName,\n      workspaceName,\n      name,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          workspaceName,\n          name,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    options?: CodeVersionsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<CodeVersion[]> {\n    let result: CodeVersionsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(\n        resourceGroupName,\n        workspaceName,\n        name,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        workspaceName,\n        name,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    options?: CodeVersionsListOptionalParams\n  ): AsyncIterableIterator<CodeVersion> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      workspaceName,\n      name,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List versions.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Container name. This is case-sensitive.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    options?: CodeVersionsListOptionalParams\n  ): Promise<CodeVersionsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, name, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Delete version.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Container name. This is case-sensitive.\n   * @param version Version identifier. This is case-sensitive.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    version: string,\n    options?: CodeVersionsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, name, version, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Get version.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Container name. This is case-sensitive.\n   * @param version Version identifier. This is case-sensitive.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    version: string,\n    options?: CodeVersionsGetOptionalParams\n  ): Promise<CodeVersionsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, name, version, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create or update version.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Container name. This is case-sensitive.\n   * @param version Version identifier. This is case-sensitive.\n   * @param body Version entity to create or update.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    version: string,\n    body: CodeVersion,\n    options?: CodeVersionsCreateOrUpdateOptionalParams\n  ): Promise<CodeVersionsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, name, version, body, options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Container name. This is case-sensitive.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    nextLink: string,\n    options?: CodeVersionsListNextOptionalParams\n  ): Promise<CodeVersionsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, name, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/codes/{name}/versions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CodeVersionResourceArmPaginatedResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.skip,\n    Parameters.orderBy,\n    Parameters.top\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/codes/{name}/versions/{version}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.name,\n    Parameters.version\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/codes/{name}/versions/{version}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CodeVersion\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.name,\n    Parameters.version\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/codes/{name}/versions/{version}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CodeVersion\n    },\n    201: {\n      bodyMapper: Mappers.CodeVersion\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.body5,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.name1,\n    Parameters.version\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CodeVersionResourceArmPaginatedResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.skip,\n    Parameters.orderBy,\n    Parameters.top\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ComponentContainers } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureMachineLearningWorkspaces } from \"../azureMachineLearningWorkspaces\";\nimport {\n  ComponentContainer,\n  ComponentContainersListNextOptionalParams,\n  ComponentContainersListOptionalParams,\n  ComponentContainersListResponse,\n  ComponentContainersDeleteOptionalParams,\n  ComponentContainersGetOptionalParams,\n  ComponentContainersGetResponse,\n  ComponentContainersCreateOrUpdateOptionalParams,\n  ComponentContainersCreateOrUpdateResponse,\n  ComponentContainersListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ComponentContainers operations. */\nexport class ComponentContainersImpl implements ComponentContainers {\n  private readonly client: AzureMachineLearningWorkspaces;\n\n  /**\n   * Initialize a new instance of the class ComponentContainers class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureMachineLearningWorkspaces) {\n    this.client = client;\n  }\n\n  /**\n   * List component containers.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: ComponentContainersListOptionalParams\n  ): PagedAsyncIterableIterator<ComponentContainer> {\n    const iter = this.listPagingAll(resourceGroupName, workspaceName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          workspaceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: ComponentContainersListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ComponentContainer[]> {\n    let result: ComponentContainersListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(resourceGroupName, workspaceName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        workspaceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: ComponentContainersListOptionalParams\n  ): AsyncIterableIterator<ComponentContainer> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      workspaceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List component containers.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: ComponentContainersListOptionalParams\n  ): Promise<ComponentContainersListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Delete container.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Container name.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    options?: ComponentContainersDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, name, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Get container.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Container name.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    options?: ComponentContainersGetOptionalParams\n  ): Promise<ComponentContainersGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, name, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create or update container.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Container name.\n   * @param body Container entity to create or update.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    body: ComponentContainer,\n    options?: ComponentContainersCreateOrUpdateOptionalParams\n  ): Promise<ComponentContainersCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, name, body, options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    nextLink: string,\n    options?: ComponentContainersListNextOptionalParams\n  ): Promise<ComponentContainersListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/components\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ComponentContainerResourceArmPaginatedResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.skip,\n    Parameters.listViewType\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/components/{name}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/components/{name}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ComponentContainer\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/components/{name}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ComponentContainer\n    },\n    201: {\n      bodyMapper: Mappers.ComponentContainer\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.body6,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.name1\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ComponentContainerResourceArmPaginatedResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.skip,\n    Parameters.listViewType\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ComponentVersions } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureMachineLearningWorkspaces } from \"../azureMachineLearningWorkspaces\";\nimport {\n  ComponentVersion,\n  ComponentVersionsListNextOptionalParams,\n  ComponentVersionsListOptionalParams,\n  ComponentVersionsListResponse,\n  ComponentVersionsDeleteOptionalParams,\n  ComponentVersionsGetOptionalParams,\n  ComponentVersionsGetResponse,\n  ComponentVersionsCreateOrUpdateOptionalParams,\n  ComponentVersionsCreateOrUpdateResponse,\n  ComponentVersionsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ComponentVersions operations. */\nexport class ComponentVersionsImpl implements ComponentVersions {\n  private readonly client: AzureMachineLearningWorkspaces;\n\n  /**\n   * Initialize a new instance of the class ComponentVersions class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureMachineLearningWorkspaces) {\n    this.client = client;\n  }\n\n  /**\n   * List component versions.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Component name.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    options?: ComponentVersionsListOptionalParams\n  ): PagedAsyncIterableIterator<ComponentVersion> {\n    const iter = this.listPagingAll(\n      resourceGroupName,\n      workspaceName,\n      name,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          workspaceName,\n          name,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    options?: ComponentVersionsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ComponentVersion[]> {\n    let result: ComponentVersionsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(\n        resourceGroupName,\n        workspaceName,\n        name,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        workspaceName,\n        name,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    options?: ComponentVersionsListOptionalParams\n  ): AsyncIterableIterator<ComponentVersion> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      workspaceName,\n      name,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List component versions.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Component name.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    options?: ComponentVersionsListOptionalParams\n  ): Promise<ComponentVersionsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, name, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Delete version.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Container name.\n   * @param version Version identifier.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    version: string,\n    options?: ComponentVersionsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, name, version, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Get version.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Container name.\n   * @param version Version identifier.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    version: string,\n    options?: ComponentVersionsGetOptionalParams\n  ): Promise<ComponentVersionsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, name, version, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create or update version.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Container name.\n   * @param version Version identifier.\n   * @param body Version entity to create or update.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    version: string,\n    body: ComponentVersion,\n    options?: ComponentVersionsCreateOrUpdateOptionalParams\n  ): Promise<ComponentVersionsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, name, version, body, options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Component name.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    nextLink: string,\n    options?: ComponentVersionsListNextOptionalParams\n  ): Promise<ComponentVersionsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, name, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/components/{name}/versions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ComponentVersionResourceArmPaginatedResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.skip,\n    Parameters.orderBy,\n    Parameters.top,\n    Parameters.listViewType\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/components/{name}/versions/{version}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.name,\n    Parameters.version\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/components/{name}/versions/{version}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ComponentVersion\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.name,\n    Parameters.version\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/components/{name}/versions/{version}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ComponentVersion\n    },\n    201: {\n      bodyMapper: Mappers.ComponentVersion\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.body7,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.name1,\n    Parameters.version\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ComponentVersionResourceArmPaginatedResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.skip,\n    Parameters.orderBy,\n    Parameters.top,\n    Parameters.listViewType\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { DataContainers } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureMachineLearningWorkspaces } from \"../azureMachineLearningWorkspaces\";\nimport {\n  DataContainer,\n  DataContainersListNextOptionalParams,\n  DataContainersListOptionalParams,\n  DataContainersListResponse,\n  DataContainersDeleteOptionalParams,\n  DataContainersGetOptionalParams,\n  DataContainersGetResponse,\n  DataContainersCreateOrUpdateOptionalParams,\n  DataContainersCreateOrUpdateResponse,\n  DataContainersListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing DataContainers operations. */\nexport class DataContainersImpl implements DataContainers {\n  private readonly client: AzureMachineLearningWorkspaces;\n\n  /**\n   * Initialize a new instance of the class DataContainers class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureMachineLearningWorkspaces) {\n    this.client = client;\n  }\n\n  /**\n   * List data containers.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: DataContainersListOptionalParams\n  ): PagedAsyncIterableIterator<DataContainer> {\n    const iter = this.listPagingAll(resourceGroupName, workspaceName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          workspaceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: DataContainersListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<DataContainer[]> {\n    let result: DataContainersListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(resourceGroupName, workspaceName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        workspaceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: DataContainersListOptionalParams\n  ): AsyncIterableIterator<DataContainer> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      workspaceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List data containers.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: DataContainersListOptionalParams\n  ): Promise<DataContainersListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Delete container.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Container name.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    options?: DataContainersDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, name, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Get container.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Container name.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    options?: DataContainersGetOptionalParams\n  ): Promise<DataContainersGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, name, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create or update container.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Container name.\n   * @param body Container entity to create or update.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    body: DataContainer,\n    options?: DataContainersCreateOrUpdateOptionalParams\n  ): Promise<DataContainersCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, name, body, options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    nextLink: string,\n    options?: DataContainersListNextOptionalParams\n  ): Promise<DataContainersListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/data\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataContainerResourceArmPaginatedResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.skip,\n    Parameters.listViewType\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/data/{name}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/data/{name}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataContainer\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/data/{name}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataContainer\n    },\n    201: {\n      bodyMapper: Mappers.DataContainer\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.body8,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.name1\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataContainerResourceArmPaginatedResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.skip,\n    Parameters.listViewType\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { DataVersions } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureMachineLearningWorkspaces } from \"../azureMachineLearningWorkspaces\";\nimport {\n  DataVersionBase,\n  DataVersionsListNextOptionalParams,\n  DataVersionsListOptionalParams,\n  DataVersionsListResponse,\n  DataVersionsDeleteOptionalParams,\n  DataVersionsGetOptionalParams,\n  DataVersionsGetResponse,\n  DataVersionsCreateOrUpdateOptionalParams,\n  DataVersionsCreateOrUpdateResponse,\n  DataVersionsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing DataVersions operations. */\nexport class DataVersionsImpl implements DataVersions {\n  private readonly client: AzureMachineLearningWorkspaces;\n\n  /**\n   * Initialize a new instance of the class DataVersions class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureMachineLearningWorkspaces) {\n    this.client = client;\n  }\n\n  /**\n   * List data versions in the data container\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Data container's name\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    options?: DataVersionsListOptionalParams\n  ): PagedAsyncIterableIterator<DataVersionBase> {\n    const iter = this.listPagingAll(\n      resourceGroupName,\n      workspaceName,\n      name,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          workspaceName,\n          name,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    options?: DataVersionsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<DataVersionBase[]> {\n    let result: DataVersionsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(\n        resourceGroupName,\n        workspaceName,\n        name,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        workspaceName,\n        name,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    options?: DataVersionsListOptionalParams\n  ): AsyncIterableIterator<DataVersionBase> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      workspaceName,\n      name,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List data versions in the data container\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Data container's name\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    options?: DataVersionsListOptionalParams\n  ): Promise<DataVersionsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, name, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Delete version.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Container name.\n   * @param version Version identifier.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    version: string,\n    options?: DataVersionsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, name, version, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Get version.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Container name.\n   * @param version Version identifier.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    version: string,\n    options?: DataVersionsGetOptionalParams\n  ): Promise<DataVersionsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, name, version, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create or update version.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Container name.\n   * @param version Version identifier.\n   * @param body Version entity to create or update.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    version: string,\n    body: DataVersionBase,\n    options?: DataVersionsCreateOrUpdateOptionalParams\n  ): Promise<DataVersionsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, name, version, body, options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Data container's name\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    nextLink: string,\n    options?: DataVersionsListNextOptionalParams\n  ): Promise<DataVersionsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, name, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/data/{name}/versions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataVersionBaseResourceArmPaginatedResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.skip,\n    Parameters.orderBy,\n    Parameters.top,\n    Parameters.listViewType,\n    Parameters.tags\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/data/{name}/versions/{version}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.name,\n    Parameters.version\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/data/{name}/versions/{version}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataVersionBase\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.name,\n    Parameters.version\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/data/{name}/versions/{version}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataVersionBase\n    },\n    201: {\n      bodyMapper: Mappers.DataVersionBase\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.body9,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.name1,\n    Parameters.version\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataVersionBaseResourceArmPaginatedResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.skip,\n    Parameters.orderBy,\n    Parameters.top,\n    Parameters.listViewType,\n    Parameters.tags\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Datastores } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureMachineLearningWorkspaces } from \"../azureMachineLearningWorkspaces\";\nimport {\n  Datastore,\n  DatastoresListNextOptionalParams,\n  DatastoresListOptionalParams,\n  DatastoresListResponse,\n  DatastoresDeleteOptionalParams,\n  DatastoresGetOptionalParams,\n  DatastoresGetResponse,\n  DatastoresCreateOrUpdateOptionalParams,\n  DatastoresCreateOrUpdateResponse,\n  DatastoresListSecretsOptionalParams,\n  DatastoresListSecretsResponse,\n  DatastoresListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Datastores operations. */\nexport class DatastoresImpl implements Datastores {\n  private readonly client: AzureMachineLearningWorkspaces;\n\n  /**\n   * Initialize a new instance of the class Datastores class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureMachineLearningWorkspaces) {\n    this.client = client;\n  }\n\n  /**\n   * List datastores.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: DatastoresListOptionalParams\n  ): PagedAsyncIterableIterator<Datastore> {\n    const iter = this.listPagingAll(resourceGroupName, workspaceName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          workspaceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: DatastoresListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Datastore[]> {\n    let result: DatastoresListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(resourceGroupName, workspaceName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        workspaceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: DatastoresListOptionalParams\n  ): AsyncIterableIterator<Datastore> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      workspaceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List datastores.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: DatastoresListOptionalParams\n  ): Promise<DatastoresListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Delete datastore.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Datastore name.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    options?: DatastoresDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, name, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Get datastore.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Datastore name.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    options?: DatastoresGetOptionalParams\n  ): Promise<DatastoresGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, name, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create or update datastore.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Datastore name.\n   * @param body Datastore entity to create or update.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    body: Datastore,\n    options?: DatastoresCreateOrUpdateOptionalParams\n  ): Promise<DatastoresCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, name, body, options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Get datastore secrets.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Datastore name.\n   * @param options The options parameters.\n   */\n  listSecrets(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    options?: DatastoresListSecretsOptionalParams\n  ): Promise<DatastoresListSecretsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, name, options },\n      listSecretsOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    nextLink: string,\n    options?: DatastoresListNextOptionalParams\n  ): Promise<DatastoresListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/datastores\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatastoreResourceArmPaginatedResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.skip,\n    Parameters.count1,\n    Parameters.isDefault,\n    Parameters.names,\n    Parameters.searchText,\n    Parameters.orderBy1,\n    Parameters.orderByAsc\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/datastores/{name}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/datastores/{name}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Datastore\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/datastores/{name}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Datastore\n    },\n    201: {\n      bodyMapper: Mappers.Datastore\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.body10,\n  queryParameters: [Parameters.apiVersion, Parameters.skipValidation],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.name1\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listSecretsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/datastores/{name}/listSecrets\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatastoreSecrets\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatastoreResourceArmPaginatedResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.skip,\n    Parameters.count1,\n    Parameters.isDefault,\n    Parameters.names,\n    Parameters.searchText,\n    Parameters.orderBy1,\n    Parameters.orderByAsc\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { EnvironmentContainers } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureMachineLearningWorkspaces } from \"../azureMachineLearningWorkspaces\";\nimport {\n  EnvironmentContainer,\n  EnvironmentContainersListNextOptionalParams,\n  EnvironmentContainersListOptionalParams,\n  EnvironmentContainersListResponse,\n  EnvironmentContainersDeleteOptionalParams,\n  EnvironmentContainersGetOptionalParams,\n  EnvironmentContainersGetResponse,\n  EnvironmentContainersCreateOrUpdateOptionalParams,\n  EnvironmentContainersCreateOrUpdateResponse,\n  EnvironmentContainersListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing EnvironmentContainers operations. */\nexport class EnvironmentContainersImpl implements EnvironmentContainers {\n  private readonly client: AzureMachineLearningWorkspaces;\n\n  /**\n   * Initialize a new instance of the class EnvironmentContainers class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureMachineLearningWorkspaces) {\n    this.client = client;\n  }\n\n  /**\n   * List environment containers.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: EnvironmentContainersListOptionalParams\n  ): PagedAsyncIterableIterator<EnvironmentContainer> {\n    const iter = this.listPagingAll(resourceGroupName, workspaceName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          workspaceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: EnvironmentContainersListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<EnvironmentContainer[]> {\n    let result: EnvironmentContainersListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(resourceGroupName, workspaceName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        workspaceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: EnvironmentContainersListOptionalParams\n  ): AsyncIterableIterator<EnvironmentContainer> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      workspaceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List environment containers.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: EnvironmentContainersListOptionalParams\n  ): Promise<EnvironmentContainersListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Delete container.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Container name. This is case-sensitive.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    options?: EnvironmentContainersDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, name, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Get container.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Container name. This is case-sensitive.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    options?: EnvironmentContainersGetOptionalParams\n  ): Promise<EnvironmentContainersGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, name, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create or update container.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Container name. This is case-sensitive.\n   * @param body Container entity to create or update.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    body: EnvironmentContainer,\n    options?: EnvironmentContainersCreateOrUpdateOptionalParams\n  ): Promise<EnvironmentContainersCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, name, body, options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    nextLink: string,\n    options?: EnvironmentContainersListNextOptionalParams\n  ): Promise<EnvironmentContainersListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/environments\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EnvironmentContainerResourceArmPaginatedResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.skip,\n    Parameters.listViewType\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/environments/{name}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/environments/{name}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EnvironmentContainer\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/environments/{name}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EnvironmentContainer\n    },\n    201: {\n      bodyMapper: Mappers.EnvironmentContainer\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.body11,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.name1\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EnvironmentContainerResourceArmPaginatedResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.skip,\n    Parameters.listViewType\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { EnvironmentVersions } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureMachineLearningWorkspaces } from \"../azureMachineLearningWorkspaces\";\nimport {\n  EnvironmentVersion,\n  EnvironmentVersionsListNextOptionalParams,\n  EnvironmentVersionsListOptionalParams,\n  EnvironmentVersionsListResponse,\n  EnvironmentVersionsDeleteOptionalParams,\n  EnvironmentVersionsGetOptionalParams,\n  EnvironmentVersionsGetResponse,\n  EnvironmentVersionsCreateOrUpdateOptionalParams,\n  EnvironmentVersionsCreateOrUpdateResponse,\n  EnvironmentVersionsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing EnvironmentVersions operations. */\nexport class EnvironmentVersionsImpl implements EnvironmentVersions {\n  private readonly client: AzureMachineLearningWorkspaces;\n\n  /**\n   * Initialize a new instance of the class EnvironmentVersions class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureMachineLearningWorkspaces) {\n    this.client = client;\n  }\n\n  /**\n   * List versions.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Container name. This is case-sensitive.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    options?: EnvironmentVersionsListOptionalParams\n  ): PagedAsyncIterableIterator<EnvironmentVersion> {\n    const iter = this.listPagingAll(\n      resourceGroupName,\n      workspaceName,\n      name,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          workspaceName,\n          name,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    options?: EnvironmentVersionsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<EnvironmentVersion[]> {\n    let result: EnvironmentVersionsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(\n        resourceGroupName,\n        workspaceName,\n        name,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        workspaceName,\n        name,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    options?: EnvironmentVersionsListOptionalParams\n  ): AsyncIterableIterator<EnvironmentVersion> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      workspaceName,\n      name,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List versions.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Container name. This is case-sensitive.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    options?: EnvironmentVersionsListOptionalParams\n  ): Promise<EnvironmentVersionsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, name, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Delete version.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Container name. This is case-sensitive.\n   * @param version Version identifier. This is case-sensitive.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    version: string,\n    options?: EnvironmentVersionsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, name, version, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Get version.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Container name. This is case-sensitive.\n   * @param version Version identifier. This is case-sensitive.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    version: string,\n    options?: EnvironmentVersionsGetOptionalParams\n  ): Promise<EnvironmentVersionsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, name, version, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates an EnvironmentVersion.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Name of EnvironmentVersion. This is case-sensitive.\n   * @param version Version of EnvironmentVersion.\n   * @param body Definition of EnvironmentVersion.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    version: string,\n    body: EnvironmentVersion,\n    options?: EnvironmentVersionsCreateOrUpdateOptionalParams\n  ): Promise<EnvironmentVersionsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, name, version, body, options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Container name. This is case-sensitive.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    nextLink: string,\n    options?: EnvironmentVersionsListNextOptionalParams\n  ): Promise<EnvironmentVersionsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, name, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/environments/{name}/versions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EnvironmentVersionResourceArmPaginatedResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.skip,\n    Parameters.orderBy,\n    Parameters.top,\n    Parameters.listViewType\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/environments/{name}/versions/{version}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.name,\n    Parameters.version\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/environments/{name}/versions/{version}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EnvironmentVersion\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.name,\n    Parameters.version\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/environments/{name}/versions/{version}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EnvironmentVersion\n    },\n    201: {\n      bodyMapper: Mappers.EnvironmentVersion\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.body12,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.name1,\n    Parameters.version\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EnvironmentVersionResourceArmPaginatedResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.skip,\n    Parameters.orderBy,\n    Parameters.top,\n    Parameters.listViewType\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Jobs } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureMachineLearningWorkspaces } from \"../azureMachineLearningWorkspaces\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  JobBase,\n  JobsListNextOptionalParams,\n  JobsListOptionalParams,\n  JobsListResponse,\n  JobsDeleteOptionalParams,\n  JobsGetOptionalParams,\n  JobsGetResponse,\n  JobsCreateOrUpdateOptionalParams,\n  JobsCreateOrUpdateResponse,\n  JobsCancelOptionalParams,\n  JobsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Jobs operations. */\nexport class JobsImpl implements Jobs {\n  private readonly client: AzureMachineLearningWorkspaces;\n\n  /**\n   * Initialize a new instance of the class Jobs class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureMachineLearningWorkspaces) {\n    this.client = client;\n  }\n\n  /**\n   * Lists Jobs in the workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: JobsListOptionalParams\n  ): PagedAsyncIterableIterator<JobBase> {\n    const iter = this.listPagingAll(resourceGroupName, workspaceName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          workspaceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: JobsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<JobBase[]> {\n    let result: JobsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(resourceGroupName, workspaceName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        workspaceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: JobsListOptionalParams\n  ): AsyncIterableIterator<JobBase> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      workspaceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists Jobs in the workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: JobsListOptionalParams\n  ): Promise<JobsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Deletes a Job (asynchronous).\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param id The name and identifier for the Job. This is case-sensitive.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    workspaceName: string,\n    id: string,\n    options?: JobsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, id, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes a Job (asynchronous).\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param id The name and identifier for the Job. This is case-sensitive.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    id: string,\n    options?: JobsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      workspaceName,\n      id,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a Job by name/id.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param id The name and identifier for the Job. This is case-sensitive.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    id: string,\n    options?: JobsGetOptionalParams\n  ): Promise<JobsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, id, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates and executes a Job.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param id The name and identifier for the Job. This is case-sensitive.\n   * @param body Job definition object.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    id: string,\n    body: JobBase,\n    options?: JobsCreateOrUpdateOptionalParams\n  ): Promise<JobsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, id, body, options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Cancels a Job (asynchronous).\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param id The name and identifier for the Job. This is case-sensitive.\n   * @param options The options parameters.\n   */\n  async beginCancel(\n    resourceGroupName: string,\n    workspaceName: string,\n    id: string,\n    options?: JobsCancelOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, id, options },\n      cancelOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"location\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Cancels a Job (asynchronous).\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param id The name and identifier for the Job. This is case-sensitive.\n   * @param options The options parameters.\n   */\n  async beginCancelAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    id: string,\n    options?: JobsCancelOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginCancel(\n      resourceGroupName,\n      workspaceName,\n      id,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    nextLink: string,\n    options?: JobsListNextOptionalParams\n  ): Promise<JobsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/jobs\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobBaseResourceArmPaginatedResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.skip,\n    Parameters.listViewType,\n    Parameters.jobType,\n    Parameters.tag\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/jobs/{id}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.id\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/jobs/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobBase\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.id\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/jobs/{id}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobBase\n    },\n    201: {\n      bodyMapper: Mappers.JobBase\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.body13,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.id1\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst cancelOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/jobs/{id}/cancel\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.id\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobBaseResourceArmPaginatedResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.skip,\n    Parameters.listViewType,\n    Parameters.jobType,\n    Parameters.tag\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ModelContainers } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureMachineLearningWorkspaces } from \"../azureMachineLearningWorkspaces\";\nimport {\n  ModelContainer,\n  ModelContainersListNextOptionalParams,\n  ModelContainersListOptionalParams,\n  ModelContainersListResponse,\n  ModelContainersDeleteOptionalParams,\n  ModelContainersGetOptionalParams,\n  ModelContainersGetResponse,\n  ModelContainersCreateOrUpdateOptionalParams,\n  ModelContainersCreateOrUpdateResponse,\n  ModelContainersListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ModelContainers operations. */\nexport class ModelContainersImpl implements ModelContainers {\n  private readonly client: AzureMachineLearningWorkspaces;\n\n  /**\n   * Initialize a new instance of the class ModelContainers class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureMachineLearningWorkspaces) {\n    this.client = client;\n  }\n\n  /**\n   * List model containers.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: ModelContainersListOptionalParams\n  ): PagedAsyncIterableIterator<ModelContainer> {\n    const iter = this.listPagingAll(resourceGroupName, workspaceName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          workspaceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: ModelContainersListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ModelContainer[]> {\n    let result: ModelContainersListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(resourceGroupName, workspaceName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        workspaceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: ModelContainersListOptionalParams\n  ): AsyncIterableIterator<ModelContainer> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      workspaceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List model containers.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: ModelContainersListOptionalParams\n  ): Promise<ModelContainersListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Delete container.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Container name. This is case-sensitive.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    options?: ModelContainersDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, name, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Get container.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Container name. This is case-sensitive.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    options?: ModelContainersGetOptionalParams\n  ): Promise<ModelContainersGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, name, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create or update container.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Container name. This is case-sensitive.\n   * @param body Container entity to create or update.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    body: ModelContainer,\n    options?: ModelContainersCreateOrUpdateOptionalParams\n  ): Promise<ModelContainersCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, name, body, options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    nextLink: string,\n    options?: ModelContainersListNextOptionalParams\n  ): Promise<ModelContainersListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/models\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ModelContainerResourceArmPaginatedResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.skip,\n    Parameters.count,\n    Parameters.listViewType\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/models/{name}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/models/{name}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ModelContainer\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/models/{name}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ModelContainer\n    },\n    201: {\n      bodyMapper: Mappers.ModelContainer\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.body14,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.name1\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ModelContainerResourceArmPaginatedResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.skip,\n    Parameters.count,\n    Parameters.listViewType\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ModelVersions } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureMachineLearningWorkspaces } from \"../azureMachineLearningWorkspaces\";\nimport {\n  ModelVersion,\n  ModelVersionsListNextOptionalParams,\n  ModelVersionsListOptionalParams,\n  ModelVersionsListResponse,\n  ModelVersionsDeleteOptionalParams,\n  ModelVersionsGetOptionalParams,\n  ModelVersionsGetResponse,\n  ModelVersionsCreateOrUpdateOptionalParams,\n  ModelVersionsCreateOrUpdateResponse,\n  ModelVersionsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ModelVersions operations. */\nexport class ModelVersionsImpl implements ModelVersions {\n  private readonly client: AzureMachineLearningWorkspaces;\n\n  /**\n   * Initialize a new instance of the class ModelVersions class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureMachineLearningWorkspaces) {\n    this.client = client;\n  }\n\n  /**\n   * List model versions.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Model name. This is case-sensitive.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    options?: ModelVersionsListOptionalParams\n  ): PagedAsyncIterableIterator<ModelVersion> {\n    const iter = this.listPagingAll(\n      resourceGroupName,\n      workspaceName,\n      name,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          workspaceName,\n          name,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    options?: ModelVersionsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ModelVersion[]> {\n    let result: ModelVersionsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(\n        resourceGroupName,\n        workspaceName,\n        name,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        workspaceName,\n        name,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    options?: ModelVersionsListOptionalParams\n  ): AsyncIterableIterator<ModelVersion> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      workspaceName,\n      name,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List model versions.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Model name. This is case-sensitive.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    options?: ModelVersionsListOptionalParams\n  ): Promise<ModelVersionsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, name, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Delete version.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Container name. This is case-sensitive.\n   * @param version Version identifier. This is case-sensitive.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    version: string,\n    options?: ModelVersionsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, name, version, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Get version.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Container name. This is case-sensitive.\n   * @param version Version identifier. This is case-sensitive.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    version: string,\n    options?: ModelVersionsGetOptionalParams\n  ): Promise<ModelVersionsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, name, version, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create or update version.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Container name. This is case-sensitive.\n   * @param version Version identifier. This is case-sensitive.\n   * @param body Version entity to create or update.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    version: string,\n    body: ModelVersion,\n    options?: ModelVersionsCreateOrUpdateOptionalParams\n  ): Promise<ModelVersionsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, name, version, body, options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Model name. This is case-sensitive.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    nextLink: string,\n    options?: ModelVersionsListNextOptionalParams\n  ): Promise<ModelVersionsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, name, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/models/{name}/versions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ModelVersionResourceArmPaginatedResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.skip,\n    Parameters.orderBy,\n    Parameters.top,\n    Parameters.listViewType,\n    Parameters.version1,\n    Parameters.description,\n    Parameters.offset,\n    Parameters.tags1,\n    Parameters.properties1,\n    Parameters.feed\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/models/{name}/versions/{version}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.name,\n    Parameters.version\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/models/{name}/versions/{version}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ModelVersion\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.name,\n    Parameters.version\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/models/{name}/versions/{version}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ModelVersion\n    },\n    201: {\n      bodyMapper: Mappers.ModelVersion\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.body15,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.name1,\n    Parameters.version\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ModelVersionResourceArmPaginatedResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.skip,\n    Parameters.orderBy,\n    Parameters.top,\n    Parameters.listViewType,\n    Parameters.version1,\n    Parameters.description,\n    Parameters.offset,\n    Parameters.tags1,\n    Parameters.properties1,\n    Parameters.feed\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { OnlineEndpoints } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureMachineLearningWorkspaces } from \"../azureMachineLearningWorkspaces\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  OnlineEndpoint,\n  OnlineEndpointsListNextOptionalParams,\n  OnlineEndpointsListOptionalParams,\n  OnlineEndpointsListResponse,\n  OnlineEndpointsDeleteOptionalParams,\n  OnlineEndpointsGetOptionalParams,\n  OnlineEndpointsGetResponse,\n  PartialMinimalTrackedResourceWithIdentity,\n  OnlineEndpointsUpdateOptionalParams,\n  OnlineEndpointsUpdateResponse,\n  OnlineEndpointsCreateOrUpdateOptionalParams,\n  OnlineEndpointsCreateOrUpdateResponse,\n  OnlineEndpointsListKeysOptionalParams,\n  OnlineEndpointsListKeysResponse,\n  RegenerateEndpointKeysRequest,\n  OnlineEndpointsRegenerateKeysOptionalParams,\n  OnlineEndpointsGetTokenOptionalParams,\n  OnlineEndpointsGetTokenResponse,\n  OnlineEndpointsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing OnlineEndpoints operations. */\nexport class OnlineEndpointsImpl implements OnlineEndpoints {\n  private readonly client: AzureMachineLearningWorkspaces;\n\n  /**\n   * Initialize a new instance of the class OnlineEndpoints class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureMachineLearningWorkspaces) {\n    this.client = client;\n  }\n\n  /**\n   * List Online Endpoints.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: OnlineEndpointsListOptionalParams\n  ): PagedAsyncIterableIterator<OnlineEndpoint> {\n    const iter = this.listPagingAll(resourceGroupName, workspaceName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          workspaceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: OnlineEndpointsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<OnlineEndpoint[]> {\n    let result: OnlineEndpointsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(resourceGroupName, workspaceName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        workspaceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: OnlineEndpointsListOptionalParams\n  ): AsyncIterableIterator<OnlineEndpoint> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      workspaceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List Online Endpoints.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: OnlineEndpointsListOptionalParams\n  ): Promise<OnlineEndpointsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Delete Online Endpoint (asynchronous).\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param endpointName Online Endpoint name.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    workspaceName: string,\n    endpointName: string,\n    options?: OnlineEndpointsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, endpointName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Delete Online Endpoint (asynchronous).\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param endpointName Online Endpoint name.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    endpointName: string,\n    options?: OnlineEndpointsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      workspaceName,\n      endpointName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Get Online Endpoint.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param endpointName Online Endpoint name.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    endpointName: string,\n    options?: OnlineEndpointsGetOptionalParams\n  ): Promise<OnlineEndpointsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, endpointName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Update Online Endpoint (asynchronous).\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param endpointName Online Endpoint name.\n   * @param body Online Endpoint entity to apply during operation.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    endpointName: string,\n    body: PartialMinimalTrackedResourceWithIdentity,\n    options?: OnlineEndpointsUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<OnlineEndpointsUpdateResponse>,\n      OnlineEndpointsUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<OnlineEndpointsUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, endpointName, body, options },\n      updateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Update Online Endpoint (asynchronous).\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param endpointName Online Endpoint name.\n   * @param body Online Endpoint entity to apply during operation.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    endpointName: string,\n    body: PartialMinimalTrackedResourceWithIdentity,\n    options?: OnlineEndpointsUpdateOptionalParams\n  ): Promise<OnlineEndpointsUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      workspaceName,\n      endpointName,\n      body,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Create or update Online Endpoint (asynchronous).\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param endpointName Online Endpoint name.\n   * @param body Online Endpoint entity to apply during operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    endpointName: string,\n    body: OnlineEndpoint,\n    options?: OnlineEndpointsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<OnlineEndpointsCreateOrUpdateResponse>,\n      OnlineEndpointsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<OnlineEndpointsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, endpointName, body, options },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Create or update Online Endpoint (asynchronous).\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param endpointName Online Endpoint name.\n   * @param body Online Endpoint entity to apply during operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    endpointName: string,\n    body: OnlineEndpoint,\n    options?: OnlineEndpointsCreateOrUpdateOptionalParams\n  ): Promise<OnlineEndpointsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      workspaceName,\n      endpointName,\n      body,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * List EndpointAuthKeys for an Endpoint using Key-based authentication.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param endpointName Online Endpoint name.\n   * @param options The options parameters.\n   */\n  listKeys(\n    resourceGroupName: string,\n    workspaceName: string,\n    endpointName: string,\n    options?: OnlineEndpointsListKeysOptionalParams\n  ): Promise<OnlineEndpointsListKeysResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, endpointName, options },\n      listKeysOperationSpec\n    );\n  }\n\n  /**\n   * Regenerate EndpointAuthKeys for an Endpoint using Key-based authentication (asynchronous).\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param endpointName Online Endpoint name.\n   * @param body RegenerateKeys request .\n   * @param options The options parameters.\n   */\n  async beginRegenerateKeys(\n    resourceGroupName: string,\n    workspaceName: string,\n    endpointName: string,\n    body: RegenerateEndpointKeysRequest,\n    options?: OnlineEndpointsRegenerateKeysOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, endpointName, body, options },\n      regenerateKeysOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"location\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Regenerate EndpointAuthKeys for an Endpoint using Key-based authentication (asynchronous).\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param endpointName Online Endpoint name.\n   * @param body RegenerateKeys request .\n   * @param options The options parameters.\n   */\n  async beginRegenerateKeysAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    endpointName: string,\n    body: RegenerateEndpointKeysRequest,\n    options?: OnlineEndpointsRegenerateKeysOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginRegenerateKeys(\n      resourceGroupName,\n      workspaceName,\n      endpointName,\n      body,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Retrieve a valid AAD token for an Endpoint using AMLToken-based authentication.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param endpointName Online Endpoint name.\n   * @param options The options parameters.\n   */\n  getToken(\n    resourceGroupName: string,\n    workspaceName: string,\n    endpointName: string,\n    options?: OnlineEndpointsGetTokenOptionalParams\n  ): Promise<OnlineEndpointsGetTokenResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, endpointName, options },\n      getTokenOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    nextLink: string,\n    options?: OnlineEndpointsListNextOptionalParams\n  ): Promise<OnlineEndpointsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OnlineEndpointTrackedResourceArmPaginatedResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.skip,\n    Parameters.count,\n    Parameters.tags1,\n    Parameters.properties1,\n    Parameters.name2,\n    Parameters.computeType,\n    Parameters.orderBy2\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.endpointName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OnlineEndpoint\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.endpointName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OnlineEndpoint\n    },\n    201: {\n      bodyMapper: Mappers.OnlineEndpoint\n    },\n    202: {\n      bodyMapper: Mappers.OnlineEndpoint\n    },\n    204: {\n      bodyMapper: Mappers.OnlineEndpoint\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.body,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.endpointName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OnlineEndpoint\n    },\n    201: {\n      bodyMapper: Mappers.OnlineEndpoint\n    },\n    202: {\n      bodyMapper: Mappers.OnlineEndpoint\n    },\n    204: {\n      bodyMapper: Mappers.OnlineEndpoint\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.body16,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.endpointName1\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listKeysOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/listKeys\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EndpointAuthKeys\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.endpointName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst regenerateKeysOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/regenerateKeys\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.body17,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.endpointName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getTokenOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/token\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EndpointAuthToken\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.endpointName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OnlineEndpointTrackedResourceArmPaginatedResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.skip,\n    Parameters.count,\n    Parameters.tags1,\n    Parameters.properties1,\n    Parameters.name2,\n    Parameters.computeType,\n    Parameters.orderBy2\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { OnlineDeployments } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureMachineLearningWorkspaces } from \"../azureMachineLearningWorkspaces\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  OnlineDeployment,\n  OnlineDeploymentsListNextOptionalParams,\n  OnlineDeploymentsListOptionalParams,\n  OnlineDeploymentsListResponse,\n  SkuResource,\n  OnlineDeploymentsListSkusNextOptionalParams,\n  OnlineDeploymentsListSkusOptionalParams,\n  OnlineDeploymentsListSkusResponse,\n  OnlineDeploymentsDeleteOptionalParams,\n  OnlineDeploymentsGetOptionalParams,\n  OnlineDeploymentsGetResponse,\n  PartialMinimalTrackedResourceWithSku,\n  OnlineDeploymentsUpdateOptionalParams,\n  OnlineDeploymentsUpdateResponse,\n  OnlineDeploymentsCreateOrUpdateOptionalParams,\n  OnlineDeploymentsCreateOrUpdateResponse,\n  DeploymentLogsRequest,\n  OnlineDeploymentsGetLogsOptionalParams,\n  OnlineDeploymentsGetLogsResponse,\n  OnlineDeploymentsListNextResponse,\n  OnlineDeploymentsListSkusNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing OnlineDeployments operations. */\nexport class OnlineDeploymentsImpl implements OnlineDeployments {\n  private readonly client: AzureMachineLearningWorkspaces;\n\n  /**\n   * Initialize a new instance of the class OnlineDeployments class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureMachineLearningWorkspaces) {\n    this.client = client;\n  }\n\n  /**\n   * List Inference Endpoint Deployments.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param endpointName Inference endpoint name.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    workspaceName: string,\n    endpointName: string,\n    options?: OnlineDeploymentsListOptionalParams\n  ): PagedAsyncIterableIterator<OnlineDeployment> {\n    const iter = this.listPagingAll(\n      resourceGroupName,\n      workspaceName,\n      endpointName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          workspaceName,\n          endpointName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    endpointName: string,\n    options?: OnlineDeploymentsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<OnlineDeployment[]> {\n    let result: OnlineDeploymentsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(\n        resourceGroupName,\n        workspaceName,\n        endpointName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        workspaceName,\n        endpointName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    endpointName: string,\n    options?: OnlineDeploymentsListOptionalParams\n  ): AsyncIterableIterator<OnlineDeployment> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      workspaceName,\n      endpointName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List Inference Endpoint Deployment Skus.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param endpointName Inference endpoint name.\n   * @param deploymentName Inference Endpoint Deployment name.\n   * @param options The options parameters.\n   */\n  public listSkus(\n    resourceGroupName: string,\n    workspaceName: string,\n    endpointName: string,\n    deploymentName: string,\n    options?: OnlineDeploymentsListSkusOptionalParams\n  ): PagedAsyncIterableIterator<SkuResource> {\n    const iter = this.listSkusPagingAll(\n      resourceGroupName,\n      workspaceName,\n      endpointName,\n      deploymentName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listSkusPagingPage(\n          resourceGroupName,\n          workspaceName,\n          endpointName,\n          deploymentName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listSkusPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    endpointName: string,\n    deploymentName: string,\n    options?: OnlineDeploymentsListSkusOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<SkuResource[]> {\n    let result: OnlineDeploymentsListSkusResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listSkus(\n        resourceGroupName,\n        workspaceName,\n        endpointName,\n        deploymentName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listSkusNext(\n        resourceGroupName,\n        workspaceName,\n        endpointName,\n        deploymentName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listSkusPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    endpointName: string,\n    deploymentName: string,\n    options?: OnlineDeploymentsListSkusOptionalParams\n  ): AsyncIterableIterator<SkuResource> {\n    for await (const page of this.listSkusPagingPage(\n      resourceGroupName,\n      workspaceName,\n      endpointName,\n      deploymentName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List Inference Endpoint Deployments.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param endpointName Inference endpoint name.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    workspaceName: string,\n    endpointName: string,\n    options?: OnlineDeploymentsListOptionalParams\n  ): Promise<OnlineDeploymentsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, endpointName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Delete Inference Endpoint Deployment (asynchronous).\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param endpointName Inference endpoint name.\n   * @param deploymentName Inference Endpoint Deployment name.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    workspaceName: string,\n    endpointName: string,\n    deploymentName: string,\n    options?: OnlineDeploymentsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        workspaceName,\n        endpointName,\n        deploymentName,\n        options\n      },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Delete Inference Endpoint Deployment (asynchronous).\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param endpointName Inference endpoint name.\n   * @param deploymentName Inference Endpoint Deployment name.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    endpointName: string,\n    deploymentName: string,\n    options?: OnlineDeploymentsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      workspaceName,\n      endpointName,\n      deploymentName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Get Inference Deployment Deployment.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param endpointName Inference endpoint name.\n   * @param deploymentName Inference Endpoint Deployment name.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    endpointName: string,\n    deploymentName: string,\n    options?: OnlineDeploymentsGetOptionalParams\n  ): Promise<OnlineDeploymentsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        endpointName,\n        deploymentName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Update Online Deployment (asynchronous).\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param endpointName Online Endpoint name.\n   * @param deploymentName Inference Endpoint Deployment name.\n   * @param body Online Endpoint entity to apply during operation.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    endpointName: string,\n    deploymentName: string,\n    body: PartialMinimalTrackedResourceWithSku,\n    options?: OnlineDeploymentsUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<OnlineDeploymentsUpdateResponse>,\n      OnlineDeploymentsUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<OnlineDeploymentsUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        workspaceName,\n        endpointName,\n        deploymentName,\n        body,\n        options\n      },\n      updateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Update Online Deployment (asynchronous).\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param endpointName Online Endpoint name.\n   * @param deploymentName Inference Endpoint Deployment name.\n   * @param body Online Endpoint entity to apply during operation.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    endpointName: string,\n    deploymentName: string,\n    body: PartialMinimalTrackedResourceWithSku,\n    options?: OnlineDeploymentsUpdateOptionalParams\n  ): Promise<OnlineDeploymentsUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      workspaceName,\n      endpointName,\n      deploymentName,\n      body,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Create or update Inference Endpoint Deployment (asynchronous).\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param endpointName Inference endpoint name.\n   * @param deploymentName Inference Endpoint Deployment name.\n   * @param body Inference Endpoint entity to apply during operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    endpointName: string,\n    deploymentName: string,\n    body: OnlineDeployment,\n    options?: OnlineDeploymentsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<OnlineDeploymentsCreateOrUpdateResponse>,\n      OnlineDeploymentsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<OnlineDeploymentsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        workspaceName,\n        endpointName,\n        deploymentName,\n        body,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Create or update Inference Endpoint Deployment (asynchronous).\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param endpointName Inference endpoint name.\n   * @param deploymentName Inference Endpoint Deployment name.\n   * @param body Inference Endpoint entity to apply during operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    endpointName: string,\n    deploymentName: string,\n    body: OnlineDeployment,\n    options?: OnlineDeploymentsCreateOrUpdateOptionalParams\n  ): Promise<OnlineDeploymentsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      workspaceName,\n      endpointName,\n      deploymentName,\n      body,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Polls an Endpoint operation.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param endpointName Inference endpoint name.\n   * @param deploymentName The name and identifier for the endpoint.\n   * @param body The request containing parameters for retrieving logs.\n   * @param options The options parameters.\n   */\n  getLogs(\n    resourceGroupName: string,\n    workspaceName: string,\n    endpointName: string,\n    deploymentName: string,\n    body: DeploymentLogsRequest,\n    options?: OnlineDeploymentsGetLogsOptionalParams\n  ): Promise<OnlineDeploymentsGetLogsResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        endpointName,\n        deploymentName,\n        body,\n        options\n      },\n      getLogsOperationSpec\n    );\n  }\n\n  /**\n   * List Inference Endpoint Deployment Skus.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param endpointName Inference endpoint name.\n   * @param deploymentName Inference Endpoint Deployment name.\n   * @param options The options parameters.\n   */\n  private _listSkus(\n    resourceGroupName: string,\n    workspaceName: string,\n    endpointName: string,\n    deploymentName: string,\n    options?: OnlineDeploymentsListSkusOptionalParams\n  ): Promise<OnlineDeploymentsListSkusResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        endpointName,\n        deploymentName,\n        options\n      },\n      listSkusOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param endpointName Inference endpoint name.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    endpointName: string,\n    nextLink: string,\n    options?: OnlineDeploymentsListNextOptionalParams\n  ): Promise<OnlineDeploymentsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, endpointName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n\n  /**\n   * ListSkusNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param endpointName Inference endpoint name.\n   * @param deploymentName Inference Endpoint Deployment name.\n   * @param nextLink The nextLink from the previous successful call to the ListSkus method.\n   * @param options The options parameters.\n   */\n  private _listSkusNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    endpointName: string,\n    deploymentName: string,\n    nextLink: string,\n    options?: OnlineDeploymentsListSkusNextOptionalParams\n  ): Promise<OnlineDeploymentsListSkusNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        endpointName,\n        deploymentName,\n        nextLink,\n        options\n      },\n      listSkusNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/deployments\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OnlineDeploymentTrackedResourceArmPaginatedResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.skip,\n    Parameters.orderBy,\n    Parameters.top\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.endpointName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/deployments/{deploymentName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.endpointName,\n    Parameters.deploymentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/deployments/{deploymentName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OnlineDeployment\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.endpointName,\n    Parameters.deploymentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/deployments/{deploymentName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OnlineDeployment\n    },\n    201: {\n      bodyMapper: Mappers.OnlineDeployment\n    },\n    202: {\n      bodyMapper: Mappers.OnlineDeployment\n    },\n    204: {\n      bodyMapper: Mappers.OnlineDeployment\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.body18,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.endpointName1,\n    Parameters.deploymentName1\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/deployments/{deploymentName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OnlineDeployment\n    },\n    201: {\n      bodyMapper: Mappers.OnlineDeployment\n    },\n    202: {\n      bodyMapper: Mappers.OnlineDeployment\n    },\n    204: {\n      bodyMapper: Mappers.OnlineDeployment\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.body19,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.endpointName1,\n    Parameters.deploymentName1\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getLogsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/deployments/{deploymentName}/getLogs\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentLogs\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.body20,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.endpointName,\n    Parameters.deploymentName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listSkusOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/deployments/{deploymentName}/skus\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SkuResourceArmPaginatedResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.skip, Parameters.count],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.endpointName,\n    Parameters.deploymentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OnlineDeploymentTrackedResourceArmPaginatedResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.skip,\n    Parameters.orderBy,\n    Parameters.top\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink,\n    Parameters.endpointName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listSkusNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SkuResourceArmPaginatedResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.skip, Parameters.count],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink,\n    Parameters.endpointName,\n    Parameters.deploymentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Schedules } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureMachineLearningWorkspaces } from \"../azureMachineLearningWorkspaces\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  Schedule,\n  SchedulesListNextOptionalParams,\n  SchedulesListOptionalParams,\n  SchedulesListResponse,\n  SchedulesDeleteOptionalParams,\n  SchedulesGetOptionalParams,\n  SchedulesGetResponse,\n  SchedulesCreateOrUpdateOptionalParams,\n  SchedulesCreateOrUpdateResponse,\n  SchedulesListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Schedules operations. */\nexport class SchedulesImpl implements Schedules {\n  private readonly client: AzureMachineLearningWorkspaces;\n\n  /**\n   * Initialize a new instance of the class Schedules class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureMachineLearningWorkspaces) {\n    this.client = client;\n  }\n\n  /**\n   * List schedules in specified workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: SchedulesListOptionalParams\n  ): PagedAsyncIterableIterator<Schedule> {\n    const iter = this.listPagingAll(resourceGroupName, workspaceName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          workspaceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: SchedulesListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Schedule[]> {\n    let result: SchedulesListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(resourceGroupName, workspaceName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        workspaceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: SchedulesListOptionalParams\n  ): AsyncIterableIterator<Schedule> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      workspaceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List schedules in specified workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: SchedulesListOptionalParams\n  ): Promise<SchedulesListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Delete schedule.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Schedule name.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    options?: SchedulesDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, name, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Delete schedule.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Schedule name.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    options?: SchedulesDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      workspaceName,\n      name,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Get schedule.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Schedule name.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    options?: SchedulesGetOptionalParams\n  ): Promise<SchedulesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, name, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create or update schedule.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Schedule name.\n   * @param body Schedule definition.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    body: Schedule,\n    options?: SchedulesCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<SchedulesCreateOrUpdateResponse>,\n      SchedulesCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<SchedulesCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, name, body, options },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Create or update schedule.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param name Schedule name.\n   * @param body Schedule definition.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    name: string,\n    body: Schedule,\n    options?: SchedulesCreateOrUpdateOptionalParams\n  ): Promise<SchedulesCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      workspaceName,\n      name,\n      body,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    nextLink: string,\n    options?: SchedulesListNextOptionalParams\n  ): Promise<SchedulesListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/schedules\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ScheduleResourceArmPaginatedResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.skip,\n    Parameters.listViewType1\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/schedules/{name}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/schedules/{name}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Schedule\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/schedules/{name}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Schedule\n    },\n    201: {\n      bodyMapper: Mappers.Schedule\n    },\n    202: {\n      bodyMapper: Mappers.Schedule\n    },\n    204: {\n      bodyMapper: Mappers.Schedule\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.body21,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.name1\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ScheduleResourceArmPaginatedResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.skip,\n    Parameters.listViewType1\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { WorkspaceFeatures } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureMachineLearningWorkspaces } from \"../azureMachineLearningWorkspaces\";\nimport {\n  AmlUserFeature,\n  WorkspaceFeaturesListNextOptionalParams,\n  WorkspaceFeaturesListOptionalParams,\n  WorkspaceFeaturesListResponse,\n  WorkspaceFeaturesListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing WorkspaceFeatures operations. */\nexport class WorkspaceFeaturesImpl implements WorkspaceFeatures {\n  private readonly client: AzureMachineLearningWorkspaces;\n\n  /**\n   * Initialize a new instance of the class WorkspaceFeatures class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureMachineLearningWorkspaces) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all enabled features for a workspace\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspaceFeaturesListOptionalParams\n  ): PagedAsyncIterableIterator<AmlUserFeature> {\n    const iter = this.listPagingAll(resourceGroupName, workspaceName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          workspaceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspaceFeaturesListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<AmlUserFeature[]> {\n    let result: WorkspaceFeaturesListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(resourceGroupName, workspaceName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        workspaceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspaceFeaturesListOptionalParams\n  ): AsyncIterableIterator<AmlUserFeature> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      workspaceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all enabled features for a workspace\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspaceFeaturesListOptionalParams\n  ): Promise<WorkspaceFeaturesListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    nextLink: string,\n    options?: WorkspaceFeaturesListNextOptionalParams\n  ): Promise<WorkspaceFeaturesListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/features\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListAmlUserFeatureResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListAmlUserFeatureResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\nimport {\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest\n} from \"@azure/core-rest-pipeline\";\nimport * as coreAuth from \"@azure/core-auth\";\nimport {\n  OperationsImpl,\n  WorkspacesImpl,\n  UsagesImpl,\n  VirtualMachineSizesImpl,\n  QuotasImpl,\n  ComputeOperationsImpl,\n  PrivateEndpointConnectionsImpl,\n  PrivateLinkResourcesImpl,\n  WorkspaceConnectionsImpl,\n  BatchEndpointsImpl,\n  BatchDeploymentsImpl,\n  CodeContainersImpl,\n  CodeVersionsImpl,\n  ComponentContainersImpl,\n  ComponentVersionsImpl,\n  DataContainersImpl,\n  DataVersionsImpl,\n  DatastoresImpl,\n  EnvironmentContainersImpl,\n  EnvironmentVersionsImpl,\n  JobsImpl,\n  ModelContainersImpl,\n  ModelVersionsImpl,\n  OnlineEndpointsImpl,\n  OnlineDeploymentsImpl,\n  SchedulesImpl,\n  WorkspaceFeaturesImpl\n} from \"./operations\";\nimport {\n  Operations,\n  Workspaces,\n  Usages,\n  VirtualMachineSizes,\n  Quotas,\n  ComputeOperations,\n  PrivateEndpointConnections,\n  PrivateLinkResources,\n  WorkspaceConnections,\n  BatchEndpoints,\n  BatchDeployments,\n  CodeContainers,\n  CodeVersions,\n  ComponentContainers,\n  ComponentVersions,\n  DataContainers,\n  DataVersions,\n  Datastores,\n  EnvironmentContainers,\n  EnvironmentVersions,\n  Jobs,\n  ModelContainers,\n  ModelVersions,\n  OnlineEndpoints,\n  OnlineDeployments,\n  Schedules,\n  WorkspaceFeatures\n} from \"./operationsInterfaces\";\nimport { AzureMachineLearningWorkspacesOptionalParams } from \"./models\";\n\nexport class AzureMachineLearningWorkspaces extends coreClient.ServiceClient {\n  $host: string;\n  apiVersion: string;\n  subscriptionId: string;\n\n  /**\n   * Initializes a new instance of the AzureMachineLearningWorkspaces class.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param subscriptionId The ID of the target subscription.\n   * @param options The parameter options\n   */\n  constructor(\n    credentials: coreAuth.TokenCredential,\n    subscriptionId: string,\n    options?: AzureMachineLearningWorkspacesOptionalParams\n  ) {\n    if (credentials === undefined) {\n      throw new Error(\"'credentials' cannot be null\");\n    }\n    if (subscriptionId === undefined) {\n      throw new Error(\"'subscriptionId' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: AzureMachineLearningWorkspacesOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\",\n      credential: credentials\n    };\n\n    const packageDetails = `azsdk-js-arm-machinelearning/2.1.1`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      endpoint:\n        options.endpoint ?? options.baseUri ?? \"https://management.azure.com\"\n    };\n    super(optionsWithDefaults);\n\n    let bearerTokenAuthenticationPolicyFound: boolean = false;\n    if (options?.pipeline && options.pipeline.getOrderedPolicies().length > 0) {\n      const pipelinePolicies: coreRestPipeline.PipelinePolicy[] = options.pipeline.getOrderedPolicies();\n      bearerTokenAuthenticationPolicyFound = pipelinePolicies.some(\n        (pipelinePolicy) =>\n          pipelinePolicy.name ===\n          coreRestPipeline.bearerTokenAuthenticationPolicyName\n      );\n    }\n    if (\n      !options ||\n      !options.pipeline ||\n      options.pipeline.getOrderedPolicies().length == 0 ||\n      !bearerTokenAuthenticationPolicyFound\n    ) {\n      this.pipeline.removePolicy({\n        name: coreRestPipeline.bearerTokenAuthenticationPolicyName\n      });\n      this.pipeline.addPolicy(\n        coreRestPipeline.bearerTokenAuthenticationPolicy({\n          credential: credentials,\n          scopes:\n            optionsWithDefaults.credentialScopes ??\n            `${optionsWithDefaults.endpoint}/.default`,\n          challengeCallbacks: {\n            authorizeRequestOnChallenge:\n              coreClient.authorizeRequestOnClaimChallenge\n          }\n        })\n      );\n    }\n    // Parameter assignments\n    this.subscriptionId = subscriptionId;\n\n    // Assigning values to Constant parameters\n    this.$host = options.$host || \"https://management.azure.com\";\n    this.apiVersion = options.apiVersion || \"2022-10-01\";\n    this.operations = new OperationsImpl(this);\n    this.workspaces = new WorkspacesImpl(this);\n    this.usages = new UsagesImpl(this);\n    this.virtualMachineSizes = new VirtualMachineSizesImpl(this);\n    this.quotas = new QuotasImpl(this);\n    this.computeOperations = new ComputeOperationsImpl(this);\n    this.privateEndpointConnections = new PrivateEndpointConnectionsImpl(this);\n    this.privateLinkResources = new PrivateLinkResourcesImpl(this);\n    this.workspaceConnections = new WorkspaceConnectionsImpl(this);\n    this.batchEndpoints = new BatchEndpointsImpl(this);\n    this.batchDeployments = new BatchDeploymentsImpl(this);\n    this.codeContainers = new CodeContainersImpl(this);\n    this.codeVersions = new CodeVersionsImpl(this);\n    this.componentContainers = new ComponentContainersImpl(this);\n    this.componentVersions = new ComponentVersionsImpl(this);\n    this.dataContainers = new DataContainersImpl(this);\n    this.dataVersions = new DataVersionsImpl(this);\n    this.datastores = new DatastoresImpl(this);\n    this.environmentContainers = new EnvironmentContainersImpl(this);\n    this.environmentVersions = new EnvironmentVersionsImpl(this);\n    this.jobs = new JobsImpl(this);\n    this.modelContainers = new ModelContainersImpl(this);\n    this.modelVersions = new ModelVersionsImpl(this);\n    this.onlineEndpoints = new OnlineEndpointsImpl(this);\n    this.onlineDeployments = new OnlineDeploymentsImpl(this);\n    this.schedules = new SchedulesImpl(this);\n    this.workspaceFeatures = new WorkspaceFeaturesImpl(this);\n    this.addCustomApiVersionPolicy(options.apiVersion);\n  }\n\n  /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */\n  private addCustomApiVersionPolicy(apiVersion?: string) {\n    if (!apiVersion) {\n      return;\n    }\n    const apiVersionPolicy = {\n      name: \"CustomApiVersionPolicy\",\n      async sendRequest(\n        request: PipelineRequest,\n        next: SendRequest\n      ): Promise<PipelineResponse> {\n        const param = request.url.split(\"?\");\n        if (param.length > 1) {\n          const newParams = param[1].split(\"&\").map((item) => {\n            if (item.indexOf(\"api-version\") > -1) {\n              return \"api-version=\" + apiVersion;\n            } else {\n              return item;\n            }\n          });\n          request.url = param[0] + \"?\" + newParams.join(\"&\");\n        }\n        return next(request);\n      }\n    };\n    this.pipeline.addPolicy(apiVersionPolicy);\n  }\n\n  operations: Operations;\n  workspaces: Workspaces;\n  usages: Usages;\n  virtualMachineSizes: VirtualMachineSizes;\n  quotas: Quotas;\n  computeOperations: ComputeOperations;\n  privateEndpointConnections: PrivateEndpointConnections;\n  privateLinkResources: PrivateLinkResources;\n  workspaceConnections: WorkspaceConnections;\n  batchEndpoints: BatchEndpoints;\n  batchDeployments: BatchDeployments;\n  codeContainers: CodeContainers;\n  codeVersions: CodeVersions;\n  componentContainers: ComponentContainers;\n  componentVersions: ComponentVersions;\n  dataContainers: DataContainers;\n  dataVersions: DataVersions;\n  datastores: Datastores;\n  environmentContainers: EnvironmentContainers;\n  environmentVersions: EnvironmentVersions;\n  jobs: Jobs;\n  modelContainers: ModelContainers;\n  modelVersions: ModelVersions;\n  onlineEndpoints: OnlineEndpoints;\n  onlineDeployments: OnlineDeployments;\n  schedules: Schedules;\n  workspaceFeatures: WorkspaceFeatures;\n}\n"],"names":["KnownProvisioningState","KnownEncryptionStatus","KnownPublicNetworkAccess","KnownPrivateEndpointServiceConnectionStatus","KnownPrivateEndpointConnectionProvisioningState","KnownManagedServiceIdentityType","KnownCreatedByType","KnownDiagnoseResultLevel","KnownUsageUnit","KnownBillingCurrency","KnownUnitOfMeasure","KnownVMPriceOSType","KnownVMTier","KnownQuotaUnit","KnownStatus","KnownComputeType","KnownUnderlyingResourceAction","KnownNodeState","KnownConnectionAuthType","KnownConnectionCategory","KnownValueFormat","KnownEndpointProvisioningState","KnownEndpointAuthMode","KnownBatchLoggingLevel","KnownReferenceType","KnownBatchOutputAction","KnownDeploymentProvisioningState","KnownListViewType","KnownDataType","KnownCredentialsType","KnownDatastoreType","KnownSecretsType","KnownAutoRebuildSetting","KnownEnvironmentType","KnownOperatingSystemType","KnownIdentityConfigurationType","KnownJobType","KnownJobStatus","KnownEndpointComputeType","KnownOrderString","KnownPublicNetworkAccessType","KnownEgressPublicNetworkAccessType","KnownScaleType","KnownContainerType","KnownSkuScaleType","KnownKeyType","KnownScheduleListViewType","KnownScheduleActionType","KnownScheduleProvisioningStatus","KnownTriggerType","KnownClusterPurpose","KnownSslConfigStatus","KnownLoadBalancerType","KnownOsType","KnownVmPriority","KnownRemoteLoginPortPublicAccess","KnownAllocationState","KnownApplicationSharingPolicy","KnownSshPublicAccess","KnownComputeInstanceState","KnownComputeInstanceAuthorizationType","KnownOperationName","KnownOperationStatus","KnownOperationTrigger","KnownProvisioningStatus","KnownScheduleStatus","KnownComputePowerAction","KnownRecurrenceFrequency","KnownWeekDay","KnownScheduleProvisioningState","KnownAutosave","KnownNetwork","KnownCaching","KnownStorageAccountType","KnownSourceType","KnownMountAction","KnownMountState","KnownInputDeliveryMode","KnownOutputDeliveryMode","KnownForecastHorizonMode","KnownJobOutputType","KnownLogVerbosity","KnownTaskType","KnownJobInputType","KnownNCrossValidationsMode","KnownSeasonalityMode","KnownTargetLagsMode","KnownTargetRollingWindowSizeMode","KnownServiceDataAccessAuthIdentity","KnownEarlyTerminationPolicyType","KnownSamplingAlgorithmType","KnownClassificationPrimaryMetrics","KnownClassificationModels","KnownStackMetaLearnerType","KnownBlockedTransformers","KnownFeaturizationMode","KnownDistributionType","KnownJobLimitsType","KnownFeatureLags","KnownShortSeriesHandlingConfiguration","KnownTargetAggregationFunction","KnownUseStl","KnownForecastingPrimaryMetrics","KnownForecastingModels","KnownLearningRateScheduler","KnownStochasticOptimizer","KnownClassificationMultilabelPrimaryMetrics","KnownInstanceSegmentationPrimaryMetrics","KnownModelSize","KnownValidationMetricType","KnownObjectDetectionPrimaryMetrics","KnownGoal","KnownRandomSamplingAlgorithmRule","KnownRegressionPrimaryMetrics","KnownRegressionModels","WorkspaceMapper","WorkspaceUpdateParametersMapper","DiagnoseWorkspaceParametersMapper","QuotaUpdateParametersMapper","ComputeResourceMapper","ClusterUpdateParametersMapper","PrivateEndpointConnectionMapper","WorkspaceConnectionPropertiesV2BasicResourceMapper","PartialMinimalTrackedResourceWithIdentityMapper","BatchEndpointMapper","PartialBatchDeploymentPartialMinimalTrackedResourceWithPropertiesMapper","BatchDeploymentMapper","CodeContainerMapper","CodeVersionMapper","ComponentContainerMapper","ComponentVersionMapper","DataContainerMapper","DataVersionBaseMapper","DatastoreMapper","EnvironmentContainerMapper","EnvironmentVersionMapper","JobBaseMapper","ModelContainerMapper","ModelVersionMapper","OnlineEndpointMapper","RegenerateEndpointKeysRequestMapper","PartialMinimalTrackedResourceWithSkuMapper","OnlineDeploymentMapper","DeploymentLogsRequestMapper","ScheduleMapper","__await","__asyncValues","__asyncDelegator","listOperationSpec","serializer","coreClient","Mappers.AmlOperationListResult","Mappers.ErrorResponse","Parameters.apiVersion","Parameters.$host","Parameters.accept","__rest","getOperationSpec","__awaiter","createOrUpdateOperationSpec","LroEngine","deleteOperationSpec","updateOperationSpec","listKeysOperationSpec","Mappers.Workspace","Parameters.subscriptionId","Parameters.resourceGroupName","Parameters.workspaceName","Parameters.parameters","Parameters.contentType","Parameters.parameters1","Mappers.WorkspaceListResult","Parameters.skip","Mappers.DiagnoseResponseResult","Parameters.parameters2","Mappers.ListWorkspaceKeysResult","Mappers.NotebookAccessTokenResult","Mappers.NotebookResourceInfo","Mappers.ListStorageAccountKeysResult","Mappers.ListNotebookKeysResult","Mappers.ExternalFqdnResponse","Parameters.nextLink","listNextOperationSpec","Mappers.ListUsagesResult","Parameters.location","Mappers.VirtualMachineSizeListResult","Mappers.UpdateWorkspaceQuotasResult","Parameters.parameters3","Mappers.ListWorkspaceQuotas","Mappers.PaginatedComputeResourcesList","Mappers.ComputeResource","Parameters.computeName","Parameters.parameters4","Parameters.parameters5","Parameters.underlyingResourceAction","Mappers.AmlComputeNodesInformation","Mappers.ComputeSecrets","Mappers.PrivateEndpointConnectionListResult","Mappers.PrivateEndpointConnection","Parameters.privateEndpointConnectionName","Parameters.properties","Mappers.PrivateLinkResourceListResult","Mappers.WorkspaceConnectionPropertiesV2BasicResource","Parameters.parameters6","Parameters.connectionName","Mappers.WorkspaceConnectionPropertiesV2BasicResourceArmPaginatedResult","Parameters.target","Parameters.category","Mappers.BatchEndpointTrackedResourceArmPaginatedResult","Parameters.count","Parameters.endpointName","Mappers.BatchEndpoint","Parameters.body","Parameters.endpointName1","Parameters.body1","Mappers.EndpointAuthKeys","Mappers.BatchDeploymentTrackedResourceArmPaginatedResult","Parameters.orderBy","Parameters.top","Parameters.deploymentName","Mappers.BatchDeployment","Parameters.body2","Parameters.deploymentName1","Parameters.body3","Mappers.CodeContainerResourceArmPaginatedResult","Parameters.name","Mappers.CodeContainer","Parameters.body4","Parameters.name1","Mappers.CodeVersionResourceArmPaginatedResult","Parameters.version","Mappers.CodeVersion","Parameters.body5","Mappers.ComponentContainerResourceArmPaginatedResult","Parameters.listViewType","Mappers.ComponentContainer","Parameters.body6","Mappers.ComponentVersionResourceArmPaginatedResult","Mappers.ComponentVersion","Parameters.body7","Mappers.DataContainerResourceArmPaginatedResult","Mappers.DataContainer","Parameters.body8","Mappers.DataVersionBaseResourceArmPaginatedResult","Parameters.tags","Mappers.DataVersionBase","Parameters.body9","Mappers.DatastoreResourceArmPaginatedResult","Parameters.count1","Parameters.isDefault","Parameters.names","Parameters.searchText","Parameters.orderBy1","Parameters.orderByAsc","Mappers.Datastore","Parameters.body10","Parameters.skipValidation","Mappers.DatastoreSecrets","Mappers.EnvironmentContainerResourceArmPaginatedResult","Mappers.EnvironmentContainer","Parameters.body11","Mappers.EnvironmentVersionResourceArmPaginatedResult","Mappers.EnvironmentVersion","Parameters.body12","Mappers.JobBaseResourceArmPaginatedResult","Parameters.jobType","Parameters.tag","Parameters.id","Mappers.JobBase","Parameters.body13","Parameters.id1","Mappers.ModelContainerResourceArmPaginatedResult","Mappers.ModelContainer","Parameters.body14","Mappers.ModelVersionResourceArmPaginatedResult","Parameters.version1","Parameters.description","Parameters.offset","Parameters.tags1","Parameters.properties1","Parameters.feed","Mappers.ModelVersion","Parameters.body15","Mappers.OnlineEndpointTrackedResourceArmPaginatedResult","Parameters.name2","Parameters.computeType","Parameters.orderBy2","Mappers.OnlineEndpoint","Parameters.body16","Parameters.body17","Mappers.EndpointAuthToken","Mappers.OnlineDeploymentTrackedResourceArmPaginatedResult","Mappers.OnlineDeployment","Parameters.body18","Parameters.body19","Mappers.DeploymentLogs","Parameters.body20","Mappers.SkuResourceArmPaginatedResult","Mappers.ScheduleResourceArmPaginatedResult","Parameters.listViewType1","Mappers.Schedule","Parameters.body21","Mappers.ListAmlUserFeatureResult","coreRestPipeline"],"mappings":"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"}