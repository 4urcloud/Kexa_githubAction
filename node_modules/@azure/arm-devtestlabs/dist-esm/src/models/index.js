/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
/** Known values of {@link StorageType} that the service accepts. */
export var KnownStorageType;
(function (KnownStorageType) {
    /** Standard */
    KnownStorageType["Standard"] = "Standard";
    /** Premium */
    KnownStorageType["Premium"] = "Premium";
    /** StandardSSD */
    KnownStorageType["StandardSSD"] = "StandardSSD";
})(KnownStorageType || (KnownStorageType = {}));
/** Known values of {@link PremiumDataDisk} that the service accepts. */
export var KnownPremiumDataDisk;
(function (KnownPremiumDataDisk) {
    /** Disabled */
    KnownPremiumDataDisk["Disabled"] = "Disabled";
    /** Enabled */
    KnownPremiumDataDisk["Enabled"] = "Enabled";
})(KnownPremiumDataDisk || (KnownPremiumDataDisk = {}));
/** Known values of {@link EnvironmentPermission} that the service accepts. */
export var KnownEnvironmentPermission;
(function (KnownEnvironmentPermission) {
    /** Reader */
    KnownEnvironmentPermission["Reader"] = "Reader";
    /** Contributor */
    KnownEnvironmentPermission["Contributor"] = "Contributor";
})(KnownEnvironmentPermission || (KnownEnvironmentPermission = {}));
/** Known values of {@link EnableStatus} that the service accepts. */
export var KnownEnableStatus;
(function (KnownEnableStatus) {
    /** Enabled */
    KnownEnableStatus["Enabled"] = "Enabled";
    /** Disabled */
    KnownEnableStatus["Disabled"] = "Disabled";
})(KnownEnableStatus || (KnownEnableStatus = {}));
/** Known values of {@link HttpStatusCode} that the service accepts. */
export var KnownHttpStatusCode;
(function (KnownHttpStatusCode) {
    /** Continue */
    KnownHttpStatusCode["Continue"] = "Continue";
    /** SwitchingProtocols */
    KnownHttpStatusCode["SwitchingProtocols"] = "SwitchingProtocols";
    /** OK */
    KnownHttpStatusCode["OK"] = "OK";
    /** Created */
    KnownHttpStatusCode["Created"] = "Created";
    /** Accepted */
    KnownHttpStatusCode["Accepted"] = "Accepted";
    /** NonAuthoritativeInformation */
    KnownHttpStatusCode["NonAuthoritativeInformation"] = "NonAuthoritativeInformation";
    /** NoContent */
    KnownHttpStatusCode["NoContent"] = "NoContent";
    /** ResetContent */
    KnownHttpStatusCode["ResetContent"] = "ResetContent";
    /** PartialContent */
    KnownHttpStatusCode["PartialContent"] = "PartialContent";
    /** MultipleChoices */
    KnownHttpStatusCode["MultipleChoices"] = "MultipleChoices";
    /** Ambiguous */
    KnownHttpStatusCode["Ambiguous"] = "Ambiguous";
    /** MovedPermanently */
    KnownHttpStatusCode["MovedPermanently"] = "MovedPermanently";
    /** Moved */
    KnownHttpStatusCode["Moved"] = "Moved";
    /** Found */
    KnownHttpStatusCode["Found"] = "Found";
    /** Redirect */
    KnownHttpStatusCode["Redirect"] = "Redirect";
    /** SeeOther */
    KnownHttpStatusCode["SeeOther"] = "SeeOther";
    /** RedirectMethod */
    KnownHttpStatusCode["RedirectMethod"] = "RedirectMethod";
    /** NotModified */
    KnownHttpStatusCode["NotModified"] = "NotModified";
    /** UseProxy */
    KnownHttpStatusCode["UseProxy"] = "UseProxy";
    /** Unused */
    KnownHttpStatusCode["Unused"] = "Unused";
    /** TemporaryRedirect */
    KnownHttpStatusCode["TemporaryRedirect"] = "TemporaryRedirect";
    /** RedirectKeepVerb */
    KnownHttpStatusCode["RedirectKeepVerb"] = "RedirectKeepVerb";
    /** BadRequest */
    KnownHttpStatusCode["BadRequest"] = "BadRequest";
    /** Unauthorized */
    KnownHttpStatusCode["Unauthorized"] = "Unauthorized";
    /** PaymentRequired */
    KnownHttpStatusCode["PaymentRequired"] = "PaymentRequired";
    /** Forbidden */
    KnownHttpStatusCode["Forbidden"] = "Forbidden";
    /** NotFound */
    KnownHttpStatusCode["NotFound"] = "NotFound";
    /** MethodNotAllowed */
    KnownHttpStatusCode["MethodNotAllowed"] = "MethodNotAllowed";
    /** NotAcceptable */
    KnownHttpStatusCode["NotAcceptable"] = "NotAcceptable";
    /** ProxyAuthenticationRequired */
    KnownHttpStatusCode["ProxyAuthenticationRequired"] = "ProxyAuthenticationRequired";
    /** RequestTimeout */
    KnownHttpStatusCode["RequestTimeout"] = "RequestTimeout";
    /** Conflict */
    KnownHttpStatusCode["Conflict"] = "Conflict";
    /** Gone */
    KnownHttpStatusCode["Gone"] = "Gone";
    /** LengthRequired */
    KnownHttpStatusCode["LengthRequired"] = "LengthRequired";
    /** PreconditionFailed */
    KnownHttpStatusCode["PreconditionFailed"] = "PreconditionFailed";
    /** RequestEntityTooLarge */
    KnownHttpStatusCode["RequestEntityTooLarge"] = "RequestEntityTooLarge";
    /** RequestUriTooLong */
    KnownHttpStatusCode["RequestUriTooLong"] = "RequestUriTooLong";
    /** UnsupportedMediaType */
    KnownHttpStatusCode["UnsupportedMediaType"] = "UnsupportedMediaType";
    /** RequestedRangeNotSatisfiable */
    KnownHttpStatusCode["RequestedRangeNotSatisfiable"] = "RequestedRangeNotSatisfiable";
    /** ExpectationFailed */
    KnownHttpStatusCode["ExpectationFailed"] = "ExpectationFailed";
    /** UpgradeRequired */
    KnownHttpStatusCode["UpgradeRequired"] = "UpgradeRequired";
    /** InternalServerError */
    KnownHttpStatusCode["InternalServerError"] = "InternalServerError";
    /** NotImplemented */
    KnownHttpStatusCode["NotImplemented"] = "NotImplemented";
    /** BadGateway */
    KnownHttpStatusCode["BadGateway"] = "BadGateway";
    /** ServiceUnavailable */
    KnownHttpStatusCode["ServiceUnavailable"] = "ServiceUnavailable";
    /** GatewayTimeout */
    KnownHttpStatusCode["GatewayTimeout"] = "GatewayTimeout";
    /** HttpVersionNotSupported */
    KnownHttpStatusCode["HttpVersionNotSupported"] = "HttpVersionNotSupported";
})(KnownHttpStatusCode || (KnownHttpStatusCode = {}));
/** Known values of {@link SourceControlType} that the service accepts. */
export var KnownSourceControlType;
(function (KnownSourceControlType) {
    /** VsoGit */
    KnownSourceControlType["VsoGit"] = "VsoGit";
    /** GitHub */
    KnownSourceControlType["GitHub"] = "GitHub";
    /** StorageAccount */
    KnownSourceControlType["StorageAccount"] = "StorageAccount";
})(KnownSourceControlType || (KnownSourceControlType = {}));
/** Known values of {@link FileUploadOptions} that the service accepts. */
export var KnownFileUploadOptions;
(function (KnownFileUploadOptions) {
    /** UploadFilesAndGenerateSasTokens */
    KnownFileUploadOptions["UploadFilesAndGenerateSasTokens"] = "UploadFilesAndGenerateSasTokens";
    /** None */
    KnownFileUploadOptions["None"] = "None";
})(KnownFileUploadOptions || (KnownFileUploadOptions = {}));
/** Known values of {@link TargetCostStatus} that the service accepts. */
export var KnownTargetCostStatus;
(function (KnownTargetCostStatus) {
    /** Enabled */
    KnownTargetCostStatus["Enabled"] = "Enabled";
    /** Disabled */
    KnownTargetCostStatus["Disabled"] = "Disabled";
})(KnownTargetCostStatus || (KnownTargetCostStatus = {}));
/** Known values of {@link CostThresholdStatus} that the service accepts. */
export var KnownCostThresholdStatus;
(function (KnownCostThresholdStatus) {
    /** Enabled */
    KnownCostThresholdStatus["Enabled"] = "Enabled";
    /** Disabled */
    KnownCostThresholdStatus["Disabled"] = "Disabled";
})(KnownCostThresholdStatus || (KnownCostThresholdStatus = {}));
/** Known values of {@link ReportingCycleType} that the service accepts. */
export var KnownReportingCycleType;
(function (KnownReportingCycleType) {
    /** CalendarMonth */
    KnownReportingCycleType["CalendarMonth"] = "CalendarMonth";
    /** Custom */
    KnownReportingCycleType["Custom"] = "Custom";
})(KnownReportingCycleType || (KnownReportingCycleType = {}));
/** Known values of {@link CostType} that the service accepts. */
export var KnownCostType;
(function (KnownCostType) {
    /** Unavailable */
    KnownCostType["Unavailable"] = "Unavailable";
    /** Reported */
    KnownCostType["Reported"] = "Reported";
    /** Projected */
    KnownCostType["Projected"] = "Projected";
})(KnownCostType || (KnownCostType = {}));
/** Known values of {@link WindowsOsState} that the service accepts. */
export var KnownWindowsOsState;
(function (KnownWindowsOsState) {
    /** NonSysprepped */
    KnownWindowsOsState["NonSysprepped"] = "NonSysprepped";
    /** SysprepRequested */
    KnownWindowsOsState["SysprepRequested"] = "SysprepRequested";
    /** SysprepApplied */
    KnownWindowsOsState["SysprepApplied"] = "SysprepApplied";
})(KnownWindowsOsState || (KnownWindowsOsState = {}));
/** Known values of {@link LinuxOsState} that the service accepts. */
export var KnownLinuxOsState;
(function (KnownLinuxOsState) {
    /** NonDeprovisioned */
    KnownLinuxOsState["NonDeprovisioned"] = "NonDeprovisioned";
    /** DeprovisionRequested */
    KnownLinuxOsState["DeprovisionRequested"] = "DeprovisionRequested";
    /** DeprovisionApplied */
    KnownLinuxOsState["DeprovisionApplied"] = "DeprovisionApplied";
})(KnownLinuxOsState || (KnownLinuxOsState = {}));
/** Known values of {@link CustomImageOsType} that the service accepts. */
export var KnownCustomImageOsType;
(function (KnownCustomImageOsType) {
    /** Windows */
    KnownCustomImageOsType["Windows"] = "Windows";
    /** Linux */
    KnownCustomImageOsType["Linux"] = "Linux";
    /** None */
    KnownCustomImageOsType["None"] = "None";
})(KnownCustomImageOsType || (KnownCustomImageOsType = {}));
/** Known values of {@link TransportProtocol} that the service accepts. */
export var KnownTransportProtocol;
(function (KnownTransportProtocol) {
    /** Tcp */
    KnownTransportProtocol["Tcp"] = "Tcp";
    /** Udp */
    KnownTransportProtocol["Udp"] = "Udp";
})(KnownTransportProtocol || (KnownTransportProtocol = {}));
/** Known values of {@link HostCachingOptions} that the service accepts. */
export var KnownHostCachingOptions;
(function (KnownHostCachingOptions) {
    /** None */
    KnownHostCachingOptions["None"] = "None";
    /** ReadOnly */
    KnownHostCachingOptions["ReadOnly"] = "ReadOnly";
    /** ReadWrite */
    KnownHostCachingOptions["ReadWrite"] = "ReadWrite";
})(KnownHostCachingOptions || (KnownHostCachingOptions = {}));
/** Known values of {@link NotificationChannelEventType} that the service accepts. */
export var KnownNotificationChannelEventType;
(function (KnownNotificationChannelEventType) {
    /** AutoShutdown */
    KnownNotificationChannelEventType["AutoShutdown"] = "AutoShutdown";
    /** Cost */
    KnownNotificationChannelEventType["Cost"] = "Cost";
})(KnownNotificationChannelEventType || (KnownNotificationChannelEventType = {}));
/** Known values of {@link PolicyStatus} that the service accepts. */
export var KnownPolicyStatus;
(function (KnownPolicyStatus) {
    /** Enabled */
    KnownPolicyStatus["Enabled"] = "Enabled";
    /** Disabled */
    KnownPolicyStatus["Disabled"] = "Disabled";
})(KnownPolicyStatus || (KnownPolicyStatus = {}));
/** Known values of {@link PolicyFactName} that the service accepts. */
export var KnownPolicyFactName;
(function (KnownPolicyFactName) {
    /** UserOwnedLabVmCount */
    KnownPolicyFactName["UserOwnedLabVmCount"] = "UserOwnedLabVmCount";
    /** UserOwnedLabPremiumVmCount */
    KnownPolicyFactName["UserOwnedLabPremiumVmCount"] = "UserOwnedLabPremiumVmCount";
    /** LabVmCount */
    KnownPolicyFactName["LabVmCount"] = "LabVmCount";
    /** LabPremiumVmCount */
    KnownPolicyFactName["LabPremiumVmCount"] = "LabPremiumVmCount";
    /** LabVmSize */
    KnownPolicyFactName["LabVmSize"] = "LabVmSize";
    /** GalleryImage */
    KnownPolicyFactName["GalleryImage"] = "GalleryImage";
    /** UserOwnedLabVmCountInSubnet */
    KnownPolicyFactName["UserOwnedLabVmCountInSubnet"] = "UserOwnedLabVmCountInSubnet";
    /** LabTargetCost */
    KnownPolicyFactName["LabTargetCost"] = "LabTargetCost";
    /** EnvironmentTemplate */
    KnownPolicyFactName["EnvironmentTemplate"] = "EnvironmentTemplate";
    /** ScheduleEditPermission */
    KnownPolicyFactName["ScheduleEditPermission"] = "ScheduleEditPermission";
})(KnownPolicyFactName || (KnownPolicyFactName = {}));
/** Known values of {@link PolicyEvaluatorType} that the service accepts. */
export var KnownPolicyEvaluatorType;
(function (KnownPolicyEvaluatorType) {
    /** AllowedValuesPolicy */
    KnownPolicyEvaluatorType["AllowedValuesPolicy"] = "AllowedValuesPolicy";
    /** MaxValuePolicy */
    KnownPolicyEvaluatorType["MaxValuePolicy"] = "MaxValuePolicy";
})(KnownPolicyEvaluatorType || (KnownPolicyEvaluatorType = {}));
/** Known values of {@link ManagedIdentityType} that the service accepts. */
export var KnownManagedIdentityType;
(function (KnownManagedIdentityType) {
    /** None */
    KnownManagedIdentityType["None"] = "None";
    /** SystemAssigned */
    KnownManagedIdentityType["SystemAssigned"] = "SystemAssigned";
    /** UserAssigned */
    KnownManagedIdentityType["UserAssigned"] = "UserAssigned";
    /** SystemAssignedUserAssigned */
    KnownManagedIdentityType["SystemAssignedUserAssigned"] = "SystemAssigned,UserAssigned";
})(KnownManagedIdentityType || (KnownManagedIdentityType = {}));
/** Known values of {@link VirtualMachineCreationSource} that the service accepts. */
export var KnownVirtualMachineCreationSource;
(function (KnownVirtualMachineCreationSource) {
    /** FromCustomImage */
    KnownVirtualMachineCreationSource["FromCustomImage"] = "FromCustomImage";
    /** FromGalleryImage */
    KnownVirtualMachineCreationSource["FromGalleryImage"] = "FromGalleryImage";
    /** FromSharedGalleryImage */
    KnownVirtualMachineCreationSource["FromSharedGalleryImage"] = "FromSharedGalleryImage";
})(KnownVirtualMachineCreationSource || (KnownVirtualMachineCreationSource = {}));
/** Known values of {@link UsagePermissionType} that the service accepts. */
export var KnownUsagePermissionType;
(function (KnownUsagePermissionType) {
    /** Default */
    KnownUsagePermissionType["Default"] = "Default";
    /** Deny */
    KnownUsagePermissionType["Deny"] = "Deny";
    /** Allow */
    KnownUsagePermissionType["Allow"] = "Allow";
})(KnownUsagePermissionType || (KnownUsagePermissionType = {}));
//# sourceMappingURL=index.js.map