import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { ArtifactSources } from "../operationsInterfaces";
import { DevTestLabsClient } from "../devTestLabsClient";
import { ArtifactSource, ArtifactSourcesListOptionalParams, ArtifactSourcesGetOptionalParams, ArtifactSourcesGetResponse, ArtifactSourcesCreateOrUpdateOptionalParams, ArtifactSourcesCreateOrUpdateResponse, ArtifactSourcesDeleteOptionalParams, ArtifactSourceFragment, ArtifactSourcesUpdateOptionalParams, ArtifactSourcesUpdateResponse } from "../models";
/** Class containing ArtifactSources operations. */
export declare class ArtifactSourcesImpl implements ArtifactSources {
    private readonly client;
    /**
     * Initialize a new instance of the class ArtifactSources class.
     * @param client Reference to the service client
     */
    constructor(client: DevTestLabsClient);
    /**
     * List artifact sources in a given lab.
     * @param resourceGroupName The name of the resource group.
     * @param labName The name of the lab.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, labName: string, options?: ArtifactSourcesListOptionalParams): PagedAsyncIterableIterator<ArtifactSource>;
    private listPagingPage;
    private listPagingAll;
    /**
     * List artifact sources in a given lab.
     * @param resourceGroupName The name of the resource group.
     * @param labName The name of the lab.
     * @param options The options parameters.
     */
    private _list;
    /**
     * Get artifact source.
     * @param resourceGroupName The name of the resource group.
     * @param labName The name of the lab.
     * @param name The name of the artifact source.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, labName: string, name: string, options?: ArtifactSourcesGetOptionalParams): Promise<ArtifactSourcesGetResponse>;
    /**
     * Create or replace an existing artifact source.
     * @param resourceGroupName The name of the resource group.
     * @param labName The name of the lab.
     * @param name The name of the artifact source.
     * @param artifactSource Properties of an artifact source.
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, labName: string, name: string, artifactSource: ArtifactSource, options?: ArtifactSourcesCreateOrUpdateOptionalParams): Promise<ArtifactSourcesCreateOrUpdateResponse>;
    /**
     * Delete artifact source.
     * @param resourceGroupName The name of the resource group.
     * @param labName The name of the lab.
     * @param name The name of the artifact source.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, labName: string, name: string, options?: ArtifactSourcesDeleteOptionalParams): Promise<void>;
    /**
     * Allows modifying tags of artifact sources. All other properties will be ignored.
     * @param resourceGroupName The name of the resource group.
     * @param labName The name of the lab.
     * @param name The name of the artifact source.
     * @param artifactSource Properties of an artifact source.
     * @param options The options parameters.
     */
    update(resourceGroupName: string, labName: string, name: string, artifactSource: ArtifactSourceFragment, options?: ArtifactSourcesUpdateOptionalParams): Promise<ArtifactSourcesUpdateResponse>;
    /**
     * ListNext
     * @param resourceGroupName The name of the resource group.
     * @param labName The name of the lab.
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=artifactSources.d.ts.map