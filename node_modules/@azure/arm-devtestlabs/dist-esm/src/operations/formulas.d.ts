import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Formulas } from "../operationsInterfaces";
import { DevTestLabsClient } from "../devTestLabsClient";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { Formula, FormulasListOptionalParams, FormulasGetOptionalParams, FormulasGetResponse, FormulasCreateOrUpdateOptionalParams, FormulasCreateOrUpdateResponse, FormulasDeleteOptionalParams, FormulaFragment, FormulasUpdateOptionalParams, FormulasUpdateResponse } from "../models";
/** Class containing Formulas operations. */
export declare class FormulasImpl implements Formulas {
    private readonly client;
    /**
     * Initialize a new instance of the class Formulas class.
     * @param client Reference to the service client
     */
    constructor(client: DevTestLabsClient);
    /**
     * List formulas in a given lab.
     * @param resourceGroupName The name of the resource group.
     * @param labName The name of the lab.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, labName: string, options?: FormulasListOptionalParams): PagedAsyncIterableIterator<Formula>;
    private listPagingPage;
    private listPagingAll;
    /**
     * List formulas in a given lab.
     * @param resourceGroupName The name of the resource group.
     * @param labName The name of the lab.
     * @param options The options parameters.
     */
    private _list;
    /**
     * Get formula.
     * @param resourceGroupName The name of the resource group.
     * @param labName The name of the lab.
     * @param name The name of the formula.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, labName: string, name: string, options?: FormulasGetOptionalParams): Promise<FormulasGetResponse>;
    /**
     * Create or replace an existing formula. This operation can take a while to complete.
     * @param resourceGroupName The name of the resource group.
     * @param labName The name of the lab.
     * @param name The name of the formula.
     * @param formula A formula for creating a VM, specifying an image base and other parameters
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, labName: string, name: string, formula: Formula, options?: FormulasCreateOrUpdateOptionalParams): Promise<PollerLike<PollOperationState<FormulasCreateOrUpdateResponse>, FormulasCreateOrUpdateResponse>>;
    /**
     * Create or replace an existing formula. This operation can take a while to complete.
     * @param resourceGroupName The name of the resource group.
     * @param labName The name of the lab.
     * @param name The name of the formula.
     * @param formula A formula for creating a VM, specifying an image base and other parameters
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, labName: string, name: string, formula: Formula, options?: FormulasCreateOrUpdateOptionalParams): Promise<FormulasCreateOrUpdateResponse>;
    /**
     * Delete formula.
     * @param resourceGroupName The name of the resource group.
     * @param labName The name of the lab.
     * @param name The name of the formula.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, labName: string, name: string, options?: FormulasDeleteOptionalParams): Promise<void>;
    /**
     * Allows modifying tags of formulas. All other properties will be ignored.
     * @param resourceGroupName The name of the resource group.
     * @param labName The name of the lab.
     * @param name The name of the formula.
     * @param formula A formula for creating a VM, specifying an image base and other parameters
     * @param options The options parameters.
     */
    update(resourceGroupName: string, labName: string, name: string, formula: FormulaFragment, options?: FormulasUpdateOptionalParams): Promise<FormulasUpdateResponse>;
    /**
     * ListNext
     * @param resourceGroupName The name of the resource group.
     * @param labName The name of the lab.
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=formulas.d.ts.map