import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { GlobalSchedules } from "../operationsInterfaces";
import { DevTestLabsClient } from "../devTestLabsClient";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { Schedule, GlobalSchedulesListBySubscriptionOptionalParams, GlobalSchedulesListByResourceGroupOptionalParams, GlobalSchedulesGetOptionalParams, GlobalSchedulesGetResponse, GlobalSchedulesCreateOrUpdateOptionalParams, GlobalSchedulesCreateOrUpdateResponse, GlobalSchedulesDeleteOptionalParams, ScheduleFragment, GlobalSchedulesUpdateOptionalParams, GlobalSchedulesUpdateResponse, GlobalSchedulesExecuteOptionalParams, RetargetScheduleProperties, GlobalSchedulesRetargetOptionalParams } from "../models";
/** Class containing GlobalSchedules operations. */
export declare class GlobalSchedulesImpl implements GlobalSchedules {
    private readonly client;
    /**
     * Initialize a new instance of the class GlobalSchedules class.
     * @param client Reference to the service client
     */
    constructor(client: DevTestLabsClient);
    /**
     * List schedules in a subscription.
     * @param options The options parameters.
     */
    listBySubscription(options?: GlobalSchedulesListBySubscriptionOptionalParams): PagedAsyncIterableIterator<Schedule>;
    private listBySubscriptionPagingPage;
    private listBySubscriptionPagingAll;
    /**
     * List schedules in a resource group.
     * @param resourceGroupName The name of the resource group.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: GlobalSchedulesListByResourceGroupOptionalParams): PagedAsyncIterableIterator<Schedule>;
    private listByResourceGroupPagingPage;
    private listByResourceGroupPagingAll;
    /**
     * List schedules in a subscription.
     * @param options The options parameters.
     */
    private _listBySubscription;
    /**
     * List schedules in a resource group.
     * @param resourceGroupName The name of the resource group.
     * @param options The options parameters.
     */
    private _listByResourceGroup;
    /**
     * Get schedule.
     * @param resourceGroupName The name of the resource group.
     * @param name The name of the schedule.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, name: string, options?: GlobalSchedulesGetOptionalParams): Promise<GlobalSchedulesGetResponse>;
    /**
     * Create or replace an existing schedule.
     * @param resourceGroupName The name of the resource group.
     * @param name The name of the schedule.
     * @param schedule A schedule.
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, name: string, schedule: Schedule, options?: GlobalSchedulesCreateOrUpdateOptionalParams): Promise<GlobalSchedulesCreateOrUpdateResponse>;
    /**
     * Delete schedule.
     * @param resourceGroupName The name of the resource group.
     * @param name The name of the schedule.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, name: string, options?: GlobalSchedulesDeleteOptionalParams): Promise<void>;
    /**
     * Allows modifying tags of schedules. All other properties will be ignored.
     * @param resourceGroupName The name of the resource group.
     * @param name The name of the schedule.
     * @param schedule A schedule.
     * @param options The options parameters.
     */
    update(resourceGroupName: string, name: string, schedule: ScheduleFragment, options?: GlobalSchedulesUpdateOptionalParams): Promise<GlobalSchedulesUpdateResponse>;
    /**
     * Execute a schedule. This operation can take a while to complete.
     * @param resourceGroupName The name of the resource group.
     * @param name The name of the schedule.
     * @param options The options parameters.
     */
    beginExecute(resourceGroupName: string, name: string, options?: GlobalSchedulesExecuteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Execute a schedule. This operation can take a while to complete.
     * @param resourceGroupName The name of the resource group.
     * @param name The name of the schedule.
     * @param options The options parameters.
     */
    beginExecuteAndWait(resourceGroupName: string, name: string, options?: GlobalSchedulesExecuteOptionalParams): Promise<void>;
    /**
     * Updates a schedule's target resource Id. This operation can take a while to complete.
     * @param resourceGroupName The name of the resource group.
     * @param name The name of the schedule.
     * @param retargetScheduleProperties Properties for retargeting a virtual machine schedule.
     * @param options The options parameters.
     */
    beginRetarget(resourceGroupName: string, name: string, retargetScheduleProperties: RetargetScheduleProperties, options?: GlobalSchedulesRetargetOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Updates a schedule's target resource Id. This operation can take a while to complete.
     * @param resourceGroupName The name of the resource group.
     * @param name The name of the schedule.
     * @param retargetScheduleProperties Properties for retargeting a virtual machine schedule.
     * @param options The options parameters.
     */
    beginRetargetAndWait(resourceGroupName: string, name: string, retargetScheduleProperties: RetargetScheduleProperties, options?: GlobalSchedulesRetargetOptionalParams): Promise<void>;
    /**
     * ListBySubscriptionNext
     * @param nextLink The nextLink from the previous successful call to the ListBySubscription method.
     * @param options The options parameters.
     */
    private _listBySubscriptionNext;
    /**
     * ListByResourceGroupNext
     * @param resourceGroupName The name of the resource group.
     * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.
     * @param options The options parameters.
     */
    private _listByResourceGroupNext;
}
//# sourceMappingURL=globalSchedules.d.ts.map