/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
export var acceptLanguage = {
    parameterPath: "acceptLanguage",
    mapper: {
        serializedName: "accept-language",
        defaultValue: 'en-US',
        type: {
            name: "String"
        }
    }
};
export var apiVersion = {
    parameterPath: "apiVersion",
    mapper: {
        required: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
export var clientGroupName = {
    parameterPath: "clientGroupName",
    mapper: {
        required: true,
        serializedName: "clientGroupName",
        constraints: {
            MaxLength: 256,
            MinLength: 3
        },
        type: {
            name: "String"
        }
    }
};
export var endTime = {
    parameterPath: [
        "options",
        "endTime"
    ],
    mapper: {
        serializedName: "endTime",
        type: {
            name: "DateTime"
        }
    }
};
export var live = {
    parameterPath: [
        "options",
        "live"
    ],
    mapper: {
        serializedName: "live",
        defaultValue: true,
        type: {
            name: "Boolean"
        }
    }
};
export var machineGroupName = {
    parameterPath: "machineGroupName",
    mapper: {
        required: true,
        serializedName: "machineGroupName",
        constraints: {
            MaxLength: 36,
            MinLength: 36
        },
        type: {
            name: "String"
        }
    }
};
export var machineName = {
    parameterPath: "machineName",
    mapper: {
        required: true,
        serializedName: "machineName",
        constraints: {
            MaxLength: 64,
            MinLength: 3
        },
        type: {
            name: "String"
        }
    }
};
export var nextPageLink = {
    parameterPath: "nextPageLink",
    mapper: {
        required: true,
        serializedName: "nextLink",
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export var portName = {
    parameterPath: "portName",
    mapper: {
        required: true,
        serializedName: "portName",
        constraints: {
            MaxLength: 64,
            MinLength: 3
        },
        type: {
            name: "String"
        }
    }
};
export var processName = {
    parameterPath: "processName",
    mapper: {
        required: true,
        serializedName: "processName",
        constraints: {
            MaxLength: 128,
            MinLength: 3
        },
        type: {
            name: "String"
        }
    }
};
export var resourceGroupName = {
    parameterPath: "resourceGroupName",
    mapper: {
        required: true,
        serializedName: "resourceGroupName",
        constraints: {
            MaxLength: 64,
            MinLength: 1,
            Pattern: /[a-zA-Z0-9_-]+/
        },
        type: {
            name: "String"
        }
    }
};
export var startTime = {
    parameterPath: [
        "options",
        "startTime"
    ],
    mapper: {
        serializedName: "startTime",
        type: {
            name: "DateTime"
        }
    }
};
export var subscriptionId = {
    parameterPath: "subscriptionId",
    mapper: {
        required: true,
        serializedName: "subscriptionId",
        type: {
            name: "String"
        }
    }
};
export var timestamp = {
    parameterPath: [
        "options",
        "timestamp"
    ],
    mapper: {
        serializedName: "timestamp",
        type: {
            name: "DateTime"
        }
    }
};
export var top = {
    parameterPath: [
        "options",
        "top"
    ],
    mapper: {
        serializedName: "$top",
        constraints: {
            InclusiveMaximum: 200,
            InclusiveMinimum: 1
        },
        type: {
            name: "Number"
        }
    }
};
export var workspaceName = {
    parameterPath: "workspaceName",
    mapper: {
        required: true,
        serializedName: "workspaceName",
        constraints: {
            MaxLength: 63,
            MinLength: 3,
            Pattern: /[a-zA-Z0-9_][a-zA-Z0-9_-]+[a-zA-Z0-9_]/
        },
        type: {
            name: "String"
        }
    }
};
//# sourceMappingURL=parameters.js.map