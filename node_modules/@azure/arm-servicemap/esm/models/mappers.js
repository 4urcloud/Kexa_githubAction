/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __assign } from "tslib";
import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
export var CloudError = CloudErrorMapper;
export var BaseResource = BaseResourceMapper;
export var Resource = {
    serializedName: "Resource",
    type: {
        name: "Composite",
        className: "Resource",
        modelProperties: {
            id: {
                readOnly: true,
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            type: {
                readOnly: true,
                serializedName: "type",
                type: {
                    name: "String"
                }
            },
            name: {
                readOnly: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ResourceReference = {
    serializedName: "ResourceReference",
    type: {
        name: "Composite",
        polymorphicDiscriminator: {
            serializedName: "kind",
            clientName: "kind"
        },
        uberParent: "ResourceReference",
        className: "ResourceReference",
        modelProperties: {
            id: {
                required: true,
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            type: {
                readOnly: true,
                serializedName: "type",
                type: {
                    name: "String"
                }
            },
            name: {
                readOnly: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            kind: {
                required: true,
                serializedName: "kind",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var MachineReference = {
    serializedName: "ref:machine",
    type: {
        name: "Composite",
        polymorphicDiscriminator: ResourceReference.type.polymorphicDiscriminator,
        uberParent: "ResourceReference",
        className: "MachineReference",
        modelProperties: __assign({}, ResourceReference.type.modelProperties)
    }
};
export var ProcessReference = {
    serializedName: "ref:process",
    type: {
        name: "Composite",
        polymorphicDiscriminator: ResourceReference.type.polymorphicDiscriminator,
        uberParent: "ResourceReference",
        className: "ProcessReference",
        modelProperties: __assign(__assign({}, ResourceReference.type.modelProperties), { machine: {
                readOnly: true,
                serializedName: "properties.machine",
                type: {
                    name: "Composite",
                    className: "MachineReference"
                }
            } })
    }
};
export var PortReference = {
    serializedName: "ref:port",
    type: {
        name: "Composite",
        polymorphicDiscriminator: ResourceReference.type.polymorphicDiscriminator,
        uberParent: "ResourceReference",
        className: "PortReference",
        modelProperties: __assign(__assign({}, ResourceReference.type.modelProperties), { machine: {
                readOnly: true,
                serializedName: "properties.machine",
                type: {
                    name: "Composite",
                    className: "MachineReference"
                }
            }, ipAddress: {
                readOnly: true,
                serializedName: "properties.ipAddress",
                type: {
                    name: "String"
                }
            }, portNumber: {
                serializedName: "properties.portNumber",
                type: {
                    name: "Number"
                }
            } })
    }
};
export var MachineReferenceWithHints = {
    serializedName: "ref:machinewithhints",
    type: {
        name: "Composite",
        polymorphicDiscriminator: ResourceReference.type.polymorphicDiscriminator,
        uberParent: "ResourceReference",
        className: "MachineReferenceWithHints",
        modelProperties: __assign(__assign({}, ResourceReference.type.modelProperties), { displayNameHint: {
                readOnly: true,
                serializedName: "properties.displayNameHint",
                type: {
                    name: "String"
                }
            }, osFamilyHint: {
                readOnly: true,
                serializedName: "properties.osFamilyHint",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "unknown",
                        "windows",
                        "linux",
                        "solaris",
                        "aix"
                    ]
                }
            } })
    }
};
export var ClientGroupReference = {
    serializedName: "ref:clientgroup",
    type: {
        name: "Composite",
        polymorphicDiscriminator: ResourceReference.type.polymorphicDiscriminator,
        uberParent: "ResourceReference",
        className: "ClientGroupReference",
        modelProperties: __assign({}, ResourceReference.type.modelProperties)
    }
};
export var CoreResource = {
    serializedName: "CoreResource",
    type: {
        name: "Composite",
        polymorphicDiscriminator: {
            serializedName: "kind",
            clientName: "kind"
        },
        uberParent: "BaseResource",
        className: "CoreResource",
        modelProperties: __assign(__assign({}, Resource.type.modelProperties), { etag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            }, kind: {
                required: true,
                serializedName: "kind",
                type: {
                    name: "String"
                }
            } })
    }
};
export var Timezone = {
    serializedName: "Timezone",
    type: {
        name: "Composite",
        className: "Timezone",
        modelProperties: {
            fullName: {
                serializedName: "fullName",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var AgentConfiguration = {
    serializedName: "AgentConfiguration",
    type: {
        name: "Composite",
        className: "AgentConfiguration",
        modelProperties: {
            agentId: {
                required: true,
                serializedName: "agentId",
                type: {
                    name: "String"
                }
            },
            dependencyAgentId: {
                serializedName: "dependencyAgentId",
                type: {
                    name: "String"
                }
            },
            dependencyAgentVersion: {
                serializedName: "dependencyAgentVersion",
                type: {
                    name: "String"
                }
            },
            dependencyAgentRevision: {
                serializedName: "dependencyAgentRevision",
                type: {
                    name: "String"
                }
            },
            rebootStatus: {
                serializedName: "rebootStatus",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "unknown",
                        "rebooted",
                        "notRebooted"
                    ]
                }
            },
            clockGranularity: {
                serializedName: "clockGranularity",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export var MachineResourcesConfiguration = {
    serializedName: "MachineResourcesConfiguration",
    type: {
        name: "Composite",
        className: "MachineResourcesConfiguration",
        modelProperties: {
            physicalMemory: {
                serializedName: "physicalMemory",
                type: {
                    name: "Number"
                }
            },
            cpus: {
                serializedName: "cpus",
                type: {
                    name: "Number"
                }
            },
            cpuSpeed: {
                serializedName: "cpuSpeed",
                type: {
                    name: "Number"
                }
            },
            cpuSpeedAccuracy: {
                serializedName: "cpuSpeedAccuracy",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "actual",
                        "estimated"
                    ]
                }
            }
        }
    }
};
export var Ipv4NetworkInterface = {
    serializedName: "Ipv4NetworkInterface",
    type: {
        name: "Composite",
        className: "Ipv4NetworkInterface",
        modelProperties: {
            ipAddress: {
                required: true,
                serializedName: "ipAddress",
                type: {
                    name: "String"
                }
            },
            subnetMask: {
                serializedName: "subnetMask",
                defaultValue: '255.255.255.255',
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var Ipv6NetworkInterface = {
    serializedName: "Ipv6NetworkInterface",
    type: {
        name: "Composite",
        className: "Ipv6NetworkInterface",
        modelProperties: {
            ipAddress: {
                required: true,
                serializedName: "ipAddress",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var NetworkConfiguration = {
    serializedName: "NetworkConfiguration",
    type: {
        name: "Composite",
        className: "NetworkConfiguration",
        modelProperties: {
            ipv4Interfaces: {
                serializedName: "ipv4Interfaces",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Ipv4NetworkInterface"
                        }
                    }
                }
            },
            ipv6Interfaces: {
                serializedName: "ipv6Interfaces",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Ipv6NetworkInterface"
                        }
                    }
                }
            },
            defaultIpv4Gateways: {
                serializedName: "defaultIpv4Gateways",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            macAddresses: {
                serializedName: "macAddresses",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            dnsNames: {
                serializedName: "dnsNames",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export var OperatingSystemConfiguration = {
    serializedName: "OperatingSystemConfiguration",
    type: {
        name: "Composite",
        className: "OperatingSystemConfiguration",
        modelProperties: {
            family: {
                required: true,
                serializedName: "family",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "unknown",
                        "windows",
                        "linux",
                        "solaris",
                        "aix"
                    ]
                }
            },
            fullName: {
                required: true,
                serializedName: "fullName",
                type: {
                    name: "String"
                }
            },
            bitness: {
                required: true,
                serializedName: "bitness",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "32bit",
                        "64bit"
                    ]
                }
            }
        }
    }
};
export var VirtualMachineConfiguration = {
    serializedName: "VirtualMachineConfiguration",
    type: {
        name: "Composite",
        className: "VirtualMachineConfiguration",
        modelProperties: {
            virtualMachineType: {
                serializedName: "virtualMachineType",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "unknown",
                        "hyperv",
                        "ldom",
                        "lpar",
                        "vmware",
                        "virtualPc",
                        "xen"
                    ]
                }
            },
            nativeMachineId: {
                serializedName: "nativeMachineId",
                type: {
                    name: "String"
                }
            },
            virtualMachineName: {
                serializedName: "virtualMachineName",
                type: {
                    name: "String"
                }
            },
            nativeHostMachineId: {
                serializedName: "nativeHostMachineId",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var HypervisorConfiguration = {
    serializedName: "HypervisorConfiguration",
    type: {
        name: "Composite",
        className: "HypervisorConfiguration",
        modelProperties: {
            hypervisorType: {
                serializedName: "hypervisorType",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "unknown",
                        "hyperv"
                    ]
                }
            },
            nativeHostMachineId: {
                serializedName: "nativeHostMachineId",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var HostingConfiguration = {
    serializedName: "HostingConfiguration",
    type: {
        name: "Composite",
        polymorphicDiscriminator: {
            serializedName: "kind",
            clientName: "kind"
        },
        uberParent: "HostingConfiguration",
        className: "HostingConfiguration",
        modelProperties: {
            provider: {
                serializedName: "provider",
                type: {
                    name: "String"
                }
            },
            kind: {
                required: true,
                serializedName: "kind",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var Machine = {
    serializedName: "machine",
    type: {
        name: "Composite",
        className: "Machine",
        modelProperties: __assign(__assign({}, CoreResource.type.modelProperties), { timestamp: {
                serializedName: "properties.timestamp",
                type: {
                    name: "DateTime"
                }
            }, monitoringState: {
                serializedName: "properties.monitoringState",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "monitored",
                        "discovered"
                    ]
                }
            }, virtualizationState: {
                serializedName: "properties.virtualizationState",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "unknown",
                        "physical",
                        "virtual",
                        "hypervisor"
                    ]
                }
            }, displayName: {
                serializedName: "properties.displayName",
                type: {
                    name: "String"
                }
            }, computerName: {
                serializedName: "properties.computerName",
                type: {
                    name: "String"
                }
            }, fullyQualifiedDomainName: {
                serializedName: "properties.fullyQualifiedDomainName",
                type: {
                    name: "String"
                }
            }, bootTime: {
                serializedName: "properties.bootTime",
                type: {
                    name: "DateTime"
                }
            }, timezone: {
                serializedName: "properties.timezone",
                type: {
                    name: "Composite",
                    className: "Timezone"
                }
            }, agent: {
                serializedName: "properties.agent",
                type: {
                    name: "Composite",
                    className: "AgentConfiguration"
                }
            }, resources: {
                serializedName: "properties.resources",
                type: {
                    name: "Composite",
                    className: "MachineResourcesConfiguration"
                }
            }, networking: {
                serializedName: "properties.networking",
                type: {
                    name: "Composite",
                    className: "NetworkConfiguration"
                }
            }, operatingSystem: {
                serializedName: "properties.operatingSystem",
                type: {
                    name: "Composite",
                    className: "OperatingSystemConfiguration"
                }
            }, virtualMachine: {
                serializedName: "properties.virtualMachine",
                type: {
                    name: "Composite",
                    className: "VirtualMachineConfiguration"
                }
            }, hypervisor: {
                serializedName: "properties.hypervisor",
                type: {
                    name: "Composite",
                    className: "HypervisorConfiguration"
                }
            }, hosting: {
                serializedName: "properties.hosting",
                type: {
                    name: "Composite",
                    className: "HostingConfiguration"
                }
            } })
    }
};
export var ProcessHostedService = {
    serializedName: "ProcessHostedService",
    type: {
        name: "Composite",
        className: "ProcessHostedService",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            displayName: {
                serializedName: "displayName",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ProcessDetails = {
    serializedName: "ProcessDetails",
    type: {
        name: "Composite",
        className: "ProcessDetails",
        modelProperties: {
            persistentKey: {
                serializedName: "persistentKey",
                type: {
                    name: "String"
                }
            },
            poolId: {
                serializedName: "poolId",
                type: {
                    name: "Number"
                }
            },
            firstPid: {
                serializedName: "firstPid",
                type: {
                    name: "Number"
                }
            },
            description: {
                serializedName: "description",
                type: {
                    name: "String"
                }
            },
            companyName: {
                serializedName: "companyName",
                type: {
                    name: "String"
                }
            },
            internalName: {
                serializedName: "internalName",
                type: {
                    name: "String"
                }
            },
            productName: {
                serializedName: "productName",
                type: {
                    name: "String"
                }
            },
            productVersion: {
                serializedName: "productVersion",
                type: {
                    name: "String"
                }
            },
            fileVersion: {
                serializedName: "fileVersion",
                type: {
                    name: "String"
                }
            },
            commandLine: {
                serializedName: "commandLine",
                type: {
                    name: "String"
                }
            },
            executablePath: {
                serializedName: "executablePath",
                type: {
                    name: "String"
                }
            },
            workingDirectory: {
                serializedName: "workingDirectory",
                type: {
                    name: "String"
                }
            },
            services: {
                serializedName: "services",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ProcessHostedService"
                        }
                    }
                }
            },
            zoneName: {
                serializedName: "zoneName",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ProcessUser = {
    serializedName: "ProcessUser",
    type: {
        name: "Composite",
        className: "ProcessUser",
        modelProperties: {
            userName: {
                serializedName: "userName",
                type: {
                    name: "String"
                }
            },
            userDomain: {
                serializedName: "userDomain",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ProcessHostingConfiguration = {
    serializedName: "ProcessHostingConfiguration",
    type: {
        name: "Composite",
        polymorphicDiscriminator: {
            serializedName: "kind",
            clientName: "kind"
        },
        uberParent: "ProcessHostingConfiguration",
        className: "ProcessHostingConfiguration",
        modelProperties: {
            provider: {
                serializedName: "provider",
                type: {
                    name: "String"
                }
            },
            kind: {
                required: true,
                serializedName: "kind",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var Process = {
    serializedName: "process",
    type: {
        name: "Composite",
        className: "Process",
        modelProperties: __assign(__assign({}, CoreResource.type.modelProperties), { timestamp: {
                serializedName: "properties.timestamp",
                type: {
                    name: "DateTime"
                }
            }, monitoringState: {
                serializedName: "properties.monitoringState",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "monitored",
                        "discovered"
                    ]
                }
            }, machine: {
                serializedName: "properties.machine",
                type: {
                    name: "Composite",
                    className: "ResourceReference"
                }
            }, executableName: {
                serializedName: "properties.executableName",
                type: {
                    name: "String"
                }
            }, displayName: {
                serializedName: "properties.displayName",
                type: {
                    name: "String"
                }
            }, startTime: {
                serializedName: "properties.startTime",
                type: {
                    name: "DateTime"
                }
            }, role: {
                serializedName: "properties.role",
                type: {
                    name: "String"
                }
            }, group: {
                serializedName: "properties.group",
                type: {
                    name: "String"
                }
            }, details: {
                serializedName: "properties.details",
                type: {
                    name: "Composite",
                    className: "ProcessDetails"
                }
            }, user: {
                serializedName: "properties.user",
                type: {
                    name: "Composite",
                    className: "ProcessUser"
                }
            }, clientOf: {
                serializedName: "properties.clientOf",
                type: {
                    name: "Composite",
                    className: "ResourceReference"
                }
            }, acceptorOf: {
                serializedName: "properties.acceptorOf",
                type: {
                    name: "Composite",
                    className: "ResourceReference"
                }
            }, hosting: {
                serializedName: "properties.hosting",
                type: {
                    name: "Composite",
                    className: "ProcessHostingConfiguration"
                }
            } })
    }
};
export var Port = {
    serializedName: "port",
    type: {
        name: "Composite",
        className: "Port",
        modelProperties: __assign(__assign({}, CoreResource.type.modelProperties), { monitoringState: {
                serializedName: "properties.monitoringState",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "monitored",
                        "discovered"
                    ]
                }
            }, machine: {
                serializedName: "properties.machine",
                type: {
                    name: "Composite",
                    className: "ResourceReference"
                }
            }, displayName: {
                serializedName: "properties.displayName",
                type: {
                    name: "String"
                }
            }, ipAddress: {
                serializedName: "properties.ipAddress",
                type: {
                    name: "String"
                }
            }, portNumber: {
                serializedName: "properties.portNumber",
                type: {
                    name: "Number"
                }
            } })
    }
};
export var ClientGroup = {
    serializedName: "clientGroup",
    type: {
        name: "Composite",
        className: "ClientGroup",
        modelProperties: __assign(__assign({}, CoreResource.type.modelProperties), { clientsOf: {
                required: true,
                serializedName: "properties.clientsOf",
                type: {
                    name: "Composite",
                    className: "ResourceReference"
                }
            } })
    }
};
export var ClientGroupMember = {
    serializedName: "ClientGroupMember",
    type: {
        name: "Composite",
        className: "ClientGroupMember",
        modelProperties: __assign(__assign({}, Resource.type.modelProperties), { ipAddress: {
                serializedName: "properties.ipAddress",
                type: {
                    name: "String"
                }
            }, port: {
                serializedName: "properties.port",
                type: {
                    name: "Composite",
                    className: "PortReference"
                }
            }, processes: {
                serializedName: "properties.processes",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ProcessReference"
                        }
                    }
                }
            } })
    }
};
export var MachineGroup = {
    serializedName: "machineGroup",
    type: {
        name: "Composite",
        className: "MachineGroup",
        modelProperties: __assign(__assign({}, CoreResource.type.modelProperties), { groupType: {
                serializedName: "properties.groupType",
                type: {
                    name: "String"
                }
            }, displayName: {
                required: true,
                serializedName: "properties.displayName",
                constraints: {
                    MaxLength: 256,
                    MinLength: 1
                },
                type: {
                    name: "String"
                }
            }, count: {
                serializedName: "properties.count",
                type: {
                    name: "Number"
                }
            }, machines: {
                serializedName: "properties.machines",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "MachineReferenceWithHints"
                        }
                    }
                }
            } })
    }
};
export var Summary = {
    serializedName: "Summary",
    type: {
        name: "Composite",
        className: "Summary",
        modelProperties: __assign({}, Resource.type.modelProperties)
    }
};
export var MachineCountsByOperatingSystem = {
    serializedName: "MachineCountsByOperatingSystem",
    type: {
        name: "Composite",
        className: "MachineCountsByOperatingSystem",
        modelProperties: {
            windows: {
                required: true,
                serializedName: "windows",
                type: {
                    name: "Number"
                }
            },
            linux: {
                required: true,
                serializedName: "linux",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export var MachinesSummary = {
    serializedName: "MachinesSummary",
    type: {
        name: "Composite",
        className: "MachinesSummary",
        modelProperties: __assign(__assign({}, Summary.type.modelProperties), { startTime: {
                required: true,
                serializedName: "properties.startTime",
                type: {
                    name: "DateTime"
                }
            }, endTime: {
                required: true,
                serializedName: "properties.endTime",
                type: {
                    name: "DateTime"
                }
            }, total: {
                required: true,
                serializedName: "properties.total",
                type: {
                    name: "Number"
                }
            }, live: {
                required: true,
                serializedName: "properties.live",
                type: {
                    name: "Number"
                }
            }, os: {
                required: true,
                serializedName: "properties.os",
                type: {
                    name: "Composite",
                    className: "MachineCountsByOperatingSystem"
                }
            } })
    }
};
export var Relationship = {
    serializedName: "Relationship",
    type: {
        name: "Composite",
        polymorphicDiscriminator: {
            serializedName: "kind",
            clientName: "kind"
        },
        uberParent: "BaseResource",
        className: "Relationship",
        modelProperties: __assign(__assign({}, Resource.type.modelProperties), { kind: {
                required: true,
                serializedName: "kind",
                type: {
                    name: "String"
                }
            } })
    }
};
export var Connection = {
    serializedName: "rel:connection",
    type: {
        name: "Composite",
        className: "Connection",
        modelProperties: __assign(__assign({}, Relationship.type.modelProperties), { source: {
                required: true,
                serializedName: "properties.source",
                type: {
                    name: "Composite",
                    className: "ResourceReference"
                }
            }, destination: {
                required: true,
                serializedName: "properties.destination",
                type: {
                    name: "Composite",
                    className: "ResourceReference"
                }
            }, startTime: {
                serializedName: "properties.startTime",
                type: {
                    name: "DateTime"
                }
            }, endTime: {
                serializedName: "properties.endTime",
                type: {
                    name: "DateTime"
                }
            }, serverPort: {
                serializedName: "properties.serverPort",
                type: {
                    name: "Composite",
                    className: "PortReference"
                }
            }, failureState: {
                serializedName: "properties.failureState",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "ok",
                        "failed",
                        "mixed"
                    ]
                }
            } })
    }
};
export var Acceptor = {
    serializedName: "rel:acceptor",
    type: {
        name: "Composite",
        className: "Acceptor",
        modelProperties: __assign(__assign({}, Relationship.type.modelProperties), { source: {
                required: true,
                serializedName: "properties.source",
                type: {
                    name: "Composite",
                    className: "PortReference"
                }
            }, destination: {
                required: true,
                serializedName: "properties.destination",
                type: {
                    name: "Composite",
                    className: "ProcessReference"
                }
            }, startTime: {
                serializedName: "properties.startTime",
                type: {
                    name: "DateTime"
                }
            }, endTime: {
                serializedName: "properties.endTime",
                type: {
                    name: "DateTime"
                }
            } })
    }
};
export var SummaryProperties = {
    serializedName: "SummaryProperties",
    type: {
        name: "Composite",
        className: "SummaryProperties",
        modelProperties: {
            startTime: {
                required: true,
                serializedName: "startTime",
                type: {
                    name: "DateTime"
                }
            },
            endTime: {
                required: true,
                serializedName: "endTime",
                type: {
                    name: "DateTime"
                }
            }
        }
    }
};
export var RelationshipProperties = {
    serializedName: "RelationshipProperties",
    type: {
        name: "Composite",
        className: "RelationshipProperties",
        modelProperties: {
            source: {
                required: true,
                serializedName: "source",
                type: {
                    name: "Composite",
                    className: "ResourceReference"
                }
            },
            destination: {
                required: true,
                serializedName: "destination",
                type: {
                    name: "Composite",
                    className: "ResourceReference"
                }
            },
            startTime: {
                serializedName: "startTime",
                type: {
                    name: "DateTime"
                }
            },
            endTime: {
                serializedName: "endTime",
                type: {
                    name: "DateTime"
                }
            }
        }
    }
};
export var ImageConfiguration = {
    serializedName: "ImageConfiguration",
    type: {
        name: "Composite",
        className: "ImageConfiguration",
        modelProperties: {
            publisher: {
                serializedName: "publisher",
                type: {
                    name: "String"
                }
            },
            offering: {
                serializedName: "offering",
                type: {
                    name: "String"
                }
            },
            sku: {
                serializedName: "sku",
                type: {
                    name: "String"
                }
            },
            version: {
                serializedName: "version",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var AzureCloudServiceConfiguration = {
    serializedName: "AzureCloudServiceConfiguration",
    type: {
        name: "Composite",
        className: "AzureCloudServiceConfiguration",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            instanceId: {
                serializedName: "instanceId",
                type: {
                    name: "String"
                }
            },
            deployment: {
                serializedName: "deployment",
                type: {
                    name: "String"
                }
            },
            roleName: {
                serializedName: "roleName",
                type: {
                    name: "String"
                }
            },
            roleType: {
                serializedName: "roleType",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "unknown",
                        "worker",
                        "web"
                    ]
                }
            }
        }
    }
};
export var AzureVmScaleSetConfiguration = {
    serializedName: "AzureVmScaleSetConfiguration",
    type: {
        name: "Composite",
        className: "AzureVmScaleSetConfiguration",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            instanceId: {
                serializedName: "instanceId",
                type: {
                    name: "String"
                }
            },
            deployment: {
                serializedName: "deployment",
                type: {
                    name: "String"
                }
            },
            resourceId: {
                serializedName: "resourceId",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var AzureServiceFabricClusterConfiguration = {
    serializedName: "AzureServiceFabricClusterConfiguration",
    type: {
        name: "Composite",
        className: "AzureServiceFabricClusterConfiguration",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            clusterId: {
                serializedName: "clusterId",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var AzureHostingConfiguration = {
    serializedName: "provider:azure",
    type: {
        name: "Composite",
        polymorphicDiscriminator: HostingConfiguration.type.polymorphicDiscriminator,
        uberParent: "HostingConfiguration",
        className: "AzureHostingConfiguration",
        modelProperties: __assign(__assign({}, HostingConfiguration.type.modelProperties), { vmId: {
                serializedName: "vmId",
                type: {
                    name: "String"
                }
            }, location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }, name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            }, size: {
                serializedName: "size",
                type: {
                    name: "String"
                }
            }, updateDomain: {
                serializedName: "updateDomain",
                type: {
                    name: "String"
                }
            }, faultDomain: {
                serializedName: "faultDomain",
                type: {
                    name: "String"
                }
            }, subscriptionId: {
                serializedName: "subscriptionId",
                type: {
                    name: "String"
                }
            }, resourceGroup: {
                serializedName: "resourceGroup",
                type: {
                    name: "String"
                }
            }, resourceId: {
                serializedName: "resourceId",
                type: {
                    name: "String"
                }
            }, image: {
                serializedName: "image",
                type: {
                    name: "Composite",
                    className: "ImageConfiguration"
                }
            }, cloudService: {
                serializedName: "cloudService",
                type: {
                    name: "Composite",
                    className: "AzureCloudServiceConfiguration"
                }
            }, vmScaleSet: {
                serializedName: "vmScaleSet",
                type: {
                    name: "Composite",
                    className: "AzureVmScaleSetConfiguration"
                }
            }, serviceFabricCluster: {
                serializedName: "serviceFabricCluster",
                type: {
                    name: "Composite",
                    className: "AzureServiceFabricClusterConfiguration"
                }
            } })
    }
};
export var AzureProcessHostingConfiguration = {
    serializedName: "provider:azure",
    type: {
        name: "Composite",
        polymorphicDiscriminator: ProcessHostingConfiguration.type.polymorphicDiscriminator,
        uberParent: "ProcessHostingConfiguration",
        className: "AzureProcessHostingConfiguration",
        modelProperties: __assign(__assign({}, ProcessHostingConfiguration.type.modelProperties), { cloudService: {
                serializedName: "cloudService",
                type: {
                    name: "Composite",
                    className: "AzureCloudServiceConfiguration"
                }
            } })
    }
};
export var MapNodes = {
    serializedName: "MapNodes",
    type: {
        name: "Composite",
        className: "MapNodes",
        modelProperties: {
            machines: {
                serializedName: "machines",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Machine"
                        }
                    }
                }
            },
            processes: {
                serializedName: "processes",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Process"
                        }
                    }
                }
            },
            ports: {
                serializedName: "ports",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Port"
                        }
                    }
                }
            },
            clientGroups: {
                serializedName: "clientGroups",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ClientGroup"
                        }
                    }
                }
            }
        }
    }
};
export var MapEdges = {
    serializedName: "MapEdges",
    type: {
        name: "Composite",
        className: "MapEdges",
        modelProperties: {
            connections: {
                serializedName: "connections",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Connection"
                        }
                    }
                }
            },
            acceptors: {
                serializedName: "acceptors",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Acceptor"
                        }
                    }
                }
            }
        }
    }
};
export var Map = {
    serializedName: "Map",
    type: {
        name: "Composite",
        className: "Map",
        modelProperties: {
            nodes: {
                required: true,
                serializedName: "nodes",
                type: {
                    name: "Composite",
                    className: "MapNodes"
                }
            },
            edges: {
                required: true,
                serializedName: "edges",
                type: {
                    name: "Composite",
                    className: "MapEdges"
                }
            }
        }
    }
};
export var Liveness = {
    serializedName: "Liveness",
    type: {
        name: "Composite",
        className: "Liveness",
        modelProperties: {
            startTime: {
                required: true,
                serializedName: "startTime",
                type: {
                    name: "DateTime"
                }
            },
            endTime: {
                required: true,
                serializedName: "endTime",
                type: {
                    name: "DateTime"
                }
            },
            live: {
                required: true,
                serializedName: "live",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export var MapRequest = {
    serializedName: "MapRequest",
    type: {
        name: "Composite",
        polymorphicDiscriminator: {
            serializedName: "kind",
            clientName: "kind"
        },
        uberParent: "MapRequest",
        className: "MapRequest",
        modelProperties: {
            startTime: {
                serializedName: "startTime",
                type: {
                    name: "DateTime"
                }
            },
            endTime: {
                serializedName: "endTime",
                type: {
                    name: "DateTime"
                }
            },
            kind: {
                required: true,
                serializedName: "kind",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var SingleMachineDependencyMapRequest = {
    serializedName: "map:single-machine-dependency",
    type: {
        name: "Composite",
        polymorphicDiscriminator: MapRequest.type.polymorphicDiscriminator,
        uberParent: "MapRequest",
        className: "SingleMachineDependencyMapRequest",
        modelProperties: __assign(__assign({}, MapRequest.type.modelProperties), { machineId: {
                required: true,
                serializedName: "machineId",
                type: {
                    name: "String"
                }
            } })
    }
};
export var MultipleMachinesMapRequest = {
    serializedName: "MultipleMachinesMapRequest",
    type: {
        name: "Composite",
        polymorphicDiscriminator: MapRequest.type.polymorphicDiscriminator,
        uberParent: "MapRequest",
        className: "MultipleMachinesMapRequest",
        modelProperties: __assign(__assign({}, MapRequest.type.modelProperties), { filterProcesses: {
                serializedName: "filterProcesses",
                type: {
                    name: "Boolean"
                }
            } })
    }
};
export var MachineListMapRequest = {
    serializedName: "map:machine-list-dependency",
    type: {
        name: "Composite",
        polymorphicDiscriminator: MapRequest.type.polymorphicDiscriminator,
        uberParent: "MapRequest",
        className: "MachineListMapRequest",
        modelProperties: __assign(__assign({}, MultipleMachinesMapRequest.type.modelProperties), { machineIds: {
                required: true,
                serializedName: "machineIds",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            } })
    }
};
export var MachineGroupMapRequest = {
    serializedName: "map:machine-group-dependency",
    type: {
        name: "Composite",
        polymorphicDiscriminator: MapRequest.type.polymorphicDiscriminator,
        uberParent: "MapRequest",
        className: "MachineGroupMapRequest",
        modelProperties: __assign(__assign({}, MultipleMachinesMapRequest.type.modelProperties), { machineGroupId: {
                required: true,
                serializedName: "machineGroupId",
                type: {
                    name: "String"
                }
            } })
    }
};
export var MapResponse = {
    serializedName: "MapResponse",
    type: {
        name: "Composite",
        className: "MapResponse",
        modelProperties: {
            startTime: {
                required: true,
                serializedName: "startTime",
                type: {
                    name: "DateTime"
                }
            },
            endTime: {
                required: true,
                serializedName: "endTime",
                type: {
                    name: "DateTime"
                }
            },
            map: {
                required: true,
                serializedName: "map",
                type: {
                    name: "Composite",
                    className: "Map"
                }
            }
        }
    }
};
export var ClientGroupMembersCount = {
    serializedName: "ClientGroupMembersCount",
    type: {
        name: "Composite",
        className: "ClientGroupMembersCount",
        modelProperties: {
            startTime: {
                required: true,
                serializedName: "startTime",
                type: {
                    name: "DateTime"
                }
            },
            endTime: {
                required: true,
                serializedName: "endTime",
                type: {
                    name: "DateTime"
                }
            },
            groupId: {
                required: true,
                serializedName: "groupId",
                type: {
                    name: "String"
                }
            },
            count: {
                required: true,
                serializedName: "count",
                type: {
                    name: "Number"
                }
            },
            accuracy: {
                required: true,
                serializedName: "accuracy",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "actual",
                        "estimated"
                    ]
                }
            }
        }
    }
};
export var ErrorModel = {
    serializedName: "Error",
    type: {
        name: "Composite",
        className: "ErrorModel",
        modelProperties: {
            code: {
                required: true,
                serializedName: "code",
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ErrorResponse = {
    serializedName: "ErrorResponse",
    type: {
        name: "Composite",
        className: "ErrorResponse",
        modelProperties: {
            error: {
                required: true,
                serializedName: "error",
                type: {
                    name: "Composite",
                    className: "ErrorModel"
                }
            }
        }
    }
};
export var MachineCollection = {
    serializedName: "MachineCollection",
    type: {
        name: "Composite",
        className: "MachineCollection",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Machine"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ConnectionCollection = {
    serializedName: "ConnectionCollection",
    type: {
        name: "Composite",
        className: "ConnectionCollection",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Connection"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ProcessCollection = {
    serializedName: "ProcessCollection",
    type: {
        name: "Composite",
        className: "ProcessCollection",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Process"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var PortCollection = {
    serializedName: "PortCollection",
    type: {
        name: "Composite",
        className: "PortCollection",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Port"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var MachineGroupCollection = {
    serializedName: "MachineGroupCollection",
    type: {
        name: "Composite",
        className: "MachineGroupCollection",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "MachineGroup"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ClientGroupMembersCollection = {
    serializedName: "ClientGroupMembersCollection",
    type: {
        name: "Composite",
        className: "ClientGroupMembersCollection",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ClientGroupMember"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var discriminators = {
    'ResourceReference': ResourceReference,
    'ResourceReference.ref:machine': MachineReference,
    'ResourceReference.ref:process': ProcessReference,
    'ResourceReference.ref:port': PortReference,
    'ResourceReference.ref:machinewithhints': MachineReferenceWithHints,
    'ResourceReference.ref:clientgroup': ClientGroupReference,
    'BaseResource.CoreResource': CoreResource,
    'HostingConfiguration': HostingConfiguration,
    'BaseResource.machine': Machine,
    'ProcessHostingConfiguration': ProcessHostingConfiguration,
    'BaseResource.process': Process,
    'BaseResource.port': Port,
    'BaseResource.clientGroup': ClientGroup,
    'BaseResource.machineGroup': MachineGroup,
    'BaseResource.Relationship': Relationship,
    'BaseResource.rel:connection': Connection,
    'BaseResource.rel:acceptor': Acceptor,
    'HostingConfiguration.provider:azure': AzureHostingConfiguration,
    'ProcessHostingConfiguration.provider:azure': AzureProcessHostingConfiguration,
    'MapRequest': MapRequest,
    'MapRequest.map:single-machine-dependency': SingleMachineDependencyMapRequest,
    'MapRequest.MultipleMachinesMapRequest': MultipleMachinesMapRequest,
    'MapRequest.map:machine-list-dependency': MachineListMapRequest,
    'MapRequest.map:machine-group-dependency': MachineGroupMapRequest
};
//# sourceMappingURL=mappers.js.map