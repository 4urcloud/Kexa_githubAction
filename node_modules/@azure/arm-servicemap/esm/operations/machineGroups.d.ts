import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { ServicemapManagementClientContext } from "../servicemapManagementClientContext";
/** Class representing a MachineGroups. */
export declare class MachineGroups {
    private readonly client;
    /**
     * Create a MachineGroups.
     * @param {ServicemapManagementClientContext} client Reference to the service client.
     */
    constructor(client: ServicemapManagementClientContext);
    /**
     * Returns all machine groups during the specified time interval.
     * @param resourceGroupName Resource group name within the specified subscriptionId.
     * @param workspaceName OMS workspace containing the resources of interest.
     * @param [options] The optional parameters
     * @returns Promise<Models.MachineGroupsListByWorkspaceResponse>
     */
    listByWorkspace(resourceGroupName: string, workspaceName: string, options?: Models.MachineGroupsListByWorkspaceOptionalParams): Promise<Models.MachineGroupsListByWorkspaceResponse>;
    /**
     * @param resourceGroupName Resource group name within the specified subscriptionId.
     * @param workspaceName OMS workspace containing the resources of interest.
     * @param callback The callback
     */
    listByWorkspace(resourceGroupName: string, workspaceName: string, callback: msRest.ServiceCallback<Models.MachineGroupCollection>): void;
    /**
     * @param resourceGroupName Resource group name within the specified subscriptionId.
     * @param workspaceName OMS workspace containing the resources of interest.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByWorkspace(resourceGroupName: string, workspaceName: string, options: Models.MachineGroupsListByWorkspaceOptionalParams, callback: msRest.ServiceCallback<Models.MachineGroupCollection>): void;
    /**
     * Creates a new machine group.
     * @param resourceGroupName Resource group name within the specified subscriptionId.
     * @param workspaceName OMS workspace containing the resources of interest.
     * @param machineGroup Machine Group resource to create.
     * @param [options] The optional parameters
     * @returns Promise<Models.MachineGroupsCreateResponse>
     */
    create(resourceGroupName: string, workspaceName: string, machineGroup: Models.MachineGroup, options?: msRest.RequestOptionsBase): Promise<Models.MachineGroupsCreateResponse>;
    /**
     * @param resourceGroupName Resource group name within the specified subscriptionId.
     * @param workspaceName OMS workspace containing the resources of interest.
     * @param machineGroup Machine Group resource to create.
     * @param callback The callback
     */
    create(resourceGroupName: string, workspaceName: string, machineGroup: Models.MachineGroup, callback: msRest.ServiceCallback<Models.MachineGroup>): void;
    /**
     * @param resourceGroupName Resource group name within the specified subscriptionId.
     * @param workspaceName OMS workspace containing the resources of interest.
     * @param machineGroup Machine Group resource to create.
     * @param options The optional parameters
     * @param callback The callback
     */
    create(resourceGroupName: string, workspaceName: string, machineGroup: Models.MachineGroup, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.MachineGroup>): void;
    /**
     * Returns the specified machine group as it existed during the specified time interval.
     * @param resourceGroupName Resource group name within the specified subscriptionId.
     * @param workspaceName OMS workspace containing the resources of interest.
     * @param machineGroupName Machine Group resource name.
     * @param [options] The optional parameters
     * @returns Promise<Models.MachineGroupsGetResponse>
     */
    get(resourceGroupName: string, workspaceName: string, machineGroupName: string, options?: Models.MachineGroupsGetOptionalParams): Promise<Models.MachineGroupsGetResponse>;
    /**
     * @param resourceGroupName Resource group name within the specified subscriptionId.
     * @param workspaceName OMS workspace containing the resources of interest.
     * @param machineGroupName Machine Group resource name.
     * @param callback The callback
     */
    get(resourceGroupName: string, workspaceName: string, machineGroupName: string, callback: msRest.ServiceCallback<Models.MachineGroup>): void;
    /**
     * @param resourceGroupName Resource group name within the specified subscriptionId.
     * @param workspaceName OMS workspace containing the resources of interest.
     * @param machineGroupName Machine Group resource name.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, workspaceName: string, machineGroupName: string, options: Models.MachineGroupsGetOptionalParams, callback: msRest.ServiceCallback<Models.MachineGroup>): void;
    /**
     * Updates a machine group.
     * @param resourceGroupName Resource group name within the specified subscriptionId.
     * @param workspaceName OMS workspace containing the resources of interest.
     * @param machineGroupName Machine Group resource name.
     * @param machineGroup Machine Group resource to update.
     * @param [options] The optional parameters
     * @returns Promise<Models.MachineGroupsUpdateResponse>
     */
    update(resourceGroupName: string, workspaceName: string, machineGroupName: string, machineGroup: Models.MachineGroup, options?: msRest.RequestOptionsBase): Promise<Models.MachineGroupsUpdateResponse>;
    /**
     * @param resourceGroupName Resource group name within the specified subscriptionId.
     * @param workspaceName OMS workspace containing the resources of interest.
     * @param machineGroupName Machine Group resource name.
     * @param machineGroup Machine Group resource to update.
     * @param callback The callback
     */
    update(resourceGroupName: string, workspaceName: string, machineGroupName: string, machineGroup: Models.MachineGroup, callback: msRest.ServiceCallback<Models.MachineGroup>): void;
    /**
     * @param resourceGroupName Resource group name within the specified subscriptionId.
     * @param workspaceName OMS workspace containing the resources of interest.
     * @param machineGroupName Machine Group resource name.
     * @param machineGroup Machine Group resource to update.
     * @param options The optional parameters
     * @param callback The callback
     */
    update(resourceGroupName: string, workspaceName: string, machineGroupName: string, machineGroup: Models.MachineGroup, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.MachineGroup>): void;
    /**
     * Deletes the specified Machine Group.
     * @param resourceGroupName Resource group name within the specified subscriptionId.
     * @param workspaceName OMS workspace containing the resources of interest.
     * @param machineGroupName Machine Group resource name.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroupName: string, workspaceName: string, machineGroupName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName Resource group name within the specified subscriptionId.
     * @param workspaceName OMS workspace containing the resources of interest.
     * @param machineGroupName Machine Group resource name.
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, workspaceName: string, machineGroupName: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName Resource group name within the specified subscriptionId.
     * @param workspaceName OMS workspace containing the resources of interest.
     * @param machineGroupName Machine Group resource name.
     * @param options The optional parameters
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, workspaceName: string, machineGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Returns all machine groups during the specified time interval.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.MachineGroupsListByWorkspaceNextResponse>
     */
    listByWorkspaceNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.MachineGroupsListByWorkspaceNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByWorkspaceNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.MachineGroupCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByWorkspaceNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.MachineGroupCollection>): void;
}
//# sourceMappingURL=machineGroups.d.ts.map