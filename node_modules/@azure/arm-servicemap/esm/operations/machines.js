/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/machinesMappers";
import * as Parameters from "../models/parameters";
/** Class representing a Machines. */
var Machines = /** @class */ (function () {
    /**
     * Create a Machines.
     * @param {ServicemapManagementClientContext} client Reference to the service client.
     */
    function Machines(client) {
        this.client = client;
    }
    Machines.prototype.listByWorkspace = function (resourceGroupName, workspaceName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            workspaceName: workspaceName,
            options: options
        }, listByWorkspaceOperationSpec, callback);
    };
    Machines.prototype.get = function (resourceGroupName, workspaceName, machineName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            workspaceName: workspaceName,
            machineName: machineName,
            options: options
        }, getOperationSpec, callback);
    };
    Machines.prototype.getLiveness = function (resourceGroupName, workspaceName, machineName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            workspaceName: workspaceName,
            machineName: machineName,
            options: options
        }, getLivenessOperationSpec, callback);
    };
    Machines.prototype.listConnections = function (resourceGroupName, workspaceName, machineName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            workspaceName: workspaceName,
            machineName: machineName,
            options: options
        }, listConnectionsOperationSpec, callback);
    };
    Machines.prototype.listProcesses = function (resourceGroupName, workspaceName, machineName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            workspaceName: workspaceName,
            machineName: machineName,
            options: options
        }, listProcessesOperationSpec, callback);
    };
    Machines.prototype.listPorts = function (resourceGroupName, workspaceName, machineName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            workspaceName: workspaceName,
            machineName: machineName,
            options: options
        }, listPortsOperationSpec, callback);
    };
    Machines.prototype.listMachineGroupMembership = function (resourceGroupName, workspaceName, machineName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            workspaceName: workspaceName,
            machineName: machineName,
            options: options
        }, listMachineGroupMembershipOperationSpec, callback);
    };
    Machines.prototype.listByWorkspaceNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listByWorkspaceNextOperationSpec, callback);
    };
    Machines.prototype.listConnectionsNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listConnectionsNextOperationSpec, callback);
    };
    Machines.prototype.listProcessesNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listProcessesNextOperationSpec, callback);
    };
    Machines.prototype.listPortsNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listPortsNextOperationSpec, callback);
    };
    Machines.prototype.listMachineGroupMembershipNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listMachineGroupMembershipNextOperationSpec, callback);
    };
    return Machines;
}());
export { Machines };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var listByWorkspaceOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.workspaceName
    ],
    queryParameters: [
        Parameters.apiVersion,
        Parameters.live,
        Parameters.startTime,
        Parameters.endTime,
        Parameters.timestamp,
        Parameters.top
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.MachineCollection
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var getOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines/{machineName}",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.workspaceName,
        Parameters.machineName
    ],
    queryParameters: [
        Parameters.apiVersion,
        Parameters.timestamp
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.Machine
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var getLivenessOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines/{machineName}/liveness",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.workspaceName,
        Parameters.machineName
    ],
    queryParameters: [
        Parameters.apiVersion,
        Parameters.startTime,
        Parameters.endTime
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.Liveness
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var listConnectionsOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines/{machineName}/connections",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.workspaceName,
        Parameters.machineName
    ],
    queryParameters: [
        Parameters.apiVersion,
        Parameters.startTime,
        Parameters.endTime
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.ConnectionCollection
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var listProcessesOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines/{machineName}/processes",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.workspaceName,
        Parameters.machineName
    ],
    queryParameters: [
        Parameters.apiVersion,
        Parameters.live,
        Parameters.startTime,
        Parameters.endTime,
        Parameters.timestamp
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.ProcessCollection
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var listPortsOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines/{machineName}/ports",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.workspaceName,
        Parameters.machineName
    ],
    queryParameters: [
        Parameters.apiVersion,
        Parameters.startTime,
        Parameters.endTime
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.PortCollection
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var listMachineGroupMembershipOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines/{machineName}/machineGroups",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.workspaceName,
        Parameters.machineName
    ],
    queryParameters: [
        Parameters.apiVersion,
        Parameters.startTime,
        Parameters.endTime
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.MachineGroupCollection
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var listByWorkspaceNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.MachineCollection
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var listConnectionsNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.ConnectionCollection
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var listProcessesNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.ProcessCollection
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var listPortsNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.PortCollection
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var listMachineGroupMembershipNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.MachineGroupCollection
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
//# sourceMappingURL=machines.js.map