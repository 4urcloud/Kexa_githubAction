import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { ServicemapManagementClientContext } from "../servicemapManagementClientContext";
/** Class representing a Maps. */
export declare class Maps {
    private readonly client;
    /**
     * Create a Maps.
     * @param {ServicemapManagementClientContext} client Reference to the service client.
     */
    constructor(client: ServicemapManagementClientContext);
    /**
     * Generates the specified map.
     * @param resourceGroupName Resource group name within the specified subscriptionId.
     * @param workspaceName OMS workspace containing the resources of interest.
     * @param request Request options.
     * @param [options] The optional parameters
     * @returns Promise<Models.MapsGenerateResponse>
     */
    generate(resourceGroupName: string, workspaceName: string, request: Models.MapRequestUnion, options?: msRest.RequestOptionsBase): Promise<Models.MapsGenerateResponse>;
    /**
     * @param resourceGroupName Resource group name within the specified subscriptionId.
     * @param workspaceName OMS workspace containing the resources of interest.
     * @param request Request options.
     * @param callback The callback
     */
    generate(resourceGroupName: string, workspaceName: string, request: Models.MapRequestUnion, callback: msRest.ServiceCallback<Models.MapResponse>): void;
    /**
     * @param resourceGroupName Resource group name within the specified subscriptionId.
     * @param workspaceName OMS workspace containing the resources of interest.
     * @param request Request options.
     * @param options The optional parameters
     * @param callback The callback
     */
    generate(resourceGroupName: string, workspaceName: string, request: Models.MapRequestUnion, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.MapResponse>): void;
}
//# sourceMappingURL=maps.d.ts.map