import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { ServicemapManagementClientContext } from "../servicemapManagementClientContext";
/** Class representing a Summaries. */
export declare class Summaries {
    private readonly client;
    /**
     * Create a Summaries.
     * @param {ServicemapManagementClientContext} client Reference to the service client.
     */
    constructor(client: ServicemapManagementClientContext);
    /**
     * Returns summary information about the machines in the workspace.
     * @param resourceGroupName Resource group name within the specified subscriptionId.
     * @param workspaceName OMS workspace containing the resources of interest.
     * @param [options] The optional parameters
     * @returns Promise<Models.SummariesGetMachinesResponse>
     */
    getMachines(resourceGroupName: string, workspaceName: string, options?: Models.SummariesGetMachinesOptionalParams): Promise<Models.SummariesGetMachinesResponse>;
    /**
     * @param resourceGroupName Resource group name within the specified subscriptionId.
     * @param workspaceName OMS workspace containing the resources of interest.
     * @param callback The callback
     */
    getMachines(resourceGroupName: string, workspaceName: string, callback: msRest.ServiceCallback<Models.MachinesSummary>): void;
    /**
     * @param resourceGroupName Resource group name within the specified subscriptionId.
     * @param workspaceName OMS workspace containing the resources of interest.
     * @param options The optional parameters
     * @param callback The callback
     */
    getMachines(resourceGroupName: string, workspaceName: string, options: Models.SummariesGetMachinesOptionalParams, callback: msRest.ServiceCallback<Models.MachinesSummary>): void;
}
//# sourceMappingURL=summaries.d.ts.map