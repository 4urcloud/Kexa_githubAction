/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import { __assign } from "tslib";
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/mapsMappers";
import * as Parameters from "../models/parameters";
/** Class representing a Maps. */
var Maps = /** @class */ (function () {
    /**
     * Create a Maps.
     * @param {ServicemapManagementClientContext} client Reference to the service client.
     */
    function Maps(client) {
        this.client = client;
    }
    Maps.prototype.generate = function (resourceGroupName, workspaceName, request, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            workspaceName: workspaceName,
            request: request,
            options: options
        }, generateOperationSpec, callback);
    };
    return Maps;
}());
export { Maps };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var generateOperationSpec = {
    httpMethod: "POST",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/generateMap",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.workspaceName
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: "request",
        mapper: __assign(__assign({}, Mappers.MapRequest), { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.MapResponse
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
//# sourceMappingURL=maps.js.map