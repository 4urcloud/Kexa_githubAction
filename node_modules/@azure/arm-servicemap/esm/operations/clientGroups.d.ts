import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { ServicemapManagementClientContext } from "../servicemapManagementClientContext";
/** Class representing a ClientGroups. */
export declare class ClientGroups {
    private readonly client;
    /**
     * Create a ClientGroups.
     * @param {ServicemapManagementClientContext} client Reference to the service client.
     */
    constructor(client: ServicemapManagementClientContext);
    /**
     * Retrieves the specified client group
     * @param resourceGroupName Resource group name within the specified subscriptionId.
     * @param workspaceName OMS workspace containing the resources of interest.
     * @param clientGroupName Client Group resource name.
     * @param [options] The optional parameters
     * @returns Promise<Models.ClientGroupsGetResponse>
     */
    get(resourceGroupName: string, workspaceName: string, clientGroupName: string, options?: Models.ClientGroupsGetOptionalParams): Promise<Models.ClientGroupsGetResponse>;
    /**
     * @param resourceGroupName Resource group name within the specified subscriptionId.
     * @param workspaceName OMS workspace containing the resources of interest.
     * @param clientGroupName Client Group resource name.
     * @param callback The callback
     */
    get(resourceGroupName: string, workspaceName: string, clientGroupName: string, callback: msRest.ServiceCallback<Models.ClientGroup>): void;
    /**
     * @param resourceGroupName Resource group name within the specified subscriptionId.
     * @param workspaceName OMS workspace containing the resources of interest.
     * @param clientGroupName Client Group resource name.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, workspaceName: string, clientGroupName: string, options: Models.ClientGroupsGetOptionalParams, callback: msRest.ServiceCallback<Models.ClientGroup>): void;
    /**
     * Returns the approximate number of members in the client group.
     * @param resourceGroupName Resource group name within the specified subscriptionId.
     * @param workspaceName OMS workspace containing the resources of interest.
     * @param clientGroupName Client Group resource name.
     * @param [options] The optional parameters
     * @returns Promise<Models.ClientGroupsGetMembersCountResponse>
     */
    getMembersCount(resourceGroupName: string, workspaceName: string, clientGroupName: string, options?: Models.ClientGroupsGetMembersCountOptionalParams): Promise<Models.ClientGroupsGetMembersCountResponse>;
    /**
     * @param resourceGroupName Resource group name within the specified subscriptionId.
     * @param workspaceName OMS workspace containing the resources of interest.
     * @param clientGroupName Client Group resource name.
     * @param callback The callback
     */
    getMembersCount(resourceGroupName: string, workspaceName: string, clientGroupName: string, callback: msRest.ServiceCallback<Models.ClientGroupMembersCount>): void;
    /**
     * @param resourceGroupName Resource group name within the specified subscriptionId.
     * @param workspaceName OMS workspace containing the resources of interest.
     * @param clientGroupName Client Group resource name.
     * @param options The optional parameters
     * @param callback The callback
     */
    getMembersCount(resourceGroupName: string, workspaceName: string, clientGroupName: string, options: Models.ClientGroupsGetMembersCountOptionalParams, callback: msRest.ServiceCallback<Models.ClientGroupMembersCount>): void;
    /**
     * Returns the members of the client group during the specified time interval.
     * @param resourceGroupName Resource group name within the specified subscriptionId.
     * @param workspaceName OMS workspace containing the resources of interest.
     * @param clientGroupName Client Group resource name.
     * @param [options] The optional parameters
     * @returns Promise<Models.ClientGroupsListMembersResponse>
     */
    listMembers(resourceGroupName: string, workspaceName: string, clientGroupName: string, options?: Models.ClientGroupsListMembersOptionalParams): Promise<Models.ClientGroupsListMembersResponse>;
    /**
     * @param resourceGroupName Resource group name within the specified subscriptionId.
     * @param workspaceName OMS workspace containing the resources of interest.
     * @param clientGroupName Client Group resource name.
     * @param callback The callback
     */
    listMembers(resourceGroupName: string, workspaceName: string, clientGroupName: string, callback: msRest.ServiceCallback<Models.ClientGroupMembersCollection>): void;
    /**
     * @param resourceGroupName Resource group name within the specified subscriptionId.
     * @param workspaceName OMS workspace containing the resources of interest.
     * @param clientGroupName Client Group resource name.
     * @param options The optional parameters
     * @param callback The callback
     */
    listMembers(resourceGroupName: string, workspaceName: string, clientGroupName: string, options: Models.ClientGroupsListMembersOptionalParams, callback: msRest.ServiceCallback<Models.ClientGroupMembersCollection>): void;
    /**
     * Returns the members of the client group during the specified time interval.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.ClientGroupsListMembersNextResponse>
     */
    listMembersNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ClientGroupsListMembersNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listMembersNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ClientGroupMembersCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listMembersNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ClientGroupMembersCollection>): void;
}
//# sourceMappingURL=clientGroups.d.ts.map