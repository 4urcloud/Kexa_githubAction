{"version":3,"file":"arm-servicemap.js","sources":["../node_modules/tslib/tslib.es6.js","../src/models/index.ts","../src/models/mappers.ts","../src/models/machinesMappers.ts","../src/models/parameters.ts","../src/operations/machines.ts","../src/models/processesMappers.ts","../src/operations/processes.ts","../src/models/portsMappers.ts","../src/operations/ports.ts","../src/models/clientGroupsMappers.ts","../src/operations/clientGroups.ts","../src/models/mapsMappers.ts","../src/operations/maps.ts","../src/models/summariesMappers.ts","../src/operations/summaries.ts","../src/models/machineGroupsMappers.ts","../src/operations/machineGroups.ts","../src/operations/index.ts","../src/servicemapManagementClientContext.ts","../src/servicemapManagementClient.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { BaseResource, CloudError, AzureServiceClientOptions } from \"@azure/ms-rest-azure-js\";\nimport * as msRest from \"@azure/ms-rest-js\";\n\nexport { BaseResource, CloudError };\n\n/**\n * Resource model definition.\n */\nexport interface Resource extends BaseResource {\n  /**\n   * Resource identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Resource type.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly type?: string;\n  /**\n   * Resource name.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n}\n\n/**\n * Contains the possible cases for ResourceReference.\n */\nexport type ResourceReferenceUnion = ResourceReference | MachineReference | ProcessReference | PortReference | MachineReferenceWithHints | ClientGroupReference;\n\n/**\n * Represents a reference to another resource.\n */\nexport interface ResourceReference {\n  /**\n   * Polymorphic Discriminator\n   */\n  kind: \"ResourceReference\";\n  /**\n   * Resource URI.\n   */\n  id: string;\n  /**\n   * Resource type qualifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly type?: string;\n  /**\n   * Resource name.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n}\n\n/**\n * Reference to a machine.\n */\nexport interface MachineReference {\n  /**\n   * Polymorphic Discriminator\n   */\n  kind: \"ref:machine\";\n  /**\n   * Resource URI.\n   */\n  id: string;\n  /**\n   * Resource type qualifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly type?: string;\n  /**\n   * Resource name.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n}\n\n/**\n * Reference to a process.\n */\nexport interface ProcessReference {\n  /**\n   * Polymorphic Discriminator\n   */\n  kind: \"ref:process\";\n  /**\n   * Resource URI.\n   */\n  id: string;\n  /**\n   * Resource type qualifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly type?: string;\n  /**\n   * Resource name.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * Machine hosting the process.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly machine?: MachineReference;\n}\n\n/**\n * Reference to a port.\n */\nexport interface PortReference {\n  /**\n   * Polymorphic Discriminator\n   */\n  kind: \"ref:port\";\n  /**\n   * Resource URI.\n   */\n  id: string;\n  /**\n   * Resource type qualifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly type?: string;\n  /**\n   * Resource name.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * Machine hosting the port.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly machine?: MachineReference;\n  /**\n   * IP address of the port.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly ipAddress?: string;\n  /**\n   * Port number.\n   */\n  portNumber?: number;\n}\n\n/**\n * A machine reference with a hint of the machine's name and operating system.\n */\nexport interface MachineReferenceWithHints {\n  /**\n   * Polymorphic Discriminator\n   */\n  kind: \"ref:machinewithhints\";\n  /**\n   * Resource URI.\n   */\n  id: string;\n  /**\n   * Resource type qualifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly type?: string;\n  /**\n   * Resource name.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * Last known display name.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly displayNameHint?: string;\n  /**\n   * Last known operating system family. Possible values include: 'unknown', 'windows', 'linux',\n   * 'solaris', 'aix'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly osFamilyHint?: OperatingSystemFamily;\n}\n\n/**\n * Reference to a client group.\n */\nexport interface ClientGroupReference {\n  /**\n   * Polymorphic Discriminator\n   */\n  kind: \"ref:clientgroup\";\n  /**\n   * Resource URI.\n   */\n  id: string;\n  /**\n   * Resource type qualifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly type?: string;\n  /**\n   * Resource name.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n}\n\n/**\n * Contains the possible cases for CoreResource.\n */\nexport type CoreResourceUnion = CoreResource | Machine | Process | Port | ClientGroup | MachineGroup;\n\n/**\n * Marker resource for the core Service Map resources\n */\nexport interface CoreResource {\n  /**\n   * Polymorphic Discriminator\n   */\n  kind: \"CoreResource\";\n  /**\n   * Resource identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Resource type.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly type?: string;\n  /**\n   * Resource name.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * Resource ETAG.\n   */\n  etag?: string;\n}\n\n/**\n * Describes a timezone.\n */\nexport interface Timezone {\n  /**\n   * Timezone full name.\n   */\n  fullName?: string;\n}\n\n/**\n * Describes the configuration of the Dependency Agent installed on a machine.\n */\nexport interface AgentConfiguration {\n  /**\n   * Health Service Agent unique identifier.\n   */\n  agentId: string;\n  /**\n   * Dependency Agent unique identifier.\n   */\n  dependencyAgentId?: string;\n  /**\n   * Dependency Agent version number.\n   */\n  dependencyAgentVersion?: string;\n  /**\n   * Dependency Agent revision number.\n   */\n  dependencyAgentRevision?: string;\n  /**\n   * Specifies whether the machine has been rebooted since the Dependency Agent installation.\n   * Possible values include: 'unknown', 'rebooted', 'notRebooted'\n   */\n  rebootStatus?: MachineRebootStatus;\n  /**\n   * Machine clock granularity in milliseconds.\n   */\n  clockGranularity?: number;\n}\n\n/**\n * Describes the resources of a machine.\n */\nexport interface MachineResourcesConfiguration {\n  /**\n   * Physical memory in megabytes (MB).\n   */\n  physicalMemory?: number;\n  /**\n   * Number of CPUs.\n   */\n  cpus?: number;\n  /**\n   * CPU speed in megahertz (Mhz).\n   */\n  cpuSpeed?: number;\n  /**\n   * Describes the accuracy of the cpuSpeed field. Possible values include: 'actual', 'estimated'\n   */\n  cpuSpeedAccuracy?: Accuracy;\n}\n\n/**\n * Describes an IPv4 network interface.\n */\nexport interface Ipv4NetworkInterface {\n  /**\n   * IPv4 address.\n   */\n  ipAddress: string;\n  /**\n   * IPv4 subnet mask. Default value: '255.255.255.255'.\n   */\n  subnetMask?: string;\n}\n\n/**\n * Describes an IPv6 network interface.\n */\nexport interface Ipv6NetworkInterface {\n  /**\n   * IPv6 address.\n   */\n  ipAddress: string;\n}\n\n/**\n * Describes the network configuration of a machine.\n */\nexport interface NetworkConfiguration {\n  /**\n   * IPv4 interfaces.\n   */\n  ipv4Interfaces?: Ipv4NetworkInterface[];\n  /**\n   * IPv6 interfaces.\n   */\n  ipv6Interfaces?: Ipv6NetworkInterface[];\n  /**\n   * Default IPv4 gateways.\n   */\n  defaultIpv4Gateways?: string[];\n  /**\n   * MAC addresses of all active network interfaces.\n   */\n  macAddresses?: string[];\n  /**\n   * DNS names associated with the machine.\n   */\n  dnsNames?: string[];\n}\n\n/**\n * Describes the configuration of the operating system of a machine.\n */\nexport interface OperatingSystemConfiguration {\n  /**\n   * Windows, Linux, etc. Possible values include: 'unknown', 'windows', 'linux', 'solaris', 'aix'\n   */\n  family: OperatingSystemFamily;\n  /**\n   * Operating system full name.\n   */\n  fullName: string;\n  /**\n   * Operating system bitness (32-bit or 64-bit). Possible values include: '32bit', '64bit'\n   */\n  bitness: Bitness;\n}\n\n/**\n * Describes the virtualization-related configuration of a machine.\n */\nexport interface VirtualMachineConfiguration {\n  /**\n   * Specifies the virtualization technology used by the machine (hyperv, vmware, etc.). Possible\n   * values include: 'unknown', 'hyperv', 'ldom', 'lpar', 'vmware', 'virtualPc', 'xen'\n   */\n  virtualMachineType?: VirtualMachineType;\n  /**\n   * The unique identifier of the virtual machine as reported by the underlying virtualization\n   * system.\n   */\n  nativeMachineId?: string;\n  /**\n   * The Name of the virtual machine.\n   */\n  virtualMachineName?: string;\n  /**\n   * The unique identifier of the host of this virtual machine as reported by the underlying\n   * virtualization system.\n   */\n  nativeHostMachineId?: string;\n}\n\n/**\n * Describes the hypervisor configuration of a machine.\n */\nexport interface HypervisorConfiguration {\n  /**\n   * Specifies the virtualization technology used by the hypervisor (hyperv, vmware, etc.).\n   * Possible values include: 'unknown', 'hyperv'\n   */\n  hypervisorType?: HypervisorType;\n  /**\n   * The unique identifier of the hypervisor machine as reported by the underlying virtualization\n   * system.\n   */\n  nativeHostMachineId?: string;\n}\n\n/**\n * Contains the possible cases for HostingConfiguration.\n */\nexport type HostingConfigurationUnion = HostingConfiguration | AzureHostingConfiguration;\n\n/**\n * Describes the hosting configuration of a machine.\n */\nexport interface HostingConfiguration {\n  /**\n   * Polymorphic Discriminator\n   */\n  kind: \"HostingConfiguration\";\n  /**\n   * The hosting provider of the VM. Possible values include: 'azure'\n   */\n  provider?: Provider;\n}\n\n/**\n * A machine resource represents a discovered computer system. It can be *monitored*, i.e., a\n * Dependency Agent is running on it, or *discovered*, i.e., its existence was inferred by\n * observing the data stream from monitored machines. As machines change, prior versions of the\n * machine resource are preserved and available for access. A machine is live during an interval of\n * time, if either its Dependency Agent has reported data during (parts) of that interval, or a\n * Dependency agent running on other machines has reported activity associated with the machine.\n */\nexport interface Machine {\n  /**\n   * Polymorphic Discriminator\n   */\n  kind: \"machine\";\n  /**\n   * Resource identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Resource type.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly type?: string;\n  /**\n   * Resource name.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * Resource ETAG.\n   */\n  etag?: string;\n  /**\n   * UTC date and time when this resource was updated in the system.\n   */\n  timestamp?: Date;\n  /**\n   * Specifies whether the machine is actively monitored or discovered. Possible values include:\n   * 'monitored', 'discovered'\n   */\n  monitoringState?: MonitoringState;\n  /**\n   * Specifies whether the machine is virtualized. Possible values include: 'unknown', 'physical',\n   * 'virtual', 'hypervisor'\n   */\n  virtualizationState?: VirtualizationState;\n  /**\n   * Name to use for display purposes\n   */\n  displayName?: string;\n  /**\n   * Name of the machine, e.g., server\n   */\n  computerName?: string;\n  /**\n   * Fully-qualified name of the machine, e.g., server.company.com\n   */\n  fullyQualifiedDomainName?: string;\n  /**\n   * UTC date and time when the machine last booted\n   */\n  bootTime?: Date;\n  /**\n   * Timezone of the machine.\n   */\n  timezone?: Timezone;\n  /**\n   * Dependency Agent configuration.\n   */\n  agent?: AgentConfiguration;\n  /**\n   * Machine resources (memory, cpu, etc.).\n   */\n  resources?: MachineResourcesConfiguration;\n  /**\n   * Network configuration (ips, gateways, dns, etc.)\n   */\n  networking?: NetworkConfiguration;\n  /**\n   * Operating system information.\n   */\n  operatingSystem?: OperatingSystemConfiguration;\n  /**\n   * Virtualization-related configuration. Present only when `virtualizationState` is `virtual`.\n   */\n  virtualMachine?: VirtualMachineConfiguration;\n  /**\n   * Hypervisor-related configuration. Present only when 'virtualizationState' is `hypervisor`.\n   */\n  hypervisor?: HypervisorConfiguration;\n  /**\n   * Hosting-related configuration. Present if hosting information is discovered for the VM.\n   */\n  hosting?: HostingConfigurationUnion;\n}\n\n/**\n * A service hosted by a process.\n */\nexport interface ProcessHostedService {\n  /**\n   * The name of the service.\n   */\n  name?: string;\n  /**\n   * The service's display name.\n   */\n  displayName?: string;\n}\n\n/**\n * Describes process metadata.\n */\nexport interface ProcessDetails {\n  /**\n   * A unique identifier for a process, generally resilient to process restart, computed by Service\n   * Map.\n   */\n  persistentKey?: string;\n  /**\n   * Represents the identity of the process pool assigned to the process by Dependency Agent.\n   */\n  poolId?: number;\n  /**\n   * The Operating System Process Identifier (PID) of the first process in this process pool.\n   */\n  firstPid?: number;\n  /**\n   * Process description.\n   */\n  description?: string;\n  /**\n   * Name of company that created the process executable.\n   */\n  companyName?: string;\n  /**\n   * Internal process name.\n   */\n  internalName?: string;\n  /**\n   * Product name.\n   */\n  productName?: string;\n  /**\n   * Product version.\n   */\n  productVersion?: string;\n  /**\n   * File version.\n   */\n  fileVersion?: string;\n  /**\n   * Process command line.\n   */\n  commandLine?: string;\n  /**\n   * Process executable path.\n   */\n  executablePath?: string;\n  /**\n   * Process workingDirectory.\n   */\n  workingDirectory?: string;\n  /**\n   * Collection of services hosted by this Process (Windows only).\n   */\n  services?: ProcessHostedService[];\n  /**\n   * Process zone name (Linux only).\n   */\n  zoneName?: string;\n}\n\n/**\n * Describes the user under which a process is running.\n */\nexport interface ProcessUser {\n  /**\n   * User name under which the process is running.\n   */\n  userName?: string;\n  /**\n   * Domain name for the user.\n   */\n  userDomain?: string;\n}\n\n/**\n * Contains the possible cases for ProcessHostingConfiguration.\n */\nexport type ProcessHostingConfigurationUnion = ProcessHostingConfiguration | AzureProcessHostingConfiguration;\n\n/**\n * Describes the hosting configuration of a process.\n */\nexport interface ProcessHostingConfiguration {\n  /**\n   * Polymorphic Discriminator\n   */\n  kind: \"ProcessHostingConfiguration\";\n  /**\n   * The hosting provider of the VM. Possible values include: 'azure'\n   */\n  provider?: Provider1;\n}\n\n/**\n * A process resource represents a process running on a machine. The process may be actively\n * *monitored*, i.e., a Dependency Agent is running on its machine, or *discovered*, i.e., its\n * existence was inferred by observing the data stream from monitored machines. A process resource\n * represents a pool of actual operating system resources that share command lines and metadata. As\n * the process pool evolves over time, prior versions of the process resource are preserved and\n * available for access. A process is live during an interval of time, if that process is executing\n * during (parts) of that interval\n */\nexport interface Process {\n  /**\n   * Polymorphic Discriminator\n   */\n  kind: \"process\";\n  /**\n   * Resource identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Resource type.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly type?: string;\n  /**\n   * Resource name.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * Resource ETAG.\n   */\n  etag?: string;\n  /**\n   * UTC date and time when this process resource was updated in the system\n   */\n  timestamp?: Date;\n  /**\n   * Specifies whether the process is actively monitored or discovered. Possible values include:\n   * 'monitored', 'discovered'\n   */\n  monitoringState?: MonitoringState;\n  /**\n   * Machine hosting this process.\n   */\n  machine?: ResourceReferenceUnion;\n  /**\n   * The name of the process executable\n   */\n  executableName?: string;\n  /**\n   * Name to use for display purposes\n   */\n  displayName?: string;\n  /**\n   * UTC date and time when the process started\n   */\n  startTime?: Date;\n  /**\n   * The inferred role of this process based on its name, command line, etc. Possible values\n   * include: 'webServer', 'appServer', 'databaseServer', 'ldapServer', 'smbServer'\n   */\n  role?: ProcessRole;\n  /**\n   * The name of the product or suite of the process. The group is determined by its executable\n   * name, command line, etc.\n   */\n  group?: string;\n  /**\n   * Process metadata (command line, product name, etc.).\n   */\n  details?: ProcessDetails;\n  /**\n   * Information about the account under which the process is executing.\n   */\n  user?: ProcessUser;\n  /**\n   * Present only for a discovered process acting as a client of a monitored process/machine/port.\n   * References the monitored process/machine/port that this process is a client of.\n   */\n  clientOf?: ResourceReferenceUnion;\n  /**\n   * Present only for a discovered process acting as a server. References the port on which the\n   * discovered process is accepting.\n   */\n  acceptorOf?: ResourceReferenceUnion;\n  /**\n   * Information about the hosting environment\n   */\n  hosting?: ProcessHostingConfigurationUnion;\n}\n\n/**\n * A port resource represents a server port on a machine. The port may be actively *monitored*,\n * i.e., a Dependency Agent is running on its machine, or *discovered*, i.e., its existence was\n * inferred by observing the data stream from monitored machines. A port is live during an interval\n * of time, if that port had associated activity during (parts) of that interval.\n */\nexport interface Port {\n  /**\n   * Polymorphic Discriminator\n   */\n  kind: \"port\";\n  /**\n   * Resource identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Resource type.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly type?: string;\n  /**\n   * Resource name.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * Resource ETAG.\n   */\n  etag?: string;\n  /**\n   * Specifies whether the port is actively monitored or discovered. Possible values include:\n   * 'monitored', 'discovered'\n   */\n  monitoringState?: MonitoringState;\n  /**\n   * Machine hosting this port.\n   */\n  machine?: ResourceReferenceUnion;\n  /**\n   * Name to use for display purposes.\n   */\n  displayName?: string;\n  /**\n   * IP address associated with the port. At present only IPv4 addresses are supported.\n   */\n  ipAddress?: string;\n  /**\n   * Port number.\n   */\n  portNumber?: number;\n}\n\n/**\n * Represents a collection of clients of a resource. A client group can represent the clients of a\n * port, process, or a machine.\n */\nexport interface ClientGroup {\n  /**\n   * Polymorphic Discriminator\n   */\n  kind: \"clientGroup\";\n  /**\n   * Resource identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Resource type.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly type?: string;\n  /**\n   * Resource name.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * Resource ETAG.\n   */\n  etag?: string;\n  /**\n   * Reference to the resource whose clients are represented by this group.\n   */\n  clientsOf: ResourceReferenceUnion;\n}\n\n/**\n * Represents a member of a client group\n */\nexport interface ClientGroupMember extends Resource {\n  /**\n   * IP address.\n   */\n  ipAddress?: string;\n  /**\n   * Port into which this client connected\n   */\n  port?: PortReference;\n  /**\n   * Processes accepting on the above port that received connections from this client.\n   */\n  processes?: ProcessReference[];\n}\n\n/**\n * A user-defined logical grouping of machines.\n */\nexport interface MachineGroup {\n  /**\n   * Polymorphic Discriminator\n   */\n  kind: \"machineGroup\";\n  /**\n   * Resource identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Resource type.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly type?: string;\n  /**\n   * Resource name.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * Resource ETAG.\n   */\n  etag?: string;\n  /**\n   * Type of the machine group. Possible values include: 'unknown', 'azure-cs', 'azure-sf',\n   * 'azure-vmss', 'user-static'\n   */\n  groupType?: MachineGroupType;\n  /**\n   * User defined name for the group\n   */\n  displayName: string;\n  /**\n   * Count of machines in this group. The value of count may be bigger than the number of machines\n   * in case of the group has been truncated due to exceeding the max number of machines a group\n   * can handle.\n   */\n  count?: number;\n  /**\n   * References of the machines in this group. The hints within each reference do not represent the\n   * current value of the corresponding fields. They are a snapshot created during the last time\n   * the machine group was updated.\n   */\n  machines?: MachineReferenceWithHints[];\n}\n\n/**\n * Base for all resource summaries.\n */\nexport interface Summary extends Resource {\n}\n\n/**\n * Machines by operating system.\n */\nexport interface MachineCountsByOperatingSystem {\n  /**\n   * Number of live Windows machines.\n   */\n  windows: number;\n  /**\n   * Number of live Linux machines.\n   */\n  linux: number;\n}\n\n/**\n * A summary of the machines in the workspace.\n */\nexport interface MachinesSummary extends Summary {\n  /**\n   * Summary interval start time.\n   */\n  startTime: Date;\n  /**\n   * Summary interval end time.\n   */\n  endTime: Date;\n  /**\n   * Total number of machines.\n   */\n  total: number;\n  /**\n   * Number of live machines.\n   */\n  live: number;\n  /**\n   * Machine counts by operating system.\n   */\n  os: MachineCountsByOperatingSystem;\n}\n\n/**\n * Contains the possible cases for Relationship.\n */\nexport type RelationshipUnion = Relationship | Connection | Acceptor;\n\n/**\n * A typed relationship between two entities.\n */\nexport interface Relationship {\n  /**\n   * Polymorphic Discriminator\n   */\n  kind: \"Relationship\";\n  /**\n   * Resource identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Resource type.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly type?: string;\n  /**\n   * Resource name.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n}\n\n/**\n * A network connection.\n */\nexport interface Connection {\n  /**\n   * Polymorphic Discriminator\n   */\n  kind: \"rel:connection\";\n  /**\n   * Resource identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Resource type.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly type?: string;\n  /**\n   * Resource name.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * Source resource of the relationship.\n   */\n  source: ResourceReferenceUnion;\n  /**\n   * Destination resource of the relationship.\n   */\n  destination: ResourceReferenceUnion;\n  /**\n   * Relationship start time.\n   */\n  startTime?: Date;\n  /**\n   * Relationship end time.\n   */\n  endTime?: Date;\n  /**\n   * Reference to the server port via which this connection has been established.\n   */\n  serverPort?: PortReference;\n  /**\n   * Specifies whether there are only successful, failed or a mixture of both connections\n   * represented by this resource. Possible values include: 'ok', 'failed', 'mixed'\n   */\n  failureState?: ConnectionFailureState;\n}\n\n/**\n * A process accepting on a port.\n */\nexport interface Acceptor {\n  /**\n   * Polymorphic Discriminator\n   */\n  kind: \"rel:acceptor\";\n  /**\n   * Resource identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Resource type.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly type?: string;\n  /**\n   * Resource name.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * Port being accepted.\n   */\n  source: PortReference;\n  /**\n   * Accepting process.\n   */\n  destination: ProcessReference;\n  /**\n   * Relationship start time.\n   */\n  startTime?: Date;\n  /**\n   * Relationship end time.\n   */\n  endTime?: Date;\n}\n\n/**\n * Base for all summaries.\n */\nexport interface SummaryProperties {\n  /**\n   * Summary interval start time.\n   */\n  startTime: Date;\n  /**\n   * Summary interval end time.\n   */\n  endTime: Date;\n}\n\n/**\n * Relationship properties.\n */\nexport interface RelationshipProperties {\n  /**\n   * Source resource of the relationship.\n   */\n  source: ResourceReferenceUnion;\n  /**\n   * Destination resource of the relationship.\n   */\n  destination: ResourceReferenceUnion;\n  /**\n   * Relationship start time.\n   */\n  startTime?: Date;\n  /**\n   * Relationship end time.\n   */\n  endTime?: Date;\n}\n\n/**\n * Describes the VM image of a machine.\n */\nexport interface ImageConfiguration {\n  /**\n   * Publisher of the VM image.\n   */\n  publisher?: string;\n  /**\n   * Offering of the VM image.\n   */\n  offering?: string;\n  /**\n   * SKU of the VM image.\n   */\n  sku?: string;\n  /**\n   * Version of the VM image.\n   */\n  version?: string;\n}\n\n/**\n * Describes an Azure Cloud Service\n */\nexport interface AzureCloudServiceConfiguration {\n  /**\n   * Cloud Service name\n   */\n  name?: string;\n  /**\n   * Cloud Service instance identifier\n   */\n  instanceId?: string;\n  /**\n   * Cloud Service deployment identifier\n   */\n  deployment?: string;\n  /**\n   * Cloud Service role name\n   */\n  roleName?: string;\n  /**\n   * Used to specify type of an Azure Cloud Service role. Possible values include: 'unknown',\n   * 'worker', 'web'\n   */\n  roleType?: AzureCloudServiceRoleType;\n}\n\n/**\n * Describes an Azure Virtual Machine Scale Set\n */\nexport interface AzureVmScaleSetConfiguration {\n  /**\n   * Virtual Machine Scale Set name\n   */\n  name?: string;\n  /**\n   * Virtual Machine Scale Set instance identifier\n   */\n  instanceId?: string;\n  /**\n   * Virtual Machine Scale Set deployment identifier\n   */\n  deployment?: string;\n  /**\n   * Unique identifier of the resource.\n   */\n  resourceId?: string;\n}\n\n/**\n * Describes an Azure Service Fabric Cluster\n */\nexport interface AzureServiceFabricClusterConfiguration {\n  /**\n   * Service Fabric cluster name.\n   */\n  name?: string;\n  /**\n   * Service Fabric cluster identifier.\n   */\n  clusterId?: string;\n}\n\n/**\n * Provides information about how a machine is hosted in Azure\n */\nexport interface AzureHostingConfiguration {\n  /**\n   * Polymorphic Discriminator\n   */\n  kind: \"provider:azure\";\n  /**\n   * The hosting provider of the VM. Possible values include: 'azure'\n   */\n  provider?: Provider;\n  /**\n   * Virtual Machine ID (unique identifier).\n   */\n  vmId?: string;\n  /**\n   * Geographical location of the VM.\n   */\n  location?: string;\n  /**\n   * Machine name according to the hosting provider.\n   */\n  name?: string;\n  /**\n   * Size of the VM.\n   */\n  size?: string;\n  /**\n   * Update domain of the VM.\n   */\n  updateDomain?: string;\n  /**\n   * Fault domain of the VM.\n   */\n  faultDomain?: string;\n  /**\n   * Subscription ID.\n   */\n  subscriptionId?: string;\n  /**\n   * Resource group name within the specified subscription.\n   */\n  resourceGroup?: string;\n  /**\n   * Unique identifier of the resource.\n   */\n  resourceId?: string;\n  /**\n   * Image of the machine.\n   */\n  image?: ImageConfiguration;\n  /**\n   * Contains information about machines hosted as an Azure Cloud Service\n   */\n  cloudService?: AzureCloudServiceConfiguration;\n  /**\n   * Contains information about machines hosted as an Azure Virtual Machine Scale Set\n   */\n  vmScaleSet?: AzureVmScaleSetConfiguration;\n  /**\n   * Contains information about machines that belong an Azure Service Fabric Cluster\n   */\n  serviceFabricCluster?: AzureServiceFabricClusterConfiguration;\n}\n\n/**\n * Describes the hosting configuration of a process when hosted on azure\n */\nexport interface AzureProcessHostingConfiguration {\n  /**\n   * Polymorphic Discriminator\n   */\n  kind: \"provider:azure\";\n  /**\n   * The hosting provider of the VM. Possible values include: 'azure'\n   */\n  provider?: Provider1;\n  /**\n   * Contains information about the cloud service the process belongs to\n   */\n  cloudService?: AzureCloudServiceConfiguration;\n}\n\n/**\n * The nodes (entities) of a map.\n */\nexport interface MapNodes {\n  /**\n   * Machine resources.\n   */\n  machines?: Machine[];\n  /**\n   * Process resources.\n   */\n  processes?: Process[];\n  /**\n   * Port resources.\n   */\n  ports?: Port[];\n  /**\n   * Client Group resources.\n   */\n  clientGroups?: ClientGroup[];\n}\n\n/**\n * The edges (relationships) of a map.\n */\nexport interface MapEdges {\n  /**\n   * Network connections.\n   */\n  connections?: Connection[];\n  /**\n   * Processes accepting on a port.\n   */\n  acceptors?: Acceptor[];\n}\n\n/**\n * A map of resources and relationships between them.\n */\nexport interface Map {\n  nodes: MapNodes;\n  edges: MapEdges;\n}\n\n/**\n * Specifies the contents of a check liveness response.\n */\nexport interface Liveness {\n  /**\n   * Liveness interval start time.\n   */\n  startTime: Date;\n  /**\n   * Liveness interval end time.\n   */\n  endTime: Date;\n  /**\n   * `true` if the resource is live during [startTime, endTime], `false` otherwise\n   */\n  live: boolean;\n}\n\n/**\n * Contains the possible cases for MapRequest.\n */\nexport type MapRequestUnion = MapRequest | SingleMachineDependencyMapRequest | MultipleMachinesMapRequestUnion;\n\n/**\n * Specifies the contents of request to generate a map.\n */\nexport interface MapRequest {\n  /**\n   * Polymorphic Discriminator\n   */\n  kind: \"MapRequest\";\n  /**\n   * Map interval start time.\n   */\n  startTime?: Date;\n  /**\n   * Map interval end time.\n   */\n  endTime?: Date;\n}\n\n/**\n * Specifies the computation of a single server dependency map. A single server dependency map\n * includes all direct dependencies of a given machine.\n */\nexport interface SingleMachineDependencyMapRequest {\n  /**\n   * Polymorphic Discriminator\n   */\n  kind: \"map:single-machine-dependency\";\n  /**\n   * Map interval start time.\n   */\n  startTime?: Date;\n  /**\n   * Map interval end time.\n   */\n  endTime?: Date;\n  /**\n   * URI of machine resource for which to generate the map.\n   */\n  machineId: string;\n}\n\n/**\n * Contains the possible cases for MultipleMachinesMapRequest.\n */\nexport type MultipleMachinesMapRequestUnion = MultipleMachinesMapRequest | MachineListMapRequest | MachineGroupMapRequest;\n\n/**\n * Provides a base class for describing map requests for a collection of machines\n */\nexport interface MultipleMachinesMapRequest {\n  /**\n   * Polymorphic Discriminator\n   */\n  kind: \"MultipleMachinesMapRequest\";\n  /**\n   * Map interval start time.\n   */\n  startTime?: Date;\n  /**\n   * Map interval end time.\n   */\n  endTime?: Date;\n  /**\n   * If true, only processes between specified machines will be included. Any connections in or out\n   * of those processes will be included.\n   */\n  filterProcesses?: boolean;\n}\n\n/**\n * Specifies the computation of a one hope dependency map for a list of machines. The resulting map\n * includes all direct dependencies for the specified machines.\n */\nexport interface MachineListMapRequest {\n  /**\n   * Polymorphic Discriminator\n   */\n  kind: \"map:machine-list-dependency\";\n  /**\n   * Map interval start time.\n   */\n  startTime?: Date;\n  /**\n   * Map interval end time.\n   */\n  endTime?: Date;\n  /**\n   * If true, only processes between specified machines will be included. Any connections in or out\n   * of those processes will be included.\n   */\n  filterProcesses?: boolean;\n  /**\n   * a list of URIs of machine resources for which to generate the map.\n   */\n  machineIds: string[];\n}\n\n/**\n * Specifies the computation of a machine group dependency map. A machine group dependency map\n * includes all direct dependencies the machines in the group.\n */\nexport interface MachineGroupMapRequest {\n  /**\n   * Polymorphic Discriminator\n   */\n  kind: \"map:machine-group-dependency\";\n  /**\n   * Map interval start time.\n   */\n  startTime?: Date;\n  /**\n   * Map interval end time.\n   */\n  endTime?: Date;\n  /**\n   * If true, only processes between specified machines will be included. Any connections in or out\n   * of those processes will be included.\n   */\n  filterProcesses?: boolean;\n  /**\n   * URI of machine group resource for which to generate the map.\n   */\n  machineGroupId: string;\n}\n\n/**\n * Specified the contents of a map response.\n */\nexport interface MapResponse {\n  /**\n   * Map interval start time.\n   */\n  startTime: Date;\n  /**\n   * Map interval end time.\n   */\n  endTime: Date;\n  /**\n   * The generated map.\n   */\n  map: Map;\n}\n\n/**\n * Specifies the number of members in a client group.\n */\nexport interface ClientGroupMembersCount {\n  /**\n   * Membership interval start time.\n   */\n  startTime: Date;\n  /**\n   * Membership interval start time.\n   */\n  endTime: Date;\n  /**\n   * Client Group URI.\n   */\n  groupId: string;\n  /**\n   * Number of members in the client group. Use this value together with the value of\n   * ```accuracy```. If accuracy is `exact` then the value represents the actual number of members\n   * in the cloud. When accuracy is `estimated`, the actual number of members is larger than the\n   * value of ```count```.\n   */\n  count: number;\n  /**\n   * Accuracy of the reported count. Possible values include: 'actual', 'estimated'\n   */\n  accuracy: Accuracy;\n}\n\n/**\n * Error details.\n */\nexport interface ErrorModel {\n  /**\n   * Error code identifying the specific error.\n   */\n  code: string;\n  /**\n   * Error message in the caller's locale.\n   */\n  message?: string;\n}\n\n/**\n * An error response from the API.\n */\nexport interface ErrorResponse {\n  /**\n   * Error information.\n   */\n  error: ErrorModel;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface MachinesListByWorkspaceOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * Specifies whether to return live resources (true) or inventory resources (false). Defaults to\n   * **true**. When retrieving live resources, the start time (`startTime`) and end time\n   * (`endTime`) of the desired interval should be included. When retrieving inventory resources,\n   * an optional timestamp (`timestamp`) parameter can be specified to return the version of each\n   * resource closest (not-after) that timestamp. Default value: true.\n   */\n  live?: boolean;\n  /**\n   * UTC date and time specifying the start time of an interval. When not specified the service\n   * uses DateTime.UtcNow - 10m\n   */\n  startTime?: Date;\n  /**\n   * UTC date and time specifying the end time of an interval. When not specified the service uses\n   * DateTime.UtcNow\n   */\n  endTime?: Date;\n  /**\n   * UTC date and time specifying a time instance relative to which to evaluate each machine\n   * resource. Only applies when `live=false`. When not specified, the service uses\n   * DateTime.UtcNow.\n   */\n  timestamp?: Date;\n  /**\n   * Page size to use. When not specified, the default page size is 100 records.\n   */\n  top?: number;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface MachinesGetOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * UTC date and time specifying a time instance relative to which to evaluate the machine\n   * resource. When not specified, the service uses DateTime.UtcNow.\n   */\n  timestamp?: Date;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface MachinesGetLivenessOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * UTC date and time specifying the start time of an interval. When not specified the service\n   * uses DateTime.UtcNow - 10m\n   */\n  startTime?: Date;\n  /**\n   * UTC date and time specifying the end time of an interval. When not specified the service uses\n   * DateTime.UtcNow\n   */\n  endTime?: Date;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface MachinesListConnectionsOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * UTC date and time specifying the start time of an interval. When not specified the service\n   * uses DateTime.UtcNow - 10m\n   */\n  startTime?: Date;\n  /**\n   * UTC date and time specifying the end time of an interval. When not specified the service uses\n   * DateTime.UtcNow\n   */\n  endTime?: Date;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface MachinesListProcessesOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * Specifies whether to return live resources (true) or inventory resources (false). Defaults to\n   * **true**. When retrieving live resources, the start time (`startTime`) and end time\n   * (`endTime`) of the desired interval should be included. When retrieving inventory resources,\n   * an optional timestamp (`timestamp`) parameter can be specified to return the version of each\n   * resource closest (not-after) that timestamp. Default value: true.\n   */\n  live?: boolean;\n  /**\n   * UTC date and time specifying the start time of an interval. When not specified the service\n   * uses DateTime.UtcNow - 10m\n   */\n  startTime?: Date;\n  /**\n   * UTC date and time specifying the end time of an interval. When not specified the service uses\n   * DateTime.UtcNow\n   */\n  endTime?: Date;\n  /**\n   * UTC date and time specifying a time instance relative to which to evaluate all process\n   * resource. Only applies when `live=false`. When not specified, the service uses\n   * DateTime.UtcNow.\n   */\n  timestamp?: Date;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface MachinesListPortsOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * UTC date and time specifying the start time of an interval. When not specified the service\n   * uses DateTime.UtcNow - 10m\n   */\n  startTime?: Date;\n  /**\n   * UTC date and time specifying the end time of an interval. When not specified the service uses\n   * DateTime.UtcNow\n   */\n  endTime?: Date;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface MachinesListMachineGroupMembershipOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * UTC date and time specifying the start time of an interval. When not specified the service\n   * uses DateTime.UtcNow - 10m\n   */\n  startTime?: Date;\n  /**\n   * UTC date and time specifying the end time of an interval. When not specified the service uses\n   * DateTime.UtcNow\n   */\n  endTime?: Date;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ProcessesGetOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * UTC date and time specifying a time instance relative to which to evaluate a resource. When\n   * not specified, the service uses DateTime.UtcNow.\n   */\n  timestamp?: Date;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ProcessesGetLivenessOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * UTC date and time specifying the start time of an interval. When not specified the service\n   * uses DateTime.UtcNow - 10m\n   */\n  startTime?: Date;\n  /**\n   * UTC date and time specifying the end time of an interval. When not specified the service uses\n   * DateTime.UtcNow\n   */\n  endTime?: Date;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ProcessesListAcceptingPortsOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * UTC date and time specifying the start time of an interval. When not specified the service\n   * uses DateTime.UtcNow - 10m\n   */\n  startTime?: Date;\n  /**\n   * UTC date and time specifying the end time of an interval. When not specified the service uses\n   * DateTime.UtcNow\n   */\n  endTime?: Date;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ProcessesListConnectionsOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * UTC date and time specifying the start time of an interval. When not specified the service\n   * uses DateTime.UtcNow - 10m\n   */\n  startTime?: Date;\n  /**\n   * UTC date and time specifying the end time of an interval. When not specified the service uses\n   * DateTime.UtcNow\n   */\n  endTime?: Date;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface PortsGetOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * UTC date and time specifying the start time of an interval. When not specified the service\n   * uses DateTime.UtcNow - 10m\n   */\n  startTime?: Date;\n  /**\n   * UTC date and time specifying the end time of an interval. When not specified the service uses\n   * DateTime.UtcNow\n   */\n  endTime?: Date;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface PortsGetLivenessOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * UTC date and time specifying the start time of an interval. When not specified the service\n   * uses DateTime.UtcNow - 10m\n   */\n  startTime?: Date;\n  /**\n   * UTC date and time specifying the end time of an interval. When not specified the service uses\n   * DateTime.UtcNow\n   */\n  endTime?: Date;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface PortsListAcceptingProcessesOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * UTC date and time specifying the start time of an interval. When not specified the service\n   * uses DateTime.UtcNow - 10m\n   */\n  startTime?: Date;\n  /**\n   * UTC date and time specifying the end time of an interval. When not specified the service uses\n   * DateTime.UtcNow\n   */\n  endTime?: Date;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface PortsListConnectionsOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * UTC date and time specifying the start time of an interval. When not specified the service\n   * uses DateTime.UtcNow - 10m\n   */\n  startTime?: Date;\n  /**\n   * UTC date and time specifying the end time of an interval. When not specified the service uses\n   * DateTime.UtcNow\n   */\n  endTime?: Date;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ClientGroupsGetOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * UTC date and time specifying the start time of an interval. When not specified the service\n   * uses DateTime.UtcNow - 10m\n   */\n  startTime?: Date;\n  /**\n   * UTC date and time specifying the end time of an interval. When not specified the service uses\n   * DateTime.UtcNow\n   */\n  endTime?: Date;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ClientGroupsGetMembersCountOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * UTC date and time specifying the start time of an interval. When not specified the service\n   * uses DateTime.UtcNow - 10m\n   */\n  startTime?: Date;\n  /**\n   * UTC date and time specifying the end time of an interval. When not specified the service uses\n   * DateTime.UtcNow\n   */\n  endTime?: Date;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ClientGroupsListMembersOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * UTC date and time specifying the start time of an interval. When not specified the service\n   * uses DateTime.UtcNow - 10m\n   */\n  startTime?: Date;\n  /**\n   * UTC date and time specifying the end time of an interval. When not specified the service uses\n   * DateTime.UtcNow\n   */\n  endTime?: Date;\n  /**\n   * Page size to use. When not specified, the default page size is 100 records.\n   */\n  top?: number;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface SummariesGetMachinesOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * UTC date and time specifying the start time of an interval. When not specified the service\n   * uses DateTime.UtcNow - 10m\n   */\n  startTime?: Date;\n  /**\n   * UTC date and time specifying the end time of an interval. When not specified the service uses\n   * DateTime.UtcNow\n   */\n  endTime?: Date;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface MachineGroupsListByWorkspaceOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * UTC date and time specifying the start time of an interval. When not specified the service\n   * uses DateTime.UtcNow - 10m\n   */\n  startTime?: Date;\n  /**\n   * UTC date and time specifying the end time of an interval. When not specified the service uses\n   * DateTime.UtcNow\n   */\n  endTime?: Date;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface MachineGroupsGetOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * UTC date and time specifying the start time of an interval. When not specified the service\n   * uses DateTime.UtcNow - 10m\n   */\n  startTime?: Date;\n  /**\n   * UTC date and time specifying the end time of an interval. When not specified the service uses\n   * DateTime.UtcNow\n   */\n  endTime?: Date;\n}\n\n/**\n * An interface representing ServicemapManagementClientOptions.\n */\nexport interface ServicemapManagementClientOptions extends AzureServiceClientOptions {\n  baseUri?: string;\n}\n\n/**\n * @interface\n * Collection of Machine resources.\n * @extends Array<Machine>\n */\nexport interface MachineCollection extends Array<Machine> {\n  /**\n   * The URL to the next set of resources.\n   */\n  nextLink?: string;\n}\n\n/**\n * @interface\n * Collection of Connection resources.\n * @extends Array<Connection>\n */\nexport interface ConnectionCollection extends Array<Connection> {\n  /**\n   * The URL to the next set of resources.\n   */\n  nextLink?: string;\n}\n\n/**\n * @interface\n * Collection of Process resources.\n * @extends Array<Process>\n */\nexport interface ProcessCollection extends Array<Process> {\n  /**\n   * The URL to the next set of resources.\n   */\n  nextLink?: string;\n}\n\n/**\n * @interface\n * Collection of Port resources.\n * @extends Array<Port>\n */\nexport interface PortCollection extends Array<Port> {\n  /**\n   * The URL to the next set of resources.\n   */\n  nextLink?: string;\n}\n\n/**\n * @interface\n * Collection of Machine Group resources.\n * @extends Array<MachineGroup>\n */\nexport interface MachineGroupCollection extends Array<MachineGroup> {\n  /**\n   * The URL to the next set of resources.\n   */\n  nextLink?: string;\n}\n\n/**\n * @interface\n * Collection of ClientGroupMember resources.\n * @extends Array<ClientGroupMember>\n */\nexport interface ClientGroupMembersCollection extends Array<ClientGroupMember> {\n  /**\n   * The URL to the next set of resources.\n   */\n  nextLink?: string;\n}\n\n/**\n * Defines values for OperatingSystemFamily.\n * Possible values include: 'unknown', 'windows', 'linux', 'solaris', 'aix'\n * @readonly\n * @enum {string}\n */\nexport type OperatingSystemFamily = 'unknown' | 'windows' | 'linux' | 'solaris' | 'aix';\n\n/**\n * Defines values for MonitoringState.\n * Possible values include: 'monitored', 'discovered'\n * @readonly\n * @enum {string}\n */\nexport type MonitoringState = 'monitored' | 'discovered';\n\n/**\n * Defines values for VirtualizationState.\n * Possible values include: 'unknown', 'physical', 'virtual', 'hypervisor'\n * @readonly\n * @enum {string}\n */\nexport type VirtualizationState = 'unknown' | 'physical' | 'virtual' | 'hypervisor';\n\n/**\n * Defines values for MachineRebootStatus.\n * Possible values include: 'unknown', 'rebooted', 'notRebooted'\n * @readonly\n * @enum {string}\n */\nexport type MachineRebootStatus = 'unknown' | 'rebooted' | 'notRebooted';\n\n/**\n * Defines values for Accuracy.\n * Possible values include: 'actual', 'estimated'\n * @readonly\n * @enum {string}\n */\nexport type Accuracy = 'actual' | 'estimated';\n\n/**\n * Defines values for Bitness.\n * Possible values include: '32bit', '64bit'\n * @readonly\n * @enum {string}\n */\nexport type Bitness = '32bit' | '64bit';\n\n/**\n * Defines values for VirtualMachineType.\n * Possible values include: 'unknown', 'hyperv', 'ldom', 'lpar', 'vmware', 'virtualPc', 'xen'\n * @readonly\n * @enum {string}\n */\nexport type VirtualMachineType = 'unknown' | 'hyperv' | 'ldom' | 'lpar' | 'vmware' | 'virtualPc' | 'xen';\n\n/**\n * Defines values for HypervisorType.\n * Possible values include: 'unknown', 'hyperv'\n * @readonly\n * @enum {string}\n */\nexport type HypervisorType = 'unknown' | 'hyperv';\n\n/**\n * Defines values for ProcessRole.\n * Possible values include: 'webServer', 'appServer', 'databaseServer', 'ldapServer', 'smbServer'\n * @readonly\n * @enum {string}\n */\nexport type ProcessRole = 'webServer' | 'appServer' | 'databaseServer' | 'ldapServer' | 'smbServer';\n\n/**\n * Defines values for MachineGroupType.\n * Possible values include: 'unknown', 'azure-cs', 'azure-sf', 'azure-vmss', 'user-static'\n * @readonly\n * @enum {string}\n */\nexport type MachineGroupType = 'unknown' | 'azure-cs' | 'azure-sf' | 'azure-vmss' | 'user-static';\n\n/**\n * Defines values for ConnectionFailureState.\n * Possible values include: 'ok', 'failed', 'mixed'\n * @readonly\n * @enum {string}\n */\nexport type ConnectionFailureState = 'ok' | 'failed' | 'mixed';\n\n/**\n * Defines values for AzureCloudServiceRoleType.\n * Possible values include: 'unknown', 'worker', 'web'\n * @readonly\n * @enum {string}\n */\nexport type AzureCloudServiceRoleType = 'unknown' | 'worker' | 'web';\n\n/**\n * Defines values for Provider.\n * Possible values include: 'azure'\n * @readonly\n * @enum {string}\n */\nexport type Provider = 'azure';\n\n/**\n * Defines values for Provider1.\n * Possible values include: 'azure'\n * @readonly\n * @enum {string}\n */\nexport type Provider1 = 'azure';\n\n/**\n * Contains response data for the listByWorkspace operation.\n */\nexport type MachinesListByWorkspaceResponse = MachineCollection & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: MachineCollection;\n    };\n};\n\n/**\n * Contains response data for the get operation.\n */\nexport type MachinesGetResponse = Machine & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: Machine;\n    };\n};\n\n/**\n * Contains response data for the getLiveness operation.\n */\nexport type MachinesGetLivenessResponse = Liveness & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: Liveness;\n    };\n};\n\n/**\n * Contains response data for the listConnections operation.\n */\nexport type MachinesListConnectionsResponse = ConnectionCollection & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ConnectionCollection;\n    };\n};\n\n/**\n * Contains response data for the listProcesses operation.\n */\nexport type MachinesListProcessesResponse = ProcessCollection & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ProcessCollection;\n    };\n};\n\n/**\n * Contains response data for the listPorts operation.\n */\nexport type MachinesListPortsResponse = PortCollection & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: PortCollection;\n    };\n};\n\n/**\n * Contains response data for the listMachineGroupMembership operation.\n */\nexport type MachinesListMachineGroupMembershipResponse = MachineGroupCollection & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: MachineGroupCollection;\n    };\n};\n\n/**\n * Contains response data for the listByWorkspaceNext operation.\n */\nexport type MachinesListByWorkspaceNextResponse = MachineCollection & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: MachineCollection;\n    };\n};\n\n/**\n * Contains response data for the listConnectionsNext operation.\n */\nexport type MachinesListConnectionsNextResponse = ConnectionCollection & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ConnectionCollection;\n    };\n};\n\n/**\n * Contains response data for the listProcessesNext operation.\n */\nexport type MachinesListProcessesNextResponse = ProcessCollection & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ProcessCollection;\n    };\n};\n\n/**\n * Contains response data for the listPortsNext operation.\n */\nexport type MachinesListPortsNextResponse = PortCollection & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: PortCollection;\n    };\n};\n\n/**\n * Contains response data for the listMachineGroupMembershipNext operation.\n */\nexport type MachinesListMachineGroupMembershipNextResponse = MachineGroupCollection & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: MachineGroupCollection;\n    };\n};\n\n/**\n * Contains response data for the get operation.\n */\nexport type ProcessesGetResponse = Process & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: Process;\n    };\n};\n\n/**\n * Contains response data for the getLiveness operation.\n */\nexport type ProcessesGetLivenessResponse = Liveness & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: Liveness;\n    };\n};\n\n/**\n * Contains response data for the listAcceptingPorts operation.\n */\nexport type ProcessesListAcceptingPortsResponse = PortCollection & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: PortCollection;\n    };\n};\n\n/**\n * Contains response data for the listConnections operation.\n */\nexport type ProcessesListConnectionsResponse = ConnectionCollection & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ConnectionCollection;\n    };\n};\n\n/**\n * Contains response data for the listAcceptingPortsNext operation.\n */\nexport type ProcessesListAcceptingPortsNextResponse = PortCollection & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: PortCollection;\n    };\n};\n\n/**\n * Contains response data for the listConnectionsNext operation.\n */\nexport type ProcessesListConnectionsNextResponse = ConnectionCollection & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ConnectionCollection;\n    };\n};\n\n/**\n * Contains response data for the get operation.\n */\nexport type PortsGetResponse = Port & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: Port;\n    };\n};\n\n/**\n * Contains response data for the getLiveness operation.\n */\nexport type PortsGetLivenessResponse = Liveness & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: Liveness;\n    };\n};\n\n/**\n * Contains response data for the listAcceptingProcesses operation.\n */\nexport type PortsListAcceptingProcessesResponse = ProcessCollection & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ProcessCollection;\n    };\n};\n\n/**\n * Contains response data for the listConnections operation.\n */\nexport type PortsListConnectionsResponse = ConnectionCollection & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ConnectionCollection;\n    };\n};\n\n/**\n * Contains response data for the listAcceptingProcessesNext operation.\n */\nexport type PortsListAcceptingProcessesNextResponse = ProcessCollection & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ProcessCollection;\n    };\n};\n\n/**\n * Contains response data for the listConnectionsNext operation.\n */\nexport type PortsListConnectionsNextResponse = ConnectionCollection & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ConnectionCollection;\n    };\n};\n\n/**\n * Contains response data for the get operation.\n */\nexport type ClientGroupsGetResponse = ClientGroup & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ClientGroup;\n    };\n};\n\n/**\n * Contains response data for the getMembersCount operation.\n */\nexport type ClientGroupsGetMembersCountResponse = ClientGroupMembersCount & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ClientGroupMembersCount;\n    };\n};\n\n/**\n * Contains response data for the listMembers operation.\n */\nexport type ClientGroupsListMembersResponse = ClientGroupMembersCollection & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ClientGroupMembersCollection;\n    };\n};\n\n/**\n * Contains response data for the listMembersNext operation.\n */\nexport type ClientGroupsListMembersNextResponse = ClientGroupMembersCollection & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ClientGroupMembersCollection;\n    };\n};\n\n/**\n * Contains response data for the generate operation.\n */\nexport type MapsGenerateResponse = MapResponse & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: MapResponse;\n    };\n};\n\n/**\n * Contains response data for the getMachines operation.\n */\nexport type SummariesGetMachinesResponse = MachinesSummary & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: MachinesSummary;\n    };\n};\n\n/**\n * Contains response data for the listByWorkspace operation.\n */\nexport type MachineGroupsListByWorkspaceResponse = MachineGroupCollection & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: MachineGroupCollection;\n    };\n};\n\n/**\n * Contains response data for the create operation.\n */\nexport type MachineGroupsCreateResponse = MachineGroup & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: MachineGroup;\n    };\n};\n\n/**\n * Contains response data for the get operation.\n */\nexport type MachineGroupsGetResponse = MachineGroup & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: MachineGroup;\n    };\n};\n\n/**\n * Contains response data for the update operation.\n */\nexport type MachineGroupsUpdateResponse = MachineGroup & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: MachineGroup;\n    };\n};\n\n/**\n * Contains response data for the listByWorkspaceNext operation.\n */\nexport type MachineGroupsListByWorkspaceNextResponse = MachineGroupCollection & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: MachineGroupCollection;\n    };\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { CloudErrorMapper, BaseResourceMapper } from \"@azure/ms-rest-azure-js\";\nimport * as msRest from \"@azure/ms-rest-js\";\n\nexport const CloudError = CloudErrorMapper;\nexport const BaseResource = BaseResourceMapper;\n\nexport const Resource: msRest.CompositeMapper = {\n  serializedName: \"Resource\",\n  type: {\n    name: \"Composite\",\n    className: \"Resource\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        readOnly: true,\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        readOnly: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceReference: msRest.CompositeMapper = {\n  serializedName: \"ResourceReference\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: {\n      serializedName: \"kind\",\n      clientName: \"kind\"\n    },\n    uberParent: \"ResourceReference\",\n    className: \"ResourceReference\",\n    modelProperties: {\n      id: {\n        required: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        readOnly: true,\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        readOnly: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      kind: {\n        required: true,\n        serializedName: \"kind\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MachineReference: msRest.CompositeMapper = {\n  serializedName: \"ref:machine\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResourceReference.type.polymorphicDiscriminator,\n    uberParent: \"ResourceReference\",\n    className: \"MachineReference\",\n    modelProperties: {\n      ...ResourceReference.type.modelProperties\n    }\n  }\n};\n\nexport const ProcessReference: msRest.CompositeMapper = {\n  serializedName: \"ref:process\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResourceReference.type.polymorphicDiscriminator,\n    uberParent: \"ResourceReference\",\n    className: \"ProcessReference\",\n    modelProperties: {\n      ...ResourceReference.type.modelProperties,\n      machine: {\n        readOnly: true,\n        serializedName: \"properties.machine\",\n        type: {\n          name: \"Composite\",\n          className: \"MachineReference\"\n        }\n      }\n    }\n  }\n};\n\nexport const PortReference: msRest.CompositeMapper = {\n  serializedName: \"ref:port\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResourceReference.type.polymorphicDiscriminator,\n    uberParent: \"ResourceReference\",\n    className: \"PortReference\",\n    modelProperties: {\n      ...ResourceReference.type.modelProperties,\n      machine: {\n        readOnly: true,\n        serializedName: \"properties.machine\",\n        type: {\n          name: \"Composite\",\n          className: \"MachineReference\"\n        }\n      },\n      ipAddress: {\n        readOnly: true,\n        serializedName: \"properties.ipAddress\",\n        type: {\n          name: \"String\"\n        }\n      },\n      portNumber: {\n        serializedName: \"properties.portNumber\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const MachineReferenceWithHints: msRest.CompositeMapper = {\n  serializedName: \"ref:machinewithhints\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResourceReference.type.polymorphicDiscriminator,\n    uberParent: \"ResourceReference\",\n    className: \"MachineReferenceWithHints\",\n    modelProperties: {\n      ...ResourceReference.type.modelProperties,\n      displayNameHint: {\n        readOnly: true,\n        serializedName: \"properties.displayNameHint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      osFamilyHint: {\n        readOnly: true,\n        serializedName: \"properties.osFamilyHint\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"unknown\",\n            \"windows\",\n            \"linux\",\n            \"solaris\",\n            \"aix\"\n          ]\n        }\n      }\n    }\n  }\n};\n\nexport const ClientGroupReference: msRest.CompositeMapper = {\n  serializedName: \"ref:clientgroup\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResourceReference.type.polymorphicDiscriminator,\n    uberParent: \"ResourceReference\",\n    className: \"ClientGroupReference\",\n    modelProperties: {\n      ...ResourceReference.type.modelProperties\n    }\n  }\n};\n\nexport const CoreResource: msRest.CompositeMapper = {\n  serializedName: \"CoreResource\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: {\n      serializedName: \"kind\",\n      clientName: \"kind\"\n    },\n    uberParent: \"BaseResource\",\n    className: \"CoreResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      kind: {\n        required: true,\n        serializedName: \"kind\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Timezone: msRest.CompositeMapper = {\n  serializedName: \"Timezone\",\n  type: {\n    name: \"Composite\",\n    className: \"Timezone\",\n    modelProperties: {\n      fullName: {\n        serializedName: \"fullName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AgentConfiguration: msRest.CompositeMapper = {\n  serializedName: \"AgentConfiguration\",\n  type: {\n    name: \"Composite\",\n    className: \"AgentConfiguration\",\n    modelProperties: {\n      agentId: {\n        required: true,\n        serializedName: \"agentId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      dependencyAgentId: {\n        serializedName: \"dependencyAgentId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      dependencyAgentVersion: {\n        serializedName: \"dependencyAgentVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      dependencyAgentRevision: {\n        serializedName: \"dependencyAgentRevision\",\n        type: {\n          name: \"String\"\n        }\n      },\n      rebootStatus: {\n        serializedName: \"rebootStatus\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"unknown\",\n            \"rebooted\",\n            \"notRebooted\"\n          ]\n        }\n      },\n      clockGranularity: {\n        serializedName: \"clockGranularity\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const MachineResourcesConfiguration: msRest.CompositeMapper = {\n  serializedName: \"MachineResourcesConfiguration\",\n  type: {\n    name: \"Composite\",\n    className: \"MachineResourcesConfiguration\",\n    modelProperties: {\n      physicalMemory: {\n        serializedName: \"physicalMemory\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      cpus: {\n        serializedName: \"cpus\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      cpuSpeed: {\n        serializedName: \"cpuSpeed\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      cpuSpeedAccuracy: {\n        serializedName: \"cpuSpeedAccuracy\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"actual\",\n            \"estimated\"\n          ]\n        }\n      }\n    }\n  }\n};\n\nexport const Ipv4NetworkInterface: msRest.CompositeMapper = {\n  serializedName: \"Ipv4NetworkInterface\",\n  type: {\n    name: \"Composite\",\n    className: \"Ipv4NetworkInterface\",\n    modelProperties: {\n      ipAddress: {\n        required: true,\n        serializedName: \"ipAddress\",\n        type: {\n          name: \"String\"\n        }\n      },\n      subnetMask: {\n        serializedName: \"subnetMask\",\n        defaultValue: '255.255.255.255',\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Ipv6NetworkInterface: msRest.CompositeMapper = {\n  serializedName: \"Ipv6NetworkInterface\",\n  type: {\n    name: \"Composite\",\n    className: \"Ipv6NetworkInterface\",\n    modelProperties: {\n      ipAddress: {\n        required: true,\n        serializedName: \"ipAddress\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NetworkConfiguration: msRest.CompositeMapper = {\n  serializedName: \"NetworkConfiguration\",\n  type: {\n    name: \"Composite\",\n    className: \"NetworkConfiguration\",\n    modelProperties: {\n      ipv4Interfaces: {\n        serializedName: \"ipv4Interfaces\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Ipv4NetworkInterface\"\n            }\n          }\n        }\n      },\n      ipv6Interfaces: {\n        serializedName: \"ipv6Interfaces\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Ipv6NetworkInterface\"\n            }\n          }\n        }\n      },\n      defaultIpv4Gateways: {\n        serializedName: \"defaultIpv4Gateways\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      macAddresses: {\n        serializedName: \"macAddresses\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      dnsNames: {\n        serializedName: \"dnsNames\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const OperatingSystemConfiguration: msRest.CompositeMapper = {\n  serializedName: \"OperatingSystemConfiguration\",\n  type: {\n    name: \"Composite\",\n    className: \"OperatingSystemConfiguration\",\n    modelProperties: {\n      family: {\n        required: true,\n        serializedName: \"family\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"unknown\",\n            \"windows\",\n            \"linux\",\n            \"solaris\",\n            \"aix\"\n          ]\n        }\n      },\n      fullName: {\n        required: true,\n        serializedName: \"fullName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      bitness: {\n        required: true,\n        serializedName: \"bitness\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"32bit\",\n            \"64bit\"\n          ]\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineConfiguration: msRest.CompositeMapper = {\n  serializedName: \"VirtualMachineConfiguration\",\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineConfiguration\",\n    modelProperties: {\n      virtualMachineType: {\n        serializedName: \"virtualMachineType\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"unknown\",\n            \"hyperv\",\n            \"ldom\",\n            \"lpar\",\n            \"vmware\",\n            \"virtualPc\",\n            \"xen\"\n          ]\n        }\n      },\n      nativeMachineId: {\n        serializedName: \"nativeMachineId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      virtualMachineName: {\n        serializedName: \"virtualMachineName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      nativeHostMachineId: {\n        serializedName: \"nativeHostMachineId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const HypervisorConfiguration: msRest.CompositeMapper = {\n  serializedName: \"HypervisorConfiguration\",\n  type: {\n    name: \"Composite\",\n    className: \"HypervisorConfiguration\",\n    modelProperties: {\n      hypervisorType: {\n        serializedName: \"hypervisorType\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"unknown\",\n            \"hyperv\"\n          ]\n        }\n      },\n      nativeHostMachineId: {\n        serializedName: \"nativeHostMachineId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const HostingConfiguration: msRest.CompositeMapper = {\n  serializedName: \"HostingConfiguration\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: {\n      serializedName: \"kind\",\n      clientName: \"kind\"\n    },\n    uberParent: \"HostingConfiguration\",\n    className: \"HostingConfiguration\",\n    modelProperties: {\n      provider: {\n        serializedName: \"provider\",\n        type: {\n          name: \"String\"\n        }\n      },\n      kind: {\n        required: true,\n        serializedName: \"kind\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Machine: msRest.CompositeMapper = {\n  serializedName: \"machine\",\n  type: {\n    name: \"Composite\",\n    className: \"Machine\",\n    modelProperties: {\n      ...CoreResource.type.modelProperties,\n      timestamp: {\n        serializedName: \"properties.timestamp\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      monitoringState: {\n        serializedName: \"properties.monitoringState\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"monitored\",\n            \"discovered\"\n          ]\n        }\n      },\n      virtualizationState: {\n        serializedName: \"properties.virtualizationState\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"unknown\",\n            \"physical\",\n            \"virtual\",\n            \"hypervisor\"\n          ]\n        }\n      },\n      displayName: {\n        serializedName: \"properties.displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      computerName: {\n        serializedName: \"properties.computerName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fullyQualifiedDomainName: {\n        serializedName: \"properties.fullyQualifiedDomainName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      bootTime: {\n        serializedName: \"properties.bootTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      timezone: {\n        serializedName: \"properties.timezone\",\n        type: {\n          name: \"Composite\",\n          className: \"Timezone\"\n        }\n      },\n      agent: {\n        serializedName: \"properties.agent\",\n        type: {\n          name: \"Composite\",\n          className: \"AgentConfiguration\"\n        }\n      },\n      resources: {\n        serializedName: \"properties.resources\",\n        type: {\n          name: \"Composite\",\n          className: \"MachineResourcesConfiguration\"\n        }\n      },\n      networking: {\n        serializedName: \"properties.networking\",\n        type: {\n          name: \"Composite\",\n          className: \"NetworkConfiguration\"\n        }\n      },\n      operatingSystem: {\n        serializedName: \"properties.operatingSystem\",\n        type: {\n          name: \"Composite\",\n          className: \"OperatingSystemConfiguration\"\n        }\n      },\n      virtualMachine: {\n        serializedName: \"properties.virtualMachine\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineConfiguration\"\n        }\n      },\n      hypervisor: {\n        serializedName: \"properties.hypervisor\",\n        type: {\n          name: \"Composite\",\n          className: \"HypervisorConfiguration\"\n        }\n      },\n      hosting: {\n        serializedName: \"properties.hosting\",\n        type: {\n          name: \"Composite\",\n          className: \"HostingConfiguration\"\n        }\n      }\n    }\n  }\n};\n\nexport const ProcessHostedService: msRest.CompositeMapper = {\n  serializedName: \"ProcessHostedService\",\n  type: {\n    name: \"Composite\",\n    className: \"ProcessHostedService\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ProcessDetails: msRest.CompositeMapper = {\n  serializedName: \"ProcessDetails\",\n  type: {\n    name: \"Composite\",\n    className: \"ProcessDetails\",\n    modelProperties: {\n      persistentKey: {\n        serializedName: \"persistentKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      poolId: {\n        serializedName: \"poolId\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      firstPid: {\n        serializedName: \"firstPid\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      companyName: {\n        serializedName: \"companyName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      internalName: {\n        serializedName: \"internalName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      productName: {\n        serializedName: \"productName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      productVersion: {\n        serializedName: \"productVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileVersion: {\n        serializedName: \"fileVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      commandLine: {\n        serializedName: \"commandLine\",\n        type: {\n          name: \"String\"\n        }\n      },\n      executablePath: {\n        serializedName: \"executablePath\",\n        type: {\n          name: \"String\"\n        }\n      },\n      workingDirectory: {\n        serializedName: \"workingDirectory\",\n        type: {\n          name: \"String\"\n        }\n      },\n      services: {\n        serializedName: \"services\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ProcessHostedService\"\n            }\n          }\n        }\n      },\n      zoneName: {\n        serializedName: \"zoneName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ProcessUser: msRest.CompositeMapper = {\n  serializedName: \"ProcessUser\",\n  type: {\n    name: \"Composite\",\n    className: \"ProcessUser\",\n    modelProperties: {\n      userName: {\n        serializedName: \"userName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      userDomain: {\n        serializedName: \"userDomain\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ProcessHostingConfiguration: msRest.CompositeMapper = {\n  serializedName: \"ProcessHostingConfiguration\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: {\n      serializedName: \"kind\",\n      clientName: \"kind\"\n    },\n    uberParent: \"ProcessHostingConfiguration\",\n    className: \"ProcessHostingConfiguration\",\n    modelProperties: {\n      provider: {\n        serializedName: \"provider\",\n        type: {\n          name: \"String\"\n        }\n      },\n      kind: {\n        required: true,\n        serializedName: \"kind\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Process: msRest.CompositeMapper = {\n  serializedName: \"process\",\n  type: {\n    name: \"Composite\",\n    className: \"Process\",\n    modelProperties: {\n      ...CoreResource.type.modelProperties,\n      timestamp: {\n        serializedName: \"properties.timestamp\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      monitoringState: {\n        serializedName: \"properties.monitoringState\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"monitored\",\n            \"discovered\"\n          ]\n        }\n      },\n      machine: {\n        serializedName: \"properties.machine\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceReference\"\n        }\n      },\n      executableName: {\n        serializedName: \"properties.executableName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"properties.displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      startTime: {\n        serializedName: \"properties.startTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      role: {\n        serializedName: \"properties.role\",\n        type: {\n          name: \"String\"\n        }\n      },\n      group: {\n        serializedName: \"properties.group\",\n        type: {\n          name: \"String\"\n        }\n      },\n      details: {\n        serializedName: \"properties.details\",\n        type: {\n          name: \"Composite\",\n          className: \"ProcessDetails\"\n        }\n      },\n      user: {\n        serializedName: \"properties.user\",\n        type: {\n          name: \"Composite\",\n          className: \"ProcessUser\"\n        }\n      },\n      clientOf: {\n        serializedName: \"properties.clientOf\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceReference\"\n        }\n      },\n      acceptorOf: {\n        serializedName: \"properties.acceptorOf\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceReference\"\n        }\n      },\n      hosting: {\n        serializedName: \"properties.hosting\",\n        type: {\n          name: \"Composite\",\n          className: \"ProcessHostingConfiguration\"\n        }\n      }\n    }\n  }\n};\n\nexport const Port: msRest.CompositeMapper = {\n  serializedName: \"port\",\n  type: {\n    name: \"Composite\",\n    className: \"Port\",\n    modelProperties: {\n      ...CoreResource.type.modelProperties,\n      monitoringState: {\n        serializedName: \"properties.monitoringState\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"monitored\",\n            \"discovered\"\n          ]\n        }\n      },\n      machine: {\n        serializedName: \"properties.machine\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceReference\"\n        }\n      },\n      displayName: {\n        serializedName: \"properties.displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      ipAddress: {\n        serializedName: \"properties.ipAddress\",\n        type: {\n          name: \"String\"\n        }\n      },\n      portNumber: {\n        serializedName: \"properties.portNumber\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ClientGroup: msRest.CompositeMapper = {\n  serializedName: \"clientGroup\",\n  type: {\n    name: \"Composite\",\n    className: \"ClientGroup\",\n    modelProperties: {\n      ...CoreResource.type.modelProperties,\n      clientsOf: {\n        required: true,\n        serializedName: \"properties.clientsOf\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceReference\"\n        }\n      }\n    }\n  }\n};\n\nexport const ClientGroupMember: msRest.CompositeMapper = {\n  serializedName: \"ClientGroupMember\",\n  type: {\n    name: \"Composite\",\n    className: \"ClientGroupMember\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      ipAddress: {\n        serializedName: \"properties.ipAddress\",\n        type: {\n          name: \"String\"\n        }\n      },\n      port: {\n        serializedName: \"properties.port\",\n        type: {\n          name: \"Composite\",\n          className: \"PortReference\"\n        }\n      },\n      processes: {\n        serializedName: \"properties.processes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ProcessReference\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MachineGroup: msRest.CompositeMapper = {\n  serializedName: \"machineGroup\",\n  type: {\n    name: \"Composite\",\n    className: \"MachineGroup\",\n    modelProperties: {\n      ...CoreResource.type.modelProperties,\n      groupType: {\n        serializedName: \"properties.groupType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        required: true,\n        serializedName: \"properties.displayName\",\n        constraints: {\n          MaxLength: 256,\n          MinLength: 1\n        },\n        type: {\n          name: \"String\"\n        }\n      },\n      count: {\n        serializedName: \"properties.count\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      machines: {\n        serializedName: \"properties.machines\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MachineReferenceWithHints\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Summary: msRest.CompositeMapper = {\n  serializedName: \"Summary\",\n  type: {\n    name: \"Composite\",\n    className: \"Summary\",\n    modelProperties: {\n      ...Resource.type.modelProperties\n    }\n  }\n};\n\nexport const MachineCountsByOperatingSystem: msRest.CompositeMapper = {\n  serializedName: \"MachineCountsByOperatingSystem\",\n  type: {\n    name: \"Composite\",\n    className: \"MachineCountsByOperatingSystem\",\n    modelProperties: {\n      windows: {\n        required: true,\n        serializedName: \"windows\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      linux: {\n        required: true,\n        serializedName: \"linux\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const MachinesSummary: msRest.CompositeMapper = {\n  serializedName: \"MachinesSummary\",\n  type: {\n    name: \"Composite\",\n    className: \"MachinesSummary\",\n    modelProperties: {\n      ...Summary.type.modelProperties,\n      startTime: {\n        required: true,\n        serializedName: \"properties.startTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endTime: {\n        required: true,\n        serializedName: \"properties.endTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      total: {\n        required: true,\n        serializedName: \"properties.total\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      live: {\n        required: true,\n        serializedName: \"properties.live\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      os: {\n        required: true,\n        serializedName: \"properties.os\",\n        type: {\n          name: \"Composite\",\n          className: \"MachineCountsByOperatingSystem\"\n        }\n      }\n    }\n  }\n};\n\nexport const Relationship: msRest.CompositeMapper = {\n  serializedName: \"Relationship\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: {\n      serializedName: \"kind\",\n      clientName: \"kind\"\n    },\n    uberParent: \"BaseResource\",\n    className: \"Relationship\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      kind: {\n        required: true,\n        serializedName: \"kind\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Connection: msRest.CompositeMapper = {\n  serializedName: \"rel:connection\",\n  type: {\n    name: \"Composite\",\n    className: \"Connection\",\n    modelProperties: {\n      ...Relationship.type.modelProperties,\n      source: {\n        required: true,\n        serializedName: \"properties.source\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceReference\"\n        }\n      },\n      destination: {\n        required: true,\n        serializedName: \"properties.destination\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceReference\"\n        }\n      },\n      startTime: {\n        serializedName: \"properties.startTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endTime: {\n        serializedName: \"properties.endTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      serverPort: {\n        serializedName: \"properties.serverPort\",\n        type: {\n          name: \"Composite\",\n          className: \"PortReference\"\n        }\n      },\n      failureState: {\n        serializedName: \"properties.failureState\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"ok\",\n            \"failed\",\n            \"mixed\"\n          ]\n        }\n      }\n    }\n  }\n};\n\nexport const Acceptor: msRest.CompositeMapper = {\n  serializedName: \"rel:acceptor\",\n  type: {\n    name: \"Composite\",\n    className: \"Acceptor\",\n    modelProperties: {\n      ...Relationship.type.modelProperties,\n      source: {\n        required: true,\n        serializedName: \"properties.source\",\n        type: {\n          name: \"Composite\",\n          className: \"PortReference\"\n        }\n      },\n      destination: {\n        required: true,\n        serializedName: \"properties.destination\",\n        type: {\n          name: \"Composite\",\n          className: \"ProcessReference\"\n        }\n      },\n      startTime: {\n        serializedName: \"properties.startTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endTime: {\n        serializedName: \"properties.endTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const SummaryProperties: msRest.CompositeMapper = {\n  serializedName: \"SummaryProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"SummaryProperties\",\n    modelProperties: {\n      startTime: {\n        required: true,\n        serializedName: \"startTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endTime: {\n        required: true,\n        serializedName: \"endTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const RelationshipProperties: msRest.CompositeMapper = {\n  serializedName: \"RelationshipProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"RelationshipProperties\",\n    modelProperties: {\n      source: {\n        required: true,\n        serializedName: \"source\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceReference\"\n        }\n      },\n      destination: {\n        required: true,\n        serializedName: \"destination\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceReference\"\n        }\n      },\n      startTime: {\n        serializedName: \"startTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endTime: {\n        serializedName: \"endTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const ImageConfiguration: msRest.CompositeMapper = {\n  serializedName: \"ImageConfiguration\",\n  type: {\n    name: \"Composite\",\n    className: \"ImageConfiguration\",\n    modelProperties: {\n      publisher: {\n        serializedName: \"publisher\",\n        type: {\n          name: \"String\"\n        }\n      },\n      offering: {\n        serializedName: \"offering\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"version\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AzureCloudServiceConfiguration: msRest.CompositeMapper = {\n  serializedName: \"AzureCloudServiceConfiguration\",\n  type: {\n    name: \"Composite\",\n    className: \"AzureCloudServiceConfiguration\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      instanceId: {\n        serializedName: \"instanceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      deployment: {\n        serializedName: \"deployment\",\n        type: {\n          name: \"String\"\n        }\n      },\n      roleName: {\n        serializedName: \"roleName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      roleType: {\n        serializedName: \"roleType\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"unknown\",\n            \"worker\",\n            \"web\"\n          ]\n        }\n      }\n    }\n  }\n};\n\nexport const AzureVmScaleSetConfiguration: msRest.CompositeMapper = {\n  serializedName: \"AzureVmScaleSetConfiguration\",\n  type: {\n    name: \"Composite\",\n    className: \"AzureVmScaleSetConfiguration\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      instanceId: {\n        serializedName: \"instanceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      deployment: {\n        serializedName: \"deployment\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceId: {\n        serializedName: \"resourceId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AzureServiceFabricClusterConfiguration: msRest.CompositeMapper = {\n  serializedName: \"AzureServiceFabricClusterConfiguration\",\n  type: {\n    name: \"Composite\",\n    className: \"AzureServiceFabricClusterConfiguration\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clusterId: {\n        serializedName: \"clusterId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AzureHostingConfiguration: msRest.CompositeMapper = {\n  serializedName: \"provider:azure\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: HostingConfiguration.type.polymorphicDiscriminator,\n    uberParent: \"HostingConfiguration\",\n    className: \"AzureHostingConfiguration\",\n    modelProperties: {\n      ...HostingConfiguration.type.modelProperties,\n      vmId: {\n        serializedName: \"vmId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      size: {\n        serializedName: \"size\",\n        type: {\n          name: \"String\"\n        }\n      },\n      updateDomain: {\n        serializedName: \"updateDomain\",\n        type: {\n          name: \"String\"\n        }\n      },\n      faultDomain: {\n        serializedName: \"faultDomain\",\n        type: {\n          name: \"String\"\n        }\n      },\n      subscriptionId: {\n        serializedName: \"subscriptionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceGroup: {\n        serializedName: \"resourceGroup\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceId: {\n        serializedName: \"resourceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      image: {\n        serializedName: \"image\",\n        type: {\n          name: \"Composite\",\n          className: \"ImageConfiguration\"\n        }\n      },\n      cloudService: {\n        serializedName: \"cloudService\",\n        type: {\n          name: \"Composite\",\n          className: \"AzureCloudServiceConfiguration\"\n        }\n      },\n      vmScaleSet: {\n        serializedName: \"vmScaleSet\",\n        type: {\n          name: \"Composite\",\n          className: \"AzureVmScaleSetConfiguration\"\n        }\n      },\n      serviceFabricCluster: {\n        serializedName: \"serviceFabricCluster\",\n        type: {\n          name: \"Composite\",\n          className: \"AzureServiceFabricClusterConfiguration\"\n        }\n      }\n    }\n  }\n};\n\nexport const AzureProcessHostingConfiguration: msRest.CompositeMapper = {\n  serializedName: \"provider:azure\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ProcessHostingConfiguration.type.polymorphicDiscriminator,\n    uberParent: \"ProcessHostingConfiguration\",\n    className: \"AzureProcessHostingConfiguration\",\n    modelProperties: {\n      ...ProcessHostingConfiguration.type.modelProperties,\n      cloudService: {\n        serializedName: \"cloudService\",\n        type: {\n          name: \"Composite\",\n          className: \"AzureCloudServiceConfiguration\"\n        }\n      }\n    }\n  }\n};\n\nexport const MapNodes: msRest.CompositeMapper = {\n  serializedName: \"MapNodes\",\n  type: {\n    name: \"Composite\",\n    className: \"MapNodes\",\n    modelProperties: {\n      machines: {\n        serializedName: \"machines\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Machine\"\n            }\n          }\n        }\n      },\n      processes: {\n        serializedName: \"processes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Process\"\n            }\n          }\n        }\n      },\n      ports: {\n        serializedName: \"ports\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Port\"\n            }\n          }\n        }\n      },\n      clientGroups: {\n        serializedName: \"clientGroups\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ClientGroup\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MapEdges: msRest.CompositeMapper = {\n  serializedName: \"MapEdges\",\n  type: {\n    name: \"Composite\",\n    className: \"MapEdges\",\n    modelProperties: {\n      connections: {\n        serializedName: \"connections\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Connection\"\n            }\n          }\n        }\n      },\n      acceptors: {\n        serializedName: \"acceptors\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Acceptor\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Map: msRest.CompositeMapper = {\n  serializedName: \"Map\",\n  type: {\n    name: \"Composite\",\n    className: \"Map\",\n    modelProperties: {\n      nodes: {\n        required: true,\n        serializedName: \"nodes\",\n        type: {\n          name: \"Composite\",\n          className: \"MapNodes\"\n        }\n      },\n      edges: {\n        required: true,\n        serializedName: \"edges\",\n        type: {\n          name: \"Composite\",\n          className: \"MapEdges\"\n        }\n      }\n    }\n  }\n};\n\nexport const Liveness: msRest.CompositeMapper = {\n  serializedName: \"Liveness\",\n  type: {\n    name: \"Composite\",\n    className: \"Liveness\",\n    modelProperties: {\n      startTime: {\n        required: true,\n        serializedName: \"startTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endTime: {\n        required: true,\n        serializedName: \"endTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      live: {\n        required: true,\n        serializedName: \"live\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const MapRequest: msRest.CompositeMapper = {\n  serializedName: \"MapRequest\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: {\n      serializedName: \"kind\",\n      clientName: \"kind\"\n    },\n    uberParent: \"MapRequest\",\n    className: \"MapRequest\",\n    modelProperties: {\n      startTime: {\n        serializedName: \"startTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endTime: {\n        serializedName: \"endTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      kind: {\n        required: true,\n        serializedName: \"kind\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SingleMachineDependencyMapRequest: msRest.CompositeMapper = {\n  serializedName: \"map:single-machine-dependency\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: MapRequest.type.polymorphicDiscriminator,\n    uberParent: \"MapRequest\",\n    className: \"SingleMachineDependencyMapRequest\",\n    modelProperties: {\n      ...MapRequest.type.modelProperties,\n      machineId: {\n        required: true,\n        serializedName: \"machineId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MultipleMachinesMapRequest: msRest.CompositeMapper = {\n  serializedName: \"MultipleMachinesMapRequest\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: MapRequest.type.polymorphicDiscriminator,\n    uberParent: \"MapRequest\",\n    className: \"MultipleMachinesMapRequest\",\n    modelProperties: {\n      ...MapRequest.type.modelProperties,\n      filterProcesses: {\n        serializedName: \"filterProcesses\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const MachineListMapRequest: msRest.CompositeMapper = {\n  serializedName: \"map:machine-list-dependency\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: MapRequest.type.polymorphicDiscriminator,\n    uberParent: \"MapRequest\",\n    className: \"MachineListMapRequest\",\n    modelProperties: {\n      ...MultipleMachinesMapRequest.type.modelProperties,\n      machineIds: {\n        required: true,\n        serializedName: \"machineIds\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MachineGroupMapRequest: msRest.CompositeMapper = {\n  serializedName: \"map:machine-group-dependency\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: MapRequest.type.polymorphicDiscriminator,\n    uberParent: \"MapRequest\",\n    className: \"MachineGroupMapRequest\",\n    modelProperties: {\n      ...MultipleMachinesMapRequest.type.modelProperties,\n      machineGroupId: {\n        required: true,\n        serializedName: \"machineGroupId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MapResponse: msRest.CompositeMapper = {\n  serializedName: \"MapResponse\",\n  type: {\n    name: \"Composite\",\n    className: \"MapResponse\",\n    modelProperties: {\n      startTime: {\n        required: true,\n        serializedName: \"startTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endTime: {\n        required: true,\n        serializedName: \"endTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      map: {\n        required: true,\n        serializedName: \"map\",\n        type: {\n          name: \"Composite\",\n          className: \"Map\"\n        }\n      }\n    }\n  }\n};\n\nexport const ClientGroupMembersCount: msRest.CompositeMapper = {\n  serializedName: \"ClientGroupMembersCount\",\n  type: {\n    name: \"Composite\",\n    className: \"ClientGroupMembersCount\",\n    modelProperties: {\n      startTime: {\n        required: true,\n        serializedName: \"startTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endTime: {\n        required: true,\n        serializedName: \"endTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      groupId: {\n        required: true,\n        serializedName: \"groupId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      count: {\n        required: true,\n        serializedName: \"count\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      accuracy: {\n        required: true,\n        serializedName: \"accuracy\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"actual\",\n            \"estimated\"\n          ]\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorModel: msRest.CompositeMapper = {\n  serializedName: \"Error\",\n  type: {\n    name: \"Composite\",\n    className: \"ErrorModel\",\n    modelProperties: {\n      code: {\n        required: true,\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorResponse: msRest.CompositeMapper = {\n  serializedName: \"ErrorResponse\",\n  type: {\n    name: \"Composite\",\n    className: \"ErrorResponse\",\n    modelProperties: {\n      error: {\n        required: true,\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorModel\"\n        }\n      }\n    }\n  }\n};\n\nexport const MachineCollection: msRest.CompositeMapper = {\n  serializedName: \"MachineCollection\",\n  type: {\n    name: \"Composite\",\n    className: \"MachineCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Machine\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectionCollection: msRest.CompositeMapper = {\n  serializedName: \"ConnectionCollection\",\n  type: {\n    name: \"Composite\",\n    className: \"ConnectionCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Connection\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ProcessCollection: msRest.CompositeMapper = {\n  serializedName: \"ProcessCollection\",\n  type: {\n    name: \"Composite\",\n    className: \"ProcessCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Process\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PortCollection: msRest.CompositeMapper = {\n  serializedName: \"PortCollection\",\n  type: {\n    name: \"Composite\",\n    className: \"PortCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Port\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MachineGroupCollection: msRest.CompositeMapper = {\n  serializedName: \"MachineGroupCollection\",\n  type: {\n    name: \"Composite\",\n    className: \"MachineGroupCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MachineGroup\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ClientGroupMembersCollection: msRest.CompositeMapper = {\n  serializedName: \"ClientGroupMembersCollection\",\n  type: {\n    name: \"Composite\",\n    className: \"ClientGroupMembersCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ClientGroupMember\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const discriminators = {\n  'ResourceReference' : ResourceReference,\n  'ResourceReference.ref:machine' : MachineReference,\n  'ResourceReference.ref:process' : ProcessReference,\n  'ResourceReference.ref:port' : PortReference,\n  'ResourceReference.ref:machinewithhints' : MachineReferenceWithHints,\n  'ResourceReference.ref:clientgroup' : ClientGroupReference,\n  'BaseResource.CoreResource' : CoreResource,\n  'HostingConfiguration' : HostingConfiguration,\n  'BaseResource.machine' : Machine,\n  'ProcessHostingConfiguration' : ProcessHostingConfiguration,\n  'BaseResource.process' : Process,\n  'BaseResource.port' : Port,\n  'BaseResource.clientGroup' : ClientGroup,\n  'BaseResource.machineGroup' : MachineGroup,\n  'BaseResource.Relationship' : Relationship,\n  'BaseResource.rel:connection' : Connection,\n  'BaseResource.rel:acceptor' : Acceptor,\n  'HostingConfiguration.provider:azure' : AzureHostingConfiguration,\n  'ProcessHostingConfiguration.provider:azure' : AzureProcessHostingConfiguration,\n  'MapRequest' : MapRequest,\n  'MapRequest.map:single-machine-dependency' : SingleMachineDependencyMapRequest,\n  'MapRequest.MultipleMachinesMapRequest' : MultipleMachinesMapRequest,\n  'MapRequest.map:machine-list-dependency' : MachineListMapRequest,\n  'MapRequest.map:machine-group-dependency' : MachineGroupMapRequest\n\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  discriminators,\n  Acceptor,\n  AgentConfiguration,\n  AzureCloudServiceConfiguration,\n  AzureHostingConfiguration,\n  AzureProcessHostingConfiguration,\n  AzureServiceFabricClusterConfiguration,\n  AzureVmScaleSetConfiguration,\n  BaseResource,\n  ClientGroup,\n  ClientGroupMember,\n  ClientGroupReference,\n  Connection,\n  ConnectionCollection,\n  CoreResource,\n  ErrorModel,\n  ErrorResponse,\n  HostingConfiguration,\n  HypervisorConfiguration,\n  ImageConfiguration,\n  Ipv4NetworkInterface,\n  Ipv6NetworkInterface,\n  Liveness,\n  Machine,\n  MachineCollection,\n  MachineCountsByOperatingSystem,\n  MachineGroup,\n  MachineGroupCollection,\n  MachineReference,\n  MachineReferenceWithHints,\n  MachineResourcesConfiguration,\n  MachinesSummary,\n  NetworkConfiguration,\n  OperatingSystemConfiguration,\n  Port,\n  PortCollection,\n  PortReference,\n  Process,\n  ProcessCollection,\n  ProcessDetails,\n  ProcessHostedService,\n  ProcessHostingConfiguration,\n  ProcessReference,\n  ProcessUser,\n  Relationship,\n  Resource,\n  ResourceReference,\n  Summary,\n  Timezone,\n  VirtualMachineConfiguration\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\n\nexport const acceptLanguage: msRest.OperationParameter = {\n  parameterPath: \"acceptLanguage\",\n  mapper: {\n    serializedName: \"accept-language\",\n    defaultValue: 'en-US',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const apiVersion: msRest.OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    required: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const clientGroupName: msRest.OperationURLParameter = {\n  parameterPath: \"clientGroupName\",\n  mapper: {\n    required: true,\n    serializedName: \"clientGroupName\",\n    constraints: {\n      MaxLength: 256,\n      MinLength: 3\n    },\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const endTime: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"endTime\"\n  ],\n  mapper: {\n    serializedName: \"endTime\",\n    type: {\n      name: \"DateTime\"\n    }\n  }\n};\nexport const live: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"live\"\n  ],\n  mapper: {\n    serializedName: \"live\",\n    defaultValue: true,\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\nexport const machineGroupName: msRest.OperationURLParameter = {\n  parameterPath: \"machineGroupName\",\n  mapper: {\n    required: true,\n    serializedName: \"machineGroupName\",\n    constraints: {\n      MaxLength: 36,\n      MinLength: 36\n    },\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const machineName: msRest.OperationURLParameter = {\n  parameterPath: \"machineName\",\n  mapper: {\n    required: true,\n    serializedName: \"machineName\",\n    constraints: {\n      MaxLength: 64,\n      MinLength: 3\n    },\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const nextPageLink: msRest.OperationURLParameter = {\n  parameterPath: \"nextPageLink\",\n  mapper: {\n    required: true,\n    serializedName: \"nextLink\",\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\nexport const portName: msRest.OperationURLParameter = {\n  parameterPath: \"portName\",\n  mapper: {\n    required: true,\n    serializedName: \"portName\",\n    constraints: {\n      MaxLength: 64,\n      MinLength: 3\n    },\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const processName: msRest.OperationURLParameter = {\n  parameterPath: \"processName\",\n  mapper: {\n    required: true,\n    serializedName: \"processName\",\n    constraints: {\n      MaxLength: 128,\n      MinLength: 3\n    },\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const resourceGroupName: msRest.OperationURLParameter = {\n  parameterPath: \"resourceGroupName\",\n  mapper: {\n    required: true,\n    serializedName: \"resourceGroupName\",\n    constraints: {\n      MaxLength: 64,\n      MinLength: 1,\n      Pattern: /[a-zA-Z0-9_-]+/\n    },\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const startTime: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"startTime\"\n  ],\n  mapper: {\n    serializedName: \"startTime\",\n    type: {\n      name: \"DateTime\"\n    }\n  }\n};\nexport const subscriptionId: msRest.OperationURLParameter = {\n  parameterPath: \"subscriptionId\",\n  mapper: {\n    required: true,\n    serializedName: \"subscriptionId\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const timestamp: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"timestamp\"\n  ],\n  mapper: {\n    serializedName: \"timestamp\",\n    type: {\n      name: \"DateTime\"\n    }\n  }\n};\nexport const top: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"top\"\n  ],\n  mapper: {\n    serializedName: \"$top\",\n    constraints: {\n      InclusiveMaximum: 200,\n      InclusiveMinimum: 1\n    },\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const workspaceName: msRest.OperationURLParameter = {\n  parameterPath: \"workspaceName\",\n  mapper: {\n    required: true,\n    serializedName: \"workspaceName\",\n    constraints: {\n      MaxLength: 63,\n      MinLength: 3,\n      Pattern: /[a-zA-Z0-9_][a-zA-Z0-9_-]+[a-zA-Z0-9_]/\n    },\n    type: {\n      name: \"String\"\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/machinesMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ServicemapManagementClientContext } from \"../servicemapManagementClientContext\";\n\n/** Class representing a Machines. */\nexport class Machines {\n  private readonly client: ServicemapManagementClientContext;\n\n  /**\n   * Create a Machines.\n   * @param {ServicemapManagementClientContext} client Reference to the service client.\n   */\n  constructor(client: ServicemapManagementClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Returns a collection of machines matching the specified conditions.  The returned collection\n   * represents either machines that are active/live during the specified interval  of time\n   * (`live=true` and `startTime`/`endTime` are specified) or that are known to have existed at or\n   * some time prior to the specified point in time (`live=false` and `timestamp` is specified).\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.MachinesListByWorkspaceResponse>\n   */\n  listByWorkspace(resourceGroupName: string, workspaceName: string, options?: Models.MachinesListByWorkspaceOptionalParams): Promise<Models.MachinesListByWorkspaceResponse>;\n  /**\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param callback The callback\n   */\n  listByWorkspace(resourceGroupName: string, workspaceName: string, callback: msRest.ServiceCallback<Models.MachineCollection>): void;\n  /**\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listByWorkspace(resourceGroupName: string, workspaceName: string, options: Models.MachinesListByWorkspaceOptionalParams, callback: msRest.ServiceCallback<Models.MachineCollection>): void;\n  listByWorkspace(resourceGroupName: string, workspaceName: string, options?: Models.MachinesListByWorkspaceOptionalParams | msRest.ServiceCallback<Models.MachineCollection>, callback?: msRest.ServiceCallback<Models.MachineCollection>): Promise<Models.MachinesListByWorkspaceResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        options\n      },\n      listByWorkspaceOperationSpec,\n      callback) as Promise<Models.MachinesListByWorkspaceResponse>;\n  }\n\n  /**\n   * Returns the specified machine.\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineName Machine resource name.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.MachinesGetResponse>\n   */\n  get(resourceGroupName: string, workspaceName: string, machineName: string, options?: Models.MachinesGetOptionalParams): Promise<Models.MachinesGetResponse>;\n  /**\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineName Machine resource name.\n   * @param callback The callback\n   */\n  get(resourceGroupName: string, workspaceName: string, machineName: string, callback: msRest.ServiceCallback<Models.Machine>): void;\n  /**\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineName Machine resource name.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  get(resourceGroupName: string, workspaceName: string, machineName: string, options: Models.MachinesGetOptionalParams, callback: msRest.ServiceCallback<Models.Machine>): void;\n  get(resourceGroupName: string, workspaceName: string, machineName: string, options?: Models.MachinesGetOptionalParams | msRest.ServiceCallback<Models.Machine>, callback?: msRest.ServiceCallback<Models.Machine>): Promise<Models.MachinesGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        machineName,\n        options\n      },\n      getOperationSpec,\n      callback) as Promise<Models.MachinesGetResponse>;\n  }\n\n  /**\n   * Obtains the liveness status of the machine during the specified time interval.\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineName Machine resource name.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.MachinesGetLivenessResponse>\n   */\n  getLiveness(resourceGroupName: string, workspaceName: string, machineName: string, options?: Models.MachinesGetLivenessOptionalParams): Promise<Models.MachinesGetLivenessResponse>;\n  /**\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineName Machine resource name.\n   * @param callback The callback\n   */\n  getLiveness(resourceGroupName: string, workspaceName: string, machineName: string, callback: msRest.ServiceCallback<Models.Liveness>): void;\n  /**\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineName Machine resource name.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getLiveness(resourceGroupName: string, workspaceName: string, machineName: string, options: Models.MachinesGetLivenessOptionalParams, callback: msRest.ServiceCallback<Models.Liveness>): void;\n  getLiveness(resourceGroupName: string, workspaceName: string, machineName: string, options?: Models.MachinesGetLivenessOptionalParams | msRest.ServiceCallback<Models.Liveness>, callback?: msRest.ServiceCallback<Models.Liveness>): Promise<Models.MachinesGetLivenessResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        machineName,\n        options\n      },\n      getLivenessOperationSpec,\n      callback) as Promise<Models.MachinesGetLivenessResponse>;\n  }\n\n  /**\n   * Returns a collection of connections terminating or originating at the specified machine\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineName Machine resource name.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.MachinesListConnectionsResponse>\n   */\n  listConnections(resourceGroupName: string, workspaceName: string, machineName: string, options?: Models.MachinesListConnectionsOptionalParams): Promise<Models.MachinesListConnectionsResponse>;\n  /**\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineName Machine resource name.\n   * @param callback The callback\n   */\n  listConnections(resourceGroupName: string, workspaceName: string, machineName: string, callback: msRest.ServiceCallback<Models.ConnectionCollection>): void;\n  /**\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineName Machine resource name.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listConnections(resourceGroupName: string, workspaceName: string, machineName: string, options: Models.MachinesListConnectionsOptionalParams, callback: msRest.ServiceCallback<Models.ConnectionCollection>): void;\n  listConnections(resourceGroupName: string, workspaceName: string, machineName: string, options?: Models.MachinesListConnectionsOptionalParams | msRest.ServiceCallback<Models.ConnectionCollection>, callback?: msRest.ServiceCallback<Models.ConnectionCollection>): Promise<Models.MachinesListConnectionsResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        machineName,\n        options\n      },\n      listConnectionsOperationSpec,\n      callback) as Promise<Models.MachinesListConnectionsResponse>;\n  }\n\n  /**\n   * Returns a collection of processes on the specified machine matching the specified conditions.\n   * The returned collection represents either processes that are active/live during the specified\n   * interval  of time (`live=true` and `startTime`/`endTime` are specified) or that are known to\n   * have existed at or  some time prior to the specified point in time (`live=false` and `timestamp`\n   * is specified).\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineName Machine resource name.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.MachinesListProcessesResponse>\n   */\n  listProcesses(resourceGroupName: string, workspaceName: string, machineName: string, options?: Models.MachinesListProcessesOptionalParams): Promise<Models.MachinesListProcessesResponse>;\n  /**\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineName Machine resource name.\n   * @param callback The callback\n   */\n  listProcesses(resourceGroupName: string, workspaceName: string, machineName: string, callback: msRest.ServiceCallback<Models.ProcessCollection>): void;\n  /**\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineName Machine resource name.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listProcesses(resourceGroupName: string, workspaceName: string, machineName: string, options: Models.MachinesListProcessesOptionalParams, callback: msRest.ServiceCallback<Models.ProcessCollection>): void;\n  listProcesses(resourceGroupName: string, workspaceName: string, machineName: string, options?: Models.MachinesListProcessesOptionalParams | msRest.ServiceCallback<Models.ProcessCollection>, callback?: msRest.ServiceCallback<Models.ProcessCollection>): Promise<Models.MachinesListProcessesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        machineName,\n        options\n      },\n      listProcessesOperationSpec,\n      callback) as Promise<Models.MachinesListProcessesResponse>;\n  }\n\n  /**\n   * Returns a collection of live ports on the specified machine during the specified time interval.\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineName Machine resource name.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.MachinesListPortsResponse>\n   */\n  listPorts(resourceGroupName: string, workspaceName: string, machineName: string, options?: Models.MachinesListPortsOptionalParams): Promise<Models.MachinesListPortsResponse>;\n  /**\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineName Machine resource name.\n   * @param callback The callback\n   */\n  listPorts(resourceGroupName: string, workspaceName: string, machineName: string, callback: msRest.ServiceCallback<Models.PortCollection>): void;\n  /**\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineName Machine resource name.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listPorts(resourceGroupName: string, workspaceName: string, machineName: string, options: Models.MachinesListPortsOptionalParams, callback: msRest.ServiceCallback<Models.PortCollection>): void;\n  listPorts(resourceGroupName: string, workspaceName: string, machineName: string, options?: Models.MachinesListPortsOptionalParams | msRest.ServiceCallback<Models.PortCollection>, callback?: msRest.ServiceCallback<Models.PortCollection>): Promise<Models.MachinesListPortsResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        machineName,\n        options\n      },\n      listPortsOperationSpec,\n      callback) as Promise<Models.MachinesListPortsResponse>;\n  }\n\n  /**\n   * Returns a collection of machine groups this machine belongs to during the specified time\n   * interval.\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineName Machine resource name.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.MachinesListMachineGroupMembershipResponse>\n   */\n  listMachineGroupMembership(resourceGroupName: string, workspaceName: string, machineName: string, options?: Models.MachinesListMachineGroupMembershipOptionalParams): Promise<Models.MachinesListMachineGroupMembershipResponse>;\n  /**\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineName Machine resource name.\n   * @param callback The callback\n   */\n  listMachineGroupMembership(resourceGroupName: string, workspaceName: string, machineName: string, callback: msRest.ServiceCallback<Models.MachineGroupCollection>): void;\n  /**\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineName Machine resource name.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listMachineGroupMembership(resourceGroupName: string, workspaceName: string, machineName: string, options: Models.MachinesListMachineGroupMembershipOptionalParams, callback: msRest.ServiceCallback<Models.MachineGroupCollection>): void;\n  listMachineGroupMembership(resourceGroupName: string, workspaceName: string, machineName: string, options?: Models.MachinesListMachineGroupMembershipOptionalParams | msRest.ServiceCallback<Models.MachineGroupCollection>, callback?: msRest.ServiceCallback<Models.MachineGroupCollection>): Promise<Models.MachinesListMachineGroupMembershipResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        machineName,\n        options\n      },\n      listMachineGroupMembershipOperationSpec,\n      callback) as Promise<Models.MachinesListMachineGroupMembershipResponse>;\n  }\n\n  /**\n   * Returns a collection of machines matching the specified conditions.  The returned collection\n   * represents either machines that are active/live during the specified interval  of time\n   * (`live=true` and `startTime`/`endTime` are specified) or that are known to have existed at or\n   * some time prior to the specified point in time (`live=false` and `timestamp` is specified).\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.MachinesListByWorkspaceNextResponse>\n   */\n  listByWorkspaceNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.MachinesListByWorkspaceNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listByWorkspaceNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.MachineCollection>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listByWorkspaceNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.MachineCollection>): void;\n  listByWorkspaceNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.MachineCollection>, callback?: msRest.ServiceCallback<Models.MachineCollection>): Promise<Models.MachinesListByWorkspaceNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listByWorkspaceNextOperationSpec,\n      callback) as Promise<Models.MachinesListByWorkspaceNextResponse>;\n  }\n\n  /**\n   * Returns a collection of connections terminating or originating at the specified machine\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.MachinesListConnectionsNextResponse>\n   */\n  listConnectionsNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.MachinesListConnectionsNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listConnectionsNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ConnectionCollection>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listConnectionsNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ConnectionCollection>): void;\n  listConnectionsNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ConnectionCollection>, callback?: msRest.ServiceCallback<Models.ConnectionCollection>): Promise<Models.MachinesListConnectionsNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listConnectionsNextOperationSpec,\n      callback) as Promise<Models.MachinesListConnectionsNextResponse>;\n  }\n\n  /**\n   * Returns a collection of processes on the specified machine matching the specified conditions.\n   * The returned collection represents either processes that are active/live during the specified\n   * interval  of time (`live=true` and `startTime`/`endTime` are specified) or that are known to\n   * have existed at or  some time prior to the specified point in time (`live=false` and `timestamp`\n   * is specified).\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.MachinesListProcessesNextResponse>\n   */\n  listProcessesNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.MachinesListProcessesNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listProcessesNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ProcessCollection>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listProcessesNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ProcessCollection>): void;\n  listProcessesNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ProcessCollection>, callback?: msRest.ServiceCallback<Models.ProcessCollection>): Promise<Models.MachinesListProcessesNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listProcessesNextOperationSpec,\n      callback) as Promise<Models.MachinesListProcessesNextResponse>;\n  }\n\n  /**\n   * Returns a collection of live ports on the specified machine during the specified time interval.\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.MachinesListPortsNextResponse>\n   */\n  listPortsNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.MachinesListPortsNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listPortsNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.PortCollection>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listPortsNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PortCollection>): void;\n  listPortsNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.PortCollection>, callback?: msRest.ServiceCallback<Models.PortCollection>): Promise<Models.MachinesListPortsNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listPortsNextOperationSpec,\n      callback) as Promise<Models.MachinesListPortsNextResponse>;\n  }\n\n  /**\n   * Returns a collection of machine groups this machine belongs to during the specified time\n   * interval.\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.MachinesListMachineGroupMembershipNextResponse>\n   */\n  listMachineGroupMembershipNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.MachinesListMachineGroupMembershipNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listMachineGroupMembershipNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.MachineGroupCollection>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listMachineGroupMembershipNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.MachineGroupCollection>): void;\n  listMachineGroupMembershipNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.MachineGroupCollection>, callback?: msRest.ServiceCallback<Models.MachineGroupCollection>): Promise<Models.MachinesListMachineGroupMembershipNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listMachineGroupMembershipNextOperationSpec,\n      callback) as Promise<Models.MachinesListMachineGroupMembershipNextResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst listByWorkspaceOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.live,\n    Parameters.startTime,\n    Parameters.endTime,\n    Parameters.timestamp,\n    Parameters.top\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.MachineCollection\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst getOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines/{machineName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.machineName\n  ],\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.timestamp\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.Machine\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst getLivenessOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines/{machineName}/liveness\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.machineName\n  ],\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.startTime,\n    Parameters.endTime\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.Liveness\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst listConnectionsOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines/{machineName}/connections\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.machineName\n  ],\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.startTime,\n    Parameters.endTime\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConnectionCollection\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst listProcessesOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines/{machineName}/processes\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.machineName\n  ],\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.live,\n    Parameters.startTime,\n    Parameters.endTime,\n    Parameters.timestamp\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProcessCollection\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst listPortsOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines/{machineName}/ports\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.machineName\n  ],\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.startTime,\n    Parameters.endTime\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.PortCollection\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst listMachineGroupMembershipOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines/{machineName}/machineGroups\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.machineName\n  ],\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.startTime,\n    Parameters.endTime\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.MachineGroupCollection\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst listByWorkspaceNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.MachineCollection\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst listConnectionsNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConnectionCollection\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst listProcessesNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProcessCollection\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst listPortsNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.PortCollection\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst listMachineGroupMembershipNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.MachineGroupCollection\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  discriminators,\n  Acceptor,\n  AgentConfiguration,\n  AzureCloudServiceConfiguration,\n  AzureHostingConfiguration,\n  AzureProcessHostingConfiguration,\n  AzureServiceFabricClusterConfiguration,\n  AzureVmScaleSetConfiguration,\n  BaseResource,\n  ClientGroup,\n  ClientGroupMember,\n  ClientGroupReference,\n  Connection,\n  ConnectionCollection,\n  CoreResource,\n  ErrorModel,\n  ErrorResponse,\n  HostingConfiguration,\n  HypervisorConfiguration,\n  ImageConfiguration,\n  Ipv4NetworkInterface,\n  Ipv6NetworkInterface,\n  Liveness,\n  Machine,\n  MachineCountsByOperatingSystem,\n  MachineGroup,\n  MachineReference,\n  MachineReferenceWithHints,\n  MachineResourcesConfiguration,\n  MachinesSummary,\n  NetworkConfiguration,\n  OperatingSystemConfiguration,\n  Port,\n  PortCollection,\n  PortReference,\n  Process,\n  ProcessDetails,\n  ProcessHostedService,\n  ProcessHostingConfiguration,\n  ProcessReference,\n  ProcessUser,\n  Relationship,\n  Resource,\n  ResourceReference,\n  Summary,\n  Timezone,\n  VirtualMachineConfiguration\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/processesMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ServicemapManagementClientContext } from \"../servicemapManagementClientContext\";\n\n/** Class representing a Processes. */\nexport class Processes {\n  private readonly client: ServicemapManagementClientContext;\n\n  /**\n   * Create a Processes.\n   * @param {ServicemapManagementClientContext} client Reference to the service client.\n   */\n  constructor(client: ServicemapManagementClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Returns the specified process.\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineName Machine resource name.\n   * @param processName Process resource name.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ProcessesGetResponse>\n   */\n  get(resourceGroupName: string, workspaceName: string, machineName: string, processName: string, options?: Models.ProcessesGetOptionalParams): Promise<Models.ProcessesGetResponse>;\n  /**\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineName Machine resource name.\n   * @param processName Process resource name.\n   * @param callback The callback\n   */\n  get(resourceGroupName: string, workspaceName: string, machineName: string, processName: string, callback: msRest.ServiceCallback<Models.Process>): void;\n  /**\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineName Machine resource name.\n   * @param processName Process resource name.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  get(resourceGroupName: string, workspaceName: string, machineName: string, processName: string, options: Models.ProcessesGetOptionalParams, callback: msRest.ServiceCallback<Models.Process>): void;\n  get(resourceGroupName: string, workspaceName: string, machineName: string, processName: string, options?: Models.ProcessesGetOptionalParams | msRest.ServiceCallback<Models.Process>, callback?: msRest.ServiceCallback<Models.Process>): Promise<Models.ProcessesGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        machineName,\n        processName,\n        options\n      },\n      getOperationSpec,\n      callback) as Promise<Models.ProcessesGetResponse>;\n  }\n\n  /**\n   * Obtains the liveness status of the process during the specified time interval.\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineName Machine resource name.\n   * @param processName Process resource name.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ProcessesGetLivenessResponse>\n   */\n  getLiveness(resourceGroupName: string, workspaceName: string, machineName: string, processName: string, options?: Models.ProcessesGetLivenessOptionalParams): Promise<Models.ProcessesGetLivenessResponse>;\n  /**\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineName Machine resource name.\n   * @param processName Process resource name.\n   * @param callback The callback\n   */\n  getLiveness(resourceGroupName: string, workspaceName: string, machineName: string, processName: string, callback: msRest.ServiceCallback<Models.Liveness>): void;\n  /**\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineName Machine resource name.\n   * @param processName Process resource name.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getLiveness(resourceGroupName: string, workspaceName: string, machineName: string, processName: string, options: Models.ProcessesGetLivenessOptionalParams, callback: msRest.ServiceCallback<Models.Liveness>): void;\n  getLiveness(resourceGroupName: string, workspaceName: string, machineName: string, processName: string, options?: Models.ProcessesGetLivenessOptionalParams | msRest.ServiceCallback<Models.Liveness>, callback?: msRest.ServiceCallback<Models.Liveness>): Promise<Models.ProcessesGetLivenessResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        machineName,\n        processName,\n        options\n      },\n      getLivenessOperationSpec,\n      callback) as Promise<Models.ProcessesGetLivenessResponse>;\n  }\n\n  /**\n   * Returns a collection of ports on which this process is accepting\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineName Machine resource name.\n   * @param processName Process resource name.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ProcessesListAcceptingPortsResponse>\n   */\n  listAcceptingPorts(resourceGroupName: string, workspaceName: string, machineName: string, processName: string, options?: Models.ProcessesListAcceptingPortsOptionalParams): Promise<Models.ProcessesListAcceptingPortsResponse>;\n  /**\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineName Machine resource name.\n   * @param processName Process resource name.\n   * @param callback The callback\n   */\n  listAcceptingPorts(resourceGroupName: string, workspaceName: string, machineName: string, processName: string, callback: msRest.ServiceCallback<Models.PortCollection>): void;\n  /**\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineName Machine resource name.\n   * @param processName Process resource name.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listAcceptingPorts(resourceGroupName: string, workspaceName: string, machineName: string, processName: string, options: Models.ProcessesListAcceptingPortsOptionalParams, callback: msRest.ServiceCallback<Models.PortCollection>): void;\n  listAcceptingPorts(resourceGroupName: string, workspaceName: string, machineName: string, processName: string, options?: Models.ProcessesListAcceptingPortsOptionalParams | msRest.ServiceCallback<Models.PortCollection>, callback?: msRest.ServiceCallback<Models.PortCollection>): Promise<Models.ProcessesListAcceptingPortsResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        machineName,\n        processName,\n        options\n      },\n      listAcceptingPortsOperationSpec,\n      callback) as Promise<Models.ProcessesListAcceptingPortsResponse>;\n  }\n\n  /**\n   * Returns a collection of connections terminating or originating at the specified process\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineName Machine resource name.\n   * @param processName Process resource name.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ProcessesListConnectionsResponse>\n   */\n  listConnections(resourceGroupName: string, workspaceName: string, machineName: string, processName: string, options?: Models.ProcessesListConnectionsOptionalParams): Promise<Models.ProcessesListConnectionsResponse>;\n  /**\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineName Machine resource name.\n   * @param processName Process resource name.\n   * @param callback The callback\n   */\n  listConnections(resourceGroupName: string, workspaceName: string, machineName: string, processName: string, callback: msRest.ServiceCallback<Models.ConnectionCollection>): void;\n  /**\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineName Machine resource name.\n   * @param processName Process resource name.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listConnections(resourceGroupName: string, workspaceName: string, machineName: string, processName: string, options: Models.ProcessesListConnectionsOptionalParams, callback: msRest.ServiceCallback<Models.ConnectionCollection>): void;\n  listConnections(resourceGroupName: string, workspaceName: string, machineName: string, processName: string, options?: Models.ProcessesListConnectionsOptionalParams | msRest.ServiceCallback<Models.ConnectionCollection>, callback?: msRest.ServiceCallback<Models.ConnectionCollection>): Promise<Models.ProcessesListConnectionsResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        machineName,\n        processName,\n        options\n      },\n      listConnectionsOperationSpec,\n      callback) as Promise<Models.ProcessesListConnectionsResponse>;\n  }\n\n  /**\n   * Returns a collection of ports on which this process is accepting\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ProcessesListAcceptingPortsNextResponse>\n   */\n  listAcceptingPortsNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ProcessesListAcceptingPortsNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listAcceptingPortsNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.PortCollection>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listAcceptingPortsNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PortCollection>): void;\n  listAcceptingPortsNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.PortCollection>, callback?: msRest.ServiceCallback<Models.PortCollection>): Promise<Models.ProcessesListAcceptingPortsNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listAcceptingPortsNextOperationSpec,\n      callback) as Promise<Models.ProcessesListAcceptingPortsNextResponse>;\n  }\n\n  /**\n   * Returns a collection of connections terminating or originating at the specified process\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ProcessesListConnectionsNextResponse>\n   */\n  listConnectionsNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ProcessesListConnectionsNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listConnectionsNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ConnectionCollection>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listConnectionsNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ConnectionCollection>): void;\n  listConnectionsNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ConnectionCollection>, callback?: msRest.ServiceCallback<Models.ConnectionCollection>): Promise<Models.ProcessesListConnectionsNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listConnectionsNextOperationSpec,\n      callback) as Promise<Models.ProcessesListConnectionsNextResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst getOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines/{machineName}/processes/{processName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.machineName,\n    Parameters.processName\n  ],\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.timestamp\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.Process\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst getLivenessOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines/{machineName}/processes/{processName}/liveness\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.machineName,\n    Parameters.processName\n  ],\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.startTime,\n    Parameters.endTime\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.Liveness\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst listAcceptingPortsOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines/{machineName}/processes/{processName}/acceptingPorts\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.machineName,\n    Parameters.processName\n  ],\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.startTime,\n    Parameters.endTime\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.PortCollection\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst listConnectionsOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines/{machineName}/processes/{processName}/connections\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.machineName,\n    Parameters.processName\n  ],\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.startTime,\n    Parameters.endTime\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConnectionCollection\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst listAcceptingPortsNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.PortCollection\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst listConnectionsNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConnectionCollection\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  discriminators,\n  Acceptor,\n  AgentConfiguration,\n  AzureCloudServiceConfiguration,\n  AzureHostingConfiguration,\n  AzureProcessHostingConfiguration,\n  AzureServiceFabricClusterConfiguration,\n  AzureVmScaleSetConfiguration,\n  BaseResource,\n  ClientGroup,\n  ClientGroupMember,\n  ClientGroupReference,\n  Connection,\n  ConnectionCollection,\n  CoreResource,\n  ErrorModel,\n  ErrorResponse,\n  HostingConfiguration,\n  HypervisorConfiguration,\n  ImageConfiguration,\n  Ipv4NetworkInterface,\n  Ipv6NetworkInterface,\n  Liveness,\n  Machine,\n  MachineCountsByOperatingSystem,\n  MachineGroup,\n  MachineReference,\n  MachineReferenceWithHints,\n  MachineResourcesConfiguration,\n  MachinesSummary,\n  NetworkConfiguration,\n  OperatingSystemConfiguration,\n  Port,\n  PortReference,\n  Process,\n  ProcessCollection,\n  ProcessDetails,\n  ProcessHostedService,\n  ProcessHostingConfiguration,\n  ProcessReference,\n  ProcessUser,\n  Relationship,\n  Resource,\n  ResourceReference,\n  Summary,\n  Timezone,\n  VirtualMachineConfiguration\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/portsMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ServicemapManagementClientContext } from \"../servicemapManagementClientContext\";\n\n/** Class representing a Ports. */\nexport class Ports {\n  private readonly client: ServicemapManagementClientContext;\n\n  /**\n   * Create a Ports.\n   * @param {ServicemapManagementClientContext} client Reference to the service client.\n   */\n  constructor(client: ServicemapManagementClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Returns the specified port. The port must be live during the specified time interval. If the\n   * port is not live during the interval, status 404 (Not Found) is returned.\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineName Machine resource name.\n   * @param portName Port resource name.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PortsGetResponse>\n   */\n  get(resourceGroupName: string, workspaceName: string, machineName: string, portName: string, options?: Models.PortsGetOptionalParams): Promise<Models.PortsGetResponse>;\n  /**\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineName Machine resource name.\n   * @param portName Port resource name.\n   * @param callback The callback\n   */\n  get(resourceGroupName: string, workspaceName: string, machineName: string, portName: string, callback: msRest.ServiceCallback<Models.Port>): void;\n  /**\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineName Machine resource name.\n   * @param portName Port resource name.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  get(resourceGroupName: string, workspaceName: string, machineName: string, portName: string, options: Models.PortsGetOptionalParams, callback: msRest.ServiceCallback<Models.Port>): void;\n  get(resourceGroupName: string, workspaceName: string, machineName: string, portName: string, options?: Models.PortsGetOptionalParams | msRest.ServiceCallback<Models.Port>, callback?: msRest.ServiceCallback<Models.Port>): Promise<Models.PortsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        machineName,\n        portName,\n        options\n      },\n      getOperationSpec,\n      callback) as Promise<Models.PortsGetResponse>;\n  }\n\n  /**\n   * Obtains the liveness status of the port during the specified time interval.\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineName Machine resource name.\n   * @param portName Port resource name.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PortsGetLivenessResponse>\n   */\n  getLiveness(resourceGroupName: string, workspaceName: string, machineName: string, portName: string, options?: Models.PortsGetLivenessOptionalParams): Promise<Models.PortsGetLivenessResponse>;\n  /**\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineName Machine resource name.\n   * @param portName Port resource name.\n   * @param callback The callback\n   */\n  getLiveness(resourceGroupName: string, workspaceName: string, machineName: string, portName: string, callback: msRest.ServiceCallback<Models.Liveness>): void;\n  /**\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineName Machine resource name.\n   * @param portName Port resource name.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getLiveness(resourceGroupName: string, workspaceName: string, machineName: string, portName: string, options: Models.PortsGetLivenessOptionalParams, callback: msRest.ServiceCallback<Models.Liveness>): void;\n  getLiveness(resourceGroupName: string, workspaceName: string, machineName: string, portName: string, options?: Models.PortsGetLivenessOptionalParams | msRest.ServiceCallback<Models.Liveness>, callback?: msRest.ServiceCallback<Models.Liveness>): Promise<Models.PortsGetLivenessResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        machineName,\n        portName,\n        options\n      },\n      getLivenessOperationSpec,\n      callback) as Promise<Models.PortsGetLivenessResponse>;\n  }\n\n  /**\n   * Returns a collection of processes accepting on the specified port\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineName Machine resource name.\n   * @param portName Port resource name.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PortsListAcceptingProcessesResponse>\n   */\n  listAcceptingProcesses(resourceGroupName: string, workspaceName: string, machineName: string, portName: string, options?: Models.PortsListAcceptingProcessesOptionalParams): Promise<Models.PortsListAcceptingProcessesResponse>;\n  /**\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineName Machine resource name.\n   * @param portName Port resource name.\n   * @param callback The callback\n   */\n  listAcceptingProcesses(resourceGroupName: string, workspaceName: string, machineName: string, portName: string, callback: msRest.ServiceCallback<Models.ProcessCollection>): void;\n  /**\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineName Machine resource name.\n   * @param portName Port resource name.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listAcceptingProcesses(resourceGroupName: string, workspaceName: string, machineName: string, portName: string, options: Models.PortsListAcceptingProcessesOptionalParams, callback: msRest.ServiceCallback<Models.ProcessCollection>): void;\n  listAcceptingProcesses(resourceGroupName: string, workspaceName: string, machineName: string, portName: string, options?: Models.PortsListAcceptingProcessesOptionalParams | msRest.ServiceCallback<Models.ProcessCollection>, callback?: msRest.ServiceCallback<Models.ProcessCollection>): Promise<Models.PortsListAcceptingProcessesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        machineName,\n        portName,\n        options\n      },\n      listAcceptingProcessesOperationSpec,\n      callback) as Promise<Models.PortsListAcceptingProcessesResponse>;\n  }\n\n  /**\n   * Returns a collection of connections established via the specified port.\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineName Machine resource name.\n   * @param portName Port resource name.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PortsListConnectionsResponse>\n   */\n  listConnections(resourceGroupName: string, workspaceName: string, machineName: string, portName: string, options?: Models.PortsListConnectionsOptionalParams): Promise<Models.PortsListConnectionsResponse>;\n  /**\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineName Machine resource name.\n   * @param portName Port resource name.\n   * @param callback The callback\n   */\n  listConnections(resourceGroupName: string, workspaceName: string, machineName: string, portName: string, callback: msRest.ServiceCallback<Models.ConnectionCollection>): void;\n  /**\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineName Machine resource name.\n   * @param portName Port resource name.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listConnections(resourceGroupName: string, workspaceName: string, machineName: string, portName: string, options: Models.PortsListConnectionsOptionalParams, callback: msRest.ServiceCallback<Models.ConnectionCollection>): void;\n  listConnections(resourceGroupName: string, workspaceName: string, machineName: string, portName: string, options?: Models.PortsListConnectionsOptionalParams | msRest.ServiceCallback<Models.ConnectionCollection>, callback?: msRest.ServiceCallback<Models.ConnectionCollection>): Promise<Models.PortsListConnectionsResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        machineName,\n        portName,\n        options\n      },\n      listConnectionsOperationSpec,\n      callback) as Promise<Models.PortsListConnectionsResponse>;\n  }\n\n  /**\n   * Returns a collection of processes accepting on the specified port\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PortsListAcceptingProcessesNextResponse>\n   */\n  listAcceptingProcessesNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.PortsListAcceptingProcessesNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listAcceptingProcessesNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ProcessCollection>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listAcceptingProcessesNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ProcessCollection>): void;\n  listAcceptingProcessesNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ProcessCollection>, callback?: msRest.ServiceCallback<Models.ProcessCollection>): Promise<Models.PortsListAcceptingProcessesNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listAcceptingProcessesNextOperationSpec,\n      callback) as Promise<Models.PortsListAcceptingProcessesNextResponse>;\n  }\n\n  /**\n   * Returns a collection of connections established via the specified port.\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PortsListConnectionsNextResponse>\n   */\n  listConnectionsNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.PortsListConnectionsNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listConnectionsNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ConnectionCollection>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listConnectionsNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ConnectionCollection>): void;\n  listConnectionsNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ConnectionCollection>, callback?: msRest.ServiceCallback<Models.ConnectionCollection>): Promise<Models.PortsListConnectionsNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listConnectionsNextOperationSpec,\n      callback) as Promise<Models.PortsListConnectionsNextResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst getOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines/{machineName}/ports/{portName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.machineName,\n    Parameters.portName\n  ],\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.startTime,\n    Parameters.endTime\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.Port\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst getLivenessOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines/{machineName}/ports/{portName}/liveness\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.machineName,\n    Parameters.portName\n  ],\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.startTime,\n    Parameters.endTime\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.Liveness\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst listAcceptingProcessesOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines/{machineName}/ports/{portName}/acceptingProcesses\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.machineName,\n    Parameters.portName\n  ],\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.startTime,\n    Parameters.endTime\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProcessCollection\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst listConnectionsOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machines/{machineName}/ports/{portName}/connections\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.machineName,\n    Parameters.portName\n  ],\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.startTime,\n    Parameters.endTime\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConnectionCollection\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst listAcceptingProcessesNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProcessCollection\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst listConnectionsNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConnectionCollection\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  discriminators,\n  Acceptor,\n  AgentConfiguration,\n  AzureCloudServiceConfiguration,\n  AzureHostingConfiguration,\n  AzureProcessHostingConfiguration,\n  AzureServiceFabricClusterConfiguration,\n  AzureVmScaleSetConfiguration,\n  BaseResource,\n  ClientGroup,\n  ClientGroupMember,\n  ClientGroupMembersCollection,\n  ClientGroupMembersCount,\n  ClientGroupReference,\n  Connection,\n  CoreResource,\n  ErrorModel,\n  ErrorResponse,\n  HostingConfiguration,\n  HypervisorConfiguration,\n  ImageConfiguration,\n  Ipv4NetworkInterface,\n  Ipv6NetworkInterface,\n  Machine,\n  MachineCountsByOperatingSystem,\n  MachineGroup,\n  MachineReference,\n  MachineReferenceWithHints,\n  MachineResourcesConfiguration,\n  MachinesSummary,\n  NetworkConfiguration,\n  OperatingSystemConfiguration,\n  Port,\n  PortReference,\n  Process,\n  ProcessDetails,\n  ProcessHostedService,\n  ProcessHostingConfiguration,\n  ProcessReference,\n  ProcessUser,\n  Relationship,\n  Resource,\n  ResourceReference,\n  Summary,\n  Timezone,\n  VirtualMachineConfiguration\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/clientGroupsMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ServicemapManagementClientContext } from \"../servicemapManagementClientContext\";\n\n/** Class representing a ClientGroups. */\nexport class ClientGroups {\n  private readonly client: ServicemapManagementClientContext;\n\n  /**\n   * Create a ClientGroups.\n   * @param {ServicemapManagementClientContext} client Reference to the service client.\n   */\n  constructor(client: ServicemapManagementClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Retrieves the specified client group\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param clientGroupName Client Group resource name.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ClientGroupsGetResponse>\n   */\n  get(resourceGroupName: string, workspaceName: string, clientGroupName: string, options?: Models.ClientGroupsGetOptionalParams): Promise<Models.ClientGroupsGetResponse>;\n  /**\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param clientGroupName Client Group resource name.\n   * @param callback The callback\n   */\n  get(resourceGroupName: string, workspaceName: string, clientGroupName: string, callback: msRest.ServiceCallback<Models.ClientGroup>): void;\n  /**\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param clientGroupName Client Group resource name.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  get(resourceGroupName: string, workspaceName: string, clientGroupName: string, options: Models.ClientGroupsGetOptionalParams, callback: msRest.ServiceCallback<Models.ClientGroup>): void;\n  get(resourceGroupName: string, workspaceName: string, clientGroupName: string, options?: Models.ClientGroupsGetOptionalParams | msRest.ServiceCallback<Models.ClientGroup>, callback?: msRest.ServiceCallback<Models.ClientGroup>): Promise<Models.ClientGroupsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        clientGroupName,\n        options\n      },\n      getOperationSpec,\n      callback) as Promise<Models.ClientGroupsGetResponse>;\n  }\n\n  /**\n   * Returns the approximate number of members in the client group.\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param clientGroupName Client Group resource name.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ClientGroupsGetMembersCountResponse>\n   */\n  getMembersCount(resourceGroupName: string, workspaceName: string, clientGroupName: string, options?: Models.ClientGroupsGetMembersCountOptionalParams): Promise<Models.ClientGroupsGetMembersCountResponse>;\n  /**\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param clientGroupName Client Group resource name.\n   * @param callback The callback\n   */\n  getMembersCount(resourceGroupName: string, workspaceName: string, clientGroupName: string, callback: msRest.ServiceCallback<Models.ClientGroupMembersCount>): void;\n  /**\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param clientGroupName Client Group resource name.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getMembersCount(resourceGroupName: string, workspaceName: string, clientGroupName: string, options: Models.ClientGroupsGetMembersCountOptionalParams, callback: msRest.ServiceCallback<Models.ClientGroupMembersCount>): void;\n  getMembersCount(resourceGroupName: string, workspaceName: string, clientGroupName: string, options?: Models.ClientGroupsGetMembersCountOptionalParams | msRest.ServiceCallback<Models.ClientGroupMembersCount>, callback?: msRest.ServiceCallback<Models.ClientGroupMembersCount>): Promise<Models.ClientGroupsGetMembersCountResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        clientGroupName,\n        options\n      },\n      getMembersCountOperationSpec,\n      callback) as Promise<Models.ClientGroupsGetMembersCountResponse>;\n  }\n\n  /**\n   * Returns the members of the client group during the specified time interval.\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param clientGroupName Client Group resource name.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ClientGroupsListMembersResponse>\n   */\n  listMembers(resourceGroupName: string, workspaceName: string, clientGroupName: string, options?: Models.ClientGroupsListMembersOptionalParams): Promise<Models.ClientGroupsListMembersResponse>;\n  /**\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param clientGroupName Client Group resource name.\n   * @param callback The callback\n   */\n  listMembers(resourceGroupName: string, workspaceName: string, clientGroupName: string, callback: msRest.ServiceCallback<Models.ClientGroupMembersCollection>): void;\n  /**\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param clientGroupName Client Group resource name.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listMembers(resourceGroupName: string, workspaceName: string, clientGroupName: string, options: Models.ClientGroupsListMembersOptionalParams, callback: msRest.ServiceCallback<Models.ClientGroupMembersCollection>): void;\n  listMembers(resourceGroupName: string, workspaceName: string, clientGroupName: string, options?: Models.ClientGroupsListMembersOptionalParams | msRest.ServiceCallback<Models.ClientGroupMembersCollection>, callback?: msRest.ServiceCallback<Models.ClientGroupMembersCollection>): Promise<Models.ClientGroupsListMembersResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        clientGroupName,\n        options\n      },\n      listMembersOperationSpec,\n      callback) as Promise<Models.ClientGroupsListMembersResponse>;\n  }\n\n  /**\n   * Returns the members of the client group during the specified time interval.\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ClientGroupsListMembersNextResponse>\n   */\n  listMembersNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ClientGroupsListMembersNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listMembersNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ClientGroupMembersCollection>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listMembersNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ClientGroupMembersCollection>): void;\n  listMembersNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ClientGroupMembersCollection>, callback?: msRest.ServiceCallback<Models.ClientGroupMembersCollection>): Promise<Models.ClientGroupsListMembersNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listMembersNextOperationSpec,\n      callback) as Promise<Models.ClientGroupsListMembersNextResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst getOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/clientGroups/{clientGroupName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.clientGroupName\n  ],\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.startTime,\n    Parameters.endTime\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ClientGroup\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst getMembersCountOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/clientGroups/{clientGroupName}/membersCount\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.clientGroupName\n  ],\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.startTime,\n    Parameters.endTime\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ClientGroupMembersCount\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst listMembersOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/clientGroups/{clientGroupName}/members\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.clientGroupName\n  ],\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.startTime,\n    Parameters.endTime,\n    Parameters.top\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ClientGroupMembersCollection\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst listMembersNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ClientGroupMembersCollection\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  discriminators,\n  Acceptor,\n  AgentConfiguration,\n  AzureCloudServiceConfiguration,\n  AzureHostingConfiguration,\n  AzureProcessHostingConfiguration,\n  AzureServiceFabricClusterConfiguration,\n  AzureVmScaleSetConfiguration,\n  BaseResource,\n  ClientGroup,\n  ClientGroupMember,\n  ClientGroupReference,\n  Connection,\n  CoreResource,\n  ErrorModel,\n  ErrorResponse,\n  HostingConfiguration,\n  HypervisorConfiguration,\n  ImageConfiguration,\n  Ipv4NetworkInterface,\n  Ipv6NetworkInterface,\n  Machine,\n  MachineCountsByOperatingSystem,\n  MachineGroup,\n  MachineGroupMapRequest,\n  MachineListMapRequest,\n  MachineReference,\n  MachineReferenceWithHints,\n  MachineResourcesConfiguration,\n  MachinesSummary,\n  Map,\n  MapEdges,\n  MapNodes,\n  MapRequest,\n  MapResponse,\n  MultipleMachinesMapRequest,\n  NetworkConfiguration,\n  OperatingSystemConfiguration,\n  Port,\n  PortReference,\n  Process,\n  ProcessDetails,\n  ProcessHostedService,\n  ProcessHostingConfiguration,\n  ProcessReference,\n  ProcessUser,\n  Relationship,\n  Resource,\n  ResourceReference,\n  SingleMachineDependencyMapRequest,\n  Summary,\n  Timezone,\n  VirtualMachineConfiguration\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/mapsMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ServicemapManagementClientContext } from \"../servicemapManagementClientContext\";\n\n/** Class representing a Maps. */\nexport class Maps {\n  private readonly client: ServicemapManagementClientContext;\n\n  /**\n   * Create a Maps.\n   * @param {ServicemapManagementClientContext} client Reference to the service client.\n   */\n  constructor(client: ServicemapManagementClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Generates the specified map.\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param request Request options.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.MapsGenerateResponse>\n   */\n  generate(resourceGroupName: string, workspaceName: string, request: Models.MapRequestUnion, options?: msRest.RequestOptionsBase): Promise<Models.MapsGenerateResponse>;\n  /**\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param request Request options.\n   * @param callback The callback\n   */\n  generate(resourceGroupName: string, workspaceName: string, request: Models.MapRequestUnion, callback: msRest.ServiceCallback<Models.MapResponse>): void;\n  /**\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param request Request options.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  generate(resourceGroupName: string, workspaceName: string, request: Models.MapRequestUnion, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.MapResponse>): void;\n  generate(resourceGroupName: string, workspaceName: string, request: Models.MapRequestUnion, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.MapResponse>, callback?: msRest.ServiceCallback<Models.MapResponse>): Promise<Models.MapsGenerateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        request,\n        options\n      },\n      generateOperationSpec,\n      callback) as Promise<Models.MapsGenerateResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst generateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/generateMap\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"request\",\n    mapper: {\n      ...Mappers.MapRequest,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.MapResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  discriminators,\n  Acceptor,\n  AgentConfiguration,\n  AzureCloudServiceConfiguration,\n  AzureHostingConfiguration,\n  AzureProcessHostingConfiguration,\n  AzureServiceFabricClusterConfiguration,\n  AzureVmScaleSetConfiguration,\n  BaseResource,\n  ClientGroup,\n  ClientGroupMember,\n  ClientGroupReference,\n  Connection,\n  CoreResource,\n  ErrorModel,\n  ErrorResponse,\n  HostingConfiguration,\n  HypervisorConfiguration,\n  ImageConfiguration,\n  Ipv4NetworkInterface,\n  Ipv6NetworkInterface,\n  Machine,\n  MachineCountsByOperatingSystem,\n  MachineGroup,\n  MachineReference,\n  MachineReferenceWithHints,\n  MachineResourcesConfiguration,\n  MachinesSummary,\n  NetworkConfiguration,\n  OperatingSystemConfiguration,\n  Port,\n  PortReference,\n  Process,\n  ProcessDetails,\n  ProcessHostedService,\n  ProcessHostingConfiguration,\n  ProcessReference,\n  ProcessUser,\n  Relationship,\n  Resource,\n  ResourceReference,\n  Summary,\n  Timezone,\n  VirtualMachineConfiguration\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/summariesMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ServicemapManagementClientContext } from \"../servicemapManagementClientContext\";\n\n/** Class representing a Summaries. */\nexport class Summaries {\n  private readonly client: ServicemapManagementClientContext;\n\n  /**\n   * Create a Summaries.\n   * @param {ServicemapManagementClientContext} client Reference to the service client.\n   */\n  constructor(client: ServicemapManagementClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Returns summary information about the machines in the workspace.\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.SummariesGetMachinesResponse>\n   */\n  getMachines(resourceGroupName: string, workspaceName: string, options?: Models.SummariesGetMachinesOptionalParams): Promise<Models.SummariesGetMachinesResponse>;\n  /**\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param callback The callback\n   */\n  getMachines(resourceGroupName: string, workspaceName: string, callback: msRest.ServiceCallback<Models.MachinesSummary>): void;\n  /**\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getMachines(resourceGroupName: string, workspaceName: string, options: Models.SummariesGetMachinesOptionalParams, callback: msRest.ServiceCallback<Models.MachinesSummary>): void;\n  getMachines(resourceGroupName: string, workspaceName: string, options?: Models.SummariesGetMachinesOptionalParams | msRest.ServiceCallback<Models.MachinesSummary>, callback?: msRest.ServiceCallback<Models.MachinesSummary>): Promise<Models.SummariesGetMachinesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        options\n      },\n      getMachinesOperationSpec,\n      callback) as Promise<Models.SummariesGetMachinesResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst getMachinesOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/summaries/machines\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.startTime,\n    Parameters.endTime\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.MachinesSummary\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  discriminators,\n  Acceptor,\n  AgentConfiguration,\n  AzureCloudServiceConfiguration,\n  AzureHostingConfiguration,\n  AzureProcessHostingConfiguration,\n  AzureServiceFabricClusterConfiguration,\n  AzureVmScaleSetConfiguration,\n  BaseResource,\n  ClientGroup,\n  ClientGroupMember,\n  ClientGroupReference,\n  Connection,\n  CoreResource,\n  ErrorModel,\n  ErrorResponse,\n  HostingConfiguration,\n  HypervisorConfiguration,\n  ImageConfiguration,\n  Ipv4NetworkInterface,\n  Ipv6NetworkInterface,\n  Machine,\n  MachineCountsByOperatingSystem,\n  MachineGroup,\n  MachineGroupCollection,\n  MachineReference,\n  MachineReferenceWithHints,\n  MachineResourcesConfiguration,\n  MachinesSummary,\n  NetworkConfiguration,\n  OperatingSystemConfiguration,\n  Port,\n  PortReference,\n  Process,\n  ProcessDetails,\n  ProcessHostedService,\n  ProcessHostingConfiguration,\n  ProcessReference,\n  ProcessUser,\n  Relationship,\n  Resource,\n  ResourceReference,\n  Summary,\n  Timezone,\n  VirtualMachineConfiguration\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/machineGroupsMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ServicemapManagementClientContext } from \"../servicemapManagementClientContext\";\n\n/** Class representing a MachineGroups. */\nexport class MachineGroups {\n  private readonly client: ServicemapManagementClientContext;\n\n  /**\n   * Create a MachineGroups.\n   * @param {ServicemapManagementClientContext} client Reference to the service client.\n   */\n  constructor(client: ServicemapManagementClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Returns all machine groups during the specified time interval.\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.MachineGroupsListByWorkspaceResponse>\n   */\n  listByWorkspace(resourceGroupName: string, workspaceName: string, options?: Models.MachineGroupsListByWorkspaceOptionalParams): Promise<Models.MachineGroupsListByWorkspaceResponse>;\n  /**\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param callback The callback\n   */\n  listByWorkspace(resourceGroupName: string, workspaceName: string, callback: msRest.ServiceCallback<Models.MachineGroupCollection>): void;\n  /**\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listByWorkspace(resourceGroupName: string, workspaceName: string, options: Models.MachineGroupsListByWorkspaceOptionalParams, callback: msRest.ServiceCallback<Models.MachineGroupCollection>): void;\n  listByWorkspace(resourceGroupName: string, workspaceName: string, options?: Models.MachineGroupsListByWorkspaceOptionalParams | msRest.ServiceCallback<Models.MachineGroupCollection>, callback?: msRest.ServiceCallback<Models.MachineGroupCollection>): Promise<Models.MachineGroupsListByWorkspaceResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        options\n      },\n      listByWorkspaceOperationSpec,\n      callback) as Promise<Models.MachineGroupsListByWorkspaceResponse>;\n  }\n\n  /**\n   * Creates a new machine group.\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineGroup Machine Group resource to create.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.MachineGroupsCreateResponse>\n   */\n  create(resourceGroupName: string, workspaceName: string, machineGroup: Models.MachineGroup, options?: msRest.RequestOptionsBase): Promise<Models.MachineGroupsCreateResponse>;\n  /**\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineGroup Machine Group resource to create.\n   * @param callback The callback\n   */\n  create(resourceGroupName: string, workspaceName: string, machineGroup: Models.MachineGroup, callback: msRest.ServiceCallback<Models.MachineGroup>): void;\n  /**\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineGroup Machine Group resource to create.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  create(resourceGroupName: string, workspaceName: string, machineGroup: Models.MachineGroup, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.MachineGroup>): void;\n  create(resourceGroupName: string, workspaceName: string, machineGroup: Models.MachineGroup, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.MachineGroup>, callback?: msRest.ServiceCallback<Models.MachineGroup>): Promise<Models.MachineGroupsCreateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        machineGroup,\n        options\n      },\n      createOperationSpec,\n      callback) as Promise<Models.MachineGroupsCreateResponse>;\n  }\n\n  /**\n   * Returns the specified machine group as it existed during the specified time interval.\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineGroupName Machine Group resource name.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.MachineGroupsGetResponse>\n   */\n  get(resourceGroupName: string, workspaceName: string, machineGroupName: string, options?: Models.MachineGroupsGetOptionalParams): Promise<Models.MachineGroupsGetResponse>;\n  /**\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineGroupName Machine Group resource name.\n   * @param callback The callback\n   */\n  get(resourceGroupName: string, workspaceName: string, machineGroupName: string, callback: msRest.ServiceCallback<Models.MachineGroup>): void;\n  /**\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineGroupName Machine Group resource name.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  get(resourceGroupName: string, workspaceName: string, machineGroupName: string, options: Models.MachineGroupsGetOptionalParams, callback: msRest.ServiceCallback<Models.MachineGroup>): void;\n  get(resourceGroupName: string, workspaceName: string, machineGroupName: string, options?: Models.MachineGroupsGetOptionalParams | msRest.ServiceCallback<Models.MachineGroup>, callback?: msRest.ServiceCallback<Models.MachineGroup>): Promise<Models.MachineGroupsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        machineGroupName,\n        options\n      },\n      getOperationSpec,\n      callback) as Promise<Models.MachineGroupsGetResponse>;\n  }\n\n  /**\n   * Updates a machine group.\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineGroupName Machine Group resource name.\n   * @param machineGroup Machine Group resource to update.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.MachineGroupsUpdateResponse>\n   */\n  update(resourceGroupName: string, workspaceName: string, machineGroupName: string, machineGroup: Models.MachineGroup, options?: msRest.RequestOptionsBase): Promise<Models.MachineGroupsUpdateResponse>;\n  /**\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineGroupName Machine Group resource name.\n   * @param machineGroup Machine Group resource to update.\n   * @param callback The callback\n   */\n  update(resourceGroupName: string, workspaceName: string, machineGroupName: string, machineGroup: Models.MachineGroup, callback: msRest.ServiceCallback<Models.MachineGroup>): void;\n  /**\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineGroupName Machine Group resource name.\n   * @param machineGroup Machine Group resource to update.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  update(resourceGroupName: string, workspaceName: string, machineGroupName: string, machineGroup: Models.MachineGroup, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.MachineGroup>): void;\n  update(resourceGroupName: string, workspaceName: string, machineGroupName: string, machineGroup: Models.MachineGroup, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.MachineGroup>, callback?: msRest.ServiceCallback<Models.MachineGroup>): Promise<Models.MachineGroupsUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        machineGroupName,\n        machineGroup,\n        options\n      },\n      updateOperationSpec,\n      callback) as Promise<Models.MachineGroupsUpdateResponse>;\n  }\n\n  /**\n   * Deletes the specified Machine Group.\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineGroupName Machine Group resource name.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  deleteMethod(resourceGroupName: string, workspaceName: string, machineGroupName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;\n  /**\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineGroupName Machine Group resource name.\n   * @param callback The callback\n   */\n  deleteMethod(resourceGroupName: string, workspaceName: string, machineGroupName: string, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param resourceGroupName Resource group name within the specified subscriptionId.\n   * @param workspaceName OMS workspace containing the resources of interest.\n   * @param machineGroupName Machine Group resource name.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  deleteMethod(resourceGroupName: string, workspaceName: string, machineGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;\n  deleteMethod(resourceGroupName: string, workspaceName: string, machineGroupName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        machineGroupName,\n        options\n      },\n      deleteMethodOperationSpec,\n      callback);\n  }\n\n  /**\n   * Returns all machine groups during the specified time interval.\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.MachineGroupsListByWorkspaceNextResponse>\n   */\n  listByWorkspaceNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.MachineGroupsListByWorkspaceNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listByWorkspaceNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.MachineGroupCollection>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listByWorkspaceNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.MachineGroupCollection>): void;\n  listByWorkspaceNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.MachineGroupCollection>, callback?: msRest.ServiceCallback<Models.MachineGroupCollection>): Promise<Models.MachineGroupsListByWorkspaceNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listByWorkspaceNextOperationSpec,\n      callback) as Promise<Models.MachineGroupsListByWorkspaceNextResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst listByWorkspaceOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machineGroups\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.startTime,\n    Parameters.endTime\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.MachineGroupCollection\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst createOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machineGroups\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"machineGroup\",\n    mapper: {\n      ...Mappers.MachineGroup,\n      required: true\n    }\n  },\n  responses: {\n    201: {\n      bodyMapper: Mappers.MachineGroup\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst getOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machineGroups/{machineGroupName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.machineGroupName\n  ],\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.startTime,\n    Parameters.endTime\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.MachineGroup\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst updateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machineGroups/{machineGroupName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.machineGroupName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"machineGroup\",\n    mapper: {\n      ...Mappers.MachineGroup,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.MachineGroup\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst deleteMethodOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machineGroups/{machineGroupName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.machineGroupName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst listByWorkspaceNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.MachineGroupCollection\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nexport * from \"./machines\";\nexport * from \"./processes\";\nexport * from \"./ports\";\nexport * from \"./clientGroups\";\nexport * from \"./maps\";\nexport * from \"./summaries\";\nexport * from \"./machineGroups\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as Models from \"./models\";\nimport * as msRest from \"@azure/ms-rest-js\";\nimport { TokenCredential } from \"@azure/core-auth\";\nimport * as msRestAzure from \"@azure/ms-rest-azure-js\";\n\nconst packageName = \"@azure/arm-servicemap\";\nconst packageVersion = \"2.3.1\";\n\nexport class ServicemapManagementClientContext extends msRestAzure.AzureServiceClient {\n  credentials: msRest.ServiceClientCredentials | TokenCredential;\n  subscriptionId: string;\n  apiVersion?: string;\n\n  /**\n   * Initializes a new instance of the ServicemapManagementClient class.\n   * @param credentials Credentials needed for the client to connect to Azure. Credentials\n   * implementing the TokenCredential interface from the @azure/identity package are recommended. For\n   * more information about these credentials, see\n   * {@link https://www.npmjs.com/package/@azure/identity}. Credentials implementing the\n   * ServiceClientCredentials interface from the older packages @azure/ms-rest-nodeauth and\n   * @azure/ms-rest-browserauth are also supported.\n   * @param subscriptionId Azure subscription identifier.\n   * @param [options] The parameter options\n   */\n  constructor(credentials: msRest.ServiceClientCredentials | TokenCredential, subscriptionId: string, options?: Models.ServicemapManagementClientOptions) {\n    if (credentials == undefined) {\n      throw new Error('\\'credentials\\' cannot be null.');\n    }\n    if (subscriptionId == undefined) {\n      throw new Error('\\'subscriptionId\\' cannot be null.');\n    }\n\n    if (!options) {\n      options = {};\n    }\n    if (!options.userAgent) {\n      const defaultUserAgent = msRestAzure.getDefaultUserAgentValue();\n      options.userAgent = `${packageName}/${packageVersion} ${defaultUserAgent}`;\n    }\n\n    super(credentials, options);\n\n    this.apiVersion = '2015-11-01-preview';\n    this.acceptLanguage = 'en-US';\n    this.longRunningOperationRetryTimeout = 30;\n    this.baseUri = options.baseUri || this.baseUri || \"https://management.azure.com\";\n    this.requestContentType = \"application/json; charset=utf-8\";\n    this.credentials = credentials;\n    this.subscriptionId = subscriptionId;\n\n    if (options.acceptLanguage !== null && options.acceptLanguage !== undefined) {\n      this.acceptLanguage = options.acceptLanguage;\n    }\n    if (options.longRunningOperationRetryTimeout !== null && options.longRunningOperationRetryTimeout !== undefined) {\n      this.longRunningOperationRetryTimeout = options.longRunningOperationRetryTimeout;\n    }\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport { TokenCredential } from \"@azure/core-auth\";\nimport * as Models from \"./models\";\nimport * as Mappers from \"./models/mappers\";\nimport * as operations from \"./operations\";\nimport { ServicemapManagementClientContext } from \"./servicemapManagementClientContext\";\n\n\nclass ServicemapManagementClient extends ServicemapManagementClientContext {\n  // Operation groups\n  machines: operations.Machines;\n  processes: operations.Processes;\n  ports: operations.Ports;\n  clientGroups: operations.ClientGroups;\n  maps: operations.Maps;\n  summaries: operations.Summaries;\n  machineGroups: operations.MachineGroups;\n\n  /**\n   * Initializes a new instance of the ServicemapManagementClient class.\n   * @param credentials Credentials needed for the client to connect to Azure. Credentials\n   * implementing the TokenCredential interface from the @azure/identity package are recommended. For\n   * more information about these credentials, see\n   * {@link https://www.npmjs.com/package/@azure/identity}. Credentials implementing the\n   * ServiceClientCredentials interface from the older packages @azure/ms-rest-nodeauth and\n   * @azure/ms-rest-browserauth are also supported.\n   * @param subscriptionId Azure subscription identifier.\n   * @param [options] The parameter options\n   */\n  constructor(credentials: msRest.ServiceClientCredentials | TokenCredential, subscriptionId: string, options?: Models.ServicemapManagementClientOptions) {\n    super(credentials, subscriptionId, options);\n    this.machines = new operations.Machines(this);\n    this.processes = new operations.Processes(this);\n    this.ports = new operations.Ports(this);\n    this.clientGroups = new operations.ClientGroups(this);\n    this.maps = new operations.Maps(this);\n    this.summaries = new operations.Summaries(this);\n    this.machineGroups = new operations.MachineGroups(this);\n  }\n}\n\n// Operation Specifications\n\nexport {\n  ServicemapManagementClient,\n  ServicemapManagementClientContext,\n  Models as ServicemapManagementModels,\n  Mappers as ServicemapManagementMappers\n};\nexport * from \"./operations\";\n"],"names":["CloudErrorMapper","BaseResourceMapper","resourceGroupName","workspaceName","machineName","nextPageLink","msRest.Serializer","Parameters.subscriptionId","Parameters.resourceGroupName","Parameters.workspaceName","Parameters.apiVersion","Parameters.live","Parameters.startTime","Parameters.endTime","Parameters.timestamp","Parameters.top","Parameters.acceptLanguage","Mappers.MachineCollection","Mappers.ErrorResponse","Parameters.machineName","Mappers.Machine","Mappers.Liveness","Mappers.ConnectionCollection","Mappers.ProcessCollection","Mappers.PortCollection","Mappers.MachineGroupCollection","Parameters.nextPageLink","processName","getOperationSpec","getLivenessOperationSpec","listConnectionsOperationSpec","listConnectionsNextOperationSpec","serializer","Mappers","Parameters.processName","Mappers.Process","portName","Parameters.portName","Mappers.Port","clientGroupName","Parameters.clientGroupName","Mappers.ClientGroup","Mappers.ClientGroupMembersCount","Mappers.ClientGroupMembersCollection","Mappers.MapRequest","Mappers.MapResponse","Mappers.MachinesSummary","listByWorkspaceOperationSpec","machineGroupName","listByWorkspaceNextOperationSpec","Mappers.MachineGroup","Parameters.machineGroupName","msRestAzure.getDefaultUserAgentValue","msRestAzure.AzureServiceClient","operations.Machines","operations.Processes","operations.Ports","operations.ClientGroups","operations.Maps","operations.Summaries","operations.MachineGroups"],"mappings":"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"}