import * as coreAuth from '@azure/core-auth';
import * as coreClient from '@azure/core-client';
import { OperationState } from '@azure/core-lro';
import { PagedAsyncIterableIterator } from '@azure/core-paging';
import { SimplePollerLike } from '@azure/core-lro';

/** The abuse penalty. */
export declare interface AbusePenalty {
    /** The action of AbusePenalty. */
    action?: AbusePenaltyAction;
    /** The percentage of rate limit. */
    rateLimitPercentage?: number;
    /** The datetime of expiration of the AbusePenalty. */
    expiration?: Date;
}

/**
 * Defines values for AbusePenaltyAction. \
 * {@link KnownAbusePenaltyAction} can be used interchangeably with AbusePenaltyAction,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Throttle** \
 * **Block**
 */
export declare type AbusePenaltyAction = string;

/** Cognitive Services account is an Azure resource representing the provisioned account, it's type, location and SKU. */
export declare interface Account extends AzureEntityResource {
    /** The Kind of the resource. */
    kind?: string;
    /** The resource model definition representing SKU */
    sku?: Sku;
    /** Identity for the resource. */
    identity?: Identity;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
    /** Resource tags. */
    tags?: {
        [propertyName: string]: string;
    };
    /** The geo-location where the resource lives */
    location?: string;
    /** Properties of Cognitive Services account. */
    properties?: AccountProperties;
}

/** The list of cognitive services accounts operation response. */
export declare interface AccountListResult {
    /** The link used to get the next page of accounts. */
    nextLink?: string;
    /**
     * Gets the list of Cognitive Services accounts and their properties.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: Account[];
}

/** Cognitive Services account Model. */
export declare interface AccountModel extends DeploymentModel {
    /** Base Model Identifier. */
    baseModel?: DeploymentModel;
    /** If the model is default version. */
    isDefaultVersion?: boolean;
    /** The list of Model Sku. */
    skus?: ModelSku[];
    /** The max capacity. */
    maxCapacity?: number;
    /** The capabilities. */
    capabilities?: {
        [propertyName: string]: string;
    };
    /** The capabilities for finetune models. */
    finetuneCapabilities?: {
        [propertyName: string]: string;
    };
    /** Cognitive Services account ModelDeprecationInfo. */
    deprecation?: ModelDeprecationInfo;
    /** Model lifecycle status. */
    lifecycleStatus?: ModelLifecycleStatus;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
}

/** The list of cognitive services accounts operation response. */
export declare interface AccountModelListResult {
    /** The link used to get the next page of Model. */
    nextLink?: string;
    /** Gets the list of Cognitive Services accounts Model and their properties. */
    value?: AccountModel[];
}

/** Properties of Cognitive Services account. */
export declare interface AccountProperties {
    /**
     * Gets the status of the cognitive services account at the time the operation was called.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: ProvisioningState;
    /**
     * Endpoint of the created account.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly endpoint?: string;
    /**
     * The internal identifier (deprecated, do not use this property).
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly internalId?: string;
    /**
     * Gets the capabilities of the cognitive services account. Each item indicates the capability of a specific feature. The values are read-only and for reference only.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly capabilities?: SkuCapability[];
    /**
     * If the resource is migrated from an existing key.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly isMigrated?: boolean;
    /** Resource migration token. */
    migrationToken?: string;
    /**
     * Sku change info of account.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly skuChangeInfo?: SkuChangeInfo;
    /** Optional subdomain name used for token-based authentication. */
    customSubDomainName?: string;
    /** A collection of rules governing the accessibility from specific network locations. */
    networkAcls?: NetworkRuleSet;
    /** The encryption properties for this resource. */
    encryption?: Encryption;
    /** The storage accounts for this resource. */
    userOwnedStorage?: UserOwnedStorage[];
    /**
     * The private endpoint connection associated with the Cognitive Services account.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly privateEndpointConnections?: PrivateEndpointConnection[];
    /** Whether or not public endpoint access is allowed for this account. */
    publicNetworkAccess?: PublicNetworkAccess;
    /** The api properties for special APIs. */
    apiProperties?: ApiProperties;
    /**
     * Gets the date of cognitive services account creation.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly dateCreated?: string;
    /**
     * The call rate limit Cognitive Services account.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly callRateLimit?: CallRateLimit;
    /** The flag to enable dynamic throttling. */
    dynamicThrottlingEnabled?: boolean;
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly quotaLimit?: QuotaLimit;
    restrictOutboundNetworkAccess?: boolean;
    allowedFqdnList?: string[];
    disableLocalAuth?: boolean;
    /**
     * Dictionary of <string>
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly endpoints?: {
        [propertyName: string]: string;
    };
    restore?: boolean;
    /**
     * The deletion date, only available for deleted account.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly deletionDate?: string;
    /**
     * The scheduled purge date, only available for deleted account.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly scheduledPurgeDate?: string;
    /** The multiregion settings of Cognitive Services account. */
    locations?: MultiRegionSettings;
    /**
     * The commitment plan associations of Cognitive Services account.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly commitmentPlanAssociations?: CommitmentPlanAssociation[];
    /**
     * The abuse penalty.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly abusePenalty?: AbusePenalty;
}

/** Interface representing a Accounts. */
export declare interface Accounts {
    /**
     * Returns all the resources of a particular type belonging to a resource group
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: AccountsListByResourceGroupOptionalParams): PagedAsyncIterableIterator<Account>;
    /**
     * Returns all the resources of a particular type belonging to a subscription.
     * @param options The options parameters.
     */
    list(options?: AccountsListOptionalParams): PagedAsyncIterableIterator<Account>;
    /**
     * List available Models for the requested Cognitive Services account
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param options The options parameters.
     */
    listModels(resourceGroupName: string, accountName: string, options?: AccountsListModelsOptionalParams): PagedAsyncIterableIterator<AccountModel>;
    /**
     * Create Cognitive Services Account. Accounts is a resource group wide resource type. It holds the
     * keys for developer to access intelligent APIs. It's also the resource type for billing.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param account The parameters to provide for the created account.
     * @param options The options parameters.
     */
    beginCreate(resourceGroupName: string, accountName: string, account: Account, options?: AccountsCreateOptionalParams): Promise<SimplePollerLike<OperationState<AccountsCreateResponse>, AccountsCreateResponse>>;
    /**
     * Create Cognitive Services Account. Accounts is a resource group wide resource type. It holds the
     * keys for developer to access intelligent APIs. It's also the resource type for billing.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param account The parameters to provide for the created account.
     * @param options The options parameters.
     */
    beginCreateAndWait(resourceGroupName: string, accountName: string, account: Account, options?: AccountsCreateOptionalParams): Promise<AccountsCreateResponse>;
    /**
     * Updates a Cognitive Services account
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param account The parameters to provide for the created account.
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, accountName: string, account: Account, options?: AccountsUpdateOptionalParams): Promise<SimplePollerLike<OperationState<AccountsUpdateResponse>, AccountsUpdateResponse>>;
    /**
     * Updates a Cognitive Services account
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param account The parameters to provide for the created account.
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, accountName: string, account: Account, options?: AccountsUpdateOptionalParams): Promise<AccountsUpdateResponse>;
    /**
     * Deletes a Cognitive Services account from the resource group.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, accountName: string, options?: AccountsDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Deletes a Cognitive Services account from the resource group.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, accountName: string, options?: AccountsDeleteOptionalParams): Promise<void>;
    /**
     * Returns a Cognitive Services account specified by the parameters.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, accountName: string, options?: AccountsGetOptionalParams): Promise<AccountsGetResponse>;
    /**
     * Lists the account keys for the specified Cognitive Services account.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param options The options parameters.
     */
    listKeys(resourceGroupName: string, accountName: string, options?: AccountsListKeysOptionalParams): Promise<AccountsListKeysResponse>;
    /**
     * Regenerates the specified account key for the specified Cognitive Services account.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param keyName key name to generate (Key1|Key2)
     * @param options The options parameters.
     */
    regenerateKey(resourceGroupName: string, accountName: string, keyName: KeyName, options?: AccountsRegenerateKeyOptionalParams): Promise<AccountsRegenerateKeyResponse>;
    /**
     * List available SKUs for the requested Cognitive Services account
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param options The options parameters.
     */
    listSkus(resourceGroupName: string, accountName: string, options?: AccountsListSkusOptionalParams): Promise<AccountsListSkusResponse>;
    /**
     * Get usages for the requested Cognitive Services account
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param options The options parameters.
     */
    listUsages(resourceGroupName: string, accountName: string, options?: AccountsListUsagesOptionalParams): Promise<AccountsListUsagesResponse>;
}

/** Optional parameters. */
export declare interface AccountsCreateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the create operation. */
export declare type AccountsCreateResponse = Account;

/** Optional parameters. */
export declare interface AccountsDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface AccountsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type AccountsGetResponse = Account;

/** Cognitive Services resource type and SKU. */
export declare interface AccountSku {
    /** Resource Namespace and Type */
    resourceType?: string;
    /** The SKU of Cognitive Services account. */
    sku?: Sku;
}

/** The list of cognitive services accounts operation response. */
export declare interface AccountSkuListResult {
    /** Gets the list of Cognitive Services accounts and their properties. */
    value?: AccountSku[];
}

/** Optional parameters. */
export declare interface AccountsListByResourceGroupNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroupNext operation. */
export declare type AccountsListByResourceGroupNextResponse = AccountListResult;

/** Optional parameters. */
export declare interface AccountsListByResourceGroupOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroup operation. */
export declare type AccountsListByResourceGroupResponse = AccountListResult;

/** Optional parameters. */
export declare interface AccountsListKeysOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listKeys operation. */
export declare type AccountsListKeysResponse = ApiKeys;

/** Optional parameters. */
export declare interface AccountsListModelsNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listModelsNext operation. */
export declare type AccountsListModelsNextResponse = AccountModelListResult;

/** Optional parameters. */
export declare interface AccountsListModelsOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listModels operation. */
export declare type AccountsListModelsResponse = AccountModelListResult;

/** Optional parameters. */
export declare interface AccountsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type AccountsListNextResponse = AccountListResult;

/** Optional parameters. */
export declare interface AccountsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type AccountsListResponse = AccountListResult;

/** Optional parameters. */
export declare interface AccountsListSkusOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listSkus operation. */
export declare type AccountsListSkusResponse = AccountSkuListResult;

/** Optional parameters. */
export declare interface AccountsListUsagesOptionalParams extends coreClient.OperationOptions {
    /** An OData filter expression that describes a subset of usages to return. The supported parameter is name.value (name of the metric, can have an or of multiple names). */
    filter?: string;
}

/** Contains response data for the listUsages operation. */
export declare type AccountsListUsagesResponse = UsageListResult;

/** Optional parameters. */
export declare interface AccountsRegenerateKeyOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the regenerateKey operation. */
export declare type AccountsRegenerateKeyResponse = ApiKeys;

/** Optional parameters. */
export declare interface AccountsUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the update operation. */
export declare type AccountsUpdateResponse = Account;

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Internal**
 */
export declare type ActionType = string;

/** The access keys for the cognitive services account. */
export declare interface ApiKeys {
    /** Gets the value of key 1. */
    key1?: string;
    /** Gets the value of key 2. */
    key2?: string;
}

/** The api properties for special APIs. */
export declare interface ApiProperties {
    /** Describes unknown properties. The value of an unknown property can be of "any" type. */
    [property: string]: any;
    /** (QnAMaker Only) The runtime endpoint of QnAMaker. */
    qnaRuntimeEndpoint?: string;
    /** (QnAMaker Only) The Azure Search endpoint key of QnAMaker. */
    qnaAzureSearchEndpointKey?: string;
    /** (QnAMaker Only) The Azure Search endpoint id of QnAMaker. */
    qnaAzureSearchEndpointId?: string;
    /** (Bing Search Only) The flag to enable statistics of Bing Search. */
    statisticsEnabled?: boolean;
    /** (Personalization Only) The flag to enable statistics of Bing Search. */
    eventHubConnectionString?: string;
    /** (Personalization Only) The storage account connection string. */
    storageAccountConnectionString?: string;
    /** (Metrics Advisor Only) The Azure AD Client Id (Application Id). */
    aadClientId?: string;
    /** (Metrics Advisor Only) The Azure AD Tenant Id. */
    aadTenantId?: string;
    /** (Metrics Advisor Only) The super user of Metrics Advisor. */
    superUser?: string;
    /** (Metrics Advisor Only) The website name of Metrics Advisor. */
    websiteName?: string;
}

/** The resource model definition for an Azure Resource Manager resource with an etag. */
export declare interface AzureEntityResource extends Resource {
    /**
     * Resource Etag.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly etag?: string;
}

/** The call rate limit Cognitive Services account. */
export declare interface CallRateLimit {
    /** The count value of Call Rate Limit. */
    count?: number;
    /** The renewal period in seconds of Call Rate Limit. */
    renewalPeriod?: number;
    rules?: ThrottlingRule[];
}

/** The capacity configuration. */
export declare interface CapacityConfig {
    /** The minimum capacity. */
    minimum?: number;
    /** The maximum capacity. */
    maximum?: number;
    /** The minimal incremental between allowed values for capacity. */
    step?: number;
    /** The default capacity. */
    default?: number;
}

/** Optional parameters. */
export declare interface CheckDomainAvailabilityOptionalParams extends coreClient.OperationOptions {
    /** The Kind of the resource. */
    kind?: string;
}

/** Check Domain availability parameter. */
export declare interface CheckDomainAvailabilityParameter {
    /** The subdomain name to use. */
    subdomainName: string;
    /** The Type of the resource. */
    type: string;
    /** The Kind of the resource. */
    kind?: string;
}

/** Contains response data for the checkDomainAvailability operation. */
export declare type CheckDomainAvailabilityResponse = DomainAvailability;

/** Optional parameters. */
export declare interface CheckSkuAvailabilityOptionalParams extends coreClient.OperationOptions {
}

/** Check SKU availability parameter. */
export declare interface CheckSkuAvailabilityParameter {
    /** The SKU of the resource. */
    skus: string[];
    /** The Kind of the resource. */
    kind: string;
    /** The Type of the resource. */
    type: string;
}

/** Contains response data for the checkSkuAvailability operation. */
export declare type CheckSkuAvailabilityResponse = SkuAvailabilityListResult;

export declare class CognitiveServicesManagementClient extends coreClient.ServiceClient {
    $host: string;
    apiVersion: string;
    subscriptionId: string;
    /**
     * Initializes a new instance of the CognitiveServicesManagementClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId The ID of the target subscription.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: CognitiveServicesManagementClientOptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    /**
     * Check available SKUs.
     * @param location Resource location.
     * @param skus The SKU of the resource.
     * @param kind The Kind of the resource.
     * @param typeParam The Type of the resource.
     * @param options The options parameters.
     */
    checkSkuAvailability(location: string, skus: string[], kind: string, typeParam: string, options?: CheckSkuAvailabilityOptionalParams): Promise<CheckSkuAvailabilityResponse>;
    /**
     * Check whether a domain is available.
     * @param subdomainName The subdomain name to use.
     * @param typeParam The Type of the resource.
     * @param options The options parameters.
     */
    checkDomainAvailability(subdomainName: string, typeParam: string, options?: CheckDomainAvailabilityOptionalParams): Promise<CheckDomainAvailabilityResponse>;
    accounts: Accounts;
    deletedAccounts: DeletedAccounts;
    resourceSkus: ResourceSkus;
    usages: Usages;
    operations: Operations;
    commitmentTiers: CommitmentTiers;
    models: Models;
    privateEndpointConnections: PrivateEndpointConnections;
    privateLinkResources: PrivateLinkResources;
    deployments: Deployments;
    commitmentPlans: CommitmentPlans;
}

/** Optional parameters. */
export declare interface CognitiveServicesManagementClientOptionalParams extends coreClient.ServiceClientOptions {
    /** server parameter */
    $host?: string;
    /** Api Version */
    apiVersion?: string;
    /** Overrides client endpoint. */
    endpoint?: string;
}

/** Cognitive Services account commitment cost. */
export declare interface CommitmentCost {
    /** Commitment meter Id. */
    commitmentMeterId?: string;
    /** Overage meter Id. */
    overageMeterId?: string;
}

/** Cognitive Services account commitment period. */
export declare interface CommitmentPeriod {
    /** Commitment period commitment tier. */
    tier?: string;
    /** Commitment period commitment count. */
    count?: number;
    /**
     * Cognitive Services account commitment quota.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly quota?: CommitmentQuota;
    /**
     * Commitment period start date.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly startDate?: string;
    /**
     * Commitment period end date.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly endDate?: string;
}

/** Cognitive Services account commitment plan. */
export declare interface CommitmentPlan extends ProxyResource {
    /**
     * Metadata pertaining to creation and last modification of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
    /**
     * Resource Etag.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly etag?: string;
    /** The Kind of the resource. */
    kind?: string;
    /** The resource model definition representing SKU */
    sku?: Sku;
    /** Resource tags. */
    tags?: {
        [propertyName: string]: string;
    };
    /** The geo-location where the resource lives */
    location?: string;
    /** Properties of Cognitive Services account commitment plan. */
    properties?: CommitmentPlanProperties;
}

/** The commitment plan association. */
export declare interface CommitmentPlanAccountAssociation extends ProxyResource {
    /**
     * Metadata pertaining to creation and last modification of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
    /**
     * Resource Etag.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly etag?: string;
    /** The Azure resource id of the account. */
    accountId?: string;
}

/** The list of cognitive services Commitment Plan Account Association operation response. */
export declare interface CommitmentPlanAccountAssociationListResult {
    /** The link used to get the next page of Commitment Plan Account Association. */
    nextLink?: string;
    /**
     * Gets the list of Cognitive Services Commitment Plan Account Association and their properties.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: CommitmentPlanAccountAssociation[];
}

/** The commitment plan association. */
export declare interface CommitmentPlanAssociation {
    /** The Azure resource id of the commitment plan. */
    commitmentPlanId?: string;
    /** The location of of the commitment plan. */
    commitmentPlanLocation?: string;
}

/** The list of cognitive services accounts operation response. */
export declare interface CommitmentPlanListResult {
    /** The link used to get the next page of CommitmentPlan. */
    nextLink?: string;
    /**
     * Gets the list of Cognitive Services accounts CommitmentPlan and their properties.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: CommitmentPlan[];
}

/** Properties of Cognitive Services account commitment plan. */
export declare interface CommitmentPlanProperties {
    /**
     * Gets the status of the resource at the time the operation was called.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: CommitmentPlanProvisioningState;
    /** Commitment plan guid. */
    commitmentPlanGuid?: string;
    /** Account hosting model. */
    hostingModel?: HostingModel;
    /** Commitment plan type. */
    planType?: string;
    /** Cognitive Services account commitment period. */
    current?: CommitmentPeriod;
    /** AutoRenew commitment plan. */
    autoRenew?: boolean;
    /** Cognitive Services account commitment period. */
    next?: CommitmentPeriod;
    /**
     * Cognitive Services account commitment period.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly last?: CommitmentPeriod;
    /**
     * The list of ProvisioningIssue.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningIssues?: string[];
}

/**
 * Defines values for CommitmentPlanProvisioningState. \
 * {@link KnownCommitmentPlanProvisioningState} can be used interchangeably with CommitmentPlanProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Accepted** \
 * **Creating** \
 * **Deleting** \
 * **Moving** \
 * **Failed** \
 * **Succeeded** \
 * **Canceled**
 */
export declare type CommitmentPlanProvisioningState = string;

/** Interface representing a CommitmentPlans. */
export declare interface CommitmentPlans {
    /**
     * Gets the commitmentPlans associated with the Cognitive Services account.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, accountName: string, options?: CommitmentPlansListOptionalParams): PagedAsyncIterableIterator<CommitmentPlan>;
    /**
     * Returns all the resources of a particular type belonging to a resource group
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    listPlansByResourceGroup(resourceGroupName: string, options?: CommitmentPlansListPlansByResourceGroupOptionalParams): PagedAsyncIterableIterator<CommitmentPlan>;
    /**
     * Returns all the resources of a particular type belonging to a subscription.
     * @param options The options parameters.
     */
    listPlansBySubscription(options?: CommitmentPlansListPlansBySubscriptionOptionalParams): PagedAsyncIterableIterator<CommitmentPlan>;
    /**
     * Gets the associations of the Cognitive Services commitment plan.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param commitmentPlanName The name of the commitmentPlan associated with the Cognitive Services
     *                           Account
     * @param options The options parameters.
     */
    listAssociations(resourceGroupName: string, commitmentPlanName: string, options?: CommitmentPlansListAssociationsOptionalParams): PagedAsyncIterableIterator<CommitmentPlanAccountAssociation>;
    /**
     * Gets the specified commitmentPlans associated with the Cognitive Services account.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param commitmentPlanName The name of the commitmentPlan associated with the Cognitive Services
     *                           Account
     * @param options The options parameters.
     */
    get(resourceGroupName: string, accountName: string, commitmentPlanName: string, options?: CommitmentPlansGetOptionalParams): Promise<CommitmentPlansGetResponse>;
    /**
     * Update the state of specified commitmentPlans associated with the Cognitive Services account.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param commitmentPlanName The name of the commitmentPlan associated with the Cognitive Services
     *                           Account
     * @param commitmentPlan The commitmentPlan properties.
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, accountName: string, commitmentPlanName: string, commitmentPlan: CommitmentPlan, options?: CommitmentPlansCreateOrUpdateOptionalParams): Promise<CommitmentPlansCreateOrUpdateResponse>;
    /**
     * Deletes the specified commitmentPlan associated with the Cognitive Services account.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param commitmentPlanName The name of the commitmentPlan associated with the Cognitive Services
     *                           Account
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, accountName: string, commitmentPlanName: string, options?: CommitmentPlansDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Deletes the specified commitmentPlan associated with the Cognitive Services account.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param commitmentPlanName The name of the commitmentPlan associated with the Cognitive Services
     *                           Account
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, accountName: string, commitmentPlanName: string, options?: CommitmentPlansDeleteOptionalParams): Promise<void>;
    /**
     * Create Cognitive Services commitment plan.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param commitmentPlanName The name of the commitmentPlan associated with the Cognitive Services
     *                           Account
     * @param commitmentPlan The parameters to provide for the created commitment plan.
     * @param options The options parameters.
     */
    beginCreateOrUpdatePlan(resourceGroupName: string, commitmentPlanName: string, commitmentPlan: CommitmentPlan, options?: CommitmentPlansCreateOrUpdatePlanOptionalParams): Promise<SimplePollerLike<OperationState<CommitmentPlansCreateOrUpdatePlanResponse>, CommitmentPlansCreateOrUpdatePlanResponse>>;
    /**
     * Create Cognitive Services commitment plan.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param commitmentPlanName The name of the commitmentPlan associated with the Cognitive Services
     *                           Account
     * @param commitmentPlan The parameters to provide for the created commitment plan.
     * @param options The options parameters.
     */
    beginCreateOrUpdatePlanAndWait(resourceGroupName: string, commitmentPlanName: string, commitmentPlan: CommitmentPlan, options?: CommitmentPlansCreateOrUpdatePlanOptionalParams): Promise<CommitmentPlansCreateOrUpdatePlanResponse>;
    /**
     * Create Cognitive Services commitment plan.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param commitmentPlanName The name of the commitmentPlan associated with the Cognitive Services
     *                           Account
     * @param commitmentPlan The parameters to provide for the created commitment plan.
     * @param options The options parameters.
     */
    beginUpdatePlan(resourceGroupName: string, commitmentPlanName: string, commitmentPlan: PatchResourceTagsAndSku, options?: CommitmentPlansUpdatePlanOptionalParams): Promise<SimplePollerLike<OperationState<CommitmentPlansUpdatePlanResponse>, CommitmentPlansUpdatePlanResponse>>;
    /**
     * Create Cognitive Services commitment plan.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param commitmentPlanName The name of the commitmentPlan associated with the Cognitive Services
     *                           Account
     * @param commitmentPlan The parameters to provide for the created commitment plan.
     * @param options The options parameters.
     */
    beginUpdatePlanAndWait(resourceGroupName: string, commitmentPlanName: string, commitmentPlan: PatchResourceTagsAndSku, options?: CommitmentPlansUpdatePlanOptionalParams): Promise<CommitmentPlansUpdatePlanResponse>;
    /**
     * Deletes a Cognitive Services commitment plan from the resource group.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param commitmentPlanName The name of the commitmentPlan associated with the Cognitive Services
     *                           Account
     * @param options The options parameters.
     */
    beginDeletePlan(resourceGroupName: string, commitmentPlanName: string, options?: CommitmentPlansDeletePlanOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Deletes a Cognitive Services commitment plan from the resource group.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param commitmentPlanName The name of the commitmentPlan associated with the Cognitive Services
     *                           Account
     * @param options The options parameters.
     */
    beginDeletePlanAndWait(resourceGroupName: string, commitmentPlanName: string, options?: CommitmentPlansDeletePlanOptionalParams): Promise<void>;
    /**
     * Returns a Cognitive Services commitment plan specified by the parameters.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param commitmentPlanName The name of the commitmentPlan associated with the Cognitive Services
     *                           Account
     * @param options The options parameters.
     */
    getPlan(resourceGroupName: string, commitmentPlanName: string, options?: CommitmentPlansGetPlanOptionalParams): Promise<CommitmentPlansGetPlanResponse>;
    /**
     * Gets the association of the Cognitive Services commitment plan.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param commitmentPlanName The name of the commitmentPlan associated with the Cognitive Services
     *                           Account
     * @param commitmentPlanAssociationName The name of the commitment plan association with the Cognitive
     *                                      Services Account
     * @param options The options parameters.
     */
    getAssociation(resourceGroupName: string, commitmentPlanName: string, commitmentPlanAssociationName: string, options?: CommitmentPlansGetAssociationOptionalParams): Promise<CommitmentPlansGetAssociationResponse>;
    /**
     * Create or update the association of the Cognitive Services commitment plan.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param commitmentPlanName The name of the commitmentPlan associated with the Cognitive Services
     *                           Account
     * @param commitmentPlanAssociationName The name of the commitment plan association with the Cognitive
     *                                      Services Account
     * @param association The commitmentPlan properties.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAssociation(resourceGroupName: string, commitmentPlanName: string, commitmentPlanAssociationName: string, association: CommitmentPlanAccountAssociation, options?: CommitmentPlansCreateOrUpdateAssociationOptionalParams): Promise<SimplePollerLike<OperationState<CommitmentPlansCreateOrUpdateAssociationResponse>, CommitmentPlansCreateOrUpdateAssociationResponse>>;
    /**
     * Create or update the association of the Cognitive Services commitment plan.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param commitmentPlanName The name of the commitmentPlan associated with the Cognitive Services
     *                           Account
     * @param commitmentPlanAssociationName The name of the commitment plan association with the Cognitive
     *                                      Services Account
     * @param association The commitmentPlan properties.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAssociationAndWait(resourceGroupName: string, commitmentPlanName: string, commitmentPlanAssociationName: string, association: CommitmentPlanAccountAssociation, options?: CommitmentPlansCreateOrUpdateAssociationOptionalParams): Promise<CommitmentPlansCreateOrUpdateAssociationResponse>;
    /**
     * Deletes the association of the Cognitive Services commitment plan.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param commitmentPlanName The name of the commitmentPlan associated with the Cognitive Services
     *                           Account
     * @param commitmentPlanAssociationName The name of the commitment plan association with the Cognitive
     *                                      Services Account
     * @param options The options parameters.
     */
    beginDeleteAssociation(resourceGroupName: string, commitmentPlanName: string, commitmentPlanAssociationName: string, options?: CommitmentPlansDeleteAssociationOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Deletes the association of the Cognitive Services commitment plan.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param commitmentPlanName The name of the commitmentPlan associated with the Cognitive Services
     *                           Account
     * @param commitmentPlanAssociationName The name of the commitment plan association with the Cognitive
     *                                      Services Account
     * @param options The options parameters.
     */
    beginDeleteAssociationAndWait(resourceGroupName: string, commitmentPlanName: string, commitmentPlanAssociationName: string, options?: CommitmentPlansDeleteAssociationOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface CommitmentPlansCreateOrUpdateAssociationOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the createOrUpdateAssociation operation. */
export declare type CommitmentPlansCreateOrUpdateAssociationResponse = CommitmentPlanAccountAssociation;

/** Optional parameters. */
export declare interface CommitmentPlansCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface CommitmentPlansCreateOrUpdatePlanOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the createOrUpdatePlan operation. */
export declare type CommitmentPlansCreateOrUpdatePlanResponse = CommitmentPlan;

/** Contains response data for the createOrUpdate operation. */
export declare type CommitmentPlansCreateOrUpdateResponse = CommitmentPlan;

/** Defines headers for CommitmentPlans_deleteAssociation operation. */
export declare interface CommitmentPlansDeleteAssociationHeaders {
    location?: string;
}

/** Optional parameters. */
export declare interface CommitmentPlansDeleteAssociationOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface CommitmentPlansDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Defines headers for CommitmentPlans_deletePlan operation. */
export declare interface CommitmentPlansDeletePlanHeaders {
    location?: string;
}

/** Optional parameters. */
export declare interface CommitmentPlansDeletePlanOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface CommitmentPlansGetAssociationOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getAssociation operation. */
export declare type CommitmentPlansGetAssociationResponse = CommitmentPlanAccountAssociation;

/** Optional parameters. */
export declare interface CommitmentPlansGetOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface CommitmentPlansGetPlanOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getPlan operation. */
export declare type CommitmentPlansGetPlanResponse = CommitmentPlan;

/** Contains response data for the get operation. */
export declare type CommitmentPlansGetResponse = CommitmentPlan;

/** Optional parameters. */
export declare interface CommitmentPlansListAssociationsNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listAssociationsNext operation. */
export declare type CommitmentPlansListAssociationsNextResponse = CommitmentPlanAccountAssociationListResult;

/** Optional parameters. */
export declare interface CommitmentPlansListAssociationsOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listAssociations operation. */
export declare type CommitmentPlansListAssociationsResponse = CommitmentPlanAccountAssociationListResult;

/** Optional parameters. */
export declare interface CommitmentPlansListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type CommitmentPlansListNextResponse = CommitmentPlanListResult;

/** Optional parameters. */
export declare interface CommitmentPlansListOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface CommitmentPlansListPlansByResourceGroupNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listPlansByResourceGroupNext operation. */
export declare type CommitmentPlansListPlansByResourceGroupNextResponse = CommitmentPlanListResult;

/** Optional parameters. */
export declare interface CommitmentPlansListPlansByResourceGroupOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listPlansByResourceGroup operation. */
export declare type CommitmentPlansListPlansByResourceGroupResponse = CommitmentPlanListResult;

/** Optional parameters. */
export declare interface CommitmentPlansListPlansBySubscriptionNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listPlansBySubscriptionNext operation. */
export declare type CommitmentPlansListPlansBySubscriptionNextResponse = CommitmentPlanListResult;

/** Optional parameters. */
export declare interface CommitmentPlansListPlansBySubscriptionOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listPlansBySubscription operation. */
export declare type CommitmentPlansListPlansBySubscriptionResponse = CommitmentPlanListResult;

/** Contains response data for the list operation. */
export declare type CommitmentPlansListResponse = CommitmentPlanListResult;

/** Defines headers for CommitmentPlans_updatePlan operation. */
export declare interface CommitmentPlansUpdatePlanHeaders {
    location?: string;
}

/** Optional parameters. */
export declare interface CommitmentPlansUpdatePlanOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the updatePlan operation. */
export declare type CommitmentPlansUpdatePlanResponse = CommitmentPlan;

/** Cognitive Services account commitment quota. */
export declare interface CommitmentQuota {
    /** Commitment quota quantity. */
    quantity?: number;
    /** Commitment quota unit. */
    unit?: string;
}

/** Cognitive Services account commitment tier. */
export declare interface CommitmentTier {
    /** The Kind of the resource. */
    kind?: string;
    /** The name of the SKU. Ex - P3. It is typically a letter+number code */
    skuName?: string;
    /** Account hosting model. */
    hostingModel?: HostingModel;
    /** Commitment plan type. */
    planType?: string;
    /** Commitment period commitment tier. */
    tier?: string;
    /** Commitment period commitment max count. */
    maxCount?: number;
    /** Cognitive Services account commitment quota. */
    quota?: CommitmentQuota;
    /** Cognitive Services account commitment cost. */
    cost?: CommitmentCost;
}

/** The list of cognitive services accounts operation response. */
export declare interface CommitmentTierListResult {
    /** The link used to get the next page of CommitmentTier. */
    nextLink?: string;
    /**
     * Gets the list of Cognitive Services accounts CommitmentTier and their properties.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: CommitmentTier[];
}

/** Interface representing a CommitmentTiers. */
export declare interface CommitmentTiers {
    /**
     * List Commitment Tiers.
     * @param location Resource location.
     * @param options The options parameters.
     */
    list(location: string, options?: CommitmentTiersListOptionalParams): PagedAsyncIterableIterator<CommitmentTier>;
}

/** Optional parameters. */
export declare interface CommitmentTiersListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type CommitmentTiersListNextResponse = CommitmentTierListResult;

/** Optional parameters. */
export declare interface CommitmentTiersListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type CommitmentTiersListResponse = CommitmentTierListResult;

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export declare type CreatedByType = string;

/** Interface representing a DeletedAccounts. */
export declare interface DeletedAccounts {
    /**
     * Returns all the resources of a particular type belonging to a subscription.
     * @param options The options parameters.
     */
    list(options?: DeletedAccountsListOptionalParams): PagedAsyncIterableIterator<Account>;
    /**
     * Returns a Cognitive Services account specified by the parameters.
     * @param location Resource location.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param options The options parameters.
     */
    get(location: string, resourceGroupName: string, accountName: string, options?: DeletedAccountsGetOptionalParams): Promise<DeletedAccountsGetResponse>;
    /**
     * Deletes a Cognitive Services account from the resource group.
     * @param location Resource location.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param options The options parameters.
     */
    beginPurge(location: string, resourceGroupName: string, accountName: string, options?: DeletedAccountsPurgeOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Deletes a Cognitive Services account from the resource group.
     * @param location Resource location.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param options The options parameters.
     */
    beginPurgeAndWait(location: string, resourceGroupName: string, accountName: string, options?: DeletedAccountsPurgeOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface DeletedAccountsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type DeletedAccountsGetResponse = Account;

/** Optional parameters. */
export declare interface DeletedAccountsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type DeletedAccountsListNextResponse = AccountListResult;

/** Optional parameters. */
export declare interface DeletedAccountsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type DeletedAccountsListResponse = AccountListResult;

/** Optional parameters. */
export declare interface DeletedAccountsPurgeOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Cognitive Services account deployment. */
export declare interface Deployment extends ProxyResource {
    /** The resource model definition representing SKU */
    sku?: Sku;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
    /**
     * Resource Etag.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly etag?: string;
    /** Properties of Cognitive Services account deployment. */
    properties?: DeploymentProperties;
}

/** The list of cognitive services accounts operation response. */
export declare interface DeploymentListResult {
    /** The link used to get the next page of Deployment. */
    nextLink?: string;
    /**
     * Gets the list of Cognitive Services accounts Deployment and their properties.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: Deployment[];
}

/** Properties of Cognitive Services account deployment model. */
export declare interface DeploymentModel {
    /** Deployment model format. */
    format?: string;
    /** Deployment model name. */
    name?: string;
    /** Optional. Deployment model version. If version is not specified, a default version will be assigned. The default version is different for different models and might change when there is new version available for a model. Default version for a model could be found from list models API. */
    version?: string;
    /** Optional. Deployment model source ARM resource ID. */
    source?: string;
    /**
     * The call rate limit Cognitive Services account.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly callRateLimit?: CallRateLimit;
}

/**
 * Defines values for DeploymentModelVersionUpgradeOption. \
 * {@link KnownDeploymentModelVersionUpgradeOption} can be used interchangeably with DeploymentModelVersionUpgradeOption,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **OnceNewDefaultVersionAvailable** \
 * **OnceCurrentVersionExpired** \
 * **NoAutoUpgrade**
 */
export declare type DeploymentModelVersionUpgradeOption = string;

/** Properties of Cognitive Services account deployment. */
export declare interface DeploymentProperties {
    /**
     * Gets the status of the resource at the time the operation was called.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: DeploymentProvisioningState;
    /** Properties of Cognitive Services account deployment model. */
    model?: DeploymentModel;
    /** Properties of Cognitive Services account deployment model. */
    scaleSettings?: DeploymentScaleSettings;
    /**
     * The capabilities.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly capabilities?: {
        [propertyName: string]: string;
    };
    /** The name of RAI policy. */
    raiPolicyName?: string;
    /**
     * The call rate limit Cognitive Services account.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly callRateLimit?: CallRateLimit;
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly rateLimits?: ThrottlingRule[];
    /** Deployment model version upgrade option. */
    versionUpgradeOption?: DeploymentModelVersionUpgradeOption;
}

/**
 * Defines values for DeploymentProvisioningState. \
 * {@link KnownDeploymentProvisioningState} can be used interchangeably with DeploymentProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Accepted** \
 * **Creating** \
 * **Deleting** \
 * **Moving** \
 * **Failed** \
 * **Succeeded** \
 * **Disabled** \
 * **Canceled**
 */
export declare type DeploymentProvisioningState = string;

/** Interface representing a Deployments. */
export declare interface Deployments {
    /**
     * Gets the deployments associated with the Cognitive Services account.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, accountName: string, options?: DeploymentsListOptionalParams): PagedAsyncIterableIterator<Deployment>;
    /**
     * Gets the specified deployments associated with the Cognitive Services account.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param deploymentName The name of the deployment associated with the Cognitive Services Account
     * @param options The options parameters.
     */
    get(resourceGroupName: string, accountName: string, deploymentName: string, options?: DeploymentsGetOptionalParams): Promise<DeploymentsGetResponse>;
    /**
     * Update the state of specified deployments associated with the Cognitive Services account.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param deploymentName The name of the deployment associated with the Cognitive Services Account
     * @param deployment The deployment properties.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, accountName: string, deploymentName: string, deployment: Deployment, options?: DeploymentsCreateOrUpdateOptionalParams): Promise<SimplePollerLike<OperationState<DeploymentsCreateOrUpdateResponse>, DeploymentsCreateOrUpdateResponse>>;
    /**
     * Update the state of specified deployments associated with the Cognitive Services account.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param deploymentName The name of the deployment associated with the Cognitive Services Account
     * @param deployment The deployment properties.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, accountName: string, deploymentName: string, deployment: Deployment, options?: DeploymentsCreateOrUpdateOptionalParams): Promise<DeploymentsCreateOrUpdateResponse>;
    /**
     * Deletes the specified deployment associated with the Cognitive Services account.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param deploymentName The name of the deployment associated with the Cognitive Services Account
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, accountName: string, deploymentName: string, options?: DeploymentsDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Deletes the specified deployment associated with the Cognitive Services account.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param deploymentName The name of the deployment associated with the Cognitive Services Account
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, accountName: string, deploymentName: string, options?: DeploymentsDeleteOptionalParams): Promise<void>;
}

/** Properties of Cognitive Services account deployment model. */
export declare interface DeploymentScaleSettings {
    /** Deployment scale type. */
    scaleType?: DeploymentScaleType;
    /** Deployment capacity. */
    capacity?: number;
    /**
     * Deployment active capacity. This value might be different from `capacity` if customer recently updated `capacity`.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly activeCapacity?: number;
}

/**
 * Defines values for DeploymentScaleType. \
 * {@link KnownDeploymentScaleType} can be used interchangeably with DeploymentScaleType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Standard** \
 * **Manual**
 */
export declare type DeploymentScaleType = string;

/** Optional parameters. */
export declare interface DeploymentsCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export declare type DeploymentsCreateOrUpdateResponse = Deployment;

/** Optional parameters. */
export declare interface DeploymentsDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface DeploymentsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type DeploymentsGetResponse = Deployment;

/** Optional parameters. */
export declare interface DeploymentsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type DeploymentsListNextResponse = DeploymentListResult;

/** Optional parameters. */
export declare interface DeploymentsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type DeploymentsListResponse = DeploymentListResult;

/** Domain availability. */
export declare interface DomainAvailability {
    /** Indicates the given SKU is available or not. */
    isSubdomainAvailable?: boolean;
    /** Reason why the SKU is not available. */
    reason?: string;
    /** The subdomain name to use. */
    subdomainName?: string;
    /** The Type of the resource. */
    type?: string;
    /** The Kind of the resource. */
    kind?: string;
}

/** Properties to configure Encryption */
export declare interface Encryption {
    /** Properties of KeyVault */
    keyVaultProperties?: KeyVaultProperties;
    /** Enumerates the possible value of keySource for Encryption */
    keySource?: KeySource;
}

/** The resource management error additional info. */
export declare interface ErrorAdditionalInfo {
    /**
     * The additional info type.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /**
     * The additional info.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly info?: Record<string, unknown>;
}

/** The error detail. */
export declare interface ErrorDetail {
    /**
     * The error code.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly code?: string;
    /**
     * The error message.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly message?: string;
    /**
     * The error target.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly target?: string;
    /**
     * The error details.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly details?: ErrorDetail[];
    /**
     * The error additional info.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export declare interface ErrorResponse {
    /** The error object. */
    error?: ErrorDetail;
}

/**
 * Given the last `.value` produced by the `byPage` iterator,
 * returns a continuation token that can be used to begin paging from
 * that point later.
 * @param page An object from accessing `value` on the IteratorResult from a `byPage` iterator.
 * @returns The continuation token that can be passed into byPage() during future calls.
 */
export declare function getContinuationToken(page: unknown): string | undefined;

/**
 * Defines values for HostingModel. \
 * {@link KnownHostingModel} can be used interchangeably with HostingModel,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Web** \
 * **ConnectedContainer** \
 * **DisconnectedContainer** \
 * **ProvisionedWeb**
 */
export declare type HostingModel = string;

/** Identity for the resource. */
export declare interface Identity {
    /** The identity type. */
    type?: ResourceIdentityType;
    /**
     * The tenant ID of resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly tenantId?: string;
    /**
     * The principal ID of resource identity.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly principalId?: string;
    /** The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName} */
    userAssignedIdentities?: {
        [propertyName: string]: UserAssignedIdentity;
    };
}

/** A rule governing the accessibility from a specific ip address or ip range. */
export declare interface IpRule {
    /** An IPv4 address range in CIDR notation, such as '124.56.78.91' (simple IP address) or '124.56.78.0/24' (all addresses that start with 124.56.78). */
    value: string;
}

/** Defines values for KeyName. */
export declare type KeyName = "Key1" | "Key2";

/**
 * Defines values for KeySource. \
 * {@link KnownKeySource} can be used interchangeably with KeySource,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Microsoft.CognitiveServices** \
 * **Microsoft.KeyVault**
 */
export declare type KeySource = string;

/** Properties to configure keyVault Properties */
export declare interface KeyVaultProperties {
    /** Name of the Key from KeyVault */
    keyName?: string;
    /** Version of the Key from KeyVault */
    keyVersion?: string;
    /** Uri of KeyVault */
    keyVaultUri?: string;
    identityClientId?: string;
}

/** Known values of {@link AbusePenaltyAction} that the service accepts. */
export declare enum KnownAbusePenaltyAction {
    /** Throttle */
    Throttle = "Throttle",
    /** Block */
    Block = "Block"
}

/** Known values of {@link ActionType} that the service accepts. */
export declare enum KnownActionType {
    /** Internal */
    Internal = "Internal"
}

/** Known values of {@link CommitmentPlanProvisioningState} that the service accepts. */
export declare enum KnownCommitmentPlanProvisioningState {
    /** Accepted */
    Accepted = "Accepted",
    /** Creating */
    Creating = "Creating",
    /** Deleting */
    Deleting = "Deleting",
    /** Moving */
    Moving = "Moving",
    /** Failed */
    Failed = "Failed",
    /** Succeeded */
    Succeeded = "Succeeded",
    /** Canceled */
    Canceled = "Canceled"
}

/** Known values of {@link CreatedByType} that the service accepts. */
export declare enum KnownCreatedByType {
    /** User */
    User = "User",
    /** Application */
    Application = "Application",
    /** ManagedIdentity */
    ManagedIdentity = "ManagedIdentity",
    /** Key */
    Key = "Key"
}

/** Known values of {@link DeploymentModelVersionUpgradeOption} that the service accepts. */
export declare enum KnownDeploymentModelVersionUpgradeOption {
    /** OnceNewDefaultVersionAvailable */
    OnceNewDefaultVersionAvailable = "OnceNewDefaultVersionAvailable",
    /** OnceCurrentVersionExpired */
    OnceCurrentVersionExpired = "OnceCurrentVersionExpired",
    /** NoAutoUpgrade */
    NoAutoUpgrade = "NoAutoUpgrade"
}

/** Known values of {@link DeploymentProvisioningState} that the service accepts. */
export declare enum KnownDeploymentProvisioningState {
    /** Accepted */
    Accepted = "Accepted",
    /** Creating */
    Creating = "Creating",
    /** Deleting */
    Deleting = "Deleting",
    /** Moving */
    Moving = "Moving",
    /** Failed */
    Failed = "Failed",
    /** Succeeded */
    Succeeded = "Succeeded",
    /** Disabled */
    Disabled = "Disabled",
    /** Canceled */
    Canceled = "Canceled"
}

/** Known values of {@link DeploymentScaleType} that the service accepts. */
export declare enum KnownDeploymentScaleType {
    /** Standard */
    Standard = "Standard",
    /** Manual */
    Manual = "Manual"
}

/** Known values of {@link HostingModel} that the service accepts. */
export declare enum KnownHostingModel {
    /** Web */
    Web = "Web",
    /** ConnectedContainer */
    ConnectedContainer = "ConnectedContainer",
    /** DisconnectedContainer */
    DisconnectedContainer = "DisconnectedContainer",
    /** ProvisionedWeb */
    ProvisionedWeb = "ProvisionedWeb"
}

/** Known values of {@link KeySource} that the service accepts. */
export declare enum KnownKeySource {
    /** MicrosoftCognitiveServices */
    MicrosoftCognitiveServices = "Microsoft.CognitiveServices",
    /** MicrosoftKeyVault */
    MicrosoftKeyVault = "Microsoft.KeyVault"
}

/** Known values of {@link ModelLifecycleStatus} that the service accepts. */
export declare enum KnownModelLifecycleStatus {
    /** GenerallyAvailable */
    GenerallyAvailable = "GenerallyAvailable",
    /** Preview */
    Preview = "Preview"
}

/** Known values of {@link NetworkRuleAction} that the service accepts. */
export declare enum KnownNetworkRuleAction {
    /** Allow */
    Allow = "Allow",
    /** Deny */
    Deny = "Deny"
}

/** Known values of {@link Origin} that the service accepts. */
export declare enum KnownOrigin {
    /** User */
    User = "user",
    /** System */
    System = "system",
    /** UserSystem */
    UserSystem = "user,system"
}

/** Known values of {@link PrivateEndpointConnectionProvisioningState} that the service accepts. */
export declare enum KnownPrivateEndpointConnectionProvisioningState {
    /** Succeeded */
    Succeeded = "Succeeded",
    /** Creating */
    Creating = "Creating",
    /** Deleting */
    Deleting = "Deleting",
    /** Failed */
    Failed = "Failed"
}

/** Known values of {@link PrivateEndpointServiceConnectionStatus} that the service accepts. */
export declare enum KnownPrivateEndpointServiceConnectionStatus {
    /** Pending */
    Pending = "Pending",
    /** Approved */
    Approved = "Approved",
    /** Rejected */
    Rejected = "Rejected"
}

/** Known values of {@link ProvisioningState} that the service accepts. */
export declare enum KnownProvisioningState {
    /** Accepted */
    Accepted = "Accepted",
    /** Creating */
    Creating = "Creating",
    /** Deleting */
    Deleting = "Deleting",
    /** Moving */
    Moving = "Moving",
    /** Failed */
    Failed = "Failed",
    /** Succeeded */
    Succeeded = "Succeeded",
    /** ResolvingDNS */
    ResolvingDNS = "ResolvingDNS"
}

/** Known values of {@link PublicNetworkAccess} that the service accepts. */
export declare enum KnownPublicNetworkAccess {
    /** Enabled */
    Enabled = "Enabled",
    /** Disabled */
    Disabled = "Disabled"
}

/** Known values of {@link QuotaUsageStatus} that the service accepts. */
export declare enum KnownQuotaUsageStatus {
    /** Included */
    Included = "Included",
    /** Blocked */
    Blocked = "Blocked",
    /** InOverage */
    InOverage = "InOverage",
    /** Unknown */
    Unknown = "Unknown"
}

/** Known values of {@link ResourceSkuRestrictionsReasonCode} that the service accepts. */
export declare enum KnownResourceSkuRestrictionsReasonCode {
    /** QuotaId */
    QuotaId = "QuotaId",
    /** NotAvailableForSubscription */
    NotAvailableForSubscription = "NotAvailableForSubscription"
}

/** Known values of {@link RoutingMethods} that the service accepts. */
export declare enum KnownRoutingMethods {
    /** Priority */
    Priority = "Priority",
    /** Weighted */
    Weighted = "Weighted",
    /** Performance */
    Performance = "Performance"
}

/** Known values of {@link SkuTier} that the service accepts. */
export declare enum KnownSkuTier {
    /** Free */
    Free = "Free",
    /** Basic */
    Basic = "Basic",
    /** Standard */
    Standard = "Standard",
    /** Premium */
    Premium = "Premium",
    /** Enterprise */
    Enterprise = "Enterprise"
}

/** Known values of {@link UnitType} that the service accepts. */
export declare enum KnownUnitType {
    /** Count */
    Count = "Count",
    /** Bytes */
    Bytes = "Bytes",
    /** Seconds */
    Seconds = "Seconds",
    /** Percent */
    Percent = "Percent",
    /** CountPerSecond */
    CountPerSecond = "CountPerSecond",
    /** BytesPerSecond */
    BytesPerSecond = "BytesPerSecond",
    /** Milliseconds */
    Milliseconds = "Milliseconds"
}

/** A metric name. */
export declare interface MetricName {
    /** The name of the metric. */
    value?: string;
    /** The friendly name of the metric. */
    localizedValue?: string;
}

/** Cognitive Services Model. */
export declare interface Model {
    /** Model Metadata. */
    model?: AccountModel;
    /** The Kind of the Model. */
    kind?: string;
    /** The SKU of the Model. */
    skuName?: string;
}

/** Cognitive Services account ModelDeprecationInfo. */
export declare interface ModelDeprecationInfo {
    /** The datetime of deprecation of the fineTune Model. */
    fineTune?: string;
    /** The datetime of deprecation of the inference Model. */
    inference?: string;
}

/**
 * Defines values for ModelLifecycleStatus. \
 * {@link KnownModelLifecycleStatus} can be used interchangeably with ModelLifecycleStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **GenerallyAvailable** \
 * **Preview**
 */
export declare type ModelLifecycleStatus = string;

/** The list of cognitive services models. */
export declare interface ModelListResult {
    /** The link used to get the next page of Model. */
    nextLink?: string;
    /** Gets the list of Cognitive Services accounts Model and their properties. */
    value?: Model[];
}

/** Interface representing a Models. */
export declare interface Models {
    /**
     * List Models.
     * @param location Resource location.
     * @param options The options parameters.
     */
    list(location: string, options?: ModelsListOptionalParams): PagedAsyncIterableIterator<Model>;
}

/** Describes an available Cognitive Services Model SKU. */
export declare interface ModelSku {
    /** The name of the model SKU. */
    name?: string;
    /** The usage name of the model SKU. */
    usageName?: string;
    /** The datetime of deprecation of the model SKU. */
    deprecationDate?: Date;
    /** The capacity configuration. */
    capacity?: CapacityConfig;
    /** The list of rateLimit. */
    rateLimits?: CallRateLimit[];
}

/** Optional parameters. */
export declare interface ModelsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type ModelsListNextResponse = ModelListResult;

/** Optional parameters. */
export declare interface ModelsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type ModelsListResponse = ModelListResult;

/** The multiregion settings Cognitive Services account. */
export declare interface MultiRegionSettings {
    /** Multiregion routing methods. */
    routingMethod?: RoutingMethods;
    regions?: RegionSetting[];
}

/**
 * Defines values for NetworkRuleAction. \
 * {@link KnownNetworkRuleAction} can be used interchangeably with NetworkRuleAction,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Allow** \
 * **Deny**
 */
export declare type NetworkRuleAction = string;

/** A set of rules governing the network accessibility. */
export declare interface NetworkRuleSet {
    /** The default action when no rule from ipRules and from virtualNetworkRules match. This is only used after the bypass property has been evaluated. */
    defaultAction?: NetworkRuleAction;
    /** The list of IP address rules. */
    ipRules?: IpRule[];
    /** The list of virtual network rules. */
    virtualNetworkRules?: VirtualNetworkRule[];
}

/** Details of a REST API operation, returned from the Resource Provider Operations API */
export declare interface Operation {
    /**
     * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly isDataAction?: boolean;
    /** Localized display information for this particular operation. */
    display?: OperationDisplay;
    /**
     * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly origin?: Origin;
    /**
     * Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly actionType?: ActionType;
}

/** Localized display information for this particular operation. */
export declare interface OperationDisplay {
    /**
     * The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provider?: string;
    /**
     * The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly resource?: string;
    /**
     * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly operation?: string;
    /**
     * The short, localized friendly description of the operation; suitable for tool tips and detailed views.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly description?: string;
}

/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */
export declare interface OperationListResult {
    /**
     * List of operations supported by the resource provider
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: Operation[];
    /**
     * URL to get the next set of operation list results (if there are any).
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Interface representing a Operations. */
export declare interface Operations {
    /**
     * Lists all the available Cognitive Services account operations.
     * @param options The options parameters.
     */
    list(options?: OperationsListOptionalParams): PagedAsyncIterableIterator<Operation>;
}

/** Optional parameters. */
export declare interface OperationsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export declare interface OperationsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type OperationsListResponse = OperationListResult;

/**
 * Defines values for Origin. \
 * {@link KnownOrigin} can be used interchangeably with Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **system** \
 * **user,system**
 */
export declare type Origin = string;

/** The object being used to update tags of a resource, in general used for PATCH operations. */
export declare interface PatchResourceTags {
    /** Resource tags. */
    tags?: {
        [propertyName: string]: string;
    };
}

/** The object being used to update tags and sku of a resource, in general used for PATCH operations. */
export declare interface PatchResourceTagsAndSku extends PatchResourceTags {
    /** The resource model definition representing SKU */
    sku?: Sku;
}

/** The Private Endpoint resource. */
export declare interface PrivateEndpoint {
    /**
     * The ARM identifier for Private Endpoint
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
}

/** The Private Endpoint Connection resource. */
export declare interface PrivateEndpointConnection extends AzureEntityResource {
    /** Resource properties. */
    properties?: PrivateEndpointConnectionProperties;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
    /** The location of the private endpoint connection */
    location?: string;
}

/** A list of private endpoint connections */
export declare interface PrivateEndpointConnectionListResult {
    /** Array of private endpoint connections */
    value?: PrivateEndpointConnection[];
}

/** Properties of the PrivateEndpointConnectProperties. */
export declare interface PrivateEndpointConnectionProperties {
    /** The resource of private end point. */
    privateEndpoint?: PrivateEndpoint;
    /** A collection of information about the state of the connection between service consumer and provider. */
    privateLinkServiceConnectionState: PrivateLinkServiceConnectionState;
    /**
     * The provisioning state of the private endpoint connection resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: PrivateEndpointConnectionProvisioningState;
    /** The private link resource group ids. */
    groupIds?: string[];
}

/**
 * Defines values for PrivateEndpointConnectionProvisioningState. \
 * {@link KnownPrivateEndpointConnectionProvisioningState} can be used interchangeably with PrivateEndpointConnectionProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded** \
 * **Creating** \
 * **Deleting** \
 * **Failed**
 */
export declare type PrivateEndpointConnectionProvisioningState = string;

/** Interface representing a PrivateEndpointConnections. */
export declare interface PrivateEndpointConnections {
    /**
     * Gets the private endpoint connections associated with the Cognitive Services account.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, accountName: string, options?: PrivateEndpointConnectionsListOptionalParams): Promise<PrivateEndpointConnectionsListResponse>;
    /**
     * Gets the specified private endpoint connection associated with the Cognitive Services account.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param privateEndpointConnectionName The name of the private endpoint connection associated with the
     *                                      Cognitive Services Account
     * @param options The options parameters.
     */
    get(resourceGroupName: string, accountName: string, privateEndpointConnectionName: string, options?: PrivateEndpointConnectionsGetOptionalParams): Promise<PrivateEndpointConnectionsGetResponse>;
    /**
     * Update the state of specified private endpoint connection associated with the Cognitive Services
     * account.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param privateEndpointConnectionName The name of the private endpoint connection associated with the
     *                                      Cognitive Services Account
     * @param properties The private endpoint connection properties.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, accountName: string, privateEndpointConnectionName: string, properties: PrivateEndpointConnection, options?: PrivateEndpointConnectionsCreateOrUpdateOptionalParams): Promise<SimplePollerLike<OperationState<PrivateEndpointConnectionsCreateOrUpdateResponse>, PrivateEndpointConnectionsCreateOrUpdateResponse>>;
    /**
     * Update the state of specified private endpoint connection associated with the Cognitive Services
     * account.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param privateEndpointConnectionName The name of the private endpoint connection associated with the
     *                                      Cognitive Services Account
     * @param properties The private endpoint connection properties.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, accountName: string, privateEndpointConnectionName: string, properties: PrivateEndpointConnection, options?: PrivateEndpointConnectionsCreateOrUpdateOptionalParams): Promise<PrivateEndpointConnectionsCreateOrUpdateResponse>;
    /**
     * Deletes the specified private endpoint connection associated with the Cognitive Services account.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param privateEndpointConnectionName The name of the private endpoint connection associated with the
     *                                      Cognitive Services Account
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, accountName: string, privateEndpointConnectionName: string, options?: PrivateEndpointConnectionsDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Deletes the specified private endpoint connection associated with the Cognitive Services account.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param privateEndpointConnectionName The name of the private endpoint connection associated with the
     *                                      Cognitive Services Account
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, accountName: string, privateEndpointConnectionName: string, options?: PrivateEndpointConnectionsDeleteOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface PrivateEndpointConnectionsCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export declare type PrivateEndpointConnectionsCreateOrUpdateResponse = PrivateEndpointConnection;

/** Optional parameters. */
export declare interface PrivateEndpointConnectionsDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface PrivateEndpointConnectionsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type PrivateEndpointConnectionsGetResponse = PrivateEndpointConnection;

/** Optional parameters. */
export declare interface PrivateEndpointConnectionsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type PrivateEndpointConnectionsListResponse = PrivateEndpointConnectionListResult;

/**
 * Defines values for PrivateEndpointServiceConnectionStatus. \
 * {@link KnownPrivateEndpointServiceConnectionStatus} can be used interchangeably with PrivateEndpointServiceConnectionStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Pending** \
 * **Approved** \
 * **Rejected**
 */
export declare type PrivateEndpointServiceConnectionStatus = string;

/** A private link resource */
export declare interface PrivateLinkResource extends Resource {
    /** Resource properties. */
    properties?: PrivateLinkResourceProperties;
}

/** A list of private link resources */
export declare interface PrivateLinkResourceListResult {
    /** Array of private link resources */
    value?: PrivateLinkResource[];
}

/** Properties of a private link resource. */
export declare interface PrivateLinkResourceProperties {
    /**
     * The private link resource group id.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly groupId?: string;
    /**
     * The private link resource required member names.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly requiredMembers?: string[];
    /** The private link resource Private link DNS zone name. */
    requiredZoneNames?: string[];
    /**
     * The private link resource display name.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly displayName?: string;
}

/** Interface representing a PrivateLinkResources. */
export declare interface PrivateLinkResources {
    /**
     * Gets the private link resources that need to be created for a Cognitive Services account.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Cognitive Services account.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, accountName: string, options?: PrivateLinkResourcesListOptionalParams): Promise<PrivateLinkResourcesListResponse>;
}

/** Optional parameters. */
export declare interface PrivateLinkResourcesListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type PrivateLinkResourcesListResponse = PrivateLinkResourceListResult;

/** A collection of information about the state of the connection between service consumer and provider. */
export declare interface PrivateLinkServiceConnectionState {
    /** Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service. */
    status?: PrivateEndpointServiceConnectionStatus;
    /** The reason for approval/rejection of the connection. */
    description?: string;
    /** A message indicating if changes on the service provider require any updates on the consumer. */
    actionsRequired?: string;
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Accepted** \
 * **Creating** \
 * **Deleting** \
 * **Moving** \
 * **Failed** \
 * **Succeeded** \
 * **ResolvingDNS**
 */
export declare type ProvisioningState = string;

/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */
export declare interface ProxyResource extends Resource {
}

/**
 * Defines values for PublicNetworkAccess. \
 * {@link KnownPublicNetworkAccess} can be used interchangeably with PublicNetworkAccess,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled** \
 * **Disabled**
 */
export declare type PublicNetworkAccess = string;

export declare interface QuotaLimit {
    count?: number;
    renewalPeriod?: number;
    rules?: ThrottlingRule[];
}

/**
 * Defines values for QuotaUsageStatus. \
 * {@link KnownQuotaUsageStatus} can be used interchangeably with QuotaUsageStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Included** \
 * **Blocked** \
 * **InOverage** \
 * **Unknown**
 */
export declare type QuotaUsageStatus = string;

/** Regenerate key parameters. */
export declare interface RegenerateKeyParameters {
    /** key name to generate (Key1|Key2) */
    keyName: KeyName;
}

/** The call rate limit Cognitive Services account. */
export declare interface RegionSetting {
    /** Name of the region. */
    name?: string;
    /** A value for priority or weighted routing methods. */
    value?: number;
    /** Maps the region to the regional custom subdomain. */
    customsubdomain?: string;
}

export declare interface RequestMatchPattern {
    path?: string;
    method?: string;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export declare interface Resource {
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /**
     * The name of the resource
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
}

/** Defines values for ResourceIdentityType. */
export declare type ResourceIdentityType = "None" | "SystemAssigned" | "UserAssigned" | "SystemAssigned, UserAssigned";

/** Describes an available Cognitive Services SKU. */
export declare interface ResourceSku {
    /** The type of resource the SKU applies to. */
    resourceType?: string;
    /** The name of SKU. */
    name?: string;
    /** Specifies the tier of Cognitive Services account. */
    tier?: string;
    /** The Kind of resources that are supported in this SKU. */
    kind?: string;
    /** The set of locations that the SKU is available. */
    locations?: string[];
    /** The restrictions because of which SKU cannot be used. This is empty if there are no restrictions. */
    restrictions?: ResourceSkuRestrictions[];
}

/** The Get Skus operation response. */
export declare interface ResourceSkuListResult {
    /** The list of skus available for the subscription. */
    value: ResourceSku[];
    /** The uri to fetch the next page of Skus. */
    nextLink?: string;
}

export declare interface ResourceSkuRestrictionInfo {
    /** Locations where the SKU is restricted */
    locations?: string[];
    /** List of availability zones where the SKU is restricted. */
    zones?: string[];
}

/** Describes restrictions of a SKU. */
export declare interface ResourceSkuRestrictions {
    /** The type of restrictions. */
    type?: ResourceSkuRestrictionsType;
    /** The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted. */
    values?: string[];
    /** The information about the restriction where the SKU cannot be used. */
    restrictionInfo?: ResourceSkuRestrictionInfo;
    /** The reason for restriction. */
    reasonCode?: ResourceSkuRestrictionsReasonCode;
}

/**
 * Defines values for ResourceSkuRestrictionsReasonCode. \
 * {@link KnownResourceSkuRestrictionsReasonCode} can be used interchangeably with ResourceSkuRestrictionsReasonCode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **QuotaId** \
 * **NotAvailableForSubscription**
 */
export declare type ResourceSkuRestrictionsReasonCode = string;

/** Defines values for ResourceSkuRestrictionsType. */
export declare type ResourceSkuRestrictionsType = "Location" | "Zone";

/** Interface representing a ResourceSkus. */
export declare interface ResourceSkus {
    /**
     * Gets the list of Microsoft.CognitiveServices SKUs available for your Subscription.
     * @param options The options parameters.
     */
    list(options?: ResourceSkusListOptionalParams): PagedAsyncIterableIterator<ResourceSku>;
}

/** Optional parameters. */
export declare interface ResourceSkusListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type ResourceSkusListNextResponse = ResourceSkuListResult;

/** Optional parameters. */
export declare interface ResourceSkusListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type ResourceSkusListResponse = ResourceSkuListResult;

/**
 * Defines values for RoutingMethods. \
 * {@link KnownRoutingMethods} can be used interchangeably with RoutingMethods,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Priority** \
 * **Weighted** \
 * **Performance**
 */
export declare type RoutingMethods = string;

/** The resource model definition representing SKU */
export declare interface Sku {
    /** The name of the SKU. Ex - P3. It is typically a letter+number code */
    name: string;
    /** This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT. */
    tier?: SkuTier;
    /** The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. */
    size?: string;
    /** If the service has different generations of hardware, for the same SKU, then that can be captured here. */
    family?: string;
    /** If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted. */
    capacity?: number;
}

/** SKU availability. */
export declare interface SkuAvailability {
    /** The Kind of the resource. */
    kind?: string;
    /** The Type of the resource. */
    type?: string;
    /** The SKU of Cognitive Services account. */
    skuName?: string;
    /** Indicates the given SKU is available or not. */
    skuAvailable?: boolean;
    /** Reason why the SKU is not available. */
    reason?: string;
    /** Additional error message. */
    message?: string;
}

/** Check SKU availability result list. */
export declare interface SkuAvailabilityListResult {
    /** Check SKU availability result list. */
    value?: SkuAvailability[];
}

/** SkuCapability indicates the capability of a certain feature. */
export declare interface SkuCapability {
    /** The name of the SkuCapability. */
    name?: string;
    /** The value of the SkuCapability. */
    value?: string;
}

/** Sku change info of account. */
export declare interface SkuChangeInfo {
    /** Gets the count of downgrades. */
    countOfDowngrades?: number;
    /** Gets the count of upgrades after downgrades. */
    countOfUpgradesAfterDowngrades?: number;
    /** Gets the last change date. */
    lastChangeDate?: string;
}

/**
 * Defines values for SkuTier. \
 * {@link KnownSkuTier} can be used interchangeably with SkuTier,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Free** \
 * **Basic** \
 * **Standard** \
 * **Premium** \
 * **Enterprise**
 */
export declare type SkuTier = string;

/** Metadata pertaining to creation and last modification of the resource. */
export declare interface SystemData {
    /** The identity that created the resource. */
    createdBy?: string;
    /** The type of identity that created the resource. */
    createdByType?: CreatedByType;
    /** The timestamp of resource creation (UTC). */
    createdAt?: Date;
    /** The identity that last modified the resource. */
    lastModifiedBy?: string;
    /** The type of identity that last modified the resource. */
    lastModifiedByType?: CreatedByType;
    /** The timestamp of resource last modification (UTC) */
    lastModifiedAt?: Date;
}

export declare interface ThrottlingRule {
    key?: string;
    renewalPeriod?: number;
    count?: number;
    minCount?: number;
    dynamicThrottlingEnabled?: boolean;
    matchPatterns?: RequestMatchPattern[];
}

/**
 * Defines values for UnitType. \
 * {@link KnownUnitType} can be used interchangeably with UnitType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Count** \
 * **Bytes** \
 * **Seconds** \
 * **Percent** \
 * **CountPerSecond** \
 * **BytesPerSecond** \
 * **Milliseconds**
 */
export declare type UnitType = string;

/** The usage data for a usage request. */
export declare interface Usage {
    /** The unit of the metric. */
    unit?: UnitType;
    /** The name information for the metric. */
    name?: MetricName;
    /** The quota period used to summarize the usage values. */
    quotaPeriod?: string;
    /** Maximum value for this metric. */
    limit?: number;
    /** Current value for this metric. */
    currentValue?: number;
    /** Next reset time for current quota. */
    nextResetTime?: string;
    /** Cognitive Services account quota usage status. */
    status?: QuotaUsageStatus;
}

/** The response to a list usage request. */
export declare interface UsageListResult {
    /** The link used to get the next page of Usages. */
    nextLink?: string;
    /** The list of usages for Cognitive Service account. */
    value?: Usage[];
}

/** Interface representing a Usages. */
export declare interface Usages {
    /**
     * Get usages for the requested subscription
     * @param location Resource location.
     * @param options The options parameters.
     */
    list(location: string, options?: UsagesListOptionalParams): PagedAsyncIterableIterator<Usage>;
}

/** Optional parameters. */
export declare interface UsagesListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type UsagesListNextResponse = UsageListResult;

/** Optional parameters. */
export declare interface UsagesListOptionalParams extends coreClient.OperationOptions {
    /** An OData filter expression that describes a subset of usages to return. The supported parameter is name.value (name of the metric, can have an or of multiple names). */
    filter?: string;
}

/** Contains response data for the list operation. */
export declare type UsagesListResponse = UsageListResult;

/** User-assigned managed identity. */
export declare interface UserAssignedIdentity {
    /**
     * Azure Active Directory principal ID associated with this Identity.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly principalId?: string;
    /**
     * Client App Id associated with this identity.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly clientId?: string;
}

/** The user owned storage for Cognitive Services account. */
export declare interface UserOwnedStorage {
    /** Full resource id of a Microsoft.Storage resource. */
    resourceId?: string;
    identityClientId?: string;
}

/** A rule governing the accessibility from a specific virtual network. */
export declare interface VirtualNetworkRule {
    /** Full resource id of a vnet subnet, such as '/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/test-vnet/subnets/subnet1'. */
    id: string;
    /** Gets the state of virtual network rule. */
    state?: string;
    /** Ignore missing vnet service endpoint or not. */
    ignoreMissingVnetServiceEndpoint?: boolean;
}

export { }
