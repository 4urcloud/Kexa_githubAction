import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SyncGroups } from "../operationsInterfaces";
import { MicrosoftStorageSync } from "../microsoftStorageSync";
import { SyncGroup, SyncGroupsListByStorageSyncServiceOptionalParams, SyncGroupCreateParameters, SyncGroupsCreateOptionalParams, SyncGroupsCreateResponse, SyncGroupsGetOptionalParams, SyncGroupsGetResponse, SyncGroupsDeleteOptionalParams, SyncGroupsDeleteResponse } from "../models";
/** Class containing SyncGroups operations. */
export declare class SyncGroupsImpl implements SyncGroups {
    private readonly client;
    /**
     * Initialize a new instance of the class SyncGroups class.
     * @param client Reference to the service client
     */
    constructor(client: MicrosoftStorageSync);
    /**
     * Get a SyncGroup List.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param storageSyncServiceName Name of Storage Sync Service resource.
     * @param options The options parameters.
     */
    listByStorageSyncService(resourceGroupName: string, storageSyncServiceName: string, options?: SyncGroupsListByStorageSyncServiceOptionalParams): PagedAsyncIterableIterator<SyncGroup>;
    private listByStorageSyncServicePagingPage;
    private listByStorageSyncServicePagingAll;
    /**
     * Get a SyncGroup List.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param storageSyncServiceName Name of Storage Sync Service resource.
     * @param options The options parameters.
     */
    private _listByStorageSyncService;
    /**
     * Create a new SyncGroup.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param storageSyncServiceName Name of Storage Sync Service resource.
     * @param syncGroupName Name of Sync Group resource.
     * @param parameters Sync Group Body
     * @param options The options parameters.
     */
    create(resourceGroupName: string, storageSyncServiceName: string, syncGroupName: string, parameters: SyncGroupCreateParameters, options?: SyncGroupsCreateOptionalParams): Promise<SyncGroupsCreateResponse>;
    /**
     * Get a given SyncGroup.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param storageSyncServiceName Name of Storage Sync Service resource.
     * @param syncGroupName Name of Sync Group resource.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, storageSyncServiceName: string, syncGroupName: string, options?: SyncGroupsGetOptionalParams): Promise<SyncGroupsGetResponse>;
    /**
     * Delete a given SyncGroup.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param storageSyncServiceName Name of Storage Sync Service resource.
     * @param syncGroupName Name of Sync Group resource.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, storageSyncServiceName: string, syncGroupName: string, options?: SyncGroupsDeleteOptionalParams): Promise<SyncGroupsDeleteResponse>;
}
//# sourceMappingURL=syncGroups.d.ts.map