import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Workflows } from "../operationsInterfaces";
import { MicrosoftStorageSync } from "../microsoftStorageSync";
import { Workflow, WorkflowsListByStorageSyncServiceOptionalParams, WorkflowsGetOptionalParams, WorkflowsGetResponse, WorkflowsAbortOptionalParams, WorkflowsAbortResponse } from "../models";
/** Class containing Workflows operations. */
export declare class WorkflowsImpl implements Workflows {
    private readonly client;
    /**
     * Initialize a new instance of the class Workflows class.
     * @param client Reference to the service client
     */
    constructor(client: MicrosoftStorageSync);
    /**
     * Get a Workflow List
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param storageSyncServiceName Name of Storage Sync Service resource.
     * @param options The options parameters.
     */
    listByStorageSyncService(resourceGroupName: string, storageSyncServiceName: string, options?: WorkflowsListByStorageSyncServiceOptionalParams): PagedAsyncIterableIterator<Workflow>;
    private listByStorageSyncServicePagingPage;
    private listByStorageSyncServicePagingAll;
    /**
     * Get a Workflow List
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param storageSyncServiceName Name of Storage Sync Service resource.
     * @param options The options parameters.
     */
    private _listByStorageSyncService;
    /**
     * Get Workflows resource
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param storageSyncServiceName Name of Storage Sync Service resource.
     * @param workflowId workflow Id
     * @param options The options parameters.
     */
    get(resourceGroupName: string, storageSyncServiceName: string, workflowId: string, options?: WorkflowsGetOptionalParams): Promise<WorkflowsGetResponse>;
    /**
     * Abort the given workflow.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param storageSyncServiceName Name of Storage Sync Service resource.
     * @param workflowId workflow Id
     * @param options The options parameters.
     */
    abort(resourceGroupName: string, storageSyncServiceName: string, workflowId: string, options?: WorkflowsAbortOptionalParams): Promise<WorkflowsAbortResponse>;
}
//# sourceMappingURL=workflows.d.ts.map