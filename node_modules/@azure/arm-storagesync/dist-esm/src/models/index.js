/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
/** Known values of {@link IncomingTrafficPolicy} that the service accepts. */
export var KnownIncomingTrafficPolicy;
(function (KnownIncomingTrafficPolicy) {
    /** AllowAllTraffic */
    KnownIncomingTrafficPolicy["AllowAllTraffic"] = "AllowAllTraffic";
    /** AllowVirtualNetworksOnly */
    KnownIncomingTrafficPolicy["AllowVirtualNetworksOnly"] = "AllowVirtualNetworksOnly";
})(KnownIncomingTrafficPolicy || (KnownIncomingTrafficPolicy = {}));
/** Known values of {@link PrivateEndpointServiceConnectionStatus} that the service accepts. */
export var KnownPrivateEndpointServiceConnectionStatus;
(function (KnownPrivateEndpointServiceConnectionStatus) {
    /** Pending */
    KnownPrivateEndpointServiceConnectionStatus["Pending"] = "Pending";
    /** Approved */
    KnownPrivateEndpointServiceConnectionStatus["Approved"] = "Approved";
    /** Rejected */
    KnownPrivateEndpointServiceConnectionStatus["Rejected"] = "Rejected";
})(KnownPrivateEndpointServiceConnectionStatus || (KnownPrivateEndpointServiceConnectionStatus = {}));
/** Known values of {@link PrivateEndpointConnectionProvisioningState} that the service accepts. */
export var KnownPrivateEndpointConnectionProvisioningState;
(function (KnownPrivateEndpointConnectionProvisioningState) {
    /** Succeeded */
    KnownPrivateEndpointConnectionProvisioningState["Succeeded"] = "Succeeded";
    /** Creating */
    KnownPrivateEndpointConnectionProvisioningState["Creating"] = "Creating";
    /** Deleting */
    KnownPrivateEndpointConnectionProvisioningState["Deleting"] = "Deleting";
    /** Failed */
    KnownPrivateEndpointConnectionProvisioningState["Failed"] = "Failed";
})(KnownPrivateEndpointConnectionProvisioningState || (KnownPrivateEndpointConnectionProvisioningState = {}));
/** Known values of {@link CloudEndpointChangeEnumerationActivityState} that the service accepts. */
export var KnownCloudEndpointChangeEnumerationActivityState;
(function (KnownCloudEndpointChangeEnumerationActivityState) {
    /** InitialEnumerationInProgress */
    KnownCloudEndpointChangeEnumerationActivityState["InitialEnumerationInProgress"] = "InitialEnumerationInProgress";
    /** EnumerationInProgress */
    KnownCloudEndpointChangeEnumerationActivityState["EnumerationInProgress"] = "EnumerationInProgress";
})(KnownCloudEndpointChangeEnumerationActivityState || (KnownCloudEndpointChangeEnumerationActivityState = {}));
/** Known values of {@link CloudEndpointChangeEnumerationTotalCountsState} that the service accepts. */
export var KnownCloudEndpointChangeEnumerationTotalCountsState;
(function (KnownCloudEndpointChangeEnumerationTotalCountsState) {
    /** Calculating */
    KnownCloudEndpointChangeEnumerationTotalCountsState["Calculating"] = "Calculating";
    /** Final */
    KnownCloudEndpointChangeEnumerationTotalCountsState["Final"] = "Final";
})(KnownCloudEndpointChangeEnumerationTotalCountsState || (KnownCloudEndpointChangeEnumerationTotalCountsState = {}));
/** Known values of {@link ChangeDetectionMode} that the service accepts. */
export var KnownChangeDetectionMode;
(function (KnownChangeDetectionMode) {
    /** Default */
    KnownChangeDetectionMode["Default"] = "Default";
    /** Recursive */
    KnownChangeDetectionMode["Recursive"] = "Recursive";
})(KnownChangeDetectionMode || (KnownChangeDetectionMode = {}));
/** Known values of {@link FeatureStatus} that the service accepts. */
export var KnownFeatureStatus;
(function (KnownFeatureStatus) {
    /** On */
    KnownFeatureStatus["On"] = "on";
    /** Off */
    KnownFeatureStatus["Off"] = "off";
})(KnownFeatureStatus || (KnownFeatureStatus = {}));
/** Known values of {@link InitialDownloadPolicy} that the service accepts. */
export var KnownInitialDownloadPolicy;
(function (KnownInitialDownloadPolicy) {
    /** NamespaceOnly */
    KnownInitialDownloadPolicy["NamespaceOnly"] = "NamespaceOnly";
    /** NamespaceThenModifiedFiles */
    KnownInitialDownloadPolicy["NamespaceThenModifiedFiles"] = "NamespaceThenModifiedFiles";
    /** AvoidTieredFiles */
    KnownInitialDownloadPolicy["AvoidTieredFiles"] = "AvoidTieredFiles";
})(KnownInitialDownloadPolicy || (KnownInitialDownloadPolicy = {}));
/** Known values of {@link LocalCacheMode} that the service accepts. */
export var KnownLocalCacheMode;
(function (KnownLocalCacheMode) {
    /** DownloadNewAndModifiedFiles */
    KnownLocalCacheMode["DownloadNewAndModifiedFiles"] = "DownloadNewAndModifiedFiles";
    /** UpdateLocallyCachedFiles */
    KnownLocalCacheMode["UpdateLocallyCachedFiles"] = "UpdateLocallyCachedFiles";
})(KnownLocalCacheMode || (KnownLocalCacheMode = {}));
/** Known values of {@link InitialUploadPolicy} that the service accepts. */
export var KnownInitialUploadPolicy;
(function (KnownInitialUploadPolicy) {
    /** ServerAuthoritative */
    KnownInitialUploadPolicy["ServerAuthoritative"] = "ServerAuthoritative";
    /** Merge */
    KnownInitialUploadPolicy["Merge"] = "Merge";
})(KnownInitialUploadPolicy || (KnownInitialUploadPolicy = {}));
/** Known values of {@link ServerEndpointHealthState} that the service accepts. */
export var KnownServerEndpointHealthState;
(function (KnownServerEndpointHealthState) {
    /** Unavailable */
    KnownServerEndpointHealthState["Unavailable"] = "Unavailable";
    /** Healthy */
    KnownServerEndpointHealthState["Healthy"] = "Healthy";
    /** Error */
    KnownServerEndpointHealthState["Error"] = "Error";
})(KnownServerEndpointHealthState || (KnownServerEndpointHealthState = {}));
/** Known values of {@link ServerEndpointSyncActivityState} that the service accepts. */
export var KnownServerEndpointSyncActivityState;
(function (KnownServerEndpointSyncActivityState) {
    /** Upload */
    KnownServerEndpointSyncActivityState["Upload"] = "Upload";
    /** Download */
    KnownServerEndpointSyncActivityState["Download"] = "Download";
    /** UploadAndDownload */
    KnownServerEndpointSyncActivityState["UploadAndDownload"] = "UploadAndDownload";
})(KnownServerEndpointSyncActivityState || (KnownServerEndpointSyncActivityState = {}));
/** Known values of {@link ServerEndpointSyncMode} that the service accepts. */
export var KnownServerEndpointSyncMode;
(function (KnownServerEndpointSyncMode) {
    /** Regular */
    KnownServerEndpointSyncMode["Regular"] = "Regular";
    /** NamespaceDownload */
    KnownServerEndpointSyncMode["NamespaceDownload"] = "NamespaceDownload";
    /** InitialUpload */
    KnownServerEndpointSyncMode["InitialUpload"] = "InitialUpload";
    /** SnapshotUpload */
    KnownServerEndpointSyncMode["SnapshotUpload"] = "SnapshotUpload";
    /** InitialFullDownload */
    KnownServerEndpointSyncMode["InitialFullDownload"] = "InitialFullDownload";
})(KnownServerEndpointSyncMode || (KnownServerEndpointSyncMode = {}));
/** Known values of {@link ServerEndpointOfflineDataTransferState} that the service accepts. */
export var KnownServerEndpointOfflineDataTransferState;
(function (KnownServerEndpointOfflineDataTransferState) {
    /** InProgress */
    KnownServerEndpointOfflineDataTransferState["InProgress"] = "InProgress";
    /** Stopping */
    KnownServerEndpointOfflineDataTransferState["Stopping"] = "Stopping";
    /** NotRunning */
    KnownServerEndpointOfflineDataTransferState["NotRunning"] = "NotRunning";
    /** Complete */
    KnownServerEndpointOfflineDataTransferState["Complete"] = "Complete";
})(KnownServerEndpointOfflineDataTransferState || (KnownServerEndpointOfflineDataTransferState = {}));
/** Known values of {@link RegisteredServerAgentVersionStatus} that the service accepts. */
export var KnownRegisteredServerAgentVersionStatus;
(function (KnownRegisteredServerAgentVersionStatus) {
    /** Ok */
    KnownRegisteredServerAgentVersionStatus["Ok"] = "Ok";
    /** NearExpiry */
    KnownRegisteredServerAgentVersionStatus["NearExpiry"] = "NearExpiry";
    /** Expired */
    KnownRegisteredServerAgentVersionStatus["Expired"] = "Expired";
    /** Blocked */
    KnownRegisteredServerAgentVersionStatus["Blocked"] = "Blocked";
})(KnownRegisteredServerAgentVersionStatus || (KnownRegisteredServerAgentVersionStatus = {}));
/** Known values of {@link WorkflowStatus} that the service accepts. */
export var KnownWorkflowStatus;
(function (KnownWorkflowStatus) {
    /** Active */
    KnownWorkflowStatus["Active"] = "active";
    /** Expired */
    KnownWorkflowStatus["Expired"] = "expired";
    /** Succeeded */
    KnownWorkflowStatus["Succeeded"] = "succeeded";
    /** Aborted */
    KnownWorkflowStatus["Aborted"] = "aborted";
    /** Failed */
    KnownWorkflowStatus["Failed"] = "failed";
})(KnownWorkflowStatus || (KnownWorkflowStatus = {}));
/** Known values of {@link OperationDirection} that the service accepts. */
export var KnownOperationDirection;
(function (KnownOperationDirection) {
    /** Do */
    KnownOperationDirection["Do"] = "do";
    /** Undo */
    KnownOperationDirection["Undo"] = "undo";
    /** Cancel */
    KnownOperationDirection["Cancel"] = "cancel";
})(KnownOperationDirection || (KnownOperationDirection = {}));
/** Known values of {@link Reason} that the service accepts. */
export var KnownReason;
(function (KnownReason) {
    /** Registered */
    KnownReason["Registered"] = "Registered";
    /** Unregistered */
    KnownReason["Unregistered"] = "Unregistered";
    /** Warned */
    KnownReason["Warned"] = "Warned";
    /** Suspended */
    KnownReason["Suspended"] = "Suspended";
    /** Deleted */
    KnownReason["Deleted"] = "Deleted";
})(KnownReason || (KnownReason = {}));
/** Known values of {@link ProgressType} that the service accepts. */
export var KnownProgressType;
(function (KnownProgressType) {
    /** None */
    KnownProgressType["None"] = "none";
    /** Initialize */
    KnownProgressType["Initialize"] = "initialize";
    /** Download */
    KnownProgressType["Download"] = "download";
    /** Upload */
    KnownProgressType["Upload"] = "upload";
    /** Recall */
    KnownProgressType["Recall"] = "recall";
})(KnownProgressType || (KnownProgressType = {}));
//# sourceMappingURL=index.js.map