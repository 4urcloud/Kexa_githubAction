{"version":3,"file":"index.js","sources":["../src/pagingHelper.ts","../src/models/index.ts","../src/models/mappers.ts","../src/models/parameters.ts","../src/operations/operations.ts","../src/operations/availableSkus.ts","../src/lroImpl.ts","../src/operations/devices.ts","../src/operations/alerts.ts","../src/operations/bandwidthSchedules.ts","../src/operations/diagnosticSettings.ts","../src/operations/jobs.ts","../src/operations/nodes.ts","../src/operations/operationsStatus.ts","../src/operations/orders.ts","../src/operations/roles.ts","../src/operations/addons.ts","../src/operations/monitoringConfig.ts","../src/operations/shares.ts","../src/operations/storageAccountCredentials.ts","../src/operations/storageAccounts.ts","../src/operations/containers.ts","../src/operations/triggers.ts","../src/operations/supportPackages.ts","../src/operations/users.ts","../src/dataBoxEdgeManagementClient.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport interface PageInfo {\n  continuationToken?: string;\n}\n\nconst pageMap = new WeakMap<object, PageInfo>();\n\n/**\n * Given a result page from a pageable operation, returns a\n * continuation token that can be used to begin paging from\n * that point later.\n * @param page A result object from calling .byPage() on a paged operation.\n * @returns The continuation token that can be passed into byPage().\n */\nexport function getContinuationToken(page: unknown): string | undefined {\n  if (typeof page !== \"object\" || page === null) {\n    return undefined;\n  }\n  return pageMap.get(page)?.continuationToken;\n}\n\nexport function setContinuationToken(\n  page: unknown,\n  continuationToken: string | undefined\n): void {\n  if (typeof page !== \"object\" || page === null || !continuationToken) {\n    return;\n  }\n  const pageInfo = pageMap.get(page) ?? {};\n  pageInfo.continuationToken = continuationToken;\n  pageMap.set(page, pageInfo);\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport type RoleUnion =\n  | Role\n  | CloudEdgeManagementRole\n  | IoTRole\n  | KubernetesRole\n  | MECRole;\nexport type AddonUnion = Addon | ArcAddon | IoTAddon;\nexport type TriggerUnion =\n  | Trigger\n  | FileEventTrigger\n  | PeriodicTimerEventTrigger;\n\n/** The list of operations used for the discovery of available provider operations. */\nexport interface OperationsList {\n  /** The value. */\n  value: Operation[];\n  /** Link to the next set of results. */\n  nextLink?: string;\n}\n\n/** Operations. */\nexport interface Operation {\n  /** Name of the operation. */\n  name?: string;\n  /** Is data action. */\n  isDataAction?: boolean;\n  /** Properties displayed for the operation. */\n  display?: OperationDisplay;\n  /** Origin of the operation. */\n  origin?: string;\n  /** Service specification. */\n  serviceSpecification?: ServiceSpecification;\n}\n\n/** Operation display properties. */\nexport interface OperationDisplay {\n  /** Provider name. */\n  provider?: string;\n  /** The type of resource in which the operation is performed. */\n  resource?: string;\n  /** Operation to be performed on the resource. */\n  operation?: string;\n  /** Description of the operation to be performed. */\n  description?: string;\n}\n\n/** Service specification. */\nexport interface ServiceSpecification {\n  /** Metric specification as defined by shoebox. */\n  metricSpecifications?: MetricSpecificationV1[];\n}\n\n/** Metric specification version 1. */\nexport interface MetricSpecificationV1 {\n  /** Name of the metric. */\n  name?: string;\n  /** Display name of the metric. */\n  displayName?: string;\n  /** Description of the metric to be displayed. */\n  displayDescription?: string;\n  /** Metric units. */\n  unit?: MetricUnit;\n  /** Metric aggregation type. */\n  aggregationType?: MetricAggregationType;\n  /** Metric dimensions, other than default dimension which is resource. */\n  dimensions?: MetricDimensionV1[];\n  /** Set true to fill the gaps with zero. */\n  fillGapWithZero?: boolean;\n  /** Metric category. */\n  category?: MetricCategory;\n  /** Resource name override. */\n  resourceIdDimensionNameOverride?: string;\n  /** Support granularity of metrics. */\n  supportedTimeGrainTypes?: TimeGrain[];\n  /** Support metric aggregation type. */\n  supportedAggregationTypes?: MetricAggregationType[];\n}\n\n/** Metric Dimension v1. */\nexport interface MetricDimensionV1 {\n  /** Name of the metrics dimension. */\n  name?: string;\n  /** Display name of the metrics dimension. */\n  displayName?: string;\n  /** To be exported to shoe box. */\n  toBeExportedForShoebox?: boolean;\n}\n\n/** An error response from the service. */\nexport interface CloudError {\n  /** The error details. */\n  error?: CloudErrorBody;\n}\n\n/** An error response from the service. */\nexport interface CloudErrorBody {\n  /** An identifier for the error. Codes are invariant and are intended to be consumed programmatically. */\n  code?: string;\n  /** A message describing the error, intended to be suitable for display in a user interface. */\n  message?: string;\n  /** A list of additional details about the error. */\n  details?: CloudErrorBody[];\n}\n\n/** List of SKU Information objects. */\nexport interface DataBoxEdgeSkuList {\n  /**\n   * List of ResourceType Sku\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: DataBoxEdgeSku[];\n  /**\n   * Links to the next set of results\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The Sku information. */\nexport interface DataBoxEdgeSku {\n  /**\n   * The type of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceType?: string;\n  /**\n   * The Sku name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: SkuName;\n  /**\n   * The Sku kind.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly kind?: string;\n  /**\n   * The Sku tier.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tier?: SkuTier;\n  /**\n   * The Sku kind.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly size?: string;\n  /**\n   * The Sku family.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly family?: string;\n  /**\n   * Availability of the Sku for the region.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly locations?: string[];\n  /**\n   * The API versions in which Sku is available.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly apiVersions?: string[];\n  /**\n   * Availability of the Sku for the location/zone/site.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly locationInfo?: SkuLocationInfo[];\n  /**\n   * The pricing info of the Sku.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly costs?: SkuCost[];\n  /**\n   * Sku can be signed up by customer or not.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly signupOption?: SkuSignupOption;\n  /**\n   * Availability of the Sku as preview/stable.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly version?: SkuVersion;\n  /**\n   * Links to the next set of results\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly availability?: SkuAvailability;\n  /**\n   * List of Shipment Types supported by this SKU\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly shipmentTypes?: ShipmentType[];\n  /**\n   * The capability info of the SKU.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly capabilities?: SkuCapability[];\n}\n\n/** The location info. */\nexport interface SkuLocationInfo {\n  /**\n   * The location.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly location?: string;\n  /**\n   * The zones.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly zones?: string[];\n  /**\n   * The sites.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sites?: string[];\n}\n\n/** The metadata for retrieving price info. */\nexport interface SkuCost {\n  /**\n   * Used for querying price from commerce.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly meterId?: string;\n  /**\n   * The cost quantity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly quantity?: number;\n  /**\n   * The extended unit.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly extendedUnit?: string;\n}\n\n/** The metadata to describe the capability. */\nexport interface SkuCapability {\n  /**\n   * An invariant to describe the feature.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * An invariant if the feature is measured by quantity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: string;\n}\n\n/** The collection of Data Box Edge/Gateway devices. */\nexport interface DataBoxEdgeDeviceList {\n  /**\n   * The list of Data Box Edge/Gateway devices.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: DataBoxEdgeDevice[];\n  /**\n   * Link to the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The SKU type. */\nexport interface Sku {\n  /** SKU name. */\n  name?: SkuName;\n  /** The SKU tier. This is based on the SKU name. */\n  tier?: SkuTier;\n}\n\n/** Msi identity details of the resource */\nexport interface ResourceIdentity {\n  /** Identity type */\n  type?: MsiIdentityType;\n  /**\n   * Service Principal Id backing the Msi\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly principalId?: string;\n  /**\n   * Home Tenant Id\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantId?: string;\n}\n\n/** Metadata pertaining to creation and last modification of the resource. */\nexport interface SystemData {\n  /** The identity that created the resource. */\n  createdBy?: string;\n  /** The type of identity that created the resource. */\n  createdByType?: CreatedByType;\n  /** The timestamp of resource creation (UTC). */\n  createdAt?: Date;\n  /** The identity that last modified the resource. */\n  lastModifiedBy?: string;\n  /** The type of identity that last modified the resource. */\n  lastModifiedByType?: CreatedByType;\n  /** The type of identity that last modified the resource. */\n  lastModifiedAt?: Date;\n}\n\n/** Fields for tracking resource move */\nexport interface ResourceMoveDetails {\n  /** Denotes whether move operation is in progress */\n  operationInProgress?: ResourceMoveStatus;\n  /** Denotes the timeout of the operation to finish */\n  operationInProgressLockTimeoutInUTC?: Date;\n}\n\n/** Details about Edge Profile for the resource */\nexport interface EdgeProfile {\n  /** Edge Profile Subscription */\n  subscription?: EdgeProfileSubscription;\n}\n\n/** Subscription details for the Edge Profile */\nexport interface EdgeProfileSubscription {\n  /** Edge Subscription Registration ID */\n  registrationId?: string;\n  /** ARM ID of the subscription */\n  id?: string;\n  state?: SubscriptionState;\n  registrationDate?: string;\n  subscriptionId?: string;\n  tenantId?: string;\n  locationPlacementId?: string;\n  quotaId?: string;\n  serializedDetails?: string;\n  registeredFeatures?: SubscriptionRegisteredFeatures[];\n}\n\nexport interface SubscriptionRegisteredFeatures {\n  name?: string;\n  state?: string;\n}\n\n/** Wraps data-residency related information for edge-resource and this should be used with ARM layer. */\nexport interface DataResidency {\n  /** DataResidencyType enum */\n  type?: DataResidencyType;\n}\n\n/** Represents the base class for all object models. */\nexport interface ARMBaseModel {\n  /**\n   * The path ID that uniquely identifies the object.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The object name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The hierarchical type of the object.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n}\n\n/** The Data Box Edge/Gateway device patch. */\nexport interface DataBoxEdgeDevicePatch {\n  /** The tags attached to the Data Box Edge/Gateway resource. */\n  tags?: { [propertyName: string]: string };\n  /** Msi identity of the resource */\n  identity?: ResourceIdentity;\n  /** Edge Profile property of the Data Box Edge/Gateway device */\n  edgeProfile?: EdgeProfilePatch;\n}\n\n/** The Data Box Edge/Gateway Edge Profile patch. */\nexport interface EdgeProfilePatch {\n  /** The Data Box Edge/Gateway Edge Profile Subscription patch */\n  subscription?: EdgeProfileSubscriptionPatch;\n}\n\n/** The Data Box Edge/Gateway Edge Profile Subscription patch. */\nexport interface EdgeProfileSubscriptionPatch {\n  /** The path ID that uniquely identifies the subscription of the edge profile. */\n  id?: string;\n}\n\n/** Collection of alerts. */\nexport interface AlertList {\n  /**\n   * The value.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: Alert[];\n  /**\n   * Link to the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Error details for the alert. */\nexport interface AlertErrorDetails {\n  /**\n   * Error code.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly errorCode?: string;\n  /**\n   * Error Message.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly errorMessage?: string;\n  /**\n   * Number of occurrences.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly occurrences?: number;\n}\n\n/** The collection of bandwidth schedules. */\nexport interface BandwidthSchedulesList {\n  /**\n   * The list of bandwidth schedules.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: BandwidthSchedule[];\n  /**\n   * Link to the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** RemoteApplicationType for which remote support settings is being modified */\nexport interface RemoteSupportSettings {\n  /** Remote application type */\n  remoteApplicationType?: RemoteApplicationType;\n  /** Access level allowed for this remote application type */\n  accessLevel?: AccessLevel;\n  /** Expiration time stamp */\n  expirationTimeStampInUTC?: Date;\n}\n\n/** Used in activation key generation flow. */\nexport interface GenerateCertResponse {\n  /**\n   * Gets or sets base64 encoded certificate raw data,\n   * this is the public part needed to be uploaded to cert vault\n   */\n  publicKey?: string;\n  /**\n   * Gets or sets base64 encoded private part of the certificate,\n   * needed to form the activation key\n   */\n  privateKey?: string;\n  /** Gets or sets expiry time in UTC */\n  expiryTimeInUTC?: string;\n}\n\n/** Holds device secret either as a KeyVault reference or as an encrypted value. */\nexport interface Secret {\n  /** Encrypted (using device public key) secret value. */\n  encryptedSecret?: AsymmetricEncryptedSecret;\n  /** Id of the Key-Vault where secret is stored (ex: secrets/AuthClientSecret/82ef4346187a4033a10d629cde07d740). */\n  keyVaultId?: string;\n}\n\n/** Represent the secrets intended for encryption with asymmetric key pair. */\nexport interface AsymmetricEncryptedSecret {\n  /** The value of the secret. */\n  value: string;\n  /** Thumbprint certificate used to encrypt \\\"Value\\\". If the value is unencrypted, it will be null. */\n  encryptionCertThumbprint?: string;\n  /** The algorithm used to encrypt \"Value\". */\n  encryptionAlgorithm: EncryptionAlgorithm;\n}\n\n/** A device job. */\nexport interface Job {\n  /**\n   * The path ID that uniquely identifies the object.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The name of the object.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The hierarchical type of the object.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * The current status of the job.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: JobStatus;\n  /**\n   * The UTC date and time at which the job started.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly startTime?: Date;\n  /**\n   * The UTC date and time at which the job completed.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly endTime?: Date;\n  /**\n   * The percentage of the job that is complete.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly percentComplete?: number;\n  /**\n   * The error details.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly error?: JobErrorDetails;\n  /**\n   * The type of the job.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly jobType?: JobType;\n  /**\n   * Current stage of the update operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currentStage?: UpdateOperationStage;\n  /**\n   * The download progress.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly downloadProgress?: UpdateDownloadProgress;\n  /**\n   * The install progress.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly installProgress?: UpdateInstallProgress;\n  /**\n   * Total number of errors encountered during the refresh process.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly totalRefreshErrors?: number;\n  /**\n   * Local share/remote container relative path to the error manifest file of the refresh.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly errorManifestFile?: string;\n  /**\n   * ARM ID of the entity that was refreshed.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly refreshedEntityId?: string;\n  /** If only subfolders need to be refreshed, then the subfolder path inside the share or container. (The path is empty if there are no subfolders.) */\n  folder?: string;\n}\n\n/** The job error information containing the list of job errors. */\nexport interface JobErrorDetails {\n  /**\n   * The error details.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly errorDetails?: JobErrorItem[];\n  /**\n   * The code intended for programmatic access.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly code?: string;\n  /**\n   * The message that describes the error in detail.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n}\n\n/** The job error items. */\nexport interface JobErrorItem {\n  /**\n   * The recommended actions.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly recommendations?: string[];\n  /**\n   * The code intended for programmatic access.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly code?: string;\n  /**\n   * The message that describes the error in detail.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n}\n\n/** Details about the download progress of update. */\nexport interface UpdateDownloadProgress {\n  /**\n   * The download phase.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly downloadPhase?: DownloadPhase;\n  /**\n   * Percentage of completion.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly percentComplete?: number;\n  /**\n   * Total bytes to download.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly totalBytesToDownload?: number;\n  /**\n   * Total bytes downloaded.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly totalBytesDownloaded?: number;\n  /**\n   * Number of updates to download.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly numberOfUpdatesToDownload?: number;\n  /**\n   * Number of updates downloaded.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly numberOfUpdatesDownloaded?: number;\n}\n\n/** Progress details during installation of updates. */\nexport interface UpdateInstallProgress {\n  /**\n   * Percentage completed.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly percentComplete?: number;\n  /**\n   * Number of updates to install.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly numberOfUpdatesToInstall?: number;\n  /**\n   * Number of updates installed.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly numberOfUpdatesInstalled?: number;\n}\n\n/** Represents the networkAdapter on a device. */\nexport interface NetworkAdapter {\n  /**\n   * Instance ID of network adapter.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly adapterId?: string;\n  /**\n   * Hardware position of network adapter.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly adapterPosition?: NetworkAdapterPosition;\n  /**\n   * Logical index of the adapter.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly index?: number;\n  /**\n   * Node ID of the network adapter.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nodeId?: string;\n  /**\n   * Network adapter name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly networkAdapterName?: string;\n  /**\n   * Hardware label for the adapter.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly label?: string;\n  /**\n   * MAC address.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly macAddress?: string;\n  /**\n   * Link speed.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly linkSpeed?: number;\n  /**\n   * Value indicating whether this adapter is valid.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: NetworkAdapterStatus;\n  /** Value indicating whether this adapter is RDMA capable. */\n  rdmaStatus?: NetworkAdapterRdmaStatus;\n  /** Value indicating whether this adapter has DHCP enabled. */\n  dhcpStatus?: NetworkAdapterDhcpStatus;\n  /**\n   * The IPv4 configuration of the network adapter.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly ipv4Configuration?: Ipv4Config;\n  /**\n   * The IPv6 configuration of the network adapter.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly ipv6Configuration?: Ipv6Config;\n  /**\n   * The IPv6 local address.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly ipv6LinkLocalAddress?: string;\n  /**\n   * The list of DNS Servers of the device.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly dnsServers?: string[];\n}\n\n/** The network adapter position. */\nexport interface NetworkAdapterPosition {\n  /**\n   * The network group.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly networkGroup?: NetworkGroup;\n  /**\n   * The port.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly port?: number;\n}\n\n/** Details related to the IPv4 address configuration. */\nexport interface Ipv4Config {\n  /**\n   * The IPv4 address of the network adapter.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly ipAddress?: string;\n  /**\n   * The IPv4 subnet of the network adapter.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly subnet?: string;\n  /**\n   * The IPv4 gateway of the network adapter.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly gateway?: string;\n}\n\n/** Details related to the IPv6 address configuration. */\nexport interface Ipv6Config {\n  /**\n   * The IPv6 address of the network adapter.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly ipAddress?: string;\n  /**\n   * The IPv6 prefix of the network adapter.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly prefixLength?: number;\n  /**\n   * The IPv6 gateway of the network adapter.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly gateway?: string;\n}\n\n/** Collection of Nodes. */\nexport interface NodeList {\n  /**\n   * The list of Nodes.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: Node[];\n  /**\n   * Link to the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** List of order entities. */\nexport interface OrderList {\n  /**\n   * The list of orders.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: Order[];\n  /**\n   * Link to the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Contains all the contact details of the customer. */\nexport interface ContactDetails {\n  /** The contact person name. */\n  contactPerson: string;\n  /** The name of the company. */\n  companyName: string;\n  /** The phone number. */\n  phone: string;\n  /** The email list. */\n  emailList: string[];\n}\n\n/** The shipping address of the customer. */\nexport interface Address {\n  /** The address line1. */\n  addressLine1?: string;\n  /** The address line2. */\n  addressLine2?: string;\n  /** The address line3. */\n  addressLine3?: string;\n  /** The postal code. */\n  postalCode?: string;\n  /** The city name. */\n  city?: string;\n  /** The state name. */\n  state?: string;\n  /** The country name. */\n  country: string;\n}\n\n/** Represents a single status change. */\nexport interface OrderStatus {\n  /** Status of the order as per the allowed status types. */\n  status: OrderState;\n  /**\n   * Time of status update.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly updateDateTime?: Date;\n  /** Comments related to this status change. */\n  comments?: string;\n  /**\n   * Tracking information related to the state in the ordering flow\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly trackingInformation?: TrackingInfo;\n  /**\n   * Dictionary to hold generic information which is not stored\n   * by the already existing properties\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly additionalOrderDetails?: { [propertyName: string]: string };\n}\n\n/** Tracking courier information. */\nexport interface TrackingInfo {\n  /** Serial number of the device being tracked. */\n  serialNumber?: string;\n  /** Name of the carrier used in the delivery. */\n  carrierName?: string;\n  /** Tracking ID of the shipment. */\n  trackingId?: string;\n  /** Tracking URL of the shipment. */\n  trackingUrl?: string;\n}\n\n/** DC Access code in the case of Self Managed Shipping. */\nexport interface DCAccessCode {\n  /** DCAccess Code for the Self Managed shipment. */\n  authCode?: string;\n}\n\n/** Collection of all the roles on the Data Box Edge device. */\nexport interface RoleList {\n  /**\n   * The Value.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: RoleUnion[];\n  /**\n   * Link to the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Collection of all the Role addon on the Azure Stack Edge device. */\nexport interface AddonList {\n  /**\n   * The Value.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: AddonUnion[];\n  /**\n   * Link to the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Collection of metric configurations. */\nexport interface MonitoringMetricConfigurationList {\n  /**\n   * The list of metric configurations.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: MonitoringMetricConfiguration[];\n  /**\n   * Link to the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Metric configuration. */\nexport interface MetricConfiguration {\n  /** The Resource ID on which the metrics should be pushed. */\n  resourceId: string;\n  /** The MDM account to which the counters should be pushed. */\n  mdmAccount?: string;\n  /** The MDM namespace to which the counters should be pushed. This is required if MDMAccount is specified */\n  metricNameSpace?: string;\n  /** Host name for the IoT hub associated to the device. */\n  counterSets: MetricCounterSet[];\n}\n\n/** The metric counter set */\nexport interface MetricCounterSet {\n  /** The counters that should be collected in this set. */\n  counters: MetricCounter[];\n}\n\n/** The metric counter */\nexport interface MetricCounter {\n  /** The counter name. */\n  name: string;\n  /** The instance from which counter should be collected. */\n  instance?: string;\n  /** The dimension filter. */\n  dimensionFilter?: MetricDimension[];\n  /** The additional dimensions to be added to metric. */\n  additionalDimensions?: MetricDimension[];\n}\n\n/** The metric dimension */\nexport interface MetricDimension {\n  /** The dimension type. */\n  sourceType: string;\n  /** The dimension value. */\n  sourceName: string;\n}\n\n/** Collection of all the shares on the Data Box Edge/Gateway device. */\nexport interface ShareList {\n  /**\n   * The list of shares.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: Share[];\n  /**\n   * Link to the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Azure container mapping of the endpoint. */\nexport interface AzureContainerInfo {\n  /** ID of the storage account credential used to access storage. */\n  storageAccountCredentialId: string;\n  /** Container name (Based on the data format specified, this represents the name of Azure Files/Page blob/Block blob). */\n  containerName: string;\n  /** Storage format used for the file represented by the share. */\n  dataFormat: AzureContainerDataFormat;\n}\n\n/** The mapping between a particular user and the access type on the SMB share. */\nexport interface UserAccessRight {\n  /** User ID (already existing in the device). */\n  userId: string;\n  /** Type of access to be allowed for the user. */\n  accessType: ShareAccessType;\n}\n\n/** The mapping between a particular client IP and the type of access client has on the NFS share. */\nexport interface ClientAccessRight {\n  /** IP of the client. */\n  client: string;\n  /** Type of access to be allowed for the client. */\n  accessPermission: ClientPermissionType;\n}\n\n/** Fields for tracking refresh job on the share or container. */\nexport interface RefreshDetails {\n  /** If a refresh job is currently in progress on this share or container, this field indicates the ARM resource ID of that job. The field is empty if no job is in progress. */\n  inProgressRefreshJobId?: string;\n  /** Indicates the completed time for the last refresh job on this particular share or container, if any.This could be a failed job or a successful job. */\n  lastCompletedRefreshJobTimeInUTC?: Date;\n  /** Indicates the relative path of the error xml for the last refresh job on this particular share or container, if any. This could be a failed job or a successful job. */\n  errorManifestFile?: string;\n  /** Indicates the id of the last refresh job on this particular share or container,if any. This could be a failed job or a successful job. */\n  lastJob?: string;\n}\n\n/** The share mount point. */\nexport interface MountPointMap {\n  /** ID of the share mounted to the role VM. */\n  shareId: string;\n  /**\n   * ID of the role to which share is mounted.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly roleId?: string;\n  /**\n   * Mount point for the share.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly mountPoint?: string;\n  /**\n   * Mounting type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly mountType?: MountType;\n  /**\n   * Role type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly roleType?: RoleTypes;\n}\n\n/** The collection of storage account credentials. */\nexport interface StorageAccountCredentialList {\n  /**\n   * The value.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: StorageAccountCredential[];\n  /**\n   * Link to the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Collection of all the Storage Accounts on the Data Box Edge/Gateway device. */\nexport interface StorageAccountList {\n  /**\n   * The list of storageAccounts.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: StorageAccount[];\n  /**\n   * Link to the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Collection of all the containers on the Data Box Edge/Gateway device. */\nexport interface ContainerList {\n  /**\n   * The list of containers.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: Container[];\n  /**\n   * Link to the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Collection of all trigger on the data box edge device. */\nexport interface TriggerList {\n  /**\n   * The list of triggers.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: TriggerUnion[];\n  /**\n   * Link to the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The Data Box Edge/Gateway device extended info patch. */\nexport interface DataBoxEdgeDeviceExtendedInfoPatch {\n  /** The Key Vault ARM Id for client secrets */\n  clientSecretStoreId?: string;\n  /** The url to access the Client Key Vault */\n  clientSecretStoreUrl?: string;\n  /** The name for Channel Integrity Key stored in the Client Key Vault */\n  channelIntegrityKeyName?: string;\n  /** The version of Channel Integrity Key stored in the Client Key Vault */\n  channelIntegrityKeyVersion?: string;\n  /** For changing or to initiate the resync to key-vault set the status to KeyVaultSyncPending, rest of the status will not be applicable. */\n  syncStatus?: KeyVaultSyncStatus;\n}\n\n/** Update Specific attributes */\nexport interface UpdateDetails {\n  /** Title of the Update */\n  updateTitle?: string;\n  /** Size of the update(In Bytes) */\n  updateSize?: number;\n  /** Type of the Update */\n  updateType?: UpdateType;\n  /** Target Version number */\n  targetVersion?: string;\n  /** Friendly Version Number */\n  friendlyVersionNumber?: string;\n  /** Estimated Install Time for the update */\n  estimatedInstallTimeInMins?: number;\n  /** Indicates if updates are available and at least one of the updates needs a reboot. */\n  rebootBehavior?: InstallRebootBehavior;\n  /** Impact of Installing an updateType */\n  installationImpact?: InstallationImpact;\n  /** Status of the update. */\n  status?: UpdateStatus;\n}\n\n/** The upload certificate request. */\nexport interface UploadCertificateRequest {\n  /** The authentication type. */\n  authenticationType?: AuthenticationType;\n  /** The base64 encoded certificate raw data. */\n  certificate: string;\n}\n\n/** The upload registration certificate response. */\nexport interface UploadCertificateResponse {\n  /** Specifies authentication type. */\n  authType?: AuthenticationType;\n  /**\n   * The resource ID of the Data Box Edge/Gateway device.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceId?: string;\n  /**\n   * Azure Active Directory tenant authority.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly aadAuthority?: string;\n  /**\n   * Azure Active Directory tenant ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly aadTenantId?: string;\n  /**\n   * Azure Active Directory service principal client ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly servicePrincipalClientId?: string;\n  /**\n   * Azure Active Directory service principal object ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly servicePrincipalObjectId?: string;\n  /**\n   * The azure management endpoint audience.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly azureManagementEndpointAudience?: string;\n  /**\n   * Identifier of the target resource that is the recipient of the requested token.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly aadAudience?: string;\n}\n\n/** Collection of users. */\nexport interface UserList {\n  /**\n   * The list of users.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: User[];\n  /**\n   * Link to the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Specifies the mapping between this particular user and the type of access he has on shares on this device. */\nexport interface ShareAccessRight {\n  /** The share ID. */\n  shareId: string;\n  /** Type of access to be allowed on the share for this user. */\n  accessType: ShareAccessType;\n}\n\n/** Authentication mechanism for IoT devices. */\nexport interface Authentication {\n  /** Symmetric key for authentication. */\n  symmetricKey?: SymmetricKey;\n}\n\n/** Symmetric key for authentication. */\nexport interface SymmetricKey {\n  /** Connection string based on the symmetric key. */\n  connectionString?: AsymmetricEncryptedSecret;\n}\n\n/** Cni configuration */\nexport interface CniConfig {\n  /**\n   * Cni type\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * Cni version\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly version?: string;\n  /**\n   * Pod Subnet\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly podSubnet?: string;\n  /**\n   * Service subnet\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly serviceSubnet?: string;\n}\n\n/** Compute infrastructure Resource */\nexport interface ComputeResource {\n  /** Processor count */\n  processorCount: number;\n  /** Memory in GB */\n  memoryInGB: number;\n}\n\n/** Resource Move details */\nexport interface DataBoxEdgeMoveRequest {\n  /** Target resource group ARMId */\n  targetResourceGroup: string;\n  /** List of resources to be moved */\n  resources: string[];\n}\n\n/** Etcd configuration */\nexport interface EtcdInfo {\n  /**\n   * Etcd type\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * Etcd version\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly version?: string;\n}\n\n/** File source details. */\nexport interface FileSourceInfo {\n  /** File share ID. */\n  shareId: string;\n}\n\n/** Compute role against which events will be raised. */\nexport interface RoleSinkInfo {\n  /** Compute role ID. */\n  roleId: string;\n}\n\n/** Image repository credential. */\nexport interface ImageRepositoryCredential {\n  /** Image repository url (e.g.: mcr.microsoft.com). */\n  imageRepositoryUrl: string;\n  /** Repository user name. */\n  userName: string;\n  /** Repository user password. */\n  password?: AsymmetricEncryptedSecret;\n}\n\n/** Metadata of IoT device/IoT Edge device to be configured. */\nexport interface IoTDeviceInfo {\n  /** ID of the IoT device/edge device. */\n  deviceId: string;\n  /** Host name for the IoT hub associated to the device. */\n  ioTHostHub: string;\n  /** Id for the IoT hub associated to the device. */\n  ioTHostHubId?: string;\n  /** Encrypted IoT device/IoT edge device connection string. */\n  authentication?: Authentication;\n}\n\n/** IoT edge agent details is optional, this will be used for download system Agent module while bootstrapping IoT Role if specified. */\nexport interface IoTEdgeAgentInfo {\n  /** Name of the IoT edge agent image. */\n  imageName: string;\n  /** Image Tag. */\n  tag: string;\n  /** Image repository details. */\n  imageRepository?: ImageRepositoryCredential;\n}\n\n/** Kubernetes cluster configuration */\nexport interface KubernetesClusterInfo {\n  /**\n   * Etcd configuration\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etcdInfo?: EtcdInfo;\n  /**\n   * Kubernetes cluster nodes\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nodes?: NodeInfo[];\n  /** Kubernetes cluster version */\n  version: string;\n}\n\n/** Kubernetes node info */\nexport interface NodeInfo {\n  /**\n   * Node name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Node type - Master/Worker\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: KubernetesNodeType;\n  /** IP Configuration of the Kubernetes node. */\n  ipConfiguration?: KubernetesIPConfiguration[];\n}\n\n/** Kubernetes node IP configuration */\nexport interface KubernetesIPConfiguration {\n  /**\n   * Port of the Kubernetes node.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly port?: string;\n  /** IP address of the Kubernetes node. */\n  ipAddress?: string;\n}\n\n/** Kubernetes role resources */\nexport interface KubernetesRoleResources {\n  /** Kubernetes role storage resource */\n  storage?: KubernetesRoleStorage;\n  /** Kubernetes role compute resource */\n  compute: KubernetesRoleCompute;\n  /**\n   * Kubernetes role network resource\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly network?: KubernetesRoleNetwork;\n}\n\n/** Kubernetes role storage resource */\nexport interface KubernetesRoleStorage {\n  /**\n   * Kubernetes storage class info.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly storageClasses?: KubernetesRoleStorageClassInfo[];\n  /** Mount points of shares in role(s). */\n  endpoints?: MountPointMap[];\n}\n\n/** Kubernetes storage class info. */\nexport interface KubernetesRoleStorageClassInfo {\n  /**\n   * Storage class name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Storage class type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * If provisioned storage is posix compliant.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly posixCompliant?: PosixComplianceStatus;\n}\n\n/** Kubernetes role compute resource */\nexport interface KubernetesRoleCompute {\n  /** VM profile */\n  vmProfile: string;\n  /**\n   * Memory in bytes\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly memoryInBytes?: number;\n  /**\n   * Processor count\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly processorCount?: number;\n}\n\n/** Kubernetes role network resource */\nexport interface KubernetesRoleNetwork {\n  /**\n   * Cni configuration\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly cniConfig?: CniConfig;\n  /**\n   * Load balancer configuration\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly loadBalancerConfig?: LoadBalancerConfig;\n}\n\n/** Load balancer configuration */\nexport interface LoadBalancerConfig {\n  /**\n   * Load balancer type\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * Load balancer version\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly version?: string;\n}\n\n/** Periodic timer event source. */\nexport interface PeriodicTimerSourceInfo {\n  /** The time of the day that results in a valid trigger. Schedule is computed with reference to the time specified upto seconds. If timezone is not specified the time will considered to be in device timezone. The value will always be returned as UTC time. */\n  startTime: Date;\n  /** Periodic frequency at which timer event needs to be raised. Supports daily, hourly, minutes, and seconds. */\n  schedule: string;\n  /** Topic where periodic events are published to IoT device. */\n  topic?: string;\n}\n\n/** Resource type Sku object */\nexport interface ResourceTypeSku {\n  /**\n   * The resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceType?: string;\n  /**\n   * The skus.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly skus?: SkuInformation[];\n}\n\n/** Sku information */\nexport interface SkuInformation {\n  /**\n   * The sku name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The sku tier.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tier?: string;\n  /**\n   * The sku kind.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly kind?: string;\n  /**\n   * The Sku family.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly family?: string;\n  /**\n   * The pricing info of the Sku.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly costs?: SkuCost[];\n  /**\n   * The locations where Sku is available.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly locations?: string[];\n  /**\n   * The locations where Sku is available with zones and sites info\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly locationInfo?: SkuLocationInfo[];\n  /**\n   * The required quotaIds for the sku to be available.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly requiredQuotaIds?: string[];\n  /**\n   * The required features for the sku to be available.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly requiredFeatures?: string[];\n}\n\n/** List of SKU Information objects */\nexport interface SkuInformationList {\n  /**\n   * List of ResourceTypeSku objects\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ResourceTypeSku[];\n  /**\n   * Links to the next set of results\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The Data Box Edge/Gateway device. */\nexport interface DataBoxEdgeDevice extends ARMBaseModel {\n  /** The location of the device. This is a supported and registered Azure geographical region (for example, West US, East US, or Southeast Asia). The geographical region of a device cannot be changed once it is created, but if an identical geographical region is specified on update, the request will succeed. */\n  location: string;\n  /** The list of tags that describe the device. These tags can be used to view and group this device (across resource groups). */\n  tags?: { [propertyName: string]: string };\n  /** The SKU type. */\n  sku?: Sku;\n  /** The etag for the devices. */\n  etag?: string;\n  /** Msi identity of the resource */\n  identity?: ResourceIdentity;\n  /** The kind of the device. */\n  kind?: DataBoxEdgeDeviceKind;\n  /**\n   * DataBoxEdge Resource\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n  /**\n   * DataBoxEdge Device Properties\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemDataPropertiesSystemData?: SystemData;\n  /** The status of the Data Box Edge/Gateway device. */\n  dataBoxEdgeDeviceStatus?: DataBoxEdgeDeviceStatus;\n  /**\n   * The Serial Number of Data Box Edge/Gateway device.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly serialNumber?: string;\n  /**\n   * The Description of the Data Box Edge/Gateway device.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly description?: string;\n  /**\n   * The description of the Data Box Edge/Gateway device model.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly modelDescription?: string;\n  /**\n   * The type of the Data Box Edge/Gateway device.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly deviceType?: DeviceType;\n  /**\n   * The Data Box Edge/Gateway device name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly friendlyName?: string;\n  /**\n   * The Data Box Edge/Gateway device culture.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly culture?: string;\n  /**\n   * The Data Box Edge/Gateway device model.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly deviceModel?: string;\n  /**\n   * The Data Box Edge/Gateway device software version.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly deviceSoftwareVersion?: string;\n  /**\n   * The Data Box Edge/Gateway device local capacity in MB.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly deviceLocalCapacity?: number;\n  /**\n   * The Data Box Edge/Gateway device timezone.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly timeZone?: string;\n  /**\n   * The device software version number of the device (eg: 1.2.18105.6).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly deviceHcsVersion?: string;\n  /**\n   * Type of compute roles configured.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly configuredRoleTypes?: RoleTypes[];\n  /**\n   * The number of nodes in the cluster.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nodeCount?: number;\n  /**\n   * The details of the move operation on this resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceMoveDetails?: ResourceMoveDetails;\n  /**\n   * The details of Edge Profile for this resource\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly edgeProfile?: EdgeProfile;\n  /** The details of data-residency related properties for this resource */\n  dataResidency?: DataResidency;\n}\n\n/** Alert on the data box edge/gateway device. */\nexport interface Alert extends ARMBaseModel {\n  /**\n   * Alert generated in the resource\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n  /**\n   * Alert title.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly title?: string;\n  /**\n   * Alert type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly alertType?: string;\n  /**\n   * UTC time when the alert appeared.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly appearedAtDateTime?: Date;\n  /**\n   * Alert recommendation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly recommendation?: string;\n  /**\n   * Severity of the alert.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly severity?: AlertSeverity;\n  /**\n   * Error details of the alert.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly errorDetails?: AlertErrorDetails;\n  /**\n   * Alert details.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly detailedInformation?: { [propertyName: string]: string };\n}\n\n/** The bandwidth schedule details. */\nexport interface BandwidthSchedule extends ARMBaseModel {\n  /**\n   * Bandwidth object related to ASE resource\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n  /** The start time of the schedule in UTC. */\n  start: string;\n  /** The stop time of the schedule in UTC. */\n  stop: string;\n  /** The bandwidth rate in Mbps. */\n  rateInMbps: number;\n  /** The days of the week when this schedule is applicable. */\n  days: DayOfWeek[];\n}\n\n/** The diagnostic proactive log collection settings of a device. */\nexport interface DiagnosticProactiveLogCollectionSettings extends ARMBaseModel {\n  /**\n   * DiagnosticProactiveLogCollectionSettings\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n  /** Proactive diagnostic collection consent flag */\n  userConsent: ProactiveDiagnosticsConsent;\n}\n\n/** The remote support settings of a device. */\nexport interface DiagnosticRemoteSupportSettings extends ARMBaseModel {\n  /**\n   * DiagnosticRemoteSupportSettings\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n  /** Remote support settings list according to the RemoteApplicationType */\n  remoteSupportSettingsList?: RemoteSupportSettings[];\n}\n\n/** The extended Info of the Data Box Edge/Gateway device. */\nexport interface DataBoxEdgeDeviceExtendedInfo extends ARMBaseModel {\n  /** The digital signature of encrypted certificate. */\n  encryptionKeyThumbprint?: string;\n  /** The public part of the encryption certificate. Client uses this to encrypt any secret. */\n  encryptionKey?: string;\n  /**\n   * The Resource ID of the Resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceKey?: string;\n  /** The Key Vault ARM Id for client secrets */\n  clientSecretStoreId?: string;\n  /** The url to access the Client Key Vault */\n  clientSecretStoreUrl?: string;\n  /** The name of Channel Integrity Key stored in the Client Key Vault */\n  channelIntegrityKeyName?: string;\n  /** The version of Channel Integrity Key stored in the Client Key Vault */\n  channelIntegrityKeyVersion?: string;\n  /** Key vault sync status */\n  keyVaultSyncStatus?: KeyVaultSyncStatus;\n  /**\n   * Device secrets, will be returned only with ODataFilter $expand=deviceSecrets\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly deviceSecrets?: { [propertyName: string]: Secret };\n}\n\n/** The network settings of a device. */\nexport interface NetworkSettings extends ARMBaseModel {\n  /**\n   * NetworkSettings on ASE device\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n  /**\n   * The network adapter list on the device.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly networkAdapters?: NetworkAdapter[];\n}\n\n/**\n * Represents a single node in a Data box Edge/Gateway device\n * Gateway devices, standalone Edge devices and a single node cluster Edge device will all have 1 node\n * Multi-node Edge devices will have more than 1 nodes\n */\nexport interface Node extends ARMBaseModel {\n  /**\n   * The current status of the individual node\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nodeStatus?: NodeStatus;\n  /**\n   * Serial number of the Chassis\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nodeChassisSerialNumber?: string;\n  /**\n   * Serial number of the individual node\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nodeSerialNumber?: string;\n  /**\n   * Display Name of the individual node\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nodeDisplayName?: string;\n  /**\n   * Friendly software version name that is currently installed on the node\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nodeFriendlySoftwareVersion?: string;\n  /**\n   * HCS version that is currently installed on the node\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nodeHcsVersion?: string;\n  /**\n   * Guid instance id of the node\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nodeInstanceId?: string;\n}\n\n/** The order details. */\nexport interface Order extends ARMBaseModel {\n  /**\n   * Order configured on ASE resource\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n  /** The contact details. */\n  contactInformation?: ContactDetails;\n  /** The shipping address. */\n  shippingAddress?: Address;\n  /**\n   * Current status of the order.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currentStatus?: OrderStatus;\n  /**\n   * List of status changes in the order.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly orderHistory?: OrderStatus[];\n  /**\n   * Serial number of the device.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly serialNumber?: string;\n  /**\n   * Tracking information for the package delivered to the customer whether it has an original or a replacement device.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly deliveryTrackingInfo?: TrackingInfo[];\n  /**\n   * Tracking information for the package returned from the customer whether it has an original or a replacement device.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly returnTrackingInfo?: TrackingInfo[];\n  /** ShipmentType of the order */\n  shipmentType?: ShipmentType;\n}\n\n/** Compute role. */\nexport interface Role extends ARMBaseModel {\n  /** Role type. */\n  kind: RoleTypes;\n  /**\n   * Role configured on ASE resource\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n}\n\n/** Role Addon */\nexport interface Addon extends ARMBaseModel {\n  /** Addon type. */\n  kind: AddonType;\n  /**\n   * Addon type\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n}\n\n/** The metric setting details for the role */\nexport interface MonitoringMetricConfiguration extends ARMBaseModel {\n  /**\n   * MonitoringConfiguration on ASE device\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n  /** The metrics configuration details */\n  metricConfigurations: MetricConfiguration[];\n}\n\n/** The security settings of a device. */\nexport interface SecuritySettings extends ARMBaseModel {\n  /** Device administrator password as an encrypted string (encrypted using RSA PKCS #1) is used to sign into the  local web UI of the device. The Actual password should have at least 8 characters that are a combination of  uppercase, lowercase, numeric, and special characters. */\n  deviceAdminPassword: AsymmetricEncryptedSecret;\n}\n\n/** Represents a share on the  Data Box Edge/Gateway device. */\nexport interface Share extends ARMBaseModel {\n  /**\n   * Share on ASE device\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n  /** Description for the share. */\n  description?: string;\n  /** Current status of the share. */\n  shareStatus: ShareStatus;\n  /** Current monitoring status of the share. */\n  monitoringStatus: MonitoringStatus;\n  /** Azure container mapping for the share. */\n  azureContainerInfo?: AzureContainerInfo;\n  /** Access protocol to be used by the share. */\n  accessProtocol: ShareAccessProtocol;\n  /** Mapping of users and corresponding access rights on the share (required for SMB protocol). */\n  userAccessRights?: UserAccessRight[];\n  /** List of IP addresses and corresponding access rights on the share(required for NFS protocol). */\n  clientAccessRights?: ClientAccessRight[];\n  /** Details of the refresh job on this share. */\n  refreshDetails?: RefreshDetails;\n  /**\n   * Share mount point to the role.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly shareMappings?: MountPointMap[];\n  /** Data policy of the share. */\n  dataPolicy?: DataPolicy;\n}\n\n/** The storage account credential. */\nexport interface StorageAccountCredential extends ARMBaseModel {\n  /**\n   * StorageAccountCredential object\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n  /** Alias for the storage account. */\n  alias: string;\n  /** Username for the storage account. */\n  userName?: string;\n  /** Encrypted storage key. */\n  accountKey?: AsymmetricEncryptedSecret;\n  /** Connection string for the storage account. Use this string if username and account key are not specified. */\n  connectionString?: string;\n  /** Signifies whether SSL needs to be enabled or not. */\n  sslStatus: SSLStatus;\n  /** Blob end point for private clouds. */\n  blobDomainName?: string;\n  /** Type of storage accessed on the storage account. */\n  accountType: AccountType;\n  /** Id of the storage account. */\n  storageAccountId?: string;\n}\n\n/** Represents a Storage Account on the  Data Box Edge/Gateway device. */\nexport interface StorageAccount extends ARMBaseModel {\n  /**\n   * StorageAccount object on ASE device\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n  /** Description for the storage Account. */\n  description?: string;\n  /** Current status of the storage account */\n  storageAccountStatus?: StorageAccountStatus;\n  /** Data policy of the storage Account. */\n  dataPolicy: DataPolicy;\n  /** Storage Account Credential Id */\n  storageAccountCredentialId?: string;\n  /**\n   * BlobEndpoint of Storage Account\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly blobEndpoint?: string;\n  /**\n   * The Container Count. Present only for Storage Accounts with DataPolicy set to Cloud.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly containerCount?: number;\n}\n\n/** Represents a container on the  Data Box Edge/Gateway device. */\nexport interface Container extends ARMBaseModel {\n  /**\n   * Container in DataBoxEdge Resource\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n  /**\n   * Current status of the container.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly containerStatus?: ContainerStatus;\n  /** DataFormat for Container */\n  dataFormat: AzureContainerDataFormat;\n  /**\n   * Details of the refresh job on this container.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly refreshDetails?: RefreshDetails;\n  /**\n   * The UTC time when container got created.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly createdDateTime?: Date;\n}\n\n/** Trigger details. */\nexport interface Trigger extends ARMBaseModel {\n  /**\n   * Trigger in DataBoxEdge Resource\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n  /** Trigger Kind. */\n  kind: TriggerEventType;\n}\n\n/** The request object for trigger support package. */\nexport interface TriggerSupportPackageRequest extends ARMBaseModel {\n  /** Start of the timespan of the log collection */\n  minimumTimeStamp?: Date;\n  /** MaximumTimeStamp until where logs need to be collected */\n  maximumTimeStamp?: Date;\n  /**\n   * Type of files, which need to be included in the logs\n   * This will contain the type of logs (Default/DefaultWithDumps/None/All/DefaultWithArchived)\n   * or a comma separated list of log types that are required\n   */\n  include?: string;\n}\n\n/** Details about ongoing updates and availability of updates on the device. */\nexport interface UpdateSummary extends ARMBaseModel {\n  /**\n   * UpdateSummary Result\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n  /** The current version of the device in format: 1.2.17312.13.\", */\n  deviceVersionNumber?: string;\n  /** The current version of the device in text format. */\n  friendlyDeviceVersionName?: string;\n  /** The last time when a scan was done on the device. */\n  deviceLastScannedDateTime?: Date;\n  /** The time when the last scan job was completed (success/cancelled/failed) on the appliance. */\n  lastCompletedScanJobDateTime?: Date;\n  /** Time when the last scan job is successfully completed. */\n  lastSuccessfulScanJobTime?: Date;\n  /**\n   * The time when the last Download job was completed (success/cancelled/failed) on the appliance.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastCompletedDownloadJobDateTime?: Date;\n  /**\n   * JobId of the last ran download job.(Can be success/cancelled/failed)\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastCompletedDownloadJobId?: string;\n  /**\n   * JobStatus of the last ran download job.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastDownloadJobStatus?: JobStatus;\n  /** The time when the Last Install job was completed successfully on the appliance */\n  lastSuccessfulInstallJobDateTime?: Date;\n  /**\n   * The time when the last Install job was completed (success/cancelled/failed) on the appliance.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastCompletedInstallJobDateTime?: Date;\n  /**\n   * JobId of the last ran install job.(Can be success/cancelled/failed)\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastCompletedInstallJobId?: string;\n  /**\n   * JobStatus of the last ran install job.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastInstallJobStatus?: JobStatus;\n  /**\n   * The number of updates available for the current device version as per the last device scan.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly totalNumberOfUpdatesAvailable?: number;\n  /**\n   * The total number of items pending download.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly totalNumberOfUpdatesPendingDownload?: number;\n  /**\n   * The total number of items pending install.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly totalNumberOfUpdatesPendingInstall?: number;\n  /**\n   * Indicates if updates are available and at least one of the updates needs a reboot.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly rebootBehavior?: InstallRebootBehavior;\n  /**\n   * The current update operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly ongoingUpdateOperation?: UpdateOperation;\n  /**\n   * The job ID of the download job in progress.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly inProgressDownloadJobId?: string;\n  /**\n   * The job ID of the install job in progress.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly inProgressInstallJobId?: string;\n  /**\n   * The time when the currently running download (if any) started.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly inProgressDownloadJobStartedDateTime?: Date;\n  /**\n   * The time when the currently running install (if any) started.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly inProgressInstallJobStartedDateTime?: Date;\n  /**\n   * The list of updates available for install.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly updateTitles?: string[];\n  /**\n   * The list of updates available for install.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly updates?: UpdateDetails[];\n  /**\n   * The total size of updates available for download in bytes.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly totalUpdateSizeInBytes?: number;\n  /**\n   * The total time in Minutes\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly totalTimeInMinutes?: number;\n}\n\n/** Represents a user who has access to one or more shares on the Data Box Edge/Gateway device. */\nexport interface User extends ARMBaseModel {\n  /**\n   * User in DataBoxEdge Resource\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n  /** The password details. */\n  encryptedPassword?: AsymmetricEncryptedSecret;\n  /**\n   * List of shares that the user has rights on. This field should not be specified during user creation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly shareAccessRights?: ShareAccessRight[];\n  /** Type of the user. */\n  userType: UserType;\n}\n\n/** CloudEdgeManagementRole role. */\nexport interface CloudEdgeManagementRole extends Role {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"CloudEdgeManagement\";\n  /**\n   * Local Edge Management Status\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly localManagementStatus?: RoleStatus;\n  /**\n   * Edge Profile of the resource\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly edgeProfile?: EdgeProfile;\n  /** Role status. */\n  roleStatus?: RoleStatus;\n}\n\n/** Compute role. */\nexport interface IoTRole extends Role {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"IOT\";\n  /** Host OS supported by the IoT role. */\n  hostPlatform?: PlatformType;\n  /** IoT device metadata to which data box edge device needs to be connected. */\n  ioTDeviceDetails?: IoTDeviceInfo;\n  /** IoT edge device to which the IoT role needs to be configured. */\n  ioTEdgeDeviceDetails?: IoTDeviceInfo;\n  /** Mount points of shares in role(s). */\n  shareMappings?: MountPointMap[];\n  /** Iot edge agent details to download the agent and bootstrap iot runtime. */\n  ioTEdgeAgentInfo?: IoTEdgeAgentInfo;\n  /**\n   * Platform where the Iot runtime is hosted.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly hostPlatformType?: HostPlatformType;\n  /** Resource allocation */\n  computeResource?: ComputeResource;\n  /** Role status. */\n  roleStatus?: RoleStatus;\n}\n\n/** Kubernetes role. */\nexport interface KubernetesRole extends Role {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"Kubernetes\";\n  /** Host OS supported by the Kubernetes role. */\n  hostPlatform?: PlatformType;\n  /**\n   * State of Kubernetes deployment\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: KubernetesState;\n  /**\n   * Platform where the runtime is hosted.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly hostPlatformType?: HostPlatformType;\n  /** Kubernetes cluster configuration */\n  kubernetesClusterInfo?: KubernetesClusterInfo;\n  /** Kubernetes role resources */\n  kubernetesRoleResources?: KubernetesRoleResources;\n  /** Role status. */\n  roleStatus?: RoleStatus;\n}\n\n/** MEC role. */\nexport interface MECRole extends Role {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"MEC\";\n  /** Activation key of the MEC. */\n  connectionString?: AsymmetricEncryptedSecret;\n  /** Controller Endpoint. */\n  controllerEndpoint?: string;\n  /** Unique Id of the Resource. */\n  resourceUniqueId?: string;\n  /** Role status. */\n  roleStatus?: RoleStatus;\n}\n\n/** Arc Addon. */\nexport interface ArcAddon extends Addon {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"ArcForKubernetes\";\n  /** Arc resource subscription Id */\n  subscriptionId: string;\n  /** Arc resource group name */\n  resourceGroupName: string;\n  /** Arc resource Name */\n  resourceName: string;\n  /** Arc resource location */\n  resourceLocation: string;\n  /**\n   * Arc resource version\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly version?: string;\n  /**\n   * Host OS supported by the Arc addon.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly hostPlatform?: PlatformType;\n  /**\n   * Platform where the runtime is hosted.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly hostPlatformType?: HostPlatformType;\n  /**\n   * Addon Provisioning State\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: AddonState;\n}\n\n/** IoT Addon. */\nexport interface IoTAddon extends Addon {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"IotEdge\";\n  /** IoT device metadata to which appliance needs to be connected. */\n  ioTDeviceDetails: IoTDeviceInfo;\n  /** IoT edge device to which the IoT Addon needs to be configured. */\n  ioTEdgeDeviceDetails: IoTDeviceInfo;\n  /**\n   * Version of IoT running on the appliance.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly version?: string;\n  /**\n   * Host OS supported by the IoT addon.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly hostPlatform?: PlatformType;\n  /**\n   * Platform where the runtime is hosted.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly hostPlatformType?: HostPlatformType;\n  /**\n   * Addon Provisioning State\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: AddonState;\n}\n\n/** Trigger details. */\nexport interface FileEventTrigger extends Trigger {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"FileEvent\";\n  /** File event source details. */\n  sourceInfo: FileSourceInfo;\n  /** Role sink info. */\n  sinkInfo: RoleSinkInfo;\n  /** A custom context tag typically used to correlate the trigger against its usage. For example, if a periodic timer trigger is intended for certain specific IoT modules in the device, the tag can be the name or the image URL of the module. */\n  customContextTag?: string;\n}\n\n/** Trigger details. */\nexport interface PeriodicTimerEventTrigger extends Trigger {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"PeriodicTimerEvent\";\n  /** Periodic timer details. */\n  sourceInfo: PeriodicTimerSourceInfo;\n  /** Role Sink information. */\n  sinkInfo: RoleSinkInfo;\n  /** A custom context tag typically used to correlate the trigger against its usage. For example, if a periodic timer trigger is intended for certain specific IoT modules in the device, the tag can be the name or the image URL of the module. */\n  customContextTag?: string;\n}\n\n/** Known values of {@link MetricUnit} that the service accepts. */\nexport enum KnownMetricUnit {\n  /** NotSpecified */\n  NotSpecified = \"NotSpecified\",\n  /** Percent */\n  Percent = \"Percent\",\n  /** Count */\n  Count = \"Count\",\n  /** Seconds */\n  Seconds = \"Seconds\",\n  /** Milliseconds */\n  Milliseconds = \"Milliseconds\",\n  /** Bytes */\n  Bytes = \"Bytes\",\n  /** BytesPerSecond */\n  BytesPerSecond = \"BytesPerSecond\",\n  /** CountPerSecond */\n  CountPerSecond = \"CountPerSecond\"\n}\n\n/**\n * Defines values for MetricUnit. \\\n * {@link KnownMetricUnit} can be used interchangeably with MetricUnit,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NotSpecified** \\\n * **Percent** \\\n * **Count** \\\n * **Seconds** \\\n * **Milliseconds** \\\n * **Bytes** \\\n * **BytesPerSecond** \\\n * **CountPerSecond**\n */\nexport type MetricUnit = string;\n\n/** Known values of {@link MetricAggregationType} that the service accepts. */\nexport enum KnownMetricAggregationType {\n  /** NotSpecified */\n  NotSpecified = \"NotSpecified\",\n  /** None */\n  None = \"None\",\n  /** Average */\n  Average = \"Average\",\n  /** Minimum */\n  Minimum = \"Minimum\",\n  /** Maximum */\n  Maximum = \"Maximum\",\n  /** Total */\n  Total = \"Total\",\n  /** Count */\n  Count = \"Count\"\n}\n\n/**\n * Defines values for MetricAggregationType. \\\n * {@link KnownMetricAggregationType} can be used interchangeably with MetricAggregationType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NotSpecified** \\\n * **None** \\\n * **Average** \\\n * **Minimum** \\\n * **Maximum** \\\n * **Total** \\\n * **Count**\n */\nexport type MetricAggregationType = string;\n\n/** Known values of {@link MetricCategory} that the service accepts. */\nexport enum KnownMetricCategory {\n  /** Capacity */\n  Capacity = \"Capacity\",\n  /** Transaction */\n  Transaction = \"Transaction\"\n}\n\n/**\n * Defines values for MetricCategory. \\\n * {@link KnownMetricCategory} can be used interchangeably with MetricCategory,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Capacity** \\\n * **Transaction**\n */\nexport type MetricCategory = string;\n\n/** Known values of {@link TimeGrain} that the service accepts. */\nexport enum KnownTimeGrain {\n  /** PT1M */\n  PT1M = \"PT1M\",\n  /** PT5M */\n  PT5M = \"PT5M\",\n  /** PT15M */\n  PT15M = \"PT15M\",\n  /** PT30M */\n  PT30M = \"PT30M\",\n  /** PT1H */\n  PT1H = \"PT1H\",\n  /** PT6H */\n  PT6H = \"PT6H\",\n  /** PT12H */\n  PT12H = \"PT12H\",\n  /** PT1D */\n  PT1D = \"PT1D\"\n}\n\n/**\n * Defines values for TimeGrain. \\\n * {@link KnownTimeGrain} can be used interchangeably with TimeGrain,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **PT1M** \\\n * **PT5M** \\\n * **PT15M** \\\n * **PT30M** \\\n * **PT1H** \\\n * **PT6H** \\\n * **PT12H** \\\n * **PT1D**\n */\nexport type TimeGrain = string;\n\n/** Known values of {@link SkuName} that the service accepts. */\nexport enum KnownSkuName {\n  /** Gateway */\n  Gateway = \"Gateway\",\n  /** Edge */\n  Edge = \"Edge\",\n  /** TEA1Node */\n  TEA1Node = \"TEA_1Node\",\n  /** TEA1NodeUPS */\n  TEA1NodeUPS = \"TEA_1Node_UPS\",\n  /** TEA1NodeHeater */\n  TEA1NodeHeater = \"TEA_1Node_Heater\",\n  /** TEA1NodeUPSHeater */\n  TEA1NodeUPSHeater = \"TEA_1Node_UPS_Heater\",\n  /** TEA4NodeHeater */\n  TEA4NodeHeater = \"TEA_4Node_Heater\",\n  /** TEA4NodeUPSHeater */\n  TEA4NodeUPSHeater = \"TEA_4Node_UPS_Heater\",\n  /** TMA */\n  TMA = \"TMA\",\n  /** TDC */\n  TDC = \"TDC\",\n  /** TCASmall */\n  TCASmall = \"TCA_Small\",\n  /** GPU */\n  GPU = \"GPU\",\n  /** TCALarge */\n  TCALarge = \"TCA_Large\",\n  /** EdgePBase */\n  EdgePBase = \"EdgeP_Base\",\n  /** EdgePHigh */\n  EdgePHigh = \"EdgeP_High\",\n  /** EdgePRBase */\n  EdgePRBase = \"EdgePR_Base\",\n  /** EdgePRBaseUPS */\n  EdgePRBaseUPS = \"EdgePR_Base_UPS\",\n  /** EP2641VPUW */\n  EP2641VPUW = \"EP2_64_1VPU_W\",\n  /** EP21281T4Mx1W */\n  EP21281T4Mx1W = \"EP2_128_1T4_Mx1_W\",\n  /** EP22562T4W */\n  EP22562T4W = \"EP2_256_2T4_W\",\n  /** EdgeMRMini */\n  EdgeMRMini = \"EdgeMR_Mini\",\n  /** RCASmall */\n  RCASmall = \"RCA_Small\",\n  /** RCALarge */\n  RCALarge = \"RCA_Large\",\n  /** RDC */\n  RDC = \"RDC\",\n  /** Management */\n  Management = \"Management\"\n}\n\n/**\n * Defines values for SkuName. \\\n * {@link KnownSkuName} can be used interchangeably with SkuName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Gateway** \\\n * **Edge** \\\n * **TEA_1Node** \\\n * **TEA_1Node_UPS** \\\n * **TEA_1Node_Heater** \\\n * **TEA_1Node_UPS_Heater** \\\n * **TEA_4Node_Heater** \\\n * **TEA_4Node_UPS_Heater** \\\n * **TMA** \\\n * **TDC** \\\n * **TCA_Small** \\\n * **GPU** \\\n * **TCA_Large** \\\n * **EdgeP_Base** \\\n * **EdgeP_High** \\\n * **EdgePR_Base** \\\n * **EdgePR_Base_UPS** \\\n * **EP2_64_1VPU_W** \\\n * **EP2_128_1T4_Mx1_W** \\\n * **EP2_256_2T4_W** \\\n * **EdgeMR_Mini** \\\n * **RCA_Small** \\\n * **RCA_Large** \\\n * **RDC** \\\n * **Management**\n */\nexport type SkuName = string;\n\n/** Known values of {@link SkuTier} that the service accepts. */\nexport enum KnownSkuTier {\n  /** Standard */\n  Standard = \"Standard\"\n}\n\n/**\n * Defines values for SkuTier. \\\n * {@link KnownSkuTier} can be used interchangeably with SkuTier,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Standard**\n */\nexport type SkuTier = string;\n\n/** Known values of {@link SkuSignupOption} that the service accepts. */\nexport enum KnownSkuSignupOption {\n  /** None */\n  None = \"None\",\n  /** Available */\n  Available = \"Available\"\n}\n\n/**\n * Defines values for SkuSignupOption. \\\n * {@link KnownSkuSignupOption} can be used interchangeably with SkuSignupOption,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **Available**\n */\nexport type SkuSignupOption = string;\n\n/** Known values of {@link SkuVersion} that the service accepts. */\nexport enum KnownSkuVersion {\n  /** Stable */\n  Stable = \"Stable\",\n  /** Preview */\n  Preview = \"Preview\"\n}\n\n/**\n * Defines values for SkuVersion. \\\n * {@link KnownSkuVersion} can be used interchangeably with SkuVersion,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Stable** \\\n * **Preview**\n */\nexport type SkuVersion = string;\n\n/** Known values of {@link SkuAvailability} that the service accepts. */\nexport enum KnownSkuAvailability {\n  /** Available */\n  Available = \"Available\",\n  /** Unavailable */\n  Unavailable = \"Unavailable\"\n}\n\n/**\n * Defines values for SkuAvailability. \\\n * {@link KnownSkuAvailability} can be used interchangeably with SkuAvailability,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Available** \\\n * **Unavailable**\n */\nexport type SkuAvailability = string;\n\n/** Known values of {@link ShipmentType} that the service accepts. */\nexport enum KnownShipmentType {\n  /** NotApplicable */\n  NotApplicable = \"NotApplicable\",\n  /** ShippedToCustomer */\n  ShippedToCustomer = \"ShippedToCustomer\",\n  /** SelfPickup */\n  SelfPickup = \"SelfPickup\"\n}\n\n/**\n * Defines values for ShipmentType. \\\n * {@link KnownShipmentType} can be used interchangeably with ShipmentType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NotApplicable** \\\n * **ShippedToCustomer** \\\n * **SelfPickup**\n */\nexport type ShipmentType = string;\n\n/** Known values of {@link MsiIdentityType} that the service accepts. */\nexport enum KnownMsiIdentityType {\n  /** None */\n  None = \"None\",\n  /** SystemAssigned */\n  SystemAssigned = \"SystemAssigned\",\n  /** UserAssigned */\n  UserAssigned = \"UserAssigned\"\n}\n\n/**\n * Defines values for MsiIdentityType. \\\n * {@link KnownMsiIdentityType} can be used interchangeably with MsiIdentityType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **SystemAssigned** \\\n * **UserAssigned**\n */\nexport type MsiIdentityType = string;\n\n/** Known values of {@link DataBoxEdgeDeviceKind} that the service accepts. */\nexport enum KnownDataBoxEdgeDeviceKind {\n  /** AzureDataBoxGateway */\n  AzureDataBoxGateway = \"AzureDataBoxGateway\",\n  /** AzureStackEdge */\n  AzureStackEdge = \"AzureStackEdge\",\n  /** AzureStackHub */\n  AzureStackHub = \"AzureStackHub\",\n  /** AzureModularDataCentre */\n  AzureModularDataCentre = \"AzureModularDataCentre\"\n}\n\n/**\n * Defines values for DataBoxEdgeDeviceKind. \\\n * {@link KnownDataBoxEdgeDeviceKind} can be used interchangeably with DataBoxEdgeDeviceKind,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **AzureDataBoxGateway** \\\n * **AzureStackEdge** \\\n * **AzureStackHub** \\\n * **AzureModularDataCentre**\n */\nexport type DataBoxEdgeDeviceKind = string;\n\n/** Known values of {@link CreatedByType} that the service accepts. */\nexport enum KnownCreatedByType {\n  /** User */\n  User = \"User\",\n  /** Application */\n  Application = \"Application\",\n  /** ManagedIdentity */\n  ManagedIdentity = \"ManagedIdentity\",\n  /** Key */\n  Key = \"Key\"\n}\n\n/**\n * Defines values for CreatedByType. \\\n * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **User** \\\n * **Application** \\\n * **ManagedIdentity** \\\n * **Key**\n */\nexport type CreatedByType = string;\n\n/** Known values of {@link DataBoxEdgeDeviceStatus} that the service accepts. */\nexport enum KnownDataBoxEdgeDeviceStatus {\n  /** ReadyToSetup */\n  ReadyToSetup = \"ReadyToSetup\",\n  /** Online */\n  Online = \"Online\",\n  /** Offline */\n  Offline = \"Offline\",\n  /** NeedsAttention */\n  NeedsAttention = \"NeedsAttention\",\n  /** Disconnected */\n  Disconnected = \"Disconnected\",\n  /** PartiallyDisconnected */\n  PartiallyDisconnected = \"PartiallyDisconnected\",\n  /** Maintenance */\n  Maintenance = \"Maintenance\"\n}\n\n/**\n * Defines values for DataBoxEdgeDeviceStatus. \\\n * {@link KnownDataBoxEdgeDeviceStatus} can be used interchangeably with DataBoxEdgeDeviceStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **ReadyToSetup** \\\n * **Online** \\\n * **Offline** \\\n * **NeedsAttention** \\\n * **Disconnected** \\\n * **PartiallyDisconnected** \\\n * **Maintenance**\n */\nexport type DataBoxEdgeDeviceStatus = string;\n\n/** Known values of {@link DeviceType} that the service accepts. */\nexport enum KnownDeviceType {\n  /** DataBoxEdgeDevice */\n  DataBoxEdgeDevice = \"DataBoxEdgeDevice\"\n}\n\n/**\n * Defines values for DeviceType. \\\n * {@link KnownDeviceType} can be used interchangeably with DeviceType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **DataBoxEdgeDevice**\n */\nexport type DeviceType = string;\n\n/** Known values of {@link RoleTypes} that the service accepts. */\nexport enum KnownRoleTypes {\n  /** IOT */\n  IOT = \"IOT\",\n  /** ASA */\n  ASA = \"ASA\",\n  /** Functions */\n  Functions = \"Functions\",\n  /** Cognitive */\n  Cognitive = \"Cognitive\",\n  /** MEC */\n  MEC = \"MEC\",\n  /** CloudEdgeManagement */\n  CloudEdgeManagement = \"CloudEdgeManagement\",\n  /** Kubernetes */\n  Kubernetes = \"Kubernetes\"\n}\n\n/**\n * Defines values for RoleTypes. \\\n * {@link KnownRoleTypes} can be used interchangeably with RoleTypes,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **IOT** \\\n * **ASA** \\\n * **Functions** \\\n * **Cognitive** \\\n * **MEC** \\\n * **CloudEdgeManagement** \\\n * **Kubernetes**\n */\nexport type RoleTypes = string;\n\n/** Known values of {@link ResourceMoveStatus} that the service accepts. */\nexport enum KnownResourceMoveStatus {\n  /** None */\n  None = \"None\",\n  /** ResourceMoveInProgress */\n  ResourceMoveInProgress = \"ResourceMoveInProgress\",\n  /** ResourceMoveFailed */\n  ResourceMoveFailed = \"ResourceMoveFailed\"\n}\n\n/**\n * Defines values for ResourceMoveStatus. \\\n * {@link KnownResourceMoveStatus} can be used interchangeably with ResourceMoveStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **ResourceMoveInProgress** \\\n * **ResourceMoveFailed**\n */\nexport type ResourceMoveStatus = string;\n\n/** Known values of {@link SubscriptionState} that the service accepts. */\nexport enum KnownSubscriptionState {\n  /** Registered */\n  Registered = \"Registered\",\n  /** Warned */\n  Warned = \"Warned\",\n  /** Suspended */\n  Suspended = \"Suspended\",\n  /** Deleted */\n  Deleted = \"Deleted\",\n  /** Unregistered */\n  Unregistered = \"Unregistered\"\n}\n\n/**\n * Defines values for SubscriptionState. \\\n * {@link KnownSubscriptionState} can be used interchangeably with SubscriptionState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Registered** \\\n * **Warned** \\\n * **Suspended** \\\n * **Deleted** \\\n * **Unregistered**\n */\nexport type SubscriptionState = string;\n\n/** Known values of {@link DataResidencyType} that the service accepts. */\nexport enum KnownDataResidencyType {\n  /** GeoZoneReplication */\n  GeoZoneReplication = \"GeoZoneReplication\",\n  /** ZoneReplication */\n  ZoneReplication = \"ZoneReplication\"\n}\n\n/**\n * Defines values for DataResidencyType. \\\n * {@link KnownDataResidencyType} can be used interchangeably with DataResidencyType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **GeoZoneReplication** \\\n * **ZoneReplication**\n */\nexport type DataResidencyType = string;\n\n/** Known values of {@link AlertSeverity} that the service accepts. */\nexport enum KnownAlertSeverity {\n  /** Informational */\n  Informational = \"Informational\",\n  /** Warning */\n  Warning = \"Warning\",\n  /** Critical */\n  Critical = \"Critical\"\n}\n\n/**\n * Defines values for AlertSeverity. \\\n * {@link KnownAlertSeverity} can be used interchangeably with AlertSeverity,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Informational** \\\n * **Warning** \\\n * **Critical**\n */\nexport type AlertSeverity = string;\n\n/** Known values of {@link DayOfWeek} that the service accepts. */\nexport enum KnownDayOfWeek {\n  /** Sunday */\n  Sunday = \"Sunday\",\n  /** Monday */\n  Monday = \"Monday\",\n  /** Tuesday */\n  Tuesday = \"Tuesday\",\n  /** Wednesday */\n  Wednesday = \"Wednesday\",\n  /** Thursday */\n  Thursday = \"Thursday\",\n  /** Friday */\n  Friday = \"Friday\",\n  /** Saturday */\n  Saturday = \"Saturday\"\n}\n\n/**\n * Defines values for DayOfWeek. \\\n * {@link KnownDayOfWeek} can be used interchangeably with DayOfWeek,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Sunday** \\\n * **Monday** \\\n * **Tuesday** \\\n * **Wednesday** \\\n * **Thursday** \\\n * **Friday** \\\n * **Saturday**\n */\nexport type DayOfWeek = string;\n\n/** Known values of {@link ProactiveDiagnosticsConsent} that the service accepts. */\nexport enum KnownProactiveDiagnosticsConsent {\n  /** Enabled */\n  Enabled = \"Enabled\",\n  /** Disabled */\n  Disabled = \"Disabled\"\n}\n\n/**\n * Defines values for ProactiveDiagnosticsConsent. \\\n * {@link KnownProactiveDiagnosticsConsent} can be used interchangeably with ProactiveDiagnosticsConsent,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled** \\\n * **Disabled**\n */\nexport type ProactiveDiagnosticsConsent = string;\n\n/** Known values of {@link RemoteApplicationType} that the service accepts. */\nexport enum KnownRemoteApplicationType {\n  /** Powershell */\n  Powershell = \"Powershell\",\n  /** WAC */\n  WAC = \"WAC\",\n  /** LocalUI */\n  LocalUI = \"LocalUI\",\n  /** AllApplications */\n  AllApplications = \"AllApplications\"\n}\n\n/**\n * Defines values for RemoteApplicationType. \\\n * {@link KnownRemoteApplicationType} can be used interchangeably with RemoteApplicationType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Powershell** \\\n * **WAC** \\\n * **LocalUI** \\\n * **AllApplications**\n */\nexport type RemoteApplicationType = string;\n\n/** Known values of {@link AccessLevel} that the service accepts. */\nexport enum KnownAccessLevel {\n  /** None */\n  None = \"None\",\n  /** ReadOnly */\n  ReadOnly = \"ReadOnly\",\n  /** ReadWrite */\n  ReadWrite = \"ReadWrite\",\n  /** FullAccess */\n  FullAccess = \"FullAccess\"\n}\n\n/**\n * Defines values for AccessLevel. \\\n * {@link KnownAccessLevel} can be used interchangeably with AccessLevel,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **ReadOnly** \\\n * **ReadWrite** \\\n * **FullAccess**\n */\nexport type AccessLevel = string;\n\n/** Known values of {@link KeyVaultSyncStatus} that the service accepts. */\nexport enum KnownKeyVaultSyncStatus {\n  /** KeyVaultSynced */\n  KeyVaultSynced = \"KeyVaultSynced\",\n  /** KeyVaultSyncFailed */\n  KeyVaultSyncFailed = \"KeyVaultSyncFailed\",\n  /** KeyVaultNotConfigured */\n  KeyVaultNotConfigured = \"KeyVaultNotConfigured\",\n  /** KeyVaultSyncPending */\n  KeyVaultSyncPending = \"KeyVaultSyncPending\",\n  /** KeyVaultSyncing */\n  KeyVaultSyncing = \"KeyVaultSyncing\",\n  /** KeyVaultNotSynced */\n  KeyVaultNotSynced = \"KeyVaultNotSynced\"\n}\n\n/**\n * Defines values for KeyVaultSyncStatus. \\\n * {@link KnownKeyVaultSyncStatus} can be used interchangeably with KeyVaultSyncStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **KeyVaultSynced** \\\n * **KeyVaultSyncFailed** \\\n * **KeyVaultNotConfigured** \\\n * **KeyVaultSyncPending** \\\n * **KeyVaultSyncing** \\\n * **KeyVaultNotSynced**\n */\nexport type KeyVaultSyncStatus = string;\n\n/** Known values of {@link EncryptionAlgorithm} that the service accepts. */\nexport enum KnownEncryptionAlgorithm {\n  /** None */\n  None = \"None\",\n  /** AES256 */\n  AES256 = \"AES256\",\n  /** RsaesPkcs1V15 */\n  RsaesPkcs1V15 = \"RSAES_PKCS1_v_1_5\"\n}\n\n/**\n * Defines values for EncryptionAlgorithm. \\\n * {@link KnownEncryptionAlgorithm} can be used interchangeably with EncryptionAlgorithm,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **AES256** \\\n * **RSAES_PKCS1_v_1_5**\n */\nexport type EncryptionAlgorithm = string;\n\n/** Known values of {@link JobStatus} that the service accepts. */\nexport enum KnownJobStatus {\n  /** Invalid */\n  Invalid = \"Invalid\",\n  /** Running */\n  Running = \"Running\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Canceled */\n  Canceled = \"Canceled\",\n  /** Paused */\n  Paused = \"Paused\",\n  /** Scheduled */\n  Scheduled = \"Scheduled\"\n}\n\n/**\n * Defines values for JobStatus. \\\n * {@link KnownJobStatus} can be used interchangeably with JobStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Invalid** \\\n * **Running** \\\n * **Succeeded** \\\n * **Failed** \\\n * **Canceled** \\\n * **Paused** \\\n * **Scheduled**\n */\nexport type JobStatus = string;\n\n/** Known values of {@link JobType} that the service accepts. */\nexport enum KnownJobType {\n  /** Invalid */\n  Invalid = \"Invalid\",\n  /** ScanForUpdates */\n  ScanForUpdates = \"ScanForUpdates\",\n  /** DownloadUpdates */\n  DownloadUpdates = \"DownloadUpdates\",\n  /** InstallUpdates */\n  InstallUpdates = \"InstallUpdates\",\n  /** RefreshShare */\n  RefreshShare = \"RefreshShare\",\n  /** RefreshContainer */\n  RefreshContainer = \"RefreshContainer\",\n  /** Backup */\n  Backup = \"Backup\",\n  /** Restore */\n  Restore = \"Restore\",\n  /** TriggerSupportPackage */\n  TriggerSupportPackage = \"TriggerSupportPackage\"\n}\n\n/**\n * Defines values for JobType. \\\n * {@link KnownJobType} can be used interchangeably with JobType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Invalid** \\\n * **ScanForUpdates** \\\n * **DownloadUpdates** \\\n * **InstallUpdates** \\\n * **RefreshShare** \\\n * **RefreshContainer** \\\n * **Backup** \\\n * **Restore** \\\n * **TriggerSupportPackage**\n */\nexport type JobType = string;\n\n/** Known values of {@link UpdateOperationStage} that the service accepts. */\nexport enum KnownUpdateOperationStage {\n  /** Unknown */\n  Unknown = \"Unknown\",\n  /** Initial */\n  Initial = \"Initial\",\n  /** ScanStarted */\n  ScanStarted = \"ScanStarted\",\n  /** ScanComplete */\n  ScanComplete = \"ScanComplete\",\n  /** ScanFailed */\n  ScanFailed = \"ScanFailed\",\n  /** DownloadStarted */\n  DownloadStarted = \"DownloadStarted\",\n  /** DownloadComplete */\n  DownloadComplete = \"DownloadComplete\",\n  /** DownloadFailed */\n  DownloadFailed = \"DownloadFailed\",\n  /** InstallStarted */\n  InstallStarted = \"InstallStarted\",\n  /** InstallComplete */\n  InstallComplete = \"InstallComplete\",\n  /** InstallFailed */\n  InstallFailed = \"InstallFailed\",\n  /** RebootInitiated */\n  RebootInitiated = \"RebootInitiated\",\n  /** Success */\n  Success = \"Success\",\n  /** Failure */\n  Failure = \"Failure\",\n  /** RescanStarted */\n  RescanStarted = \"RescanStarted\",\n  /** RescanComplete */\n  RescanComplete = \"RescanComplete\",\n  /** RescanFailed */\n  RescanFailed = \"RescanFailed\"\n}\n\n/**\n * Defines values for UpdateOperationStage. \\\n * {@link KnownUpdateOperationStage} can be used interchangeably with UpdateOperationStage,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unknown** \\\n * **Initial** \\\n * **ScanStarted** \\\n * **ScanComplete** \\\n * **ScanFailed** \\\n * **DownloadStarted** \\\n * **DownloadComplete** \\\n * **DownloadFailed** \\\n * **InstallStarted** \\\n * **InstallComplete** \\\n * **InstallFailed** \\\n * **RebootInitiated** \\\n * **Success** \\\n * **Failure** \\\n * **RescanStarted** \\\n * **RescanComplete** \\\n * **RescanFailed**\n */\nexport type UpdateOperationStage = string;\n\n/** Known values of {@link DownloadPhase} that the service accepts. */\nexport enum KnownDownloadPhase {\n  /** Unknown */\n  Unknown = \"Unknown\",\n  /** Initializing */\n  Initializing = \"Initializing\",\n  /** Downloading */\n  Downloading = \"Downloading\",\n  /** Verifying */\n  Verifying = \"Verifying\"\n}\n\n/**\n * Defines values for DownloadPhase. \\\n * {@link KnownDownloadPhase} can be used interchangeably with DownloadPhase,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unknown** \\\n * **Initializing** \\\n * **Downloading** \\\n * **Verifying**\n */\nexport type DownloadPhase = string;\n\n/** Known values of {@link NetworkGroup} that the service accepts. */\nexport enum KnownNetworkGroup {\n  /** None */\n  None = \"None\",\n  /** NonRdma */\n  NonRdma = \"NonRDMA\",\n  /** Rdma */\n  Rdma = \"RDMA\"\n}\n\n/**\n * Defines values for NetworkGroup. \\\n * {@link KnownNetworkGroup} can be used interchangeably with NetworkGroup,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **NonRDMA** \\\n * **RDMA**\n */\nexport type NetworkGroup = string;\n\n/** Known values of {@link NetworkAdapterStatus} that the service accepts. */\nexport enum KnownNetworkAdapterStatus {\n  /** Inactive */\n  Inactive = \"Inactive\",\n  /** Active */\n  Active = \"Active\"\n}\n\n/**\n * Defines values for NetworkAdapterStatus. \\\n * {@link KnownNetworkAdapterStatus} can be used interchangeably with NetworkAdapterStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Inactive** \\\n * **Active**\n */\nexport type NetworkAdapterStatus = string;\n\n/** Known values of {@link NetworkAdapterRdmaStatus} that the service accepts. */\nexport enum KnownNetworkAdapterRdmaStatus {\n  /** Incapable */\n  Incapable = \"Incapable\",\n  /** Capable */\n  Capable = \"Capable\"\n}\n\n/**\n * Defines values for NetworkAdapterRdmaStatus. \\\n * {@link KnownNetworkAdapterRdmaStatus} can be used interchangeably with NetworkAdapterRdmaStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Incapable** \\\n * **Capable**\n */\nexport type NetworkAdapterRdmaStatus = string;\n\n/** Known values of {@link NetworkAdapterDhcpStatus} that the service accepts. */\nexport enum KnownNetworkAdapterDhcpStatus {\n  /** Disabled */\n  Disabled = \"Disabled\",\n  /** Enabled */\n  Enabled = \"Enabled\"\n}\n\n/**\n * Defines values for NetworkAdapterDhcpStatus. \\\n * {@link KnownNetworkAdapterDhcpStatus} can be used interchangeably with NetworkAdapterDhcpStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Disabled** \\\n * **Enabled**\n */\nexport type NetworkAdapterDhcpStatus = string;\n\n/** Known values of {@link NodeStatus} that the service accepts. */\nexport enum KnownNodeStatus {\n  /** Unknown */\n  Unknown = \"Unknown\",\n  /** Up */\n  Up = \"Up\",\n  /** Down */\n  Down = \"Down\",\n  /** Rebooting */\n  Rebooting = \"Rebooting\",\n  /** ShuttingDown */\n  ShuttingDown = \"ShuttingDown\"\n}\n\n/**\n * Defines values for NodeStatus. \\\n * {@link KnownNodeStatus} can be used interchangeably with NodeStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unknown** \\\n * **Up** \\\n * **Down** \\\n * **Rebooting** \\\n * **ShuttingDown**\n */\nexport type NodeStatus = string;\n\n/** Known values of {@link OrderState} that the service accepts. */\nexport enum KnownOrderState {\n  /** Untracked */\n  Untracked = \"Untracked\",\n  /** AwaitingFulfillment */\n  AwaitingFulfillment = \"AwaitingFulfillment\",\n  /** AwaitingPreparation */\n  AwaitingPreparation = \"AwaitingPreparation\",\n  /** AwaitingShipment */\n  AwaitingShipment = \"AwaitingShipment\",\n  /** Shipped */\n  Shipped = \"Shipped\",\n  /** Arriving */\n  Arriving = \"Arriving\",\n  /** Delivered */\n  Delivered = \"Delivered\",\n  /** ReplacementRequested */\n  ReplacementRequested = \"ReplacementRequested\",\n  /** LostDevice */\n  LostDevice = \"LostDevice\",\n  /** Declined */\n  Declined = \"Declined\",\n  /** ReturnInitiated */\n  ReturnInitiated = \"ReturnInitiated\",\n  /** AwaitingReturnShipment */\n  AwaitingReturnShipment = \"AwaitingReturnShipment\",\n  /** ShippedBack */\n  ShippedBack = \"ShippedBack\",\n  /** CollectedAtMicrosoft */\n  CollectedAtMicrosoft = \"CollectedAtMicrosoft\",\n  /** AwaitingPickup */\n  AwaitingPickup = \"AwaitingPickup\",\n  /** PickupCompleted */\n  PickupCompleted = \"PickupCompleted\",\n  /** AwaitingDrop */\n  AwaitingDrop = \"AwaitingDrop\"\n}\n\n/**\n * Defines values for OrderState. \\\n * {@link KnownOrderState} can be used interchangeably with OrderState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Untracked** \\\n * **AwaitingFulfillment** \\\n * **AwaitingPreparation** \\\n * **AwaitingShipment** \\\n * **Shipped** \\\n * **Arriving** \\\n * **Delivered** \\\n * **ReplacementRequested** \\\n * **LostDevice** \\\n * **Declined** \\\n * **ReturnInitiated** \\\n * **AwaitingReturnShipment** \\\n * **ShippedBack** \\\n * **CollectedAtMicrosoft** \\\n * **AwaitingPickup** \\\n * **PickupCompleted** \\\n * **AwaitingDrop**\n */\nexport type OrderState = string;\n\n/** Known values of {@link AddonType} that the service accepts. */\nexport enum KnownAddonType {\n  /** IotEdge */\n  IotEdge = \"IotEdge\",\n  /** ArcForKubernetes */\n  ArcForKubernetes = \"ArcForKubernetes\"\n}\n\n/**\n * Defines values for AddonType. \\\n * {@link KnownAddonType} can be used interchangeably with AddonType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **IotEdge** \\\n * **ArcForKubernetes**\n */\nexport type AddonType = string;\n\n/** Known values of {@link ShareStatus} that the service accepts. */\nexport enum KnownShareStatus {\n  /** Offline */\n  Offline = \"Offline\",\n  /** Unknown */\n  Unknown = \"Unknown\",\n  /** OK */\n  OK = \"OK\",\n  /** Updating */\n  Updating = \"Updating\",\n  /** NeedsAttention */\n  NeedsAttention = \"NeedsAttention\"\n}\n\n/**\n * Defines values for ShareStatus. \\\n * {@link KnownShareStatus} can be used interchangeably with ShareStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Offline** \\\n * **Unknown** \\\n * **OK** \\\n * **Updating** \\\n * **NeedsAttention**\n */\nexport type ShareStatus = string;\n\n/** Known values of {@link MonitoringStatus} that the service accepts. */\nexport enum KnownMonitoringStatus {\n  /** Enabled */\n  Enabled = \"Enabled\",\n  /** Disabled */\n  Disabled = \"Disabled\"\n}\n\n/**\n * Defines values for MonitoringStatus. \\\n * {@link KnownMonitoringStatus} can be used interchangeably with MonitoringStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled** \\\n * **Disabled**\n */\nexport type MonitoringStatus = string;\n\n/** Known values of {@link AzureContainerDataFormat} that the service accepts. */\nexport enum KnownAzureContainerDataFormat {\n  /** BlockBlob */\n  BlockBlob = \"BlockBlob\",\n  /** PageBlob */\n  PageBlob = \"PageBlob\",\n  /** AzureFile */\n  AzureFile = \"AzureFile\"\n}\n\n/**\n * Defines values for AzureContainerDataFormat. \\\n * {@link KnownAzureContainerDataFormat} can be used interchangeably with AzureContainerDataFormat,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **BlockBlob** \\\n * **PageBlob** \\\n * **AzureFile**\n */\nexport type AzureContainerDataFormat = string;\n\n/** Known values of {@link ShareAccessProtocol} that the service accepts. */\nexport enum KnownShareAccessProtocol {\n  /** SMB */\n  SMB = \"SMB\",\n  /** NFS */\n  NFS = \"NFS\"\n}\n\n/**\n * Defines values for ShareAccessProtocol. \\\n * {@link KnownShareAccessProtocol} can be used interchangeably with ShareAccessProtocol,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **SMB** \\\n * **NFS**\n */\nexport type ShareAccessProtocol = string;\n\n/** Known values of {@link ShareAccessType} that the service accepts. */\nexport enum KnownShareAccessType {\n  /** Change */\n  Change = \"Change\",\n  /** Read */\n  Read = \"Read\",\n  /** Custom */\n  Custom = \"Custom\"\n}\n\n/**\n * Defines values for ShareAccessType. \\\n * {@link KnownShareAccessType} can be used interchangeably with ShareAccessType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Change** \\\n * **Read** \\\n * **Custom**\n */\nexport type ShareAccessType = string;\n\n/** Known values of {@link ClientPermissionType} that the service accepts. */\nexport enum KnownClientPermissionType {\n  /** NoAccess */\n  NoAccess = \"NoAccess\",\n  /** ReadOnly */\n  ReadOnly = \"ReadOnly\",\n  /** ReadWrite */\n  ReadWrite = \"ReadWrite\"\n}\n\n/**\n * Defines values for ClientPermissionType. \\\n * {@link KnownClientPermissionType} can be used interchangeably with ClientPermissionType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NoAccess** \\\n * **ReadOnly** \\\n * **ReadWrite**\n */\nexport type ClientPermissionType = string;\n\n/** Known values of {@link MountType} that the service accepts. */\nexport enum KnownMountType {\n  /** Volume */\n  Volume = \"Volume\",\n  /** HostPath */\n  HostPath = \"HostPath\"\n}\n\n/**\n * Defines values for MountType. \\\n * {@link KnownMountType} can be used interchangeably with MountType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Volume** \\\n * **HostPath**\n */\nexport type MountType = string;\n\n/** Known values of {@link DataPolicy} that the service accepts. */\nexport enum KnownDataPolicy {\n  /** Cloud */\n  Cloud = \"Cloud\",\n  /** Local */\n  Local = \"Local\"\n}\n\n/**\n * Defines values for DataPolicy. \\\n * {@link KnownDataPolicy} can be used interchangeably with DataPolicy,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Cloud** \\\n * **Local**\n */\nexport type DataPolicy = string;\n\n/** Known values of {@link SSLStatus} that the service accepts. */\nexport enum KnownSSLStatus {\n  /** Enabled */\n  Enabled = \"Enabled\",\n  /** Disabled */\n  Disabled = \"Disabled\"\n}\n\n/**\n * Defines values for SSLStatus. \\\n * {@link KnownSSLStatus} can be used interchangeably with SSLStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled** \\\n * **Disabled**\n */\nexport type SSLStatus = string;\n\n/** Known values of {@link AccountType} that the service accepts. */\nexport enum KnownAccountType {\n  /** GeneralPurposeStorage */\n  GeneralPurposeStorage = \"GeneralPurposeStorage\",\n  /** BlobStorage */\n  BlobStorage = \"BlobStorage\"\n}\n\n/**\n * Defines values for AccountType. \\\n * {@link KnownAccountType} can be used interchangeably with AccountType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **GeneralPurposeStorage** \\\n * **BlobStorage**\n */\nexport type AccountType = string;\n\n/** Known values of {@link StorageAccountStatus} that the service accepts. */\nexport enum KnownStorageAccountStatus {\n  /** OK */\n  OK = \"OK\",\n  /** Offline */\n  Offline = \"Offline\",\n  /** Unknown */\n  Unknown = \"Unknown\",\n  /** Updating */\n  Updating = \"Updating\",\n  /** NeedsAttention */\n  NeedsAttention = \"NeedsAttention\"\n}\n\n/**\n * Defines values for StorageAccountStatus. \\\n * {@link KnownStorageAccountStatus} can be used interchangeably with StorageAccountStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **OK** \\\n * **Offline** \\\n * **Unknown** \\\n * **Updating** \\\n * **NeedsAttention**\n */\nexport type StorageAccountStatus = string;\n\n/** Known values of {@link ContainerStatus} that the service accepts. */\nexport enum KnownContainerStatus {\n  /** OK */\n  OK = \"OK\",\n  /** Offline */\n  Offline = \"Offline\",\n  /** Unknown */\n  Unknown = \"Unknown\",\n  /** Updating */\n  Updating = \"Updating\",\n  /** NeedsAttention */\n  NeedsAttention = \"NeedsAttention\"\n}\n\n/**\n * Defines values for ContainerStatus. \\\n * {@link KnownContainerStatus} can be used interchangeably with ContainerStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **OK** \\\n * **Offline** \\\n * **Unknown** \\\n * **Updating** \\\n * **NeedsAttention**\n */\nexport type ContainerStatus = string;\n\n/** Known values of {@link TriggerEventType} that the service accepts. */\nexport enum KnownTriggerEventType {\n  /** FileEvent */\n  FileEvent = \"FileEvent\",\n  /** PeriodicTimerEvent */\n  PeriodicTimerEvent = \"PeriodicTimerEvent\"\n}\n\n/**\n * Defines values for TriggerEventType. \\\n * {@link KnownTriggerEventType} can be used interchangeably with TriggerEventType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **FileEvent** \\\n * **PeriodicTimerEvent**\n */\nexport type TriggerEventType = string;\n\n/** Known values of {@link InstallRebootBehavior} that the service accepts. */\nexport enum KnownInstallRebootBehavior {\n  /** NeverReboots */\n  NeverReboots = \"NeverReboots\",\n  /** RequiresReboot */\n  RequiresReboot = \"RequiresReboot\",\n  /** RequestReboot */\n  RequestReboot = \"RequestReboot\"\n}\n\n/**\n * Defines values for InstallRebootBehavior. \\\n * {@link KnownInstallRebootBehavior} can be used interchangeably with InstallRebootBehavior,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NeverReboots** \\\n * **RequiresReboot** \\\n * **RequestReboot**\n */\nexport type InstallRebootBehavior = string;\n\n/** Known values of {@link UpdateOperation} that the service accepts. */\nexport enum KnownUpdateOperation {\n  /** None */\n  None = \"None\",\n  /** Scan */\n  Scan = \"Scan\",\n  /** Download */\n  Download = \"Download\",\n  /** Install */\n  Install = \"Install\"\n}\n\n/**\n * Defines values for UpdateOperation. \\\n * {@link KnownUpdateOperation} can be used interchangeably with UpdateOperation,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **Scan** \\\n * **Download** \\\n * **Install**\n */\nexport type UpdateOperation = string;\n\n/** Known values of {@link UpdateType} that the service accepts. */\nexport enum KnownUpdateType {\n  /** Software */\n  Software = \"Software\",\n  /** Kubernetes */\n  Kubernetes = \"Kubernetes\",\n  /** Firmware */\n  Firmware = \"Firmware\"\n}\n\n/**\n * Defines values for UpdateType. \\\n * {@link KnownUpdateType} can be used interchangeably with UpdateType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Software** \\\n * **Kubernetes** \\\n * **Firmware**\n */\nexport type UpdateType = string;\n\n/** Known values of {@link InstallationImpact} that the service accepts. */\nexport enum KnownInstallationImpact {\n  /** None */\n  None = \"None\",\n  /** DeviceRebooted */\n  DeviceRebooted = \"DeviceRebooted\",\n  /** KubernetesWorkloadsDown */\n  KubernetesWorkloadsDown = \"KubernetesWorkloadsDown\"\n}\n\n/**\n * Defines values for InstallationImpact. \\\n * {@link KnownInstallationImpact} can be used interchangeably with InstallationImpact,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **DeviceRebooted** \\\n * **KubernetesWorkloadsDown**\n */\nexport type InstallationImpact = string;\n\n/** Known values of {@link UpdateStatus} that the service accepts. */\nexport enum KnownUpdateStatus {\n  /** DownloadPending */\n  DownloadPending = \"DownloadPending\",\n  /** DownloadStarted */\n  DownloadStarted = \"DownloadStarted\",\n  /** DownloadCompleted */\n  DownloadCompleted = \"DownloadCompleted\",\n  /** InstallStarted */\n  InstallStarted = \"InstallStarted\",\n  /** InstallCompleted */\n  InstallCompleted = \"InstallCompleted\"\n}\n\n/**\n * Defines values for UpdateStatus. \\\n * {@link KnownUpdateStatus} can be used interchangeably with UpdateStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **DownloadPending** \\\n * **DownloadStarted** \\\n * **DownloadCompleted** \\\n * **InstallStarted** \\\n * **InstallCompleted**\n */\nexport type UpdateStatus = string;\n\n/** Known values of {@link AuthenticationType} that the service accepts. */\nexport enum KnownAuthenticationType {\n  /** Invalid */\n  Invalid = \"Invalid\",\n  /** AzureActiveDirectory */\n  AzureActiveDirectory = \"AzureActiveDirectory\"\n}\n\n/**\n * Defines values for AuthenticationType. \\\n * {@link KnownAuthenticationType} can be used interchangeably with AuthenticationType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Invalid** \\\n * **AzureActiveDirectory**\n */\nexport type AuthenticationType = string;\n\n/** Known values of {@link UserType} that the service accepts. */\nexport enum KnownUserType {\n  /** Share */\n  Share = \"Share\",\n  /** LocalManagement */\n  LocalManagement = \"LocalManagement\",\n  /** ARM */\n  ARM = \"ARM\"\n}\n\n/**\n * Defines values for UserType. \\\n * {@link KnownUserType} can be used interchangeably with UserType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Share** \\\n * **LocalManagement** \\\n * **ARM**\n */\nexport type UserType = string;\n\n/** Known values of {@link PlatformType} that the service accepts. */\nexport enum KnownPlatformType {\n  /** Windows */\n  Windows = \"Windows\",\n  /** Linux */\n  Linux = \"Linux\"\n}\n\n/**\n * Defines values for PlatformType. \\\n * {@link KnownPlatformType} can be used interchangeably with PlatformType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Windows** \\\n * **Linux**\n */\nexport type PlatformType = string;\n\n/** Known values of {@link HostPlatformType} that the service accepts. */\nexport enum KnownHostPlatformType {\n  /** KubernetesCluster */\n  KubernetesCluster = \"KubernetesCluster\",\n  /** LinuxVM */\n  LinuxVM = \"LinuxVM\"\n}\n\n/**\n * Defines values for HostPlatformType. \\\n * {@link KnownHostPlatformType} can be used interchangeably with HostPlatformType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **KubernetesCluster** \\\n * **LinuxVM**\n */\nexport type HostPlatformType = string;\n\n/** Known values of {@link AddonState} that the service accepts. */\nexport enum KnownAddonState {\n  /** Invalid */\n  Invalid = \"Invalid\",\n  /** Creating */\n  Creating = \"Creating\",\n  /** Created */\n  Created = \"Created\",\n  /** Updating */\n  Updating = \"Updating\",\n  /** Reconfiguring */\n  Reconfiguring = \"Reconfiguring\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Deleting */\n  Deleting = \"Deleting\"\n}\n\n/**\n * Defines values for AddonState. \\\n * {@link KnownAddonState} can be used interchangeably with AddonState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Invalid** \\\n * **Creating** \\\n * **Created** \\\n * **Updating** \\\n * **Reconfiguring** \\\n * **Failed** \\\n * **Deleting**\n */\nexport type AddonState = string;\n\n/** Known values of {@link RoleStatus} that the service accepts. */\nexport enum KnownRoleStatus {\n  /** Enabled */\n  Enabled = \"Enabled\",\n  /** Disabled */\n  Disabled = \"Disabled\"\n}\n\n/**\n * Defines values for RoleStatus. \\\n * {@link KnownRoleStatus} can be used interchangeably with RoleStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled** \\\n * **Disabled**\n */\nexport type RoleStatus = string;\n\n/** Known values of {@link KubernetesNodeType} that the service accepts. */\nexport enum KnownKubernetesNodeType {\n  /** Invalid */\n  Invalid = \"Invalid\",\n  /** Master */\n  Master = \"Master\",\n  /** Worker */\n  Worker = \"Worker\"\n}\n\n/**\n * Defines values for KubernetesNodeType. \\\n * {@link KnownKubernetesNodeType} can be used interchangeably with KubernetesNodeType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Invalid** \\\n * **Master** \\\n * **Worker**\n */\nexport type KubernetesNodeType = string;\n\n/** Known values of {@link KubernetesState} that the service accepts. */\nexport enum KnownKubernetesState {\n  /** Invalid */\n  Invalid = \"Invalid\",\n  /** Creating */\n  Creating = \"Creating\",\n  /** Created */\n  Created = \"Created\",\n  /** Updating */\n  Updating = \"Updating\",\n  /** Reconfiguring */\n  Reconfiguring = \"Reconfiguring\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Deleting */\n  Deleting = \"Deleting\"\n}\n\n/**\n * Defines values for KubernetesState. \\\n * {@link KnownKubernetesState} can be used interchangeably with KubernetesState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Invalid** \\\n * **Creating** \\\n * **Created** \\\n * **Updating** \\\n * **Reconfiguring** \\\n * **Failed** \\\n * **Deleting**\n */\nexport type KubernetesState = string;\n\n/** Known values of {@link PosixComplianceStatus} that the service accepts. */\nexport enum KnownPosixComplianceStatus {\n  /** Invalid */\n  Invalid = \"Invalid\",\n  /** Enabled */\n  Enabled = \"Enabled\",\n  /** Disabled */\n  Disabled = \"Disabled\"\n}\n\n/**\n * Defines values for PosixComplianceStatus. \\\n * {@link KnownPosixComplianceStatus} can be used interchangeably with PosixComplianceStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Invalid** \\\n * **Enabled** \\\n * **Disabled**\n */\nexport type PosixComplianceStatus = string;\n\n/** Optional parameters. */\nexport interface OperationsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type OperationsListResponse = OperationsList;\n\n/** Optional parameters. */\nexport interface OperationsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type OperationsListNextResponse = OperationsList;\n\n/** Optional parameters. */\nexport interface AvailableSkusListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type AvailableSkusListResponse = DataBoxEdgeSkuList;\n\n/** Optional parameters. */\nexport interface AvailableSkusListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type AvailableSkusListNextResponse = DataBoxEdgeSkuList;\n\n/** Optional parameters. */\nexport interface DevicesListBySubscriptionOptionalParams\n  extends coreClient.OperationOptions {\n  /** Specify $expand=details to populate additional fields related to the resource or Specify $skipToken=<token> to populate the next page in the list. */\n  expand?: string;\n}\n\n/** Contains response data for the listBySubscription operation. */\nexport type DevicesListBySubscriptionResponse = DataBoxEdgeDeviceList;\n\n/** Optional parameters. */\nexport interface DevicesListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {\n  /** Specify $expand=details to populate additional fields related to the resource or Specify $skipToken=<token> to populate the next page in the list. */\n  expand?: string;\n}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type DevicesListByResourceGroupResponse = DataBoxEdgeDeviceList;\n\n/** Optional parameters. */\nexport interface DevicesGetOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type DevicesGetResponse = DataBoxEdgeDevice;\n\n/** Optional parameters. */\nexport interface DevicesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type DevicesCreateOrUpdateResponse = DataBoxEdgeDevice;\n\n/** Optional parameters. */\nexport interface DevicesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface DevicesUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the update operation. */\nexport type DevicesUpdateResponse = DataBoxEdgeDevice;\n\n/** Optional parameters. */\nexport interface DevicesDownloadUpdatesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface DevicesGenerateCertificateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the generateCertificate operation. */\nexport type DevicesGenerateCertificateResponse = GenerateCertResponse;\n\n/** Optional parameters. */\nexport interface DevicesGetExtendedInformationOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getExtendedInformation operation. */\nexport type DevicesGetExtendedInformationResponse = DataBoxEdgeDeviceExtendedInfo;\n\n/** Optional parameters. */\nexport interface DevicesInstallUpdatesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface DevicesGetNetworkSettingsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getNetworkSettings operation. */\nexport type DevicesGetNetworkSettingsResponse = NetworkSettings;\n\n/** Optional parameters. */\nexport interface DevicesScanForUpdatesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface DevicesCreateOrUpdateSecuritySettingsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface DevicesUpdateExtendedInformationOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the updateExtendedInformation operation. */\nexport type DevicesUpdateExtendedInformationResponse = DataBoxEdgeDeviceExtendedInfo;\n\n/** Optional parameters. */\nexport interface DevicesGetUpdateSummaryOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getUpdateSummary operation. */\nexport type DevicesGetUpdateSummaryResponse = UpdateSummary;\n\n/** Optional parameters. */\nexport interface DevicesUploadCertificateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the uploadCertificate operation. */\nexport type DevicesUploadCertificateResponse = UploadCertificateResponse;\n\n/** Optional parameters. */\nexport interface DevicesListBySubscriptionNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Specify $expand=details to populate additional fields related to the resource or Specify $skipToken=<token> to populate the next page in the list. */\n  expand?: string;\n}\n\n/** Contains response data for the listBySubscriptionNext operation. */\nexport type DevicesListBySubscriptionNextResponse = DataBoxEdgeDeviceList;\n\n/** Optional parameters. */\nexport interface DevicesListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Specify $expand=details to populate additional fields related to the resource or Specify $skipToken=<token> to populate the next page in the list. */\n  expand?: string;\n}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type DevicesListByResourceGroupNextResponse = DataBoxEdgeDeviceList;\n\n/** Optional parameters. */\nexport interface AlertsListByDataBoxEdgeDeviceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDataBoxEdgeDevice operation. */\nexport type AlertsListByDataBoxEdgeDeviceResponse = AlertList;\n\n/** Optional parameters. */\nexport interface AlertsGetOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type AlertsGetResponse = Alert;\n\n/** Optional parameters. */\nexport interface AlertsListByDataBoxEdgeDeviceNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDataBoxEdgeDeviceNext operation. */\nexport type AlertsListByDataBoxEdgeDeviceNextResponse = AlertList;\n\n/** Optional parameters. */\nexport interface BandwidthSchedulesListByDataBoxEdgeDeviceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDataBoxEdgeDevice operation. */\nexport type BandwidthSchedulesListByDataBoxEdgeDeviceResponse = BandwidthSchedulesList;\n\n/** Optional parameters. */\nexport interface BandwidthSchedulesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type BandwidthSchedulesGetResponse = BandwidthSchedule;\n\n/** Optional parameters. */\nexport interface BandwidthSchedulesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type BandwidthSchedulesCreateOrUpdateResponse = BandwidthSchedule;\n\n/** Optional parameters. */\nexport interface BandwidthSchedulesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface BandwidthSchedulesListByDataBoxEdgeDeviceNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDataBoxEdgeDeviceNext operation. */\nexport type BandwidthSchedulesListByDataBoxEdgeDeviceNextResponse = BandwidthSchedulesList;\n\n/** Optional parameters. */\nexport interface DiagnosticSettingsGetDiagnosticProactiveLogCollectionSettingsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getDiagnosticProactiveLogCollectionSettings operation. */\nexport type DiagnosticSettingsGetDiagnosticProactiveLogCollectionSettingsResponse = DiagnosticProactiveLogCollectionSettings;\n\n/** Optional parameters. */\nexport interface DiagnosticSettingsUpdateDiagnosticProactiveLogCollectionSettingsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the updateDiagnosticProactiveLogCollectionSettings operation. */\nexport type DiagnosticSettingsUpdateDiagnosticProactiveLogCollectionSettingsResponse = DiagnosticProactiveLogCollectionSettings;\n\n/** Optional parameters. */\nexport interface DiagnosticSettingsGetDiagnosticRemoteSupportSettingsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getDiagnosticRemoteSupportSettings operation. */\nexport type DiagnosticSettingsGetDiagnosticRemoteSupportSettingsResponse = DiagnosticRemoteSupportSettings;\n\n/** Optional parameters. */\nexport interface DiagnosticSettingsUpdateDiagnosticRemoteSupportSettingsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the updateDiagnosticRemoteSupportSettings operation. */\nexport type DiagnosticSettingsUpdateDiagnosticRemoteSupportSettingsResponse = DiagnosticRemoteSupportSettings;\n\n/** Optional parameters. */\nexport interface JobsGetOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type JobsGetResponse = Job;\n\n/** Optional parameters. */\nexport interface NodesListByDataBoxEdgeDeviceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDataBoxEdgeDevice operation. */\nexport type NodesListByDataBoxEdgeDeviceResponse = NodeList;\n\n/** Optional parameters. */\nexport interface NodesListByDataBoxEdgeDeviceNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDataBoxEdgeDeviceNext operation. */\nexport type NodesListByDataBoxEdgeDeviceNextResponse = NodeList;\n\n/** Optional parameters. */\nexport interface OperationsStatusGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type OperationsStatusGetResponse = Job;\n\n/** Optional parameters. */\nexport interface OrdersListByDataBoxEdgeDeviceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDataBoxEdgeDevice operation. */\nexport type OrdersListByDataBoxEdgeDeviceResponse = OrderList;\n\n/** Optional parameters. */\nexport interface OrdersGetOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type OrdersGetResponse = Order;\n\n/** Optional parameters. */\nexport interface OrdersCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type OrdersCreateOrUpdateResponse = Order;\n\n/** Optional parameters. */\nexport interface OrdersDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface OrdersListDCAccessCodeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listDCAccessCode operation. */\nexport type OrdersListDCAccessCodeResponse = DCAccessCode;\n\n/** Optional parameters. */\nexport interface OrdersListByDataBoxEdgeDeviceNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDataBoxEdgeDeviceNext operation. */\nexport type OrdersListByDataBoxEdgeDeviceNextResponse = OrderList;\n\n/** Optional parameters. */\nexport interface RolesListByDataBoxEdgeDeviceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDataBoxEdgeDevice operation. */\nexport type RolesListByDataBoxEdgeDeviceResponse = RoleList;\n\n/** Optional parameters. */\nexport interface RolesGetOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type RolesGetResponse = RoleUnion;\n\n/** Optional parameters. */\nexport interface RolesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type RolesCreateOrUpdateResponse = RoleUnion;\n\n/** Optional parameters. */\nexport interface RolesDeleteOptionalParams extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface RolesListByDataBoxEdgeDeviceNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDataBoxEdgeDeviceNext operation. */\nexport type RolesListByDataBoxEdgeDeviceNextResponse = RoleList;\n\n/** Optional parameters. */\nexport interface AddonsListByRoleOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByRole operation. */\nexport type AddonsListByRoleResponse = AddonList;\n\n/** Optional parameters. */\nexport interface AddonsGetOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type AddonsGetResponse = AddonUnion;\n\n/** Optional parameters. */\nexport interface AddonsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type AddonsCreateOrUpdateResponse = AddonUnion;\n\n/** Optional parameters. */\nexport interface AddonsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface AddonsListByRoleNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByRoleNext operation. */\nexport type AddonsListByRoleNextResponse = AddonList;\n\n/** Optional parameters. */\nexport interface MonitoringConfigListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type MonitoringConfigListResponse = MonitoringMetricConfigurationList;\n\n/** Optional parameters. */\nexport interface MonitoringConfigGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type MonitoringConfigGetResponse = MonitoringMetricConfiguration;\n\n/** Optional parameters. */\nexport interface MonitoringConfigCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type MonitoringConfigCreateOrUpdateResponse = MonitoringMetricConfiguration;\n\n/** Optional parameters. */\nexport interface MonitoringConfigDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface MonitoringConfigListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type MonitoringConfigListNextResponse = MonitoringMetricConfigurationList;\n\n/** Optional parameters. */\nexport interface SharesListByDataBoxEdgeDeviceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDataBoxEdgeDevice operation. */\nexport type SharesListByDataBoxEdgeDeviceResponse = ShareList;\n\n/** Optional parameters. */\nexport interface SharesGetOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type SharesGetResponse = Share;\n\n/** Optional parameters. */\nexport interface SharesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type SharesCreateOrUpdateResponse = Share;\n\n/** Optional parameters. */\nexport interface SharesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface SharesRefreshOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface SharesListByDataBoxEdgeDeviceNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDataBoxEdgeDeviceNext operation. */\nexport type SharesListByDataBoxEdgeDeviceNextResponse = ShareList;\n\n/** Optional parameters. */\nexport interface StorageAccountCredentialsListByDataBoxEdgeDeviceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDataBoxEdgeDevice operation. */\nexport type StorageAccountCredentialsListByDataBoxEdgeDeviceResponse = StorageAccountCredentialList;\n\n/** Optional parameters. */\nexport interface StorageAccountCredentialsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type StorageAccountCredentialsGetResponse = StorageAccountCredential;\n\n/** Optional parameters. */\nexport interface StorageAccountCredentialsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type StorageAccountCredentialsCreateOrUpdateResponse = StorageAccountCredential;\n\n/** Optional parameters. */\nexport interface StorageAccountCredentialsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface StorageAccountCredentialsListByDataBoxEdgeDeviceNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDataBoxEdgeDeviceNext operation. */\nexport type StorageAccountCredentialsListByDataBoxEdgeDeviceNextResponse = StorageAccountCredentialList;\n\n/** Optional parameters. */\nexport interface StorageAccountsListByDataBoxEdgeDeviceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDataBoxEdgeDevice operation. */\nexport type StorageAccountsListByDataBoxEdgeDeviceResponse = StorageAccountList;\n\n/** Optional parameters. */\nexport interface StorageAccountsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type StorageAccountsGetResponse = StorageAccount;\n\n/** Optional parameters. */\nexport interface StorageAccountsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type StorageAccountsCreateOrUpdateResponse = StorageAccount;\n\n/** Optional parameters. */\nexport interface StorageAccountsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface StorageAccountsListByDataBoxEdgeDeviceNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDataBoxEdgeDeviceNext operation. */\nexport type StorageAccountsListByDataBoxEdgeDeviceNextResponse = StorageAccountList;\n\n/** Optional parameters. */\nexport interface ContainersListByStorageAccountOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByStorageAccount operation. */\nexport type ContainersListByStorageAccountResponse = ContainerList;\n\n/** Optional parameters. */\nexport interface ContainersGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ContainersGetResponse = Container;\n\n/** Optional parameters. */\nexport interface ContainersCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ContainersCreateOrUpdateResponse = Container;\n\n/** Optional parameters. */\nexport interface ContainersDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ContainersRefreshOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ContainersListByStorageAccountNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByStorageAccountNext operation. */\nexport type ContainersListByStorageAccountNextResponse = ContainerList;\n\n/** Optional parameters. */\nexport interface TriggersListByDataBoxEdgeDeviceOptionalParams\n  extends coreClient.OperationOptions {\n  /** Specify $filter='CustomContextTag eq <tag>' to filter on custom context tag property */\n  filter?: string;\n}\n\n/** Contains response data for the listByDataBoxEdgeDevice operation. */\nexport type TriggersListByDataBoxEdgeDeviceResponse = TriggerList;\n\n/** Optional parameters. */\nexport interface TriggersGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type TriggersGetResponse = TriggerUnion;\n\n/** Optional parameters. */\nexport interface TriggersCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type TriggersCreateOrUpdateResponse = TriggerUnion;\n\n/** Optional parameters. */\nexport interface TriggersDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface TriggersListByDataBoxEdgeDeviceNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Specify $filter='CustomContextTag eq <tag>' to filter on custom context tag property */\n  filter?: string;\n}\n\n/** Contains response data for the listByDataBoxEdgeDeviceNext operation. */\nexport type TriggersListByDataBoxEdgeDeviceNextResponse = TriggerList;\n\n/** Optional parameters. */\nexport interface SupportPackagesTriggerSupportPackageOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface UsersListByDataBoxEdgeDeviceOptionalParams\n  extends coreClient.OperationOptions {\n  /** Specify $filter='Type eq <type>' to filter on user type property */\n  filter?: string;\n}\n\n/** Contains response data for the listByDataBoxEdgeDevice operation. */\nexport type UsersListByDataBoxEdgeDeviceResponse = UserList;\n\n/** Optional parameters. */\nexport interface UsersGetOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type UsersGetResponse = User;\n\n/** Optional parameters. */\nexport interface UsersCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type UsersCreateOrUpdateResponse = User;\n\n/** Optional parameters. */\nexport interface UsersDeleteOptionalParams extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface UsersListByDataBoxEdgeDeviceNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Specify $filter='Type eq <type>' to filter on user type property */\n  filter?: string;\n}\n\n/** Contains response data for the listByDataBoxEdgeDeviceNext operation. */\nexport type UsersListByDataBoxEdgeDeviceNextResponse = UserList;\n\n/** Optional parameters. */\nexport interface DataBoxEdgeManagementClientOptionalParams\n  extends coreClient.ServiceClientOptions {\n  /** server parameter */\n  $host?: string;\n  /** Api Version */\n  apiVersion?: string;\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport const OperationsList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationsList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Operation\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Operation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Operation\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isDataAction: {\n        serializedName: \"isDataAction\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      display: {\n        serializedName: \"display\",\n        type: {\n          name: \"Composite\",\n          className: \"OperationDisplay\"\n        }\n      },\n      origin: {\n        serializedName: \"origin\",\n        type: {\n          name: \"String\"\n        }\n      },\n      serviceSpecification: {\n        serializedName: \"properties.serviceSpecification\",\n        type: {\n          name: \"Composite\",\n          className: \"ServiceSpecification\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationDisplay: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationDisplay\",\n    modelProperties: {\n      provider: {\n        serializedName: \"provider\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resource: {\n        serializedName: \"resource\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operation: {\n        serializedName: \"operation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceSpecification: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServiceSpecification\",\n    modelProperties: {\n      metricSpecifications: {\n        serializedName: \"metricSpecifications\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MetricSpecificationV1\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MetricSpecificationV1: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetricSpecificationV1\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayDescription: {\n        serializedName: \"displayDescription\",\n        type: {\n          name: \"String\"\n        }\n      },\n      unit: {\n        serializedName: \"unit\",\n        type: {\n          name: \"String\"\n        }\n      },\n      aggregationType: {\n        serializedName: \"aggregationType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      dimensions: {\n        serializedName: \"dimensions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MetricDimensionV1\"\n            }\n          }\n        }\n      },\n      fillGapWithZero: {\n        serializedName: \"fillGapWithZero\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      category: {\n        serializedName: \"category\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceIdDimensionNameOverride: {\n        serializedName: \"resourceIdDimensionNameOverride\",\n        type: {\n          name: \"String\"\n        }\n      },\n      supportedTimeGrainTypes: {\n        serializedName: \"supportedTimeGrainTypes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      supportedAggregationTypes: {\n        serializedName: \"supportedAggregationTypes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MetricDimensionV1: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetricDimensionV1\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      toBeExportedForShoebox: {\n        serializedName: \"toBeExportedForShoebox\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const CloudError: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CloudError\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"CloudErrorBody\"\n        }\n      }\n    }\n  }\n};\n\nexport const CloudErrorBody: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CloudErrorBody\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      },\n      details: {\n        serializedName: \"details\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CloudErrorBody\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DataBoxEdgeSkuList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DataBoxEdgeSkuList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DataBoxEdgeSku\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DataBoxEdgeSku: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DataBoxEdgeSku\",\n    modelProperties: {\n      resourceType: {\n        serializedName: \"resourceType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      kind: {\n        serializedName: \"kind\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tier: {\n        serializedName: \"tier\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      size: {\n        serializedName: \"size\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      family: {\n        serializedName: \"family\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      locations: {\n        serializedName: \"locations\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      apiVersions: {\n        serializedName: \"apiVersions\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      locationInfo: {\n        serializedName: \"locationInfo\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SkuLocationInfo\"\n            }\n          }\n        }\n      },\n      costs: {\n        serializedName: \"costs\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SkuCost\"\n            }\n          }\n        }\n      },\n      signupOption: {\n        serializedName: \"signupOption\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"version\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      availability: {\n        serializedName: \"availability\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      shipmentTypes: {\n        serializedName: \"shipmentTypes\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      capabilities: {\n        serializedName: \"capabilities\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SkuCapability\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SkuLocationInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SkuLocationInfo\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      zones: {\n        serializedName: \"zones\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      sites: {\n        serializedName: \"sites\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SkuCost: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SkuCost\",\n    modelProperties: {\n      meterId: {\n        serializedName: \"meterId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      quantity: {\n        serializedName: \"quantity\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      extendedUnit: {\n        serializedName: \"extendedUnit\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SkuCapability: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SkuCapability\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DataBoxEdgeDeviceList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DataBoxEdgeDeviceList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DataBoxEdgeDevice\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Sku: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Sku\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tier: {\n        serializedName: \"tier\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceIdentity: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceIdentity\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      principalId: {\n        serializedName: \"principalId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantId: {\n        serializedName: \"tenantId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SystemData: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SystemData\",\n    modelProperties: {\n      createdBy: {\n        serializedName: \"createdBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdByType: {\n        serializedName: \"createdByType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdAt: {\n        serializedName: \"createdAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastModifiedBy: {\n        serializedName: \"lastModifiedBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedByType: {\n        serializedName: \"lastModifiedByType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedAt: {\n        serializedName: \"lastModifiedAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceMoveDetails: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceMoveDetails\",\n    modelProperties: {\n      operationInProgress: {\n        serializedName: \"operationInProgress\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operationInProgressLockTimeoutInUTC: {\n        serializedName: \"operationInProgressLockTimeoutInUTC\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const EdgeProfile: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EdgeProfile\",\n    modelProperties: {\n      subscription: {\n        serializedName: \"subscription\",\n        type: {\n          name: \"Composite\",\n          className: \"EdgeProfileSubscription\"\n        }\n      }\n    }\n  }\n};\n\nexport const EdgeProfileSubscription: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EdgeProfileSubscription\",\n    modelProperties: {\n      registrationId: {\n        serializedName: \"registrationId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      state: {\n        serializedName: \"state\",\n        type: {\n          name: \"String\"\n        }\n      },\n      registrationDate: {\n        serializedName: \"registrationDate\",\n        type: {\n          name: \"String\"\n        }\n      },\n      subscriptionId: {\n        serializedName: \"subscriptionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantId: {\n        serializedName: \"properties.tenantId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      locationPlacementId: {\n        serializedName: \"properties.locationPlacementId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      quotaId: {\n        serializedName: \"properties.quotaId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      serializedDetails: {\n        serializedName: \"properties.serializedDetails\",\n        type: {\n          name: \"String\"\n        }\n      },\n      registeredFeatures: {\n        serializedName: \"properties.registeredFeatures\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SubscriptionRegisteredFeatures\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SubscriptionRegisteredFeatures: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SubscriptionRegisteredFeatures\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      state: {\n        serializedName: \"state\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DataResidency: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DataResidency\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ARMBaseModel: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ARMBaseModel\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DataBoxEdgeDevicePatch: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DataBoxEdgeDevicePatch\",\n    modelProperties: {\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceIdentity\"\n        }\n      },\n      edgeProfile: {\n        serializedName: \"properties.edgeProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"EdgeProfilePatch\"\n        }\n      }\n    }\n  }\n};\n\nexport const EdgeProfilePatch: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EdgeProfilePatch\",\n    modelProperties: {\n      subscription: {\n        serializedName: \"subscription\",\n        type: {\n          name: \"Composite\",\n          className: \"EdgeProfileSubscriptionPatch\"\n        }\n      }\n    }\n  }\n};\n\nexport const EdgeProfileSubscriptionPatch: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EdgeProfileSubscriptionPatch\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AlertList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AlertList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Alert\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AlertErrorDetails: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AlertErrorDetails\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"errorCode\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      errorMessage: {\n        serializedName: \"errorMessage\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      occurrences: {\n        serializedName: \"occurrences\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const BandwidthSchedulesList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BandwidthSchedulesList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BandwidthSchedule\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RemoteSupportSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RemoteSupportSettings\",\n    modelProperties: {\n      remoteApplicationType: {\n        serializedName: \"remoteApplicationType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accessLevel: {\n        serializedName: \"accessLevel\",\n        type: {\n          name: \"String\"\n        }\n      },\n      expirationTimeStampInUTC: {\n        serializedName: \"expirationTimeStampInUTC\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const GenerateCertResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GenerateCertResponse\",\n    modelProperties: {\n      publicKey: {\n        serializedName: \"publicKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      privateKey: {\n        serializedName: \"privateKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      expiryTimeInUTC: {\n        serializedName: \"expiryTimeInUTC\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Secret: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Secret\",\n    modelProperties: {\n      encryptedSecret: {\n        serializedName: \"encryptedSecret\",\n        type: {\n          name: \"Composite\",\n          className: \"AsymmetricEncryptedSecret\"\n        }\n      },\n      keyVaultId: {\n        serializedName: \"keyVaultId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AsymmetricEncryptedSecret: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AsymmetricEncryptedSecret\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      encryptionCertThumbprint: {\n        serializedName: \"encryptionCertThumbprint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      encryptionAlgorithm: {\n        serializedName: \"encryptionAlgorithm\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Job: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Job\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      startTime: {\n        serializedName: \"startTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endTime: {\n        serializedName: \"endTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      percentComplete: {\n        serializedName: \"percentComplete\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"JobErrorDetails\"\n        }\n      },\n      jobType: {\n        serializedName: \"properties.jobType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      currentStage: {\n        serializedName: \"properties.currentStage\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      downloadProgress: {\n        serializedName: \"properties.downloadProgress\",\n        type: {\n          name: \"Composite\",\n          className: \"UpdateDownloadProgress\"\n        }\n      },\n      installProgress: {\n        serializedName: \"properties.installProgress\",\n        type: {\n          name: \"Composite\",\n          className: \"UpdateInstallProgress\"\n        }\n      },\n      totalRefreshErrors: {\n        serializedName: \"properties.totalRefreshErrors\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      errorManifestFile: {\n        serializedName: \"properties.errorManifestFile\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      refreshedEntityId: {\n        serializedName: \"properties.refreshedEntityId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      folder: {\n        serializedName: \"properties.folder\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const JobErrorDetails: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"JobErrorDetails\",\n    modelProperties: {\n      errorDetails: {\n        serializedName: \"errorDetails\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"JobErrorItem\"\n            }\n          }\n        }\n      },\n      code: {\n        serializedName: \"code\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const JobErrorItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"JobErrorItem\",\n    modelProperties: {\n      recommendations: {\n        serializedName: \"recommendations\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      code: {\n        serializedName: \"code\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UpdateDownloadProgress: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UpdateDownloadProgress\",\n    modelProperties: {\n      downloadPhase: {\n        serializedName: \"downloadPhase\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      percentComplete: {\n        serializedName: \"percentComplete\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      totalBytesToDownload: {\n        serializedName: \"totalBytesToDownload\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      totalBytesDownloaded: {\n        serializedName: \"totalBytesDownloaded\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      numberOfUpdatesToDownload: {\n        serializedName: \"numberOfUpdatesToDownload\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      numberOfUpdatesDownloaded: {\n        serializedName: \"numberOfUpdatesDownloaded\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const UpdateInstallProgress: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UpdateInstallProgress\",\n    modelProperties: {\n      percentComplete: {\n        serializedName: \"percentComplete\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      numberOfUpdatesToInstall: {\n        serializedName: \"numberOfUpdatesToInstall\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      numberOfUpdatesInstalled: {\n        serializedName: \"numberOfUpdatesInstalled\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const NetworkAdapter: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NetworkAdapter\",\n    modelProperties: {\n      adapterId: {\n        serializedName: \"adapterId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      adapterPosition: {\n        serializedName: \"adapterPosition\",\n        type: {\n          name: \"Composite\",\n          className: \"NetworkAdapterPosition\"\n        }\n      },\n      index: {\n        serializedName: \"index\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      nodeId: {\n        serializedName: \"nodeId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      networkAdapterName: {\n        serializedName: \"networkAdapterName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      label: {\n        serializedName: \"label\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      macAddress: {\n        serializedName: \"macAddress\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      linkSpeed: {\n        serializedName: \"linkSpeed\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      rdmaStatus: {\n        serializedName: \"rdmaStatus\",\n        type: {\n          name: \"String\"\n        }\n      },\n      dhcpStatus: {\n        serializedName: \"dhcpStatus\",\n        type: {\n          name: \"String\"\n        }\n      },\n      ipv4Configuration: {\n        serializedName: \"ipv4Configuration\",\n        type: {\n          name: \"Composite\",\n          className: \"Ipv4Config\"\n        }\n      },\n      ipv6Configuration: {\n        serializedName: \"ipv6Configuration\",\n        type: {\n          name: \"Composite\",\n          className: \"Ipv6Config\"\n        }\n      },\n      ipv6LinkLocalAddress: {\n        serializedName: \"ipv6LinkLocalAddress\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      dnsServers: {\n        serializedName: \"dnsServers\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const NetworkAdapterPosition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NetworkAdapterPosition\",\n    modelProperties: {\n      networkGroup: {\n        serializedName: \"networkGroup\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      port: {\n        serializedName: \"port\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Ipv4Config: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Ipv4Config\",\n    modelProperties: {\n      ipAddress: {\n        serializedName: \"ipAddress\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      subnet: {\n        serializedName: \"subnet\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      gateway: {\n        serializedName: \"gateway\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Ipv6Config: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Ipv6Config\",\n    modelProperties: {\n      ipAddress: {\n        serializedName: \"ipAddress\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      prefixLength: {\n        serializedName: \"prefixLength\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      gateway: {\n        serializedName: \"gateway\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NodeList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NodeList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Node\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OrderList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OrderList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Order\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContactDetails: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContactDetails\",\n    modelProperties: {\n      contactPerson: {\n        serializedName: \"contactPerson\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      companyName: {\n        serializedName: \"companyName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      phone: {\n        serializedName: \"phone\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      emailList: {\n        serializedName: \"emailList\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Address: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Address\",\n    modelProperties: {\n      addressLine1: {\n        serializedName: \"addressLine1\",\n        type: {\n          name: \"String\"\n        }\n      },\n      addressLine2: {\n        serializedName: \"addressLine2\",\n        type: {\n          name: \"String\"\n        }\n      },\n      addressLine3: {\n        serializedName: \"addressLine3\",\n        type: {\n          name: \"String\"\n        }\n      },\n      postalCode: {\n        serializedName: \"postalCode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      city: {\n        serializedName: \"city\",\n        type: {\n          name: \"String\"\n        }\n      },\n      state: {\n        serializedName: \"state\",\n        type: {\n          name: \"String\"\n        }\n      },\n      country: {\n        serializedName: \"country\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OrderStatus: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OrderStatus\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      updateDateTime: {\n        serializedName: \"updateDateTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      comments: {\n        serializedName: \"comments\",\n        type: {\n          name: \"String\"\n        }\n      },\n      trackingInformation: {\n        serializedName: \"trackingInformation\",\n        type: {\n          name: \"Composite\",\n          className: \"TrackingInfo\"\n        }\n      },\n      additionalOrderDetails: {\n        serializedName: \"additionalOrderDetails\",\n        readOnly: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const TrackingInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TrackingInfo\",\n    modelProperties: {\n      serialNumber: {\n        serializedName: \"serialNumber\",\n        type: {\n          name: \"String\"\n        }\n      },\n      carrierName: {\n        serializedName: \"carrierName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      trackingId: {\n        serializedName: \"trackingId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      trackingUrl: {\n        serializedName: \"trackingUrl\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DCAccessCode: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DCAccessCode\",\n    modelProperties: {\n      authCode: {\n        serializedName: \"properties.authCode\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoleList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Role\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AddonList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AddonList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Addon\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MonitoringMetricConfigurationList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MonitoringMetricConfigurationList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MonitoringMetricConfiguration\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MetricConfiguration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetricConfiguration\",\n    modelProperties: {\n      resourceId: {\n        serializedName: \"resourceId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      mdmAccount: {\n        serializedName: \"mdmAccount\",\n        type: {\n          name: \"String\"\n        }\n      },\n      metricNameSpace: {\n        serializedName: \"metricNameSpace\",\n        type: {\n          name: \"String\"\n        }\n      },\n      counterSets: {\n        serializedName: \"counterSets\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MetricCounterSet\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MetricCounterSet: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetricCounterSet\",\n    modelProperties: {\n      counters: {\n        serializedName: \"counters\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MetricCounter\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MetricCounter: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetricCounter\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      instance: {\n        serializedName: \"instance\",\n        type: {\n          name: \"String\"\n        }\n      },\n      dimensionFilter: {\n        serializedName: \"dimensionFilter\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MetricDimension\"\n            }\n          }\n        }\n      },\n      additionalDimensions: {\n        serializedName: \"additionalDimensions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MetricDimension\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MetricDimension: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetricDimension\",\n    modelProperties: {\n      sourceType: {\n        serializedName: \"sourceType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      sourceName: {\n        serializedName: \"sourceName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ShareList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Share\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AzureContainerInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AzureContainerInfo\",\n    modelProperties: {\n      storageAccountCredentialId: {\n        serializedName: \"storageAccountCredentialId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      containerName: {\n        serializedName: \"containerName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      dataFormat: {\n        serializedName: \"dataFormat\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UserAccessRight: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UserAccessRight\",\n    modelProperties: {\n      userId: {\n        serializedName: \"userId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      accessType: {\n        serializedName: \"accessType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ClientAccessRight: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ClientAccessRight\",\n    modelProperties: {\n      client: {\n        serializedName: \"client\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      accessPermission: {\n        serializedName: \"accessPermission\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RefreshDetails: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RefreshDetails\",\n    modelProperties: {\n      inProgressRefreshJobId: {\n        serializedName: \"inProgressRefreshJobId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastCompletedRefreshJobTimeInUTC: {\n        serializedName: \"lastCompletedRefreshJobTimeInUTC\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      errorManifestFile: {\n        serializedName: \"errorManifestFile\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastJob: {\n        serializedName: \"lastJob\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MountPointMap: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MountPointMap\",\n    modelProperties: {\n      shareId: {\n        serializedName: \"shareId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      roleId: {\n        serializedName: \"roleId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      mountPoint: {\n        serializedName: \"mountPoint\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      mountType: {\n        serializedName: \"mountType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      roleType: {\n        serializedName: \"roleType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const StorageAccountCredentialList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StorageAccountCredentialList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"StorageAccountCredential\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const StorageAccountList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StorageAccountList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"StorageAccount\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContainerList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Container\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TriggerList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TriggerList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Trigger\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DataBoxEdgeDeviceExtendedInfoPatch: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DataBoxEdgeDeviceExtendedInfoPatch\",\n    modelProperties: {\n      clientSecretStoreId: {\n        serializedName: \"clientSecretStoreId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientSecretStoreUrl: {\n        serializedName: \"clientSecretStoreUrl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      channelIntegrityKeyName: {\n        serializedName: \"channelIntegrityKeyName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      channelIntegrityKeyVersion: {\n        serializedName: \"channelIntegrityKeyVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      syncStatus: {\n        serializedName: \"syncStatus\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UpdateDetails: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UpdateDetails\",\n    modelProperties: {\n      updateTitle: {\n        serializedName: \"updateTitle\",\n        type: {\n          name: \"String\"\n        }\n      },\n      updateSize: {\n        serializedName: \"updateSize\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      updateType: {\n        serializedName: \"updateType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetVersion: {\n        serializedName: \"targetVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      friendlyVersionNumber: {\n        serializedName: \"friendlyVersionNumber\",\n        type: {\n          name: \"String\"\n        }\n      },\n      estimatedInstallTimeInMins: {\n        serializedName: \"estimatedInstallTimeInMins\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      rebootBehavior: {\n        serializedName: \"rebootBehavior\",\n        type: {\n          name: \"String\"\n        }\n      },\n      installationImpact: {\n        serializedName: \"installationImpact\",\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UploadCertificateRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UploadCertificateRequest\",\n    modelProperties: {\n      authenticationType: {\n        serializedName: \"properties.authenticationType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      certificate: {\n        serializedName: \"properties.certificate\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UploadCertificateResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UploadCertificateResponse\",\n    modelProperties: {\n      authType: {\n        serializedName: \"authType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceId: {\n        serializedName: \"resourceId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      aadAuthority: {\n        serializedName: \"aadAuthority\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      aadTenantId: {\n        serializedName: \"aadTenantId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      servicePrincipalClientId: {\n        serializedName: \"servicePrincipalClientId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      servicePrincipalObjectId: {\n        serializedName: \"servicePrincipalObjectId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      azureManagementEndpointAudience: {\n        serializedName: \"azureManagementEndpointAudience\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      aadAudience: {\n        serializedName: \"aadAudience\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UserList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UserList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"User\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareAccessRight: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ShareAccessRight\",\n    modelProperties: {\n      shareId: {\n        serializedName: \"shareId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      accessType: {\n        serializedName: \"accessType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Authentication: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Authentication\",\n    modelProperties: {\n      symmetricKey: {\n        serializedName: \"symmetricKey\",\n        type: {\n          name: \"Composite\",\n          className: \"SymmetricKey\"\n        }\n      }\n    }\n  }\n};\n\nexport const SymmetricKey: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SymmetricKey\",\n    modelProperties: {\n      connectionString: {\n        serializedName: \"connectionString\",\n        type: {\n          name: \"Composite\",\n          className: \"AsymmetricEncryptedSecret\"\n        }\n      }\n    }\n  }\n};\n\nexport const CniConfig: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CniConfig\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"version\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      podSubnet: {\n        serializedName: \"podSubnet\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      serviceSubnet: {\n        serializedName: \"serviceSubnet\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ComputeResource\",\n    modelProperties: {\n      processorCount: {\n        serializedName: \"processorCount\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      memoryInGB: {\n        serializedName: \"memoryInGB\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const DataBoxEdgeMoveRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DataBoxEdgeMoveRequest\",\n    modelProperties: {\n      targetResourceGroup: {\n        serializedName: \"targetResourceGroup\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resources: {\n        serializedName: \"resources\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const EtcdInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EtcdInfo\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"version\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileSourceInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FileSourceInfo\",\n    modelProperties: {\n      shareId: {\n        serializedName: \"shareId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoleSinkInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleSinkInfo\",\n    modelProperties: {\n      roleId: {\n        serializedName: \"roleId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ImageRepositoryCredential: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ImageRepositoryCredential\",\n    modelProperties: {\n      imageRepositoryUrl: {\n        serializedName: \"imageRepositoryUrl\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      userName: {\n        serializedName: \"userName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      password: {\n        serializedName: \"password\",\n        type: {\n          name: \"Composite\",\n          className: \"AsymmetricEncryptedSecret\"\n        }\n      }\n    }\n  }\n};\n\nexport const IoTDeviceInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IoTDeviceInfo\",\n    modelProperties: {\n      deviceId: {\n        serializedName: \"deviceId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ioTHostHub: {\n        serializedName: \"ioTHostHub\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ioTHostHubId: {\n        serializedName: \"ioTHostHubId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authentication: {\n        serializedName: \"authentication\",\n        type: {\n          name: \"Composite\",\n          className: \"Authentication\"\n        }\n      }\n    }\n  }\n};\n\nexport const IoTEdgeAgentInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IoTEdgeAgentInfo\",\n    modelProperties: {\n      imageName: {\n        serializedName: \"imageName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tag: {\n        serializedName: \"tag\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      imageRepository: {\n        serializedName: \"imageRepository\",\n        type: {\n          name: \"Composite\",\n          className: \"ImageRepositoryCredential\"\n        }\n      }\n    }\n  }\n};\n\nexport const KubernetesClusterInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KubernetesClusterInfo\",\n    modelProperties: {\n      etcdInfo: {\n        serializedName: \"etcdInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"EtcdInfo\"\n        }\n      },\n      nodes: {\n        serializedName: \"nodes\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"NodeInfo\"\n            }\n          }\n        }\n      },\n      version: {\n        serializedName: \"version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NodeInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NodeInfo\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ipConfiguration: {\n        serializedName: \"ipConfiguration\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"KubernetesIPConfiguration\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const KubernetesIPConfiguration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KubernetesIPConfiguration\",\n    modelProperties: {\n      port: {\n        serializedName: \"port\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ipAddress: {\n        serializedName: \"ipAddress\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const KubernetesRoleResources: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KubernetesRoleResources\",\n    modelProperties: {\n      storage: {\n        serializedName: \"storage\",\n        type: {\n          name: \"Composite\",\n          className: \"KubernetesRoleStorage\"\n        }\n      },\n      compute: {\n        serializedName: \"compute\",\n        type: {\n          name: \"Composite\",\n          className: \"KubernetesRoleCompute\"\n        }\n      },\n      network: {\n        serializedName: \"network\",\n        type: {\n          name: \"Composite\",\n          className: \"KubernetesRoleNetwork\"\n        }\n      }\n    }\n  }\n};\n\nexport const KubernetesRoleStorage: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KubernetesRoleStorage\",\n    modelProperties: {\n      storageClasses: {\n        serializedName: \"storageClasses\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"KubernetesRoleStorageClassInfo\"\n            }\n          }\n        }\n      },\n      endpoints: {\n        serializedName: \"endpoints\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MountPointMap\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const KubernetesRoleStorageClassInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KubernetesRoleStorageClassInfo\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      posixCompliant: {\n        serializedName: \"posixCompliant\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const KubernetesRoleCompute: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KubernetesRoleCompute\",\n    modelProperties: {\n      vmProfile: {\n        serializedName: \"vmProfile\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      memoryInBytes: {\n        serializedName: \"memoryInBytes\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      processorCount: {\n        serializedName: \"processorCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const KubernetesRoleNetwork: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KubernetesRoleNetwork\",\n    modelProperties: {\n      cniConfig: {\n        serializedName: \"cniConfig\",\n        type: {\n          name: \"Composite\",\n          className: \"CniConfig\"\n        }\n      },\n      loadBalancerConfig: {\n        serializedName: \"loadBalancerConfig\",\n        type: {\n          name: \"Composite\",\n          className: \"LoadBalancerConfig\"\n        }\n      }\n    }\n  }\n};\n\nexport const LoadBalancerConfig: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LoadBalancerConfig\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"version\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PeriodicTimerSourceInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PeriodicTimerSourceInfo\",\n    modelProperties: {\n      startTime: {\n        serializedName: \"startTime\",\n        required: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      schedule: {\n        serializedName: \"schedule\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      topic: {\n        serializedName: \"topic\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceTypeSku: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceTypeSku\",\n    modelProperties: {\n      resourceType: {\n        serializedName: \"resourceType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      skus: {\n        serializedName: \"skus\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SkuInformation\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SkuInformation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SkuInformation\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tier: {\n        serializedName: \"tier\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      kind: {\n        serializedName: \"kind\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      family: {\n        serializedName: \"family\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      costs: {\n        serializedName: \"costs\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SkuCost\"\n            }\n          }\n        }\n      },\n      locations: {\n        serializedName: \"locations\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      locationInfo: {\n        serializedName: \"locationInfo\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SkuLocationInfo\"\n            }\n          }\n        }\n      },\n      requiredQuotaIds: {\n        serializedName: \"requiredQuotaIds\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      requiredFeatures: {\n        serializedName: \"requiredFeatures\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SkuInformationList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SkuInformationList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourceTypeSku\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DataBoxEdgeDevice: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DataBoxEdgeDevice\",\n    modelProperties: {\n      ...ARMBaseModel.type.modelProperties,\n      location: {\n        serializedName: \"location\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceIdentity\"\n        }\n      },\n      kind: {\n        serializedName: \"kind\",\n        type: {\n          name: \"String\"\n        }\n      },\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      },\n      systemDataPropertiesSystemData: {\n        serializedName: \"properties.systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      },\n      dataBoxEdgeDeviceStatus: {\n        serializedName: \"properties.dataBoxEdgeDeviceStatus\",\n        type: {\n          name: \"String\"\n        }\n      },\n      serialNumber: {\n        serializedName: \"properties.serialNumber\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"properties.description\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      modelDescription: {\n        serializedName: \"properties.modelDescription\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      deviceType: {\n        serializedName: \"properties.deviceType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      friendlyName: {\n        serializedName: \"properties.friendlyName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      culture: {\n        serializedName: \"properties.culture\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      deviceModel: {\n        serializedName: \"properties.deviceModel\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      deviceSoftwareVersion: {\n        serializedName: \"properties.deviceSoftwareVersion\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      deviceLocalCapacity: {\n        serializedName: \"properties.deviceLocalCapacity\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      timeZone: {\n        serializedName: \"properties.timeZone\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      deviceHcsVersion: {\n        serializedName: \"properties.deviceHcsVersion\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      configuredRoleTypes: {\n        serializedName: \"properties.configuredRoleTypes\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      nodeCount: {\n        serializedName: \"properties.nodeCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      resourceMoveDetails: {\n        serializedName: \"properties.resourceMoveDetails\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceMoveDetails\"\n        }\n      },\n      edgeProfile: {\n        serializedName: \"properties.edgeProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"EdgeProfile\"\n        }\n      },\n      dataResidency: {\n        serializedName: \"properties.dataResidency\",\n        type: {\n          name: \"Composite\",\n          className: \"DataResidency\"\n        }\n      }\n    }\n  }\n};\n\nexport const Alert: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Alert\",\n    modelProperties: {\n      ...ARMBaseModel.type.modelProperties,\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      },\n      title: {\n        serializedName: \"properties.title\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      alertType: {\n        serializedName: \"properties.alertType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      appearedAtDateTime: {\n        serializedName: \"properties.appearedAtDateTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      recommendation: {\n        serializedName: \"properties.recommendation\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      severity: {\n        serializedName: \"properties.severity\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      errorDetails: {\n        serializedName: \"properties.errorDetails\",\n        type: {\n          name: \"Composite\",\n          className: \"AlertErrorDetails\"\n        }\n      },\n      detailedInformation: {\n        serializedName: \"properties.detailedInformation\",\n        readOnly: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const BandwidthSchedule: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BandwidthSchedule\",\n    modelProperties: {\n      ...ARMBaseModel.type.modelProperties,\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      },\n      start: {\n        serializedName: \"properties.start\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      stop: {\n        serializedName: \"properties.stop\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      rateInMbps: {\n        serializedName: \"properties.rateInMbps\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      days: {\n        serializedName: \"properties.days\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DiagnosticProactiveLogCollectionSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DiagnosticProactiveLogCollectionSettings\",\n    modelProperties: {\n      ...ARMBaseModel.type.modelProperties,\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      },\n      userConsent: {\n        serializedName: \"properties.userConsent\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DiagnosticRemoteSupportSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DiagnosticRemoteSupportSettings\",\n    modelProperties: {\n      ...ARMBaseModel.type.modelProperties,\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      },\n      remoteSupportSettingsList: {\n        serializedName: \"properties.remoteSupportSettingsList\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RemoteSupportSettings\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DataBoxEdgeDeviceExtendedInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DataBoxEdgeDeviceExtendedInfo\",\n    modelProperties: {\n      ...ARMBaseModel.type.modelProperties,\n      encryptionKeyThumbprint: {\n        serializedName: \"properties.encryptionKeyThumbprint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      encryptionKey: {\n        serializedName: \"properties.encryptionKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceKey: {\n        serializedName: \"properties.resourceKey\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      clientSecretStoreId: {\n        serializedName: \"properties.clientSecretStoreId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientSecretStoreUrl: {\n        serializedName: \"properties.clientSecretStoreUrl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      channelIntegrityKeyName: {\n        serializedName: \"properties.channelIntegrityKeyName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      channelIntegrityKeyVersion: {\n        serializedName: \"properties.channelIntegrityKeyVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      keyVaultSyncStatus: {\n        serializedName: \"properties.keyVaultSyncStatus\",\n        type: {\n          name: \"String\"\n        }\n      },\n      deviceSecrets: {\n        serializedName: \"properties.deviceSecrets\",\n        readOnly: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"Composite\", className: \"Secret\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const NetworkSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NetworkSettings\",\n    modelProperties: {\n      ...ARMBaseModel.type.modelProperties,\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      },\n      networkAdapters: {\n        serializedName: \"properties.networkAdapters\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"NetworkAdapter\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Node: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Node\",\n    modelProperties: {\n      ...ARMBaseModel.type.modelProperties,\n      nodeStatus: {\n        serializedName: \"properties.nodeStatus\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nodeChassisSerialNumber: {\n        serializedName: \"properties.nodeChassisSerialNumber\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nodeSerialNumber: {\n        serializedName: \"properties.nodeSerialNumber\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nodeDisplayName: {\n        serializedName: \"properties.nodeDisplayName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nodeFriendlySoftwareVersion: {\n        serializedName: \"properties.nodeFriendlySoftwareVersion\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nodeHcsVersion: {\n        serializedName: \"properties.nodeHcsVersion\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nodeInstanceId: {\n        serializedName: \"properties.nodeInstanceId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Order: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Order\",\n    modelProperties: {\n      ...ARMBaseModel.type.modelProperties,\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      },\n      contactInformation: {\n        serializedName: \"properties.contactInformation\",\n        type: {\n          name: \"Composite\",\n          className: \"ContactDetails\"\n        }\n      },\n      shippingAddress: {\n        serializedName: \"properties.shippingAddress\",\n        type: {\n          name: \"Composite\",\n          className: \"Address\"\n        }\n      },\n      currentStatus: {\n        serializedName: \"properties.currentStatus\",\n        type: {\n          name: \"Composite\",\n          className: \"OrderStatus\"\n        }\n      },\n      orderHistory: {\n        serializedName: \"properties.orderHistory\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"OrderStatus\"\n            }\n          }\n        }\n      },\n      serialNumber: {\n        serializedName: \"properties.serialNumber\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      deliveryTrackingInfo: {\n        serializedName: \"properties.deliveryTrackingInfo\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"TrackingInfo\"\n            }\n          }\n        }\n      },\n      returnTrackingInfo: {\n        serializedName: \"properties.returnTrackingInfo\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"TrackingInfo\"\n            }\n          }\n        }\n      },\n      shipmentType: {\n        serializedName: \"properties.shipmentType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Role: coreClient.CompositeMapper = {\n  serializedName: \"Role\",\n  type: {\n    name: \"Composite\",\n    className: \"Role\",\n    uberParent: \"ARMBaseModel\",\n    polymorphicDiscriminator: {\n      serializedName: \"kind\",\n      clientName: \"kind\"\n    },\n    modelProperties: {\n      ...ARMBaseModel.type.modelProperties,\n      kind: {\n        serializedName: \"kind\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      }\n    }\n  }\n};\n\nexport const Addon: coreClient.CompositeMapper = {\n  serializedName: \"Addon\",\n  type: {\n    name: \"Composite\",\n    className: \"Addon\",\n    uberParent: \"ARMBaseModel\",\n    polymorphicDiscriminator: {\n      serializedName: \"kind\",\n      clientName: \"kind\"\n    },\n    modelProperties: {\n      ...ARMBaseModel.type.modelProperties,\n      kind: {\n        serializedName: \"kind\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      }\n    }\n  }\n};\n\nexport const MonitoringMetricConfiguration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MonitoringMetricConfiguration\",\n    modelProperties: {\n      ...ARMBaseModel.type.modelProperties,\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      },\n      metricConfigurations: {\n        serializedName: \"properties.metricConfigurations\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MetricConfiguration\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SecuritySettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SecuritySettings\",\n    modelProperties: {\n      ...ARMBaseModel.type.modelProperties,\n      deviceAdminPassword: {\n        serializedName: \"properties.deviceAdminPassword\",\n        type: {\n          name: \"Composite\",\n          className: \"AsymmetricEncryptedSecret\"\n        }\n      }\n    }\n  }\n};\n\nexport const Share: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Share\",\n    modelProperties: {\n      ...ARMBaseModel.type.modelProperties,\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      },\n      description: {\n        serializedName: \"properties.description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      shareStatus: {\n        serializedName: \"properties.shareStatus\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      monitoringStatus: {\n        serializedName: \"properties.monitoringStatus\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      azureContainerInfo: {\n        serializedName: \"properties.azureContainerInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"AzureContainerInfo\"\n        }\n      },\n      accessProtocol: {\n        serializedName: \"properties.accessProtocol\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      userAccessRights: {\n        serializedName: \"properties.userAccessRights\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"UserAccessRight\"\n            }\n          }\n        }\n      },\n      clientAccessRights: {\n        serializedName: \"properties.clientAccessRights\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ClientAccessRight\"\n            }\n          }\n        }\n      },\n      refreshDetails: {\n        serializedName: \"properties.refreshDetails\",\n        type: {\n          name: \"Composite\",\n          className: \"RefreshDetails\"\n        }\n      },\n      shareMappings: {\n        serializedName: \"properties.shareMappings\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MountPointMap\"\n            }\n          }\n        }\n      },\n      dataPolicy: {\n        serializedName: \"properties.dataPolicy\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const StorageAccountCredential: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StorageAccountCredential\",\n    modelProperties: {\n      ...ARMBaseModel.type.modelProperties,\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      },\n      alias: {\n        serializedName: \"properties.alias\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      userName: {\n        serializedName: \"properties.userName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accountKey: {\n        serializedName: \"properties.accountKey\",\n        type: {\n          name: \"Composite\",\n          className: \"AsymmetricEncryptedSecret\"\n        }\n      },\n      connectionString: {\n        serializedName: \"properties.connectionString\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sslStatus: {\n        serializedName: \"properties.sslStatus\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      blobDomainName: {\n        serializedName: \"properties.blobDomainName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accountType: {\n        serializedName: \"properties.accountType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      storageAccountId: {\n        serializedName: \"properties.storageAccountId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const StorageAccount: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StorageAccount\",\n    modelProperties: {\n      ...ARMBaseModel.type.modelProperties,\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      },\n      description: {\n        serializedName: \"properties.description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      storageAccountStatus: {\n        serializedName: \"properties.storageAccountStatus\",\n        type: {\n          name: \"String\"\n        }\n      },\n      dataPolicy: {\n        serializedName: \"properties.dataPolicy\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      storageAccountCredentialId: {\n        serializedName: \"properties.storageAccountCredentialId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobEndpoint: {\n        serializedName: \"properties.blobEndpoint\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      containerCount: {\n        serializedName: \"properties.containerCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Container: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Container\",\n    modelProperties: {\n      ...ARMBaseModel.type.modelProperties,\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      },\n      containerStatus: {\n        serializedName: \"properties.containerStatus\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      dataFormat: {\n        serializedName: \"properties.dataFormat\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      refreshDetails: {\n        serializedName: \"properties.refreshDetails\",\n        type: {\n          name: \"Composite\",\n          className: \"RefreshDetails\"\n        }\n      },\n      createdDateTime: {\n        serializedName: \"properties.createdDateTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const Trigger: coreClient.CompositeMapper = {\n  serializedName: \"Trigger\",\n  type: {\n    name: \"Composite\",\n    className: \"Trigger\",\n    uberParent: \"ARMBaseModel\",\n    polymorphicDiscriminator: {\n      serializedName: \"kind\",\n      clientName: \"kind\"\n    },\n    modelProperties: {\n      ...ARMBaseModel.type.modelProperties,\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      },\n      kind: {\n        serializedName: \"kind\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TriggerSupportPackageRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TriggerSupportPackageRequest\",\n    modelProperties: {\n      ...ARMBaseModel.type.modelProperties,\n      minimumTimeStamp: {\n        serializedName: \"properties.minimumTimeStamp\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      maximumTimeStamp: {\n        serializedName: \"properties.maximumTimeStamp\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      include: {\n        serializedName: \"properties.include\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UpdateSummary: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UpdateSummary\",\n    modelProperties: {\n      ...ARMBaseModel.type.modelProperties,\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      },\n      deviceVersionNumber: {\n        serializedName: \"properties.deviceVersionNumber\",\n        type: {\n          name: \"String\"\n        }\n      },\n      friendlyDeviceVersionName: {\n        serializedName: \"properties.friendlyDeviceVersionName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      deviceLastScannedDateTime: {\n        serializedName: \"properties.deviceLastScannedDateTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastCompletedScanJobDateTime: {\n        serializedName: \"properties.lastCompletedScanJobDateTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastSuccessfulScanJobTime: {\n        serializedName: \"properties.lastSuccessfulScanJobTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastCompletedDownloadJobDateTime: {\n        serializedName: \"properties.lastCompletedDownloadJobDateTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastCompletedDownloadJobId: {\n        serializedName: \"properties.lastCompletedDownloadJobId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      lastDownloadJobStatus: {\n        serializedName: \"properties.lastDownloadJobStatus\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      lastSuccessfulInstallJobDateTime: {\n        serializedName: \"properties.lastSuccessfulInstallJobDateTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastCompletedInstallJobDateTime: {\n        serializedName: \"properties.lastCompletedInstallJobDateTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastCompletedInstallJobId: {\n        serializedName: \"properties.lastCompletedInstallJobId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      lastInstallJobStatus: {\n        serializedName: \"properties.lastInstallJobStatus\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      totalNumberOfUpdatesAvailable: {\n        serializedName: \"properties.totalNumberOfUpdatesAvailable\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      totalNumberOfUpdatesPendingDownload: {\n        serializedName: \"properties.totalNumberOfUpdatesPendingDownload\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      totalNumberOfUpdatesPendingInstall: {\n        serializedName: \"properties.totalNumberOfUpdatesPendingInstall\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      rebootBehavior: {\n        serializedName: \"properties.rebootBehavior\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ongoingUpdateOperation: {\n        serializedName: \"properties.ongoingUpdateOperation\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      inProgressDownloadJobId: {\n        serializedName: \"properties.inProgressDownloadJobId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      inProgressInstallJobId: {\n        serializedName: \"properties.inProgressInstallJobId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      inProgressDownloadJobStartedDateTime: {\n        serializedName: \"properties.inProgressDownloadJobStartedDateTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      inProgressInstallJobStartedDateTime: {\n        serializedName: \"properties.inProgressInstallJobStartedDateTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      updateTitles: {\n        serializedName: \"properties.updateTitles\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      updates: {\n        serializedName: \"properties.updates\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"UpdateDetails\"\n            }\n          }\n        }\n      },\n      totalUpdateSizeInBytes: {\n        serializedName: \"properties.totalUpdateSizeInBytes\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      totalTimeInMinutes: {\n        serializedName: \"properties.totalTimeInMinutes\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const User: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"User\",\n    modelProperties: {\n      ...ARMBaseModel.type.modelProperties,\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      },\n      encryptedPassword: {\n        serializedName: \"properties.encryptedPassword\",\n        type: {\n          name: \"Composite\",\n          className: \"AsymmetricEncryptedSecret\"\n        }\n      },\n      shareAccessRights: {\n        serializedName: \"properties.shareAccessRights\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ShareAccessRight\"\n            }\n          }\n        }\n      },\n      userType: {\n        serializedName: \"properties.userType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CloudEdgeManagementRole: coreClient.CompositeMapper = {\n  serializedName: \"CloudEdgeManagement\",\n  type: {\n    name: \"Composite\",\n    className: \"CloudEdgeManagementRole\",\n    uberParent: \"Role\",\n    polymorphicDiscriminator: Role.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...Role.type.modelProperties,\n      localManagementStatus: {\n        serializedName: \"properties.localManagementStatus\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      edgeProfile: {\n        serializedName: \"properties.edgeProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"EdgeProfile\"\n        }\n      },\n      roleStatus: {\n        serializedName: \"properties.roleStatus\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const IoTRole: coreClient.CompositeMapper = {\n  serializedName: \"IOT\",\n  type: {\n    name: \"Composite\",\n    className: \"IoTRole\",\n    uberParent: \"Role\",\n    polymorphicDiscriminator: Role.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...Role.type.modelProperties,\n      hostPlatform: {\n        serializedName: \"properties.hostPlatform\",\n        type: {\n          name: \"String\"\n        }\n      },\n      ioTDeviceDetails: {\n        serializedName: \"properties.ioTDeviceDetails\",\n        type: {\n          name: \"Composite\",\n          className: \"IoTDeviceInfo\"\n        }\n      },\n      ioTEdgeDeviceDetails: {\n        serializedName: \"properties.ioTEdgeDeviceDetails\",\n        type: {\n          name: \"Composite\",\n          className: \"IoTDeviceInfo\"\n        }\n      },\n      shareMappings: {\n        serializedName: \"properties.shareMappings\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MountPointMap\"\n            }\n          }\n        }\n      },\n      ioTEdgeAgentInfo: {\n        serializedName: \"properties.ioTEdgeAgentInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"IoTEdgeAgentInfo\"\n        }\n      },\n      hostPlatformType: {\n        serializedName: \"properties.hostPlatformType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      computeResource: {\n        serializedName: \"properties.computeResource\",\n        type: {\n          name: \"Composite\",\n          className: \"ComputeResource\"\n        }\n      },\n      roleStatus: {\n        serializedName: \"properties.roleStatus\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const KubernetesRole: coreClient.CompositeMapper = {\n  serializedName: \"Kubernetes\",\n  type: {\n    name: \"Composite\",\n    className: \"KubernetesRole\",\n    uberParent: \"Role\",\n    polymorphicDiscriminator: Role.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...Role.type.modelProperties,\n      hostPlatform: {\n        serializedName: \"properties.hostPlatform\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      hostPlatformType: {\n        serializedName: \"properties.hostPlatformType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      kubernetesClusterInfo: {\n        serializedName: \"properties.kubernetesClusterInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"KubernetesClusterInfo\"\n        }\n      },\n      kubernetesRoleResources: {\n        serializedName: \"properties.kubernetesRoleResources\",\n        type: {\n          name: \"Composite\",\n          className: \"KubernetesRoleResources\"\n        }\n      },\n      roleStatus: {\n        serializedName: \"properties.roleStatus\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MECRole: coreClient.CompositeMapper = {\n  serializedName: \"MEC\",\n  type: {\n    name: \"Composite\",\n    className: \"MECRole\",\n    uberParent: \"Role\",\n    polymorphicDiscriminator: Role.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...Role.type.modelProperties,\n      connectionString: {\n        serializedName: \"properties.connectionString\",\n        type: {\n          name: \"Composite\",\n          className: \"AsymmetricEncryptedSecret\"\n        }\n      },\n      controllerEndpoint: {\n        serializedName: \"properties.controllerEndpoint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceUniqueId: {\n        serializedName: \"properties.resourceUniqueId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      roleStatus: {\n        serializedName: \"properties.roleStatus\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ArcAddon: coreClient.CompositeMapper = {\n  serializedName: \"ArcForKubernetes\",\n  type: {\n    name: \"Composite\",\n    className: \"ArcAddon\",\n    uberParent: \"Addon\",\n    polymorphicDiscriminator: Addon.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...Addon.type.modelProperties,\n      subscriptionId: {\n        serializedName: \"properties.subscriptionId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceGroupName: {\n        serializedName: \"properties.resourceGroupName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceName: {\n        serializedName: \"properties.resourceName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceLocation: {\n        serializedName: \"properties.resourceLocation\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"properties.version\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      hostPlatform: {\n        serializedName: \"properties.hostPlatform\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      hostPlatformType: {\n        serializedName: \"properties.hostPlatformType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const IoTAddon: coreClient.CompositeMapper = {\n  serializedName: \"IotEdge\",\n  type: {\n    name: \"Composite\",\n    className: \"IoTAddon\",\n    uberParent: \"Addon\",\n    polymorphicDiscriminator: Addon.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...Addon.type.modelProperties,\n      ioTDeviceDetails: {\n        serializedName: \"properties.ioTDeviceDetails\",\n        type: {\n          name: \"Composite\",\n          className: \"IoTDeviceInfo\"\n        }\n      },\n      ioTEdgeDeviceDetails: {\n        serializedName: \"properties.ioTEdgeDeviceDetails\",\n        type: {\n          name: \"Composite\",\n          className: \"IoTDeviceInfo\"\n        }\n      },\n      version: {\n        serializedName: \"properties.version\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      hostPlatform: {\n        serializedName: \"properties.hostPlatform\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      hostPlatformType: {\n        serializedName: \"properties.hostPlatformType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileEventTrigger: coreClient.CompositeMapper = {\n  serializedName: \"FileEvent\",\n  type: {\n    name: \"Composite\",\n    className: \"FileEventTrigger\",\n    uberParent: \"Trigger\",\n    polymorphicDiscriminator: Trigger.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...Trigger.type.modelProperties,\n      sourceInfo: {\n        serializedName: \"properties.sourceInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"FileSourceInfo\"\n        }\n      },\n      sinkInfo: {\n        serializedName: \"properties.sinkInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"RoleSinkInfo\"\n        }\n      },\n      customContextTag: {\n        constraints: {\n          MaxLength: 192\n        },\n        serializedName: \"properties.customContextTag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PeriodicTimerEventTrigger: coreClient.CompositeMapper = {\n  serializedName: \"PeriodicTimerEvent\",\n  type: {\n    name: \"Composite\",\n    className: \"PeriodicTimerEventTrigger\",\n    uberParent: \"Trigger\",\n    polymorphicDiscriminator: Trigger.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...Trigger.type.modelProperties,\n      sourceInfo: {\n        serializedName: \"properties.sourceInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"PeriodicTimerSourceInfo\"\n        }\n      },\n      sinkInfo: {\n        serializedName: \"properties.sinkInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"RoleSinkInfo\"\n        }\n      },\n      customContextTag: {\n        constraints: {\n          MaxLength: 192\n        },\n        serializedName: \"properties.customContextTag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport let discriminators = {\n  \"ARMBaseModel.Role\": Role,\n  \"ARMBaseModel.Addon\": Addon,\n  \"ARMBaseModel.Trigger\": Trigger,\n  \"Role.CloudEdgeManagement\": CloudEdgeManagementRole,\n  \"Role.IOT\": IoTRole,\n  \"Role.Kubernetes\": KubernetesRole,\n  \"Role.MEC\": MECRole,\n  \"Addon.ArcForKubernetes\": ArcAddon,\n  \"Addon.IotEdge\": IoTAddon,\n  \"Trigger.FileEvent\": FileEventTrigger,\n  \"Trigger.PeriodicTimerEvent\": PeriodicTimerEventTrigger\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter\n} from \"@azure/core-client\";\nimport {\n  DataBoxEdgeDevice as DataBoxEdgeDeviceMapper,\n  DataBoxEdgeDevicePatch as DataBoxEdgeDevicePatchMapper,\n  SecuritySettings as SecuritySettingsMapper,\n  DataBoxEdgeDeviceExtendedInfoPatch as DataBoxEdgeDeviceExtendedInfoPatchMapper,\n  UploadCertificateRequest as UploadCertificateRequestMapper,\n  BandwidthSchedule as BandwidthScheduleMapper,\n  DiagnosticProactiveLogCollectionSettings as DiagnosticProactiveLogCollectionSettingsMapper,\n  DiagnosticRemoteSupportSettings as DiagnosticRemoteSupportSettingsMapper,\n  Order as OrderMapper,\n  Role as RoleMapper,\n  Addon as AddonMapper,\n  MonitoringMetricConfiguration as MonitoringMetricConfigurationMapper,\n  Share as ShareMapper,\n  StorageAccountCredential as StorageAccountCredentialMapper,\n  StorageAccount as StorageAccountMapper,\n  Container as ContainerMapper,\n  Trigger as TriggerMapper,\n  TriggerSupportPackageRequest as TriggerSupportPackageRequestMapper,\n  User as UserMapper\n} from \"../models/mappers\";\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2021-06-01\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const nextLink: OperationURLParameter = {\n  parameterPath: \"nextLink\",\n  mapper: {\n    serializedName: \"nextLink\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const subscriptionId: OperationURLParameter = {\n  parameterPath: \"subscriptionId\",\n  mapper: {\n    serializedName: \"subscriptionId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const expand: OperationQueryParameter = {\n  parameterPath: [\"options\", \"expand\"],\n  mapper: {\n    serializedName: \"$expand\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const resourceGroupName: OperationURLParameter = {\n  parameterPath: \"resourceGroupName\",\n  mapper: {\n    serializedName: \"resourceGroupName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const deviceName: OperationURLParameter = {\n  parameterPath: \"deviceName\",\n  mapper: {\n    serializedName: \"deviceName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const dataBoxEdgeDevice: OperationParameter = {\n  parameterPath: \"dataBoxEdgeDevice\",\n  mapper: DataBoxEdgeDeviceMapper\n};\n\nexport const parameters: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: DataBoxEdgeDevicePatchMapper\n};\n\nexport const securitySettings: OperationParameter = {\n  parameterPath: \"securitySettings\",\n  mapper: SecuritySettingsMapper\n};\n\nexport const parameters1: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: DataBoxEdgeDeviceExtendedInfoPatchMapper\n};\n\nexport const parameters2: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: UploadCertificateRequestMapper\n};\n\nexport const name: OperationURLParameter = {\n  parameterPath: \"name\",\n  mapper: {\n    serializedName: \"name\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters3: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: BandwidthScheduleMapper\n};\n\nexport const proactiveLogCollectionSettings: OperationParameter = {\n  parameterPath: \"proactiveLogCollectionSettings\",\n  mapper: DiagnosticProactiveLogCollectionSettingsMapper\n};\n\nexport const diagnosticRemoteSupportSettings: OperationParameter = {\n  parameterPath: \"diagnosticRemoteSupportSettings\",\n  mapper: DiagnosticRemoteSupportSettingsMapper\n};\n\nexport const order: OperationParameter = {\n  parameterPath: \"order\",\n  mapper: OrderMapper\n};\n\nexport const role: OperationParameter = {\n  parameterPath: \"role\",\n  mapper: RoleMapper\n};\n\nexport const roleName: OperationURLParameter = {\n  parameterPath: \"roleName\",\n  mapper: {\n    serializedName: \"roleName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const addonName: OperationURLParameter = {\n  parameterPath: \"addonName\",\n  mapper: {\n    serializedName: \"addonName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const addon: OperationParameter = {\n  parameterPath: \"addon\",\n  mapper: AddonMapper\n};\n\nexport const monitoringMetricConfiguration: OperationParameter = {\n  parameterPath: \"monitoringMetricConfiguration\",\n  mapper: MonitoringMetricConfigurationMapper\n};\n\nexport const share: OperationParameter = {\n  parameterPath: \"share\",\n  mapper: ShareMapper\n};\n\nexport const storageAccountCredential: OperationParameter = {\n  parameterPath: \"storageAccountCredential\",\n  mapper: StorageAccountCredentialMapper\n};\n\nexport const storageAccountName: OperationURLParameter = {\n  parameterPath: \"storageAccountName\",\n  mapper: {\n    serializedName: \"storageAccountName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const storageAccount: OperationParameter = {\n  parameterPath: \"storageAccount\",\n  mapper: StorageAccountMapper\n};\n\nexport const containerName: OperationURLParameter = {\n  parameterPath: \"containerName\",\n  mapper: {\n    serializedName: \"containerName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const container: OperationParameter = {\n  parameterPath: \"container\",\n  mapper: ContainerMapper\n};\n\nexport const filter: OperationQueryParameter = {\n  parameterPath: [\"options\", \"filter\"],\n  mapper: {\n    serializedName: \"$filter\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const trigger: OperationParameter = {\n  parameterPath: \"trigger\",\n  mapper: TriggerMapper\n};\n\nexport const triggerSupportPackageRequest: OperationParameter = {\n  parameterPath: \"triggerSupportPackageRequest\",\n  mapper: TriggerSupportPackageRequestMapper\n};\n\nexport const user: OperationParameter = {\n  parameterPath: \"user\",\n  mapper: UserMapper\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Operations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { DataBoxEdgeManagementClient } from \"../dataBoxEdgeManagementClient\";\nimport {\n  Operation,\n  OperationsListNextOptionalParams,\n  OperationsListOptionalParams,\n  OperationsListResponse,\n  OperationsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Operations operations. */\nexport class OperationsImpl implements Operations {\n  private readonly client: DataBoxEdgeManagementClient;\n\n  /**\n   * Initialize a new instance of the class Operations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: DataBoxEdgeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List all the supported operations.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: OperationsListOptionalParams\n  ): PagedAsyncIterableIterator<Operation> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: OperationsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Operation[]> {\n    let result: OperationsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: OperationsListOptionalParams\n  ): AsyncIterableIterator<Operation> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List all the supported operations.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: OperationsListOptionalParams\n  ): Promise<OperationsListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: OperationsListNextOptionalParams\n  ): Promise<OperationsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.DataBoxEdge/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationsList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationsList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { AvailableSkus } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { DataBoxEdgeManagementClient } from \"../dataBoxEdgeManagementClient\";\nimport {\n  DataBoxEdgeSku,\n  AvailableSkusListNextOptionalParams,\n  AvailableSkusListOptionalParams,\n  AvailableSkusListResponse,\n  AvailableSkusListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing AvailableSkus operations. */\nexport class AvailableSkusImpl implements AvailableSkus {\n  private readonly client: DataBoxEdgeManagementClient;\n\n  /**\n   * Initialize a new instance of the class AvailableSkus class.\n   * @param client Reference to the service client\n   */\n  constructor(client: DataBoxEdgeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List all the available Skus and information related to them.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: AvailableSkusListOptionalParams\n  ): PagedAsyncIterableIterator<DataBoxEdgeSku> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: AvailableSkusListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<DataBoxEdgeSku[]> {\n    let result: AvailableSkusListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: AvailableSkusListOptionalParams\n  ): AsyncIterableIterator<DataBoxEdgeSku> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List all the available Skus and information related to them.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: AvailableSkusListOptionalParams\n  ): Promise<AvailableSkusListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: AvailableSkusListNextOptionalParams\n  ): Promise<AvailableSkusListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.DataBoxEdge/availableSkus\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataBoxEdgeSkuList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataBoxEdgeSkuList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { LongRunningOperation, LroResponse } from \"@azure/core-lro\";\n\nexport class LroImpl<T> implements LongRunningOperation<T> {\n  constructor(\n    private sendOperationFn: (args: any, spec: any) => Promise<LroResponse<T>>,\n    private args: Record<string, unknown>,\n    private spec: {\n      readonly requestBody?: unknown;\n      readonly path?: string;\n      readonly httpMethod: string;\n    } & Record<string, any>,\n    public requestPath: string = spec.path!,\n    public requestMethod: string = spec.httpMethod\n  ) {}\n  public async sendInitialRequest(): Promise<LroResponse<T>> {\n    return this.sendOperationFn(this.args, this.spec);\n  }\n  public async sendPollRequest(path: string): Promise<LroResponse<T>> {\n    const { requestBody, ...restSpec } = this.spec;\n    return this.sendOperationFn(this.args, {\n      ...restSpec,\n      path,\n      httpMethod: \"GET\"\n    });\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Devices } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { DataBoxEdgeManagementClient } from \"../dataBoxEdgeManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  DataBoxEdgeDevice,\n  DevicesListBySubscriptionNextOptionalParams,\n  DevicesListBySubscriptionOptionalParams,\n  DevicesListBySubscriptionResponse,\n  DevicesListByResourceGroupNextOptionalParams,\n  DevicesListByResourceGroupOptionalParams,\n  DevicesListByResourceGroupResponse,\n  DevicesGetOptionalParams,\n  DevicesGetResponse,\n  DevicesCreateOrUpdateOptionalParams,\n  DevicesCreateOrUpdateResponse,\n  DevicesDeleteOptionalParams,\n  DataBoxEdgeDevicePatch,\n  DevicesUpdateOptionalParams,\n  DevicesUpdateResponse,\n  DevicesDownloadUpdatesOptionalParams,\n  DevicesGenerateCertificateOptionalParams,\n  DevicesGenerateCertificateResponse,\n  DevicesGetExtendedInformationOptionalParams,\n  DevicesGetExtendedInformationResponse,\n  DevicesInstallUpdatesOptionalParams,\n  DevicesGetNetworkSettingsOptionalParams,\n  DevicesGetNetworkSettingsResponse,\n  DevicesScanForUpdatesOptionalParams,\n  SecuritySettings,\n  DevicesCreateOrUpdateSecuritySettingsOptionalParams,\n  DataBoxEdgeDeviceExtendedInfoPatch,\n  DevicesUpdateExtendedInformationOptionalParams,\n  DevicesUpdateExtendedInformationResponse,\n  DevicesGetUpdateSummaryOptionalParams,\n  DevicesGetUpdateSummaryResponse,\n  UploadCertificateRequest,\n  DevicesUploadCertificateOptionalParams,\n  DevicesUploadCertificateResponse,\n  DevicesListBySubscriptionNextResponse,\n  DevicesListByResourceGroupNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Devices operations. */\nexport class DevicesImpl implements Devices {\n  private readonly client: DataBoxEdgeManagementClient;\n\n  /**\n   * Initialize a new instance of the class Devices class.\n   * @param client Reference to the service client\n   */\n  constructor(client: DataBoxEdgeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets all the Data Box Edge/Data Box Gateway devices in a subscription.\n   * @param options The options parameters.\n   */\n  public listBySubscription(\n    options?: DevicesListBySubscriptionOptionalParams\n  ): PagedAsyncIterableIterator<DataBoxEdgeDevice> {\n    const iter = this.listBySubscriptionPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listBySubscriptionPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listBySubscriptionPagingPage(\n    options?: DevicesListBySubscriptionOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<DataBoxEdgeDevice[]> {\n    let result: DevicesListBySubscriptionResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listBySubscription(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listBySubscriptionNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listBySubscriptionPagingAll(\n    options?: DevicesListBySubscriptionOptionalParams\n  ): AsyncIterableIterator<DataBoxEdgeDevice> {\n    for await (const page of this.listBySubscriptionPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all the Data Box Edge/Data Box Gateway devices in a resource group.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  public listByResourceGroup(\n    resourceGroupName: string,\n    options?: DevicesListByResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<DataBoxEdgeDevice> {\n    const iter = this.listByResourceGroupPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByResourceGroupPagingPage(\n          resourceGroupName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: DevicesListByResourceGroupOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<DataBoxEdgeDevice[]> {\n    let result: DevicesListByResourceGroupResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByResourceGroup(resourceGroupName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByResourceGroupNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: DevicesListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<DataBoxEdgeDevice> {\n    for await (const page of this.listByResourceGroupPagingPage(\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all the Data Box Edge/Data Box Gateway devices in a subscription.\n   * @param options The options parameters.\n   */\n  private _listBySubscription(\n    options?: DevicesListBySubscriptionOptionalParams\n  ): Promise<DevicesListBySubscriptionResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      listBySubscriptionOperationSpec\n    );\n  }\n\n  /**\n   * Gets all the Data Box Edge/Data Box Gateway devices in a resource group.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroup(\n    resourceGroupName: string,\n    options?: DevicesListByResourceGroupOptionalParams\n  ): Promise<DevicesListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listByResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Gets the properties of the Data Box Edge/Data Box Gateway device.\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  get(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: DevicesGetOptionalParams\n  ): Promise<DevicesGetResponse> {\n    return this.client.sendOperationRequest(\n      { deviceName, resourceGroupName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a Data Box Edge/Data Box Gateway resource.\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param dataBoxEdgeDevice The resource object.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    deviceName: string,\n    resourceGroupName: string,\n    dataBoxEdgeDevice: DataBoxEdgeDevice,\n    options?: DevicesCreateOrUpdateOptionalParams\n  ): Promise<DevicesCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { deviceName, resourceGroupName, dataBoxEdgeDevice, options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Deletes the Data Box Edge/Data Box Gateway device.\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: DevicesDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { deviceName, resourceGroupName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes the Data Box Edge/Data Box Gateway device.\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: DevicesDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      deviceName,\n      resourceGroupName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Modifies a Data Box Edge/Data Box Gateway resource.\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param parameters The resource parameters.\n   * @param options The options parameters.\n   */\n  update(\n    deviceName: string,\n    resourceGroupName: string,\n    parameters: DataBoxEdgeDevicePatch,\n    options?: DevicesUpdateOptionalParams\n  ): Promise<DevicesUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { deviceName, resourceGroupName, parameters, options },\n      updateOperationSpec\n    );\n  }\n\n  /**\n   * Downloads the updates on a Data Box Edge/Data Box Gateway device.\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  async beginDownloadUpdates(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: DevicesDownloadUpdatesOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { deviceName, resourceGroupName, options },\n      downloadUpdatesOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Downloads the updates on a Data Box Edge/Data Box Gateway device.\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  async beginDownloadUpdatesAndWait(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: DevicesDownloadUpdatesOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDownloadUpdates(\n      deviceName,\n      resourceGroupName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Generates certificate for activation key.\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  generateCertificate(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: DevicesGenerateCertificateOptionalParams\n  ): Promise<DevicesGenerateCertificateResponse> {\n    return this.client.sendOperationRequest(\n      { deviceName, resourceGroupName, options },\n      generateCertificateOperationSpec\n    );\n  }\n\n  /**\n   * Gets additional information for the specified Azure Stack Edge/Data Box Gateway device.\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  getExtendedInformation(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: DevicesGetExtendedInformationOptionalParams\n  ): Promise<DevicesGetExtendedInformationResponse> {\n    return this.client.sendOperationRequest(\n      { deviceName, resourceGroupName, options },\n      getExtendedInformationOperationSpec\n    );\n  }\n\n  /**\n   * Installs the updates on the Data Box Edge/Data Box Gateway device.\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  async beginInstallUpdates(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: DevicesInstallUpdatesOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { deviceName, resourceGroupName, options },\n      installUpdatesOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Installs the updates on the Data Box Edge/Data Box Gateway device.\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  async beginInstallUpdatesAndWait(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: DevicesInstallUpdatesOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginInstallUpdates(\n      deviceName,\n      resourceGroupName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets the network settings of the specified Data Box Edge/Data Box Gateway device.\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  getNetworkSettings(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: DevicesGetNetworkSettingsOptionalParams\n  ): Promise<DevicesGetNetworkSettingsResponse> {\n    return this.client.sendOperationRequest(\n      { deviceName, resourceGroupName, options },\n      getNetworkSettingsOperationSpec\n    );\n  }\n\n  /**\n   * Scans for updates on a Data Box Edge/Data Box Gateway device.\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  async beginScanForUpdates(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: DevicesScanForUpdatesOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { deviceName, resourceGroupName, options },\n      scanForUpdatesOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Scans for updates on a Data Box Edge/Data Box Gateway device.\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  async beginScanForUpdatesAndWait(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: DevicesScanForUpdatesOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginScanForUpdates(\n      deviceName,\n      resourceGroupName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Updates the security settings on a Data Box Edge/Data Box Gateway device.\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param securitySettings The security settings.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateSecuritySettings(\n    deviceName: string,\n    resourceGroupName: string,\n    securitySettings: SecuritySettings,\n    options?: DevicesCreateOrUpdateSecuritySettingsOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { deviceName, resourceGroupName, securitySettings, options },\n      createOrUpdateSecuritySettingsOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Updates the security settings on a Data Box Edge/Data Box Gateway device.\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param securitySettings The security settings.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateSecuritySettingsAndWait(\n    deviceName: string,\n    resourceGroupName: string,\n    securitySettings: SecuritySettings,\n    options?: DevicesCreateOrUpdateSecuritySettingsOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginCreateOrUpdateSecuritySettings(\n      deviceName,\n      resourceGroupName,\n      securitySettings,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets additional information for the specified Data Box Edge/Data Box Gateway device.\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param parameters The patch object.\n   * @param options The options parameters.\n   */\n  updateExtendedInformation(\n    deviceName: string,\n    resourceGroupName: string,\n    parameters: DataBoxEdgeDeviceExtendedInfoPatch,\n    options?: DevicesUpdateExtendedInformationOptionalParams\n  ): Promise<DevicesUpdateExtendedInformationResponse> {\n    return this.client.sendOperationRequest(\n      { deviceName, resourceGroupName, parameters, options },\n      updateExtendedInformationOperationSpec\n    );\n  }\n\n  /**\n   * Gets information about the availability of updates based on the last scan of the device. It also\n   * gets information about any ongoing download or install jobs on the device.\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  getUpdateSummary(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: DevicesGetUpdateSummaryOptionalParams\n  ): Promise<DevicesGetUpdateSummaryResponse> {\n    return this.client.sendOperationRequest(\n      { deviceName, resourceGroupName, options },\n      getUpdateSummaryOperationSpec\n    );\n  }\n\n  /**\n   * Uploads registration certificate for the device.\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param parameters The upload certificate request.\n   * @param options The options parameters.\n   */\n  uploadCertificate(\n    deviceName: string,\n    resourceGroupName: string,\n    parameters: UploadCertificateRequest,\n    options?: DevicesUploadCertificateOptionalParams\n  ): Promise<DevicesUploadCertificateResponse> {\n    return this.client.sendOperationRequest(\n      { deviceName, resourceGroupName, parameters, options },\n      uploadCertificateOperationSpec\n    );\n  }\n\n  /**\n   * ListBySubscriptionNext\n   * @param nextLink The nextLink from the previous successful call to the ListBySubscription method.\n   * @param options The options parameters.\n   */\n  private _listBySubscriptionNext(\n    nextLink: string,\n    options?: DevicesListBySubscriptionNextOptionalParams\n  ): Promise<DevicesListBySubscriptionNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listBySubscriptionNextOperationSpec\n    );\n  }\n\n  /**\n   * ListByResourceGroupNext\n   * @param resourceGroupName The resource group name.\n   * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: DevicesListByResourceGroupNextOptionalParams\n  ): Promise<DevicesListByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listByResourceGroupNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listBySubscriptionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataBoxEdgeDeviceList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataBoxEdgeDeviceList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataBoxEdgeDevice\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataBoxEdgeDevice\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.dataBoxEdgeDevice,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataBoxEdgeDevice\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst downloadUpdatesOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/downloadUpdates\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst generateCertificateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/generateCertificate\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GenerateCertResponse\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getExtendedInformationOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/getExtendedInformation\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataBoxEdgeDeviceExtendedInfo\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst installUpdatesOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/installUpdates\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getNetworkSettingsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/networkSettings/default\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NetworkSettings\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst scanForUpdatesOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/scanForUpdates\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateSecuritySettingsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/securitySettings/default/update\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.securitySettings,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateExtendedInformationOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/updateExtendedInformation\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataBoxEdgeDeviceExtendedInfo\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getUpdateSummaryOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/updateSummary/default\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.UpdateSummary\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst uploadCertificateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/uploadCertificate\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.UploadCertificateResponse\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters2,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listBySubscriptionNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataBoxEdgeDeviceList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataBoxEdgeDeviceList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Alerts } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { DataBoxEdgeManagementClient } from \"../dataBoxEdgeManagementClient\";\nimport {\n  Alert,\n  AlertsListByDataBoxEdgeDeviceNextOptionalParams,\n  AlertsListByDataBoxEdgeDeviceOptionalParams,\n  AlertsListByDataBoxEdgeDeviceResponse,\n  AlertsGetOptionalParams,\n  AlertsGetResponse,\n  AlertsListByDataBoxEdgeDeviceNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Alerts operations. */\nexport class AlertsImpl implements Alerts {\n  private readonly client: DataBoxEdgeManagementClient;\n\n  /**\n   * Initialize a new instance of the class Alerts class.\n   * @param client Reference to the service client\n   */\n  constructor(client: DataBoxEdgeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets all the alerts for a Data Box Edge/Data Box Gateway device.\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  public listByDataBoxEdgeDevice(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: AlertsListByDataBoxEdgeDeviceOptionalParams\n  ): PagedAsyncIterableIterator<Alert> {\n    const iter = this.listByDataBoxEdgeDevicePagingAll(\n      deviceName,\n      resourceGroupName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByDataBoxEdgeDevicePagingPage(\n          deviceName,\n          resourceGroupName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByDataBoxEdgeDevicePagingPage(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: AlertsListByDataBoxEdgeDeviceOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Alert[]> {\n    let result: AlertsListByDataBoxEdgeDeviceResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByDataBoxEdgeDevice(\n        deviceName,\n        resourceGroupName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByDataBoxEdgeDeviceNext(\n        deviceName,\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByDataBoxEdgeDevicePagingAll(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: AlertsListByDataBoxEdgeDeviceOptionalParams\n  ): AsyncIterableIterator<Alert> {\n    for await (const page of this.listByDataBoxEdgeDevicePagingPage(\n      deviceName,\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all the alerts for a Data Box Edge/Data Box Gateway device.\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  private _listByDataBoxEdgeDevice(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: AlertsListByDataBoxEdgeDeviceOptionalParams\n  ): Promise<AlertsListByDataBoxEdgeDeviceResponse> {\n    return this.client.sendOperationRequest(\n      { deviceName, resourceGroupName, options },\n      listByDataBoxEdgeDeviceOperationSpec\n    );\n  }\n\n  /**\n   * Gets an alert by name.\n   * @param deviceName The device name.\n   * @param name The alert name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  get(\n    deviceName: string,\n    name: string,\n    resourceGroupName: string,\n    options?: AlertsGetOptionalParams\n  ): Promise<AlertsGetResponse> {\n    return this.client.sendOperationRequest(\n      { deviceName, name, resourceGroupName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * ListByDataBoxEdgeDeviceNext\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param nextLink The nextLink from the previous successful call to the ListByDataBoxEdgeDevice\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listByDataBoxEdgeDeviceNext(\n    deviceName: string,\n    resourceGroupName: string,\n    nextLink: string,\n    options?: AlertsListByDataBoxEdgeDeviceNextOptionalParams\n  ): Promise<AlertsListByDataBoxEdgeDeviceNextResponse> {\n    return this.client.sendOperationRequest(\n      { deviceName, resourceGroupName, nextLink, options },\n      listByDataBoxEdgeDeviceNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByDataBoxEdgeDeviceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/alerts\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AlertList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/alerts/{name}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Alert\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByDataBoxEdgeDeviceNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AlertList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { BandwidthSchedules } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { DataBoxEdgeManagementClient } from \"../dataBoxEdgeManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  BandwidthSchedule,\n  BandwidthSchedulesListByDataBoxEdgeDeviceNextOptionalParams,\n  BandwidthSchedulesListByDataBoxEdgeDeviceOptionalParams,\n  BandwidthSchedulesListByDataBoxEdgeDeviceResponse,\n  BandwidthSchedulesGetOptionalParams,\n  BandwidthSchedulesGetResponse,\n  BandwidthSchedulesCreateOrUpdateOptionalParams,\n  BandwidthSchedulesCreateOrUpdateResponse,\n  BandwidthSchedulesDeleteOptionalParams,\n  BandwidthSchedulesListByDataBoxEdgeDeviceNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing BandwidthSchedules operations. */\nexport class BandwidthSchedulesImpl implements BandwidthSchedules {\n  private readonly client: DataBoxEdgeManagementClient;\n\n  /**\n   * Initialize a new instance of the class BandwidthSchedules class.\n   * @param client Reference to the service client\n   */\n  constructor(client: DataBoxEdgeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets all the bandwidth schedules for a Data Box Edge/Data Box Gateway device.\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  public listByDataBoxEdgeDevice(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: BandwidthSchedulesListByDataBoxEdgeDeviceOptionalParams\n  ): PagedAsyncIterableIterator<BandwidthSchedule> {\n    const iter = this.listByDataBoxEdgeDevicePagingAll(\n      deviceName,\n      resourceGroupName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByDataBoxEdgeDevicePagingPage(\n          deviceName,\n          resourceGroupName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByDataBoxEdgeDevicePagingPage(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: BandwidthSchedulesListByDataBoxEdgeDeviceOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<BandwidthSchedule[]> {\n    let result: BandwidthSchedulesListByDataBoxEdgeDeviceResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByDataBoxEdgeDevice(\n        deviceName,\n        resourceGroupName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByDataBoxEdgeDeviceNext(\n        deviceName,\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByDataBoxEdgeDevicePagingAll(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: BandwidthSchedulesListByDataBoxEdgeDeviceOptionalParams\n  ): AsyncIterableIterator<BandwidthSchedule> {\n    for await (const page of this.listByDataBoxEdgeDevicePagingPage(\n      deviceName,\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all the bandwidth schedules for a Data Box Edge/Data Box Gateway device.\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  private _listByDataBoxEdgeDevice(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: BandwidthSchedulesListByDataBoxEdgeDeviceOptionalParams\n  ): Promise<BandwidthSchedulesListByDataBoxEdgeDeviceResponse> {\n    return this.client.sendOperationRequest(\n      { deviceName, resourceGroupName, options },\n      listByDataBoxEdgeDeviceOperationSpec\n    );\n  }\n\n  /**\n   * Gets the properties of the specified bandwidth schedule.\n   * @param deviceName The device name.\n   * @param name The bandwidth schedule name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  get(\n    deviceName: string,\n    name: string,\n    resourceGroupName: string,\n    options?: BandwidthSchedulesGetOptionalParams\n  ): Promise<BandwidthSchedulesGetResponse> {\n    return this.client.sendOperationRequest(\n      { deviceName, name, resourceGroupName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a bandwidth schedule.\n   * @param deviceName The device name.\n   * @param name The bandwidth schedule name which needs to be added/updated.\n   * @param resourceGroupName The resource group name.\n   * @param parameters The bandwidth schedule to be added or updated.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    deviceName: string,\n    name: string,\n    resourceGroupName: string,\n    parameters: BandwidthSchedule,\n    options?: BandwidthSchedulesCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<BandwidthSchedulesCreateOrUpdateResponse>,\n      BandwidthSchedulesCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<BandwidthSchedulesCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { deviceName, name, resourceGroupName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates or updates a bandwidth schedule.\n   * @param deviceName The device name.\n   * @param name The bandwidth schedule name which needs to be added/updated.\n   * @param resourceGroupName The resource group name.\n   * @param parameters The bandwidth schedule to be added or updated.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    deviceName: string,\n    name: string,\n    resourceGroupName: string,\n    parameters: BandwidthSchedule,\n    options?: BandwidthSchedulesCreateOrUpdateOptionalParams\n  ): Promise<BandwidthSchedulesCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      deviceName,\n      name,\n      resourceGroupName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes the specified bandwidth schedule.\n   * @param deviceName The device name.\n   * @param name The bandwidth schedule name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    deviceName: string,\n    name: string,\n    resourceGroupName: string,\n    options?: BandwidthSchedulesDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { deviceName, name, resourceGroupName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes the specified bandwidth schedule.\n   * @param deviceName The device name.\n   * @param name The bandwidth schedule name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    deviceName: string,\n    name: string,\n    resourceGroupName: string,\n    options?: BandwidthSchedulesDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      deviceName,\n      name,\n      resourceGroupName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListByDataBoxEdgeDeviceNext\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param nextLink The nextLink from the previous successful call to the ListByDataBoxEdgeDevice\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listByDataBoxEdgeDeviceNext(\n    deviceName: string,\n    resourceGroupName: string,\n    nextLink: string,\n    options?: BandwidthSchedulesListByDataBoxEdgeDeviceNextOptionalParams\n  ): Promise<BandwidthSchedulesListByDataBoxEdgeDeviceNextResponse> {\n    return this.client.sendOperationRequest(\n      { deviceName, resourceGroupName, nextLink, options },\n      listByDataBoxEdgeDeviceNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByDataBoxEdgeDeviceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/bandwidthSchedules\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BandwidthSchedulesList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/bandwidthSchedules/{name}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BandwidthSchedule\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/bandwidthSchedules/{name}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BandwidthSchedule\n    },\n    201: {\n      bodyMapper: Mappers.BandwidthSchedule\n    },\n    202: {\n      bodyMapper: Mappers.BandwidthSchedule\n    },\n    204: {\n      bodyMapper: Mappers.BandwidthSchedule\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters3,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/bandwidthSchedules/{name}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByDataBoxEdgeDeviceNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BandwidthSchedulesList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { DiagnosticSettings } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { DataBoxEdgeManagementClient } from \"../dataBoxEdgeManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  DiagnosticSettingsGetDiagnosticProactiveLogCollectionSettingsOptionalParams,\n  DiagnosticSettingsGetDiagnosticProactiveLogCollectionSettingsResponse,\n  DiagnosticProactiveLogCollectionSettings,\n  DiagnosticSettingsUpdateDiagnosticProactiveLogCollectionSettingsOptionalParams,\n  DiagnosticSettingsUpdateDiagnosticProactiveLogCollectionSettingsResponse,\n  DiagnosticSettingsGetDiagnosticRemoteSupportSettingsOptionalParams,\n  DiagnosticSettingsGetDiagnosticRemoteSupportSettingsResponse,\n  DiagnosticRemoteSupportSettings,\n  DiagnosticSettingsUpdateDiagnosticRemoteSupportSettingsOptionalParams,\n  DiagnosticSettingsUpdateDiagnosticRemoteSupportSettingsResponse\n} from \"../models\";\n\n/** Class containing DiagnosticSettings operations. */\nexport class DiagnosticSettingsImpl implements DiagnosticSettings {\n  private readonly client: DataBoxEdgeManagementClient;\n\n  /**\n   * Initialize a new instance of the class DiagnosticSettings class.\n   * @param client Reference to the service client\n   */\n  constructor(client: DataBoxEdgeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets the proactive log collection settings of the specified Data Box Edge/Data Box Gateway device.\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  getDiagnosticProactiveLogCollectionSettings(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: DiagnosticSettingsGetDiagnosticProactiveLogCollectionSettingsOptionalParams\n  ): Promise<\n    DiagnosticSettingsGetDiagnosticProactiveLogCollectionSettingsResponse\n  > {\n    return this.client.sendOperationRequest(\n      { deviceName, resourceGroupName, options },\n      getDiagnosticProactiveLogCollectionSettingsOperationSpec\n    );\n  }\n\n  /**\n   * Updates the proactive log collection settings on a Data Box Edge/Data Box Gateway device.\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param proactiveLogCollectionSettings The proactive log collection settings.\n   * @param options The options parameters.\n   */\n  async beginUpdateDiagnosticProactiveLogCollectionSettings(\n    deviceName: string,\n    resourceGroupName: string,\n    proactiveLogCollectionSettings: DiagnosticProactiveLogCollectionSettings,\n    options?: DiagnosticSettingsUpdateDiagnosticProactiveLogCollectionSettingsOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<\n        DiagnosticSettingsUpdateDiagnosticProactiveLogCollectionSettingsResponse\n      >,\n      DiagnosticSettingsUpdateDiagnosticProactiveLogCollectionSettingsResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<DiagnosticSettingsUpdateDiagnosticProactiveLogCollectionSettingsResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        deviceName,\n        resourceGroupName,\n        proactiveLogCollectionSettings,\n        options\n      },\n      updateDiagnosticProactiveLogCollectionSettingsOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Updates the proactive log collection settings on a Data Box Edge/Data Box Gateway device.\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param proactiveLogCollectionSettings The proactive log collection settings.\n   * @param options The options parameters.\n   */\n  async beginUpdateDiagnosticProactiveLogCollectionSettingsAndWait(\n    deviceName: string,\n    resourceGroupName: string,\n    proactiveLogCollectionSettings: DiagnosticProactiveLogCollectionSettings,\n    options?: DiagnosticSettingsUpdateDiagnosticProactiveLogCollectionSettingsOptionalParams\n  ): Promise<\n    DiagnosticSettingsUpdateDiagnosticProactiveLogCollectionSettingsResponse\n  > {\n    const poller = await this.beginUpdateDiagnosticProactiveLogCollectionSettings(\n      deviceName,\n      resourceGroupName,\n      proactiveLogCollectionSettings,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets the diagnostic remote support settings of the specified Data Box Edge/Data Box Gateway device.\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  getDiagnosticRemoteSupportSettings(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: DiagnosticSettingsGetDiagnosticRemoteSupportSettingsOptionalParams\n  ): Promise<DiagnosticSettingsGetDiagnosticRemoteSupportSettingsResponse> {\n    return this.client.sendOperationRequest(\n      { deviceName, resourceGroupName, options },\n      getDiagnosticRemoteSupportSettingsOperationSpec\n    );\n  }\n\n  /**\n   * Updates the diagnostic remote support settings on a Data Box Edge/Data Box Gateway device.\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param diagnosticRemoteSupportSettings The diagnostic remote support settings.\n   * @param options The options parameters.\n   */\n  async beginUpdateDiagnosticRemoteSupportSettings(\n    deviceName: string,\n    resourceGroupName: string,\n    diagnosticRemoteSupportSettings: DiagnosticRemoteSupportSettings,\n    options?: DiagnosticSettingsUpdateDiagnosticRemoteSupportSettingsOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<\n        DiagnosticSettingsUpdateDiagnosticRemoteSupportSettingsResponse\n      >,\n      DiagnosticSettingsUpdateDiagnosticRemoteSupportSettingsResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<DiagnosticSettingsUpdateDiagnosticRemoteSupportSettingsResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        deviceName,\n        resourceGroupName,\n        diagnosticRemoteSupportSettings,\n        options\n      },\n      updateDiagnosticRemoteSupportSettingsOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Updates the diagnostic remote support settings on a Data Box Edge/Data Box Gateway device.\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param diagnosticRemoteSupportSettings The diagnostic remote support settings.\n   * @param options The options parameters.\n   */\n  async beginUpdateDiagnosticRemoteSupportSettingsAndWait(\n    deviceName: string,\n    resourceGroupName: string,\n    diagnosticRemoteSupportSettings: DiagnosticRemoteSupportSettings,\n    options?: DiagnosticSettingsUpdateDiagnosticRemoteSupportSettingsOptionalParams\n  ): Promise<DiagnosticSettingsUpdateDiagnosticRemoteSupportSettingsResponse> {\n    const poller = await this.beginUpdateDiagnosticRemoteSupportSettings(\n      deviceName,\n      resourceGroupName,\n      diagnosticRemoteSupportSettings,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getDiagnosticProactiveLogCollectionSettingsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/diagnosticProactiveLogCollectionSettings/default\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DiagnosticProactiveLogCollectionSettings\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateDiagnosticProactiveLogCollectionSettingsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/diagnosticProactiveLogCollectionSettings/default\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DiagnosticProactiveLogCollectionSettings\n    },\n    201: {\n      bodyMapper: Mappers.DiagnosticProactiveLogCollectionSettings\n    },\n    202: {\n      bodyMapper: Mappers.DiagnosticProactiveLogCollectionSettings\n    },\n    204: {\n      bodyMapper: Mappers.DiagnosticProactiveLogCollectionSettings\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.proactiveLogCollectionSettings,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getDiagnosticRemoteSupportSettingsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/diagnosticRemoteSupportSettings/default\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DiagnosticRemoteSupportSettings\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateDiagnosticRemoteSupportSettingsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/diagnosticRemoteSupportSettings/default\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DiagnosticRemoteSupportSettings\n    },\n    201: {\n      bodyMapper: Mappers.DiagnosticRemoteSupportSettings\n    },\n    202: {\n      bodyMapper: Mappers.DiagnosticRemoteSupportSettings\n    },\n    204: {\n      bodyMapper: Mappers.DiagnosticRemoteSupportSettings\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.diagnosticRemoteSupportSettings,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { Jobs } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { DataBoxEdgeManagementClient } from \"../dataBoxEdgeManagementClient\";\nimport { JobsGetOptionalParams, JobsGetResponse } from \"../models\";\n\n/** Class containing Jobs operations. */\nexport class JobsImpl implements Jobs {\n  private readonly client: DataBoxEdgeManagementClient;\n\n  /**\n   * Initialize a new instance of the class Jobs class.\n   * @param client Reference to the service client\n   */\n  constructor(client: DataBoxEdgeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets the details of a specified job on a Data Box Edge/Data Box Gateway device.\n   * @param deviceName The device name.\n   * @param name The job name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  get(\n    deviceName: string,\n    name: string,\n    resourceGroupName: string,\n    options?: JobsGetOptionalParams\n  ): Promise<JobsGetResponse> {\n    return this.client.sendOperationRequest(\n      { deviceName, name, resourceGroupName, options },\n      getOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/jobs/{name}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Job\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Nodes } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { DataBoxEdgeManagementClient } from \"../dataBoxEdgeManagementClient\";\nimport {\n  Node,\n  NodesListByDataBoxEdgeDeviceNextOptionalParams,\n  NodesListByDataBoxEdgeDeviceOptionalParams,\n  NodesListByDataBoxEdgeDeviceResponse,\n  NodesListByDataBoxEdgeDeviceNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Nodes operations. */\nexport class NodesImpl implements Nodes {\n  private readonly client: DataBoxEdgeManagementClient;\n\n  /**\n   * Initialize a new instance of the class Nodes class.\n   * @param client Reference to the service client\n   */\n  constructor(client: DataBoxEdgeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets all the nodes currently configured under this Data Box Edge device\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  public listByDataBoxEdgeDevice(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: NodesListByDataBoxEdgeDeviceOptionalParams\n  ): PagedAsyncIterableIterator<Node> {\n    const iter = this.listByDataBoxEdgeDevicePagingAll(\n      deviceName,\n      resourceGroupName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByDataBoxEdgeDevicePagingPage(\n          deviceName,\n          resourceGroupName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByDataBoxEdgeDevicePagingPage(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: NodesListByDataBoxEdgeDeviceOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Node[]> {\n    let result: NodesListByDataBoxEdgeDeviceResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByDataBoxEdgeDevice(\n        deviceName,\n        resourceGroupName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByDataBoxEdgeDeviceNext(\n        deviceName,\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByDataBoxEdgeDevicePagingAll(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: NodesListByDataBoxEdgeDeviceOptionalParams\n  ): AsyncIterableIterator<Node> {\n    for await (const page of this.listByDataBoxEdgeDevicePagingPage(\n      deviceName,\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all the nodes currently configured under this Data Box Edge device\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  private _listByDataBoxEdgeDevice(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: NodesListByDataBoxEdgeDeviceOptionalParams\n  ): Promise<NodesListByDataBoxEdgeDeviceResponse> {\n    return this.client.sendOperationRequest(\n      { deviceName, resourceGroupName, options },\n      listByDataBoxEdgeDeviceOperationSpec\n    );\n  }\n\n  /**\n   * ListByDataBoxEdgeDeviceNext\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param nextLink The nextLink from the previous successful call to the ListByDataBoxEdgeDevice\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listByDataBoxEdgeDeviceNext(\n    deviceName: string,\n    resourceGroupName: string,\n    nextLink: string,\n    options?: NodesListByDataBoxEdgeDeviceNextOptionalParams\n  ): Promise<NodesListByDataBoxEdgeDeviceNextResponse> {\n    return this.client.sendOperationRequest(\n      { deviceName, resourceGroupName, nextLink, options },\n      listByDataBoxEdgeDeviceNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByDataBoxEdgeDeviceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/nodes\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NodeList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByDataBoxEdgeDeviceNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NodeList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { OperationsStatus } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { DataBoxEdgeManagementClient } from \"../dataBoxEdgeManagementClient\";\nimport {\n  OperationsStatusGetOptionalParams,\n  OperationsStatusGetResponse\n} from \"../models\";\n\n/** Class containing OperationsStatus operations. */\nexport class OperationsStatusImpl implements OperationsStatus {\n  private readonly client: DataBoxEdgeManagementClient;\n\n  /**\n   * Initialize a new instance of the class OperationsStatus class.\n   * @param client Reference to the service client\n   */\n  constructor(client: DataBoxEdgeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets the details of a specified job on a Data Box Edge/Data Box Gateway device.\n   * @param deviceName The device name.\n   * @param name The job name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  get(\n    deviceName: string,\n    name: string,\n    resourceGroupName: string,\n    options?: OperationsStatusGetOptionalParams\n  ): Promise<OperationsStatusGetResponse> {\n    return this.client.sendOperationRequest(\n      { deviceName, name, resourceGroupName, options },\n      getOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/operationsStatus/{name}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Job\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Orders } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { DataBoxEdgeManagementClient } from \"../dataBoxEdgeManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  Order,\n  OrdersListByDataBoxEdgeDeviceNextOptionalParams,\n  OrdersListByDataBoxEdgeDeviceOptionalParams,\n  OrdersListByDataBoxEdgeDeviceResponse,\n  OrdersGetOptionalParams,\n  OrdersGetResponse,\n  OrdersCreateOrUpdateOptionalParams,\n  OrdersCreateOrUpdateResponse,\n  OrdersDeleteOptionalParams,\n  OrdersListDCAccessCodeOptionalParams,\n  OrdersListDCAccessCodeResponse,\n  OrdersListByDataBoxEdgeDeviceNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Orders operations. */\nexport class OrdersImpl implements Orders {\n  private readonly client: DataBoxEdgeManagementClient;\n\n  /**\n   * Initialize a new instance of the class Orders class.\n   * @param client Reference to the service client\n   */\n  constructor(client: DataBoxEdgeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all the orders related to a Data Box Edge/Data Box Gateway device.\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  public listByDataBoxEdgeDevice(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: OrdersListByDataBoxEdgeDeviceOptionalParams\n  ): PagedAsyncIterableIterator<Order> {\n    const iter = this.listByDataBoxEdgeDevicePagingAll(\n      deviceName,\n      resourceGroupName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByDataBoxEdgeDevicePagingPage(\n          deviceName,\n          resourceGroupName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByDataBoxEdgeDevicePagingPage(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: OrdersListByDataBoxEdgeDeviceOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Order[]> {\n    let result: OrdersListByDataBoxEdgeDeviceResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByDataBoxEdgeDevice(\n        deviceName,\n        resourceGroupName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByDataBoxEdgeDeviceNext(\n        deviceName,\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByDataBoxEdgeDevicePagingAll(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: OrdersListByDataBoxEdgeDeviceOptionalParams\n  ): AsyncIterableIterator<Order> {\n    for await (const page of this.listByDataBoxEdgeDevicePagingPage(\n      deviceName,\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all the orders related to a Data Box Edge/Data Box Gateway device.\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  private _listByDataBoxEdgeDevice(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: OrdersListByDataBoxEdgeDeviceOptionalParams\n  ): Promise<OrdersListByDataBoxEdgeDeviceResponse> {\n    return this.client.sendOperationRequest(\n      { deviceName, resourceGroupName, options },\n      listByDataBoxEdgeDeviceOperationSpec\n    );\n  }\n\n  /**\n   * Gets a specific order by name.\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  get(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: OrdersGetOptionalParams\n  ): Promise<OrdersGetResponse> {\n    return this.client.sendOperationRequest(\n      { deviceName, resourceGroupName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates an order.\n   * @param deviceName The order details of a device.\n   * @param resourceGroupName The resource group name.\n   * @param order The order to be created or updated.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    deviceName: string,\n    resourceGroupName: string,\n    order: Order,\n    options?: OrdersCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<OrdersCreateOrUpdateResponse>,\n      OrdersCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<OrdersCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { deviceName, resourceGroupName, order, options },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates or updates an order.\n   * @param deviceName The order details of a device.\n   * @param resourceGroupName The resource group name.\n   * @param order The order to be created or updated.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    deviceName: string,\n    resourceGroupName: string,\n    order: Order,\n    options?: OrdersCreateOrUpdateOptionalParams\n  ): Promise<OrdersCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      deviceName,\n      resourceGroupName,\n      order,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes the order related to the device.\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: OrdersDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { deviceName, resourceGroupName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes the order related to the device.\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: OrdersDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      deviceName,\n      resourceGroupName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets the DCAccess Code\n   * @param deviceName The device name\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  listDCAccessCode(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: OrdersListDCAccessCodeOptionalParams\n  ): Promise<OrdersListDCAccessCodeResponse> {\n    return this.client.sendOperationRequest(\n      { deviceName, resourceGroupName, options },\n      listDCAccessCodeOperationSpec\n    );\n  }\n\n  /**\n   * ListByDataBoxEdgeDeviceNext\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param nextLink The nextLink from the previous successful call to the ListByDataBoxEdgeDevice\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listByDataBoxEdgeDeviceNext(\n    deviceName: string,\n    resourceGroupName: string,\n    nextLink: string,\n    options?: OrdersListByDataBoxEdgeDeviceNextOptionalParams\n  ): Promise<OrdersListByDataBoxEdgeDeviceNextResponse> {\n    return this.client.sendOperationRequest(\n      { deviceName, resourceGroupName, nextLink, options },\n      listByDataBoxEdgeDeviceNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByDataBoxEdgeDeviceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/orders\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OrderList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/orders/default\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Order\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/orders/default\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Order\n    },\n    201: {\n      bodyMapper: Mappers.Order\n    },\n    202: {\n      bodyMapper: Mappers.Order\n    },\n    204: {\n      bodyMapper: Mappers.Order\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.order,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/orders/default\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listDCAccessCodeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/orders/default/listDCAccessCode\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DCAccessCode\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByDataBoxEdgeDeviceNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OrderList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Roles } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { DataBoxEdgeManagementClient } from \"../dataBoxEdgeManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  RoleUnion,\n  RolesListByDataBoxEdgeDeviceNextOptionalParams,\n  RolesListByDataBoxEdgeDeviceOptionalParams,\n  RolesListByDataBoxEdgeDeviceResponse,\n  RolesGetOptionalParams,\n  RolesGetResponse,\n  RolesCreateOrUpdateOptionalParams,\n  RolesCreateOrUpdateResponse,\n  RolesDeleteOptionalParams,\n  RolesListByDataBoxEdgeDeviceNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Roles operations. */\nexport class RolesImpl implements Roles {\n  private readonly client: DataBoxEdgeManagementClient;\n\n  /**\n   * Initialize a new instance of the class Roles class.\n   * @param client Reference to the service client\n   */\n  constructor(client: DataBoxEdgeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all the roles configured in a Data Box Edge/Data Box Gateway device.\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  public listByDataBoxEdgeDevice(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: RolesListByDataBoxEdgeDeviceOptionalParams\n  ): PagedAsyncIterableIterator<RoleUnion> {\n    const iter = this.listByDataBoxEdgeDevicePagingAll(\n      deviceName,\n      resourceGroupName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByDataBoxEdgeDevicePagingPage(\n          deviceName,\n          resourceGroupName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByDataBoxEdgeDevicePagingPage(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: RolesListByDataBoxEdgeDeviceOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<RoleUnion[]> {\n    let result: RolesListByDataBoxEdgeDeviceResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByDataBoxEdgeDevice(\n        deviceName,\n        resourceGroupName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByDataBoxEdgeDeviceNext(\n        deviceName,\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByDataBoxEdgeDevicePagingAll(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: RolesListByDataBoxEdgeDeviceOptionalParams\n  ): AsyncIterableIterator<RoleUnion> {\n    for await (const page of this.listByDataBoxEdgeDevicePagingPage(\n      deviceName,\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all the roles configured in a Data Box Edge/Data Box Gateway device.\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  private _listByDataBoxEdgeDevice(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: RolesListByDataBoxEdgeDeviceOptionalParams\n  ): Promise<RolesListByDataBoxEdgeDeviceResponse> {\n    return this.client.sendOperationRequest(\n      { deviceName, resourceGroupName, options },\n      listByDataBoxEdgeDeviceOperationSpec\n    );\n  }\n\n  /**\n   * Gets a specific role by name.\n   * @param deviceName The device name.\n   * @param name The role name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  get(\n    deviceName: string,\n    name: string,\n    resourceGroupName: string,\n    options?: RolesGetOptionalParams\n  ): Promise<RolesGetResponse> {\n    return this.client.sendOperationRequest(\n      { deviceName, name, resourceGroupName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create or update a role.\n   * @param deviceName The device name.\n   * @param name The role name.\n   * @param resourceGroupName The resource group name.\n   * @param role The role properties.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    deviceName: string,\n    name: string,\n    resourceGroupName: string,\n    role: RoleUnion,\n    options?: RolesCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<RolesCreateOrUpdateResponse>,\n      RolesCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<RolesCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { deviceName, name, resourceGroupName, role, options },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Create or update a role.\n   * @param deviceName The device name.\n   * @param name The role name.\n   * @param resourceGroupName The resource group name.\n   * @param role The role properties.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    deviceName: string,\n    name: string,\n    resourceGroupName: string,\n    role: RoleUnion,\n    options?: RolesCreateOrUpdateOptionalParams\n  ): Promise<RolesCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      deviceName,\n      name,\n      resourceGroupName,\n      role,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes the role on the device.\n   * @param deviceName The device name.\n   * @param name The role name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    deviceName: string,\n    name: string,\n    resourceGroupName: string,\n    options?: RolesDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { deviceName, name, resourceGroupName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes the role on the device.\n   * @param deviceName The device name.\n   * @param name The role name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    deviceName: string,\n    name: string,\n    resourceGroupName: string,\n    options?: RolesDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      deviceName,\n      name,\n      resourceGroupName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListByDataBoxEdgeDeviceNext\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param nextLink The nextLink from the previous successful call to the ListByDataBoxEdgeDevice\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listByDataBoxEdgeDeviceNext(\n    deviceName: string,\n    resourceGroupName: string,\n    nextLink: string,\n    options?: RolesListByDataBoxEdgeDeviceNextOptionalParams\n  ): Promise<RolesListByDataBoxEdgeDeviceNextResponse> {\n    return this.client.sendOperationRequest(\n      { deviceName, resourceGroupName, nextLink, options },\n      listByDataBoxEdgeDeviceNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByDataBoxEdgeDeviceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/roles\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/roles/{name}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Role\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/roles/{name}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Role\n    },\n    201: {\n      bodyMapper: Mappers.Role\n    },\n    202: {\n      bodyMapper: Mappers.Role\n    },\n    204: {\n      bodyMapper: Mappers.Role\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.role,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/roles/{name}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByDataBoxEdgeDeviceNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Addons } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { DataBoxEdgeManagementClient } from \"../dataBoxEdgeManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  AddonUnion,\n  AddonsListByRoleNextOptionalParams,\n  AddonsListByRoleOptionalParams,\n  AddonsListByRoleResponse,\n  AddonsGetOptionalParams,\n  AddonsGetResponse,\n  AddonsCreateOrUpdateOptionalParams,\n  AddonsCreateOrUpdateResponse,\n  AddonsDeleteOptionalParams,\n  AddonsListByRoleNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Addons operations. */\nexport class AddonsImpl implements Addons {\n  private readonly client: DataBoxEdgeManagementClient;\n\n  /**\n   * Initialize a new instance of the class Addons class.\n   * @param client Reference to the service client\n   */\n  constructor(client: DataBoxEdgeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all the addons configured in the role.\n   * @param deviceName The device name.\n   * @param roleName The role name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  public listByRole(\n    deviceName: string,\n    roleName: string,\n    resourceGroupName: string,\n    options?: AddonsListByRoleOptionalParams\n  ): PagedAsyncIterableIterator<AddonUnion> {\n    const iter = this.listByRolePagingAll(\n      deviceName,\n      roleName,\n      resourceGroupName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByRolePagingPage(\n          deviceName,\n          roleName,\n          resourceGroupName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByRolePagingPage(\n    deviceName: string,\n    roleName: string,\n    resourceGroupName: string,\n    options?: AddonsListByRoleOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<AddonUnion[]> {\n    let result: AddonsListByRoleResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByRole(\n        deviceName,\n        roleName,\n        resourceGroupName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByRoleNext(\n        deviceName,\n        roleName,\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByRolePagingAll(\n    deviceName: string,\n    roleName: string,\n    resourceGroupName: string,\n    options?: AddonsListByRoleOptionalParams\n  ): AsyncIterableIterator<AddonUnion> {\n    for await (const page of this.listByRolePagingPage(\n      deviceName,\n      roleName,\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all the addons configured in the role.\n   * @param deviceName The device name.\n   * @param roleName The role name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  private _listByRole(\n    deviceName: string,\n    roleName: string,\n    resourceGroupName: string,\n    options?: AddonsListByRoleOptionalParams\n  ): Promise<AddonsListByRoleResponse> {\n    return this.client.sendOperationRequest(\n      { deviceName, roleName, resourceGroupName, options },\n      listByRoleOperationSpec\n    );\n  }\n\n  /**\n   * Gets a specific addon by name.\n   * @param deviceName The device name.\n   * @param roleName The role name.\n   * @param addonName The addon name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  get(\n    deviceName: string,\n    roleName: string,\n    addonName: string,\n    resourceGroupName: string,\n    options?: AddonsGetOptionalParams\n  ): Promise<AddonsGetResponse> {\n    return this.client.sendOperationRequest(\n      { deviceName, roleName, addonName, resourceGroupName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create or update a addon.\n   * @param deviceName The device name.\n   * @param roleName The role name.\n   * @param addonName The addon name.\n   * @param resourceGroupName The resource group name.\n   * @param addon The addon properties.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    deviceName: string,\n    roleName: string,\n    addonName: string,\n    resourceGroupName: string,\n    addon: AddonUnion,\n    options?: AddonsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<AddonsCreateOrUpdateResponse>,\n      AddonsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<AddonsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { deviceName, roleName, addonName, resourceGroupName, addon, options },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Create or update a addon.\n   * @param deviceName The device name.\n   * @param roleName The role name.\n   * @param addonName The addon name.\n   * @param resourceGroupName The resource group name.\n   * @param addon The addon properties.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    deviceName: string,\n    roleName: string,\n    addonName: string,\n    resourceGroupName: string,\n    addon: AddonUnion,\n    options?: AddonsCreateOrUpdateOptionalParams\n  ): Promise<AddonsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      deviceName,\n      roleName,\n      addonName,\n      resourceGroupName,\n      addon,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes the addon on the device.\n   * @param deviceName The device name.\n   * @param roleName The role name.\n   * @param addonName The addon name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    deviceName: string,\n    roleName: string,\n    addonName: string,\n    resourceGroupName: string,\n    options?: AddonsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { deviceName, roleName, addonName, resourceGroupName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes the addon on the device.\n   * @param deviceName The device name.\n   * @param roleName The role name.\n   * @param addonName The addon name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    deviceName: string,\n    roleName: string,\n    addonName: string,\n    resourceGroupName: string,\n    options?: AddonsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      deviceName,\n      roleName,\n      addonName,\n      resourceGroupName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListByRoleNext\n   * @param deviceName The device name.\n   * @param roleName The role name.\n   * @param resourceGroupName The resource group name.\n   * @param nextLink The nextLink from the previous successful call to the ListByRole method.\n   * @param options The options parameters.\n   */\n  private _listByRoleNext(\n    deviceName: string,\n    roleName: string,\n    resourceGroupName: string,\n    nextLink: string,\n    options?: AddonsListByRoleNextOptionalParams\n  ): Promise<AddonsListByRoleNextResponse> {\n    return this.client.sendOperationRequest(\n      { deviceName, roleName, resourceGroupName, nextLink, options },\n      listByRoleNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByRoleOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/roles/{roleName}/addons\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AddonList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName,\n    Parameters.roleName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/roles/{roleName}/addons/{addonName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Addon\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName,\n    Parameters.roleName,\n    Parameters.addonName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/roles/{roleName}/addons/{addonName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Addon\n    },\n    201: {\n      bodyMapper: Mappers.Addon\n    },\n    202: {\n      bodyMapper: Mappers.Addon\n    },\n    204: {\n      bodyMapper: Mappers.Addon\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.addon,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName,\n    Parameters.roleName,\n    Parameters.addonName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/roles/{roleName}/addons/{addonName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName,\n    Parameters.roleName,\n    Parameters.addonName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByRoleNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AddonList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName,\n    Parameters.roleName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { MonitoringConfig } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { DataBoxEdgeManagementClient } from \"../dataBoxEdgeManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  MonitoringMetricConfiguration,\n  MonitoringConfigListNextOptionalParams,\n  MonitoringConfigListOptionalParams,\n  MonitoringConfigListResponse,\n  MonitoringConfigGetOptionalParams,\n  MonitoringConfigGetResponse,\n  MonitoringConfigCreateOrUpdateOptionalParams,\n  MonitoringConfigCreateOrUpdateResponse,\n  MonitoringConfigDeleteOptionalParams,\n  MonitoringConfigListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing MonitoringConfig operations. */\nexport class MonitoringConfigImpl implements MonitoringConfig {\n  private readonly client: DataBoxEdgeManagementClient;\n\n  /**\n   * Initialize a new instance of the class MonitoringConfig class.\n   * @param client Reference to the service client\n   */\n  constructor(client: DataBoxEdgeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists metric configurations in a role.\n   * @param deviceName The device name.\n   * @param roleName The role name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  public list(\n    deviceName: string,\n    roleName: string,\n    resourceGroupName: string,\n    options?: MonitoringConfigListOptionalParams\n  ): PagedAsyncIterableIterator<MonitoringMetricConfiguration> {\n    const iter = this.listPagingAll(\n      deviceName,\n      roleName,\n      resourceGroupName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          deviceName,\n          roleName,\n          resourceGroupName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    deviceName: string,\n    roleName: string,\n    resourceGroupName: string,\n    options?: MonitoringConfigListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<MonitoringMetricConfiguration[]> {\n    let result: MonitoringConfigListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(\n        deviceName,\n        roleName,\n        resourceGroupName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        deviceName,\n        roleName,\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    deviceName: string,\n    roleName: string,\n    resourceGroupName: string,\n    options?: MonitoringConfigListOptionalParams\n  ): AsyncIterableIterator<MonitoringMetricConfiguration> {\n    for await (const page of this.listPagingPage(\n      deviceName,\n      roleName,\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists metric configurations in a role.\n   * @param deviceName The device name.\n   * @param roleName The role name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  private _list(\n    deviceName: string,\n    roleName: string,\n    resourceGroupName: string,\n    options?: MonitoringConfigListOptionalParams\n  ): Promise<MonitoringConfigListResponse> {\n    return this.client.sendOperationRequest(\n      { deviceName, roleName, resourceGroupName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Gets a  metric configuration of a role.\n   * @param deviceName The device name.\n   * @param roleName The role name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  get(\n    deviceName: string,\n    roleName: string,\n    resourceGroupName: string,\n    options?: MonitoringConfigGetOptionalParams\n  ): Promise<MonitoringConfigGetResponse> {\n    return this.client.sendOperationRequest(\n      { deviceName, roleName, resourceGroupName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates a new metric configuration or updates an existing one for a role.\n   * @param deviceName The device name.\n   * @param roleName The role name.\n   * @param resourceGroupName The resource group name.\n   * @param monitoringMetricConfiguration The metric configuration.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    deviceName: string,\n    roleName: string,\n    resourceGroupName: string,\n    monitoringMetricConfiguration: MonitoringMetricConfiguration,\n    options?: MonitoringConfigCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<MonitoringConfigCreateOrUpdateResponse>,\n      MonitoringConfigCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<MonitoringConfigCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        deviceName,\n        roleName,\n        resourceGroupName,\n        monitoringMetricConfiguration,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates a new metric configuration or updates an existing one for a role.\n   * @param deviceName The device name.\n   * @param roleName The role name.\n   * @param resourceGroupName The resource group name.\n   * @param monitoringMetricConfiguration The metric configuration.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    deviceName: string,\n    roleName: string,\n    resourceGroupName: string,\n    monitoringMetricConfiguration: MonitoringMetricConfiguration,\n    options?: MonitoringConfigCreateOrUpdateOptionalParams\n  ): Promise<MonitoringConfigCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      deviceName,\n      roleName,\n      resourceGroupName,\n      monitoringMetricConfiguration,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * deletes a new metric configuration for a role.\n   * @param deviceName The device name.\n   * @param roleName The role name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    deviceName: string,\n    roleName: string,\n    resourceGroupName: string,\n    options?: MonitoringConfigDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { deviceName, roleName, resourceGroupName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * deletes a new metric configuration for a role.\n   * @param deviceName The device name.\n   * @param roleName The role name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    deviceName: string,\n    roleName: string,\n    resourceGroupName: string,\n    options?: MonitoringConfigDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      deviceName,\n      roleName,\n      resourceGroupName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListNext\n   * @param deviceName The device name.\n   * @param roleName The role name.\n   * @param resourceGroupName The resource group name.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    deviceName: string,\n    roleName: string,\n    resourceGroupName: string,\n    nextLink: string,\n    options?: MonitoringConfigListNextOptionalParams\n  ): Promise<MonitoringConfigListNextResponse> {\n    return this.client.sendOperationRequest(\n      { deviceName, roleName, resourceGroupName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/roles/{roleName}/monitoringConfig\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MonitoringMetricConfigurationList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName,\n    Parameters.roleName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/roles/{roleName}/monitoringConfig/default\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MonitoringMetricConfiguration\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName,\n    Parameters.roleName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/roles/{roleName}/monitoringConfig/default\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MonitoringMetricConfiguration\n    },\n    201: {\n      bodyMapper: Mappers.MonitoringMetricConfiguration\n    },\n    202: {\n      bodyMapper: Mappers.MonitoringMetricConfiguration\n    },\n    204: {\n      bodyMapper: Mappers.MonitoringMetricConfiguration\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.monitoringMetricConfiguration,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName,\n    Parameters.roleName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/roles/{roleName}/monitoringConfig/default\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName,\n    Parameters.roleName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MonitoringMetricConfigurationList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName,\n    Parameters.roleName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Shares } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { DataBoxEdgeManagementClient } from \"../dataBoxEdgeManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  Share,\n  SharesListByDataBoxEdgeDeviceNextOptionalParams,\n  SharesListByDataBoxEdgeDeviceOptionalParams,\n  SharesListByDataBoxEdgeDeviceResponse,\n  SharesGetOptionalParams,\n  SharesGetResponse,\n  SharesCreateOrUpdateOptionalParams,\n  SharesCreateOrUpdateResponse,\n  SharesDeleteOptionalParams,\n  SharesRefreshOptionalParams,\n  SharesListByDataBoxEdgeDeviceNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Shares operations. */\nexport class SharesImpl implements Shares {\n  private readonly client: DataBoxEdgeManagementClient;\n\n  /**\n   * Initialize a new instance of the class Shares class.\n   * @param client Reference to the service client\n   */\n  constructor(client: DataBoxEdgeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all the shares in a Data Box Edge/Data Box Gateway device.\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  public listByDataBoxEdgeDevice(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: SharesListByDataBoxEdgeDeviceOptionalParams\n  ): PagedAsyncIterableIterator<Share> {\n    const iter = this.listByDataBoxEdgeDevicePagingAll(\n      deviceName,\n      resourceGroupName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByDataBoxEdgeDevicePagingPage(\n          deviceName,\n          resourceGroupName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByDataBoxEdgeDevicePagingPage(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: SharesListByDataBoxEdgeDeviceOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Share[]> {\n    let result: SharesListByDataBoxEdgeDeviceResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByDataBoxEdgeDevice(\n        deviceName,\n        resourceGroupName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByDataBoxEdgeDeviceNext(\n        deviceName,\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByDataBoxEdgeDevicePagingAll(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: SharesListByDataBoxEdgeDeviceOptionalParams\n  ): AsyncIterableIterator<Share> {\n    for await (const page of this.listByDataBoxEdgeDevicePagingPage(\n      deviceName,\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all the shares in a Data Box Edge/Data Box Gateway device.\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  private _listByDataBoxEdgeDevice(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: SharesListByDataBoxEdgeDeviceOptionalParams\n  ): Promise<SharesListByDataBoxEdgeDeviceResponse> {\n    return this.client.sendOperationRequest(\n      { deviceName, resourceGroupName, options },\n      listByDataBoxEdgeDeviceOperationSpec\n    );\n  }\n\n  /**\n   * Gets a share by name.\n   * @param deviceName The device name.\n   * @param name The share name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  get(\n    deviceName: string,\n    name: string,\n    resourceGroupName: string,\n    options?: SharesGetOptionalParams\n  ): Promise<SharesGetResponse> {\n    return this.client.sendOperationRequest(\n      { deviceName, name, resourceGroupName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates a new share or updates an existing share on the device.\n   * @param deviceName The device name.\n   * @param name The share name.\n   * @param resourceGroupName The resource group name.\n   * @param share The share properties.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    deviceName: string,\n    name: string,\n    resourceGroupName: string,\n    share: Share,\n    options?: SharesCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<SharesCreateOrUpdateResponse>,\n      SharesCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<SharesCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { deviceName, name, resourceGroupName, share, options },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates a new share or updates an existing share on the device.\n   * @param deviceName The device name.\n   * @param name The share name.\n   * @param resourceGroupName The resource group name.\n   * @param share The share properties.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    deviceName: string,\n    name: string,\n    resourceGroupName: string,\n    share: Share,\n    options?: SharesCreateOrUpdateOptionalParams\n  ): Promise<SharesCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      deviceName,\n      name,\n      resourceGroupName,\n      share,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes the share on the Data Box Edge/Data Box Gateway device.\n   * @param deviceName The device name.\n   * @param name The share name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    deviceName: string,\n    name: string,\n    resourceGroupName: string,\n    options?: SharesDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { deviceName, name, resourceGroupName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes the share on the Data Box Edge/Data Box Gateway device.\n   * @param deviceName The device name.\n   * @param name The share name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    deviceName: string,\n    name: string,\n    resourceGroupName: string,\n    options?: SharesDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      deviceName,\n      name,\n      resourceGroupName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Refreshes the share metadata with the data from the cloud.\n   * @param deviceName The device name.\n   * @param name The share name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  async beginRefresh(\n    deviceName: string,\n    name: string,\n    resourceGroupName: string,\n    options?: SharesRefreshOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { deviceName, name, resourceGroupName, options },\n      refreshOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Refreshes the share metadata with the data from the cloud.\n   * @param deviceName The device name.\n   * @param name The share name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  async beginRefreshAndWait(\n    deviceName: string,\n    name: string,\n    resourceGroupName: string,\n    options?: SharesRefreshOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginRefresh(\n      deviceName,\n      name,\n      resourceGroupName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListByDataBoxEdgeDeviceNext\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param nextLink The nextLink from the previous successful call to the ListByDataBoxEdgeDevice\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listByDataBoxEdgeDeviceNext(\n    deviceName: string,\n    resourceGroupName: string,\n    nextLink: string,\n    options?: SharesListByDataBoxEdgeDeviceNextOptionalParams\n  ): Promise<SharesListByDataBoxEdgeDeviceNextResponse> {\n    return this.client.sendOperationRequest(\n      { deviceName, resourceGroupName, nextLink, options },\n      listByDataBoxEdgeDeviceNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByDataBoxEdgeDeviceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/shares\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ShareList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/shares/{name}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Share\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/shares/{name}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Share\n    },\n    201: {\n      bodyMapper: Mappers.Share\n    },\n    202: {\n      bodyMapper: Mappers.Share\n    },\n    204: {\n      bodyMapper: Mappers.Share\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.share,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/shares/{name}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst refreshOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/shares/{name}/refresh\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByDataBoxEdgeDeviceNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ShareList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { StorageAccountCredentials } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { DataBoxEdgeManagementClient } from \"../dataBoxEdgeManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  StorageAccountCredential,\n  StorageAccountCredentialsListByDataBoxEdgeDeviceNextOptionalParams,\n  StorageAccountCredentialsListByDataBoxEdgeDeviceOptionalParams,\n  StorageAccountCredentialsListByDataBoxEdgeDeviceResponse,\n  StorageAccountCredentialsGetOptionalParams,\n  StorageAccountCredentialsGetResponse,\n  StorageAccountCredentialsCreateOrUpdateOptionalParams,\n  StorageAccountCredentialsCreateOrUpdateResponse,\n  StorageAccountCredentialsDeleteOptionalParams,\n  StorageAccountCredentialsListByDataBoxEdgeDeviceNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing StorageAccountCredentials operations. */\nexport class StorageAccountCredentialsImpl\n  implements StorageAccountCredentials {\n  private readonly client: DataBoxEdgeManagementClient;\n\n  /**\n   * Initialize a new instance of the class StorageAccountCredentials class.\n   * @param client Reference to the service client\n   */\n  constructor(client: DataBoxEdgeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets all the storage account credentials in a Data Box Edge/Data Box Gateway device.\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  public listByDataBoxEdgeDevice(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: StorageAccountCredentialsListByDataBoxEdgeDeviceOptionalParams\n  ): PagedAsyncIterableIterator<StorageAccountCredential> {\n    const iter = this.listByDataBoxEdgeDevicePagingAll(\n      deviceName,\n      resourceGroupName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByDataBoxEdgeDevicePagingPage(\n          deviceName,\n          resourceGroupName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByDataBoxEdgeDevicePagingPage(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: StorageAccountCredentialsListByDataBoxEdgeDeviceOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<StorageAccountCredential[]> {\n    let result: StorageAccountCredentialsListByDataBoxEdgeDeviceResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByDataBoxEdgeDevice(\n        deviceName,\n        resourceGroupName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByDataBoxEdgeDeviceNext(\n        deviceName,\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByDataBoxEdgeDevicePagingAll(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: StorageAccountCredentialsListByDataBoxEdgeDeviceOptionalParams\n  ): AsyncIterableIterator<StorageAccountCredential> {\n    for await (const page of this.listByDataBoxEdgeDevicePagingPage(\n      deviceName,\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all the storage account credentials in a Data Box Edge/Data Box Gateway device.\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  private _listByDataBoxEdgeDevice(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: StorageAccountCredentialsListByDataBoxEdgeDeviceOptionalParams\n  ): Promise<StorageAccountCredentialsListByDataBoxEdgeDeviceResponse> {\n    return this.client.sendOperationRequest(\n      { deviceName, resourceGroupName, options },\n      listByDataBoxEdgeDeviceOperationSpec\n    );\n  }\n\n  /**\n   * Gets the properties of the specified storage account credential.\n   * @param deviceName The device name.\n   * @param name The storage account credential name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  get(\n    deviceName: string,\n    name: string,\n    resourceGroupName: string,\n    options?: StorageAccountCredentialsGetOptionalParams\n  ): Promise<StorageAccountCredentialsGetResponse> {\n    return this.client.sendOperationRequest(\n      { deviceName, name, resourceGroupName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates the storage account credential.\n   * @param deviceName The device name.\n   * @param name The storage account credential name.\n   * @param resourceGroupName The resource group name.\n   * @param storageAccountCredential The storage account credential.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    deviceName: string,\n    name: string,\n    resourceGroupName: string,\n    storageAccountCredential: StorageAccountCredential,\n    options?: StorageAccountCredentialsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<StorageAccountCredentialsCreateOrUpdateResponse>,\n      StorageAccountCredentialsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<StorageAccountCredentialsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        deviceName,\n        name,\n        resourceGroupName,\n        storageAccountCredential,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates or updates the storage account credential.\n   * @param deviceName The device name.\n   * @param name The storage account credential name.\n   * @param resourceGroupName The resource group name.\n   * @param storageAccountCredential The storage account credential.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    deviceName: string,\n    name: string,\n    resourceGroupName: string,\n    storageAccountCredential: StorageAccountCredential,\n    options?: StorageAccountCredentialsCreateOrUpdateOptionalParams\n  ): Promise<StorageAccountCredentialsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      deviceName,\n      name,\n      resourceGroupName,\n      storageAccountCredential,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes the storage account credential.\n   * @param deviceName The device name.\n   * @param name The storage account credential name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    deviceName: string,\n    name: string,\n    resourceGroupName: string,\n    options?: StorageAccountCredentialsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { deviceName, name, resourceGroupName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes the storage account credential.\n   * @param deviceName The device name.\n   * @param name The storage account credential name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    deviceName: string,\n    name: string,\n    resourceGroupName: string,\n    options?: StorageAccountCredentialsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      deviceName,\n      name,\n      resourceGroupName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListByDataBoxEdgeDeviceNext\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param nextLink The nextLink from the previous successful call to the ListByDataBoxEdgeDevice\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listByDataBoxEdgeDeviceNext(\n    deviceName: string,\n    resourceGroupName: string,\n    nextLink: string,\n    options?: StorageAccountCredentialsListByDataBoxEdgeDeviceNextOptionalParams\n  ): Promise<StorageAccountCredentialsListByDataBoxEdgeDeviceNextResponse> {\n    return this.client.sendOperationRequest(\n      { deviceName, resourceGroupName, nextLink, options },\n      listByDataBoxEdgeDeviceNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByDataBoxEdgeDeviceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/storageAccountCredentials\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StorageAccountCredentialList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/storageAccountCredentials/{name}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StorageAccountCredential\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/storageAccountCredentials/{name}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StorageAccountCredential\n    },\n    201: {\n      bodyMapper: Mappers.StorageAccountCredential\n    },\n    202: {\n      bodyMapper: Mappers.StorageAccountCredential\n    },\n    204: {\n      bodyMapper: Mappers.StorageAccountCredential\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.storageAccountCredential,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/storageAccountCredentials/{name}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByDataBoxEdgeDeviceNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StorageAccountCredentialList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { StorageAccounts } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { DataBoxEdgeManagementClient } from \"../dataBoxEdgeManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  StorageAccount,\n  StorageAccountsListByDataBoxEdgeDeviceNextOptionalParams,\n  StorageAccountsListByDataBoxEdgeDeviceOptionalParams,\n  StorageAccountsListByDataBoxEdgeDeviceResponse,\n  StorageAccountsGetOptionalParams,\n  StorageAccountsGetResponse,\n  StorageAccountsCreateOrUpdateOptionalParams,\n  StorageAccountsCreateOrUpdateResponse,\n  StorageAccountsDeleteOptionalParams,\n  StorageAccountsListByDataBoxEdgeDeviceNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing StorageAccounts operations. */\nexport class StorageAccountsImpl implements StorageAccounts {\n  private readonly client: DataBoxEdgeManagementClient;\n\n  /**\n   * Initialize a new instance of the class StorageAccounts class.\n   * @param client Reference to the service client\n   */\n  constructor(client: DataBoxEdgeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all the StorageAccounts in a Data Box Edge/Data Box Gateway device.\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  public listByDataBoxEdgeDevice(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: StorageAccountsListByDataBoxEdgeDeviceOptionalParams\n  ): PagedAsyncIterableIterator<StorageAccount> {\n    const iter = this.listByDataBoxEdgeDevicePagingAll(\n      deviceName,\n      resourceGroupName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByDataBoxEdgeDevicePagingPage(\n          deviceName,\n          resourceGroupName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByDataBoxEdgeDevicePagingPage(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: StorageAccountsListByDataBoxEdgeDeviceOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<StorageAccount[]> {\n    let result: StorageAccountsListByDataBoxEdgeDeviceResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByDataBoxEdgeDevice(\n        deviceName,\n        resourceGroupName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByDataBoxEdgeDeviceNext(\n        deviceName,\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByDataBoxEdgeDevicePagingAll(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: StorageAccountsListByDataBoxEdgeDeviceOptionalParams\n  ): AsyncIterableIterator<StorageAccount> {\n    for await (const page of this.listByDataBoxEdgeDevicePagingPage(\n      deviceName,\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all the StorageAccounts in a Data Box Edge/Data Box Gateway device.\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  private _listByDataBoxEdgeDevice(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: StorageAccountsListByDataBoxEdgeDeviceOptionalParams\n  ): Promise<StorageAccountsListByDataBoxEdgeDeviceResponse> {\n    return this.client.sendOperationRequest(\n      { deviceName, resourceGroupName, options },\n      listByDataBoxEdgeDeviceOperationSpec\n    );\n  }\n\n  /**\n   * Gets a StorageAccount by name.\n   * @param deviceName The device name.\n   * @param storageAccountName The storage account name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  get(\n    deviceName: string,\n    storageAccountName: string,\n    resourceGroupName: string,\n    options?: StorageAccountsGetOptionalParams\n  ): Promise<StorageAccountsGetResponse> {\n    return this.client.sendOperationRequest(\n      { deviceName, storageAccountName, resourceGroupName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates a new StorageAccount or updates an existing StorageAccount on the device.\n   * @param deviceName The device name.\n   * @param storageAccountName The StorageAccount name.\n   * @param resourceGroupName The resource group name.\n   * @param storageAccount The StorageAccount properties.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    deviceName: string,\n    storageAccountName: string,\n    resourceGroupName: string,\n    storageAccount: StorageAccount,\n    options?: StorageAccountsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<StorageAccountsCreateOrUpdateResponse>,\n      StorageAccountsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<StorageAccountsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        deviceName,\n        storageAccountName,\n        resourceGroupName,\n        storageAccount,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates a new StorageAccount or updates an existing StorageAccount on the device.\n   * @param deviceName The device name.\n   * @param storageAccountName The StorageAccount name.\n   * @param resourceGroupName The resource group name.\n   * @param storageAccount The StorageAccount properties.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    deviceName: string,\n    storageAccountName: string,\n    resourceGroupName: string,\n    storageAccount: StorageAccount,\n    options?: StorageAccountsCreateOrUpdateOptionalParams\n  ): Promise<StorageAccountsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      deviceName,\n      storageAccountName,\n      resourceGroupName,\n      storageAccount,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes the StorageAccount on the Data Box Edge/Data Box Gateway device.\n   * @param deviceName The device name.\n   * @param storageAccountName The StorageAccount name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    deviceName: string,\n    storageAccountName: string,\n    resourceGroupName: string,\n    options?: StorageAccountsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { deviceName, storageAccountName, resourceGroupName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes the StorageAccount on the Data Box Edge/Data Box Gateway device.\n   * @param deviceName The device name.\n   * @param storageAccountName The StorageAccount name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    deviceName: string,\n    storageAccountName: string,\n    resourceGroupName: string,\n    options?: StorageAccountsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      deviceName,\n      storageAccountName,\n      resourceGroupName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListByDataBoxEdgeDeviceNext\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param nextLink The nextLink from the previous successful call to the ListByDataBoxEdgeDevice\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listByDataBoxEdgeDeviceNext(\n    deviceName: string,\n    resourceGroupName: string,\n    nextLink: string,\n    options?: StorageAccountsListByDataBoxEdgeDeviceNextOptionalParams\n  ): Promise<StorageAccountsListByDataBoxEdgeDeviceNextResponse> {\n    return this.client.sendOperationRequest(\n      { deviceName, resourceGroupName, nextLink, options },\n      listByDataBoxEdgeDeviceNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByDataBoxEdgeDeviceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/storageAccounts\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StorageAccountList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/storageAccounts/{storageAccountName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StorageAccount\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName,\n    Parameters.storageAccountName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/storageAccounts/{storageAccountName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StorageAccount\n    },\n    201: {\n      bodyMapper: Mappers.StorageAccount\n    },\n    202: {\n      bodyMapper: Mappers.StorageAccount\n    },\n    204: {\n      bodyMapper: Mappers.StorageAccount\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.storageAccount,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName,\n    Parameters.storageAccountName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/storageAccounts/{storageAccountName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName,\n    Parameters.storageAccountName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByDataBoxEdgeDeviceNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StorageAccountList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Containers } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { DataBoxEdgeManagementClient } from \"../dataBoxEdgeManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  Container,\n  ContainersListByStorageAccountNextOptionalParams,\n  ContainersListByStorageAccountOptionalParams,\n  ContainersListByStorageAccountResponse,\n  ContainersGetOptionalParams,\n  ContainersGetResponse,\n  ContainersCreateOrUpdateOptionalParams,\n  ContainersCreateOrUpdateResponse,\n  ContainersDeleteOptionalParams,\n  ContainersRefreshOptionalParams,\n  ContainersListByStorageAccountNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Containers operations. */\nexport class ContainersImpl implements Containers {\n  private readonly client: DataBoxEdgeManagementClient;\n\n  /**\n   * Initialize a new instance of the class Containers class.\n   * @param client Reference to the service client\n   */\n  constructor(client: DataBoxEdgeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all the containers of a storage Account in a Data Box Edge/Data Box Gateway device.\n   * @param deviceName The device name.\n   * @param storageAccountName The storage Account name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  public listByStorageAccount(\n    deviceName: string,\n    storageAccountName: string,\n    resourceGroupName: string,\n    options?: ContainersListByStorageAccountOptionalParams\n  ): PagedAsyncIterableIterator<Container> {\n    const iter = this.listByStorageAccountPagingAll(\n      deviceName,\n      storageAccountName,\n      resourceGroupName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByStorageAccountPagingPage(\n          deviceName,\n          storageAccountName,\n          resourceGroupName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByStorageAccountPagingPage(\n    deviceName: string,\n    storageAccountName: string,\n    resourceGroupName: string,\n    options?: ContainersListByStorageAccountOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Container[]> {\n    let result: ContainersListByStorageAccountResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByStorageAccount(\n        deviceName,\n        storageAccountName,\n        resourceGroupName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByStorageAccountNext(\n        deviceName,\n        storageAccountName,\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByStorageAccountPagingAll(\n    deviceName: string,\n    storageAccountName: string,\n    resourceGroupName: string,\n    options?: ContainersListByStorageAccountOptionalParams\n  ): AsyncIterableIterator<Container> {\n    for await (const page of this.listByStorageAccountPagingPage(\n      deviceName,\n      storageAccountName,\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all the containers of a storage Account in a Data Box Edge/Data Box Gateway device.\n   * @param deviceName The device name.\n   * @param storageAccountName The storage Account name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  private _listByStorageAccount(\n    deviceName: string,\n    storageAccountName: string,\n    resourceGroupName: string,\n    options?: ContainersListByStorageAccountOptionalParams\n  ): Promise<ContainersListByStorageAccountResponse> {\n    return this.client.sendOperationRequest(\n      { deviceName, storageAccountName, resourceGroupName, options },\n      listByStorageAccountOperationSpec\n    );\n  }\n\n  /**\n   * Gets a container by name.\n   * @param deviceName The device name.\n   * @param storageAccountName The Storage Account Name\n   * @param containerName The container Name\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  get(\n    deviceName: string,\n    storageAccountName: string,\n    containerName: string,\n    resourceGroupName: string,\n    options?: ContainersGetOptionalParams\n  ): Promise<ContainersGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        deviceName,\n        storageAccountName,\n        containerName,\n        resourceGroupName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates a new container or updates an existing container on the device.\n   * @param deviceName The device name.\n   * @param storageAccountName The Storage Account Name\n   * @param containerName The container name.\n   * @param resourceGroupName The resource group name.\n   * @param container The container properties.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    deviceName: string,\n    storageAccountName: string,\n    containerName: string,\n    resourceGroupName: string,\n    container: Container,\n    options?: ContainersCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<ContainersCreateOrUpdateResponse>,\n      ContainersCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ContainersCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        deviceName,\n        storageAccountName,\n        containerName,\n        resourceGroupName,\n        container,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates a new container or updates an existing container on the device.\n   * @param deviceName The device name.\n   * @param storageAccountName The Storage Account Name\n   * @param containerName The container name.\n   * @param resourceGroupName The resource group name.\n   * @param container The container properties.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    deviceName: string,\n    storageAccountName: string,\n    containerName: string,\n    resourceGroupName: string,\n    container: Container,\n    options?: ContainersCreateOrUpdateOptionalParams\n  ): Promise<ContainersCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      deviceName,\n      storageAccountName,\n      containerName,\n      resourceGroupName,\n      container,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes the container on the Data Box Edge/Data Box Gateway device.\n   * @param deviceName The device name.\n   * @param storageAccountName The Storage Account Name\n   * @param containerName The container name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    deviceName: string,\n    storageAccountName: string,\n    containerName: string,\n    resourceGroupName: string,\n    options?: ContainersDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        deviceName,\n        storageAccountName,\n        containerName,\n        resourceGroupName,\n        options\n      },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes the container on the Data Box Edge/Data Box Gateway device.\n   * @param deviceName The device name.\n   * @param storageAccountName The Storage Account Name\n   * @param containerName The container name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    deviceName: string,\n    storageAccountName: string,\n    containerName: string,\n    resourceGroupName: string,\n    options?: ContainersDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      deviceName,\n      storageAccountName,\n      containerName,\n      resourceGroupName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Refreshes the container metadata with the data from the cloud.\n   * @param deviceName The device name.\n   * @param storageAccountName The Storage Account Name\n   * @param containerName The container name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  async beginRefresh(\n    deviceName: string,\n    storageAccountName: string,\n    containerName: string,\n    resourceGroupName: string,\n    options?: ContainersRefreshOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        deviceName,\n        storageAccountName,\n        containerName,\n        resourceGroupName,\n        options\n      },\n      refreshOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Refreshes the container metadata with the data from the cloud.\n   * @param deviceName The device name.\n   * @param storageAccountName The Storage Account Name\n   * @param containerName The container name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  async beginRefreshAndWait(\n    deviceName: string,\n    storageAccountName: string,\n    containerName: string,\n    resourceGroupName: string,\n    options?: ContainersRefreshOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginRefresh(\n      deviceName,\n      storageAccountName,\n      containerName,\n      resourceGroupName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListByStorageAccountNext\n   * @param deviceName The device name.\n   * @param storageAccountName The storage Account name.\n   * @param resourceGroupName The resource group name.\n   * @param nextLink The nextLink from the previous successful call to the ListByStorageAccount method.\n   * @param options The options parameters.\n   */\n  private _listByStorageAccountNext(\n    deviceName: string,\n    storageAccountName: string,\n    resourceGroupName: string,\n    nextLink: string,\n    options?: ContainersListByStorageAccountNextOptionalParams\n  ): Promise<ContainersListByStorageAccountNextResponse> {\n    return this.client.sendOperationRequest(\n      { deviceName, storageAccountName, resourceGroupName, nextLink, options },\n      listByStorageAccountNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByStorageAccountOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/storageAccounts/{storageAccountName}/containers\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ContainerList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName,\n    Parameters.storageAccountName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/storageAccounts/{storageAccountName}/containers/{containerName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Container\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName,\n    Parameters.storageAccountName,\n    Parameters.containerName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/storageAccounts/{storageAccountName}/containers/{containerName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Container\n    },\n    201: {\n      bodyMapper: Mappers.Container\n    },\n    202: {\n      bodyMapper: Mappers.Container\n    },\n    204: {\n      bodyMapper: Mappers.Container\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.container,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName,\n    Parameters.storageAccountName,\n    Parameters.containerName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/storageAccounts/{storageAccountName}/containers/{containerName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName,\n    Parameters.storageAccountName,\n    Parameters.containerName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst refreshOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/storageAccounts/{storageAccountName}/containers/{containerName}/refresh\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName,\n    Parameters.storageAccountName,\n    Parameters.containerName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByStorageAccountNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ContainerList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName,\n    Parameters.storageAccountName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Triggers } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { DataBoxEdgeManagementClient } from \"../dataBoxEdgeManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  TriggerUnion,\n  TriggersListByDataBoxEdgeDeviceNextOptionalParams,\n  TriggersListByDataBoxEdgeDeviceOptionalParams,\n  TriggersListByDataBoxEdgeDeviceResponse,\n  TriggersGetOptionalParams,\n  TriggersGetResponse,\n  TriggersCreateOrUpdateOptionalParams,\n  TriggersCreateOrUpdateResponse,\n  TriggersDeleteOptionalParams,\n  TriggersListByDataBoxEdgeDeviceNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Triggers operations. */\nexport class TriggersImpl implements Triggers {\n  private readonly client: DataBoxEdgeManagementClient;\n\n  /**\n   * Initialize a new instance of the class Triggers class.\n   * @param client Reference to the service client\n   */\n  constructor(client: DataBoxEdgeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all the triggers configured in the device.\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  public listByDataBoxEdgeDevice(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: TriggersListByDataBoxEdgeDeviceOptionalParams\n  ): PagedAsyncIterableIterator<TriggerUnion> {\n    const iter = this.listByDataBoxEdgeDevicePagingAll(\n      deviceName,\n      resourceGroupName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByDataBoxEdgeDevicePagingPage(\n          deviceName,\n          resourceGroupName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByDataBoxEdgeDevicePagingPage(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: TriggersListByDataBoxEdgeDeviceOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<TriggerUnion[]> {\n    let result: TriggersListByDataBoxEdgeDeviceResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByDataBoxEdgeDevice(\n        deviceName,\n        resourceGroupName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByDataBoxEdgeDeviceNext(\n        deviceName,\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByDataBoxEdgeDevicePagingAll(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: TriggersListByDataBoxEdgeDeviceOptionalParams\n  ): AsyncIterableIterator<TriggerUnion> {\n    for await (const page of this.listByDataBoxEdgeDevicePagingPage(\n      deviceName,\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all the triggers configured in the device.\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  private _listByDataBoxEdgeDevice(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: TriggersListByDataBoxEdgeDeviceOptionalParams\n  ): Promise<TriggersListByDataBoxEdgeDeviceResponse> {\n    return this.client.sendOperationRequest(\n      { deviceName, resourceGroupName, options },\n      listByDataBoxEdgeDeviceOperationSpec\n    );\n  }\n\n  /**\n   * Get a specific trigger by name.\n   * @param deviceName The device name.\n   * @param name The trigger name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  get(\n    deviceName: string,\n    name: string,\n    resourceGroupName: string,\n    options?: TriggersGetOptionalParams\n  ): Promise<TriggersGetResponse> {\n    return this.client.sendOperationRequest(\n      { deviceName, name, resourceGroupName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a trigger.\n   * @param deviceName Creates or updates a trigger\n   * @param name The trigger name.\n   * @param resourceGroupName The resource group name.\n   * @param trigger The trigger.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    deviceName: string,\n    name: string,\n    resourceGroupName: string,\n    trigger: TriggerUnion,\n    options?: TriggersCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<TriggersCreateOrUpdateResponse>,\n      TriggersCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<TriggersCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { deviceName, name, resourceGroupName, trigger, options },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates or updates a trigger.\n   * @param deviceName Creates or updates a trigger\n   * @param name The trigger name.\n   * @param resourceGroupName The resource group name.\n   * @param trigger The trigger.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    deviceName: string,\n    name: string,\n    resourceGroupName: string,\n    trigger: TriggerUnion,\n    options?: TriggersCreateOrUpdateOptionalParams\n  ): Promise<TriggersCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      deviceName,\n      name,\n      resourceGroupName,\n      trigger,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes the trigger on the gateway device.\n   * @param deviceName The device name.\n   * @param name The trigger name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    deviceName: string,\n    name: string,\n    resourceGroupName: string,\n    options?: TriggersDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { deviceName, name, resourceGroupName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes the trigger on the gateway device.\n   * @param deviceName The device name.\n   * @param name The trigger name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    deviceName: string,\n    name: string,\n    resourceGroupName: string,\n    options?: TriggersDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      deviceName,\n      name,\n      resourceGroupName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListByDataBoxEdgeDeviceNext\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param nextLink The nextLink from the previous successful call to the ListByDataBoxEdgeDevice\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listByDataBoxEdgeDeviceNext(\n    deviceName: string,\n    resourceGroupName: string,\n    nextLink: string,\n    options?: TriggersListByDataBoxEdgeDeviceNextOptionalParams\n  ): Promise<TriggersListByDataBoxEdgeDeviceNextResponse> {\n    return this.client.sendOperationRequest(\n      { deviceName, resourceGroupName, nextLink, options },\n      listByDataBoxEdgeDeviceNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByDataBoxEdgeDeviceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/triggers\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TriggerList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.filter],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/triggers/{name}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Trigger\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/triggers/{name}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Trigger\n    },\n    201: {\n      bodyMapper: Mappers.Trigger\n    },\n    202: {\n      bodyMapper: Mappers.Trigger\n    },\n    204: {\n      bodyMapper: Mappers.Trigger\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.trigger,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/triggers/{name}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByDataBoxEdgeDeviceNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TriggerList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.filter],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { SupportPackages } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { DataBoxEdgeManagementClient } from \"../dataBoxEdgeManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  TriggerSupportPackageRequest,\n  SupportPackagesTriggerSupportPackageOptionalParams\n} from \"../models\";\n\n/** Class containing SupportPackages operations. */\nexport class SupportPackagesImpl implements SupportPackages {\n  private readonly client: DataBoxEdgeManagementClient;\n\n  /**\n   * Initialize a new instance of the class SupportPackages class.\n   * @param client Reference to the service client\n   */\n  constructor(client: DataBoxEdgeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Triggers support package on the device\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param triggerSupportPackageRequest The trigger support package request object\n   * @param options The options parameters.\n   */\n  async beginTriggerSupportPackage(\n    deviceName: string,\n    resourceGroupName: string,\n    triggerSupportPackageRequest: TriggerSupportPackageRequest,\n    options?: SupportPackagesTriggerSupportPackageOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { deviceName, resourceGroupName, triggerSupportPackageRequest, options },\n      triggerSupportPackageOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Triggers support package on the device\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param triggerSupportPackageRequest The trigger support package request object\n   * @param options The options parameters.\n   */\n  async beginTriggerSupportPackageAndWait(\n    deviceName: string,\n    resourceGroupName: string,\n    triggerSupportPackageRequest: TriggerSupportPackageRequest,\n    options?: SupportPackagesTriggerSupportPackageOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginTriggerSupportPackage(\n      deviceName,\n      resourceGroupName,\n      triggerSupportPackageRequest,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst triggerSupportPackageOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/triggerSupportPackage\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.triggerSupportPackageRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Users } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { DataBoxEdgeManagementClient } from \"../dataBoxEdgeManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  User,\n  UsersListByDataBoxEdgeDeviceNextOptionalParams,\n  UsersListByDataBoxEdgeDeviceOptionalParams,\n  UsersListByDataBoxEdgeDeviceResponse,\n  UsersGetOptionalParams,\n  UsersGetResponse,\n  UsersCreateOrUpdateOptionalParams,\n  UsersCreateOrUpdateResponse,\n  UsersDeleteOptionalParams,\n  UsersListByDataBoxEdgeDeviceNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Users operations. */\nexport class UsersImpl implements Users {\n  private readonly client: DataBoxEdgeManagementClient;\n\n  /**\n   * Initialize a new instance of the class Users class.\n   * @param client Reference to the service client\n   */\n  constructor(client: DataBoxEdgeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets all the users registered on a Data Box Edge/Data Box Gateway device.\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  public listByDataBoxEdgeDevice(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: UsersListByDataBoxEdgeDeviceOptionalParams\n  ): PagedAsyncIterableIterator<User> {\n    const iter = this.listByDataBoxEdgeDevicePagingAll(\n      deviceName,\n      resourceGroupName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByDataBoxEdgeDevicePagingPage(\n          deviceName,\n          resourceGroupName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByDataBoxEdgeDevicePagingPage(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: UsersListByDataBoxEdgeDeviceOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<User[]> {\n    let result: UsersListByDataBoxEdgeDeviceResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByDataBoxEdgeDevice(\n        deviceName,\n        resourceGroupName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByDataBoxEdgeDeviceNext(\n        deviceName,\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByDataBoxEdgeDevicePagingAll(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: UsersListByDataBoxEdgeDeviceOptionalParams\n  ): AsyncIterableIterator<User> {\n    for await (const page of this.listByDataBoxEdgeDevicePagingPage(\n      deviceName,\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all the users registered on a Data Box Edge/Data Box Gateway device.\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  private _listByDataBoxEdgeDevice(\n    deviceName: string,\n    resourceGroupName: string,\n    options?: UsersListByDataBoxEdgeDeviceOptionalParams\n  ): Promise<UsersListByDataBoxEdgeDeviceResponse> {\n    return this.client.sendOperationRequest(\n      { deviceName, resourceGroupName, options },\n      listByDataBoxEdgeDeviceOperationSpec\n    );\n  }\n\n  /**\n   * Gets the properties of the specified user.\n   * @param deviceName The device name.\n   * @param name The user name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  get(\n    deviceName: string,\n    name: string,\n    resourceGroupName: string,\n    options?: UsersGetOptionalParams\n  ): Promise<UsersGetResponse> {\n    return this.client.sendOperationRequest(\n      { deviceName, name, resourceGroupName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates a new user or updates an existing user's information on a Data Box Edge/Data Box Gateway\n   * device.\n   * @param deviceName The device name.\n   * @param name The user name.\n   * @param resourceGroupName The resource group name.\n   * @param user The user details.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    deviceName: string,\n    name: string,\n    resourceGroupName: string,\n    user: User,\n    options?: UsersCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<UsersCreateOrUpdateResponse>,\n      UsersCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<UsersCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { deviceName, name, resourceGroupName, user, options },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates a new user or updates an existing user's information on a Data Box Edge/Data Box Gateway\n   * device.\n   * @param deviceName The device name.\n   * @param name The user name.\n   * @param resourceGroupName The resource group name.\n   * @param user The user details.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    deviceName: string,\n    name: string,\n    resourceGroupName: string,\n    user: User,\n    options?: UsersCreateOrUpdateOptionalParams\n  ): Promise<UsersCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      deviceName,\n      name,\n      resourceGroupName,\n      user,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes the user on a databox edge/gateway device.\n   * @param deviceName The device name.\n   * @param name The user name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    deviceName: string,\n    name: string,\n    resourceGroupName: string,\n    options?: UsersDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { deviceName, name, resourceGroupName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes the user on a databox edge/gateway device.\n   * @param deviceName The device name.\n   * @param name The user name.\n   * @param resourceGroupName The resource group name.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    deviceName: string,\n    name: string,\n    resourceGroupName: string,\n    options?: UsersDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      deviceName,\n      name,\n      resourceGroupName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListByDataBoxEdgeDeviceNext\n   * @param deviceName The device name.\n   * @param resourceGroupName The resource group name.\n   * @param nextLink The nextLink from the previous successful call to the ListByDataBoxEdgeDevice\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listByDataBoxEdgeDeviceNext(\n    deviceName: string,\n    resourceGroupName: string,\n    nextLink: string,\n    options?: UsersListByDataBoxEdgeDeviceNextOptionalParams\n  ): Promise<UsersListByDataBoxEdgeDeviceNextResponse> {\n    return this.client.sendOperationRequest(\n      { deviceName, resourceGroupName, nextLink, options },\n      listByDataBoxEdgeDeviceNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByDataBoxEdgeDeviceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/users\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.UserList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.filter],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/users/{name}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.User\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/users/{name}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.User\n    },\n    201: {\n      bodyMapper: Mappers.User\n    },\n    202: {\n      bodyMapper: Mappers.User\n    },\n    204: {\n      bodyMapper: Mappers.User\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.user,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/users/{name}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByDataBoxEdgeDeviceNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.UserList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.filter],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.deviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\nimport {\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest\n} from \"@azure/core-rest-pipeline\";\nimport * as coreAuth from \"@azure/core-auth\";\nimport {\n  OperationsImpl,\n  AvailableSkusImpl,\n  DevicesImpl,\n  AlertsImpl,\n  BandwidthSchedulesImpl,\n  DiagnosticSettingsImpl,\n  JobsImpl,\n  NodesImpl,\n  OperationsStatusImpl,\n  OrdersImpl,\n  RolesImpl,\n  AddonsImpl,\n  MonitoringConfigImpl,\n  SharesImpl,\n  StorageAccountCredentialsImpl,\n  StorageAccountsImpl,\n  ContainersImpl,\n  TriggersImpl,\n  SupportPackagesImpl,\n  UsersImpl\n} from \"./operations\";\nimport {\n  Operations,\n  AvailableSkus,\n  Devices,\n  Alerts,\n  BandwidthSchedules,\n  DiagnosticSettings,\n  Jobs,\n  Nodes,\n  OperationsStatus,\n  Orders,\n  Roles,\n  Addons,\n  MonitoringConfig,\n  Shares,\n  StorageAccountCredentials,\n  StorageAccounts,\n  Containers,\n  Triggers,\n  SupportPackages,\n  Users\n} from \"./operationsInterfaces\";\nimport { DataBoxEdgeManagementClientOptionalParams } from \"./models\";\n\nexport class DataBoxEdgeManagementClient extends coreClient.ServiceClient {\n  $host: string;\n  apiVersion: string;\n  subscriptionId: string;\n\n  /**\n   * Initializes a new instance of the DataBoxEdgeManagementClient class.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param subscriptionId The subscription ID.\n   * @param options The parameter options\n   */\n  constructor(\n    credentials: coreAuth.TokenCredential,\n    subscriptionId: string,\n    options?: DataBoxEdgeManagementClientOptionalParams\n  ) {\n    if (credentials === undefined) {\n      throw new Error(\"'credentials' cannot be null\");\n    }\n    if (subscriptionId === undefined) {\n      throw new Error(\"'subscriptionId' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: DataBoxEdgeManagementClientOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\",\n      credential: credentials\n    };\n\n    const packageDetails = `azsdk-js-arm-databoxedge/2.1.0`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      endpoint:\n        options.endpoint ?? options.baseUri ?? \"https://management.azure.com\"\n    };\n    super(optionsWithDefaults);\n\n    let bearerTokenAuthenticationPolicyFound: boolean = false;\n    if (options?.pipeline && options.pipeline.getOrderedPolicies().length > 0) {\n      const pipelinePolicies: coreRestPipeline.PipelinePolicy[] = options.pipeline.getOrderedPolicies();\n      bearerTokenAuthenticationPolicyFound = pipelinePolicies.some(\n        (pipelinePolicy) =>\n          pipelinePolicy.name ===\n          coreRestPipeline.bearerTokenAuthenticationPolicyName\n      );\n    }\n    if (\n      !options ||\n      !options.pipeline ||\n      options.pipeline.getOrderedPolicies().length == 0 ||\n      !bearerTokenAuthenticationPolicyFound\n    ) {\n      this.pipeline.removePolicy({\n        name: coreRestPipeline.bearerTokenAuthenticationPolicyName\n      });\n      this.pipeline.addPolicy(\n        coreRestPipeline.bearerTokenAuthenticationPolicy({\n          credential: credentials,\n          scopes:\n            optionsWithDefaults.credentialScopes ??\n            `${optionsWithDefaults.endpoint}/.default`,\n          challengeCallbacks: {\n            authorizeRequestOnChallenge:\n              coreClient.authorizeRequestOnClaimChallenge\n          }\n        })\n      );\n    }\n    // Parameter assignments\n    this.subscriptionId = subscriptionId;\n\n    // Assigning values to Constant parameters\n    this.$host = options.$host || \"https://management.azure.com\";\n    this.apiVersion = options.apiVersion || \"2021-06-01\";\n    this.operations = new OperationsImpl(this);\n    this.availableSkus = new AvailableSkusImpl(this);\n    this.devices = new DevicesImpl(this);\n    this.alerts = new AlertsImpl(this);\n    this.bandwidthSchedules = new BandwidthSchedulesImpl(this);\n    this.diagnosticSettings = new DiagnosticSettingsImpl(this);\n    this.jobs = new JobsImpl(this);\n    this.nodes = new NodesImpl(this);\n    this.operationsStatus = new OperationsStatusImpl(this);\n    this.orders = new OrdersImpl(this);\n    this.roles = new RolesImpl(this);\n    this.addons = new AddonsImpl(this);\n    this.monitoringConfig = new MonitoringConfigImpl(this);\n    this.shares = new SharesImpl(this);\n    this.storageAccountCredentials = new StorageAccountCredentialsImpl(this);\n    this.storageAccounts = new StorageAccountsImpl(this);\n    this.containers = new ContainersImpl(this);\n    this.triggers = new TriggersImpl(this);\n    this.supportPackages = new SupportPackagesImpl(this);\n    this.users = new UsersImpl(this);\n    this.addCustomApiVersionPolicy(options.apiVersion);\n  }\n\n  /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */\n  private addCustomApiVersionPolicy(apiVersion?: string) {\n    if (!apiVersion) {\n      return;\n    }\n    const apiVersionPolicy = {\n      name: \"CustomApiVersionPolicy\",\n      async sendRequest(\n        request: PipelineRequest,\n        next: SendRequest\n      ): Promise<PipelineResponse> {\n        const param = request.url.split(\"?\");\n        if (param.length > 1) {\n          const newParams = param[1].split(\"&\").map((item) => {\n            if (item.indexOf(\"api-version\") > -1) {\n              return \"api-version=\" + apiVersion;\n            } else {\n              return item;\n            }\n          });\n          request.url = param[0] + \"?\" + newParams.join(\"&\");\n        }\n        return next(request);\n      }\n    };\n    this.pipeline.addPolicy(apiVersionPolicy);\n  }\n\n  operations: Operations;\n  availableSkus: AvailableSkus;\n  devices: Devices;\n  alerts: Alerts;\n  bandwidthSchedules: BandwidthSchedules;\n  diagnosticSettings: DiagnosticSettings;\n  jobs: Jobs;\n  nodes: Nodes;\n  operationsStatus: OperationsStatus;\n  orders: Orders;\n  roles: Roles;\n  addons: Addons;\n  monitoringConfig: MonitoringConfig;\n  shares: Shares;\n  storageAccountCredentials: StorageAccountCredentials;\n  storageAccounts: StorageAccounts;\n  containers: Containers;\n  triggers: Triggers;\n  supportPackages: SupportPackages;\n  users: Users;\n}\n"],"names":["KnownMetricUnit","KnownMetricAggregationType","KnownMetricCategory","KnownTimeGrain","KnownSkuName","KnownSkuTier","KnownSkuSignupOption","KnownSkuVersion","KnownSkuAvailability","KnownShipmentType","KnownMsiIdentityType","KnownDataBoxEdgeDeviceKind","KnownCreatedByType","KnownDataBoxEdgeDeviceStatus","KnownDeviceType","KnownRoleTypes","KnownResourceMoveStatus","KnownSubscriptionState","KnownDataResidencyType","KnownAlertSeverity","KnownDayOfWeek","KnownProactiveDiagnosticsConsent","KnownRemoteApplicationType","KnownAccessLevel","KnownKeyVaultSyncStatus","KnownEncryptionAlgorithm","KnownJobStatus","KnownJobType","KnownUpdateOperationStage","KnownDownloadPhase","KnownNetworkGroup","KnownNetworkAdapterStatus","KnownNetworkAdapterRdmaStatus","KnownNetworkAdapterDhcpStatus","KnownNodeStatus","KnownOrderState","KnownAddonType","KnownShareStatus","KnownMonitoringStatus","KnownAzureContainerDataFormat","KnownShareAccessProtocol","KnownShareAccessType","KnownClientPermissionType","KnownMountType","KnownDataPolicy","KnownSSLStatus","KnownAccountType","KnownStorageAccountStatus","KnownContainerStatus","KnownTriggerEventType","KnownInstallRebootBehavior","KnownUpdateOperation","KnownUpdateType","KnownInstallationImpact","KnownUpdateStatus","KnownAuthenticationType","KnownUserType","KnownPlatformType","KnownHostPlatformType","KnownAddonState","KnownRoleStatus","KnownKubernetesNodeType","KnownKubernetesState","KnownPosixComplianceStatus","DataBoxEdgeDeviceMapper","DataBoxEdgeDevicePatchMapper","SecuritySettingsMapper","DataBoxEdgeDeviceExtendedInfoPatchMapper","UploadCertificateRequestMapper","BandwidthScheduleMapper","DiagnosticProactiveLogCollectionSettingsMapper","DiagnosticRemoteSupportSettingsMapper","OrderMapper","RoleMapper","AddonMapper","MonitoringMetricConfigurationMapper","ShareMapper","StorageAccountCredentialMapper","StorageAccountMapper","ContainerMapper","TriggerMapper","TriggerSupportPackageRequestMapper","UserMapper","__await","__asyncValues","__asyncDelegator","listOperationSpec","listNextOperationSpec","serializer","coreClient","Mappers.OperationsList","Mappers.CloudError","Parameters.apiVersion","Parameters.$host","Parameters.accept","Parameters.nextLink","Mappers.DataBoxEdgeSkuList","Parameters.subscriptionId","__rest","getOperationSpec","createOrUpdateOperationSpec","__awaiter","deleteOperationSpec","LroEngine","Mappers.DataBoxEdgeDeviceList","Parameters.expand","Parameters.resourceGroupName","Mappers.DataBoxEdgeDevice","Parameters.deviceName","Parameters.dataBoxEdgeDevice","Parameters.contentType","Parameters.parameters","Mappers.GenerateCertResponse","Mappers.DataBoxEdgeDeviceExtendedInfo","Mappers.NetworkSettings","Parameters.securitySettings","Parameters.parameters1","Mappers.UpdateSummary","Mappers.UploadCertificateResponse","Parameters.parameters2","listByDataBoxEdgeDeviceOperationSpec","listByDataBoxEdgeDeviceNextOperationSpec","Mappers.AlertList","Mappers.Alert","Parameters.name","Mappers.BandwidthSchedulesList","Mappers.BandwidthSchedule","Parameters.parameters3","Mappers.DiagnosticProactiveLogCollectionSettings","Parameters.proactiveLogCollectionSettings","Mappers.DiagnosticRemoteSupportSettings","Parameters.diagnosticRemoteSupportSettings","Mappers.Job","Mappers.NodeList","Mappers.OrderList","Mappers.Order","Parameters.order","Mappers.DCAccessCode","Mappers.RoleList","Mappers.Role","Parameters.role","Mappers.AddonList","Parameters.roleName","Mappers.Addon","Parameters.addonName","Parameters.addon","Mappers.MonitoringMetricConfigurationList","Mappers.MonitoringMetricConfiguration","Parameters.monitoringMetricConfiguration","refreshOperationSpec","Mappers.ShareList","Mappers.Share","Parameters.share","Mappers.StorageAccountCredentialList","Mappers.StorageAccountCredential","Parameters.storageAccountCredential","Mappers.StorageAccountList","Mappers.StorageAccount","Parameters.storageAccountName","Parameters.storageAccount","Mappers.ContainerList","Mappers.Container","Parameters.containerName","Parameters.container","Mappers.TriggerList","Parameters.filter","Mappers.Trigger","Parameters.trigger","Parameters.triggerSupportPackageRequest","Mappers.UserList","Mappers.User","Parameters.user","coreRestPipeline"],"mappings":"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"}