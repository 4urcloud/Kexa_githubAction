/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
/** Known values of {@link MetricUnit} that the service accepts. */
export var KnownMetricUnit;
(function (KnownMetricUnit) {
    /** NotSpecified */
    KnownMetricUnit["NotSpecified"] = "NotSpecified";
    /** Percent */
    KnownMetricUnit["Percent"] = "Percent";
    /** Count */
    KnownMetricUnit["Count"] = "Count";
    /** Seconds */
    KnownMetricUnit["Seconds"] = "Seconds";
    /** Milliseconds */
    KnownMetricUnit["Milliseconds"] = "Milliseconds";
    /** Bytes */
    KnownMetricUnit["Bytes"] = "Bytes";
    /** BytesPerSecond */
    KnownMetricUnit["BytesPerSecond"] = "BytesPerSecond";
    /** CountPerSecond */
    KnownMetricUnit["CountPerSecond"] = "CountPerSecond";
})(KnownMetricUnit || (KnownMetricUnit = {}));
/** Known values of {@link MetricAggregationType} that the service accepts. */
export var KnownMetricAggregationType;
(function (KnownMetricAggregationType) {
    /** NotSpecified */
    KnownMetricAggregationType["NotSpecified"] = "NotSpecified";
    /** None */
    KnownMetricAggregationType["None"] = "None";
    /** Average */
    KnownMetricAggregationType["Average"] = "Average";
    /** Minimum */
    KnownMetricAggregationType["Minimum"] = "Minimum";
    /** Maximum */
    KnownMetricAggregationType["Maximum"] = "Maximum";
    /** Total */
    KnownMetricAggregationType["Total"] = "Total";
    /** Count */
    KnownMetricAggregationType["Count"] = "Count";
})(KnownMetricAggregationType || (KnownMetricAggregationType = {}));
/** Known values of {@link MetricCategory} that the service accepts. */
export var KnownMetricCategory;
(function (KnownMetricCategory) {
    /** Capacity */
    KnownMetricCategory["Capacity"] = "Capacity";
    /** Transaction */
    KnownMetricCategory["Transaction"] = "Transaction";
})(KnownMetricCategory || (KnownMetricCategory = {}));
/** Known values of {@link TimeGrain} that the service accepts. */
export var KnownTimeGrain;
(function (KnownTimeGrain) {
    /** PT1M */
    KnownTimeGrain["PT1M"] = "PT1M";
    /** PT5M */
    KnownTimeGrain["PT5M"] = "PT5M";
    /** PT15M */
    KnownTimeGrain["PT15M"] = "PT15M";
    /** PT30M */
    KnownTimeGrain["PT30M"] = "PT30M";
    /** PT1H */
    KnownTimeGrain["PT1H"] = "PT1H";
    /** PT6H */
    KnownTimeGrain["PT6H"] = "PT6H";
    /** PT12H */
    KnownTimeGrain["PT12H"] = "PT12H";
    /** PT1D */
    KnownTimeGrain["PT1D"] = "PT1D";
})(KnownTimeGrain || (KnownTimeGrain = {}));
/** Known values of {@link SkuName} that the service accepts. */
export var KnownSkuName;
(function (KnownSkuName) {
    /** Gateway */
    KnownSkuName["Gateway"] = "Gateway";
    /** Edge */
    KnownSkuName["Edge"] = "Edge";
    /** TEA1Node */
    KnownSkuName["TEA1Node"] = "TEA_1Node";
    /** TEA1NodeUPS */
    KnownSkuName["TEA1NodeUPS"] = "TEA_1Node_UPS";
    /** TEA1NodeHeater */
    KnownSkuName["TEA1NodeHeater"] = "TEA_1Node_Heater";
    /** TEA1NodeUPSHeater */
    KnownSkuName["TEA1NodeUPSHeater"] = "TEA_1Node_UPS_Heater";
    /** TEA4NodeHeater */
    KnownSkuName["TEA4NodeHeater"] = "TEA_4Node_Heater";
    /** TEA4NodeUPSHeater */
    KnownSkuName["TEA4NodeUPSHeater"] = "TEA_4Node_UPS_Heater";
    /** TMA */
    KnownSkuName["TMA"] = "TMA";
    /** TDC */
    KnownSkuName["TDC"] = "TDC";
    /** TCASmall */
    KnownSkuName["TCASmall"] = "TCA_Small";
    /** GPU */
    KnownSkuName["GPU"] = "GPU";
    /** TCALarge */
    KnownSkuName["TCALarge"] = "TCA_Large";
    /** EdgePBase */
    KnownSkuName["EdgePBase"] = "EdgeP_Base";
    /** EdgePHigh */
    KnownSkuName["EdgePHigh"] = "EdgeP_High";
    /** EdgePRBase */
    KnownSkuName["EdgePRBase"] = "EdgePR_Base";
    /** EdgePRBaseUPS */
    KnownSkuName["EdgePRBaseUPS"] = "EdgePR_Base_UPS";
    /** EP2641VPUW */
    KnownSkuName["EP2641VPUW"] = "EP2_64_1VPU_W";
    /** EP21281T4Mx1W */
    KnownSkuName["EP21281T4Mx1W"] = "EP2_128_1T4_Mx1_W";
    /** EP22562T4W */
    KnownSkuName["EP22562T4W"] = "EP2_256_2T4_W";
    /** EdgeMRMini */
    KnownSkuName["EdgeMRMini"] = "EdgeMR_Mini";
    /** RCASmall */
    KnownSkuName["RCASmall"] = "RCA_Small";
    /** RCALarge */
    KnownSkuName["RCALarge"] = "RCA_Large";
    /** RDC */
    KnownSkuName["RDC"] = "RDC";
    /** Management */
    KnownSkuName["Management"] = "Management";
})(KnownSkuName || (KnownSkuName = {}));
/** Known values of {@link SkuTier} that the service accepts. */
export var KnownSkuTier;
(function (KnownSkuTier) {
    /** Standard */
    KnownSkuTier["Standard"] = "Standard";
})(KnownSkuTier || (KnownSkuTier = {}));
/** Known values of {@link SkuSignupOption} that the service accepts. */
export var KnownSkuSignupOption;
(function (KnownSkuSignupOption) {
    /** None */
    KnownSkuSignupOption["None"] = "None";
    /** Available */
    KnownSkuSignupOption["Available"] = "Available";
})(KnownSkuSignupOption || (KnownSkuSignupOption = {}));
/** Known values of {@link SkuVersion} that the service accepts. */
export var KnownSkuVersion;
(function (KnownSkuVersion) {
    /** Stable */
    KnownSkuVersion["Stable"] = "Stable";
    /** Preview */
    KnownSkuVersion["Preview"] = "Preview";
})(KnownSkuVersion || (KnownSkuVersion = {}));
/** Known values of {@link SkuAvailability} that the service accepts. */
export var KnownSkuAvailability;
(function (KnownSkuAvailability) {
    /** Available */
    KnownSkuAvailability["Available"] = "Available";
    /** Unavailable */
    KnownSkuAvailability["Unavailable"] = "Unavailable";
})(KnownSkuAvailability || (KnownSkuAvailability = {}));
/** Known values of {@link ShipmentType} that the service accepts. */
export var KnownShipmentType;
(function (KnownShipmentType) {
    /** NotApplicable */
    KnownShipmentType["NotApplicable"] = "NotApplicable";
    /** ShippedToCustomer */
    KnownShipmentType["ShippedToCustomer"] = "ShippedToCustomer";
    /** SelfPickup */
    KnownShipmentType["SelfPickup"] = "SelfPickup";
})(KnownShipmentType || (KnownShipmentType = {}));
/** Known values of {@link MsiIdentityType} that the service accepts. */
export var KnownMsiIdentityType;
(function (KnownMsiIdentityType) {
    /** None */
    KnownMsiIdentityType["None"] = "None";
    /** SystemAssigned */
    KnownMsiIdentityType["SystemAssigned"] = "SystemAssigned";
    /** UserAssigned */
    KnownMsiIdentityType["UserAssigned"] = "UserAssigned";
})(KnownMsiIdentityType || (KnownMsiIdentityType = {}));
/** Known values of {@link DataBoxEdgeDeviceKind} that the service accepts. */
export var KnownDataBoxEdgeDeviceKind;
(function (KnownDataBoxEdgeDeviceKind) {
    /** AzureDataBoxGateway */
    KnownDataBoxEdgeDeviceKind["AzureDataBoxGateway"] = "AzureDataBoxGateway";
    /** AzureStackEdge */
    KnownDataBoxEdgeDeviceKind["AzureStackEdge"] = "AzureStackEdge";
    /** AzureStackHub */
    KnownDataBoxEdgeDeviceKind["AzureStackHub"] = "AzureStackHub";
    /** AzureModularDataCentre */
    KnownDataBoxEdgeDeviceKind["AzureModularDataCentre"] = "AzureModularDataCentre";
})(KnownDataBoxEdgeDeviceKind || (KnownDataBoxEdgeDeviceKind = {}));
/** Known values of {@link CreatedByType} that the service accepts. */
export var KnownCreatedByType;
(function (KnownCreatedByType) {
    /** User */
    KnownCreatedByType["User"] = "User";
    /** Application */
    KnownCreatedByType["Application"] = "Application";
    /** ManagedIdentity */
    KnownCreatedByType["ManagedIdentity"] = "ManagedIdentity";
    /** Key */
    KnownCreatedByType["Key"] = "Key";
})(KnownCreatedByType || (KnownCreatedByType = {}));
/** Known values of {@link DataBoxEdgeDeviceStatus} that the service accepts. */
export var KnownDataBoxEdgeDeviceStatus;
(function (KnownDataBoxEdgeDeviceStatus) {
    /** ReadyToSetup */
    KnownDataBoxEdgeDeviceStatus["ReadyToSetup"] = "ReadyToSetup";
    /** Online */
    KnownDataBoxEdgeDeviceStatus["Online"] = "Online";
    /** Offline */
    KnownDataBoxEdgeDeviceStatus["Offline"] = "Offline";
    /** NeedsAttention */
    KnownDataBoxEdgeDeviceStatus["NeedsAttention"] = "NeedsAttention";
    /** Disconnected */
    KnownDataBoxEdgeDeviceStatus["Disconnected"] = "Disconnected";
    /** PartiallyDisconnected */
    KnownDataBoxEdgeDeviceStatus["PartiallyDisconnected"] = "PartiallyDisconnected";
    /** Maintenance */
    KnownDataBoxEdgeDeviceStatus["Maintenance"] = "Maintenance";
})(KnownDataBoxEdgeDeviceStatus || (KnownDataBoxEdgeDeviceStatus = {}));
/** Known values of {@link DeviceType} that the service accepts. */
export var KnownDeviceType;
(function (KnownDeviceType) {
    /** DataBoxEdgeDevice */
    KnownDeviceType["DataBoxEdgeDevice"] = "DataBoxEdgeDevice";
})(KnownDeviceType || (KnownDeviceType = {}));
/** Known values of {@link RoleTypes} that the service accepts. */
export var KnownRoleTypes;
(function (KnownRoleTypes) {
    /** IOT */
    KnownRoleTypes["IOT"] = "IOT";
    /** ASA */
    KnownRoleTypes["ASA"] = "ASA";
    /** Functions */
    KnownRoleTypes["Functions"] = "Functions";
    /** Cognitive */
    KnownRoleTypes["Cognitive"] = "Cognitive";
    /** MEC */
    KnownRoleTypes["MEC"] = "MEC";
    /** CloudEdgeManagement */
    KnownRoleTypes["CloudEdgeManagement"] = "CloudEdgeManagement";
    /** Kubernetes */
    KnownRoleTypes["Kubernetes"] = "Kubernetes";
})(KnownRoleTypes || (KnownRoleTypes = {}));
/** Known values of {@link ResourceMoveStatus} that the service accepts. */
export var KnownResourceMoveStatus;
(function (KnownResourceMoveStatus) {
    /** None */
    KnownResourceMoveStatus["None"] = "None";
    /** ResourceMoveInProgress */
    KnownResourceMoveStatus["ResourceMoveInProgress"] = "ResourceMoveInProgress";
    /** ResourceMoveFailed */
    KnownResourceMoveStatus["ResourceMoveFailed"] = "ResourceMoveFailed";
})(KnownResourceMoveStatus || (KnownResourceMoveStatus = {}));
/** Known values of {@link SubscriptionState} that the service accepts. */
export var KnownSubscriptionState;
(function (KnownSubscriptionState) {
    /** Registered */
    KnownSubscriptionState["Registered"] = "Registered";
    /** Warned */
    KnownSubscriptionState["Warned"] = "Warned";
    /** Suspended */
    KnownSubscriptionState["Suspended"] = "Suspended";
    /** Deleted */
    KnownSubscriptionState["Deleted"] = "Deleted";
    /** Unregistered */
    KnownSubscriptionState["Unregistered"] = "Unregistered";
})(KnownSubscriptionState || (KnownSubscriptionState = {}));
/** Known values of {@link DataResidencyType} that the service accepts. */
export var KnownDataResidencyType;
(function (KnownDataResidencyType) {
    /** GeoZoneReplication */
    KnownDataResidencyType["GeoZoneReplication"] = "GeoZoneReplication";
    /** ZoneReplication */
    KnownDataResidencyType["ZoneReplication"] = "ZoneReplication";
})(KnownDataResidencyType || (KnownDataResidencyType = {}));
/** Known values of {@link AlertSeverity} that the service accepts. */
export var KnownAlertSeverity;
(function (KnownAlertSeverity) {
    /** Informational */
    KnownAlertSeverity["Informational"] = "Informational";
    /** Warning */
    KnownAlertSeverity["Warning"] = "Warning";
    /** Critical */
    KnownAlertSeverity["Critical"] = "Critical";
})(KnownAlertSeverity || (KnownAlertSeverity = {}));
/** Known values of {@link DayOfWeek} that the service accepts. */
export var KnownDayOfWeek;
(function (KnownDayOfWeek) {
    /** Sunday */
    KnownDayOfWeek["Sunday"] = "Sunday";
    /** Monday */
    KnownDayOfWeek["Monday"] = "Monday";
    /** Tuesday */
    KnownDayOfWeek["Tuesday"] = "Tuesday";
    /** Wednesday */
    KnownDayOfWeek["Wednesday"] = "Wednesday";
    /** Thursday */
    KnownDayOfWeek["Thursday"] = "Thursday";
    /** Friday */
    KnownDayOfWeek["Friday"] = "Friday";
    /** Saturday */
    KnownDayOfWeek["Saturday"] = "Saturday";
})(KnownDayOfWeek || (KnownDayOfWeek = {}));
/** Known values of {@link ProactiveDiagnosticsConsent} that the service accepts. */
export var KnownProactiveDiagnosticsConsent;
(function (KnownProactiveDiagnosticsConsent) {
    /** Enabled */
    KnownProactiveDiagnosticsConsent["Enabled"] = "Enabled";
    /** Disabled */
    KnownProactiveDiagnosticsConsent["Disabled"] = "Disabled";
})(KnownProactiveDiagnosticsConsent || (KnownProactiveDiagnosticsConsent = {}));
/** Known values of {@link RemoteApplicationType} that the service accepts. */
export var KnownRemoteApplicationType;
(function (KnownRemoteApplicationType) {
    /** Powershell */
    KnownRemoteApplicationType["Powershell"] = "Powershell";
    /** WAC */
    KnownRemoteApplicationType["WAC"] = "WAC";
    /** LocalUI */
    KnownRemoteApplicationType["LocalUI"] = "LocalUI";
    /** AllApplications */
    KnownRemoteApplicationType["AllApplications"] = "AllApplications";
})(KnownRemoteApplicationType || (KnownRemoteApplicationType = {}));
/** Known values of {@link AccessLevel} that the service accepts. */
export var KnownAccessLevel;
(function (KnownAccessLevel) {
    /** None */
    KnownAccessLevel["None"] = "None";
    /** ReadOnly */
    KnownAccessLevel["ReadOnly"] = "ReadOnly";
    /** ReadWrite */
    KnownAccessLevel["ReadWrite"] = "ReadWrite";
    /** FullAccess */
    KnownAccessLevel["FullAccess"] = "FullAccess";
})(KnownAccessLevel || (KnownAccessLevel = {}));
/** Known values of {@link KeyVaultSyncStatus} that the service accepts. */
export var KnownKeyVaultSyncStatus;
(function (KnownKeyVaultSyncStatus) {
    /** KeyVaultSynced */
    KnownKeyVaultSyncStatus["KeyVaultSynced"] = "KeyVaultSynced";
    /** KeyVaultSyncFailed */
    KnownKeyVaultSyncStatus["KeyVaultSyncFailed"] = "KeyVaultSyncFailed";
    /** KeyVaultNotConfigured */
    KnownKeyVaultSyncStatus["KeyVaultNotConfigured"] = "KeyVaultNotConfigured";
    /** KeyVaultSyncPending */
    KnownKeyVaultSyncStatus["KeyVaultSyncPending"] = "KeyVaultSyncPending";
    /** KeyVaultSyncing */
    KnownKeyVaultSyncStatus["KeyVaultSyncing"] = "KeyVaultSyncing";
    /** KeyVaultNotSynced */
    KnownKeyVaultSyncStatus["KeyVaultNotSynced"] = "KeyVaultNotSynced";
})(KnownKeyVaultSyncStatus || (KnownKeyVaultSyncStatus = {}));
/** Known values of {@link EncryptionAlgorithm} that the service accepts. */
export var KnownEncryptionAlgorithm;
(function (KnownEncryptionAlgorithm) {
    /** None */
    KnownEncryptionAlgorithm["None"] = "None";
    /** AES256 */
    KnownEncryptionAlgorithm["AES256"] = "AES256";
    /** RsaesPkcs1V15 */
    KnownEncryptionAlgorithm["RsaesPkcs1V15"] = "RSAES_PKCS1_v_1_5";
})(KnownEncryptionAlgorithm || (KnownEncryptionAlgorithm = {}));
/** Known values of {@link JobStatus} that the service accepts. */
export var KnownJobStatus;
(function (KnownJobStatus) {
    /** Invalid */
    KnownJobStatus["Invalid"] = "Invalid";
    /** Running */
    KnownJobStatus["Running"] = "Running";
    /** Succeeded */
    KnownJobStatus["Succeeded"] = "Succeeded";
    /** Failed */
    KnownJobStatus["Failed"] = "Failed";
    /** Canceled */
    KnownJobStatus["Canceled"] = "Canceled";
    /** Paused */
    KnownJobStatus["Paused"] = "Paused";
    /** Scheduled */
    KnownJobStatus["Scheduled"] = "Scheduled";
})(KnownJobStatus || (KnownJobStatus = {}));
/** Known values of {@link JobType} that the service accepts. */
export var KnownJobType;
(function (KnownJobType) {
    /** Invalid */
    KnownJobType["Invalid"] = "Invalid";
    /** ScanForUpdates */
    KnownJobType["ScanForUpdates"] = "ScanForUpdates";
    /** DownloadUpdates */
    KnownJobType["DownloadUpdates"] = "DownloadUpdates";
    /** InstallUpdates */
    KnownJobType["InstallUpdates"] = "InstallUpdates";
    /** RefreshShare */
    KnownJobType["RefreshShare"] = "RefreshShare";
    /** RefreshContainer */
    KnownJobType["RefreshContainer"] = "RefreshContainer";
    /** Backup */
    KnownJobType["Backup"] = "Backup";
    /** Restore */
    KnownJobType["Restore"] = "Restore";
    /** TriggerSupportPackage */
    KnownJobType["TriggerSupportPackage"] = "TriggerSupportPackage";
})(KnownJobType || (KnownJobType = {}));
/** Known values of {@link UpdateOperationStage} that the service accepts. */
export var KnownUpdateOperationStage;
(function (KnownUpdateOperationStage) {
    /** Unknown */
    KnownUpdateOperationStage["Unknown"] = "Unknown";
    /** Initial */
    KnownUpdateOperationStage["Initial"] = "Initial";
    /** ScanStarted */
    KnownUpdateOperationStage["ScanStarted"] = "ScanStarted";
    /** ScanComplete */
    KnownUpdateOperationStage["ScanComplete"] = "ScanComplete";
    /** ScanFailed */
    KnownUpdateOperationStage["ScanFailed"] = "ScanFailed";
    /** DownloadStarted */
    KnownUpdateOperationStage["DownloadStarted"] = "DownloadStarted";
    /** DownloadComplete */
    KnownUpdateOperationStage["DownloadComplete"] = "DownloadComplete";
    /** DownloadFailed */
    KnownUpdateOperationStage["DownloadFailed"] = "DownloadFailed";
    /** InstallStarted */
    KnownUpdateOperationStage["InstallStarted"] = "InstallStarted";
    /** InstallComplete */
    KnownUpdateOperationStage["InstallComplete"] = "InstallComplete";
    /** InstallFailed */
    KnownUpdateOperationStage["InstallFailed"] = "InstallFailed";
    /** RebootInitiated */
    KnownUpdateOperationStage["RebootInitiated"] = "RebootInitiated";
    /** Success */
    KnownUpdateOperationStage["Success"] = "Success";
    /** Failure */
    KnownUpdateOperationStage["Failure"] = "Failure";
    /** RescanStarted */
    KnownUpdateOperationStage["RescanStarted"] = "RescanStarted";
    /** RescanComplete */
    KnownUpdateOperationStage["RescanComplete"] = "RescanComplete";
    /** RescanFailed */
    KnownUpdateOperationStage["RescanFailed"] = "RescanFailed";
})(KnownUpdateOperationStage || (KnownUpdateOperationStage = {}));
/** Known values of {@link DownloadPhase} that the service accepts. */
export var KnownDownloadPhase;
(function (KnownDownloadPhase) {
    /** Unknown */
    KnownDownloadPhase["Unknown"] = "Unknown";
    /** Initializing */
    KnownDownloadPhase["Initializing"] = "Initializing";
    /** Downloading */
    KnownDownloadPhase["Downloading"] = "Downloading";
    /** Verifying */
    KnownDownloadPhase["Verifying"] = "Verifying";
})(KnownDownloadPhase || (KnownDownloadPhase = {}));
/** Known values of {@link NetworkGroup} that the service accepts. */
export var KnownNetworkGroup;
(function (KnownNetworkGroup) {
    /** None */
    KnownNetworkGroup["None"] = "None";
    /** NonRdma */
    KnownNetworkGroup["NonRdma"] = "NonRDMA";
    /** Rdma */
    KnownNetworkGroup["Rdma"] = "RDMA";
})(KnownNetworkGroup || (KnownNetworkGroup = {}));
/** Known values of {@link NetworkAdapterStatus} that the service accepts. */
export var KnownNetworkAdapterStatus;
(function (KnownNetworkAdapterStatus) {
    /** Inactive */
    KnownNetworkAdapterStatus["Inactive"] = "Inactive";
    /** Active */
    KnownNetworkAdapterStatus["Active"] = "Active";
})(KnownNetworkAdapterStatus || (KnownNetworkAdapterStatus = {}));
/** Known values of {@link NetworkAdapterRdmaStatus} that the service accepts. */
export var KnownNetworkAdapterRdmaStatus;
(function (KnownNetworkAdapterRdmaStatus) {
    /** Incapable */
    KnownNetworkAdapterRdmaStatus["Incapable"] = "Incapable";
    /** Capable */
    KnownNetworkAdapterRdmaStatus["Capable"] = "Capable";
})(KnownNetworkAdapterRdmaStatus || (KnownNetworkAdapterRdmaStatus = {}));
/** Known values of {@link NetworkAdapterDhcpStatus} that the service accepts. */
export var KnownNetworkAdapterDhcpStatus;
(function (KnownNetworkAdapterDhcpStatus) {
    /** Disabled */
    KnownNetworkAdapterDhcpStatus["Disabled"] = "Disabled";
    /** Enabled */
    KnownNetworkAdapterDhcpStatus["Enabled"] = "Enabled";
})(KnownNetworkAdapterDhcpStatus || (KnownNetworkAdapterDhcpStatus = {}));
/** Known values of {@link NodeStatus} that the service accepts. */
export var KnownNodeStatus;
(function (KnownNodeStatus) {
    /** Unknown */
    KnownNodeStatus["Unknown"] = "Unknown";
    /** Up */
    KnownNodeStatus["Up"] = "Up";
    /** Down */
    KnownNodeStatus["Down"] = "Down";
    /** Rebooting */
    KnownNodeStatus["Rebooting"] = "Rebooting";
    /** ShuttingDown */
    KnownNodeStatus["ShuttingDown"] = "ShuttingDown";
})(KnownNodeStatus || (KnownNodeStatus = {}));
/** Known values of {@link OrderState} that the service accepts. */
export var KnownOrderState;
(function (KnownOrderState) {
    /** Untracked */
    KnownOrderState["Untracked"] = "Untracked";
    /** AwaitingFulfillment */
    KnownOrderState["AwaitingFulfillment"] = "AwaitingFulfillment";
    /** AwaitingPreparation */
    KnownOrderState["AwaitingPreparation"] = "AwaitingPreparation";
    /** AwaitingShipment */
    KnownOrderState["AwaitingShipment"] = "AwaitingShipment";
    /** Shipped */
    KnownOrderState["Shipped"] = "Shipped";
    /** Arriving */
    KnownOrderState["Arriving"] = "Arriving";
    /** Delivered */
    KnownOrderState["Delivered"] = "Delivered";
    /** ReplacementRequested */
    KnownOrderState["ReplacementRequested"] = "ReplacementRequested";
    /** LostDevice */
    KnownOrderState["LostDevice"] = "LostDevice";
    /** Declined */
    KnownOrderState["Declined"] = "Declined";
    /** ReturnInitiated */
    KnownOrderState["ReturnInitiated"] = "ReturnInitiated";
    /** AwaitingReturnShipment */
    KnownOrderState["AwaitingReturnShipment"] = "AwaitingReturnShipment";
    /** ShippedBack */
    KnownOrderState["ShippedBack"] = "ShippedBack";
    /** CollectedAtMicrosoft */
    KnownOrderState["CollectedAtMicrosoft"] = "CollectedAtMicrosoft";
    /** AwaitingPickup */
    KnownOrderState["AwaitingPickup"] = "AwaitingPickup";
    /** PickupCompleted */
    KnownOrderState["PickupCompleted"] = "PickupCompleted";
    /** AwaitingDrop */
    KnownOrderState["AwaitingDrop"] = "AwaitingDrop";
})(KnownOrderState || (KnownOrderState = {}));
/** Known values of {@link AddonType} that the service accepts. */
export var KnownAddonType;
(function (KnownAddonType) {
    /** IotEdge */
    KnownAddonType["IotEdge"] = "IotEdge";
    /** ArcForKubernetes */
    KnownAddonType["ArcForKubernetes"] = "ArcForKubernetes";
})(KnownAddonType || (KnownAddonType = {}));
/** Known values of {@link ShareStatus} that the service accepts. */
export var KnownShareStatus;
(function (KnownShareStatus) {
    /** Offline */
    KnownShareStatus["Offline"] = "Offline";
    /** Unknown */
    KnownShareStatus["Unknown"] = "Unknown";
    /** OK */
    KnownShareStatus["OK"] = "OK";
    /** Updating */
    KnownShareStatus["Updating"] = "Updating";
    /** NeedsAttention */
    KnownShareStatus["NeedsAttention"] = "NeedsAttention";
})(KnownShareStatus || (KnownShareStatus = {}));
/** Known values of {@link MonitoringStatus} that the service accepts. */
export var KnownMonitoringStatus;
(function (KnownMonitoringStatus) {
    /** Enabled */
    KnownMonitoringStatus["Enabled"] = "Enabled";
    /** Disabled */
    KnownMonitoringStatus["Disabled"] = "Disabled";
})(KnownMonitoringStatus || (KnownMonitoringStatus = {}));
/** Known values of {@link AzureContainerDataFormat} that the service accepts. */
export var KnownAzureContainerDataFormat;
(function (KnownAzureContainerDataFormat) {
    /** BlockBlob */
    KnownAzureContainerDataFormat["BlockBlob"] = "BlockBlob";
    /** PageBlob */
    KnownAzureContainerDataFormat["PageBlob"] = "PageBlob";
    /** AzureFile */
    KnownAzureContainerDataFormat["AzureFile"] = "AzureFile";
})(KnownAzureContainerDataFormat || (KnownAzureContainerDataFormat = {}));
/** Known values of {@link ShareAccessProtocol} that the service accepts. */
export var KnownShareAccessProtocol;
(function (KnownShareAccessProtocol) {
    /** SMB */
    KnownShareAccessProtocol["SMB"] = "SMB";
    /** NFS */
    KnownShareAccessProtocol["NFS"] = "NFS";
})(KnownShareAccessProtocol || (KnownShareAccessProtocol = {}));
/** Known values of {@link ShareAccessType} that the service accepts. */
export var KnownShareAccessType;
(function (KnownShareAccessType) {
    /** Change */
    KnownShareAccessType["Change"] = "Change";
    /** Read */
    KnownShareAccessType["Read"] = "Read";
    /** Custom */
    KnownShareAccessType["Custom"] = "Custom";
})(KnownShareAccessType || (KnownShareAccessType = {}));
/** Known values of {@link ClientPermissionType} that the service accepts. */
export var KnownClientPermissionType;
(function (KnownClientPermissionType) {
    /** NoAccess */
    KnownClientPermissionType["NoAccess"] = "NoAccess";
    /** ReadOnly */
    KnownClientPermissionType["ReadOnly"] = "ReadOnly";
    /** ReadWrite */
    KnownClientPermissionType["ReadWrite"] = "ReadWrite";
})(KnownClientPermissionType || (KnownClientPermissionType = {}));
/** Known values of {@link MountType} that the service accepts. */
export var KnownMountType;
(function (KnownMountType) {
    /** Volume */
    KnownMountType["Volume"] = "Volume";
    /** HostPath */
    KnownMountType["HostPath"] = "HostPath";
})(KnownMountType || (KnownMountType = {}));
/** Known values of {@link DataPolicy} that the service accepts. */
export var KnownDataPolicy;
(function (KnownDataPolicy) {
    /** Cloud */
    KnownDataPolicy["Cloud"] = "Cloud";
    /** Local */
    KnownDataPolicy["Local"] = "Local";
})(KnownDataPolicy || (KnownDataPolicy = {}));
/** Known values of {@link SSLStatus} that the service accepts. */
export var KnownSSLStatus;
(function (KnownSSLStatus) {
    /** Enabled */
    KnownSSLStatus["Enabled"] = "Enabled";
    /** Disabled */
    KnownSSLStatus["Disabled"] = "Disabled";
})(KnownSSLStatus || (KnownSSLStatus = {}));
/** Known values of {@link AccountType} that the service accepts. */
export var KnownAccountType;
(function (KnownAccountType) {
    /** GeneralPurposeStorage */
    KnownAccountType["GeneralPurposeStorage"] = "GeneralPurposeStorage";
    /** BlobStorage */
    KnownAccountType["BlobStorage"] = "BlobStorage";
})(KnownAccountType || (KnownAccountType = {}));
/** Known values of {@link StorageAccountStatus} that the service accepts. */
export var KnownStorageAccountStatus;
(function (KnownStorageAccountStatus) {
    /** OK */
    KnownStorageAccountStatus["OK"] = "OK";
    /** Offline */
    KnownStorageAccountStatus["Offline"] = "Offline";
    /** Unknown */
    KnownStorageAccountStatus["Unknown"] = "Unknown";
    /** Updating */
    KnownStorageAccountStatus["Updating"] = "Updating";
    /** NeedsAttention */
    KnownStorageAccountStatus["NeedsAttention"] = "NeedsAttention";
})(KnownStorageAccountStatus || (KnownStorageAccountStatus = {}));
/** Known values of {@link ContainerStatus} that the service accepts. */
export var KnownContainerStatus;
(function (KnownContainerStatus) {
    /** OK */
    KnownContainerStatus["OK"] = "OK";
    /** Offline */
    KnownContainerStatus["Offline"] = "Offline";
    /** Unknown */
    KnownContainerStatus["Unknown"] = "Unknown";
    /** Updating */
    KnownContainerStatus["Updating"] = "Updating";
    /** NeedsAttention */
    KnownContainerStatus["NeedsAttention"] = "NeedsAttention";
})(KnownContainerStatus || (KnownContainerStatus = {}));
/** Known values of {@link TriggerEventType} that the service accepts. */
export var KnownTriggerEventType;
(function (KnownTriggerEventType) {
    /** FileEvent */
    KnownTriggerEventType["FileEvent"] = "FileEvent";
    /** PeriodicTimerEvent */
    KnownTriggerEventType["PeriodicTimerEvent"] = "PeriodicTimerEvent";
})(KnownTriggerEventType || (KnownTriggerEventType = {}));
/** Known values of {@link InstallRebootBehavior} that the service accepts. */
export var KnownInstallRebootBehavior;
(function (KnownInstallRebootBehavior) {
    /** NeverReboots */
    KnownInstallRebootBehavior["NeverReboots"] = "NeverReboots";
    /** RequiresReboot */
    KnownInstallRebootBehavior["RequiresReboot"] = "RequiresReboot";
    /** RequestReboot */
    KnownInstallRebootBehavior["RequestReboot"] = "RequestReboot";
})(KnownInstallRebootBehavior || (KnownInstallRebootBehavior = {}));
/** Known values of {@link UpdateOperation} that the service accepts. */
export var KnownUpdateOperation;
(function (KnownUpdateOperation) {
    /** None */
    KnownUpdateOperation["None"] = "None";
    /** Scan */
    KnownUpdateOperation["Scan"] = "Scan";
    /** Download */
    KnownUpdateOperation["Download"] = "Download";
    /** Install */
    KnownUpdateOperation["Install"] = "Install";
})(KnownUpdateOperation || (KnownUpdateOperation = {}));
/** Known values of {@link UpdateType} that the service accepts. */
export var KnownUpdateType;
(function (KnownUpdateType) {
    /** Software */
    KnownUpdateType["Software"] = "Software";
    /** Kubernetes */
    KnownUpdateType["Kubernetes"] = "Kubernetes";
    /** Firmware */
    KnownUpdateType["Firmware"] = "Firmware";
})(KnownUpdateType || (KnownUpdateType = {}));
/** Known values of {@link InstallationImpact} that the service accepts. */
export var KnownInstallationImpact;
(function (KnownInstallationImpact) {
    /** None */
    KnownInstallationImpact["None"] = "None";
    /** DeviceRebooted */
    KnownInstallationImpact["DeviceRebooted"] = "DeviceRebooted";
    /** KubernetesWorkloadsDown */
    KnownInstallationImpact["KubernetesWorkloadsDown"] = "KubernetesWorkloadsDown";
})(KnownInstallationImpact || (KnownInstallationImpact = {}));
/** Known values of {@link UpdateStatus} that the service accepts. */
export var KnownUpdateStatus;
(function (KnownUpdateStatus) {
    /** DownloadPending */
    KnownUpdateStatus["DownloadPending"] = "DownloadPending";
    /** DownloadStarted */
    KnownUpdateStatus["DownloadStarted"] = "DownloadStarted";
    /** DownloadCompleted */
    KnownUpdateStatus["DownloadCompleted"] = "DownloadCompleted";
    /** InstallStarted */
    KnownUpdateStatus["InstallStarted"] = "InstallStarted";
    /** InstallCompleted */
    KnownUpdateStatus["InstallCompleted"] = "InstallCompleted";
})(KnownUpdateStatus || (KnownUpdateStatus = {}));
/** Known values of {@link AuthenticationType} that the service accepts. */
export var KnownAuthenticationType;
(function (KnownAuthenticationType) {
    /** Invalid */
    KnownAuthenticationType["Invalid"] = "Invalid";
    /** AzureActiveDirectory */
    KnownAuthenticationType["AzureActiveDirectory"] = "AzureActiveDirectory";
})(KnownAuthenticationType || (KnownAuthenticationType = {}));
/** Known values of {@link UserType} that the service accepts. */
export var KnownUserType;
(function (KnownUserType) {
    /** Share */
    KnownUserType["Share"] = "Share";
    /** LocalManagement */
    KnownUserType["LocalManagement"] = "LocalManagement";
    /** ARM */
    KnownUserType["ARM"] = "ARM";
})(KnownUserType || (KnownUserType = {}));
/** Known values of {@link PlatformType} that the service accepts. */
export var KnownPlatformType;
(function (KnownPlatformType) {
    /** Windows */
    KnownPlatformType["Windows"] = "Windows";
    /** Linux */
    KnownPlatformType["Linux"] = "Linux";
})(KnownPlatformType || (KnownPlatformType = {}));
/** Known values of {@link HostPlatformType} that the service accepts. */
export var KnownHostPlatformType;
(function (KnownHostPlatformType) {
    /** KubernetesCluster */
    KnownHostPlatformType["KubernetesCluster"] = "KubernetesCluster";
    /** LinuxVM */
    KnownHostPlatformType["LinuxVM"] = "LinuxVM";
})(KnownHostPlatformType || (KnownHostPlatformType = {}));
/** Known values of {@link AddonState} that the service accepts. */
export var KnownAddonState;
(function (KnownAddonState) {
    /** Invalid */
    KnownAddonState["Invalid"] = "Invalid";
    /** Creating */
    KnownAddonState["Creating"] = "Creating";
    /** Created */
    KnownAddonState["Created"] = "Created";
    /** Updating */
    KnownAddonState["Updating"] = "Updating";
    /** Reconfiguring */
    KnownAddonState["Reconfiguring"] = "Reconfiguring";
    /** Failed */
    KnownAddonState["Failed"] = "Failed";
    /** Deleting */
    KnownAddonState["Deleting"] = "Deleting";
})(KnownAddonState || (KnownAddonState = {}));
/** Known values of {@link RoleStatus} that the service accepts. */
export var KnownRoleStatus;
(function (KnownRoleStatus) {
    /** Enabled */
    KnownRoleStatus["Enabled"] = "Enabled";
    /** Disabled */
    KnownRoleStatus["Disabled"] = "Disabled";
})(KnownRoleStatus || (KnownRoleStatus = {}));
/** Known values of {@link KubernetesNodeType} that the service accepts. */
export var KnownKubernetesNodeType;
(function (KnownKubernetesNodeType) {
    /** Invalid */
    KnownKubernetesNodeType["Invalid"] = "Invalid";
    /** Master */
    KnownKubernetesNodeType["Master"] = "Master";
    /** Worker */
    KnownKubernetesNodeType["Worker"] = "Worker";
})(KnownKubernetesNodeType || (KnownKubernetesNodeType = {}));
/** Known values of {@link KubernetesState} that the service accepts. */
export var KnownKubernetesState;
(function (KnownKubernetesState) {
    /** Invalid */
    KnownKubernetesState["Invalid"] = "Invalid";
    /** Creating */
    KnownKubernetesState["Creating"] = "Creating";
    /** Created */
    KnownKubernetesState["Created"] = "Created";
    /** Updating */
    KnownKubernetesState["Updating"] = "Updating";
    /** Reconfiguring */
    KnownKubernetesState["Reconfiguring"] = "Reconfiguring";
    /** Failed */
    KnownKubernetesState["Failed"] = "Failed";
    /** Deleting */
    KnownKubernetesState["Deleting"] = "Deleting";
})(KnownKubernetesState || (KnownKubernetesState = {}));
/** Known values of {@link PosixComplianceStatus} that the service accepts. */
export var KnownPosixComplianceStatus;
(function (KnownPosixComplianceStatus) {
    /** Invalid */
    KnownPosixComplianceStatus["Invalid"] = "Invalid";
    /** Enabled */
    KnownPosixComplianceStatus["Enabled"] = "Enabled";
    /** Disabled */
    KnownPosixComplianceStatus["Disabled"] = "Disabled";
})(KnownPosixComplianceStatus || (KnownPosixComplianceStatus = {}));
//# sourceMappingURL=index.js.map