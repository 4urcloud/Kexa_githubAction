import { DiagnosticSettings } from "../operationsInterfaces";
import { DataBoxEdgeManagementClient } from "../dataBoxEdgeManagementClient";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { DiagnosticSettingsGetDiagnosticProactiveLogCollectionSettingsOptionalParams, DiagnosticSettingsGetDiagnosticProactiveLogCollectionSettingsResponse, DiagnosticProactiveLogCollectionSettings, DiagnosticSettingsUpdateDiagnosticProactiveLogCollectionSettingsOptionalParams, DiagnosticSettingsUpdateDiagnosticProactiveLogCollectionSettingsResponse, DiagnosticSettingsGetDiagnosticRemoteSupportSettingsOptionalParams, DiagnosticSettingsGetDiagnosticRemoteSupportSettingsResponse, DiagnosticRemoteSupportSettings, DiagnosticSettingsUpdateDiagnosticRemoteSupportSettingsOptionalParams, DiagnosticSettingsUpdateDiagnosticRemoteSupportSettingsResponse } from "../models";
/** Class containing DiagnosticSettings operations. */
export declare class DiagnosticSettingsImpl implements DiagnosticSettings {
    private readonly client;
    /**
     * Initialize a new instance of the class DiagnosticSettings class.
     * @param client Reference to the service client
     */
    constructor(client: DataBoxEdgeManagementClient);
    /**
     * Gets the proactive log collection settings of the specified Data Box Edge/Data Box Gateway device.
     * @param deviceName The device name.
     * @param resourceGroupName The resource group name.
     * @param options The options parameters.
     */
    getDiagnosticProactiveLogCollectionSettings(deviceName: string, resourceGroupName: string, options?: DiagnosticSettingsGetDiagnosticProactiveLogCollectionSettingsOptionalParams): Promise<DiagnosticSettingsGetDiagnosticProactiveLogCollectionSettingsResponse>;
    /**
     * Updates the proactive log collection settings on a Data Box Edge/Data Box Gateway device.
     * @param deviceName The device name.
     * @param resourceGroupName The resource group name.
     * @param proactiveLogCollectionSettings The proactive log collection settings.
     * @param options The options parameters.
     */
    beginUpdateDiagnosticProactiveLogCollectionSettings(deviceName: string, resourceGroupName: string, proactiveLogCollectionSettings: DiagnosticProactiveLogCollectionSettings, options?: DiagnosticSettingsUpdateDiagnosticProactiveLogCollectionSettingsOptionalParams): Promise<PollerLike<PollOperationState<DiagnosticSettingsUpdateDiagnosticProactiveLogCollectionSettingsResponse>, DiagnosticSettingsUpdateDiagnosticProactiveLogCollectionSettingsResponse>>;
    /**
     * Updates the proactive log collection settings on a Data Box Edge/Data Box Gateway device.
     * @param deviceName The device name.
     * @param resourceGroupName The resource group name.
     * @param proactiveLogCollectionSettings The proactive log collection settings.
     * @param options The options parameters.
     */
    beginUpdateDiagnosticProactiveLogCollectionSettingsAndWait(deviceName: string, resourceGroupName: string, proactiveLogCollectionSettings: DiagnosticProactiveLogCollectionSettings, options?: DiagnosticSettingsUpdateDiagnosticProactiveLogCollectionSettingsOptionalParams): Promise<DiagnosticSettingsUpdateDiagnosticProactiveLogCollectionSettingsResponse>;
    /**
     * Gets the diagnostic remote support settings of the specified Data Box Edge/Data Box Gateway device.
     * @param deviceName The device name.
     * @param resourceGroupName The resource group name.
     * @param options The options parameters.
     */
    getDiagnosticRemoteSupportSettings(deviceName: string, resourceGroupName: string, options?: DiagnosticSettingsGetDiagnosticRemoteSupportSettingsOptionalParams): Promise<DiagnosticSettingsGetDiagnosticRemoteSupportSettingsResponse>;
    /**
     * Updates the diagnostic remote support settings on a Data Box Edge/Data Box Gateway device.
     * @param deviceName The device name.
     * @param resourceGroupName The resource group name.
     * @param diagnosticRemoteSupportSettings The diagnostic remote support settings.
     * @param options The options parameters.
     */
    beginUpdateDiagnosticRemoteSupportSettings(deviceName: string, resourceGroupName: string, diagnosticRemoteSupportSettings: DiagnosticRemoteSupportSettings, options?: DiagnosticSettingsUpdateDiagnosticRemoteSupportSettingsOptionalParams): Promise<PollerLike<PollOperationState<DiagnosticSettingsUpdateDiagnosticRemoteSupportSettingsResponse>, DiagnosticSettingsUpdateDiagnosticRemoteSupportSettingsResponse>>;
    /**
     * Updates the diagnostic remote support settings on a Data Box Edge/Data Box Gateway device.
     * @param deviceName The device name.
     * @param resourceGroupName The resource group name.
     * @param diagnosticRemoteSupportSettings The diagnostic remote support settings.
     * @param options The options parameters.
     */
    beginUpdateDiagnosticRemoteSupportSettingsAndWait(deviceName: string, resourceGroupName: string, diagnosticRemoteSupportSettings: DiagnosticRemoteSupportSettings, options?: DiagnosticSettingsUpdateDiagnosticRemoteSupportSettingsOptionalParams): Promise<DiagnosticSettingsUpdateDiagnosticRemoteSupportSettingsResponse>;
}
//# sourceMappingURL=diagnosticSettings.d.ts.map