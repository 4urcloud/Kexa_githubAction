import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Addons } from "../operationsInterfaces";
import { DataBoxEdgeManagementClient } from "../dataBoxEdgeManagementClient";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { AddonUnion, AddonsListByRoleOptionalParams, AddonsGetOptionalParams, AddonsGetResponse, AddonsCreateOrUpdateOptionalParams, AddonsCreateOrUpdateResponse, AddonsDeleteOptionalParams } from "../models";
/** Class containing Addons operations. */
export declare class AddonsImpl implements Addons {
    private readonly client;
    /**
     * Initialize a new instance of the class Addons class.
     * @param client Reference to the service client
     */
    constructor(client: DataBoxEdgeManagementClient);
    /**
     * Lists all the addons configured in the role.
     * @param deviceName The device name.
     * @param roleName The role name.
     * @param resourceGroupName The resource group name.
     * @param options The options parameters.
     */
    listByRole(deviceName: string, roleName: string, resourceGroupName: string, options?: AddonsListByRoleOptionalParams): PagedAsyncIterableIterator<AddonUnion>;
    private listByRolePagingPage;
    private listByRolePagingAll;
    /**
     * Lists all the addons configured in the role.
     * @param deviceName The device name.
     * @param roleName The role name.
     * @param resourceGroupName The resource group name.
     * @param options The options parameters.
     */
    private _listByRole;
    /**
     * Gets a specific addon by name.
     * @param deviceName The device name.
     * @param roleName The role name.
     * @param addonName The addon name.
     * @param resourceGroupName The resource group name.
     * @param options The options parameters.
     */
    get(deviceName: string, roleName: string, addonName: string, resourceGroupName: string, options?: AddonsGetOptionalParams): Promise<AddonsGetResponse>;
    /**
     * Create or update a addon.
     * @param deviceName The device name.
     * @param roleName The role name.
     * @param addonName The addon name.
     * @param resourceGroupName The resource group name.
     * @param addon The addon properties.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(deviceName: string, roleName: string, addonName: string, resourceGroupName: string, addon: AddonUnion, options?: AddonsCreateOrUpdateOptionalParams): Promise<PollerLike<PollOperationState<AddonsCreateOrUpdateResponse>, AddonsCreateOrUpdateResponse>>;
    /**
     * Create or update a addon.
     * @param deviceName The device name.
     * @param roleName The role name.
     * @param addonName The addon name.
     * @param resourceGroupName The resource group name.
     * @param addon The addon properties.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(deviceName: string, roleName: string, addonName: string, resourceGroupName: string, addon: AddonUnion, options?: AddonsCreateOrUpdateOptionalParams): Promise<AddonsCreateOrUpdateResponse>;
    /**
     * Deletes the addon on the device.
     * @param deviceName The device name.
     * @param roleName The role name.
     * @param addonName The addon name.
     * @param resourceGroupName The resource group name.
     * @param options The options parameters.
     */
    beginDelete(deviceName: string, roleName: string, addonName: string, resourceGroupName: string, options?: AddonsDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Deletes the addon on the device.
     * @param deviceName The device name.
     * @param roleName The role name.
     * @param addonName The addon name.
     * @param resourceGroupName The resource group name.
     * @param options The options parameters.
     */
    beginDeleteAndWait(deviceName: string, roleName: string, addonName: string, resourceGroupName: string, options?: AddonsDeleteOptionalParams): Promise<void>;
    /**
     * ListByRoleNext
     * @param deviceName The device name.
     * @param roleName The role name.
     * @param resourceGroupName The resource group name.
     * @param nextLink The nextLink from the previous successful call to the ListByRole method.
     * @param options The options parameters.
     */
    private _listByRoleNext;
}
//# sourceMappingURL=addons.d.ts.map