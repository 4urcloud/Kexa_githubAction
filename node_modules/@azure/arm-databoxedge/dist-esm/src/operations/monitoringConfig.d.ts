import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { MonitoringConfig } from "../operationsInterfaces";
import { DataBoxEdgeManagementClient } from "../dataBoxEdgeManagementClient";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { MonitoringMetricConfiguration, MonitoringConfigListOptionalParams, MonitoringConfigGetOptionalParams, MonitoringConfigGetResponse, MonitoringConfigCreateOrUpdateOptionalParams, MonitoringConfigCreateOrUpdateResponse, MonitoringConfigDeleteOptionalParams } from "../models";
/** Class containing MonitoringConfig operations. */
export declare class MonitoringConfigImpl implements MonitoringConfig {
    private readonly client;
    /**
     * Initialize a new instance of the class MonitoringConfig class.
     * @param client Reference to the service client
     */
    constructor(client: DataBoxEdgeManagementClient);
    /**
     * Lists metric configurations in a role.
     * @param deviceName The device name.
     * @param roleName The role name.
     * @param resourceGroupName The resource group name.
     * @param options The options parameters.
     */
    list(deviceName: string, roleName: string, resourceGroupName: string, options?: MonitoringConfigListOptionalParams): PagedAsyncIterableIterator<MonitoringMetricConfiguration>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Lists metric configurations in a role.
     * @param deviceName The device name.
     * @param roleName The role name.
     * @param resourceGroupName The resource group name.
     * @param options The options parameters.
     */
    private _list;
    /**
     * Gets a  metric configuration of a role.
     * @param deviceName The device name.
     * @param roleName The role name.
     * @param resourceGroupName The resource group name.
     * @param options The options parameters.
     */
    get(deviceName: string, roleName: string, resourceGroupName: string, options?: MonitoringConfigGetOptionalParams): Promise<MonitoringConfigGetResponse>;
    /**
     * Creates a new metric configuration or updates an existing one for a role.
     * @param deviceName The device name.
     * @param roleName The role name.
     * @param resourceGroupName The resource group name.
     * @param monitoringMetricConfiguration The metric configuration.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(deviceName: string, roleName: string, resourceGroupName: string, monitoringMetricConfiguration: MonitoringMetricConfiguration, options?: MonitoringConfigCreateOrUpdateOptionalParams): Promise<PollerLike<PollOperationState<MonitoringConfigCreateOrUpdateResponse>, MonitoringConfigCreateOrUpdateResponse>>;
    /**
     * Creates a new metric configuration or updates an existing one for a role.
     * @param deviceName The device name.
     * @param roleName The role name.
     * @param resourceGroupName The resource group name.
     * @param monitoringMetricConfiguration The metric configuration.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(deviceName: string, roleName: string, resourceGroupName: string, monitoringMetricConfiguration: MonitoringMetricConfiguration, options?: MonitoringConfigCreateOrUpdateOptionalParams): Promise<MonitoringConfigCreateOrUpdateResponse>;
    /**
     * deletes a new metric configuration for a role.
     * @param deviceName The device name.
     * @param roleName The role name.
     * @param resourceGroupName The resource group name.
     * @param options The options parameters.
     */
    beginDelete(deviceName: string, roleName: string, resourceGroupName: string, options?: MonitoringConfigDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * deletes a new metric configuration for a role.
     * @param deviceName The device name.
     * @param roleName The role name.
     * @param resourceGroupName The resource group name.
     * @param options The options parameters.
     */
    beginDeleteAndWait(deviceName: string, roleName: string, resourceGroupName: string, options?: MonitoringConfigDeleteOptionalParams): Promise<void>;
    /**
     * ListNext
     * @param deviceName The device name.
     * @param roleName The role name.
     * @param resourceGroupName The resource group name.
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=monitoringConfig.d.ts.map