import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { StorageAccountCredentials } from "../operationsInterfaces";
import { DataBoxEdgeManagementClient } from "../dataBoxEdgeManagementClient";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { StorageAccountCredential, StorageAccountCredentialsListByDataBoxEdgeDeviceOptionalParams, StorageAccountCredentialsGetOptionalParams, StorageAccountCredentialsGetResponse, StorageAccountCredentialsCreateOrUpdateOptionalParams, StorageAccountCredentialsCreateOrUpdateResponse, StorageAccountCredentialsDeleteOptionalParams } from "../models";
/** Class containing StorageAccountCredentials operations. */
export declare class StorageAccountCredentialsImpl implements StorageAccountCredentials {
    private readonly client;
    /**
     * Initialize a new instance of the class StorageAccountCredentials class.
     * @param client Reference to the service client
     */
    constructor(client: DataBoxEdgeManagementClient);
    /**
     * Gets all the storage account credentials in a Data Box Edge/Data Box Gateway device.
     * @param deviceName The device name.
     * @param resourceGroupName The resource group name.
     * @param options The options parameters.
     */
    listByDataBoxEdgeDevice(deviceName: string, resourceGroupName: string, options?: StorageAccountCredentialsListByDataBoxEdgeDeviceOptionalParams): PagedAsyncIterableIterator<StorageAccountCredential>;
    private listByDataBoxEdgeDevicePagingPage;
    private listByDataBoxEdgeDevicePagingAll;
    /**
     * Gets all the storage account credentials in a Data Box Edge/Data Box Gateway device.
     * @param deviceName The device name.
     * @param resourceGroupName The resource group name.
     * @param options The options parameters.
     */
    private _listByDataBoxEdgeDevice;
    /**
     * Gets the properties of the specified storage account credential.
     * @param deviceName The device name.
     * @param name The storage account credential name.
     * @param resourceGroupName The resource group name.
     * @param options The options parameters.
     */
    get(deviceName: string, name: string, resourceGroupName: string, options?: StorageAccountCredentialsGetOptionalParams): Promise<StorageAccountCredentialsGetResponse>;
    /**
     * Creates or updates the storage account credential.
     * @param deviceName The device name.
     * @param name The storage account credential name.
     * @param resourceGroupName The resource group name.
     * @param storageAccountCredential The storage account credential.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(deviceName: string, name: string, resourceGroupName: string, storageAccountCredential: StorageAccountCredential, options?: StorageAccountCredentialsCreateOrUpdateOptionalParams): Promise<PollerLike<PollOperationState<StorageAccountCredentialsCreateOrUpdateResponse>, StorageAccountCredentialsCreateOrUpdateResponse>>;
    /**
     * Creates or updates the storage account credential.
     * @param deviceName The device name.
     * @param name The storage account credential name.
     * @param resourceGroupName The resource group name.
     * @param storageAccountCredential The storage account credential.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(deviceName: string, name: string, resourceGroupName: string, storageAccountCredential: StorageAccountCredential, options?: StorageAccountCredentialsCreateOrUpdateOptionalParams): Promise<StorageAccountCredentialsCreateOrUpdateResponse>;
    /**
     * Deletes the storage account credential.
     * @param deviceName The device name.
     * @param name The storage account credential name.
     * @param resourceGroupName The resource group name.
     * @param options The options parameters.
     */
    beginDelete(deviceName: string, name: string, resourceGroupName: string, options?: StorageAccountCredentialsDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Deletes the storage account credential.
     * @param deviceName The device name.
     * @param name The storage account credential name.
     * @param resourceGroupName The resource group name.
     * @param options The options parameters.
     */
    beginDeleteAndWait(deviceName: string, name: string, resourceGroupName: string, options?: StorageAccountCredentialsDeleteOptionalParams): Promise<void>;
    /**
     * ListByDataBoxEdgeDeviceNext
     * @param deviceName The device name.
     * @param resourceGroupName The resource group name.
     * @param nextLink The nextLink from the previous successful call to the ListByDataBoxEdgeDevice
     *                 method.
     * @param options The options parameters.
     */
    private _listByDataBoxEdgeDeviceNext;
}
//# sourceMappingURL=storageAccountCredentials.d.ts.map