import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Shares } from "../operationsInterfaces";
import { DataBoxEdgeManagementClient } from "../dataBoxEdgeManagementClient";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { Share, SharesListByDataBoxEdgeDeviceOptionalParams, SharesGetOptionalParams, SharesGetResponse, SharesCreateOrUpdateOptionalParams, SharesCreateOrUpdateResponse, SharesDeleteOptionalParams, SharesRefreshOptionalParams } from "../models";
/** Class containing Shares operations. */
export declare class SharesImpl implements Shares {
    private readonly client;
    /**
     * Initialize a new instance of the class Shares class.
     * @param client Reference to the service client
     */
    constructor(client: DataBoxEdgeManagementClient);
    /**
     * Lists all the shares in a Data Box Edge/Data Box Gateway device.
     * @param deviceName The device name.
     * @param resourceGroupName The resource group name.
     * @param options The options parameters.
     */
    listByDataBoxEdgeDevice(deviceName: string, resourceGroupName: string, options?: SharesListByDataBoxEdgeDeviceOptionalParams): PagedAsyncIterableIterator<Share>;
    private listByDataBoxEdgeDevicePagingPage;
    private listByDataBoxEdgeDevicePagingAll;
    /**
     * Lists all the shares in a Data Box Edge/Data Box Gateway device.
     * @param deviceName The device name.
     * @param resourceGroupName The resource group name.
     * @param options The options parameters.
     */
    private _listByDataBoxEdgeDevice;
    /**
     * Gets a share by name.
     * @param deviceName The device name.
     * @param name The share name.
     * @param resourceGroupName The resource group name.
     * @param options The options parameters.
     */
    get(deviceName: string, name: string, resourceGroupName: string, options?: SharesGetOptionalParams): Promise<SharesGetResponse>;
    /**
     * Creates a new share or updates an existing share on the device.
     * @param deviceName The device name.
     * @param name The share name.
     * @param resourceGroupName The resource group name.
     * @param share The share properties.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(deviceName: string, name: string, resourceGroupName: string, share: Share, options?: SharesCreateOrUpdateOptionalParams): Promise<PollerLike<PollOperationState<SharesCreateOrUpdateResponse>, SharesCreateOrUpdateResponse>>;
    /**
     * Creates a new share or updates an existing share on the device.
     * @param deviceName The device name.
     * @param name The share name.
     * @param resourceGroupName The resource group name.
     * @param share The share properties.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(deviceName: string, name: string, resourceGroupName: string, share: Share, options?: SharesCreateOrUpdateOptionalParams): Promise<SharesCreateOrUpdateResponse>;
    /**
     * Deletes the share on the Data Box Edge/Data Box Gateway device.
     * @param deviceName The device name.
     * @param name The share name.
     * @param resourceGroupName The resource group name.
     * @param options The options parameters.
     */
    beginDelete(deviceName: string, name: string, resourceGroupName: string, options?: SharesDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Deletes the share on the Data Box Edge/Data Box Gateway device.
     * @param deviceName The device name.
     * @param name The share name.
     * @param resourceGroupName The resource group name.
     * @param options The options parameters.
     */
    beginDeleteAndWait(deviceName: string, name: string, resourceGroupName: string, options?: SharesDeleteOptionalParams): Promise<void>;
    /**
     * Refreshes the share metadata with the data from the cloud.
     * @param deviceName The device name.
     * @param name The share name.
     * @param resourceGroupName The resource group name.
     * @param options The options parameters.
     */
    beginRefresh(deviceName: string, name: string, resourceGroupName: string, options?: SharesRefreshOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Refreshes the share metadata with the data from the cloud.
     * @param deviceName The device name.
     * @param name The share name.
     * @param resourceGroupName The resource group name.
     * @param options The options parameters.
     */
    beginRefreshAndWait(deviceName: string, name: string, resourceGroupName: string, options?: SharesRefreshOptionalParams): Promise<void>;
    /**
     * ListByDataBoxEdgeDeviceNext
     * @param deviceName The device name.
     * @param resourceGroupName The resource group name.
     * @param nextLink The nextLink from the previous successful call to the ListByDataBoxEdgeDevice
     *                 method.
     * @param options The options parameters.
     */
    private _listByDataBoxEdgeDeviceNext;
}
//# sourceMappingURL=shares.d.ts.map