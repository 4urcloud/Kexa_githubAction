import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { StorageAccounts } from "../operationsInterfaces";
import { DataBoxEdgeManagementClient } from "../dataBoxEdgeManagementClient";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { StorageAccount, StorageAccountsListByDataBoxEdgeDeviceOptionalParams, StorageAccountsGetOptionalParams, StorageAccountsGetResponse, StorageAccountsCreateOrUpdateOptionalParams, StorageAccountsCreateOrUpdateResponse, StorageAccountsDeleteOptionalParams } from "../models";
/** Class containing StorageAccounts operations. */
export declare class StorageAccountsImpl implements StorageAccounts {
    private readonly client;
    /**
     * Initialize a new instance of the class StorageAccounts class.
     * @param client Reference to the service client
     */
    constructor(client: DataBoxEdgeManagementClient);
    /**
     * Lists all the StorageAccounts in a Data Box Edge/Data Box Gateway device.
     * @param deviceName The device name.
     * @param resourceGroupName The resource group name.
     * @param options The options parameters.
     */
    listByDataBoxEdgeDevice(deviceName: string, resourceGroupName: string, options?: StorageAccountsListByDataBoxEdgeDeviceOptionalParams): PagedAsyncIterableIterator<StorageAccount>;
    private listByDataBoxEdgeDevicePagingPage;
    private listByDataBoxEdgeDevicePagingAll;
    /**
     * Lists all the StorageAccounts in a Data Box Edge/Data Box Gateway device.
     * @param deviceName The device name.
     * @param resourceGroupName The resource group name.
     * @param options The options parameters.
     */
    private _listByDataBoxEdgeDevice;
    /**
     * Gets a StorageAccount by name.
     * @param deviceName The device name.
     * @param storageAccountName The storage account name.
     * @param resourceGroupName The resource group name.
     * @param options The options parameters.
     */
    get(deviceName: string, storageAccountName: string, resourceGroupName: string, options?: StorageAccountsGetOptionalParams): Promise<StorageAccountsGetResponse>;
    /**
     * Creates a new StorageAccount or updates an existing StorageAccount on the device.
     * @param deviceName The device name.
     * @param storageAccountName The StorageAccount name.
     * @param resourceGroupName The resource group name.
     * @param storageAccount The StorageAccount properties.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(deviceName: string, storageAccountName: string, resourceGroupName: string, storageAccount: StorageAccount, options?: StorageAccountsCreateOrUpdateOptionalParams): Promise<PollerLike<PollOperationState<StorageAccountsCreateOrUpdateResponse>, StorageAccountsCreateOrUpdateResponse>>;
    /**
     * Creates a new StorageAccount or updates an existing StorageAccount on the device.
     * @param deviceName The device name.
     * @param storageAccountName The StorageAccount name.
     * @param resourceGroupName The resource group name.
     * @param storageAccount The StorageAccount properties.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(deviceName: string, storageAccountName: string, resourceGroupName: string, storageAccount: StorageAccount, options?: StorageAccountsCreateOrUpdateOptionalParams): Promise<StorageAccountsCreateOrUpdateResponse>;
    /**
     * Deletes the StorageAccount on the Data Box Edge/Data Box Gateway device.
     * @param deviceName The device name.
     * @param storageAccountName The StorageAccount name.
     * @param resourceGroupName The resource group name.
     * @param options The options parameters.
     */
    beginDelete(deviceName: string, storageAccountName: string, resourceGroupName: string, options?: StorageAccountsDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Deletes the StorageAccount on the Data Box Edge/Data Box Gateway device.
     * @param deviceName The device name.
     * @param storageAccountName The StorageAccount name.
     * @param resourceGroupName The resource group name.
     * @param options The options parameters.
     */
    beginDeleteAndWait(deviceName: string, storageAccountName: string, resourceGroupName: string, options?: StorageAccountsDeleteOptionalParams): Promise<void>;
    /**
     * ListByDataBoxEdgeDeviceNext
     * @param deviceName The device name.
     * @param resourceGroupName The resource group name.
     * @param nextLink The nextLink from the previous successful call to the ListByDataBoxEdgeDevice
     *                 method.
     * @param options The options parameters.
     */
    private _listByDataBoxEdgeDeviceNext;
}
//# sourceMappingURL=storageAccounts.d.ts.map