import * as coreClient from "@azure/core-client";
import * as coreAuth from "@azure/core-auth";
import { Operations, AvailableSkus, Devices, Alerts, BandwidthSchedules, DiagnosticSettings, Jobs, Nodes, OperationsStatus, Orders, Roles, Addons, MonitoringConfig, Shares, StorageAccountCredentials, StorageAccounts, Containers, Triggers, SupportPackages, Users } from "./operationsInterfaces";
import { DataBoxEdgeManagementClientOptionalParams } from "./models";
export declare class DataBoxEdgeManagementClient extends coreClient.ServiceClient {
    $host: string;
    apiVersion: string;
    subscriptionId: string;
    /**
     * Initializes a new instance of the DataBoxEdgeManagementClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId The subscription ID.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: DataBoxEdgeManagementClientOptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    operations: Operations;
    availableSkus: AvailableSkus;
    devices: Devices;
    alerts: Alerts;
    bandwidthSchedules: BandwidthSchedules;
    diagnosticSettings: DiagnosticSettings;
    jobs: Jobs;
    nodes: Nodes;
    operationsStatus: OperationsStatus;
    orders: Orders;
    roles: Roles;
    addons: Addons;
    monitoringConfig: MonitoringConfig;
    shares: Shares;
    storageAccountCredentials: StorageAccountCredentials;
    storageAccounts: StorageAccounts;
    containers: Containers;
    triggers: Triggers;
    supportPackages: SupportPackages;
    users: Users;
}
//# sourceMappingURL=dataBoxEdgeManagementClient.d.ts.map