import * as coreAuth from '@azure/core-auth';
import * as coreClient from '@azure/core-client';
import { PagedAsyncIterableIterator } from '@azure/core-paging';
import { PollerLike } from '@azure/core-lro';
import { PollOperationState } from '@azure/core-lro';

/** Container host mapping object specifying the Container host resource ID and its associated Controller resource. */
export declare interface ContainerHostMapping {
    /** ARM ID of the Container Host resource */
    containerHostResourceId?: string;
    /**
     * ARM ID of the mapped Controller resource
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly mappedControllerResourceId?: string;
}

/** Interface representing a ContainerHostMappings. */
export declare interface ContainerHostMappings {
    /**
     * Returns container host mapping object for a container host resource ID if an associated controller
     * exists.
     * @param resourceGroupName Resource group to which the resource belongs.
     * @param location Location of the container host.
     * @param containerHostMapping Container host mapping object specifying the Container host resource ID
     *                             and its associated Controller resource.
     * @param options The options parameters.
     */
    getContainerHostMapping(resourceGroupName: string, location: string, containerHostMapping: ContainerHostMapping, options?: ContainerHostMappingsGetContainerHostMappingOptionalParams): Promise<ContainerHostMappingsGetContainerHostMappingResponse>;
}

/** Optional parameters. */
export declare interface ContainerHostMappingsGetContainerHostMappingOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the getContainerHostMapping operation. */
export declare type ContainerHostMappingsGetContainerHostMappingResponse = ContainerHostMapping;

export declare interface Controller extends TrackedResource {
    /** Model representing SKU for Azure Dev Spaces Controller. */
    sku: Sku;
    /**
     * Provisioning state of the Azure Dev Spaces Controller.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: ProvisioningState;
    /**
     * DNS suffix for public endpoints running in the Azure Dev Spaces Controller.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly hostSuffix?: string;
    /**
     * DNS name for accessing DataPlane services
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly dataPlaneFqdn?: string;
    /**
     * DNS of the target container host's API server
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly targetContainerHostApiServerFqdn?: string;
    /** Resource ID of the target container host */
    targetContainerHostResourceId: string;
    /** Credentials of the target container host (base64). */
    targetContainerHostCredentialsBase64: string;
}

export declare interface ControllerConnectionDetails {
    /** Base class for types that supply values used to connect to container orchestrators */
    orchestratorSpecificConnectionDetails?: OrchestratorSpecificConnectionDetailsUnion;
}

export declare interface ControllerConnectionDetailsList {
    /** List of Azure Dev Spaces Controller connection details. */
    connectionDetailsList?: ControllerConnectionDetails[];
}

export declare interface ControllerList {
    /** List of Azure Dev Spaces Controllers. */
    value?: Controller[];
    /**
     * The URI that can be used to request the next page for list of Azure Dev Spaces Controllers.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Interface representing a Controllers. */
export declare interface Controllers {
    /**
     * Lists all the Azure Dev Spaces Controllers with their properties in the specified resource group and
     * subscription.
     * @param resourceGroupName Resource group to which the resource belongs.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: ControllersListByResourceGroupOptionalParams): PagedAsyncIterableIterator<Controller>;
    /**
     * Lists all the Azure Dev Spaces Controllers with their properties in the subscription.
     * @param options The options parameters.
     */
    list(options?: ControllersListOptionalParams): PagedAsyncIterableIterator<Controller>;
    /**
     * Gets the properties for an Azure Dev Spaces Controller.
     * @param resourceGroupName Resource group to which the resource belongs.
     * @param name Name of the resource.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, name: string, options?: ControllersGetOptionalParams): Promise<ControllersGetResponse>;
    /**
     * Creates an Azure Dev Spaces Controller with the specified create parameters.
     * @param resourceGroupName Resource group to which the resource belongs.
     * @param name Name of the resource.
     * @param controller Controller create parameters.
     * @param options The options parameters.
     */
    beginCreate(resourceGroupName: string, name: string, controller: Controller, options?: ControllersCreateOptionalParams): Promise<PollerLike<PollOperationState<ControllersCreateResponse>, ControllersCreateResponse>>;
    /**
     * Creates an Azure Dev Spaces Controller with the specified create parameters.
     * @param resourceGroupName Resource group to which the resource belongs.
     * @param name Name of the resource.
     * @param controller Controller create parameters.
     * @param options The options parameters.
     */
    beginCreateAndWait(resourceGroupName: string, name: string, controller: Controller, options?: ControllersCreateOptionalParams): Promise<ControllersCreateResponse>;
    /**
     * Deletes an existing Azure Dev Spaces Controller.
     * @param resourceGroupName Resource group to which the resource belongs.
     * @param name Name of the resource.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, name: string, options?: ControllersDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Deletes an existing Azure Dev Spaces Controller.
     * @param resourceGroupName Resource group to which the resource belongs.
     * @param name Name of the resource.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, name: string, options?: ControllersDeleteOptionalParams): Promise<void>;
    /**
     * Updates the properties of an existing Azure Dev Spaces Controller with the specified update
     * parameters.
     * @param resourceGroupName Resource group to which the resource belongs.
     * @param name Name of the resource.
     * @param controllerUpdateParameters Parameters for updating the Azure Dev Spaces Controller.
     * @param options The options parameters.
     */
    update(resourceGroupName: string, name: string, controllerUpdateParameters: ControllerUpdateParameters, options?: ControllersUpdateOptionalParams): Promise<ControllersUpdateResponse>;
    /**
     * Lists connection details for the underlying container resources of an Azure Dev Spaces Controller.
     * @param resourceGroupName Resource group to which the resource belongs.
     * @param name Name of the resource.
     * @param listConnectionDetailsParameters Parameters for listing connection details of Azure Dev Spaces
     *                                        Controller.
     * @param options The options parameters.
     */
    listConnectionDetails(resourceGroupName: string, name: string, listConnectionDetailsParameters: ListConnectionDetailsParameters, options?: ControllersListConnectionDetailsOptionalParams): Promise<ControllersListConnectionDetailsResponse>;
}

/** Optional parameters. */
export declare interface ControllersCreateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the create operation. */
export declare type ControllersCreateResponse = Controller;

/** Optional parameters. */
export declare interface ControllersDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface ControllersGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type ControllersGetResponse = Controller;

/** Optional parameters. */
export declare interface ControllersListByResourceGroupNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroupNext operation. */
export declare type ControllersListByResourceGroupNextResponse = ControllerList;

/** Optional parameters. */
export declare interface ControllersListByResourceGroupOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroup operation. */
export declare type ControllersListByResourceGroupResponse = ControllerList;

/** Optional parameters. */
export declare interface ControllersListConnectionDetailsOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listConnectionDetails operation. */
export declare type ControllersListConnectionDetailsResponse = ControllerConnectionDetailsList;

/** Optional parameters. */
export declare interface ControllersListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type ControllersListNextResponse = ControllerList;

/** Optional parameters. */
export declare interface ControllersListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type ControllersListResponse = ControllerList;

/** Optional parameters. */
export declare interface ControllersUpdateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the update operation. */
export declare type ControllersUpdateResponse = Controller;

/** Parameters for updating an Azure Dev Spaces Controller. */
export declare interface ControllerUpdateParameters {
    /** Tags for the Azure Dev Spaces Controller. */
    tags?: {
        [propertyName: string]: string;
    };
    /** Credentials of the target container host (base64). */
    targetContainerHostCredentialsBase64?: string;
}

/** Error response indicates that the service is not able to process the incoming request. The reason is provided in the error message. */
export declare interface DevSpacesErrorResponse {
    /** The details of the error. */
    error?: ErrorDetails;
}

export declare class DevSpacesManagementClient extends coreClient.ServiceClient {
    $host: string;
    apiVersion: string;
    subscriptionId: string;
    /**
     * Initializes a new instance of the DevSpacesManagementClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId Azure subscription ID.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: DevSpacesManagementClientOptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    containerHostMappings: ContainerHostMappings;
    operations: Operations;
    controllers: Controllers;
}

/** Optional parameters. */
export declare interface DevSpacesManagementClientOptionalParams extends coreClient.ServiceClientOptions {
    /** server parameter */
    $host?: string;
    /** Api Version */
    apiVersion?: string;
    /** Overrides client endpoint. */
    endpoint?: string;
}

export declare interface ErrorDetails {
    /**
     * Status code for the error.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly code?: string;
    /**
     * Error message describing the error in detail.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly message?: string;
    /**
     * The target of the particular error.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly target?: string;
}

/**
 * Given a result page from a pageable operation, returns a
 * continuation token that can be used to begin paging from
 * that point later.
 * @param page A result object from calling .byPage() on a paged operation.
 * @returns The continuation token that can be passed into byPage().
 */
export declare function getContinuationToken(page: unknown): string | undefined;

/** Known values of {@link ProvisioningState} that the service accepts. */
export declare enum KnownProvisioningState {
    /** Succeeded */
    Succeeded = "Succeeded",
    /** Failed */
    Failed = "Failed",
    /** Canceled */
    Canceled = "Canceled",
    /** Updating */
    Updating = "Updating",
    /** Creating */
    Creating = "Creating",
    /** Deleting */
    Deleting = "Deleting",
    /** Deleted */
    Deleted = "Deleted"
}

/** Known values of {@link SkuName} that the service accepts. */
export declare enum KnownSkuName {
    /** S1 */
    S1 = "S1"
}

/** Known values of {@link SkuTier} that the service accepts. */
export declare enum KnownSkuTier {
    /** Standard */
    Standard = "Standard"
}

/** Contains information used to connect to a Kubernetes cluster */
export declare interface KubernetesConnectionDetails extends OrchestratorSpecificConnectionDetails {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    instanceType: "Kubernetes";
    /** Gets the kubeconfig for the cluster. */
    kubeConfig?: string;
}

/** Parameters for listing connection details of an Azure Dev Spaces Controller. */
export declare interface ListConnectionDetailsParameters {
    /** Resource ID of the target container host mapped to the Azure Dev Spaces Controller. */
    targetContainerHostResourceId: string;
}

/** Interface representing a Operations. */
export declare interface Operations {
    /**
     * Lists all the supported operations by the Microsoft.DevSpaces resource provider along with their
     * description.
     * @param options The options parameters.
     */
    list(options?: OperationsListOptionalParams): PagedAsyncIterableIterator<ResourceProviderOperationDefinition>;
}

/** Optional parameters. */
export declare interface OperationsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type OperationsListNextResponse = ResourceProviderOperationList;

/** Optional parameters. */
export declare interface OperationsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type OperationsListResponse = ResourceProviderOperationList;

/** Base class for types that supply values used to connect to container orchestrators */
export declare interface OrchestratorSpecificConnectionDetails {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    instanceType: "Kubernetes";
}

export declare type OrchestratorSpecificConnectionDetailsUnion = OrchestratorSpecificConnectionDetails | KubernetesConnectionDetails;

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded** \
 * **Failed** \
 * **Canceled** \
 * **Updating** \
 * **Creating** \
 * **Deleting** \
 * **Deleted**
 */
export declare type ProvisioningState = string;

/** An Azure resource. */
export declare interface Resource {
    /**
     * Fully qualified resource Id for the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /**
     * The name of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * The type of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
}

export declare interface ResourceProviderOperationDefinition {
    /** Resource provider operation name. */
    name?: string;
    display?: ResourceProviderOperationDisplay;
}

export declare interface ResourceProviderOperationDisplay {
    /** Name of the resource provider. */
    provider?: string;
    /** Name of the resource type. */
    resource?: string;
    /** Name of the resource provider operation. */
    operation?: string;
    /** Description of the resource provider operation. */
    description?: string;
}

export declare interface ResourceProviderOperationList {
    /** Resource provider operations list. */
    value?: ResourceProviderOperationDefinition[];
    /**
     * The URI that can be used to request the next page for list of Azure operations.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Model representing SKU for Azure Dev Spaces Controller. */
export declare interface Sku {
    /** The name of the SKU for Azure Dev Spaces Controller. */
    name: SkuName;
    /** The tier of the SKU for Azure Dev Spaces Controller. */
    tier?: SkuTier;
}

/**
 * Defines values for SkuName. \
 * {@link KnownSkuName} can be used interchangeably with SkuName,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **S1**
 */
export declare type SkuName = string;

/**
 * Defines values for SkuTier. \
 * {@link KnownSkuTier} can be used interchangeably with SkuTier,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Standard**
 */
export declare type SkuTier = string;

/** The resource model definition for a ARM tracked top level resource. */
export declare interface TrackedResource extends Resource {
    /** Tags for the Azure resource. */
    tags?: {
        [propertyName: string]: string;
    };
    /** Region where the Azure resource is located. */
    location?: string;
}

export { }
