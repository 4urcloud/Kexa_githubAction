import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Controllers } from "../operationsInterfaces";
import { DevSpacesManagementClient } from "../devSpacesManagementClient";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { Controller, ControllersListByResourceGroupOptionalParams, ControllersListOptionalParams, ControllersGetOptionalParams, ControllersGetResponse, ControllersCreateOptionalParams, ControllersCreateResponse, ControllersDeleteOptionalParams, ControllerUpdateParameters, ControllersUpdateOptionalParams, ControllersUpdateResponse, ListConnectionDetailsParameters, ControllersListConnectionDetailsOptionalParams, ControllersListConnectionDetailsResponse } from "../models";
/** Class containing Controllers operations. */
export declare class ControllersImpl implements Controllers {
    private readonly client;
    /**
     * Initialize a new instance of the class Controllers class.
     * @param client Reference to the service client
     */
    constructor(client: DevSpacesManagementClient);
    /**
     * Lists all the Azure Dev Spaces Controllers with their properties in the specified resource group and
     * subscription.
     * @param resourceGroupName Resource group to which the resource belongs.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: ControllersListByResourceGroupOptionalParams): PagedAsyncIterableIterator<Controller>;
    private listByResourceGroupPagingPage;
    private listByResourceGroupPagingAll;
    /**
     * Lists all the Azure Dev Spaces Controllers with their properties in the subscription.
     * @param options The options parameters.
     */
    list(options?: ControllersListOptionalParams): PagedAsyncIterableIterator<Controller>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Gets the properties for an Azure Dev Spaces Controller.
     * @param resourceGroupName Resource group to which the resource belongs.
     * @param name Name of the resource.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, name: string, options?: ControllersGetOptionalParams): Promise<ControllersGetResponse>;
    /**
     * Creates an Azure Dev Spaces Controller with the specified create parameters.
     * @param resourceGroupName Resource group to which the resource belongs.
     * @param name Name of the resource.
     * @param controller Controller create parameters.
     * @param options The options parameters.
     */
    beginCreate(resourceGroupName: string, name: string, controller: Controller, options?: ControllersCreateOptionalParams): Promise<PollerLike<PollOperationState<ControllersCreateResponse>, ControllersCreateResponse>>;
    /**
     * Creates an Azure Dev Spaces Controller with the specified create parameters.
     * @param resourceGroupName Resource group to which the resource belongs.
     * @param name Name of the resource.
     * @param controller Controller create parameters.
     * @param options The options parameters.
     */
    beginCreateAndWait(resourceGroupName: string, name: string, controller: Controller, options?: ControllersCreateOptionalParams): Promise<ControllersCreateResponse>;
    /**
     * Deletes an existing Azure Dev Spaces Controller.
     * @param resourceGroupName Resource group to which the resource belongs.
     * @param name Name of the resource.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, name: string, options?: ControllersDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Deletes an existing Azure Dev Spaces Controller.
     * @param resourceGroupName Resource group to which the resource belongs.
     * @param name Name of the resource.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, name: string, options?: ControllersDeleteOptionalParams): Promise<void>;
    /**
     * Updates the properties of an existing Azure Dev Spaces Controller with the specified update
     * parameters.
     * @param resourceGroupName Resource group to which the resource belongs.
     * @param name Name of the resource.
     * @param controllerUpdateParameters Parameters for updating the Azure Dev Spaces Controller.
     * @param options The options parameters.
     */
    update(resourceGroupName: string, name: string, controllerUpdateParameters: ControllerUpdateParameters, options?: ControllersUpdateOptionalParams): Promise<ControllersUpdateResponse>;
    /**
     * Lists all the Azure Dev Spaces Controllers with their properties in the specified resource group and
     * subscription.
     * @param resourceGroupName Resource group to which the resource belongs.
     * @param options The options parameters.
     */
    private _listByResourceGroup;
    /**
     * Lists all the Azure Dev Spaces Controllers with their properties in the subscription.
     * @param options The options parameters.
     */
    private _list;
    /**
     * Lists connection details for the underlying container resources of an Azure Dev Spaces Controller.
     * @param resourceGroupName Resource group to which the resource belongs.
     * @param name Name of the resource.
     * @param listConnectionDetailsParameters Parameters for listing connection details of Azure Dev Spaces
     *                                        Controller.
     * @param options The options parameters.
     */
    listConnectionDetails(resourceGroupName: string, name: string, listConnectionDetailsParameters: ListConnectionDetailsParameters, options?: ControllersListConnectionDetailsOptionalParams): Promise<ControllersListConnectionDetailsResponse>;
    /**
     * ListByResourceGroupNext
     * @param resourceGroupName Resource group to which the resource belongs.
     * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.
     * @param options The options parameters.
     */
    private _listByResourceGroupNext;
    /**
     * ListNext
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=controllers.d.ts.map