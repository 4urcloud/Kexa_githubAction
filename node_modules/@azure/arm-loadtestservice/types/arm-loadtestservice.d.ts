import * as coreAuth from '@azure/core-auth';
import * as coreClient from '@azure/core-client';
import { PagedAsyncIterableIterator } from '@azure/core-paging';
import { PollerLike } from '@azure/core-lro';
import { PollOperationState } from '@azure/core-lro';

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Internal**
 */
export declare type ActionType = string;

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export declare type CreatedByType = string;

/** The resource management error additional info. */
export declare interface ErrorAdditionalInfo {
    /**
     * The additional info type.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /**
     * The additional info.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly info?: Record<string, unknown>;
}

/** The error detail. */
export declare interface ErrorDetail {
    /**
     * The error code.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly code?: string;
    /**
     * The error message.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly message?: string;
    /**
     * The error target.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly target?: string;
    /**
     * The error details.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly details?: ErrorDetail[];
    /**
     * The error additional info.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export declare interface ErrorResponse {
    /** The error object. */
    error?: ErrorDetail;
}

/** Known values of {@link ActionType} that the service accepts. */
export declare enum KnownActionType {
    Internal = "Internal"
}

/** Known values of {@link CreatedByType} that the service accepts. */
export declare enum KnownCreatedByType {
    User = "User",
    Application = "Application",
    ManagedIdentity = "ManagedIdentity",
    Key = "Key"
}

/** Known values of {@link Origin} that the service accepts. */
export declare enum KnownOrigin {
    User = "user",
    System = "system",
    UserSystem = "user,system"
}

/** Known values of {@link ResourceState} that the service accepts. */
export declare enum KnownResourceState {
    Succeeded = "Succeeded",
    Failed = "Failed",
    Canceled = "Canceled",
    Deleted = "Deleted"
}

/** Known values of {@link SystemAssignedServiceIdentityType} that the service accepts. */
export declare enum KnownSystemAssignedServiceIdentityType {
    None = "None",
    SystemAssigned = "SystemAssigned"
}

export declare class LoadTestClient extends coreClient.ServiceClient {
    $host: string;
    apiVersion: string;
    subscriptionId: string;
    /**
     * Initializes a new instance of the LoadTestClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId The ID of the target subscription.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: LoadTestClientOptionalParams);
    operations: Operations;
    loadTests: LoadTests;
}

/** Optional parameters. */
export declare interface LoadTestClientOptionalParams extends coreClient.ServiceClientOptions {
    /** server parameter */
    $host?: string;
    /** Api Version */
    apiVersion?: string;
    /** Overrides client endpoint. */
    endpoint?: string;
}

/** LoadTest details */
export declare type LoadTestResource = TrackedResource & {
    /** The type of identity used for the resource. */
    identity?: SystemAssignedServiceIdentity;
    /** Description of the resource. */
    description?: string;
    /**
     * Resource provisioning state.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: ResourceState;
    /**
     * Resource data plane URI.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly dataPlaneURI?: string;
};

/** List of resources page result. */
export declare interface LoadTestResourcePageList {
    /** List of resources in current page. */
    value?: LoadTestResource[];
    /** Link to next page of resources. */
    nextLink?: string;
}

/** LoadTest resource patch request body. */
export declare interface LoadTestResourcePatchRequestBody {
    /** Resource tags. */
    tags?: Record<string, unknown>;
    /** The type of identity used for the resource. */
    identity?: SystemAssignedServiceIdentity;
    /** Load Test resource properties */
    properties?: LoadTestResourcePatchRequestBodyProperties;
}

/** Load Test resource properties */
export declare interface LoadTestResourcePatchRequestBodyProperties {
    /** Description of the resource. */
    description?: string;
}

/** Interface representing a LoadTests. */
export declare interface LoadTests {
    /**
     * Lists loadtests resources in a subscription.
     * @param options The options parameters.
     */
    listBySubscription(options?: LoadTestsListBySubscriptionOptionalParams): PagedAsyncIterableIterator<LoadTestResource>;
    /**
     * Lists loadtest resources in a resource group.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: LoadTestsListByResourceGroupOptionalParams): PagedAsyncIterableIterator<LoadTestResource>;
    /**
     * Get a LoadTest resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param loadTestName Load Test name.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, loadTestName: string, options?: LoadTestsGetOptionalParams): Promise<LoadTestsGetResponse>;
    /**
     * Create or update LoadTest resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param loadTestName Load Test name.
     * @param loadTestResource LoadTest resource data
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, loadTestName: string, loadTestResource: LoadTestResource, options?: LoadTestsCreateOrUpdateOptionalParams): Promise<LoadTestsCreateOrUpdateResponse>;
    /**
     * Update a loadtest resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param loadTestName Load Test name.
     * @param loadTestResourcePatchRequestBody LoadTest resource update data
     * @param options The options parameters.
     */
    update(resourceGroupName: string, loadTestName: string, loadTestResourcePatchRequestBody: LoadTestResourcePatchRequestBody, options?: LoadTestsUpdateOptionalParams): Promise<LoadTestsUpdateResponse>;
    /**
     * Delete a LoadTest resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param loadTestName Load Test name.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, loadTestName: string, options?: LoadTestsDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Delete a LoadTest resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param loadTestName Load Test name.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, loadTestName: string, options?: LoadTestsDeleteOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface LoadTestsCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the createOrUpdate operation. */
export declare type LoadTestsCreateOrUpdateResponse = LoadTestResource;

/** Optional parameters. */
export declare interface LoadTestsDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface LoadTestsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type LoadTestsGetResponse = LoadTestResource;

/** Optional parameters. */
export declare interface LoadTestsListByResourceGroupNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroupNext operation. */
export declare type LoadTestsListByResourceGroupNextResponse = LoadTestResourcePageList;

/** Optional parameters. */
export declare interface LoadTestsListByResourceGroupOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroup operation. */
export declare type LoadTestsListByResourceGroupResponse = LoadTestResourcePageList;

/** Optional parameters. */
export declare interface LoadTestsListBySubscriptionNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listBySubscriptionNext operation. */
export declare type LoadTestsListBySubscriptionNextResponse = LoadTestResourcePageList;

/** Optional parameters. */
export declare interface LoadTestsListBySubscriptionOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listBySubscription operation. */
export declare type LoadTestsListBySubscriptionResponse = LoadTestResourcePageList;

/** Optional parameters. */
export declare interface LoadTestsUpdateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the update operation. */
export declare type LoadTestsUpdateResponse = LoadTestResource;

/** Details of a REST API operation, returned from the Resource Provider Operations API */
export declare interface Operation {
    /**
     * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly isDataAction?: boolean;
    /** Localized display information for this particular operation. */
    display?: OperationDisplay;
    /**
     * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly origin?: Origin;
    /**
     * Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly actionType?: ActionType;
}

/** Localized display information for this particular operation. */
export declare interface OperationDisplay {
    /**
     * The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provider?: string;
    /**
     * The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly resource?: string;
    /**
     * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly operation?: string;
    /**
     * The short, localized friendly description of the operation; suitable for tool tips and detailed views.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly description?: string;
}

/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */
export declare interface OperationListResult {
    /**
     * List of operations supported by the resource provider
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: Operation[];
    /**
     * URL to get the next set of operation list results (if there are any).
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Interface representing a Operations. */
export declare interface Operations {
    /**
     * Lists all the available API operations for Load Test Resource.
     * @param options The options parameters.
     */
    list(options?: OperationsListOptionalParams): PagedAsyncIterableIterator<Operation>;
}

/** Optional parameters. */
export declare interface OperationsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export declare interface OperationsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type OperationsListResponse = OperationListResult;

/**
 * Defines values for Origin. \
 * {@link KnownOrigin} can be used interchangeably with Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **system** \
 * **user,system**
 */
export declare type Origin = string;

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export declare interface Resource {
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /**
     * The name of the resource
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
}

/**
 * Defines values for ResourceState. \
 * {@link KnownResourceState} can be used interchangeably with ResourceState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded** \
 * **Failed** \
 * **Canceled** \
 * **Deleted**
 */
export declare type ResourceState = string;

/** Managed service identity (either system assigned, or none) */
export declare interface SystemAssignedServiceIdentity {
    /**
     * The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly principalId?: string;
    /**
     * The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly tenantId?: string;
    /** Type of managed service identity (either system assigned, or none). */
    type: SystemAssignedServiceIdentityType;
}

/**
 * Defines values for SystemAssignedServiceIdentityType. \
 * {@link KnownSystemAssignedServiceIdentityType} can be used interchangeably with SystemAssignedServiceIdentityType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **SystemAssigned**
 */
export declare type SystemAssignedServiceIdentityType = string;

/** Metadata pertaining to creation and last modification of the resource. */
export declare interface SystemData {
    /** The identity that created the resource. */
    createdBy?: string;
    /** The type of identity that created the resource. */
    createdByType?: CreatedByType;
    /** The timestamp of resource creation (UTC). */
    createdAt?: Date;
    /** The identity that last modified the resource. */
    lastModifiedBy?: string;
    /** The type of identity that last modified the resource. */
    lastModifiedByType?: CreatedByType;
    /** The timestamp of resource last modification (UTC) */
    lastModifiedAt?: Date;
}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export declare type TrackedResource = Resource & {
    /** Resource tags. */
    tags?: {
        [propertyName: string]: string;
    };
    /** The geo-location where the resource lives */
    location: string;
};

export { }
