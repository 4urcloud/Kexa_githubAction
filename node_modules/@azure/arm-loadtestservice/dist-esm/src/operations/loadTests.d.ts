import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { LoadTests } from "../operationsInterfaces";
import { LoadTestClient } from "../loadTestClient";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { LoadTestResource, LoadTestsListBySubscriptionOptionalParams, LoadTestsListByResourceGroupOptionalParams, LoadTestsGetOptionalParams, LoadTestsGetResponse, LoadTestsCreateOrUpdateOptionalParams, LoadTestsCreateOrUpdateResponse, LoadTestResourcePatchRequestBody, LoadTestsUpdateOptionalParams, LoadTestsUpdateResponse, LoadTestsDeleteOptionalParams } from "../models";
/** Class containing LoadTests operations. */
export declare class LoadTestsImpl implements LoadTests {
    private readonly client;
    /**
     * Initialize a new instance of the class LoadTests class.
     * @param client Reference to the service client
     */
    constructor(client: LoadTestClient);
    /**
     * Lists loadtests resources in a subscription.
     * @param options The options parameters.
     */
    listBySubscription(options?: LoadTestsListBySubscriptionOptionalParams): PagedAsyncIterableIterator<LoadTestResource>;
    private listBySubscriptionPagingPage;
    private listBySubscriptionPagingAll;
    /**
     * Lists loadtest resources in a resource group.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: LoadTestsListByResourceGroupOptionalParams): PagedAsyncIterableIterator<LoadTestResource>;
    private listByResourceGroupPagingPage;
    private listByResourceGroupPagingAll;
    /**
     * Lists loadtests resources in a subscription.
     * @param options The options parameters.
     */
    private _listBySubscription;
    /**
     * Lists loadtest resources in a resource group.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    private _listByResourceGroup;
    /**
     * Get a LoadTest resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param loadTestName Load Test name.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, loadTestName: string, options?: LoadTestsGetOptionalParams): Promise<LoadTestsGetResponse>;
    /**
     * Create or update LoadTest resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param loadTestName Load Test name.
     * @param loadTestResource LoadTest resource data
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, loadTestName: string, loadTestResource: LoadTestResource, options?: LoadTestsCreateOrUpdateOptionalParams): Promise<LoadTestsCreateOrUpdateResponse>;
    /**
     * Update a loadtest resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param loadTestName Load Test name.
     * @param loadTestResourcePatchRequestBody LoadTest resource update data
     * @param options The options parameters.
     */
    update(resourceGroupName: string, loadTestName: string, loadTestResourcePatchRequestBody: LoadTestResourcePatchRequestBody, options?: LoadTestsUpdateOptionalParams): Promise<LoadTestsUpdateResponse>;
    /**
     * Delete a LoadTest resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param loadTestName Load Test name.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, loadTestName: string, options?: LoadTestsDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Delete a LoadTest resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param loadTestName Load Test name.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, loadTestName: string, options?: LoadTestsDeleteOptionalParams): Promise<void>;
    /**
     * ListBySubscriptionNext
     * @param nextLink The nextLink from the previous successful call to the ListBySubscription method.
     * @param options The options parameters.
     */
    private _listBySubscriptionNext;
    /**
     * ListByResourceGroupNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.
     * @param options The options parameters.
     */
    private _listByResourceGroupNext;
}
//# sourceMappingURL=loadTests.d.ts.map