import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import { HanaManagementClientContext } from "../hanaManagementClientContext";
/** Class representing a HanaInstances. */
export declare class HanaInstances {
    private readonly client;
    /**
     * Create a HanaInstances.
     * @param {HanaManagementClientContext} client Reference to the service client.
     */
    constructor(client: HanaManagementClientContext);
    /**
     * Gets a list of SAP HANA instances in the specified subscription. The operations returns various
     * properties of each SAP HANA on Azure instance.
     * @summary Gets a list of SAP HANA instances in the specified subscription.
     * @param [options] The optional parameters
     * @returns Promise<Models.HanaInstancesListResponse>
     */
    list(options?: msRest.RequestOptionsBase): Promise<Models.HanaInstancesListResponse>;
    /**
     * @param callback The callback
     */
    list(callback: msRest.ServiceCallback<Models.HanaInstancesListResult>): void;
    /**
     * @param options The optional parameters
     * @param callback The callback
     */
    list(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.HanaInstancesListResult>): void;
    /**
     * Gets a list of SAP HANA instances in the specified subscription and the resource group. The
     * operations returns various properties of each SAP HANA on Azure instance.
     * @summary Gets a list of SAP HANA instances in the specified subscription and the resource group.
     * @param resourceGroupName Name of the resource group.
     * @param [options] The optional parameters
     * @returns Promise<Models.HanaInstancesListByResourceGroupResponse>
     */
    listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.HanaInstancesListByResourceGroupResponse>;
    /**
     * @param resourceGroupName Name of the resource group.
     * @param callback The callback
     */
    listByResourceGroup(resourceGroupName: string, callback: msRest.ServiceCallback<Models.HanaInstancesListResult>): void;
    /**
     * @param resourceGroupName Name of the resource group.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByResourceGroup(resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.HanaInstancesListResult>): void;
    /**
     * Gets properties of a SAP HANA instance for the specified subscription, resource group, and
     * instance name.
     * @summary Gets properties of a SAP HANA instance.
     * @param resourceGroupName Name of the resource group.
     * @param hanaInstanceName Name of the SAP HANA on Azure instance.
     * @param [options] The optional parameters
     * @returns Promise<Models.HanaInstancesGetResponse>
     */
    get(resourceGroupName: string, hanaInstanceName: string, options?: msRest.RequestOptionsBase): Promise<Models.HanaInstancesGetResponse>;
    /**
     * @param resourceGroupName Name of the resource group.
     * @param hanaInstanceName Name of the SAP HANA on Azure instance.
     * @param callback The callback
     */
    get(resourceGroupName: string, hanaInstanceName: string, callback: msRest.ServiceCallback<Models.HanaInstance>): void;
    /**
     * @param resourceGroupName Name of the resource group.
     * @param hanaInstanceName Name of the SAP HANA on Azure instance.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, hanaInstanceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.HanaInstance>): void;
    /**
     * Creates a SAP HANA instance for the specified subscription, resource group, and instance name.
     * @summary Creates a SAP HANA instance.
     * @param resourceGroupName Name of the resource group.
     * @param hanaInstanceName Name of the SAP HANA on Azure instance.
     * @param hanaInstanceParameter Request body representing a HanaInstance
     * @param [options] The optional parameters
     * @returns Promise<Models.HanaInstancesCreateResponse>
     */
    create(resourceGroupName: string, hanaInstanceName: string, hanaInstanceParameter: Models.HanaInstance, options?: msRest.RequestOptionsBase): Promise<Models.HanaInstancesCreateResponse>;
    /**
     * Deletes a SAP HANA instance with the specified subscription, resource group, and instance name.
     * @summary Deletes a SAP HANA instance.
     * @param resourceGroupName Name of the resource group.
     * @param hanaInstanceName Name of the SAP HANA on Azure instance.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroupName: string, hanaInstanceName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * Patches the Tags field of a SAP HANA instance for the specified subscription, resource group,
     * and instance name.
     * @summary Patches the Tags field of a SAP HANA instance.
     * @param resourceGroupName Name of the resource group.
     * @param hanaInstanceName Name of the SAP HANA on Azure instance.
     * @param tagsParameter Request body that only contains the new Tags field
     * @param [options] The optional parameters
     * @returns Promise<Models.HanaInstancesUpdateResponse>
     */
    update(resourceGroupName: string, hanaInstanceName: string, tagsParameter: Models.Tags, options?: msRest.RequestOptionsBase): Promise<Models.HanaInstancesUpdateResponse>;
    /**
     * @param resourceGroupName Name of the resource group.
     * @param hanaInstanceName Name of the SAP HANA on Azure instance.
     * @param tagsParameter Request body that only contains the new Tags field
     * @param callback The callback
     */
    update(resourceGroupName: string, hanaInstanceName: string, tagsParameter: Models.Tags, callback: msRest.ServiceCallback<Models.HanaInstance>): void;
    /**
     * @param resourceGroupName Name of the resource group.
     * @param hanaInstanceName Name of the SAP HANA on Azure instance.
     * @param tagsParameter Request body that only contains the new Tags field
     * @param options The optional parameters
     * @param callback The callback
     */
    update(resourceGroupName: string, hanaInstanceName: string, tagsParameter: Models.Tags, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.HanaInstance>): void;
    /**
     * The operation to restart a SAP HANA instance.
     * @param resourceGroupName Name of the resource group.
     * @param hanaInstanceName Name of the SAP HANA on Azure instance.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    restart(resourceGroupName: string, hanaInstanceName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * The operation to start a SAP HANA instance.
     * @param resourceGroupName Name of the resource group.
     * @param hanaInstanceName Name of the SAP HANA on Azure instance.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    start(resourceGroupName: string, hanaInstanceName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * The operation to shutdown a SAP HANA instance.
     * @param resourceGroupName Name of the resource group.
     * @param hanaInstanceName Name of the SAP HANA on Azure instance.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    shutdown(resourceGroupName: string, hanaInstanceName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * Creates a SAP HANA instance for the specified subscription, resource group, and instance name.
     * @summary Creates a SAP HANA instance.
     * @param resourceGroupName Name of the resource group.
     * @param hanaInstanceName Name of the SAP HANA on Azure instance.
     * @param hanaInstanceParameter Request body representing a HanaInstance
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginCreate(resourceGroupName: string, hanaInstanceName: string, hanaInstanceParameter: Models.HanaInstance, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Deletes a SAP HANA instance with the specified subscription, resource group, and instance name.
     * @summary Deletes a SAP HANA instance.
     * @param resourceGroupName Name of the resource group.
     * @param hanaInstanceName Name of the SAP HANA on Azure instance.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginDeleteMethod(resourceGroupName: string, hanaInstanceName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * The operation to restart a SAP HANA instance.
     * @param resourceGroupName Name of the resource group.
     * @param hanaInstanceName Name of the SAP HANA on Azure instance.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginRestart(resourceGroupName: string, hanaInstanceName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * The operation to start a SAP HANA instance.
     * @param resourceGroupName Name of the resource group.
     * @param hanaInstanceName Name of the SAP HANA on Azure instance.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginStart(resourceGroupName: string, hanaInstanceName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * The operation to shutdown a SAP HANA instance.
     * @param resourceGroupName Name of the resource group.
     * @param hanaInstanceName Name of the SAP HANA on Azure instance.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginShutdown(resourceGroupName: string, hanaInstanceName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Gets a list of SAP HANA instances in the specified subscription. The operations returns various
     * properties of each SAP HANA on Azure instance.
     * @summary Gets a list of SAP HANA instances in the specified subscription.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.HanaInstancesListNextResponse>
     */
    listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.HanaInstancesListNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.HanaInstancesListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.HanaInstancesListResult>): void;
    /**
     * Gets a list of SAP HANA instances in the specified subscription and the resource group. The
     * operations returns various properties of each SAP HANA on Azure instance.
     * @summary Gets a list of SAP HANA instances in the specified subscription and the resource group.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.HanaInstancesListByResourceGroupNextResponse>
     */
    listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.HanaInstancesListByResourceGroupNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByResourceGroupNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.HanaInstancesListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByResourceGroupNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.HanaInstancesListResult>): void;
}
//# sourceMappingURL=hanaInstances.d.ts.map