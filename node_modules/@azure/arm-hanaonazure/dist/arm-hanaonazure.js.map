{"version":3,"file":"arm-hanaonazure.js","sources":["../node_modules/tslib/tslib.es6.js","../src/models/index.ts","../src/models/mappers.ts","../src/models/operationsMappers.ts","../src/models/parameters.ts","../src/operations/operations.ts","../src/models/hanaInstancesMappers.ts","../src/operations/hanaInstances.ts","../src/models/sapMonitorsMappers.ts","../src/operations/sapMonitors.ts","../src/hanaManagementClientContext.ts","../src/hanaManagementClient.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { BaseResource, CloudError, AzureServiceClientOptions } from \"@azure/ms-rest-azure-js\";\nimport * as msRest from \"@azure/ms-rest-js\";\n\nexport { BaseResource, CloudError };\n\n/**\n * The resource model definition.\n */\nexport interface Resource extends BaseResource {\n  /**\n   * Resource ID\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Resource name\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * Resource type\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly type?: string;\n  /**\n   * Resource location\n   */\n  location?: string;\n  /**\n   * Resource tags\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly tags?: { [propertyName: string]: string };\n}\n\n/**\n * Specifies the hardware settings for the HANA instance.\n */\nexport interface HardwareProfile {\n  /**\n   * Name of the hardware type (vendor and/or their product name). Possible values include:\n   * 'Cisco_UCS', 'HPE'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly hardwareType?: HanaHardwareTypeNamesEnum;\n  /**\n   * Specifies the HANA instance SKU. Possible values include: 'S72m', 'S144m', 'S72', 'S144',\n   * 'S192', 'S192m', 'S192xm', 'S96', 'S112', 'S224', 'S224m', 'S224om', 'S224oo', 'S224oom',\n   * 'S224ooo', 'S384', 'S384m', 'S384xm', 'S384xxm', 'S576m', 'S576xm', 'S768', 'S768m', 'S768xm',\n   * 'S960m'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly hanaInstanceSize?: HanaInstanceSizeNamesEnum;\n}\n\n/**\n * Specifies the disk information fo the HANA instance\n */\nexport interface Disk {\n  /**\n   * The disk name.\n   */\n  name?: string;\n  /**\n   * Specifies the size of an empty data disk in gigabytes.\n   */\n  diskSizeGB?: number;\n  /**\n   * Specifies the logical unit number of the data disk. This value is used to identify data disks\n   * within the VM and therefore must be unique for each data disk attached to a VM.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly lun?: number;\n}\n\n/**\n * Specifies the storage settings for the HANA instance disks.\n */\nexport interface StorageProfile {\n  /**\n   * IP Address to connect to storage.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly nfsIpAddress?: string;\n  /**\n   * Specifies information about the operating system disk used by the hana instance.\n   */\n  osDisks?: Disk[];\n}\n\n/**\n * Specifies the operating system settings for the HANA instance.\n */\nexport interface OSProfile {\n  /**\n   * Specifies the host OS name of the HANA instance.\n   */\n  computerName?: string;\n  /**\n   * This property allows you to specify the type of the OS.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly osType?: string;\n  /**\n   * Specifies version of operating system.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly version?: string;\n  /**\n   * Specifies the SSH public key used to access the operating system.\n   */\n  sshPublicKey?: string;\n}\n\n/**\n * Specifies the IP address of the network interface.\n */\nexport interface IpAddress {\n  /**\n   * Specifies the IP address of the network interface.\n   */\n  ipAddress?: string;\n}\n\n/**\n * Specifies the network settings for the HANA instance disks.\n */\nexport interface NetworkProfile {\n  /**\n   * Specifies the network interfaces for the HANA instance.\n   */\n  networkInterfaces?: IpAddress[];\n  /**\n   * Specifies the circuit id for connecting to express route.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly circuitId?: string;\n}\n\n/**\n * HANA instance info on Azure (ARM properties and HANA properties)\n */\nexport interface HanaInstance extends Resource {\n  /**\n   * Specifies the hardware settings for the HANA instance.\n   */\n  hardwareProfile?: HardwareProfile;\n  /**\n   * Specifies the storage settings for the HANA instance disks.\n   */\n  storageProfile?: StorageProfile;\n  /**\n   * Specifies the operating system settings for the HANA instance.\n   */\n  osProfile?: OSProfile;\n  /**\n   * Specifies the network settings for the HANA instance.\n   */\n  networkProfile?: NetworkProfile;\n  /**\n   * Specifies the HANA instance unique ID.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly hanaInstanceId?: string;\n  /**\n   * Resource power state. Possible values include: 'starting', 'started', 'stopping', 'stopped',\n   * 'restarting', 'unknown'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly powerState?: HanaInstancePowerStateEnum;\n  /**\n   * Resource proximity placement group\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly proximityPlacementGroup?: string;\n  /**\n   * Hardware revision of a HANA instance\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly hwRevision?: string;\n  /**\n   * ARM ID of another HanaInstance that will share a network with this HanaInstance\n   */\n  partnerNodeId?: string;\n  /**\n   * State of provisioning of the HanaInstance. Possible values include: 'Accepted', 'Creating',\n   * 'Updating', 'Failed', 'Succeeded', 'Deleting', 'Migrating'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly provisioningState?: HanaProvisioningStatesEnum;\n}\n\n/**\n * Detailed HANA operation information\n */\nexport interface Display {\n  /**\n   * The localized friendly form of the resource provider name. This form is also expected to\n   * include the publisher/company responsible. Use Title Casing. Begin with \"Microsoft\" for 1st\n   * party services.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly provider?: string;\n  /**\n   * The localized friendly form of the resource type related to this action/operation. This form\n   * should match the public documentation for the resource provider. Use Title Casing. For\n   * examples, refer to the “name” section.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly resource?: string;\n  /**\n   * The localized friendly name for the operation as shown to the user. This name should be\n   * concise (to fit in drop downs), but clear (self-documenting). Use Title Casing and include the\n   * entity/resource to which it applies.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly operation?: string;\n  /**\n   * The localized friendly description for the operation as shown to the user. This description\n   * should be thorough, yet concise. It will be used in tool-tips and detailed views.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * The intended executor of the operation; governs the display of the operation in the RBAC UX\n   * and the audit logs UX. Default value is 'user,system'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly origin?: string;\n}\n\n/**\n * HANA operation information\n */\nexport interface Operation {\n  /**\n   * The name of the operation being performed on this particular object. This name should match\n   * the action name that appears in RBAC / the event service.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * Displayed HANA operation information\n   */\n  display?: Display;\n}\n\n/**\n * Describes the format of Error response.\n */\nexport interface ErrorResponse {\n  /**\n   * Error code\n   */\n  code?: string;\n  /**\n   * Error message indicating why the operation failed.\n   */\n  message?: string;\n}\n\n/**\n * Tags field of the HANA instance.\n */\nexport interface Tags {\n  /**\n   * Tags field of the HANA instance.\n   */\n  tags?: { [propertyName: string]: string };\n}\n\n/**\n * Details needed to monitor a Hana Instance\n */\nexport interface MonitoringDetails {\n  /**\n   * ARM ID of an Azure Subnet with access to the HANA instance.\n   */\n  hanaSubnet?: string;\n  /**\n   * Hostname of the HANA Instance blade.\n   */\n  hanaHostname?: string;\n  /**\n   * Name of the database itself.\n   */\n  hanaDbName?: string;\n  /**\n   * The port number of the tenant DB. Used to connect to the DB.\n   */\n  hanaDbSqlPort?: number;\n  /**\n   * Username for the HANA database to login to for monitoring\n   */\n  hanaDbUsername?: string;\n  /**\n   * Password for the HANA database to login for monitoring\n   */\n  hanaDbPassword?: string;\n}\n\n/**\n * SAP monitor info on Azure (ARM properties and SAP monitor properties)\n */\nexport interface SapMonitor extends Resource {\n  /**\n   * Specifies the SAP monitor unique ID.\n   */\n  hanaSubnet?: string;\n  /**\n   * Hostname of the HANA instance.\n   */\n  hanaHostname?: string;\n  /**\n   * Database name of the HANA instance.\n   */\n  hanaDbName?: string;\n  /**\n   * Database port of the HANA instance.\n   */\n  hanaDbSqlPort?: number;\n  /**\n   * Database username of the HANA instance.\n   */\n  hanaDbUsername?: string;\n  /**\n   * Database password of the HANA instance.\n   */\n  hanaDbPassword?: string;\n  /**\n   * KeyVault URL link to the password for the HANA database.\n   */\n  hanaDbPasswordKeyVaultUrl?: string;\n  /**\n   * MSI ID passed by customer which has access to customer's KeyVault and to be assigned to the\n   * Collector VM.\n   */\n  hanaDbCredentialsMsiId?: string;\n  /**\n   * Key Vault ID containing customer's HANA credentials.\n   */\n  keyVaultId?: string;\n  /**\n   * State of provisioning of the HanaInstance. Possible values include: 'Accepted', 'Creating',\n   * 'Updating', 'Failed', 'Succeeded', 'Deleting', 'Migrating'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly provisioningState?: HanaProvisioningStatesEnum;\n  /**\n   * The name of the resource group the SAP Monitor resources get deployed into.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly managedResourceGroupName?: string;\n  /**\n   * The ARM ID of the Log Analytics Workspace that is used for monitoring\n   */\n  logAnalyticsWorkspaceArmId?: string;\n  /**\n   * The value indicating whether to send analytics to Microsoft\n   */\n  enableCustomerAnalytics?: boolean;\n  /**\n   * The workspace ID of the log analytics workspace to be used for monitoring\n   */\n  logAnalyticsWorkspaceId?: string;\n  /**\n   * The shared key of the log analytics workspace that is used for monitoring\n   */\n  logAnalyticsWorkspaceSharedKey?: string;\n}\n\n/**\n * An interface representing HanaManagementClientOptions.\n */\nexport interface HanaManagementClientOptions extends AzureServiceClientOptions {\n  baseUri?: string;\n}\n\n/**\n * @interface\n * List of HANA operations\n * @extends Array<Operation>\n */\nexport interface OperationList extends Array<Operation> {\n}\n\n/**\n * @interface\n * The response from the List HANA Instances operation.\n * @extends Array<HanaInstance>\n */\nexport interface HanaInstancesListResult extends Array<HanaInstance> {\n  /**\n   * The URL to get the next set of HANA instances.\n   */\n  nextLink?: string;\n}\n\n/**\n * @interface\n * The response from the List SAP monitors operation.\n * @extends Array<SapMonitor>\n */\nexport interface SapMonitorListResult extends Array<SapMonitor> {\n  /**\n   * The URL to get the next set of SAP monitors.\n   */\n  nextLink?: string;\n}\n\n/**\n * Defines values for HanaHardwareTypeNamesEnum.\n * Possible values include: 'Cisco_UCS', 'HPE'\n * @readonly\n * @enum {string}\n */\nexport type HanaHardwareTypeNamesEnum = 'Cisco_UCS' | 'HPE';\n\n/**\n * Defines values for HanaInstanceSizeNamesEnum.\n * Possible values include: 'S72m', 'S144m', 'S72', 'S144', 'S192', 'S192m', 'S192xm', 'S96',\n * 'S112', 'S224', 'S224m', 'S224om', 'S224oo', 'S224oom', 'S224ooo', 'S384', 'S384m', 'S384xm',\n * 'S384xxm', 'S576m', 'S576xm', 'S768', 'S768m', 'S768xm', 'S960m'\n * @readonly\n * @enum {string}\n */\nexport type HanaInstanceSizeNamesEnum = 'S72m' | 'S144m' | 'S72' | 'S144' | 'S192' | 'S192m' | 'S192xm' | 'S96' | 'S112' | 'S224' | 'S224m' | 'S224om' | 'S224oo' | 'S224oom' | 'S224ooo' | 'S384' | 'S384m' | 'S384xm' | 'S384xxm' | 'S576m' | 'S576xm' | 'S768' | 'S768m' | 'S768xm' | 'S960m';\n\n/**\n * Defines values for HanaInstancePowerStateEnum.\n * Possible values include: 'starting', 'started', 'stopping', 'stopped', 'restarting', 'unknown'\n * @readonly\n * @enum {string}\n */\nexport type HanaInstancePowerStateEnum = 'starting' | 'started' | 'stopping' | 'stopped' | 'restarting' | 'unknown';\n\n/**\n * Defines values for HanaProvisioningStatesEnum.\n * Possible values include: 'Accepted', 'Creating', 'Updating', 'Failed', 'Succeeded', 'Deleting',\n * 'Migrating'\n * @readonly\n * @enum {string}\n */\nexport type HanaProvisioningStatesEnum = 'Accepted' | 'Creating' | 'Updating' | 'Failed' | 'Succeeded' | 'Deleting' | 'Migrating';\n\n/**\n * Contains response data for the list operation.\n */\nexport type OperationsListResponse = OperationList & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: OperationList;\n    };\n};\n\n/**\n * Contains response data for the list operation.\n */\nexport type HanaInstancesListResponse = HanaInstancesListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: HanaInstancesListResult;\n    };\n};\n\n/**\n * Contains response data for the listByResourceGroup operation.\n */\nexport type HanaInstancesListByResourceGroupResponse = HanaInstancesListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: HanaInstancesListResult;\n    };\n};\n\n/**\n * Contains response data for the get operation.\n */\nexport type HanaInstancesGetResponse = HanaInstance & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: HanaInstance;\n    };\n};\n\n/**\n * Contains response data for the create operation.\n */\nexport type HanaInstancesCreateResponse = HanaInstance & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: HanaInstance;\n    };\n};\n\n/**\n * Contains response data for the update operation.\n */\nexport type HanaInstancesUpdateResponse = HanaInstance & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: HanaInstance;\n    };\n};\n\n/**\n * Contains response data for the beginCreate operation.\n */\nexport type HanaInstancesBeginCreateResponse = HanaInstance & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: HanaInstance;\n    };\n};\n\n/**\n * Contains response data for the listNext operation.\n */\nexport type HanaInstancesListNextResponse = HanaInstancesListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: HanaInstancesListResult;\n    };\n};\n\n/**\n * Contains response data for the listByResourceGroupNext operation.\n */\nexport type HanaInstancesListByResourceGroupNextResponse = HanaInstancesListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: HanaInstancesListResult;\n    };\n};\n\n/**\n * Contains response data for the list operation.\n */\nexport type SapMonitorsListResponse = SapMonitorListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: SapMonitorListResult;\n    };\n};\n\n/**\n * Contains response data for the get operation.\n */\nexport type SapMonitorsGetResponse = SapMonitor & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: SapMonitor;\n    };\n};\n\n/**\n * Contains response data for the create operation.\n */\nexport type SapMonitorsCreateResponse = SapMonitor & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: SapMonitor;\n    };\n};\n\n/**\n * Contains response data for the update operation.\n */\nexport type SapMonitorsUpdateResponse = SapMonitor & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: SapMonitor;\n    };\n};\n\n/**\n * Contains response data for the beginCreate operation.\n */\nexport type SapMonitorsBeginCreateResponse = SapMonitor & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: SapMonitor;\n    };\n};\n\n/**\n * Contains response data for the listNext operation.\n */\nexport type SapMonitorsListNextResponse = SapMonitorListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: SapMonitorListResult;\n    };\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { CloudErrorMapper, BaseResourceMapper } from \"@azure/ms-rest-azure-js\";\nimport * as msRest from \"@azure/ms-rest-js\";\n\nexport const CloudError = CloudErrorMapper;\nexport const BaseResource = BaseResourceMapper;\n\nexport const Resource: msRest.CompositeMapper = {\n  serializedName: \"Resource\",\n  type: {\n    name: \"Composite\",\n    className: \"Resource\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        readOnly: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        readOnly: true,\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        readOnly: true,\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const HardwareProfile: msRest.CompositeMapper = {\n  serializedName: \"HardwareProfile\",\n  type: {\n    name: \"Composite\",\n    className: \"HardwareProfile\",\n    modelProperties: {\n      hardwareType: {\n        readOnly: true,\n        serializedName: \"hardwareType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      hanaInstanceSize: {\n        readOnly: true,\n        serializedName: \"hanaInstanceSize\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Disk: msRest.CompositeMapper = {\n  serializedName: \"Disk\",\n  type: {\n    name: \"Composite\",\n    className: \"Disk\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      diskSizeGB: {\n        serializedName: \"diskSizeGB\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      lun: {\n        readOnly: true,\n        serializedName: \"lun\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const StorageProfile: msRest.CompositeMapper = {\n  serializedName: \"StorageProfile\",\n  type: {\n    name: \"Composite\",\n    className: \"StorageProfile\",\n    modelProperties: {\n      nfsIpAddress: {\n        readOnly: true,\n        serializedName: \"nfsIpAddress\",\n        type: {\n          name: \"String\"\n        }\n      },\n      osDisks: {\n        serializedName: \"osDisks\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Disk\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const OSProfile: msRest.CompositeMapper = {\n  serializedName: \"OSProfile\",\n  type: {\n    name: \"Composite\",\n    className: \"OSProfile\",\n    modelProperties: {\n      computerName: {\n        serializedName: \"computerName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      osType: {\n        readOnly: true,\n        serializedName: \"osType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        readOnly: true,\n        serializedName: \"version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sshPublicKey: {\n        serializedName: \"sshPublicKey\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const IpAddress: msRest.CompositeMapper = {\n  serializedName: \"IpAddress\",\n  type: {\n    name: \"Composite\",\n    className: \"IpAddress\",\n    modelProperties: {\n      ipAddress: {\n        serializedName: \"ipAddress\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NetworkProfile: msRest.CompositeMapper = {\n  serializedName: \"NetworkProfile\",\n  type: {\n    name: \"Composite\",\n    className: \"NetworkProfile\",\n    modelProperties: {\n      networkInterfaces: {\n        serializedName: \"networkInterfaces\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"IpAddress\"\n            }\n          }\n        }\n      },\n      circuitId: {\n        readOnly: true,\n        serializedName: \"circuitId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const HanaInstance: msRest.CompositeMapper = {\n  serializedName: \"HanaInstance\",\n  type: {\n    name: \"Composite\",\n    className: \"HanaInstance\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      hardwareProfile: {\n        serializedName: \"properties.hardwareProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"HardwareProfile\"\n        }\n      },\n      storageProfile: {\n        serializedName: \"properties.storageProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"StorageProfile\"\n        }\n      },\n      osProfile: {\n        serializedName: \"properties.osProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"OSProfile\"\n        }\n      },\n      networkProfile: {\n        serializedName: \"properties.networkProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"NetworkProfile\"\n        }\n      },\n      hanaInstanceId: {\n        readOnly: true,\n        serializedName: \"properties.hanaInstanceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      powerState: {\n        readOnly: true,\n        serializedName: \"properties.powerState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      proximityPlacementGroup: {\n        readOnly: true,\n        serializedName: \"properties.proximityPlacementGroup\",\n        type: {\n          name: \"String\"\n        }\n      },\n      hwRevision: {\n        readOnly: true,\n        serializedName: \"properties.hwRevision\",\n        type: {\n          name: \"String\"\n        }\n      },\n      partnerNodeId: {\n        serializedName: \"properties.partnerNodeId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        readOnly: true,\n        serializedName: \"properties.provisioningState\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Display: msRest.CompositeMapper = {\n  serializedName: \"Display\",\n  type: {\n    name: \"Composite\",\n    className: \"Display\",\n    modelProperties: {\n      provider: {\n        readOnly: true,\n        serializedName: \"provider\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resource: {\n        readOnly: true,\n        serializedName: \"resource\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operation: {\n        readOnly: true,\n        serializedName: \"operation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        readOnly: true,\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      origin: {\n        readOnly: true,\n        serializedName: \"origin\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Operation: msRest.CompositeMapper = {\n  serializedName: \"Operation\",\n  type: {\n    name: \"Composite\",\n    className: \"Operation\",\n    modelProperties: {\n      name: {\n        readOnly: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      display: {\n        serializedName: \"display\",\n        type: {\n          name: \"Composite\",\n          className: \"Display\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorResponse: msRest.CompositeMapper = {\n  serializedName: \"ErrorResponse\",\n  type: {\n    name: \"Composite\",\n    className: \"ErrorResponse\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Tags: msRest.CompositeMapper = {\n  serializedName: \"Tags\",\n  type: {\n    name: \"Composite\",\n    className: \"Tags\",\n    modelProperties: {\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MonitoringDetails: msRest.CompositeMapper = {\n  serializedName: \"MonitoringDetails\",\n  type: {\n    name: \"Composite\",\n    className: \"MonitoringDetails\",\n    modelProperties: {\n      hanaSubnet: {\n        serializedName: \"hanaSubnet\",\n        type: {\n          name: \"String\"\n        }\n      },\n      hanaHostname: {\n        serializedName: \"hanaHostname\",\n        type: {\n          name: \"String\"\n        }\n      },\n      hanaDbName: {\n        serializedName: \"hanaDbName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      hanaDbSqlPort: {\n        serializedName: \"hanaDbSqlPort\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      hanaDbUsername: {\n        serializedName: \"hanaDbUsername\",\n        type: {\n          name: \"String\"\n        }\n      },\n      hanaDbPassword: {\n        serializedName: \"hanaDbPassword\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SapMonitor: msRest.CompositeMapper = {\n  serializedName: \"SapMonitor\",\n  type: {\n    name: \"Composite\",\n    className: \"SapMonitor\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      hanaSubnet: {\n        serializedName: \"properties.hanaSubnet\",\n        type: {\n          name: \"String\"\n        }\n      },\n      hanaHostname: {\n        serializedName: \"properties.hanaHostname\",\n        type: {\n          name: \"String\"\n        }\n      },\n      hanaDbName: {\n        serializedName: \"properties.hanaDbName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      hanaDbSqlPort: {\n        serializedName: \"properties.hanaDbSqlPort\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      hanaDbUsername: {\n        serializedName: \"properties.hanaDbUsername\",\n        type: {\n          name: \"String\"\n        }\n      },\n      hanaDbPassword: {\n        serializedName: \"properties.hanaDbPassword\",\n        type: {\n          name: \"String\"\n        }\n      },\n      hanaDbPasswordKeyVaultUrl: {\n        serializedName: \"properties.hanaDbPasswordKeyVaultUrl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      hanaDbCredentialsMsiId: {\n        serializedName: \"properties.hanaDbCredentialsMsiId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      keyVaultId: {\n        serializedName: \"properties.keyVaultId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        readOnly: true,\n        serializedName: \"properties.provisioningState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      managedResourceGroupName: {\n        readOnly: true,\n        serializedName: \"properties.managedResourceGroupName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      logAnalyticsWorkspaceArmId: {\n        serializedName: \"properties.logAnalyticsWorkspaceArmId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      enableCustomerAnalytics: {\n        serializedName: \"properties.enableCustomerAnalytics\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      logAnalyticsWorkspaceId: {\n        serializedName: \"properties.logAnalyticsWorkspaceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      logAnalyticsWorkspaceSharedKey: {\n        serializedName: \"properties.logAnalyticsWorkspaceSharedKey\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationList: msRest.CompositeMapper = {\n  serializedName: \"OperationList\",\n  type: {\n    name: \"Composite\",\n    className: \"OperationList\",\n    modelProperties: {\n      value: {\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Operation\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const HanaInstancesListResult: msRest.CompositeMapper = {\n  serializedName: \"HanaInstancesListResult\",\n  type: {\n    name: \"Composite\",\n    className: \"HanaInstancesListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"HanaInstance\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SapMonitorListResult: msRest.CompositeMapper = {\n  serializedName: \"SapMonitorListResult\",\n  type: {\n    name: \"Composite\",\n    className: \"SapMonitorListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SapMonitor\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  Display,\n  ErrorResponse,\n  Operation,\n  OperationList\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\n\nexport const acceptLanguage: msRest.OperationParameter = {\n  parameterPath: \"acceptLanguage\",\n  mapper: {\n    serializedName: \"accept-language\",\n    defaultValue: 'en-US',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const apiVersion: msRest.OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    required: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const hanaInstanceName: msRest.OperationURLParameter = {\n  parameterPath: \"hanaInstanceName\",\n  mapper: {\n    required: true,\n    serializedName: \"hanaInstanceName\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const nextPageLink: msRest.OperationURLParameter = {\n  parameterPath: \"nextPageLink\",\n  mapper: {\n    required: true,\n    serializedName: \"nextLink\",\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\nexport const resourceGroupName: msRest.OperationURLParameter = {\n  parameterPath: \"resourceGroupName\",\n  mapper: {\n    required: true,\n    serializedName: \"resourceGroupName\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const sapMonitorName: msRest.OperationURLParameter = {\n  parameterPath: \"sapMonitorName\",\n  mapper: {\n    required: true,\n    serializedName: \"sapMonitorName\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const subscriptionId: msRest.OperationURLParameter = {\n  parameterPath: \"subscriptionId\",\n  mapper: {\n    required: true,\n    serializedName: \"subscriptionId\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/operationsMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { HanaManagementClientContext } from \"../hanaManagementClientContext\";\n\n/** Class representing a Operations. */\nexport class Operations {\n  private readonly client: HanaManagementClientContext;\n\n  /**\n   * Create a Operations.\n   * @param {HanaManagementClientContext} client Reference to the service client.\n   */\n  constructor(client: HanaManagementClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of SAP HANA management operations.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.OperationsListResponse>\n   */\n  list(options?: msRest.RequestOptionsBase): Promise<Models.OperationsListResponse>;\n  /**\n   * @param callback The callback\n   */\n  list(callback: msRest.ServiceCallback<Models.OperationList>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  list(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.OperationList>): void;\n  list(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.OperationList>, callback?: msRest.ServiceCallback<Models.OperationList>): Promise<Models.OperationsListResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      listOperationSpec,\n      callback) as Promise<Models.OperationsListResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst listOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"providers/Microsoft.HanaOnAzure/operations\",\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  BaseResource,\n  Disk,\n  ErrorResponse,\n  HanaInstance,\n  HanaInstancesListResult,\n  HardwareProfile,\n  IpAddress,\n  NetworkProfile,\n  OSProfile,\n  Resource,\n  SapMonitor,\n  StorageProfile,\n  Tags\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as msRestAzure from \"@azure/ms-rest-azure-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/hanaInstancesMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { HanaManagementClientContext } from \"../hanaManagementClientContext\";\n\n/** Class representing a HanaInstances. */\nexport class HanaInstances {\n  private readonly client: HanaManagementClientContext;\n\n  /**\n   * Create a HanaInstances.\n   * @param {HanaManagementClientContext} client Reference to the service client.\n   */\n  constructor(client: HanaManagementClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of SAP HANA instances in the specified subscription. The operations returns various\n   * properties of each SAP HANA on Azure instance.\n   * @summary Gets a list of SAP HANA instances in the specified subscription.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.HanaInstancesListResponse>\n   */\n  list(options?: msRest.RequestOptionsBase): Promise<Models.HanaInstancesListResponse>;\n  /**\n   * @param callback The callback\n   */\n  list(callback: msRest.ServiceCallback<Models.HanaInstancesListResult>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  list(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.HanaInstancesListResult>): void;\n  list(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.HanaInstancesListResult>, callback?: msRest.ServiceCallback<Models.HanaInstancesListResult>): Promise<Models.HanaInstancesListResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      listOperationSpec,\n      callback) as Promise<Models.HanaInstancesListResponse>;\n  }\n\n  /**\n   * Gets a list of SAP HANA instances in the specified subscription and the resource group. The\n   * operations returns various properties of each SAP HANA on Azure instance.\n   * @summary Gets a list of SAP HANA instances in the specified subscription and the resource group.\n   * @param resourceGroupName Name of the resource group.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.HanaInstancesListByResourceGroupResponse>\n   */\n  listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.HanaInstancesListByResourceGroupResponse>;\n  /**\n   * @param resourceGroupName Name of the resource group.\n   * @param callback The callback\n   */\n  listByResourceGroup(resourceGroupName: string, callback: msRest.ServiceCallback<Models.HanaInstancesListResult>): void;\n  /**\n   * @param resourceGroupName Name of the resource group.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listByResourceGroup(resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.HanaInstancesListResult>): void;\n  listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.HanaInstancesListResult>, callback?: msRest.ServiceCallback<Models.HanaInstancesListResult>): Promise<Models.HanaInstancesListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        options\n      },\n      listByResourceGroupOperationSpec,\n      callback) as Promise<Models.HanaInstancesListByResourceGroupResponse>;\n  }\n\n  /**\n   * Gets properties of a SAP HANA instance for the specified subscription, resource group, and\n   * instance name.\n   * @summary Gets properties of a SAP HANA instance.\n   * @param resourceGroupName Name of the resource group.\n   * @param hanaInstanceName Name of the SAP HANA on Azure instance.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.HanaInstancesGetResponse>\n   */\n  get(resourceGroupName: string, hanaInstanceName: string, options?: msRest.RequestOptionsBase): Promise<Models.HanaInstancesGetResponse>;\n  /**\n   * @param resourceGroupName Name of the resource group.\n   * @param hanaInstanceName Name of the SAP HANA on Azure instance.\n   * @param callback The callback\n   */\n  get(resourceGroupName: string, hanaInstanceName: string, callback: msRest.ServiceCallback<Models.HanaInstance>): void;\n  /**\n   * @param resourceGroupName Name of the resource group.\n   * @param hanaInstanceName Name of the SAP HANA on Azure instance.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  get(resourceGroupName: string, hanaInstanceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.HanaInstance>): void;\n  get(resourceGroupName: string, hanaInstanceName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.HanaInstance>, callback?: msRest.ServiceCallback<Models.HanaInstance>): Promise<Models.HanaInstancesGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        hanaInstanceName,\n        options\n      },\n      getOperationSpec,\n      callback) as Promise<Models.HanaInstancesGetResponse>;\n  }\n\n  /**\n   * Creates a SAP HANA instance for the specified subscription, resource group, and instance name.\n   * @summary Creates a SAP HANA instance.\n   * @param resourceGroupName Name of the resource group.\n   * @param hanaInstanceName Name of the SAP HANA on Azure instance.\n   * @param hanaInstanceParameter Request body representing a HanaInstance\n   * @param [options] The optional parameters\n   * @returns Promise<Models.HanaInstancesCreateResponse>\n   */\n  create(resourceGroupName: string, hanaInstanceName: string, hanaInstanceParameter: Models.HanaInstance, options?: msRest.RequestOptionsBase): Promise<Models.HanaInstancesCreateResponse> {\n    return this.beginCreate(resourceGroupName,hanaInstanceName,hanaInstanceParameter,options)\n      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.HanaInstancesCreateResponse>;\n  }\n\n  /**\n   * Deletes a SAP HANA instance with the specified subscription, resource group, and instance name.\n   * @summary Deletes a SAP HANA instance.\n   * @param resourceGroupName Name of the resource group.\n   * @param hanaInstanceName Name of the SAP HANA on Azure instance.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  deleteMethod(resourceGroupName: string, hanaInstanceName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse> {\n    return this.beginDeleteMethod(resourceGroupName,hanaInstanceName,options)\n      .then(lroPoller => lroPoller.pollUntilFinished());\n  }\n\n  /**\n   * Patches the Tags field of a SAP HANA instance for the specified subscription, resource group,\n   * and instance name.\n   * @summary Patches the Tags field of a SAP HANA instance.\n   * @param resourceGroupName Name of the resource group.\n   * @param hanaInstanceName Name of the SAP HANA on Azure instance.\n   * @param tagsParameter Request body that only contains the new Tags field\n   * @param [options] The optional parameters\n   * @returns Promise<Models.HanaInstancesUpdateResponse>\n   */\n  update(resourceGroupName: string, hanaInstanceName: string, tagsParameter: Models.Tags, options?: msRest.RequestOptionsBase): Promise<Models.HanaInstancesUpdateResponse>;\n  /**\n   * @param resourceGroupName Name of the resource group.\n   * @param hanaInstanceName Name of the SAP HANA on Azure instance.\n   * @param tagsParameter Request body that only contains the new Tags field\n   * @param callback The callback\n   */\n  update(resourceGroupName: string, hanaInstanceName: string, tagsParameter: Models.Tags, callback: msRest.ServiceCallback<Models.HanaInstance>): void;\n  /**\n   * @param resourceGroupName Name of the resource group.\n   * @param hanaInstanceName Name of the SAP HANA on Azure instance.\n   * @param tagsParameter Request body that only contains the new Tags field\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  update(resourceGroupName: string, hanaInstanceName: string, tagsParameter: Models.Tags, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.HanaInstance>): void;\n  update(resourceGroupName: string, hanaInstanceName: string, tagsParameter: Models.Tags, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.HanaInstance>, callback?: msRest.ServiceCallback<Models.HanaInstance>): Promise<Models.HanaInstancesUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        hanaInstanceName,\n        tagsParameter,\n        options\n      },\n      updateOperationSpec,\n      callback) as Promise<Models.HanaInstancesUpdateResponse>;\n  }\n\n  /**\n   * The operation to restart a SAP HANA instance.\n   * @param resourceGroupName Name of the resource group.\n   * @param hanaInstanceName Name of the SAP HANA on Azure instance.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  restart(resourceGroupName: string, hanaInstanceName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse> {\n    return this.beginRestart(resourceGroupName,hanaInstanceName,options)\n      .then(lroPoller => lroPoller.pollUntilFinished());\n  }\n\n  /**\n   * The operation to start a SAP HANA instance.\n   * @param resourceGroupName Name of the resource group.\n   * @param hanaInstanceName Name of the SAP HANA on Azure instance.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  start(resourceGroupName: string, hanaInstanceName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse> {\n    return this.beginStart(resourceGroupName,hanaInstanceName,options)\n      .then(lroPoller => lroPoller.pollUntilFinished());\n  }\n\n  /**\n   * The operation to shutdown a SAP HANA instance.\n   * @param resourceGroupName Name of the resource group.\n   * @param hanaInstanceName Name of the SAP HANA on Azure instance.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  shutdown(resourceGroupName: string, hanaInstanceName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse> {\n    return this.beginShutdown(resourceGroupName,hanaInstanceName,options)\n      .then(lroPoller => lroPoller.pollUntilFinished());\n  }\n\n  /**\n   * Creates a SAP HANA instance for the specified subscription, resource group, and instance name.\n   * @summary Creates a SAP HANA instance.\n   * @param resourceGroupName Name of the resource group.\n   * @param hanaInstanceName Name of the SAP HANA on Azure instance.\n   * @param hanaInstanceParameter Request body representing a HanaInstance\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginCreate(resourceGroupName: string, hanaInstanceName: string, hanaInstanceParameter: Models.HanaInstance, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        resourceGroupName,\n        hanaInstanceName,\n        hanaInstanceParameter,\n        options\n      },\n      beginCreateOperationSpec,\n      options);\n  }\n\n  /**\n   * Deletes a SAP HANA instance with the specified subscription, resource group, and instance name.\n   * @summary Deletes a SAP HANA instance.\n   * @param resourceGroupName Name of the resource group.\n   * @param hanaInstanceName Name of the SAP HANA on Azure instance.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginDeleteMethod(resourceGroupName: string, hanaInstanceName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        resourceGroupName,\n        hanaInstanceName,\n        options\n      },\n      beginDeleteMethodOperationSpec,\n      options);\n  }\n\n  /**\n   * The operation to restart a SAP HANA instance.\n   * @param resourceGroupName Name of the resource group.\n   * @param hanaInstanceName Name of the SAP HANA on Azure instance.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginRestart(resourceGroupName: string, hanaInstanceName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        resourceGroupName,\n        hanaInstanceName,\n        options\n      },\n      beginRestartOperationSpec,\n      options);\n  }\n\n  /**\n   * The operation to start a SAP HANA instance.\n   * @param resourceGroupName Name of the resource group.\n   * @param hanaInstanceName Name of the SAP HANA on Azure instance.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginStart(resourceGroupName: string, hanaInstanceName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        resourceGroupName,\n        hanaInstanceName,\n        options\n      },\n      beginStartOperationSpec,\n      options);\n  }\n\n  /**\n   * The operation to shutdown a SAP HANA instance.\n   * @param resourceGroupName Name of the resource group.\n   * @param hanaInstanceName Name of the SAP HANA on Azure instance.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginShutdown(resourceGroupName: string, hanaInstanceName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        resourceGroupName,\n        hanaInstanceName,\n        options\n      },\n      beginShutdownOperationSpec,\n      options);\n  }\n\n  /**\n   * Gets a list of SAP HANA instances in the specified subscription. The operations returns various\n   * properties of each SAP HANA on Azure instance.\n   * @summary Gets a list of SAP HANA instances in the specified subscription.\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.HanaInstancesListNextResponse>\n   */\n  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.HanaInstancesListNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.HanaInstancesListResult>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.HanaInstancesListResult>): void;\n  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.HanaInstancesListResult>, callback?: msRest.ServiceCallback<Models.HanaInstancesListResult>): Promise<Models.HanaInstancesListNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listNextOperationSpec,\n      callback) as Promise<Models.HanaInstancesListNextResponse>;\n  }\n\n  /**\n   * Gets a list of SAP HANA instances in the specified subscription and the resource group. The\n   * operations returns various properties of each SAP HANA on Azure instance.\n   * @summary Gets a list of SAP HANA instances in the specified subscription and the resource group.\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.HanaInstancesListByResourceGroupNextResponse>\n   */\n  listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.HanaInstancesListByResourceGroupNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listByResourceGroupNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.HanaInstancesListResult>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listByResourceGroupNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.HanaInstancesListResult>): void;\n  listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.HanaInstancesListResult>, callback?: msRest.ServiceCallback<Models.HanaInstancesListResult>): Promise<Models.HanaInstancesListByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listByResourceGroupNextOperationSpec,\n      callback) as Promise<Models.HanaInstancesListByResourceGroupNextResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst listOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/providers/Microsoft.HanaOnAzure/hanaInstances\",\n  urlParameters: [\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.HanaInstancesListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst listByResourceGroupOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HanaOnAzure/hanaInstances\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.HanaInstancesListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst getOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HanaOnAzure/hanaInstances/{hanaInstanceName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.hanaInstanceName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.HanaInstance\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst updateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PATCH\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HanaOnAzure/hanaInstances/{hanaInstanceName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.hanaInstanceName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"tagsParameter\",\n    mapper: {\n      ...Mappers.Tags,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.HanaInstance\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst beginCreateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HanaOnAzure/hanaInstances/{hanaInstanceName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.hanaInstanceName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"hanaInstanceParameter\",\n    mapper: {\n      ...Mappers.HanaInstance,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.HanaInstance\n    },\n    201: {\n      bodyMapper: Mappers.HanaInstance\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst beginDeleteMethodOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HanaOnAzure/hanaInstances/{hanaInstanceName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.hanaInstanceName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst beginRestartOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HanaOnAzure/hanaInstances/{hanaInstanceName}/restart\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.hanaInstanceName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {},\n    202: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst beginStartOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HanaOnAzure/hanaInstances/{hanaInstanceName}/start\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.hanaInstanceName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {},\n    202: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst beginShutdownOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HanaOnAzure/hanaInstances/{hanaInstanceName}/shutdown\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.hanaInstanceName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {},\n    202: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst listNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.HanaInstancesListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst listByResourceGroupNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.HanaInstancesListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  BaseResource,\n  Disk,\n  ErrorResponse,\n  HanaInstance,\n  HardwareProfile,\n  IpAddress,\n  NetworkProfile,\n  OSProfile,\n  Resource,\n  SapMonitor,\n  SapMonitorListResult,\n  StorageProfile,\n  Tags\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as msRestAzure from \"@azure/ms-rest-azure-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/sapMonitorsMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { HanaManagementClientContext } from \"../hanaManagementClientContext\";\n\n/** Class representing a SapMonitors. */\nexport class SapMonitors {\n  private readonly client: HanaManagementClientContext;\n\n  /**\n   * Create a SapMonitors.\n   * @param {HanaManagementClientContext} client Reference to the service client.\n   */\n  constructor(client: HanaManagementClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of SAP monitors in the specified subscription. The operations returns various\n   * properties of each SAP monitor.\n   * @summary Gets a list of SAP monitors in the specified subscription.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.SapMonitorsListResponse>\n   */\n  list(options?: msRest.RequestOptionsBase): Promise<Models.SapMonitorsListResponse>;\n  /**\n   * @param callback The callback\n   */\n  list(callback: msRest.ServiceCallback<Models.SapMonitorListResult>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  list(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SapMonitorListResult>): void;\n  list(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.SapMonitorListResult>, callback?: msRest.ServiceCallback<Models.SapMonitorListResult>): Promise<Models.SapMonitorsListResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      listOperationSpec,\n      callback) as Promise<Models.SapMonitorsListResponse>;\n  }\n\n  /**\n   * Gets properties of a SAP monitor for the specified subscription, resource group, and resource\n   * name.\n   * @summary Gets properties of a SAP monitor.\n   * @param resourceGroupName Name of the resource group.\n   * @param sapMonitorName Name of the SAP monitor resource.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.SapMonitorsGetResponse>\n   */\n  get(resourceGroupName: string, sapMonitorName: string, options?: msRest.RequestOptionsBase): Promise<Models.SapMonitorsGetResponse>;\n  /**\n   * @param resourceGroupName Name of the resource group.\n   * @param sapMonitorName Name of the SAP monitor resource.\n   * @param callback The callback\n   */\n  get(resourceGroupName: string, sapMonitorName: string, callback: msRest.ServiceCallback<Models.SapMonitor>): void;\n  /**\n   * @param resourceGroupName Name of the resource group.\n   * @param sapMonitorName Name of the SAP monitor resource.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  get(resourceGroupName: string, sapMonitorName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SapMonitor>): void;\n  get(resourceGroupName: string, sapMonitorName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.SapMonitor>, callback?: msRest.ServiceCallback<Models.SapMonitor>): Promise<Models.SapMonitorsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        sapMonitorName,\n        options\n      },\n      getOperationSpec,\n      callback) as Promise<Models.SapMonitorsGetResponse>;\n  }\n\n  /**\n   * Creates a SAP monitor for the specified subscription, resource group, and resource name.\n   * @summary Creates a SAP monitor.\n   * @param resourceGroupName Name of the resource group.\n   * @param sapMonitorName Name of the SAP monitor resource.\n   * @param sapMonitorParameter Request body representing a SAP Monitor\n   * @param [options] The optional parameters\n   * @returns Promise<Models.SapMonitorsCreateResponse>\n   */\n  create(resourceGroupName: string, sapMonitorName: string, sapMonitorParameter: Models.SapMonitor, options?: msRest.RequestOptionsBase): Promise<Models.SapMonitorsCreateResponse> {\n    return this.beginCreate(resourceGroupName,sapMonitorName,sapMonitorParameter,options)\n      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.SapMonitorsCreateResponse>;\n  }\n\n  /**\n   * Deletes a SAP monitor with the specified subscription, resource group, and monitor name.\n   * @summary Deletes a SAP monitor.\n   * @param resourceGroupName Name of the resource group.\n   * @param sapMonitorName Name of the SAP monitor resource.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  deleteMethod(resourceGroupName: string, sapMonitorName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse> {\n    return this.beginDeleteMethod(resourceGroupName,sapMonitorName,options)\n      .then(lroPoller => lroPoller.pollUntilFinished());\n  }\n\n  /**\n   * Patches the Tags field of a SAP monitor for the specified subscription, resource group, and\n   * monitor name.\n   * @summary Patches the Tags field of a SAP monitor.\n   * @param resourceGroupName Name of the resource group.\n   * @param sapMonitorName Name of the SAP monitor resource.\n   * @param tagsParameter Request body that only contains the new Tags field\n   * @param [options] The optional parameters\n   * @returns Promise<Models.SapMonitorsUpdateResponse>\n   */\n  update(resourceGroupName: string, sapMonitorName: string, tagsParameter: Models.Tags, options?: msRest.RequestOptionsBase): Promise<Models.SapMonitorsUpdateResponse>;\n  /**\n   * @param resourceGroupName Name of the resource group.\n   * @param sapMonitorName Name of the SAP monitor resource.\n   * @param tagsParameter Request body that only contains the new Tags field\n   * @param callback The callback\n   */\n  update(resourceGroupName: string, sapMonitorName: string, tagsParameter: Models.Tags, callback: msRest.ServiceCallback<Models.SapMonitor>): void;\n  /**\n   * @param resourceGroupName Name of the resource group.\n   * @param sapMonitorName Name of the SAP monitor resource.\n   * @param tagsParameter Request body that only contains the new Tags field\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  update(resourceGroupName: string, sapMonitorName: string, tagsParameter: Models.Tags, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SapMonitor>): void;\n  update(resourceGroupName: string, sapMonitorName: string, tagsParameter: Models.Tags, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.SapMonitor>, callback?: msRest.ServiceCallback<Models.SapMonitor>): Promise<Models.SapMonitorsUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        sapMonitorName,\n        tagsParameter,\n        options\n      },\n      updateOperationSpec,\n      callback) as Promise<Models.SapMonitorsUpdateResponse>;\n  }\n\n  /**\n   * Creates a SAP monitor for the specified subscription, resource group, and resource name.\n   * @summary Creates a SAP monitor.\n   * @param resourceGroupName Name of the resource group.\n   * @param sapMonitorName Name of the SAP monitor resource.\n   * @param sapMonitorParameter Request body representing a SAP Monitor\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginCreate(resourceGroupName: string, sapMonitorName: string, sapMonitorParameter: Models.SapMonitor, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        resourceGroupName,\n        sapMonitorName,\n        sapMonitorParameter,\n        options\n      },\n      beginCreateOperationSpec,\n      options);\n  }\n\n  /**\n   * Deletes a SAP monitor with the specified subscription, resource group, and monitor name.\n   * @summary Deletes a SAP monitor.\n   * @param resourceGroupName Name of the resource group.\n   * @param sapMonitorName Name of the SAP monitor resource.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginDeleteMethod(resourceGroupName: string, sapMonitorName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        resourceGroupName,\n        sapMonitorName,\n        options\n      },\n      beginDeleteMethodOperationSpec,\n      options);\n  }\n\n  /**\n   * Gets a list of SAP monitors in the specified subscription. The operations returns various\n   * properties of each SAP monitor.\n   * @summary Gets a list of SAP monitors in the specified subscription.\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.SapMonitorsListNextResponse>\n   */\n  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.SapMonitorsListNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.SapMonitorListResult>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SapMonitorListResult>): void;\n  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.SapMonitorListResult>, callback?: msRest.ServiceCallback<Models.SapMonitorListResult>): Promise<Models.SapMonitorsListNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listNextOperationSpec,\n      callback) as Promise<Models.SapMonitorsListNextResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst listOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/providers/Microsoft.HanaOnAzure/sapMonitors\",\n  urlParameters: [\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.SapMonitorListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst getOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HanaOnAzure/sapMonitors/{sapMonitorName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.sapMonitorName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.SapMonitor\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst updateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PATCH\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HanaOnAzure/sapMonitors/{sapMonitorName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.sapMonitorName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"tagsParameter\",\n    mapper: {\n      ...Mappers.Tags,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.SapMonitor\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst beginCreateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HanaOnAzure/sapMonitors/{sapMonitorName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.sapMonitorName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"sapMonitorParameter\",\n    mapper: {\n      ...Mappers.SapMonitor,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.SapMonitor\n    },\n    201: {\n      bodyMapper: Mappers.SapMonitor\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst beginDeleteMethodOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HanaOnAzure/sapMonitors/{sapMonitorName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.sapMonitorName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n\nconst listNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.SapMonitorListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as Models from \"./models\";\nimport * as msRest from \"@azure/ms-rest-js\";\nimport { TokenCredential } from \"@azure/core-auth\";\nimport * as msRestAzure from \"@azure/ms-rest-azure-js\";\n\nconst packageName = \"@azure/arm-hanaonazure\";\nconst packageVersion = \"3.1.1\";\n\nexport class HanaManagementClientContext extends msRestAzure.AzureServiceClient {\n  credentials: msRest.ServiceClientCredentials | TokenCredential;\n  subscriptionId: string;\n  apiVersion?: string;\n\n  /**\n   * Initializes a new instance of the HanaManagementClient class.\n   * @param credentials Credentials needed for the client to connect to Azure. Credentials\n   * implementing the TokenCredential interface from the @azure/identity package are recommended. For\n   * more information about these credentials, see\n   * {@link https://www.npmjs.com/package/@azure/identity}. Credentials implementing the\n   * ServiceClientCredentials interface from the older packages @azure/ms-rest-nodeauth and\n   * @azure/ms-rest-browserauth are also supported.\n   * @param subscriptionId Subscription ID which uniquely identify Microsoft Azure subscription. The\n   * subscription ID forms part of the URI for every service call.\n   * @param [options] The parameter options\n   */\n  constructor(credentials: msRest.ServiceClientCredentials | TokenCredential, subscriptionId: string, options?: Models.HanaManagementClientOptions) {\n    if (credentials == undefined) {\n      throw new Error('\\'credentials\\' cannot be null.');\n    }\n    if (subscriptionId == undefined) {\n      throw new Error('\\'subscriptionId\\' cannot be null.');\n    }\n\n    if (!options) {\n      options = {};\n    }\n    if (!options.userAgent) {\n      const defaultUserAgent = msRestAzure.getDefaultUserAgentValue();\n      options.userAgent = `${packageName}/${packageVersion} ${defaultUserAgent}`;\n    }\n\n    super(credentials, options);\n\n    this.apiVersion = '2017-11-03-preview';\n    this.acceptLanguage = 'en-US';\n    this.longRunningOperationRetryTimeout = 30;\n    this.baseUri = options.baseUri || this.baseUri || \"https://management.azure.com\";\n    this.requestContentType = \"application/json; charset=utf-8\";\n    this.credentials = credentials;\n    this.subscriptionId = subscriptionId;\n\n    if (options.acceptLanguage !== null && options.acceptLanguage !== undefined) {\n      this.acceptLanguage = options.acceptLanguage;\n    }\n    if (options.longRunningOperationRetryTimeout !== null && options.longRunningOperationRetryTimeout !== undefined) {\n      this.longRunningOperationRetryTimeout = options.longRunningOperationRetryTimeout;\n    }\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport { TokenCredential } from \"@azure/core-auth\";\nimport * as Models from \"./models\";\nimport * as Mappers from \"./models/mappers\";\nimport * as operations from \"./operations\";\nimport { HanaManagementClientContext } from \"./hanaManagementClientContext\";\n\n\nclass HanaManagementClient extends HanaManagementClientContext {\n  // Operation groups\n  operations: operations.Operations;\n  hanaInstances: operations.HanaInstances;\n  sapMonitors: operations.SapMonitors;\n\n  /**\n   * Initializes a new instance of the HanaManagementClient class.\n   * @param credentials Credentials needed for the client to connect to Azure. Credentials\n   * implementing the TokenCredential interface from the @azure/identity package are recommended. For\n   * more information about these credentials, see\n   * {@link https://www.npmjs.com/package/@azure/identity}. Credentials implementing the\n   * ServiceClientCredentials interface from the older packages @azure/ms-rest-nodeauth and\n   * @azure/ms-rest-browserauth are also supported.\n   * @param subscriptionId Subscription ID which uniquely identify Microsoft Azure subscription. The\n   * subscription ID forms part of the URI for every service call.\n   * @param [options] The parameter options\n   */\n  constructor(credentials: msRest.ServiceClientCredentials | TokenCredential, subscriptionId: string, options?: Models.HanaManagementClientOptions) {\n    super(credentials, subscriptionId, options);\n    this.operations = new operations.Operations(this);\n    this.hanaInstances = new operations.HanaInstances(this);\n    this.sapMonitors = new operations.SapMonitors(this);\n  }\n}\n\n// Operation Specifications\n\nexport {\n  HanaManagementClient,\n  HanaManagementClientContext,\n  Models as HanaManagementModels,\n  Mappers as HanaManagementMappers\n};\nexport * from \"./operations\";\n"],"names":["CloudErrorMapper","BaseResourceMapper","msRest.Serializer","Parameters.apiVersion","Parameters.acceptLanguage","Mappers.OperationList","Mappers.ErrorResponse","listOperationSpec","serializer","Mappers","Parameters.subscriptionId","Mappers.HanaInstancesListResult","Parameters.resourceGroupName","Parameters.hanaInstanceName","Mappers.HanaInstance","Mappers.Tags","Parameters.nextPageLink","getOperationSpec","updateOperationSpec","beginCreateOperationSpec","beginDeleteMethodOperationSpec","listNextOperationSpec","Mappers.SapMonitorListResult","Parameters.sapMonitorName","Mappers.SapMonitor","msRestAzure.getDefaultUserAgentValue","msRestAzure.AzureServiceClient","operations.Operations","operations.HanaInstances","operations.SapMonitors"],"mappings":"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"}