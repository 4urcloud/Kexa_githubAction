import * as coreClient from "@azure/core-client";
import * as coreAuth from "@azure/core-auth";
import { Operations, Spacecrafts, Contacts, ContactProfiles, AvailableGroundStations, OperationsResults } from "./operationsInterfaces";
import { AzureOrbitalOptionalParams } from "./models";
export declare class AzureOrbital extends coreClient.ServiceClient {
    $host: string;
    apiVersion: string;
    subscriptionId: string;
    /**
     * Initializes a new instance of the AzureOrbital class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId The ID of the target subscription.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: AzureOrbitalOptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    operations: Operations;
    spacecrafts: Spacecrafts;
    contacts: Contacts;
    contactProfiles: ContactProfiles;
    availableGroundStations: AvailableGroundStations;
    operationsResults: OperationsResults;
}
//# sourceMappingURL=azureOrbital.d.ts.map