import { OperationsResults } from "../operationsInterfaces";
import { AzureOrbital } from "../azureOrbital";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import { OperationsResultsGetOptionalParams, OperationsResultsGetResponse } from "../models";
/** Class containing OperationsResults operations. */
export declare class OperationsResultsImpl implements OperationsResults {
    private readonly client;
    /**
     * Initialize a new instance of the class OperationsResults class.
     * @param client Reference to the service client
     */
    constructor(client: AzureOrbital);
    /**
     * Returns operation results.
     * @param location The name of Azure region.
     * @param operationId The ID of an ongoing async operation.
     * @param options The options parameters.
     */
    beginGet(location: string, operationId: string, options?: OperationsResultsGetOptionalParams): Promise<SimplePollerLike<OperationState<OperationsResultsGetResponse>, OperationsResultsGetResponse>>;
    /**
     * Returns operation results.
     * @param location The name of Azure region.
     * @param operationId The ID of an ongoing async operation.
     * @param options The options parameters.
     */
    beginGetAndWait(location: string, operationId: string, options?: OperationsResultsGetOptionalParams): Promise<OperationsResultsGetResponse>;
}
//# sourceMappingURL=operationsResults.d.ts.map