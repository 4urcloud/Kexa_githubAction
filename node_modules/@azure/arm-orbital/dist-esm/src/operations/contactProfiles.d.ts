import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { ContactProfiles } from "../operationsInterfaces";
import { AzureOrbital } from "../azureOrbital";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import { ContactProfile, ContactProfilesListBySubscriptionOptionalParams, ContactProfilesListOptionalParams, ContactProfilesGetOptionalParams, ContactProfilesGetResponse, ContactProfilesPropertiesNetworkConfiguration, ContactProfileLink, ContactProfilesCreateOrUpdateOptionalParams, ContactProfilesCreateOrUpdateResponse, ContactProfilesDeleteOptionalParams, TagsObject, ContactProfilesUpdateTagsOptionalParams, ContactProfilesUpdateTagsResponse } from "../models";
/** Class containing ContactProfiles operations. */
export declare class ContactProfilesImpl implements ContactProfiles {
    private readonly client;
    /**
     * Initialize a new instance of the class ContactProfiles class.
     * @param client Reference to the service client
     */
    constructor(client: AzureOrbital);
    /**
     * Returns list of contact profiles by Subscription.
     * @param options The options parameters.
     */
    listBySubscription(options?: ContactProfilesListBySubscriptionOptionalParams): PagedAsyncIterableIterator<ContactProfile>;
    private listBySubscriptionPagingPage;
    private listBySubscriptionPagingAll;
    /**
     * Returns list of contact profiles by Resource Group.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, options?: ContactProfilesListOptionalParams): PagedAsyncIterableIterator<ContactProfile>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Gets the specified contact Profile in a specified resource group.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contactProfileName Contact Profile name.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, contactProfileName: string, options?: ContactProfilesGetOptionalParams): Promise<ContactProfilesGetResponse>;
    /**
     * Creates or updates a contact profile.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contactProfileName Contact Profile name.
     * @param location The geo-location where the resource lives
     * @param networkConfiguration Network configuration of customer virtual network.
     * @param links Links of the Contact Profile. Describes RF links, modem processing, and IP endpoints.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, contactProfileName: string, location: string, networkConfiguration: ContactProfilesPropertiesNetworkConfiguration, links: ContactProfileLink[], options?: ContactProfilesCreateOrUpdateOptionalParams): Promise<SimplePollerLike<OperationState<ContactProfilesCreateOrUpdateResponse>, ContactProfilesCreateOrUpdateResponse>>;
    /**
     * Creates or updates a contact profile.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contactProfileName Contact Profile name.
     * @param location The geo-location where the resource lives
     * @param networkConfiguration Network configuration of customer virtual network.
     * @param links Links of the Contact Profile. Describes RF links, modem processing, and IP endpoints.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, contactProfileName: string, location: string, networkConfiguration: ContactProfilesPropertiesNetworkConfiguration, links: ContactProfileLink[], options?: ContactProfilesCreateOrUpdateOptionalParams): Promise<ContactProfilesCreateOrUpdateResponse>;
    /**
     * Deletes a specified contact profile resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contactProfileName Contact Profile name.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, contactProfileName: string, options?: ContactProfilesDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Deletes a specified contact profile resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contactProfileName Contact Profile name.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, contactProfileName: string, options?: ContactProfilesDeleteOptionalParams): Promise<void>;
    /**
     * Updates the specified contact profile tags.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contactProfileName Contact Profile name.
     * @param parameters Parameters supplied to update contact profile tags.
     * @param options The options parameters.
     */
    beginUpdateTags(resourceGroupName: string, contactProfileName: string, parameters: TagsObject, options?: ContactProfilesUpdateTagsOptionalParams): Promise<SimplePollerLike<OperationState<ContactProfilesUpdateTagsResponse>, ContactProfilesUpdateTagsResponse>>;
    /**
     * Updates the specified contact profile tags.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param contactProfileName Contact Profile name.
     * @param parameters Parameters supplied to update contact profile tags.
     * @param options The options parameters.
     */
    beginUpdateTagsAndWait(resourceGroupName: string, contactProfileName: string, parameters: TagsObject, options?: ContactProfilesUpdateTagsOptionalParams): Promise<ContactProfilesUpdateTagsResponse>;
    /**
     * Returns list of contact profiles by Subscription.
     * @param options The options parameters.
     */
    private _listBySubscription;
    /**
     * Returns list of contact profiles by Resource Group.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    private _list;
    /**
     * ListBySubscriptionNext
     * @param nextLink The nextLink from the previous successful call to the ListBySubscription method.
     * @param options The options parameters.
     */
    private _listBySubscriptionNext;
    /**
     * ListNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=contactProfiles.d.ts.map