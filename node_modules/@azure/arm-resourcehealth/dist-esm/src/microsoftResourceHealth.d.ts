import * as coreClient from "@azure/core-client";
import * as coreAuth from "@azure/core-auth";
import { AvailabilityStatuses, Operations, Metadata, ImpactedResources, SecurityAdvisoryImpactedResources, EventsOperations, EventOperations, ChildAvailabilityStatuses, ChildResources, EmergingIssues } from "./operationsInterfaces";
import { MicrosoftResourceHealthOptionalParams } from "./models";
export declare class MicrosoftResourceHealth extends coreClient.ServiceClient {
    $host: string;
    apiVersion: string;
    subscriptionId: string;
    /**
     * Initializes a new instance of the MicrosoftResourceHealth class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId The ID of the target subscription.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: MicrosoftResourceHealthOptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    availabilityStatuses: AvailabilityStatuses;
    operations: Operations;
    metadata: Metadata;
    impactedResources: ImpactedResources;
    securityAdvisoryImpactedResources: SecurityAdvisoryImpactedResources;
    eventsOperations: EventsOperations;
    eventOperations: EventOperations;
    childAvailabilityStatuses: ChildAvailabilityStatuses;
    childResources: ChildResources;
    emergingIssues: EmergingIssues;
}
//# sourceMappingURL=microsoftResourceHealth.d.ts.map