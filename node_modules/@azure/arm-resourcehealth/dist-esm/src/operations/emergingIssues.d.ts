import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { EmergingIssues } from "../operationsInterfaces";
import { MicrosoftResourceHealth } from "../microsoftResourceHealth";
import { EmergingIssuesGetResult, EmergingIssuesListOptionalParams, IssueNameParameter, EmergingIssuesGetOptionalParams, EmergingIssuesGetResponse } from "../models";
/** Class containing EmergingIssues operations. */
export declare class EmergingIssuesImpl implements EmergingIssues {
    private readonly client;
    /**
     * Initialize a new instance of the class EmergingIssues class.
     * @param client Reference to the service client
     */
    constructor(client: MicrosoftResourceHealth);
    /**
     * Lists Azure services' emerging issues.
     * @param options The options parameters.
     */
    list(options?: EmergingIssuesListOptionalParams): PagedAsyncIterableIterator<EmergingIssuesGetResult>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Lists Azure services' emerging issues.
     * @param options The options parameters.
     */
    private _list;
    /**
     * Gets Azure services' emerging issues.
     * @param issueName The name of the emerging issue.
     * @param options The options parameters.
     */
    get(issueName: IssueNameParameter, options?: EmergingIssuesGetOptionalParams): Promise<EmergingIssuesGetResponse>;
    /**
     * ListNext
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=emergingIssues.d.ts.map