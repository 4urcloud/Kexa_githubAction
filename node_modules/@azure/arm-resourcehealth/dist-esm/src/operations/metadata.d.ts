import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Metadata } from "../operationsInterfaces";
import { MicrosoftResourceHealth } from "../microsoftResourceHealth";
import { MetadataEntity, MetadataListOptionalParams, MetadataGetEntityOptionalParams, MetadataGetEntityResponse } from "../models";
/** Class containing Metadata operations. */
export declare class MetadataImpl implements Metadata {
    private readonly client;
    /**
     * Initialize a new instance of the class Metadata class.
     * @param client Reference to the service client
     */
    constructor(client: MicrosoftResourceHealth);
    /**
     * Gets the list of metadata entities.
     * @param options The options parameters.
     */
    list(options?: MetadataListOptionalParams): PagedAsyncIterableIterator<MetadataEntity>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Gets the list of metadata entities.
     * @param options The options parameters.
     */
    private _list;
    /**
     * Gets the list of metadata entities.
     * @param name Name of metadata entity.
     * @param options The options parameters.
     */
    getEntity(name: string, options?: MetadataGetEntityOptionalParams): Promise<MetadataGetEntityResponse>;
    /**
     * ListNext
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=metadata.d.ts.map