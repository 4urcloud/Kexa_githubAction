import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { ImpactedResources } from "../operationsInterfaces";
import { MicrosoftResourceHealth } from "../microsoftResourceHealth";
import { EventImpactedResource, ImpactedResourcesListBySubscriptionIdAndEventIdOptionalParams, ImpactedResourcesListByTenantIdAndEventIdOptionalParams, ImpactedResourcesGetOptionalParams, ImpactedResourcesGetResponse, ImpactedResourcesGetByTenantIdOptionalParams, ImpactedResourcesGetByTenantIdResponse } from "../models";
/** Class containing ImpactedResources operations. */
export declare class ImpactedResourcesImpl implements ImpactedResources {
    private readonly client;
    /**
     * Initialize a new instance of the class ImpactedResources class.
     * @param client Reference to the service client
     */
    constructor(client: MicrosoftResourceHealth);
    /**
     * Lists impacted resources in the subscription by an event.
     * @param eventTrackingId Event Id which uniquely identifies ServiceHealth event.
     * @param options The options parameters.
     */
    listBySubscriptionIdAndEventId(eventTrackingId: string, options?: ImpactedResourcesListBySubscriptionIdAndEventIdOptionalParams): PagedAsyncIterableIterator<EventImpactedResource>;
    private listBySubscriptionIdAndEventIdPagingPage;
    private listBySubscriptionIdAndEventIdPagingAll;
    /**
     * Lists impacted resources in the tenant by an event.
     * @param eventTrackingId Event Id which uniquely identifies ServiceHealth event.
     * @param options The options parameters.
     */
    listByTenantIdAndEventId(eventTrackingId: string, options?: ImpactedResourcesListByTenantIdAndEventIdOptionalParams): PagedAsyncIterableIterator<EventImpactedResource>;
    private listByTenantIdAndEventIdPagingPage;
    private listByTenantIdAndEventIdPagingAll;
    /**
     * Lists impacted resources in the subscription by an event.
     * @param eventTrackingId Event Id which uniquely identifies ServiceHealth event.
     * @param options The options parameters.
     */
    private _listBySubscriptionIdAndEventId;
    /**
     * Gets the specific impacted resource in the subscription by an event.
     * @param eventTrackingId Event Id which uniquely identifies ServiceHealth event.
     * @param impactedResourceName Name of the Impacted Resource.
     * @param options The options parameters.
     */
    get(eventTrackingId: string, impactedResourceName: string, options?: ImpactedResourcesGetOptionalParams): Promise<ImpactedResourcesGetResponse>;
    /**
     * Lists impacted resources in the tenant by an event.
     * @param eventTrackingId Event Id which uniquely identifies ServiceHealth event.
     * @param options The options parameters.
     */
    private _listByTenantIdAndEventId;
    /**
     * Gets the specific impacted resource in the tenant by an event.
     * @param eventTrackingId Event Id which uniquely identifies ServiceHealth event.
     * @param impactedResourceName Name of the Impacted Resource.
     * @param options The options parameters.
     */
    getByTenantId(eventTrackingId: string, impactedResourceName: string, options?: ImpactedResourcesGetByTenantIdOptionalParams): Promise<ImpactedResourcesGetByTenantIdResponse>;
    /**
     * ListBySubscriptionIdAndEventIdNext
     * @param eventTrackingId Event Id which uniquely identifies ServiceHealth event.
     * @param nextLink The nextLink from the previous successful call to the ListBySubscriptionIdAndEventId
     *                 method.
     * @param options The options parameters.
     */
    private _listBySubscriptionIdAndEventIdNext;
    /**
     * ListByTenantIdAndEventIdNext
     * @param eventTrackingId Event Id which uniquely identifies ServiceHealth event.
     * @param nextLink The nextLink from the previous successful call to the ListByTenantIdAndEventId
     *                 method.
     * @param options The options parameters.
     */
    private _listByTenantIdAndEventIdNext;
}
//# sourceMappingURL=impactedResources.d.ts.map