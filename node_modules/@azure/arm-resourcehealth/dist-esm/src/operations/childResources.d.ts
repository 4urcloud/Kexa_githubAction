import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { ChildResources } from "../operationsInterfaces";
import { MicrosoftResourceHealth } from "../microsoftResourceHealth";
import { AvailabilityStatus, ChildResourcesListOptionalParams } from "../models";
/** Class containing ChildResources operations. */
export declare class ChildResourcesImpl implements ChildResources {
    private readonly client;
    /**
     * Initialize a new instance of the class ChildResources class.
     * @param client Reference to the service client
     */
    constructor(client: MicrosoftResourceHealth);
    /**
     * Lists the all the children and its current health status for a parent resource. Use the nextLink
     * property in the response to get the next page of children current health
     * @param resourceUri The fully qualified ID of the resource, including the resource name and resource
     *                    type. Currently the API only support not nested parent resource type:
     *                    /subscriptions/{subscriptionId}/resourceGroups/{resource-group-name}/providers/{resource-provider-name}/{resource-type}/{resource-name}
     * @param options The options parameters.
     */
    list(resourceUri: string, options?: ChildResourcesListOptionalParams): PagedAsyncIterableIterator<AvailabilityStatus>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Lists the all the children and its current health status for a parent resource. Use the nextLink
     * property in the response to get the next page of children current health
     * @param resourceUri The fully qualified ID of the resource, including the resource name and resource
     *                    type. Currently the API only support not nested parent resource type:
     *                    /subscriptions/{subscriptionId}/resourceGroups/{resource-group-name}/providers/{resource-provider-name}/{resource-type}/{resource-name}
     * @param options The options parameters.
     */
    private _list;
    /**
     * ListNext
     * @param resourceUri The fully qualified ID of the resource, including the resource name and resource
     *                    type. Currently the API only support not nested parent resource type:
     *                    /subscriptions/{subscriptionId}/resourceGroups/{resource-group-name}/providers/{resource-provider-name}/{resource-type}/{resource-name}
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=childResources.d.ts.map