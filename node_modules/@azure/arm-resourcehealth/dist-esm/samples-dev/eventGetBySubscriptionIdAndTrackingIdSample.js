/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { MicrosoftResourceHealth } from "@azure/arm-resourcehealth";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Service health event in the subscription by event tracking id
 *
 * @summary Service health event in the subscription by event tracking id
 * x-ms-original-file: specification/resourcehealth/resource-manager/Microsoft.ResourceHealth/stable/2022-10-01/examples/Event_GetBySubscriptionIdAndTrackingId.json
 */
function securityAdvisoriesEventBySubscriptionIdAndTrackingId() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["RESOURCEHEALTH_SUBSCRIPTION_ID"] || "subscriptionId";
        const filter = "properties/status eq 'Active'";
        const queryStartTime = "7/10/2022";
        const eventTrackingId = "eventTrackingId";
        const options = {
            filter,
            queryStartTime
        };
        const credential = new DefaultAzureCredential();
        const client = new MicrosoftResourceHealth(credential, subscriptionId);
        const result = yield client.eventOperations.getBySubscriptionIdAndTrackingId(eventTrackingId, options);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        securityAdvisoriesEventBySubscriptionIdAndTrackingId();
    });
}
main().catch(console.error);
//# sourceMappingURL=eventGetBySubscriptionIdAndTrackingIdSample.js.map