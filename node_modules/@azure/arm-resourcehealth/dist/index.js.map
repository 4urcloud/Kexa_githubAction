{"version":3,"file":"index.js","sources":["../src/pagingHelper.ts","../src/models/index.ts","../src/models/mappers.ts","../src/models/parameters.ts","../src/operations/availabilityStatuses.ts","../src/operations/operations.ts","../src/operations/metadata.ts","../src/operations/impactedResources.ts","../src/operations/securityAdvisoryImpactedResources.ts","../src/operations/eventsOperations.ts","../src/operations/eventOperations.ts","../src/operations/childAvailabilityStatuses.ts","../src/operations/childResources.ts","../src/operations/emergingIssues.ts","../src/microsoftResourceHealth.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport interface PageInfo {\n  continuationToken?: string;\n}\n\nconst pageMap = new WeakMap<object, PageInfo>();\n\n/**\n * Given the last `.value` produced by the `byPage` iterator,\n * returns a continuation token that can be used to begin paging from\n * that point later.\n * @param page An object from accessing `value` on the IteratorResult from a `byPage` iterator.\n * @returns The continuation token that can be passed into byPage() during future calls.\n */\nexport function getContinuationToken(page: unknown): string | undefined {\n  if (typeof page !== \"object\" || page === null) {\n    return undefined;\n  }\n  return pageMap.get(page)?.continuationToken;\n}\n\nexport function setContinuationToken(\n  page: unknown,\n  continuationToken: string | undefined\n): void {\n  if (typeof page !== \"object\" || page === null || !continuationToken) {\n    return;\n  }\n  const pageInfo = pageMap.get(page) ?? {};\n  pageInfo.continuationToken = continuationToken;\n  pageMap.set(page, pageInfo);\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\n/** The List availabilityStatus operation response. */\nexport interface AvailabilityStatusListResult {\n  /** The list of availabilityStatuses. */\n  value: AvailabilityStatus[];\n  /** The URI to fetch the next page of availabilityStatuses. Call ListNext() with this URI to fetch the next page of availabilityStatuses. */\n  nextLink?: string;\n}\n\n/** availabilityStatus of a resource. */\nexport interface AvailabilityStatus {\n  /** Azure Resource Manager Identity for the availabilityStatuses resource. */\n  id?: string;\n  /** current. */\n  name?: string;\n  /** Microsoft.ResourceHealth/AvailabilityStatuses. */\n  type?: string;\n  /** Azure Resource Manager geo location of the resource. */\n  location?: string;\n  /** Properties of availability state. */\n  properties?: AvailabilityStatusProperties;\n}\n\n/** Properties of availability state. */\nexport interface AvailabilityStatusProperties {\n  /** Availability status of the resource. When it is null, this availabilityStatus object represents an availability impacting event */\n  availabilityState?: AvailabilityStateValues;\n  /** Title description of the availability status. */\n  title?: string;\n  /** Summary description of the availability status. */\n  summary?: string;\n  /** Details of the availability status. */\n  detailedStatus?: string;\n  /** When the resource's availabilityState is Unavailable, it describes where the health impacting event was originated. Examples are planned, unplanned, user initiated or an outage etc. */\n  reasonType?: string;\n  /** When an event is created, it can either be triggered by a customer or the platform of the resource and this field will illustrate that. This field is connected to the category field in this object. */\n  context?: string;\n  /** When a context field is set to Platform, this field will reflect if the event was planned or unplanned. If the context field does not have a value of Platform, then this field will be ignored. */\n  category?: string;\n  /** The Article Id */\n  articleId?: string;\n  /** When the resource's availabilityState is Unavailable, it provides the Timestamp for when the health impacting event was received. */\n  rootCauseAttributionTime?: Date;\n  /** In case of an availability impacting event, it describes when the health impacting event was originated. Examples are Lifecycle, Downtime, Fault Analysis etc. */\n  healthEventType?: string;\n  /** In case of an availability impacting event, it describes where the health impacting event was originated. Examples are PlatformInitiated, UserInitiated etc. */\n  healthEventCause?: string;\n  /** In case of an availability impacting event, it describes the category of a PlatformInitiated health impacting event. Examples are Planned, Unplanned etc. */\n  healthEventCategory?: string;\n  /** It is a unique Id that identifies the event */\n  healthEventId?: string;\n  /** When the resource's availabilityState is Unavailable and the reasonType is not User Initiated, it provides the date and time for when the issue is expected to be resolved. */\n  resolutionETA?: Date;\n  /** Timestamp for when last change in health status occurred. */\n  occuredTime?: Date;\n  /** Chronicity of the availability transition. */\n  reasonChronicity?: ReasonChronicityTypes;\n  /** Timestamp for when the health was last checked. */\n  reportedTime?: Date;\n  /** An annotation describing a change in the availabilityState to Available from Unavailable with a reasonType of type Unplanned */\n  recentlyResolved?: AvailabilityStatusPropertiesRecentlyResolved;\n  /** Lists actions the user can take based on the current availabilityState of the resource. */\n  recommendedActions?: RecommendedAction[];\n  /** Lists the service impacting events that may be affecting the health of the resource. */\n  serviceImpactingEvents?: ServiceImpactingEvent[];\n}\n\n/** An annotation describing a change in the availabilityState to Available from Unavailable with a reasonType of type Unplanned */\nexport interface AvailabilityStatusPropertiesRecentlyResolved {\n  /** Timestamp for when the availabilityState changed to Unavailable */\n  unavailableOccuredTime?: Date;\n  /** Timestamp when the availabilityState changes to Available. */\n  resolvedTime?: Date;\n  /** Brief description of cause of the resource becoming unavailable. */\n  unavailableSummary?: string;\n}\n\n/** Lists actions the user can take based on the current availabilityState of the resource. */\nexport interface RecommendedAction {\n  /** Recommended action. */\n  action?: string;\n  /** Link to the action */\n  actionUrl?: string;\n  /** the comment for the Action */\n  actionUrlComment?: string;\n  /** Substring of action, it describes which text should host the action URL. */\n  actionUrlText?: string;\n}\n\n/** Lists the service impacting events that may be affecting the health of the resource. */\nexport interface ServiceImpactingEvent {\n  /** Timestamp for when the event started. */\n  eventStartTime?: Date;\n  /** Timestamp for when event was submitted/detected. */\n  eventStatusLastModifiedTime?: Date;\n  /** Correlation id for the event */\n  correlationId?: string;\n  /** Status of the service impacting event. */\n  status?: ServiceImpactingEventStatus;\n  /** Properties of the service impacting event. */\n  incidentProperties?: ServiceImpactingEventIncidentProperties;\n}\n\n/** Status of the service impacting event. */\nexport interface ServiceImpactingEventStatus {\n  /** Current status of the event */\n  value?: string;\n}\n\n/** Properties of the service impacting event. */\nexport interface ServiceImpactingEventIncidentProperties {\n  /** Title of the incident. */\n  title?: string;\n  /** Service impacted by the event. */\n  service?: string;\n  /** Region impacted by the event. */\n  region?: string;\n  /** Type of Event. */\n  incidentType?: string;\n}\n\n/** Error details. */\nexport interface ErrorResponse {\n  /**\n   * The error code.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly code?: string;\n  /**\n   * The error message.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n  /**\n   * The error details.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly details?: string;\n}\n\n/** Lists the operations response. */\nexport interface OperationListResult {\n  /** List of operations available in the Microsoft.ResourceHealth resource provider. */\n  value: Operation[];\n}\n\n/** Operation available in the Microsoft.ResourceHealth resource provider. */\nexport interface Operation {\n  /** Name of the operation. */\n  name?: string;\n  /** Properties of the operation. */\n  display?: OperationDisplay;\n}\n\n/** Properties of the operation. */\nexport interface OperationDisplay {\n  /** Provider name. */\n  provider?: string;\n  /** Resource name. */\n  resource?: string;\n  /** Operation name. */\n  operation?: string;\n  /** Description of the operation. */\n  description?: string;\n}\n\n/** The list of metadata entities */\nexport interface MetadataEntityListResult {\n  /** The list of metadata entities. */\n  value?: MetadataEntity[];\n  /** The link used to get the next page of metadata. */\n  nextLink?: string;\n}\n\n/** The metadata supported value detail. */\nexport interface MetadataSupportedValueDetail {\n  /** The id. */\n  id?: string;\n  /** The display name. */\n  displayName?: string;\n  /** The list of associated resource types. */\n  resourceTypes?: string[];\n}\n\n/** Common fields that are returned in the response for all Azure Resource Manager resources */\nexport interface Resource {\n  /**\n   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The name of the resource\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * Azure Resource Manager metadata containing createdBy and modifiedBy information.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n}\n\n/** Metadata pertaining to creation and last modification of the resource. */\nexport interface SystemData {\n  /** The identity that created the resource. */\n  createdBy?: string;\n  /** The type of identity that created the resource. */\n  createdByType?: CreatedByType;\n  /** The timestamp of resource creation (UTC). */\n  createdAt?: Date;\n  /** The identity that last modified the resource. */\n  lastModifiedBy?: string;\n  /** The type of identity that last modified the resource. */\n  lastModifiedByType?: CreatedByType;\n  /** The timestamp of resource last modification (UTC) */\n  lastModifiedAt?: Date;\n}\n\n/** The List of eventImpactedResources operation response. */\nexport interface EventImpactedResourceListResult {\n  /** The list of eventImpactedResources. */\n  value: EventImpactedResource[];\n  /** The URI to fetch the next page of events. Call ListNext() with this URI to fetch the next page of impacted resource. */\n  nextLink?: string;\n}\n\n/** Key value tuple. */\nexport interface KeyValueItem {\n  /**\n   * Key of tuple.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly key?: string;\n  /**\n   * Value of tuple.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: string;\n}\n\n/** The List events operation response. */\nexport interface Events {\n  /** The list of event. */\n  value: Event[];\n  /** The URI to fetch the next page of events. Call ListNext() with this URI to fetch the next page of events. */\n  nextLink?: string;\n}\n\n/** Article of event. */\nexport interface EventPropertiesArticle {\n  /** Article content of event. */\n  articleContent?: string;\n  /** Article Id */\n  articleId?: string;\n  /** It provides a map of parameter name and value */\n  parameters?: Record<string, unknown>;\n}\n\n/** Useful links for service health event. */\nexport interface Link {\n  /** Type of link. */\n  type?: LinkTypeValues;\n  /** Display text of link. */\n  displayText?: LinkDisplayText;\n  /** It provides the name of portal extension to produce link for given service health event. */\n  extensionName?: string;\n  /** It provides the name of portal extension blade to produce link for given service health event. */\n  bladeName?: string;\n  /** It provides a map of parameter name and value for portal extension blade to produce lik for given service health event. */\n  parameters?: Record<string, unknown>;\n}\n\n/** Display text of link. */\nexport interface LinkDisplayText {\n  /** Display text of link. */\n  value?: string;\n  /** Localized display text of link. */\n  localizedValue?: string;\n}\n\n/** Azure service impacted by the service health event. */\nexport interface Impact {\n  /** Impacted service name. */\n  impactedService?: string;\n  /** List regions impacted by the service health event. */\n  impactedRegions?: ImpactedServiceRegion[];\n}\n\n/** Azure region impacted by the service health event. */\nexport interface ImpactedServiceRegion {\n  /** Impacted region name. */\n  impactedRegion?: string;\n  /** Current status of event in the region. */\n  status?: EventStatusValues;\n  /** List subscription impacted by the service health event. */\n  impactedSubscriptions?: string[];\n  /** List tenant impacted by the service health event. */\n  impactedTenants?: string[];\n  /** It provides the Timestamp for when the last update for the service health event. */\n  lastUpdateTime?: Date;\n  /** List of updates for given service health event. */\n  updates?: Update[];\n}\n\n/** Update for service health event. */\nexport interface Update {\n  /** Summary text for the given update for the service health event. */\n  summary?: string;\n  /** It provides the Timestamp for the given update for the service health event. */\n  updateDateTime?: Date;\n}\n\n/** Recommended actions of event. */\nexport interface EventPropertiesRecommendedActions {\n  /** Recommended action title for the service health event. */\n  message?: string;\n  /** Recommended actions for the service health event. */\n  actions?: EventPropertiesRecommendedActionsItem[];\n  /** Recommended action locale for the service health event. */\n  localeCode?: string;\n}\n\n/** Recommended action for the service health event. */\nexport interface EventPropertiesRecommendedActionsItem {\n  /** Recommended action group Id for the service health event. */\n  groupId?: number;\n  /** Recommended action text */\n  actionText?: string;\n}\n\n/** Frequently asked question for the service health event */\nexport interface Faq {\n  /** FAQ question for the service health event. */\n  question?: string;\n  /** FAQ answer for the service health event. */\n  answer?: string;\n  /** FAQ locale for the service health event. */\n  localeCode?: string;\n}\n\n/** Additional information */\nexport interface EventPropertiesAdditionalInformation {\n  /** Additional information Message */\n  message?: string;\n}\n\n/** The list of emerging issues. */\nexport interface EmergingIssueListResult {\n  /** The list of emerging issues. */\n  value?: EmergingIssuesGetResult[];\n  /** The link used to get the next page of emerging issues. */\n  nextLink?: string;\n}\n\n/** Banner type of emerging issue. */\nexport interface StatusBanner {\n  /** The banner title. */\n  title?: string;\n  /** The details of banner. */\n  message?: string;\n  /** The cloud type of this banner. */\n  cloud?: string;\n  /** The last time modified on this banner. */\n  lastModifiedTime?: Date;\n}\n\n/** Active event type of emerging issue. */\nexport interface StatusActiveEvent {\n  /** The active event title. */\n  title?: string;\n  /** The details of active event. */\n  description?: string;\n  /** The tracking id of this active event. */\n  trackingId?: string;\n  /** The impact start time on this active event. */\n  startTime?: Date;\n  /** The cloud type of this active event. */\n  cloud?: string;\n  /** The severity level of this active event. */\n  severity?: SeverityValues;\n  /** The stage of this active event. */\n  stage?: StageValues;\n  /** The boolean value of this active event if published or not. */\n  published?: boolean;\n  /** The last time modified on this banner. */\n  lastModifiedTime?: Date;\n  /** The list of emerging issues impacts. */\n  impacts?: EmergingIssueImpact[];\n}\n\n/** Object of the emerging issue impact on services and regions. */\nexport interface EmergingIssueImpact {\n  /** The impacted service id. */\n  id?: string;\n  /** The impacted service name. */\n  name?: string;\n  /** The list of impacted regions for corresponding emerging issues. */\n  regions?: ImpactedRegion[];\n}\n\n/** Object of impacted region. */\nexport interface ImpactedRegion {\n  /** The impacted region id. */\n  id?: string;\n  /** The impacted region name. */\n  name?: string;\n}\n\n/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */\nexport interface ProxyResource extends Resource {}\n\n/** The metadata entity contract. */\nexport interface MetadataEntity extends ProxyResource {\n  /** The display name. */\n  displayName?: string;\n  /** The list of keys on which this entity depends on. */\n  dependsOn?: string[];\n  /** The list of scenarios applicable to this metadata entity. */\n  applicableScenarios?: Scenario[];\n  /** The list of supported values. */\n  supportedValues?: MetadataSupportedValueDetail[];\n}\n\n/** Impacted resource for an event. */\nexport interface EventImpactedResource extends ProxyResource {\n  /**\n   * Resource type within Microsoft cloud.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly targetResourceType?: string;\n  /**\n   * Identity for resource within Microsoft cloud.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly targetResourceId?: string;\n  /**\n   * Impacted resource region name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly targetRegion?: string;\n  /** Additional information. */\n  info?: KeyValueItem[];\n}\n\n/** Service health event */\nexport interface Event extends ProxyResource {\n  /** Type of event. */\n  eventType?: EventTypeValues;\n  /** Source of event. */\n  eventSource?: EventSourceValues;\n  /** Current status of event. */\n  status?: EventStatusValues;\n  /** Title text of event. */\n  title?: string;\n  /** Summary text of event. */\n  summary?: string;\n  /** Header text of event. */\n  header?: string;\n  /** Level of insight. */\n  level?: LevelValues;\n  /** Level of event. */\n  eventLevel?: EventLevelValues;\n  /** The id of the Incident */\n  externalIncidentId?: string;\n  /** The reason for the Incident */\n  reason?: string;\n  /** Article of event. */\n  article?: EventPropertiesArticle;\n  /** Useful links of event. */\n  links?: Link[];\n  /** It provides the Timestamp for when the health impacting event started. */\n  impactStartTime?: Date;\n  /** It provides the Timestamp for when the health impacting event resolved. */\n  impactMitigationTime?: Date;\n  /** List services impacted by the service health event. */\n  impact?: Impact[];\n  /** Recommended actions of event. */\n  recommendedActions?: EventPropertiesRecommendedActions;\n  /** Frequently asked questions for the service health event. */\n  faqs?: Faq[];\n  /** It provides information if the event is High incident rate event or not. */\n  isHIR?: boolean;\n  /** Tells if we want to enable or disable Microsoft Support for this event. */\n  enableMicrosoftSupport?: boolean;\n  /** Contains the communication message for the event, that could include summary, root cause and other details. */\n  description?: string;\n  /** Is true if the event is platform initiated. */\n  platformInitiated?: boolean;\n  /** Tells if we want to enable or disable Microsoft Support for this event. */\n  enableChatWithUs?: boolean;\n  /** Priority level of the event. Has value from 0 to 23. 0 is the highest priority. Service issue events have higher priority followed by planned maintenance and health advisory. Critical events have higher priority followed by error, warning and informational. Furthermore, active events have higher priority than resolved. */\n  priority?: number;\n  /** It provides the Timestamp for when the health impacting event was last updated. */\n  lastUpdateTime?: Date;\n  /** Stage for HIR Document */\n  hirStage?: string;\n  /** Additional information */\n  additionalInformation?: EventPropertiesAdditionalInformation;\n  /** duration in seconds */\n  duration?: number;\n  /** The type of the impact */\n  impactType?: string;\n}\n\n/** The Get EmergingIssues operation response. */\nexport interface EmergingIssuesGetResult extends ProxyResource {\n  /** Timestamp for when last time refreshed for ongoing emerging issue. */\n  refreshTimestamp?: Date;\n  /** The list of emerging issues of banner type. */\n  statusBanners?: StatusBanner[];\n  /** The list of emerging issues of active event type. */\n  statusActiveEvents?: StatusActiveEvent[];\n}\n\n/** impactedResource with health status */\nexport interface ImpactedResourceStatus extends ProxyResource {\n  /** Impacted resource status of the resource. */\n  availabilityState?: AvailabilityStateValues;\n  /** Title description of the impacted resource status. */\n  title?: string;\n  /** Summary description of the impacted resource status. */\n  summary?: string;\n  /** When the resource's availabilityState is Unavailable, it describes where the health impacting event was originated. */\n  reasonType?: ReasonTypeValues;\n  /** Timestamp for when last change in health status occurred. */\n  occurredTime?: Date;\n}\n\n/** Known values of {@link AvailabilityStateValues} that the service accepts. */\nexport enum KnownAvailabilityStateValues {\n  /** Available */\n  Available = \"Available\",\n  /** Unavailable */\n  Unavailable = \"Unavailable\",\n  /** Degraded */\n  Degraded = \"Degraded\",\n  /** Unknown */\n  Unknown = \"Unknown\"\n}\n\n/**\n * Defines values for AvailabilityStateValues. \\\n * {@link KnownAvailabilityStateValues} can be used interchangeably with AvailabilityStateValues,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Available** \\\n * **Unavailable** \\\n * **Degraded** \\\n * **Unknown**\n */\nexport type AvailabilityStateValues = string;\n\n/** Known values of {@link ReasonChronicityTypes} that the service accepts. */\nexport enum KnownReasonChronicityTypes {\n  /** Transient */\n  Transient = \"Transient\",\n  /** Persistent */\n  Persistent = \"Persistent\"\n}\n\n/**\n * Defines values for ReasonChronicityTypes. \\\n * {@link KnownReasonChronicityTypes} can be used interchangeably with ReasonChronicityTypes,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Transient** \\\n * **Persistent**\n */\nexport type ReasonChronicityTypes = string;\n\n/** Known values of {@link Scenario} that the service accepts. */\nexport enum KnownScenario {\n  /** Alerts */\n  Alerts = \"Alerts\"\n}\n\n/**\n * Defines values for Scenario. \\\n * {@link KnownScenario} can be used interchangeably with Scenario,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Alerts**\n */\nexport type Scenario = string;\n\n/** Known values of {@link CreatedByType} that the service accepts. */\nexport enum KnownCreatedByType {\n  /** User */\n  User = \"User\",\n  /** Application */\n  Application = \"Application\",\n  /** ManagedIdentity */\n  ManagedIdentity = \"ManagedIdentity\",\n  /** Key */\n  Key = \"Key\"\n}\n\n/**\n * Defines values for CreatedByType. \\\n * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **User** \\\n * **Application** \\\n * **ManagedIdentity** \\\n * **Key**\n */\nexport type CreatedByType = string;\n\n/** Known values of {@link EventTypeValues} that the service accepts. */\nexport enum KnownEventTypeValues {\n  /** ServiceIssue */\n  ServiceIssue = \"ServiceIssue\",\n  /** PlannedMaintenance */\n  PlannedMaintenance = \"PlannedMaintenance\",\n  /** HealthAdvisory */\n  HealthAdvisory = \"HealthAdvisory\",\n  /** RCA */\n  RCA = \"RCA\",\n  /** EmergingIssues */\n  EmergingIssues = \"EmergingIssues\",\n  /** SecurityAdvisory */\n  SecurityAdvisory = \"SecurityAdvisory\"\n}\n\n/**\n * Defines values for EventTypeValues. \\\n * {@link KnownEventTypeValues} can be used interchangeably with EventTypeValues,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **ServiceIssue** \\\n * **PlannedMaintenance** \\\n * **HealthAdvisory** \\\n * **RCA** \\\n * **EmergingIssues** \\\n * **SecurityAdvisory**\n */\nexport type EventTypeValues = string;\n\n/** Known values of {@link EventSourceValues} that the service accepts. */\nexport enum KnownEventSourceValues {\n  /** ResourceHealth */\n  ResourceHealth = \"ResourceHealth\",\n  /** ServiceHealth */\n  ServiceHealth = \"ServiceHealth\"\n}\n\n/**\n * Defines values for EventSourceValues. \\\n * {@link KnownEventSourceValues} can be used interchangeably with EventSourceValues,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **ResourceHealth** \\\n * **ServiceHealth**\n */\nexport type EventSourceValues = string;\n\n/** Known values of {@link EventStatusValues} that the service accepts. */\nexport enum KnownEventStatusValues {\n  /** Active */\n  Active = \"Active\",\n  /** Resolved */\n  Resolved = \"Resolved\"\n}\n\n/**\n * Defines values for EventStatusValues. \\\n * {@link KnownEventStatusValues} can be used interchangeably with EventStatusValues,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Active** \\\n * **Resolved**\n */\nexport type EventStatusValues = string;\n\n/** Known values of {@link LevelValues} that the service accepts. */\nexport enum KnownLevelValues {\n  /** Critical */\n  Critical = \"Critical\",\n  /** Warning */\n  Warning = \"Warning\"\n}\n\n/**\n * Defines values for LevelValues. \\\n * {@link KnownLevelValues} can be used interchangeably with LevelValues,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Critical** \\\n * **Warning**\n */\nexport type LevelValues = string;\n\n/** Known values of {@link EventLevelValues} that the service accepts. */\nexport enum KnownEventLevelValues {\n  /** Critical */\n  Critical = \"Critical\",\n  /** Error */\n  Error = \"Error\",\n  /** Warning */\n  Warning = \"Warning\",\n  /** Informational */\n  Informational = \"Informational\"\n}\n\n/**\n * Defines values for EventLevelValues. \\\n * {@link KnownEventLevelValues} can be used interchangeably with EventLevelValues,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Critical** \\\n * **Error** \\\n * **Warning** \\\n * **Informational**\n */\nexport type EventLevelValues = string;\n\n/** Known values of {@link LinkTypeValues} that the service accepts. */\nexport enum KnownLinkTypeValues {\n  /** Button */\n  Button = \"Button\",\n  /** Hyperlink */\n  Hyperlink = \"Hyperlink\"\n}\n\n/**\n * Defines values for LinkTypeValues. \\\n * {@link KnownLinkTypeValues} can be used interchangeably with LinkTypeValues,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Button** \\\n * **Hyperlink**\n */\nexport type LinkTypeValues = string;\n\n/** Known values of {@link SeverityValues} that the service accepts. */\nexport enum KnownSeverityValues {\n  /** Information */\n  Information = \"Information\",\n  /** Warning */\n  Warning = \"Warning\",\n  /** Error */\n  Error = \"Error\"\n}\n\n/**\n * Defines values for SeverityValues. \\\n * {@link KnownSeverityValues} can be used interchangeably with SeverityValues,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Information** \\\n * **Warning** \\\n * **Error**\n */\nexport type SeverityValues = string;\n\n/** Known values of {@link StageValues} that the service accepts. */\nexport enum KnownStageValues {\n  /** Active */\n  Active = \"Active\",\n  /** Resolve */\n  Resolve = \"Resolve\",\n  /** Archived */\n  Archived = \"Archived\"\n}\n\n/**\n * Defines values for StageValues. \\\n * {@link KnownStageValues} can be used interchangeably with StageValues,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Active** \\\n * **Resolve** \\\n * **Archived**\n */\nexport type StageValues = string;\n\n/** Known values of {@link IssueNameParameter} that the service accepts. */\nexport enum KnownIssueNameParameter {\n  /** Default */\n  Default = \"default\"\n}\n\n/**\n * Defines values for IssueNameParameter. \\\n * {@link KnownIssueNameParameter} can be used interchangeably with IssueNameParameter,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **default**\n */\nexport type IssueNameParameter = string;\n\n/** Known values of {@link ReasonTypeValues} that the service accepts. */\nexport enum KnownReasonTypeValues {\n  /** Unplanned */\n  Unplanned = \"Unplanned\",\n  /** Planned */\n  Planned = \"Planned\",\n  /** UserInitiated */\n  UserInitiated = \"UserInitiated\"\n}\n\n/**\n * Defines values for ReasonTypeValues. \\\n * {@link KnownReasonTypeValues} can be used interchangeably with ReasonTypeValues,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unplanned** \\\n * **Planned** \\\n * **UserInitiated**\n */\nexport type ReasonTypeValues = string;\n\n/** Optional parameters. */\nexport interface AvailabilityStatusesListBySubscriptionIdOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN */\n  filter?: string;\n  /** Setting $expand=recommendedactions in url query expands the recommendedactions in the response. */\n  expand?: string;\n}\n\n/** Contains response data for the listBySubscriptionId operation. */\nexport type AvailabilityStatusesListBySubscriptionIdResponse = AvailabilityStatusListResult;\n\n/** Optional parameters. */\nexport interface AvailabilityStatusesListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN */\n  filter?: string;\n  /** Setting $expand=recommendedactions in url query expands the recommendedactions in the response. */\n  expand?: string;\n}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type AvailabilityStatusesListByResourceGroupResponse = AvailabilityStatusListResult;\n\n/** Optional parameters. */\nexport interface AvailabilityStatusesGetByResourceOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN */\n  filter?: string;\n  /** Setting $expand=recommendedactions in url query expands the recommendedactions in the response. */\n  expand?: string;\n}\n\n/** Contains response data for the getByResource operation. */\nexport type AvailabilityStatusesGetByResourceResponse = AvailabilityStatus;\n\n/** Optional parameters. */\nexport interface AvailabilityStatusesListOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN */\n  filter?: string;\n  /** Setting $expand=recommendedactions in url query expands the recommendedactions in the response. */\n  expand?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type AvailabilityStatusesListResponse = AvailabilityStatusListResult;\n\n/** Optional parameters. */\nexport interface AvailabilityStatusesListBySubscriptionIdNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBySubscriptionIdNext operation. */\nexport type AvailabilityStatusesListBySubscriptionIdNextResponse = AvailabilityStatusListResult;\n\n/** Optional parameters. */\nexport interface AvailabilityStatusesListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type AvailabilityStatusesListByResourceGroupNextResponse = AvailabilityStatusListResult;\n\n/** Optional parameters. */\nexport interface AvailabilityStatusesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type AvailabilityStatusesListNextResponse = AvailabilityStatusListResult;\n\n/** Optional parameters. */\nexport interface OperationsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type OperationsListResponse = OperationListResult;\n\n/** Optional parameters. */\nexport interface MetadataListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type MetadataListResponse = MetadataEntityListResult;\n\n/** Optional parameters. */\nexport interface MetadataGetEntityOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getEntity operation. */\nexport type MetadataGetEntityResponse = MetadataEntity;\n\n/** Optional parameters. */\nexport interface MetadataListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type MetadataListNextResponse = MetadataEntityListResult;\n\n/** Optional parameters. */\nexport interface ImpactedResourcesListBySubscriptionIdAndEventIdOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN */\n  filter?: string;\n}\n\n/** Contains response data for the listBySubscriptionIdAndEventId operation. */\nexport type ImpactedResourcesListBySubscriptionIdAndEventIdResponse = EventImpactedResourceListResult;\n\n/** Optional parameters. */\nexport interface ImpactedResourcesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ImpactedResourcesGetResponse = EventImpactedResource;\n\n/** Optional parameters. */\nexport interface ImpactedResourcesListByTenantIdAndEventIdOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN */\n  filter?: string;\n}\n\n/** Contains response data for the listByTenantIdAndEventId operation. */\nexport type ImpactedResourcesListByTenantIdAndEventIdResponse = EventImpactedResourceListResult;\n\n/** Optional parameters. */\nexport interface ImpactedResourcesGetByTenantIdOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getByTenantId operation. */\nexport type ImpactedResourcesGetByTenantIdResponse = EventImpactedResource;\n\n/** Optional parameters. */\nexport interface ImpactedResourcesListBySubscriptionIdAndEventIdNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBySubscriptionIdAndEventIdNext operation. */\nexport type ImpactedResourcesListBySubscriptionIdAndEventIdNextResponse = EventImpactedResourceListResult;\n\n/** Optional parameters. */\nexport interface ImpactedResourcesListByTenantIdAndEventIdNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByTenantIdAndEventIdNext operation. */\nexport type ImpactedResourcesListByTenantIdAndEventIdNextResponse = EventImpactedResourceListResult;\n\n/** Optional parameters. */\nexport interface SecurityAdvisoryImpactedResourcesListBySubscriptionIdAndEventIdOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN */\n  filter?: string;\n}\n\n/** Contains response data for the listBySubscriptionIdAndEventId operation. */\nexport type SecurityAdvisoryImpactedResourcesListBySubscriptionIdAndEventIdResponse = EventImpactedResourceListResult;\n\n/** Optional parameters. */\nexport interface SecurityAdvisoryImpactedResourcesListByTenantIdAndEventIdOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN */\n  filter?: string;\n}\n\n/** Contains response data for the listByTenantIdAndEventId operation. */\nexport type SecurityAdvisoryImpactedResourcesListByTenantIdAndEventIdResponse = EventImpactedResourceListResult;\n\n/** Optional parameters. */\nexport interface SecurityAdvisoryImpactedResourcesListBySubscriptionIdAndEventIdNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBySubscriptionIdAndEventIdNext operation. */\nexport type SecurityAdvisoryImpactedResourcesListBySubscriptionIdAndEventIdNextResponse = EventImpactedResourceListResult;\n\n/** Optional parameters. */\nexport interface SecurityAdvisoryImpactedResourcesListByTenantIdAndEventIdNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByTenantIdAndEventIdNext operation. */\nexport type SecurityAdvisoryImpactedResourcesListByTenantIdAndEventIdNextResponse = EventImpactedResourceListResult;\n\n/** Optional parameters. */\nexport interface EventsListBySubscriptionIdOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN */\n  filter?: string;\n  /** Specifies from when to return events, based on the lastUpdateTime property. For example, queryStartTime = 7/24/2020 OR queryStartTime=7%2F24%2F2020 */\n  queryStartTime?: string;\n}\n\n/** Contains response data for the listBySubscriptionId operation. */\nexport type EventsListBySubscriptionIdResponse = Events;\n\n/** Optional parameters. */\nexport interface EventsListByTenantIdOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN */\n  filter?: string;\n  /** Specifies from when to return events, based on the lastUpdateTime property. For example, queryStartTime = 7/24/2020 OR queryStartTime=7%2F24%2F2020 */\n  queryStartTime?: string;\n}\n\n/** Contains response data for the listByTenantId operation. */\nexport type EventsListByTenantIdResponse = Events;\n\n/** Optional parameters. */\nexport interface EventsListBySingleResourceOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN */\n  filter?: string;\n}\n\n/** Contains response data for the listBySingleResource operation. */\nexport type EventsListBySingleResourceResponse = Events;\n\n/** Optional parameters. */\nexport interface EventsListBySubscriptionIdNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBySubscriptionIdNext operation. */\nexport type EventsListBySubscriptionIdNextResponse = Events;\n\n/** Optional parameters. */\nexport interface EventsListByTenantIdNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByTenantIdNext operation. */\nexport type EventsListByTenantIdNextResponse = Events;\n\n/** Optional parameters. */\nexport interface EventsListBySingleResourceNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBySingleResourceNext operation. */\nexport type EventsListBySingleResourceNextResponse = Events;\n\n/** Optional parameters. */\nexport interface EventGetBySubscriptionIdAndTrackingIdOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN */\n  filter?: string;\n  /** Specifies from when to return events, based on the lastUpdateTime property. For example, queryStartTime = 7/24/2020 OR queryStartTime=7%2F24%2F2020 */\n  queryStartTime?: string;\n}\n\n/** Contains response data for the getBySubscriptionIdAndTrackingId operation. */\nexport type EventGetBySubscriptionIdAndTrackingIdResponse = Event;\n\n/** Optional parameters. */\nexport interface EventFetchDetailsBySubscriptionIdAndTrackingIdOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the fetchDetailsBySubscriptionIdAndTrackingId operation. */\nexport type EventFetchDetailsBySubscriptionIdAndTrackingIdResponse = Event;\n\n/** Optional parameters. */\nexport interface EventGetByTenantIdAndTrackingIdOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN */\n  filter?: string;\n  /** Specifies from when to return events, based on the lastUpdateTime property. For example, queryStartTime = 7/24/2020 OR queryStartTime=7%2F24%2F2020 */\n  queryStartTime?: string;\n}\n\n/** Contains response data for the getByTenantIdAndTrackingId operation. */\nexport type EventGetByTenantIdAndTrackingIdResponse = Event;\n\n/** Optional parameters. */\nexport interface EventFetchDetailsByTenantIdAndTrackingIdOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the fetchDetailsByTenantIdAndTrackingId operation. */\nexport type EventFetchDetailsByTenantIdAndTrackingIdResponse = Event;\n\n/** Optional parameters. */\nexport interface ChildAvailabilityStatusesGetByResourceOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN */\n  filter?: string;\n  /** Setting $expand=recommendedactions in url query expands the recommendedactions in the response. */\n  expand?: string;\n}\n\n/** Contains response data for the getByResource operation. */\nexport type ChildAvailabilityStatusesGetByResourceResponse = AvailabilityStatus;\n\n/** Optional parameters. */\nexport interface ChildAvailabilityStatusesListOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN */\n  filter?: string;\n  /** Setting $expand=recommendedactions in url query expands the recommendedactions in the response. */\n  expand?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type ChildAvailabilityStatusesListResponse = AvailabilityStatusListResult;\n\n/** Optional parameters. */\nexport interface ChildAvailabilityStatusesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ChildAvailabilityStatusesListNextResponse = AvailabilityStatusListResult;\n\n/** Optional parameters. */\nexport interface ChildResourcesListOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN */\n  filter?: string;\n  /** Setting $expand=recommendedactions in url query expands the recommendedactions in the response. */\n  expand?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type ChildResourcesListResponse = AvailabilityStatusListResult;\n\n/** Optional parameters. */\nexport interface ChildResourcesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ChildResourcesListNextResponse = AvailabilityStatusListResult;\n\n/** Optional parameters. */\nexport interface EmergingIssuesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type EmergingIssuesListResponse = EmergingIssueListResult;\n\n/** Optional parameters. */\nexport interface EmergingIssuesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type EmergingIssuesGetResponse = EmergingIssuesGetResult;\n\n/** Optional parameters. */\nexport interface EmergingIssuesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type EmergingIssuesListNextResponse = EmergingIssueListResult;\n\n/** Optional parameters. */\nexport interface MicrosoftResourceHealthOptionalParams\n  extends coreClient.ServiceClientOptions {\n  /** server parameter */\n  $host?: string;\n  /** Api Version */\n  apiVersion?: string;\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport const AvailabilityStatusListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AvailabilityStatusListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"AvailabilityStatus\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AvailabilityStatus: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AvailabilityStatus\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"AvailabilityStatusProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const AvailabilityStatusProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AvailabilityStatusProperties\",\n    modelProperties: {\n      availabilityState: {\n        serializedName: \"availabilityState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      title: {\n        serializedName: \"title\",\n        type: {\n          name: \"String\"\n        }\n      },\n      summary: {\n        serializedName: \"summary\",\n        type: {\n          name: \"String\"\n        }\n      },\n      detailedStatus: {\n        serializedName: \"detailedStatus\",\n        type: {\n          name: \"String\"\n        }\n      },\n      reasonType: {\n        serializedName: \"reasonType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      context: {\n        serializedName: \"context\",\n        type: {\n          name: \"String\"\n        }\n      },\n      category: {\n        serializedName: \"category\",\n        type: {\n          name: \"String\"\n        }\n      },\n      articleId: {\n        serializedName: \"articleId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      rootCauseAttributionTime: {\n        serializedName: \"rootCauseAttributionTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      healthEventType: {\n        serializedName: \"healthEventType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      healthEventCause: {\n        serializedName: \"healthEventCause\",\n        type: {\n          name: \"String\"\n        }\n      },\n      healthEventCategory: {\n        serializedName: \"healthEventCategory\",\n        type: {\n          name: \"String\"\n        }\n      },\n      healthEventId: {\n        serializedName: \"healthEventId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resolutionETA: {\n        serializedName: \"resolutionETA\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      occuredTime: {\n        serializedName: \"occuredTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      reasonChronicity: {\n        serializedName: \"reasonChronicity\",\n        type: {\n          name: \"String\"\n        }\n      },\n      reportedTime: {\n        serializedName: \"reportedTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      recentlyResolved: {\n        serializedName: \"recentlyResolved\",\n        type: {\n          name: \"Composite\",\n          className: \"AvailabilityStatusPropertiesRecentlyResolved\"\n        }\n      },\n      recommendedActions: {\n        serializedName: \"recommendedActions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RecommendedAction\"\n            }\n          }\n        }\n      },\n      serviceImpactingEvents: {\n        serializedName: \"serviceImpactingEvents\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ServiceImpactingEvent\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const AvailabilityStatusPropertiesRecentlyResolved: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AvailabilityStatusPropertiesRecentlyResolved\",\n    modelProperties: {\n      unavailableOccuredTime: {\n        serializedName: \"unavailableOccuredTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      resolvedTime: {\n        serializedName: \"resolvedTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      unavailableSummary: {\n        serializedName: \"unavailableSummary\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RecommendedAction: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RecommendedAction\",\n    modelProperties: {\n      action: {\n        serializedName: \"action\",\n        type: {\n          name: \"String\"\n        }\n      },\n      actionUrl: {\n        serializedName: \"actionUrl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      actionUrlComment: {\n        serializedName: \"_ActionUrl\\\\.Comment\",\n        type: {\n          name: \"String\"\n        }\n      },\n      actionUrlText: {\n        serializedName: \"actionUrlText\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceImpactingEvent: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServiceImpactingEvent\",\n    modelProperties: {\n      eventStartTime: {\n        serializedName: \"eventStartTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      eventStatusLastModifiedTime: {\n        serializedName: \"eventStatusLastModifiedTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      correlationId: {\n        serializedName: \"correlationId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"Composite\",\n          className: \"ServiceImpactingEventStatus\"\n        }\n      },\n      incidentProperties: {\n        serializedName: \"incidentProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"ServiceImpactingEventIncidentProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceImpactingEventStatus: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServiceImpactingEventStatus\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceImpactingEventIncidentProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServiceImpactingEventIncidentProperties\",\n    modelProperties: {\n      title: {\n        serializedName: \"title\",\n        type: {\n          name: \"String\"\n        }\n      },\n      service: {\n        serializedName: \"service\",\n        type: {\n          name: \"String\"\n        }\n      },\n      region: {\n        serializedName: \"region\",\n        type: {\n          name: \"String\"\n        }\n      },\n      incidentType: {\n        serializedName: \"incidentType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorResponse\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      details: {\n        serializedName: \"details\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Operation\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Operation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Operation\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      display: {\n        serializedName: \"display\",\n        type: {\n          name: \"Composite\",\n          className: \"OperationDisplay\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationDisplay: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationDisplay\",\n    modelProperties: {\n      provider: {\n        serializedName: \"provider\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resource: {\n        serializedName: \"resource\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operation: {\n        serializedName: \"operation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MetadataEntityListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetadataEntityListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MetadataEntity\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MetadataSupportedValueDetail: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetadataSupportedValueDetail\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceTypes: {\n        serializedName: \"resourceTypes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Resource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Resource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      }\n    }\n  }\n};\n\nexport const SystemData: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SystemData\",\n    modelProperties: {\n      createdBy: {\n        serializedName: \"createdBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdByType: {\n        serializedName: \"createdByType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdAt: {\n        serializedName: \"createdAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastModifiedBy: {\n        serializedName: \"lastModifiedBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedByType: {\n        serializedName: \"lastModifiedByType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedAt: {\n        serializedName: \"lastModifiedAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const EventImpactedResourceListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EventImpactedResourceListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"EventImpactedResource\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const KeyValueItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KeyValueItem\",\n    modelProperties: {\n      key: {\n        serializedName: \"key\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Events: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Events\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Event\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EventPropertiesArticle: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EventPropertiesArticle\",\n    modelProperties: {\n      articleContent: {\n        serializedName: \"articleContent\",\n        type: {\n          name: \"String\"\n        }\n      },\n      articleId: {\n        serializedName: \"articleId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      parameters: {\n        serializedName: \"parameters\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const Link: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Link\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayText: {\n        serializedName: \"displayText\",\n        type: {\n          name: \"Composite\",\n          className: \"LinkDisplayText\"\n        }\n      },\n      extensionName: {\n        serializedName: \"extensionName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      bladeName: {\n        serializedName: \"bladeName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      parameters: {\n        serializedName: \"parameters\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const LinkDisplayText: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LinkDisplayText\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      },\n      localizedValue: {\n        serializedName: \"localizedValue\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Impact: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Impact\",\n    modelProperties: {\n      impactedService: {\n        serializedName: \"impactedService\",\n        type: {\n          name: \"String\"\n        }\n      },\n      impactedRegions: {\n        serializedName: \"impactedRegions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ImpactedServiceRegion\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ImpactedServiceRegion: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ImpactedServiceRegion\",\n    modelProperties: {\n      impactedRegion: {\n        serializedName: \"impactedRegion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      impactedSubscriptions: {\n        serializedName: \"impactedSubscriptions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      impactedTenants: {\n        serializedName: \"impactedTenants\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      lastUpdateTime: {\n        serializedName: \"lastUpdateTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      updates: {\n        serializedName: \"updates\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Update\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Update: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Update\",\n    modelProperties: {\n      summary: {\n        serializedName: \"summary\",\n        type: {\n          name: \"String\"\n        }\n      },\n      updateDateTime: {\n        serializedName: \"updateDateTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const EventPropertiesRecommendedActions: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EventPropertiesRecommendedActions\",\n    modelProperties: {\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      },\n      actions: {\n        serializedName: \"actions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"EventPropertiesRecommendedActionsItem\"\n            }\n          }\n        }\n      },\n      localeCode: {\n        serializedName: \"localeCode\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EventPropertiesRecommendedActionsItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EventPropertiesRecommendedActionsItem\",\n    modelProperties: {\n      groupId: {\n        serializedName: \"groupId\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      actionText: {\n        serializedName: \"actionText\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Faq: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Faq\",\n    modelProperties: {\n      question: {\n        serializedName: \"question\",\n        type: {\n          name: \"String\"\n        }\n      },\n      answer: {\n        serializedName: \"answer\",\n        type: {\n          name: \"String\"\n        }\n      },\n      localeCode: {\n        serializedName: \"localeCode\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EventPropertiesAdditionalInformation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EventPropertiesAdditionalInformation\",\n    modelProperties: {\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EmergingIssueListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EmergingIssueListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"EmergingIssuesGetResult\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const StatusBanner: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StatusBanner\",\n    modelProperties: {\n      title: {\n        serializedName: \"title\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      },\n      cloud: {\n        serializedName: \"cloud\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedTime: {\n        serializedName: \"lastModifiedTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const StatusActiveEvent: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StatusActiveEvent\",\n    modelProperties: {\n      title: {\n        serializedName: \"title\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      trackingId: {\n        serializedName: \"trackingId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      startTime: {\n        serializedName: \"startTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      cloud: {\n        serializedName: \"cloud\",\n        type: {\n          name: \"String\"\n        }\n      },\n      severity: {\n        serializedName: \"severity\",\n        type: {\n          name: \"String\"\n        }\n      },\n      stage: {\n        serializedName: \"stage\",\n        type: {\n          name: \"String\"\n        }\n      },\n      published: {\n        serializedName: \"published\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      lastModifiedTime: {\n        serializedName: \"lastModifiedTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      impacts: {\n        serializedName: \"impacts\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"EmergingIssueImpact\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const EmergingIssueImpact: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EmergingIssueImpact\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      regions: {\n        serializedName: \"regions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ImpactedRegion\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ImpactedRegion: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ImpactedRegion\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ProxyResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProxyResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties\n    }\n  }\n};\n\nexport const MetadataEntity: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetadataEntity\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      displayName: {\n        serializedName: \"properties.displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      dependsOn: {\n        serializedName: \"properties.dependsOn\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      applicableScenarios: {\n        serializedName: \"properties.applicableScenarios\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      supportedValues: {\n        serializedName: \"properties.supportedValues\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MetadataSupportedValueDetail\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const EventImpactedResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EventImpactedResource\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      targetResourceType: {\n        serializedName: \"properties.targetResourceType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      targetResourceId: {\n        serializedName: \"properties.targetResourceId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      targetRegion: {\n        serializedName: \"properties.targetRegion\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      info: {\n        serializedName: \"properties.info\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"KeyValueItem\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Event: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Event\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      eventType: {\n        serializedName: \"properties.eventType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      eventSource: {\n        serializedName: \"properties.eventSource\",\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"properties.status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      title: {\n        serializedName: \"properties.title\",\n        type: {\n          name: \"String\"\n        }\n      },\n      summary: {\n        serializedName: \"properties.summary\",\n        type: {\n          name: \"String\"\n        }\n      },\n      header: {\n        serializedName: \"properties.header\",\n        type: {\n          name: \"String\"\n        }\n      },\n      level: {\n        serializedName: \"properties.level\",\n        type: {\n          name: \"String\"\n        }\n      },\n      eventLevel: {\n        serializedName: \"properties.eventLevel\",\n        type: {\n          name: \"String\"\n        }\n      },\n      externalIncidentId: {\n        serializedName: \"properties.externalIncidentId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      reason: {\n        serializedName: \"properties.reason\",\n        type: {\n          name: \"String\"\n        }\n      },\n      article: {\n        serializedName: \"properties.article\",\n        type: {\n          name: \"Composite\",\n          className: \"EventPropertiesArticle\"\n        }\n      },\n      links: {\n        serializedName: \"properties.links\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Link\"\n            }\n          }\n        }\n      },\n      impactStartTime: {\n        serializedName: \"properties.impactStartTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      impactMitigationTime: {\n        serializedName: \"properties.impactMitigationTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      impact: {\n        serializedName: \"properties.impact\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Impact\"\n            }\n          }\n        }\n      },\n      recommendedActions: {\n        serializedName: \"properties.recommendedActions\",\n        type: {\n          name: \"Composite\",\n          className: \"EventPropertiesRecommendedActions\"\n        }\n      },\n      faqs: {\n        serializedName: \"properties.faqs\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Faq\"\n            }\n          }\n        }\n      },\n      isHIR: {\n        serializedName: \"properties.isHIR\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      enableMicrosoftSupport: {\n        serializedName: \"properties.enableMicrosoftSupport\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      description: {\n        serializedName: \"properties.description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      platformInitiated: {\n        serializedName: \"properties.platformInitiated\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      enableChatWithUs: {\n        serializedName: \"properties.enableChatWithUs\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      priority: {\n        serializedName: \"properties.priority\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      lastUpdateTime: {\n        serializedName: \"properties.lastUpdateTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      hirStage: {\n        serializedName: \"properties.hirStage\",\n        type: {\n          name: \"String\"\n        }\n      },\n      additionalInformation: {\n        serializedName: \"properties.additionalInformation\",\n        type: {\n          name: \"Composite\",\n          className: \"EventPropertiesAdditionalInformation\"\n        }\n      },\n      duration: {\n        serializedName: \"properties.duration\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      impactType: {\n        serializedName: \"properties.impactType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EmergingIssuesGetResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EmergingIssuesGetResult\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      refreshTimestamp: {\n        serializedName: \"properties.refreshTimestamp\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      statusBanners: {\n        serializedName: \"properties.statusBanners\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"StatusBanner\"\n            }\n          }\n        }\n      },\n      statusActiveEvents: {\n        serializedName: \"properties.statusActiveEvents\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"StatusActiveEvent\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ImpactedResourceStatus: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ImpactedResourceStatus\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      availabilityState: {\n        serializedName: \"properties.availabilityState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      title: {\n        serializedName: \"properties.title\",\n        type: {\n          name: \"String\"\n        }\n      },\n      summary: {\n        serializedName: \"properties.summary\",\n        type: {\n          name: \"String\"\n        }\n      },\n      reasonType: {\n        serializedName: \"properties.reasonType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      occurredTime: {\n        serializedName: \"properties.occurredTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter\n} from \"@azure/core-client\";\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2022-10-01\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const filter: OperationQueryParameter = {\n  parameterPath: [\"options\", \"filter\"],\n  mapper: {\n    serializedName: \"$filter\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const subscriptionId: OperationURLParameter = {\n  parameterPath: \"subscriptionId\",\n  mapper: {\n    constraints: {\n      MinLength: 1\n    },\n    serializedName: \"subscriptionId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const expand: OperationQueryParameter = {\n  parameterPath: [\"options\", \"expand\"],\n  mapper: {\n    serializedName: \"$expand\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const resourceGroupName: OperationURLParameter = {\n  parameterPath: \"resourceGroupName\",\n  mapper: {\n    constraints: {\n      MaxLength: 90,\n      MinLength: 1\n    },\n    serializedName: \"resourceGroupName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const resourceUri: OperationURLParameter = {\n  parameterPath: \"resourceUri\",\n  mapper: {\n    serializedName: \"resourceUri\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const nextLink: OperationURLParameter = {\n  parameterPath: \"nextLink\",\n  mapper: {\n    serializedName: \"nextLink\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const name: OperationURLParameter = {\n  parameterPath: \"name\",\n  mapper: {\n    serializedName: \"name\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const eventTrackingId: OperationURLParameter = {\n  parameterPath: \"eventTrackingId\",\n  mapper: {\n    serializedName: \"eventTrackingId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const impactedResourceName: OperationURLParameter = {\n  parameterPath: \"impactedResourceName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[^*#&+:<>%?]+$\")\n    },\n    serializedName: \"impactedResourceName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const queryStartTime: OperationQueryParameter = {\n  parameterPath: [\"options\", \"queryStartTime\"],\n  mapper: {\n    serializedName: \"queryStartTime\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const issueName: OperationURLParameter = {\n  parameterPath: \"issueName\",\n  mapper: {\n    serializedName: \"issueName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { AvailabilityStatuses } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { MicrosoftResourceHealth } from \"../microsoftResourceHealth\";\nimport {\n  AvailabilityStatus,\n  AvailabilityStatusesListBySubscriptionIdNextOptionalParams,\n  AvailabilityStatusesListBySubscriptionIdOptionalParams,\n  AvailabilityStatusesListBySubscriptionIdResponse,\n  AvailabilityStatusesListByResourceGroupNextOptionalParams,\n  AvailabilityStatusesListByResourceGroupOptionalParams,\n  AvailabilityStatusesListByResourceGroupResponse,\n  AvailabilityStatusesListNextOptionalParams,\n  AvailabilityStatusesListOptionalParams,\n  AvailabilityStatusesListResponse,\n  AvailabilityStatusesGetByResourceOptionalParams,\n  AvailabilityStatusesGetByResourceResponse,\n  AvailabilityStatusesListBySubscriptionIdNextResponse,\n  AvailabilityStatusesListByResourceGroupNextResponse,\n  AvailabilityStatusesListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing AvailabilityStatuses operations. */\nexport class AvailabilityStatusesImpl implements AvailabilityStatuses {\n  private readonly client: MicrosoftResourceHealth;\n\n  /**\n   * Initialize a new instance of the class AvailabilityStatuses class.\n   * @param client Reference to the service client\n   */\n  constructor(client: MicrosoftResourceHealth) {\n    this.client = client;\n  }\n\n  /**\n   * Lists the current availability status for all the resources in the subscription.\n   * @param options The options parameters.\n   */\n  public listBySubscriptionId(\n    options?: AvailabilityStatusesListBySubscriptionIdOptionalParams\n  ): PagedAsyncIterableIterator<AvailabilityStatus> {\n    const iter = this.listBySubscriptionIdPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listBySubscriptionIdPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listBySubscriptionIdPagingPage(\n    options?: AvailabilityStatusesListBySubscriptionIdOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<AvailabilityStatus[]> {\n    let result: AvailabilityStatusesListBySubscriptionIdResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listBySubscriptionId(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listBySubscriptionIdNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listBySubscriptionIdPagingAll(\n    options?: AvailabilityStatusesListBySubscriptionIdOptionalParams\n  ): AsyncIterableIterator<AvailabilityStatus> {\n    for await (const page of this.listBySubscriptionIdPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists the current availability status for all the resources in the resource group.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  public listByResourceGroup(\n    resourceGroupName: string,\n    options?: AvailabilityStatusesListByResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<AvailabilityStatus> {\n    const iter = this.listByResourceGroupPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByResourceGroupPagingPage(\n          resourceGroupName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: AvailabilityStatusesListByResourceGroupOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<AvailabilityStatus[]> {\n    let result: AvailabilityStatusesListByResourceGroupResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByResourceGroup(resourceGroupName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByResourceGroupNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: AvailabilityStatusesListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<AvailabilityStatus> {\n    for await (const page of this.listByResourceGroupPagingPage(\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all historical availability transitions and impacting events for a single resource.\n   * @param resourceUri The fully qualified ID of the resource, including the resource name and resource\n   *                    type. Currently the API support not nested and one nesting level resource types :\n   *                    /subscriptions/{subscriptionId}/resourceGroups/{resource-group-name}/providers/{resource-provider-name}/{resource-type}/{resource-name}\n   *                    and\n   *                    /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resource-provider-name}/{parentResourceType}/{parentResourceName}/{resourceType}/{resourceName}\n   * @param options The options parameters.\n   */\n  public list(\n    resourceUri: string,\n    options?: AvailabilityStatusesListOptionalParams\n  ): PagedAsyncIterableIterator<AvailabilityStatus> {\n    const iter = this.listPagingAll(resourceUri, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(resourceUri, options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceUri: string,\n    options?: AvailabilityStatusesListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<AvailabilityStatus[]> {\n    let result: AvailabilityStatusesListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(resourceUri, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(resourceUri, continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceUri: string,\n    options?: AvailabilityStatusesListOptionalParams\n  ): AsyncIterableIterator<AvailabilityStatus> {\n    for await (const page of this.listPagingPage(resourceUri, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists the current availability status for all the resources in the subscription.\n   * @param options The options parameters.\n   */\n  private _listBySubscriptionId(\n    options?: AvailabilityStatusesListBySubscriptionIdOptionalParams\n  ): Promise<AvailabilityStatusesListBySubscriptionIdResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      listBySubscriptionIdOperationSpec\n    );\n  }\n\n  /**\n   * Lists the current availability status for all the resources in the resource group.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroup(\n    resourceGroupName: string,\n    options?: AvailabilityStatusesListByResourceGroupOptionalParams\n  ): Promise<AvailabilityStatusesListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listByResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Gets current availability status for a single resource\n   * @param resourceUri The fully qualified ID of the resource, including the resource name and resource\n   *                    type. Currently the API support not nested and one nesting level resource types :\n   *                    /subscriptions/{subscriptionId}/resourceGroups/{resource-group-name}/providers/{resource-provider-name}/{resource-type}/{resource-name}\n   *                    and\n   *                    /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resource-provider-name}/{parentResourceType}/{parentResourceName}/{resourceType}/{resourceName}\n   * @param options The options parameters.\n   */\n  getByResource(\n    resourceUri: string,\n    options?: AvailabilityStatusesGetByResourceOptionalParams\n  ): Promise<AvailabilityStatusesGetByResourceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceUri, options },\n      getByResourceOperationSpec\n    );\n  }\n\n  /**\n   * Lists all historical availability transitions and impacting events for a single resource.\n   * @param resourceUri The fully qualified ID of the resource, including the resource name and resource\n   *                    type. Currently the API support not nested and one nesting level resource types :\n   *                    /subscriptions/{subscriptionId}/resourceGroups/{resource-group-name}/providers/{resource-provider-name}/{resource-type}/{resource-name}\n   *                    and\n   *                    /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resource-provider-name}/{parentResourceType}/{parentResourceName}/{resourceType}/{resourceName}\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceUri: string,\n    options?: AvailabilityStatusesListOptionalParams\n  ): Promise<AvailabilityStatusesListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceUri, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * ListBySubscriptionIdNext\n   * @param nextLink The nextLink from the previous successful call to the ListBySubscriptionId method.\n   * @param options The options parameters.\n   */\n  private _listBySubscriptionIdNext(\n    nextLink: string,\n    options?: AvailabilityStatusesListBySubscriptionIdNextOptionalParams\n  ): Promise<AvailabilityStatusesListBySubscriptionIdNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listBySubscriptionIdNextOperationSpec\n    );\n  }\n\n  /**\n   * ListByResourceGroupNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: AvailabilityStatusesListByResourceGroupNextOptionalParams\n  ): Promise<AvailabilityStatusesListByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listByResourceGroupNextOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceUri The fully qualified ID of the resource, including the resource name and resource\n   *                    type. Currently the API support not nested and one nesting level resource types :\n   *                    /subscriptions/{subscriptionId}/resourceGroups/{resource-group-name}/providers/{resource-provider-name}/{resource-type}/{resource-name}\n   *                    and\n   *                    /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resource-provider-name}/{parentResourceType}/{parentResourceName}/{resourceType}/{resourceName}\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceUri: string,\n    nextLink: string,\n    options?: AvailabilityStatusesListNextOptionalParams\n  ): Promise<AvailabilityStatusesListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceUri, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listBySubscriptionIdOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.ResourceHealth/availabilityStatuses\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AvailabilityStatusListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.filter,\n    Parameters.expand\n  ],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ResourceHealth/availabilityStatuses\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AvailabilityStatusListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.filter,\n    Parameters.expand\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getByResourceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{resourceUri}/providers/Microsoft.ResourceHealth/availabilityStatuses/current\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AvailabilityStatus\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.filter,\n    Parameters.expand\n  ],\n  urlParameters: [Parameters.$host, Parameters.resourceUri],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{resourceUri}/providers/Microsoft.ResourceHealth/availabilityStatuses\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AvailabilityStatusListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.filter,\n    Parameters.expand\n  ],\n  urlParameters: [Parameters.$host, Parameters.resourceUri],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listBySubscriptionIdNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AvailabilityStatusListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AvailabilityStatusListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AvailabilityStatusListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceUri,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { Operations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { MicrosoftResourceHealth } from \"../microsoftResourceHealth\";\nimport {\n  OperationsListOptionalParams,\n  OperationsListResponse\n} from \"../models\";\n\n/** Class containing Operations operations. */\nexport class OperationsImpl implements Operations {\n  private readonly client: MicrosoftResourceHealth;\n\n  /**\n   * Initialize a new instance of the class Operations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: MicrosoftResourceHealth) {\n    this.client = client;\n  }\n\n  /**\n   * Lists available operations for the resourcehealth resource provider\n   * @param options The options parameters.\n   */\n  list(\n    options?: OperationsListOptionalParams\n  ): Promise<OperationsListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.ResourceHealth/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Metadata } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { MicrosoftResourceHealth } from \"../microsoftResourceHealth\";\nimport {\n  MetadataEntity,\n  MetadataListNextOptionalParams,\n  MetadataListOptionalParams,\n  MetadataListResponse,\n  MetadataGetEntityOptionalParams,\n  MetadataGetEntityResponse,\n  MetadataListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Metadata operations. */\nexport class MetadataImpl implements Metadata {\n  private readonly client: MicrosoftResourceHealth;\n\n  /**\n   * Initialize a new instance of the class Metadata class.\n   * @param client Reference to the service client\n   */\n  constructor(client: MicrosoftResourceHealth) {\n    this.client = client;\n  }\n\n  /**\n   * Gets the list of metadata entities.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: MetadataListOptionalParams\n  ): PagedAsyncIterableIterator<MetadataEntity> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: MetadataListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<MetadataEntity[]> {\n    let result: MetadataListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: MetadataListOptionalParams\n  ): AsyncIterableIterator<MetadataEntity> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets the list of metadata entities.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: MetadataListOptionalParams\n  ): Promise<MetadataListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * Gets the list of metadata entities.\n   * @param name Name of metadata entity.\n   * @param options The options parameters.\n   */\n  getEntity(\n    name: string,\n    options?: MetadataGetEntityOptionalParams\n  ): Promise<MetadataGetEntityResponse> {\n    return this.client.sendOperationRequest(\n      { name, options },\n      getEntityOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: MetadataListNextOptionalParams\n  ): Promise<MetadataListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.ResourceHealth/metadata\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MetadataEntityListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getEntityOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.ResourceHealth/metadata/{name}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MetadataEntity\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.name],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MetadataEntityListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ImpactedResources } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { MicrosoftResourceHealth } from \"../microsoftResourceHealth\";\nimport {\n  EventImpactedResource,\n  ImpactedResourcesListBySubscriptionIdAndEventIdNextOptionalParams,\n  ImpactedResourcesListBySubscriptionIdAndEventIdOptionalParams,\n  ImpactedResourcesListBySubscriptionIdAndEventIdResponse,\n  ImpactedResourcesListByTenantIdAndEventIdNextOptionalParams,\n  ImpactedResourcesListByTenantIdAndEventIdOptionalParams,\n  ImpactedResourcesListByTenantIdAndEventIdResponse,\n  ImpactedResourcesGetOptionalParams,\n  ImpactedResourcesGetResponse,\n  ImpactedResourcesGetByTenantIdOptionalParams,\n  ImpactedResourcesGetByTenantIdResponse,\n  ImpactedResourcesListBySubscriptionIdAndEventIdNextResponse,\n  ImpactedResourcesListByTenantIdAndEventIdNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ImpactedResources operations. */\nexport class ImpactedResourcesImpl implements ImpactedResources {\n  private readonly client: MicrosoftResourceHealth;\n\n  /**\n   * Initialize a new instance of the class ImpactedResources class.\n   * @param client Reference to the service client\n   */\n  constructor(client: MicrosoftResourceHealth) {\n    this.client = client;\n  }\n\n  /**\n   * Lists impacted resources in the subscription by an event.\n   * @param eventTrackingId Event Id which uniquely identifies ServiceHealth event.\n   * @param options The options parameters.\n   */\n  public listBySubscriptionIdAndEventId(\n    eventTrackingId: string,\n    options?: ImpactedResourcesListBySubscriptionIdAndEventIdOptionalParams\n  ): PagedAsyncIterableIterator<EventImpactedResource> {\n    const iter = this.listBySubscriptionIdAndEventIdPagingAll(\n      eventTrackingId,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listBySubscriptionIdAndEventIdPagingPage(\n          eventTrackingId,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listBySubscriptionIdAndEventIdPagingPage(\n    eventTrackingId: string,\n    options?: ImpactedResourcesListBySubscriptionIdAndEventIdOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<EventImpactedResource[]> {\n    let result: ImpactedResourcesListBySubscriptionIdAndEventIdResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listBySubscriptionIdAndEventId(\n        eventTrackingId,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listBySubscriptionIdAndEventIdNext(\n        eventTrackingId,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listBySubscriptionIdAndEventIdPagingAll(\n    eventTrackingId: string,\n    options?: ImpactedResourcesListBySubscriptionIdAndEventIdOptionalParams\n  ): AsyncIterableIterator<EventImpactedResource> {\n    for await (const page of this.listBySubscriptionIdAndEventIdPagingPage(\n      eventTrackingId,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists impacted resources in the tenant by an event.\n   * @param eventTrackingId Event Id which uniquely identifies ServiceHealth event.\n   * @param options The options parameters.\n   */\n  public listByTenantIdAndEventId(\n    eventTrackingId: string,\n    options?: ImpactedResourcesListByTenantIdAndEventIdOptionalParams\n  ): PagedAsyncIterableIterator<EventImpactedResource> {\n    const iter = this.listByTenantIdAndEventIdPagingAll(\n      eventTrackingId,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByTenantIdAndEventIdPagingPage(\n          eventTrackingId,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByTenantIdAndEventIdPagingPage(\n    eventTrackingId: string,\n    options?: ImpactedResourcesListByTenantIdAndEventIdOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<EventImpactedResource[]> {\n    let result: ImpactedResourcesListByTenantIdAndEventIdResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByTenantIdAndEventId(eventTrackingId, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByTenantIdAndEventIdNext(\n        eventTrackingId,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByTenantIdAndEventIdPagingAll(\n    eventTrackingId: string,\n    options?: ImpactedResourcesListByTenantIdAndEventIdOptionalParams\n  ): AsyncIterableIterator<EventImpactedResource> {\n    for await (const page of this.listByTenantIdAndEventIdPagingPage(\n      eventTrackingId,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists impacted resources in the subscription by an event.\n   * @param eventTrackingId Event Id which uniquely identifies ServiceHealth event.\n   * @param options The options parameters.\n   */\n  private _listBySubscriptionIdAndEventId(\n    eventTrackingId: string,\n    options?: ImpactedResourcesListBySubscriptionIdAndEventIdOptionalParams\n  ): Promise<ImpactedResourcesListBySubscriptionIdAndEventIdResponse> {\n    return this.client.sendOperationRequest(\n      { eventTrackingId, options },\n      listBySubscriptionIdAndEventIdOperationSpec\n    );\n  }\n\n  /**\n   * Gets the specific impacted resource in the subscription by an event.\n   * @param eventTrackingId Event Id which uniquely identifies ServiceHealth event.\n   * @param impactedResourceName Name of the Impacted Resource.\n   * @param options The options parameters.\n   */\n  get(\n    eventTrackingId: string,\n    impactedResourceName: string,\n    options?: ImpactedResourcesGetOptionalParams\n  ): Promise<ImpactedResourcesGetResponse> {\n    return this.client.sendOperationRequest(\n      { eventTrackingId, impactedResourceName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Lists impacted resources in the tenant by an event.\n   * @param eventTrackingId Event Id which uniquely identifies ServiceHealth event.\n   * @param options The options parameters.\n   */\n  private _listByTenantIdAndEventId(\n    eventTrackingId: string,\n    options?: ImpactedResourcesListByTenantIdAndEventIdOptionalParams\n  ): Promise<ImpactedResourcesListByTenantIdAndEventIdResponse> {\n    return this.client.sendOperationRequest(\n      { eventTrackingId, options },\n      listByTenantIdAndEventIdOperationSpec\n    );\n  }\n\n  /**\n   * Gets the specific impacted resource in the tenant by an event.\n   * @param eventTrackingId Event Id which uniquely identifies ServiceHealth event.\n   * @param impactedResourceName Name of the Impacted Resource.\n   * @param options The options parameters.\n   */\n  getByTenantId(\n    eventTrackingId: string,\n    impactedResourceName: string,\n    options?: ImpactedResourcesGetByTenantIdOptionalParams\n  ): Promise<ImpactedResourcesGetByTenantIdResponse> {\n    return this.client.sendOperationRequest(\n      { eventTrackingId, impactedResourceName, options },\n      getByTenantIdOperationSpec\n    );\n  }\n\n  /**\n   * ListBySubscriptionIdAndEventIdNext\n   * @param eventTrackingId Event Id which uniquely identifies ServiceHealth event.\n   * @param nextLink The nextLink from the previous successful call to the ListBySubscriptionIdAndEventId\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listBySubscriptionIdAndEventIdNext(\n    eventTrackingId: string,\n    nextLink: string,\n    options?: ImpactedResourcesListBySubscriptionIdAndEventIdNextOptionalParams\n  ): Promise<ImpactedResourcesListBySubscriptionIdAndEventIdNextResponse> {\n    return this.client.sendOperationRequest(\n      { eventTrackingId, nextLink, options },\n      listBySubscriptionIdAndEventIdNextOperationSpec\n    );\n  }\n\n  /**\n   * ListByTenantIdAndEventIdNext\n   * @param eventTrackingId Event Id which uniquely identifies ServiceHealth event.\n   * @param nextLink The nextLink from the previous successful call to the ListByTenantIdAndEventId\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listByTenantIdAndEventIdNext(\n    eventTrackingId: string,\n    nextLink: string,\n    options?: ImpactedResourcesListByTenantIdAndEventIdNextOptionalParams\n  ): Promise<ImpactedResourcesListByTenantIdAndEventIdNextResponse> {\n    return this.client.sendOperationRequest(\n      { eventTrackingId, nextLink, options },\n      listByTenantIdAndEventIdNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listBySubscriptionIdAndEventIdOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.ResourceHealth/events/{eventTrackingId}/impactedResources\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EventImpactedResourceListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.filter],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.eventTrackingId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.ResourceHealth/events/{eventTrackingId}/impactedResources/{impactedResourceName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EventImpactedResource\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.eventTrackingId,\n    Parameters.impactedResourceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByTenantIdAndEventIdOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.ResourceHealth/events/{eventTrackingId}/impactedResources\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EventImpactedResourceListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.filter],\n  urlParameters: [Parameters.$host, Parameters.eventTrackingId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getByTenantIdOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.ResourceHealth/events/{eventTrackingId}/impactedResources/{impactedResourceName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EventImpactedResource\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.eventTrackingId,\n    Parameters.impactedResourceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listBySubscriptionIdAndEventIdNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EventImpactedResourceListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.eventTrackingId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByTenantIdAndEventIdNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EventImpactedResourceListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.eventTrackingId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { SecurityAdvisoryImpactedResources } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { MicrosoftResourceHealth } from \"../microsoftResourceHealth\";\nimport {\n  EventImpactedResource,\n  SecurityAdvisoryImpactedResourcesListBySubscriptionIdAndEventIdNextOptionalParams,\n  SecurityAdvisoryImpactedResourcesListBySubscriptionIdAndEventIdOptionalParams,\n  SecurityAdvisoryImpactedResourcesListBySubscriptionIdAndEventIdResponse,\n  SecurityAdvisoryImpactedResourcesListByTenantIdAndEventIdNextOptionalParams,\n  SecurityAdvisoryImpactedResourcesListByTenantIdAndEventIdOptionalParams,\n  SecurityAdvisoryImpactedResourcesListByTenantIdAndEventIdResponse,\n  SecurityAdvisoryImpactedResourcesListBySubscriptionIdAndEventIdNextResponse,\n  SecurityAdvisoryImpactedResourcesListByTenantIdAndEventIdNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing SecurityAdvisoryImpactedResources operations. */\nexport class SecurityAdvisoryImpactedResourcesImpl\n  implements SecurityAdvisoryImpactedResources {\n  private readonly client: MicrosoftResourceHealth;\n\n  /**\n   * Initialize a new instance of the class SecurityAdvisoryImpactedResources class.\n   * @param client Reference to the service client\n   */\n  constructor(client: MicrosoftResourceHealth) {\n    this.client = client;\n  }\n\n  /**\n   * Lists impacted resources in the subscription by an event (Security Advisory).\n   * @param eventTrackingId Event Id which uniquely identifies ServiceHealth event.\n   * @param options The options parameters.\n   */\n  public listBySubscriptionIdAndEventId(\n    eventTrackingId: string,\n    options?: SecurityAdvisoryImpactedResourcesListBySubscriptionIdAndEventIdOptionalParams\n  ): PagedAsyncIterableIterator<EventImpactedResource> {\n    const iter = this.listBySubscriptionIdAndEventIdPagingAll(\n      eventTrackingId,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listBySubscriptionIdAndEventIdPagingPage(\n          eventTrackingId,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listBySubscriptionIdAndEventIdPagingPage(\n    eventTrackingId: string,\n    options?: SecurityAdvisoryImpactedResourcesListBySubscriptionIdAndEventIdOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<EventImpactedResource[]> {\n    let result: SecurityAdvisoryImpactedResourcesListBySubscriptionIdAndEventIdResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listBySubscriptionIdAndEventId(\n        eventTrackingId,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listBySubscriptionIdAndEventIdNext(\n        eventTrackingId,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listBySubscriptionIdAndEventIdPagingAll(\n    eventTrackingId: string,\n    options?: SecurityAdvisoryImpactedResourcesListBySubscriptionIdAndEventIdOptionalParams\n  ): AsyncIterableIterator<EventImpactedResource> {\n    for await (const page of this.listBySubscriptionIdAndEventIdPagingPage(\n      eventTrackingId,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists impacted resources in the tenant by an event (Security Advisory).\n   * @param eventTrackingId Event Id which uniquely identifies ServiceHealth event.\n   * @param options The options parameters.\n   */\n  public listByTenantIdAndEventId(\n    eventTrackingId: string,\n    options?: SecurityAdvisoryImpactedResourcesListByTenantIdAndEventIdOptionalParams\n  ): PagedAsyncIterableIterator<EventImpactedResource> {\n    const iter = this.listByTenantIdAndEventIdPagingAll(\n      eventTrackingId,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByTenantIdAndEventIdPagingPage(\n          eventTrackingId,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByTenantIdAndEventIdPagingPage(\n    eventTrackingId: string,\n    options?: SecurityAdvisoryImpactedResourcesListByTenantIdAndEventIdOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<EventImpactedResource[]> {\n    let result: SecurityAdvisoryImpactedResourcesListByTenantIdAndEventIdResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByTenantIdAndEventId(eventTrackingId, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByTenantIdAndEventIdNext(\n        eventTrackingId,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByTenantIdAndEventIdPagingAll(\n    eventTrackingId: string,\n    options?: SecurityAdvisoryImpactedResourcesListByTenantIdAndEventIdOptionalParams\n  ): AsyncIterableIterator<EventImpactedResource> {\n    for await (const page of this.listByTenantIdAndEventIdPagingPage(\n      eventTrackingId,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists impacted resources in the subscription by an event (Security Advisory).\n   * @param eventTrackingId Event Id which uniquely identifies ServiceHealth event.\n   * @param options The options parameters.\n   */\n  private _listBySubscriptionIdAndEventId(\n    eventTrackingId: string,\n    options?: SecurityAdvisoryImpactedResourcesListBySubscriptionIdAndEventIdOptionalParams\n  ): Promise<\n    SecurityAdvisoryImpactedResourcesListBySubscriptionIdAndEventIdResponse\n  > {\n    return this.client.sendOperationRequest(\n      { eventTrackingId, options },\n      listBySubscriptionIdAndEventIdOperationSpec\n    );\n  }\n\n  /**\n   * Lists impacted resources in the tenant by an event (Security Advisory).\n   * @param eventTrackingId Event Id which uniquely identifies ServiceHealth event.\n   * @param options The options parameters.\n   */\n  private _listByTenantIdAndEventId(\n    eventTrackingId: string,\n    options?: SecurityAdvisoryImpactedResourcesListByTenantIdAndEventIdOptionalParams\n  ): Promise<\n    SecurityAdvisoryImpactedResourcesListByTenantIdAndEventIdResponse\n  > {\n    return this.client.sendOperationRequest(\n      { eventTrackingId, options },\n      listByTenantIdAndEventIdOperationSpec\n    );\n  }\n\n  /**\n   * ListBySubscriptionIdAndEventIdNext\n   * @param eventTrackingId Event Id which uniquely identifies ServiceHealth event.\n   * @param nextLink The nextLink from the previous successful call to the ListBySubscriptionIdAndEventId\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listBySubscriptionIdAndEventIdNext(\n    eventTrackingId: string,\n    nextLink: string,\n    options?: SecurityAdvisoryImpactedResourcesListBySubscriptionIdAndEventIdNextOptionalParams\n  ): Promise<\n    SecurityAdvisoryImpactedResourcesListBySubscriptionIdAndEventIdNextResponse\n  > {\n    return this.client.sendOperationRequest(\n      { eventTrackingId, nextLink, options },\n      listBySubscriptionIdAndEventIdNextOperationSpec\n    );\n  }\n\n  /**\n   * ListByTenantIdAndEventIdNext\n   * @param eventTrackingId Event Id which uniquely identifies ServiceHealth event.\n   * @param nextLink The nextLink from the previous successful call to the ListByTenantIdAndEventId\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listByTenantIdAndEventIdNext(\n    eventTrackingId: string,\n    nextLink: string,\n    options?: SecurityAdvisoryImpactedResourcesListByTenantIdAndEventIdNextOptionalParams\n  ): Promise<\n    SecurityAdvisoryImpactedResourcesListByTenantIdAndEventIdNextResponse\n  > {\n    return this.client.sendOperationRequest(\n      { eventTrackingId, nextLink, options },\n      listByTenantIdAndEventIdNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listBySubscriptionIdAndEventIdOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.ResourceHealth/events/{eventTrackingId}/listSecurityAdvisoryImpactedResources\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EventImpactedResourceListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.filter],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.eventTrackingId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByTenantIdAndEventIdOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.ResourceHealth/events/{eventTrackingId}/listSecurityAdvisoryImpactedResources\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EventImpactedResourceListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.filter],\n  urlParameters: [Parameters.$host, Parameters.eventTrackingId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listBySubscriptionIdAndEventIdNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EventImpactedResourceListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.eventTrackingId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByTenantIdAndEventIdNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EventImpactedResourceListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.eventTrackingId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { EventsOperations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { MicrosoftResourceHealth } from \"../microsoftResourceHealth\";\nimport {\n  Event,\n  EventsListBySubscriptionIdNextOptionalParams,\n  EventsListBySubscriptionIdOptionalParams,\n  EventsListBySubscriptionIdResponse,\n  EventsListByTenantIdNextOptionalParams,\n  EventsListByTenantIdOptionalParams,\n  EventsListByTenantIdResponse,\n  EventsListBySingleResourceNextOptionalParams,\n  EventsListBySingleResourceOptionalParams,\n  EventsListBySingleResourceResponse,\n  EventsListBySubscriptionIdNextResponse,\n  EventsListByTenantIdNextResponse,\n  EventsListBySingleResourceNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing EventsOperations operations. */\nexport class EventsOperationsImpl implements EventsOperations {\n  private readonly client: MicrosoftResourceHealth;\n\n  /**\n   * Initialize a new instance of the class EventsOperations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: MicrosoftResourceHealth) {\n    this.client = client;\n  }\n\n  /**\n   * Lists service health events in the subscription.\n   * @param options The options parameters.\n   */\n  public listBySubscriptionId(\n    options?: EventsListBySubscriptionIdOptionalParams\n  ): PagedAsyncIterableIterator<Event> {\n    const iter = this.listBySubscriptionIdPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listBySubscriptionIdPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listBySubscriptionIdPagingPage(\n    options?: EventsListBySubscriptionIdOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Event[]> {\n    let result: EventsListBySubscriptionIdResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listBySubscriptionId(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listBySubscriptionIdNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listBySubscriptionIdPagingAll(\n    options?: EventsListBySubscriptionIdOptionalParams\n  ): AsyncIterableIterator<Event> {\n    for await (const page of this.listBySubscriptionIdPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists current service health events in the tenant.\n   * @param options The options parameters.\n   */\n  public listByTenantId(\n    options?: EventsListByTenantIdOptionalParams\n  ): PagedAsyncIterableIterator<Event> {\n    const iter = this.listByTenantIdPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByTenantIdPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listByTenantIdPagingPage(\n    options?: EventsListByTenantIdOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Event[]> {\n    let result: EventsListByTenantIdResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByTenantId(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByTenantIdNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByTenantIdPagingAll(\n    options?: EventsListByTenantIdOptionalParams\n  ): AsyncIterableIterator<Event> {\n    for await (const page of this.listByTenantIdPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists current service health events for given resource.\n   * @param resourceUri The fully qualified ID of the resource, including the resource name and resource\n   *                    type. Currently the API support not nested and one nesting level resource types :\n   *                    /subscriptions/{subscriptionId}/resourceGroups/{resource-group-name}/providers/{resource-provider-name}/{resource-type}/{resource-name}\n   *                    and\n   *                    /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resource-provider-name}/{parentResourceType}/{parentResourceName}/{resourceType}/{resourceName}\n   * @param options The options parameters.\n   */\n  public listBySingleResource(\n    resourceUri: string,\n    options?: EventsListBySingleResourceOptionalParams\n  ): PagedAsyncIterableIterator<Event> {\n    const iter = this.listBySingleResourcePagingAll(resourceUri, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listBySingleResourcePagingPage(\n          resourceUri,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listBySingleResourcePagingPage(\n    resourceUri: string,\n    options?: EventsListBySingleResourceOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Event[]> {\n    let result: EventsListBySingleResourceResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listBySingleResource(resourceUri, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listBySingleResourceNext(\n        resourceUri,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listBySingleResourcePagingAll(\n    resourceUri: string,\n    options?: EventsListBySingleResourceOptionalParams\n  ): AsyncIterableIterator<Event> {\n    for await (const page of this.listBySingleResourcePagingPage(\n      resourceUri,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists service health events in the subscription.\n   * @param options The options parameters.\n   */\n  private _listBySubscriptionId(\n    options?: EventsListBySubscriptionIdOptionalParams\n  ): Promise<EventsListBySubscriptionIdResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      listBySubscriptionIdOperationSpec\n    );\n  }\n\n  /**\n   * Lists current service health events in the tenant.\n   * @param options The options parameters.\n   */\n  private _listByTenantId(\n    options?: EventsListByTenantIdOptionalParams\n  ): Promise<EventsListByTenantIdResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      listByTenantIdOperationSpec\n    );\n  }\n\n  /**\n   * Lists current service health events for given resource.\n   * @param resourceUri The fully qualified ID of the resource, including the resource name and resource\n   *                    type. Currently the API support not nested and one nesting level resource types :\n   *                    /subscriptions/{subscriptionId}/resourceGroups/{resource-group-name}/providers/{resource-provider-name}/{resource-type}/{resource-name}\n   *                    and\n   *                    /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resource-provider-name}/{parentResourceType}/{parentResourceName}/{resourceType}/{resourceName}\n   * @param options The options parameters.\n   */\n  private _listBySingleResource(\n    resourceUri: string,\n    options?: EventsListBySingleResourceOptionalParams\n  ): Promise<EventsListBySingleResourceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceUri, options },\n      listBySingleResourceOperationSpec\n    );\n  }\n\n  /**\n   * ListBySubscriptionIdNext\n   * @param nextLink The nextLink from the previous successful call to the ListBySubscriptionId method.\n   * @param options The options parameters.\n   */\n  private _listBySubscriptionIdNext(\n    nextLink: string,\n    options?: EventsListBySubscriptionIdNextOptionalParams\n  ): Promise<EventsListBySubscriptionIdNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listBySubscriptionIdNextOperationSpec\n    );\n  }\n\n  /**\n   * ListByTenantIdNext\n   * @param nextLink The nextLink from the previous successful call to the ListByTenantId method.\n   * @param options The options parameters.\n   */\n  private _listByTenantIdNext(\n    nextLink: string,\n    options?: EventsListByTenantIdNextOptionalParams\n  ): Promise<EventsListByTenantIdNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listByTenantIdNextOperationSpec\n    );\n  }\n\n  /**\n   * ListBySingleResourceNext\n   * @param resourceUri The fully qualified ID of the resource, including the resource name and resource\n   *                    type. Currently the API support not nested and one nesting level resource types :\n   *                    /subscriptions/{subscriptionId}/resourceGroups/{resource-group-name}/providers/{resource-provider-name}/{resource-type}/{resource-name}\n   *                    and\n   *                    /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resource-provider-name}/{parentResourceType}/{parentResourceName}/{resourceType}/{resourceName}\n   * @param nextLink The nextLink from the previous successful call to the ListBySingleResource method.\n   * @param options The options parameters.\n   */\n  private _listBySingleResourceNext(\n    resourceUri: string,\n    nextLink: string,\n    options?: EventsListBySingleResourceNextOptionalParams\n  ): Promise<EventsListBySingleResourceNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceUri, nextLink, options },\n      listBySingleResourceNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listBySubscriptionIdOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.ResourceHealth/events\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Events\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.filter,\n    Parameters.queryStartTime\n  ],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByTenantIdOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.ResourceHealth/events\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Events\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.filter,\n    Parameters.queryStartTime\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listBySingleResourceOperationSpec: coreClient.OperationSpec = {\n  path: \"/{resourceUri}/providers/Microsoft.ResourceHealth/events\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Events\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.filter],\n  urlParameters: [Parameters.$host, Parameters.resourceUri],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listBySubscriptionIdNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Events\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByTenantIdNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Events\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listBySingleResourceNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Events\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceUri,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { EventOperations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { MicrosoftResourceHealth } from \"../microsoftResourceHealth\";\nimport {\n  EventGetBySubscriptionIdAndTrackingIdOptionalParams,\n  EventGetBySubscriptionIdAndTrackingIdResponse,\n  EventFetchDetailsBySubscriptionIdAndTrackingIdOptionalParams,\n  EventFetchDetailsBySubscriptionIdAndTrackingIdResponse,\n  EventGetByTenantIdAndTrackingIdOptionalParams,\n  EventGetByTenantIdAndTrackingIdResponse,\n  EventFetchDetailsByTenantIdAndTrackingIdOptionalParams,\n  EventFetchDetailsByTenantIdAndTrackingIdResponse\n} from \"../models\";\n\n/** Class containing EventOperations operations. */\nexport class EventOperationsImpl implements EventOperations {\n  private readonly client: MicrosoftResourceHealth;\n\n  /**\n   * Initialize a new instance of the class EventOperations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: MicrosoftResourceHealth) {\n    this.client = client;\n  }\n\n  /**\n   * Service health event in the subscription by event tracking id\n   * @param eventTrackingId Event Id which uniquely identifies ServiceHealth event.\n   * @param options The options parameters.\n   */\n  getBySubscriptionIdAndTrackingId(\n    eventTrackingId: string,\n    options?: EventGetBySubscriptionIdAndTrackingIdOptionalParams\n  ): Promise<EventGetBySubscriptionIdAndTrackingIdResponse> {\n    return this.client.sendOperationRequest(\n      { eventTrackingId, options },\n      getBySubscriptionIdAndTrackingIdOperationSpec\n    );\n  }\n\n  /**\n   * Service health event details in the subscription by event tracking id. This can be used to fetch\n   * sensitive properties for Security Advisory events\n   * @param eventTrackingId Event Id which uniquely identifies ServiceHealth event.\n   * @param options The options parameters.\n   */\n  fetchDetailsBySubscriptionIdAndTrackingId(\n    eventTrackingId: string,\n    options?: EventFetchDetailsBySubscriptionIdAndTrackingIdOptionalParams\n  ): Promise<EventFetchDetailsBySubscriptionIdAndTrackingIdResponse> {\n    return this.client.sendOperationRequest(\n      { eventTrackingId, options },\n      fetchDetailsBySubscriptionIdAndTrackingIdOperationSpec\n    );\n  }\n\n  /**\n   * Service health event in the tenant by event tracking id\n   * @param eventTrackingId Event Id which uniquely identifies ServiceHealth event.\n   * @param options The options parameters.\n   */\n  getByTenantIdAndTrackingId(\n    eventTrackingId: string,\n    options?: EventGetByTenantIdAndTrackingIdOptionalParams\n  ): Promise<EventGetByTenantIdAndTrackingIdResponse> {\n    return this.client.sendOperationRequest(\n      { eventTrackingId, options },\n      getByTenantIdAndTrackingIdOperationSpec\n    );\n  }\n\n  /**\n   * Service health event details in the tenant by event tracking id. This can be used to fetch sensitive\n   * properties for Security Advisory events\n   * @param eventTrackingId Event Id which uniquely identifies ServiceHealth event.\n   * @param options The options parameters.\n   */\n  fetchDetailsByTenantIdAndTrackingId(\n    eventTrackingId: string,\n    options?: EventFetchDetailsByTenantIdAndTrackingIdOptionalParams\n  ): Promise<EventFetchDetailsByTenantIdAndTrackingIdResponse> {\n    return this.client.sendOperationRequest(\n      { eventTrackingId, options },\n      fetchDetailsByTenantIdAndTrackingIdOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getBySubscriptionIdAndTrackingIdOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.ResourceHealth/events/{eventTrackingId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Event\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.filter,\n    Parameters.queryStartTime\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.eventTrackingId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst fetchDetailsBySubscriptionIdAndTrackingIdOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.ResourceHealth/events/{eventTrackingId}/fetchEventDetails\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Event\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.eventTrackingId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getByTenantIdAndTrackingIdOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.ResourceHealth/events/{eventTrackingId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Event\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.filter,\n    Parameters.queryStartTime\n  ],\n  urlParameters: [Parameters.$host, Parameters.eventTrackingId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst fetchDetailsByTenantIdAndTrackingIdOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.ResourceHealth/events/{eventTrackingId}/fetchEventDetails\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Event\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.eventTrackingId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ChildAvailabilityStatuses } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { MicrosoftResourceHealth } from \"../microsoftResourceHealth\";\nimport {\n  AvailabilityStatus,\n  ChildAvailabilityStatusesListNextOptionalParams,\n  ChildAvailabilityStatusesListOptionalParams,\n  ChildAvailabilityStatusesListResponse,\n  ChildAvailabilityStatusesGetByResourceOptionalParams,\n  ChildAvailabilityStatusesGetByResourceResponse,\n  ChildAvailabilityStatusesListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ChildAvailabilityStatuses operations. */\nexport class ChildAvailabilityStatusesImpl\n  implements ChildAvailabilityStatuses {\n  private readonly client: MicrosoftResourceHealth;\n\n  /**\n   * Initialize a new instance of the class ChildAvailabilityStatuses class.\n   * @param client Reference to the service client\n   */\n  constructor(client: MicrosoftResourceHealth) {\n    this.client = client;\n  }\n\n  /**\n   * Lists the historical availability statuses for a single child resource. Use the nextLink property in\n   * the response to get the next page of availability status\n   * @param resourceUri The fully qualified ID of the resource, including the resource name and resource\n   *                    type. Currently the API only support one nesting level resource types :\n   *                    /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resource-provider-name}/{parentResourceType}/{parentResourceName}/{resourceType}/{resourceName}\n   * @param options The options parameters.\n   */\n  public list(\n    resourceUri: string,\n    options?: ChildAvailabilityStatusesListOptionalParams\n  ): PagedAsyncIterableIterator<AvailabilityStatus> {\n    const iter = this.listPagingAll(resourceUri, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(resourceUri, options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceUri: string,\n    options?: ChildAvailabilityStatusesListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<AvailabilityStatus[]> {\n    let result: ChildAvailabilityStatusesListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(resourceUri, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(resourceUri, continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceUri: string,\n    options?: ChildAvailabilityStatusesListOptionalParams\n  ): AsyncIterableIterator<AvailabilityStatus> {\n    for await (const page of this.listPagingPage(resourceUri, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets current availability status for a single resource\n   * @param resourceUri The fully qualified ID of the resource, including the resource name and resource\n   *                    type. Currently the API only support one nesting level resource types :\n   *                    /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resource-provider-name}/{parentResourceType}/{parentResourceName}/{resourceType}/{resourceName}\n   * @param options The options parameters.\n   */\n  getByResource(\n    resourceUri: string,\n    options?: ChildAvailabilityStatusesGetByResourceOptionalParams\n  ): Promise<ChildAvailabilityStatusesGetByResourceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceUri, options },\n      getByResourceOperationSpec\n    );\n  }\n\n  /**\n   * Lists the historical availability statuses for a single child resource. Use the nextLink property in\n   * the response to get the next page of availability status\n   * @param resourceUri The fully qualified ID of the resource, including the resource name and resource\n   *                    type. Currently the API only support one nesting level resource types :\n   *                    /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resource-provider-name}/{parentResourceType}/{parentResourceName}/{resourceType}/{resourceName}\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceUri: string,\n    options?: ChildAvailabilityStatusesListOptionalParams\n  ): Promise<ChildAvailabilityStatusesListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceUri, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceUri The fully qualified ID of the resource, including the resource name and resource\n   *                    type. Currently the API only support one nesting level resource types :\n   *                    /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resource-provider-name}/{parentResourceType}/{parentResourceName}/{resourceType}/{resourceName}\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceUri: string,\n    nextLink: string,\n    options?: ChildAvailabilityStatusesListNextOptionalParams\n  ): Promise<ChildAvailabilityStatusesListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceUri, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getByResourceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{resourceUri}/providers/Microsoft.ResourceHealth/childAvailabilityStatuses/current\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AvailabilityStatus\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.filter,\n    Parameters.expand\n  ],\n  urlParameters: [Parameters.$host, Parameters.resourceUri],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{resourceUri}/providers/Microsoft.ResourceHealth/childAvailabilityStatuses\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AvailabilityStatusListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.filter,\n    Parameters.expand\n  ],\n  urlParameters: [Parameters.$host, Parameters.resourceUri],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AvailabilityStatusListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceUri,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ChildResources } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { MicrosoftResourceHealth } from \"../microsoftResourceHealth\";\nimport {\n  AvailabilityStatus,\n  ChildResourcesListNextOptionalParams,\n  ChildResourcesListOptionalParams,\n  ChildResourcesListResponse,\n  ChildResourcesListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ChildResources operations. */\nexport class ChildResourcesImpl implements ChildResources {\n  private readonly client: MicrosoftResourceHealth;\n\n  /**\n   * Initialize a new instance of the class ChildResources class.\n   * @param client Reference to the service client\n   */\n  constructor(client: MicrosoftResourceHealth) {\n    this.client = client;\n  }\n\n  /**\n   * Lists the all the children and its current health status for a parent resource. Use the nextLink\n   * property in the response to get the next page of children current health\n   * @param resourceUri The fully qualified ID of the resource, including the resource name and resource\n   *                    type. Currently the API only support not nested parent resource type:\n   *                    /subscriptions/{subscriptionId}/resourceGroups/{resource-group-name}/providers/{resource-provider-name}/{resource-type}/{resource-name}\n   * @param options The options parameters.\n   */\n  public list(\n    resourceUri: string,\n    options?: ChildResourcesListOptionalParams\n  ): PagedAsyncIterableIterator<AvailabilityStatus> {\n    const iter = this.listPagingAll(resourceUri, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(resourceUri, options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceUri: string,\n    options?: ChildResourcesListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<AvailabilityStatus[]> {\n    let result: ChildResourcesListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(resourceUri, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(resourceUri, continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceUri: string,\n    options?: ChildResourcesListOptionalParams\n  ): AsyncIterableIterator<AvailabilityStatus> {\n    for await (const page of this.listPagingPage(resourceUri, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists the all the children and its current health status for a parent resource. Use the nextLink\n   * property in the response to get the next page of children current health\n   * @param resourceUri The fully qualified ID of the resource, including the resource name and resource\n   *                    type. Currently the API only support not nested parent resource type:\n   *                    /subscriptions/{subscriptionId}/resourceGroups/{resource-group-name}/providers/{resource-provider-name}/{resource-type}/{resource-name}\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceUri: string,\n    options?: ChildResourcesListOptionalParams\n  ): Promise<ChildResourcesListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceUri, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceUri The fully qualified ID of the resource, including the resource name and resource\n   *                    type. Currently the API only support not nested parent resource type:\n   *                    /subscriptions/{subscriptionId}/resourceGroups/{resource-group-name}/providers/{resource-provider-name}/{resource-type}/{resource-name}\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceUri: string,\n    nextLink: string,\n    options?: ChildResourcesListNextOptionalParams\n  ): Promise<ChildResourcesListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceUri, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/{resourceUri}/providers/Microsoft.ResourceHealth/childResources\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AvailabilityStatusListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.filter,\n    Parameters.expand\n  ],\n  urlParameters: [Parameters.$host, Parameters.resourceUri],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AvailabilityStatusListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceUri,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { EmergingIssues } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { MicrosoftResourceHealth } from \"../microsoftResourceHealth\";\nimport {\n  EmergingIssuesGetResult,\n  EmergingIssuesListNextOptionalParams,\n  EmergingIssuesListOptionalParams,\n  EmergingIssuesListResponse,\n  IssueNameParameter,\n  EmergingIssuesGetOptionalParams,\n  EmergingIssuesGetResponse,\n  EmergingIssuesListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing EmergingIssues operations. */\nexport class EmergingIssuesImpl implements EmergingIssues {\n  private readonly client: MicrosoftResourceHealth;\n\n  /**\n   * Initialize a new instance of the class EmergingIssues class.\n   * @param client Reference to the service client\n   */\n  constructor(client: MicrosoftResourceHealth) {\n    this.client = client;\n  }\n\n  /**\n   * Lists Azure services' emerging issues.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: EmergingIssuesListOptionalParams\n  ): PagedAsyncIterableIterator<EmergingIssuesGetResult> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: EmergingIssuesListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<EmergingIssuesGetResult[]> {\n    let result: EmergingIssuesListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: EmergingIssuesListOptionalParams\n  ): AsyncIterableIterator<EmergingIssuesGetResult> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists Azure services' emerging issues.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: EmergingIssuesListOptionalParams\n  ): Promise<EmergingIssuesListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * Gets Azure services' emerging issues.\n   * @param issueName The name of the emerging issue.\n   * @param options The options parameters.\n   */\n  get(\n    issueName: IssueNameParameter,\n    options?: EmergingIssuesGetOptionalParams\n  ): Promise<EmergingIssuesGetResponse> {\n    return this.client.sendOperationRequest(\n      { issueName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: EmergingIssuesListNextOptionalParams\n  ): Promise<EmergingIssuesListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.ResourceHealth/emergingIssues\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EmergingIssueListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.ResourceHealth/emergingIssues/{issueName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EmergingIssuesGetResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.issueName],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EmergingIssueListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\nimport {\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest\n} from \"@azure/core-rest-pipeline\";\nimport * as coreAuth from \"@azure/core-auth\";\nimport {\n  AvailabilityStatusesImpl,\n  OperationsImpl,\n  MetadataImpl,\n  ImpactedResourcesImpl,\n  SecurityAdvisoryImpactedResourcesImpl,\n  EventsOperationsImpl,\n  EventOperationsImpl,\n  ChildAvailabilityStatusesImpl,\n  ChildResourcesImpl,\n  EmergingIssuesImpl\n} from \"./operations\";\nimport {\n  AvailabilityStatuses,\n  Operations,\n  Metadata,\n  ImpactedResources,\n  SecurityAdvisoryImpactedResources,\n  EventsOperations,\n  EventOperations,\n  ChildAvailabilityStatuses,\n  ChildResources,\n  EmergingIssues\n} from \"./operationsInterfaces\";\nimport { MicrosoftResourceHealthOptionalParams } from \"./models\";\n\nexport class MicrosoftResourceHealth extends coreClient.ServiceClient {\n  $host: string;\n  apiVersion: string;\n  subscriptionId: string;\n\n  /**\n   * Initializes a new instance of the MicrosoftResourceHealth class.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param subscriptionId The ID of the target subscription.\n   * @param options The parameter options\n   */\n  constructor(\n    credentials: coreAuth.TokenCredential,\n    subscriptionId: string,\n    options?: MicrosoftResourceHealthOptionalParams\n  ) {\n    if (credentials === undefined) {\n      throw new Error(\"'credentials' cannot be null\");\n    }\n    if (subscriptionId === undefined) {\n      throw new Error(\"'subscriptionId' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: MicrosoftResourceHealthOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\",\n      credential: credentials\n    };\n\n    const packageDetails = `azsdk-js-arm-resourcehealth/4.0.0`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      endpoint:\n        options.endpoint ?? options.baseUri ?? \"https://management.azure.com\"\n    };\n    super(optionsWithDefaults);\n\n    let bearerTokenAuthenticationPolicyFound: boolean = false;\n    if (options?.pipeline && options.pipeline.getOrderedPolicies().length > 0) {\n      const pipelinePolicies: coreRestPipeline.PipelinePolicy[] = options.pipeline.getOrderedPolicies();\n      bearerTokenAuthenticationPolicyFound = pipelinePolicies.some(\n        (pipelinePolicy) =>\n          pipelinePolicy.name ===\n          coreRestPipeline.bearerTokenAuthenticationPolicyName\n      );\n    }\n    if (\n      !options ||\n      !options.pipeline ||\n      options.pipeline.getOrderedPolicies().length == 0 ||\n      !bearerTokenAuthenticationPolicyFound\n    ) {\n      this.pipeline.removePolicy({\n        name: coreRestPipeline.bearerTokenAuthenticationPolicyName\n      });\n      this.pipeline.addPolicy(\n        coreRestPipeline.bearerTokenAuthenticationPolicy({\n          credential: credentials,\n          scopes:\n            optionsWithDefaults.credentialScopes ??\n            `${optionsWithDefaults.endpoint}/.default`,\n          challengeCallbacks: {\n            authorizeRequestOnChallenge:\n              coreClient.authorizeRequestOnClaimChallenge\n          }\n        })\n      );\n    }\n    // Parameter assignments\n    this.subscriptionId = subscriptionId;\n\n    // Assigning values to Constant parameters\n    this.$host = options.$host || \"https://management.azure.com\";\n    this.apiVersion = options.apiVersion || \"2022-10-01\";\n    this.availabilityStatuses = new AvailabilityStatusesImpl(this);\n    this.operations = new OperationsImpl(this);\n    this.metadata = new MetadataImpl(this);\n    this.impactedResources = new ImpactedResourcesImpl(this);\n    this.securityAdvisoryImpactedResources = new SecurityAdvisoryImpactedResourcesImpl(\n      this\n    );\n    this.eventsOperations = new EventsOperationsImpl(this);\n    this.eventOperations = new EventOperationsImpl(this);\n    this.childAvailabilityStatuses = new ChildAvailabilityStatusesImpl(this);\n    this.childResources = new ChildResourcesImpl(this);\n    this.emergingIssues = new EmergingIssuesImpl(this);\n    this.addCustomApiVersionPolicy(options.apiVersion);\n  }\n\n  /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */\n  private addCustomApiVersionPolicy(apiVersion?: string) {\n    if (!apiVersion) {\n      return;\n    }\n    const apiVersionPolicy = {\n      name: \"CustomApiVersionPolicy\",\n      async sendRequest(\n        request: PipelineRequest,\n        next: SendRequest\n      ): Promise<PipelineResponse> {\n        const param = request.url.split(\"?\");\n        if (param.length > 1) {\n          const newParams = param[1].split(\"&\").map((item) => {\n            if (item.indexOf(\"api-version\") > -1) {\n              return \"api-version=\" + apiVersion;\n            } else {\n              return item;\n            }\n          });\n          request.url = param[0] + \"?\" + newParams.join(\"&\");\n        }\n        return next(request);\n      }\n    };\n    this.pipeline.addPolicy(apiVersionPolicy);\n  }\n\n  availabilityStatuses: AvailabilityStatuses;\n  operations: Operations;\n  metadata: Metadata;\n  impactedResources: ImpactedResources;\n  securityAdvisoryImpactedResources: SecurityAdvisoryImpactedResources;\n  eventsOperations: EventsOperations;\n  eventOperations: EventOperations;\n  childAvailabilityStatuses: ChildAvailabilityStatuses;\n  childResources: ChildResources;\n  emergingIssues: EmergingIssues;\n}\n"],"names":["KnownAvailabilityStateValues","KnownReasonChronicityTypes","KnownScenario","KnownCreatedByType","KnownEventTypeValues","KnownEventSourceValues","KnownEventStatusValues","KnownLevelValues","KnownEventLevelValues","KnownLinkTypeValues","KnownSeverityValues","KnownStageValues","KnownIssueNameParameter","KnownReasonTypeValues","__await","__asyncValues","__asyncDelegator","listBySubscriptionIdOperationSpec","getByResourceOperationSpec","listOperationSpec","listBySubscriptionIdNextOperationSpec","listNextOperationSpec","serializer","coreClient","Mappers.AvailabilityStatusListResult","Mappers.ErrorResponse","Parameters.apiVersion","Parameters.filter","Parameters.expand","Parameters.$host","Parameters.subscriptionId","Parameters.accept","Parameters.resourceGroupName","Mappers.AvailabilityStatus","Parameters.resourceUri","Parameters.nextLink","Mappers.OperationListResult","Mappers.MetadataEntityListResult","Mappers.MetadataEntity","Parameters.name","listBySubscriptionIdAndEventIdOperationSpec","getOperationSpec","listByTenantIdAndEventIdOperationSpec","listBySubscriptionIdAndEventIdNextOperationSpec","listByTenantIdAndEventIdNextOperationSpec","Mappers.EventImpactedResourceListResult","Parameters.eventTrackingId","Mappers.EventImpactedResource","Parameters.impactedResourceName","Mappers.Events","Parameters.queryStartTime","Mappers.Event","Mappers.EmergingIssueListResult","Mappers.EmergingIssuesGetResult","Parameters.issueName","coreRestPipeline"],"mappings":"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"}