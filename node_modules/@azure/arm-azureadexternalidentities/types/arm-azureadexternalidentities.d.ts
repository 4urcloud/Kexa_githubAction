import * as coreAuth from '@azure/core-auth';
import * as coreClient from '@azure/core-client';
import { PagedAsyncIterableIterator } from '@azure/core-paging';
import { PollerLike } from '@azure/core-lro';
import { PollOperationState } from '@azure/core-lro';

/** Available operations of the service */
export declare interface AvailableOperations {
    /** Collection of available operation details */
    value?: OperationDetail[];
    /**
     * URL client should use to fetch the next page (per server side paging).
     * It's null for now, added for future use.
     */
    nextLink?: string;
}

/** SKU properties of the Azure AD B2C tenant. Learn more about Azure AD B2C billing at [aka.ms/b2cBilling](https://aka.ms/b2cBilling). */
export declare interface B2CResourceSKU {
    /** The name of the SKU for the tenant. */
    name?: B2CResourceSKUName;
    /** The tier of the tenant. */
    tier?: B2CResourceSKUTier;
}

/**
 * Defines values for B2CResourceSKUName. \
 * {@link KnownB2CResourceSKUName} can be used interchangeably with B2CResourceSKUName,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Standard**: Azure AD B2C usage is billed to a linked Azure subscription and uses a monthly active users (MAU) billing model. \
 * **PremiumP1**: Azure AD B2C usage is billed to a linked Azure subscription and uses number of authentications based billing. \
 * **PremiumP2**: Azure AD B2C usage is billed to a linked Azure subscription and uses number of authentications based billing.
 */
export declare type B2CResourceSKUName = string;

/**
 * Defines values for B2CResourceSKUTier. \
 * {@link KnownB2CResourceSKUTier} can be used interchangeably with B2CResourceSKUTier,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **A0**: The SKU tier used for all Azure AD B2C tenants.
 */
export declare type B2CResourceSKUTier = string;

export declare interface B2CTenantResource {
    /**
     * The type of the B2C tenant resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: TypeValue;
    /** SKU properties of the Azure AD B2C tenant. Learn more about Azure AD B2C billing at [aka.ms/b2cBilling](https://aka.ms/b2cBilling). */
    sku: B2CResourceSKU;
    /**
     * An identifier that represents the Azure AD B2C tenant resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /**
     * The name of the Azure AD B2C tenant resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /** The location in which the resource is hosted and data resides. Can be one of 'United States', 'Europe', 'Asia Pacific', or 'Australia'. Refer to [this documentation](https://aka.ms/B2CDataResidency) for more information. */
    location: string;
    /** Resource Tags */
    tags?: {
        [propertyName: string]: string;
    };
    /**
     * Metadata pertaining to creation and last modification of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
    /** The billing configuration for the tenant. */
    billingConfig?: B2CTenantResourcePropertiesBillingConfig;
    /** An identifier of the Azure AD B2C tenant. */
    tenantId?: string;
}

/** The collection of Azure AD B2C tenant resources */
export declare interface B2CTenantResourceList {
    /**
     * List of Azure AD B2C tenant resources
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: B2CTenantResource[];
}

/** The billing configuration for the tenant. */
export declare interface B2CTenantResourcePropertiesBillingConfig {
    /** The type of billing. Will be MAU for all new customers. If 'Auths', it can be updated to 'MAU'. Cannot be changed if value is 'MAU'. Learn more about Azure AD B2C billing at [aka.ms/b2cBilling](https://aka.ms/b2cbilling). */
    billingType?: BillingType;
    /**
     * The data from which the billing type took effect
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly effectiveStartDateUtc?: string;
}

/** Interface representing a B2CTenants. */
export declare interface B2CTenants {
    /**
     * Get all the Azure AD B2C tenant resources in a resource group.
     * @param resourceGroupName The name of the resource group.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: B2CTenantsListByResourceGroupOptionalParams): PagedAsyncIterableIterator<B2CTenantResource>;
    /**
     * Get all the Azure AD B2C tenant resources in a subscription.
     * @param options The options parameters.
     */
    listBySubscription(options?: B2CTenantsListBySubscriptionOptionalParams): PagedAsyncIterableIterator<B2CTenantResource>;
    /**
     * Checks the availability and validity of a domain name for the tenant.
     * @param options The options parameters.
     */
    checkNameAvailability(options?: B2CTenantsCheckNameAvailabilityOptionalParams): Promise<B2CTenantsCheckNameAvailabilityResponse>;
    /**
     * Get the Azure AD B2C tenant resource.
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The initial domain name of the Azure AD B2C tenant.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, resourceName: string, options?: B2CTenantsGetOptionalParams): Promise<B2CTenantsGetResponse>;
    /**
     * Initiates an async request to create both the Azure AD B2C tenant and the corresponding Azure
     * resource linked to a subscription.
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The initial domain name of the Azure AD B2C tenant.
     * @param options The options parameters.
     */
    beginCreate(resourceGroupName: string, resourceName: string, options?: B2CTenantsCreateOptionalParams): Promise<PollerLike<PollOperationState<B2CTenantsCreateResponse>, B2CTenantsCreateResponse>>;
    /**
     * Initiates an async request to create both the Azure AD B2C tenant and the corresponding Azure
     * resource linked to a subscription.
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The initial domain name of the Azure AD B2C tenant.
     * @param options The options parameters.
     */
    beginCreateAndWait(resourceGroupName: string, resourceName: string, options?: B2CTenantsCreateOptionalParams): Promise<B2CTenantsCreateResponse>;
    /**
     * Update the Azure AD B2C tenant resource.
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The initial domain name of the Azure AD B2C tenant.
     * @param options The options parameters.
     */
    update(resourceGroupName: string, resourceName: string, options?: B2CTenantsUpdateOptionalParams): Promise<B2CTenantsUpdateResponse>;
    /**
     * Initiates an async operation to delete the Azure AD B2C tenant and Azure resource. The resource
     * deletion can only happen as the last step in [the tenant deletion
     * process](https://aka.ms/deleteB2Ctenant).
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The initial domain name of the Azure AD B2C tenant.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, resourceName: string, options?: B2CTenantsDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Initiates an async operation to delete the Azure AD B2C tenant and Azure resource. The resource
     * deletion can only happen as the last step in [the tenant deletion
     * process](https://aka.ms/deleteB2Ctenant).
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The initial domain name of the Azure AD B2C tenant.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, resourceName: string, options?: B2CTenantsDeleteOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface B2CTenantsCheckNameAvailabilityOptionalParams extends coreClient.OperationOptions {
    /** The information required to check the availability of the name for the tenant. */
    checkNameAvailabilityRequestBody?: CheckNameAvailabilityRequestBody;
}

/** Contains response data for the checkNameAvailability operation. */
export declare type B2CTenantsCheckNameAvailabilityResponse = NameAvailabilityResponse;

/** Defines headers for B2CTenants_create operation. */
export declare interface B2CTenantsCreateHeaders {
    /** Location URI to poll for result */
    location?: string;
    /** Contains the number of seconds to wait before polling the location. */
    retryAfter?: string;
}

/** Optional parameters. */
export declare interface B2CTenantsCreateOptionalParams extends coreClient.OperationOptions {
    /** The information needed to create the Azure AD B2C tenant and corresponding Azure resource, which is used for billing purposes. */
    createTenantRequestBody?: CreateTenantRequestBody;
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the create operation. */
export declare type B2CTenantsCreateResponse = B2CTenantResource;

/** Defines headers for B2CTenants_delete operation. */
export declare interface B2CTenantsDeleteHeaders {
    /** Contains the URL/location which can return the deletion status. */
    location?: string;
    /** Contains the number of seconds to wait before checking the deletion status. */
    retryAfter?: string;
}

/** Optional parameters. */
export declare interface B2CTenantsDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface B2CTenantsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type B2CTenantsGetResponse = B2CTenantResource;

/** Optional parameters. */
export declare interface B2CTenantsListByResourceGroupOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroup operation. */
export declare type B2CTenantsListByResourceGroupResponse = B2CTenantResourceList;

/** Optional parameters. */
export declare interface B2CTenantsListBySubscriptionOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listBySubscription operation. */
export declare type B2CTenantsListBySubscriptionResponse = B2CTenantResourceList;

/** Optional parameters. */
export declare interface B2CTenantsUpdateOptionalParams extends coreClient.OperationOptions {
    /** The request body to update the Azure AD B2C tenant resource. */
    updateTenantRequestBody?: B2CTenantUpdateRequest;
}

/** Contains response data for the update operation. */
export declare type B2CTenantsUpdateResponse = B2CTenantResource;

/** The request body to update the Azure AD B2C tenant resource. */
export declare interface B2CTenantUpdateRequest {
    /** SKU properties of the Azure AD B2C tenant. Learn more about Azure AD B2C billing at [aka.ms/b2cBilling](https://aka.ms/b2cBilling). */
    sku?: B2CResourceSKU;
    /** Resource Tags */
    tags?: {
        [propertyName: string]: string;
    };
    /** The billing configuration for the tenant. */
    billingConfig?: B2CTenantResourcePropertiesBillingConfig;
    /** An identifier of the Azure AD B2C tenant. */
    tenantId?: string;
}

/**
 * Defines values for BillingType. \
 * {@link KnownBillingType} can be used interchangeably with BillingType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **MAU**: Azure AD B2C usage is billed to a linked Azure subscription and uses a monthly active users (MAU) billing model. \
 * **Auths**: Azure AD B2C usage is billed to a linked Azure subscription and uses number of authentications based billing.
 */
export declare type BillingType = string;

/** The information required to check the availability of the name for the tenant. */
export declare interface CheckNameAvailabilityRequestBody {
    /** The domain name to check for availability. */
    name: string;
    /** Country code of Azure tenant (e.g. 'US'). Refer to [aka.ms/B2CDataResidency](https://aka.ms/B2CDataResidency) to see valid country codes and corresponding data residency locations. If you do not see a country code in an valid data residency location, choose one from the list. */
    countryCode: string;
}

/** An error response for a resource management request. */
export declare interface CloudError {
    /** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.) */
    error?: ErrorResponse;
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export declare type CreatedByType = string;

/** The information needed to create the Azure AD B2C tenant and corresponding Azure resource, which is used for billing purposes. */
export declare interface CreateTenantRequestBody {
    /** The location in which the resource is hosted and data resides. Can be one of 'United States', 'Europe', 'Asia Pacific', or 'Australia'. Refer to [this documentation](https://aka.ms/B2CDataResidency) for more information. */
    location: string;
    /** SKU properties of the Azure AD B2C tenant. Learn more about Azure AD B2C billing at [aka.ms/b2cBilling](https://aka.ms/b2cBilling). */
    sku: B2CResourceSKU;
    /** Resource Tags */
    tags?: {
        [propertyName: string]: string;
    };
    /** The display name of the Azure AD B2C tenant. */
    displayName?: string;
    /** Country code of Azure tenant (e.g. 'US'). Refer to [aka.ms/B2CDataResidency](https://aka.ms/B2CDataResidency) to see valid country codes and corresponding data residency locations. If you do not see a country code in an valid data residency location, choose one from the list. */
    countryCode?: string;
}

/** The resource management error additional info. */
export declare interface ErrorAdditionalInfo {
    /**
     * The additional info type.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /**
     * The additional info.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly info?: Record<string, unknown>;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.) */
export declare interface ErrorResponse {
    /**
     * The error code.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly code?: string;
    /**
     * The error message.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly message?: string;
    /**
     * The error target.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly target?: string;
    /**
     * The error details.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly details?: ErrorResponse[];
    /**
     * The error additional info.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly additionalInfo?: ErrorAdditionalInfo[];
}

export declare class ExternalIdentitiesConfigurationClient extends coreClient.ServiceClient {
    $host: string;
    subscriptionId: string;
    apiVersion: string;
    /**
     * Initializes a new instance of the ExternalIdentitiesConfigurationClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription.
     *                       The subscription ID forms part of the URI for every service call.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: ExternalIdentitiesConfigurationClientOptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    b2CTenants: B2CTenants;
    operations: Operations;
    guestUsages: GuestUsages;
}

/** Optional parameters. */
export declare interface ExternalIdentitiesConfigurationClientOptionalParams extends coreClient.ServiceClientOptions {
    /** server parameter */
    $host?: string;
    /** Api Version */
    apiVersion?: string;
    /** Overrides client endpoint. */
    endpoint?: string;
}

/**
 * Given a result page from a pageable operation, returns a
 * continuation token that can be used to begin paging from
 * that point later.
 * @param page A result object from calling .byPage() on a paged operation.
 * @returns The continuation token that can be passed into byPage().
 */
export declare function getContinuationToken(page: unknown): string | undefined;

/** Interface representing a GuestUsages. */
export declare interface GuestUsages {
    /**
     * Gets Guest Usages resources under a subscription for the Microsoft.AzureActiveDirectory resource
     * provider
     * @param options The options parameters.
     */
    listBySubscription(options?: GuestUsagesListBySubscriptionOptionalParams): PagedAsyncIterableIterator<GuestUsagesResource>;
    /**
     * Gets Guest Usages resources under a resource group for the Microsoft.AzureActiveDirectory resource
     * provider
     * @param resourceGroupName The name of the resource group.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: GuestUsagesListByResourceGroupOptionalParams): PagedAsyncIterableIterator<GuestUsagesResource>;
    /**
     * Creates a Guest Usages resource, which is used to linking a subscription to an instance of Azure AD
     * External Identities. [Learn more](https://aka.ms/extidbilling).
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The initial domain name of the Azure AD B2C tenant.
     * @param options The options parameters.
     */
    create(resourceGroupName: string, resourceName: string, options?: GuestUsagesCreateOptionalParams): Promise<GuestUsagesCreateResponse>;
    /**
     * Updates a Guest Usages resource for the Microsoft.AzureActiveDirectory resource provider
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The initial domain name of the Azure AD B2C tenant.
     * @param options The options parameters.
     */
    update(resourceGroupName: string, resourceName: string, options?: GuestUsagesUpdateOptionalParams): Promise<GuestUsagesUpdateResponse>;
    /**
     * Deletes a Guest Usages resource for the Microsoft.AzureActiveDirectory resource provider
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The initial domain name of the Azure AD B2C tenant.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, resourceName: string, options?: GuestUsagesDeleteOptionalParams): Promise<void>;
    /**
     * Gets a Guest Usages resource for the Microsoft.AzureActiveDirectory resource provider
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The initial domain name of the Azure AD B2C tenant.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, resourceName: string, options?: GuestUsagesGetOptionalParams): Promise<GuestUsagesGetResponse>;
}

/** Optional parameters. */
export declare interface GuestUsagesCreateOptionalParams extends coreClient.OperationOptions {
    /** Guest Usages resource to be created */
    resource?: GuestUsagesResource;
}

/** Contains response data for the create operation. */
export declare type GuestUsagesCreateResponse = GuestUsagesResource;

/** Optional parameters. */
export declare interface GuestUsagesDeleteOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface GuestUsagesGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type GuestUsagesGetResponse = GuestUsagesResource;

/** Optional parameters. */
export declare interface GuestUsagesListByResourceGroupOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroup operation. */
export declare type GuestUsagesListByResourceGroupResponse = GuestUsagesResourceList;

/** Optional parameters. */
export declare interface GuestUsagesListBySubscriptionOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listBySubscription operation. */
export declare type GuestUsagesListBySubscriptionResponse = GuestUsagesResourceList;

/** Guest Usages Resource */
export declare interface GuestUsagesResource {
    /**
     * An identifier that represents the Guest Usages resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /**
     * The name of the Guest Usages resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * The type of the Guest Usages resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /** Location of the Guest Usages resource. */
    location?: string;
    /** Key-value pairs of additional resource provisioning properties. */
    tags?: {
        [propertyName: string]: string;
    };
    /**
     * Metadata pertaining to creation and last modification of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
    /** An identifier for the tenant for which the resource is being created */
    tenantId?: string;
}

/** The collection of guest usages resources */
export declare interface GuestUsagesResourceList {
    /**
     * List of guest usages resources
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: GuestUsagesResource[];
}

/** Guest Usages Resource for Patch */
export declare interface GuestUsagesResourcePatch {
    /** Key-value pairs of additional resource provisioning properties. */
    tags?: {
        [propertyName: string]: string;
    };
}

/** Optional parameters. */
export declare interface GuestUsagesUpdateOptionalParams extends coreClient.OperationOptions {
    /** Guest Usages Resource to be updated */
    resourcePatch?: GuestUsagesResourcePatch;
}

/** Contains response data for the update operation. */
export declare type GuestUsagesUpdateResponse = GuestUsagesResource;

/** Known values of {@link B2CResourceSKUName} that the service accepts. */
export declare enum KnownB2CResourceSKUName {
    /** Azure AD B2C usage is billed to a linked Azure subscription and uses a monthly active users (MAU) billing model. */
    Standard = "Standard",
    /** Azure AD B2C usage is billed to a linked Azure subscription and uses number of authentications based billing. */
    PremiumP1 = "PremiumP1",
    /** Azure AD B2C usage is billed to a linked Azure subscription and uses number of authentications based billing. */
    PremiumP2 = "PremiumP2"
}

/** Known values of {@link B2CResourceSKUTier} that the service accepts. */
export declare enum KnownB2CResourceSKUTier {
    /** The SKU tier used for all Azure AD B2C tenants. */
    A0 = "A0"
}

/** Known values of {@link BillingType} that the service accepts. */
export declare enum KnownBillingType {
    /** Azure AD B2C usage is billed to a linked Azure subscription and uses a monthly active users (MAU) billing model. */
    MAU = "MAU",
    /** Azure AD B2C usage is billed to a linked Azure subscription and uses number of authentications based billing. */
    Auths = "Auths"
}

/** Known values of {@link CreatedByType} that the service accepts. */
export declare enum KnownCreatedByType {
    /** User */
    User = "User",
    /** Application */
    Application = "Application",
    /** ManagedIdentity */
    ManagedIdentity = "ManagedIdentity",
    /** Key */
    Key = "Key"
}

/** Known values of {@link NameAvailabilityReasonType} that the service accepts. */
export declare enum KnownNameAvailabilityReasonType {
    /** The name is already in use and is therefore unavailable. */
    AlreadyExists = "AlreadyExists",
    /** The name provided does not match the resource provider’s naming requirements (incorrect length, unsupported characters, etc.). */
    Invalid = "Invalid"
}

/** Known values of {@link TypeValue} that the service accepts. */
export declare enum KnownTypeValue {
    /** The resource type for Azure AD B2C tenant resource. */
    MicrosoftAzureActiveDirectoryB2CDirectories = "Microsoft.AzureActiveDirectory/b2cDirectories"
}

/**
 * Defines values for NameAvailabilityReasonType. \
 * {@link KnownNameAvailabilityReasonType} can be used interchangeably with NameAvailabilityReasonType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **AlreadyExists**: The name is already in use and is therefore unavailable. \
 * **Invalid**: The name provided does not match the resource provider’s naming requirements (incorrect length, unsupported characters, etc.).
 */
export declare type NameAvailabilityReasonType = string;

/** Response of the CheckNameAvailability operation. */
export declare interface NameAvailabilityResponse {
    /** Description of the reason if name is not available. */
    message?: string;
    /** True if the name is available and can be used to create a new tenant. Otherwise false. */
    nameAvailable?: boolean;
    /** Describes the reason for the 'nameAvailable' value. */
    reason?: NameAvailabilityReasonType;
}

/** Operation detail payload */
export declare interface OperationDetail {
    /** Name of the operation */
    name?: string;
    /** Indicates whether the operation is a data action */
    isDataAction?: boolean;
    /** Display of the operation */
    display?: OperationDisplay;
    /** Origin of the operation */
    origin?: string;
}

/** Operation display payload */
export declare interface OperationDisplay {
    /** Resource provider of the operation */
    provider?: string;
    /** Resource of the operation */
    resource?: string;
    /** Localized friendly name for the operation */
    operation?: string;
    /** Localized friendly description for the operation */
    description?: string;
}

/** Interface representing a Operations. */
export declare interface Operations {
    /**
     * Lists the operations available from this provider.
     * @param options The options parameters.
     */
    list(options?: OperationsListOptionalParams): PagedAsyncIterableIterator<OperationDetail>;
}

/** Optional parameters. */
export declare interface OperationsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type OperationsListResponse = AvailableOperations;

/** Metadata pertaining to creation and last modification of the resource. */
export declare interface SystemData {
    /** The identity that created the resource. */
    createdBy?: string;
    /** The type of identity that created the resource. */
    createdByType?: CreatedByType;
    /** The timestamp of resource creation (UTC). */
    createdAt?: Date;
    /** The identity that last modified the resource. */
    lastModifiedBy?: string;
    /** The type of identity that last modified the resource. */
    lastModifiedByType?: CreatedByType;
    /** The timestamp of resource last modification (UTC) */
    lastModifiedAt?: Date;
}

/**
 * Defines values for TypeValue. \
 * {@link KnownTypeValue} can be used interchangeably with TypeValue,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Microsoft.AzureActiveDirectory\/b2cDirectories**: The resource type for Azure AD B2C tenant resource.
 */
export declare type TypeValue = string;

export { }
