/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { CheckNameAvailabilityRequestBody as CheckNameAvailabilityRequestBodyMapper, CreateTenantRequestBody as CreateTenantRequestBodyMapper, B2CTenantUpdateRequest as B2CTenantUpdateRequestMapper, GuestUsagesResource as GuestUsagesResourceMapper, GuestUsagesResourcePatch as GuestUsagesResourcePatchMapper } from "../models/mappers";
export const contentType = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String"
        }
    }
};
export const checkNameAvailabilityRequestBody = {
    parameterPath: ["options", "checkNameAvailabilityRequestBody"],
    mapper: CheckNameAvailabilityRequestBodyMapper
};
export const accept = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String"
        }
    }
};
export const $host = {
    parameterPath: "$host",
    mapper: {
        serializedName: "$host",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const subscriptionId = {
    parameterPath: "subscriptionId",
    mapper: {
        serializedName: "subscriptionId",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const apiVersion = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2021-04-01",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
export const resourceGroupName = {
    parameterPath: "resourceGroupName",
    mapper: {
        serializedName: "resourceGroupName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const resourceName = {
    parameterPath: "resourceName",
    mapper: {
        serializedName: "resourceName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const createTenantRequestBody = {
    parameterPath: ["options", "createTenantRequestBody"],
    mapper: CreateTenantRequestBodyMapper
};
export const updateTenantRequestBody = {
    parameterPath: ["options", "updateTenantRequestBody"],
    mapper: B2CTenantUpdateRequestMapper
};
export const resource = {
    parameterPath: ["options", "resource"],
    mapper: GuestUsagesResourceMapper
};
export const resourcePatch = {
    parameterPath: ["options", "resourcePatch"],
    mapper: GuestUsagesResourcePatchMapper
};
//# sourceMappingURL=parameters.js.map