/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { ExternalIdentitiesConfigurationClient } from "@azure/arm-azureadexternalidentities";
import { DefaultAzureCredential } from "@azure/identity";
/**
 * This sample demonstrates how to Checks the availability and validity of a domain name for the tenant.
 *
 * @summary Checks the availability and validity of a domain name for the tenant.
 * x-ms-original-file: specification/cpim/resource-manager/Microsoft.AzureActiveDirectory/stable/2021-04-01/examples/checkNameAvailability-available.json
 */
function checkNameAvailabilityAvailable() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "34adfa4f-cedf-4dc0-ba29-b6d1a69ab345";
        const checkNameAvailabilityRequestBody = {
            name: "constoso.onmicrosoft.com",
            countryCode: "US"
        };
        const options = {
            checkNameAvailabilityRequestBody
        };
        const credential = new DefaultAzureCredential();
        const client = new ExternalIdentitiesConfigurationClient(credential, subscriptionId);
        const result = yield client.b2CTenants.checkNameAvailability(options);
        console.log(result);
    });
}
checkNameAvailabilityAvailable().catch(console.error);
/**
 * This sample demonstrates how to Checks the availability and validity of a domain name for the tenant.
 *
 * @summary Checks the availability and validity of a domain name for the tenant.
 * x-ms-original-file: specification/cpim/resource-manager/Microsoft.AzureActiveDirectory/stable/2021-04-01/examples/checkNameAvailability-taken.json
 */
function checkNameAvailabilityTaken() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "34adfa4f-cedf-4dc0-ba29-b6d1a69ab345";
        const checkNameAvailabilityRequestBody = {
            name: "constoso.onmicrosoft.com",
            countryCode: "US"
        };
        const options = {
            checkNameAvailabilityRequestBody
        };
        const credential = new DefaultAzureCredential();
        const client = new ExternalIdentitiesConfigurationClient(credential, subscriptionId);
        const result = yield client.b2CTenants.checkNameAvailability(options);
        console.log(result);
    });
}
checkNameAvailabilityTaken().catch(console.error);
//# sourceMappingURL=b2CTenantsCheckNameAvailabilitySample.js.map