"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var tslib=require("tslib"),coreClient=require("@azure/core-client"),coreRestPipeline=require("@azure/core-rest-pipeline");function _interopNamespace(i){var t;return i&&i.__esModule?i:(t=Object.create(null),i&&Object.keys(i).forEach(function(e){var r;"default"!==e&&(r=Object.getOwnPropertyDescriptor(i,e),Object.defineProperty(t,e,r.get?r:{enumerable:!0,get:function(){return i[e]}}))}),t.default=i,Object.freeze(t))}var coreClient__namespace=_interopNamespace(coreClient),coreRestPipeline__namespace=_interopNamespace(coreRestPipeline);const pageMap=new WeakMap;function getContinuationToken(e){return"object"!=typeof e||null===e||null==(e=pageMap.get(e))?void 0:e.continuationToken}function setContinuationToken(e,r){var i;"object"==typeof e&&null!==e&&r&&((i=null!=(i=pageMap.get(e))?i:{}).continuationToken=r,pageMap.set(e,i))}exports.KnownEnum0=void 0,function(e){e.Available="Available",e.Unavailable="Unavailable"}(exports.KnownEnum0||(exports.KnownEnum0={})),exports.KnownLegacyPeeringsKind=void 0,function(e){e.Direct="Direct",e.Exchange="Exchange"}(exports.KnownLegacyPeeringsKind||(exports.KnownLegacyPeeringsKind={})),exports.KnownTier=void 0,function(e){e.Basic="Basic",e.Premium="Premium"}(exports.KnownTier||(exports.KnownTier={})),exports.KnownFamily=void 0,function(e){e.Direct="Direct",e.Exchange="Exchange"}(exports.KnownFamily||(exports.KnownFamily={})),exports.KnownSize=void 0,function(e){e.Free="Free",e.Metered="Metered",e.Unlimited="Unlimited"}(exports.KnownSize||(exports.KnownSize={})),exports.KnownKind=void 0,function(e){e.Direct="Direct",e.Exchange="Exchange"}(exports.KnownKind||(exports.KnownKind={})),exports.KnownSessionAddressProvider=void 0,function(e){e.Microsoft="Microsoft",e.Peer="Peer"}(exports.KnownSessionAddressProvider||(exports.KnownSessionAddressProvider={})),exports.KnownConnectionState=void 0,function(e){e.None="None",e.PendingApproval="PendingApproval",e.Approved="Approved",e.ProvisioningStarted="ProvisioningStarted",e.ProvisioningFailed="ProvisioningFailed",e.ProvisioningCompleted="ProvisioningCompleted",e.Validating="Validating",e.Active="Active"}(exports.KnownConnectionState||(exports.KnownConnectionState={})),exports.KnownSessionStateV4=void 0,function(e){e.None="None",e.Idle="Idle",e.Connect="Connect",e.Active="Active",e.OpenSent="OpenSent",e.OpenConfirm="OpenConfirm",e.OpenReceived="OpenReceived",e.Established="Established",e.PendingAdd="PendingAdd",e.PendingUpdate="PendingUpdate",e.PendingRemove="PendingRemove"}(exports.KnownSessionStateV4||(exports.KnownSessionStateV4={})),exports.KnownSessionStateV6=void 0,function(e){e.None="None",e.Idle="Idle",e.Connect="Connect",e.Active="Active",e.OpenSent="OpenSent",e.OpenConfirm="OpenConfirm",e.OpenReceived="OpenReceived",e.Established="Established",e.PendingAdd="PendingAdd",e.PendingUpdate="PendingUpdate",e.PendingRemove="PendingRemove"}(exports.KnownSessionStateV6||(exports.KnownSessionStateV6={})),exports.KnownDirectPeeringType=void 0,function(e){e.Edge="Edge",e.Transit="Transit",e.Cdn="Cdn",e.Internal="Internal",e.Ix="Ix",e.IxRs="IxRs",e.Voice="Voice"}(exports.KnownDirectPeeringType||(exports.KnownDirectPeeringType={})),exports.KnownProvisioningState=void 0,function(e){e.Succeeded="Succeeded",e.Updating="Updating",e.Deleting="Deleting",e.Failed="Failed"}(exports.KnownProvisioningState||(exports.KnownProvisioningState={})),exports.KnownLookingGlassCommand=void 0,function(e){e.Traceroute="Traceroute",e.Ping="Ping",e.BgpRoute="BgpRoute"}(exports.KnownLookingGlassCommand||(exports.KnownLookingGlassCommand={})),exports.KnownLookingGlassSourceType=void 0,function(e){e.EdgeSite="EdgeSite",e.AzureRegion="AzureRegion"}(exports.KnownLookingGlassSourceType||(exports.KnownLookingGlassSourceType={})),exports.KnownCommand=void 0,function(e){e.Traceroute="Traceroute",e.Ping="Ping",e.BgpRoute="BgpRoute"}(exports.KnownCommand||(exports.KnownCommand={})),exports.KnownRole=void 0,function(e){e.Noc="Noc",e.Policy="Policy",e.Technical="Technical",e.Service="Service",e.Escalation="Escalation",e.Other="Other"}(exports.KnownRole||(exports.KnownRole={})),exports.KnownValidationState=void 0,function(e){e.None="None",e.Pending="Pending",e.Approved="Approved",e.Failed="Failed"}(exports.KnownValidationState||(exports.KnownValidationState={})),exports.KnownPeeringLocationsKind=void 0,function(e){e.Direct="Direct",e.Exchange="Exchange"}(exports.KnownPeeringLocationsKind||(exports.KnownPeeringLocationsKind={})),exports.KnownPeeringLocationsDirectPeeringType=void 0,function(e){e.Edge="Edge",e.Transit="Transit",e.Cdn="Cdn",e.Internal="Internal",e.Ix="Ix",e.IxRs="IxRs",e.Voice="Voice"}(exports.KnownPeeringLocationsDirectPeeringType||(exports.KnownPeeringLocationsDirectPeeringType={})),exports.KnownPrefixValidationState=void 0,function(e){e.None="None",e.Invalid="Invalid",e.Verified="Verified",e.Failed="Failed",e.Pending="Pending",e.Warning="Warning",e.Unknown="Unknown"}(exports.KnownPrefixValidationState||(exports.KnownPrefixValidationState={})),exports.KnownLearnedType=void 0,function(e){e.None="None",e.ViaServiceProvider="ViaServiceProvider",e.ViaSession="ViaSession"}(exports.KnownLearnedType||(exports.KnownLearnedType={}));const CdnPeeringPrefixListResult={type:{name:"Composite",className:"CdnPeeringPrefixListResult",modelProperties:{value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"CdnPeeringPrefix"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},Resource={type:{name:"Composite",className:"Resource",modelProperties:{name:{serializedName:"name",readOnly:!0,type:{name:"String"}},id:{serializedName:"id",readOnly:!0,type:{name:"String"}},type:{serializedName:"type",readOnly:!0,type:{name:"String"}}}}},ErrorResponse={type:{name:"Composite",className:"ErrorResponse",modelProperties:{error:{serializedName:"error",type:{name:"Composite",className:"ErrorDetail"}}}}},ErrorDetail={type:{name:"Composite",className:"ErrorDetail",modelProperties:{code:{serializedName:"code",readOnly:!0,type:{name:"String"}},message:{serializedName:"message",readOnly:!0,type:{name:"String"}}}}},CheckServiceProviderAvailabilityInput={type:{name:"Composite",className:"CheckServiceProviderAvailabilityInput",modelProperties:{peeringServiceLocation:{serializedName:"peeringServiceLocation",type:{name:"String"}},peeringServiceProvider:{serializedName:"peeringServiceProvider",type:{name:"String"}}}}},PeeringListResult={type:{name:"Composite",className:"PeeringListResult",modelProperties:{value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"Peering"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},PeeringSku={type:{name:"Composite",className:"PeeringSku",modelProperties:{name:{serializedName:"name",type:{name:"String"}},tier:{serializedName:"tier",readOnly:!0,type:{name:"String"}},family:{serializedName:"family",readOnly:!0,type:{name:"String"}},size:{serializedName:"size",readOnly:!0,type:{name:"String"}}}}},PeeringPropertiesDirect={type:{name:"Composite",className:"PeeringPropertiesDirect",modelProperties:{connections:{serializedName:"connections",type:{name:"Sequence",element:{type:{name:"Composite",className:"DirectConnection"}}}},useForPeeringService:{serializedName:"useForPeeringService",readOnly:!0,type:{name:"Boolean"}},peerAsn:{serializedName:"peerAsn",type:{name:"Composite",className:"SubResource"}},directPeeringType:{serializedName:"directPeeringType",type:{name:"String"}}}}},DirectConnection={type:{name:"Composite",className:"DirectConnection",modelProperties:{bandwidthInMbps:{serializedName:"bandwidthInMbps",type:{name:"Number"}},provisionedBandwidthInMbps:{serializedName:"provisionedBandwidthInMbps",readOnly:!0,type:{name:"Number"}},sessionAddressProvider:{serializedName:"sessionAddressProvider",type:{name:"String"}},useForPeeringService:{serializedName:"useForPeeringService",type:{name:"Boolean"}},microsoftTrackingId:{serializedName:"microsoftTrackingId",readOnly:!0,type:{name:"String"}},peeringDBFacilityId:{serializedName:"peeringDBFacilityId",type:{name:"Number"}},connectionState:{serializedName:"connectionState",readOnly:!0,type:{name:"String"}},bgpSession:{serializedName:"bgpSession",type:{name:"Composite",className:"BgpSession"}},connectionIdentifier:{serializedName:"connectionIdentifier",type:{name:"String"}},errorMessage:{serializedName:"errorMessage",readOnly:!0,type:{name:"String"}}}}},BgpSession={type:{name:"Composite",className:"BgpSession",modelProperties:{sessionPrefixV4:{serializedName:"sessionPrefixV4",type:{name:"String"}},sessionPrefixV6:{serializedName:"sessionPrefixV6",type:{name:"String"}},microsoftSessionIPv4Address:{serializedName:"microsoftSessionIPv4Address",type:{name:"String"}},microsoftSessionIPv6Address:{serializedName:"microsoftSessionIPv6Address",type:{name:"String"}},peerSessionIPv4Address:{serializedName:"peerSessionIPv4Address",type:{name:"String"}},peerSessionIPv6Address:{serializedName:"peerSessionIPv6Address",type:{name:"String"}},sessionStateV4:{serializedName:"sessionStateV4",readOnly:!0,type:{name:"String"}},sessionStateV6:{serializedName:"sessionStateV6",readOnly:!0,type:{name:"String"}},maxPrefixesAdvertisedV4:{serializedName:"maxPrefixesAdvertisedV4",type:{name:"Number"}},maxPrefixesAdvertisedV6:{serializedName:"maxPrefixesAdvertisedV6",type:{name:"Number"}},md5AuthenticationKey:{serializedName:"md5AuthenticationKey",type:{name:"String"}}}}},SubResource={type:{name:"Composite",className:"SubResource",modelProperties:{id:{serializedName:"id",type:{name:"String"}}}}},PeeringPropertiesExchange={type:{name:"Composite",className:"PeeringPropertiesExchange",modelProperties:{connections:{serializedName:"connections",type:{name:"Sequence",element:{type:{name:"Composite",className:"ExchangeConnection"}}}},peerAsn:{serializedName:"peerAsn",type:{name:"Composite",className:"SubResource"}}}}},ExchangeConnection={type:{name:"Composite",className:"ExchangeConnection",modelProperties:{peeringDBFacilityId:{serializedName:"peeringDBFacilityId",type:{name:"Number"}},connectionState:{serializedName:"connectionState",readOnly:!0,type:{name:"String"}},bgpSession:{serializedName:"bgpSession",type:{name:"Composite",className:"BgpSession"}},connectionIdentifier:{serializedName:"connectionIdentifier",type:{name:"String"}},errorMessage:{serializedName:"errorMessage",readOnly:!0,type:{name:"String"}}}}},LookingGlassOutput={type:{name:"Composite",className:"LookingGlassOutput",modelProperties:{command:{serializedName:"command",type:{name:"String"}},output:{serializedName:"output",type:{name:"String"}}}}},OperationListResult={type:{name:"Composite",className:"OperationListResult",modelProperties:{value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"Operation"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},Operation={type:{name:"Composite",className:"Operation",modelProperties:{name:{serializedName:"name",readOnly:!0,type:{name:"String"}},display:{serializedName:"display",type:{name:"Composite",className:"OperationDisplayInfo"}},isDataAction:{serializedName:"isDataAction",readOnly:!0,type:{name:"Boolean"}},serviceSpecification:{serializedName:"properties.serviceSpecification",type:{name:"Composite",className:"ServiceSpecification"}}}}},OperationDisplayInfo={type:{name:"Composite",className:"OperationDisplayInfo",modelProperties:{provider:{serializedName:"provider",readOnly:!0,type:{name:"String"}},resource:{serializedName:"resource",readOnly:!0,type:{name:"String"}},operation:{serializedName:"operation",readOnly:!0,type:{name:"String"}},description:{serializedName:"description",readOnly:!0,type:{name:"String"}}}}},ServiceSpecification={type:{name:"Composite",className:"ServiceSpecification",modelProperties:{metricSpecifications:{serializedName:"metricSpecifications",readOnly:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"MetricSpecification"}}}}}}},MetricSpecification={type:{name:"Composite",className:"MetricSpecification",modelProperties:{name:{serializedName:"name",readOnly:!0,type:{name:"String"}},displayName:{serializedName:"displayName",readOnly:!0,type:{name:"String"}},displayDescription:{serializedName:"displayDescription",readOnly:!0,type:{name:"String"}},unit:{serializedName:"unit",readOnly:!0,type:{name:"String"}},aggregationType:{serializedName:"aggregationType",readOnly:!0,type:{name:"String"}},supportedTimeGrainTypes:{serializedName:"supportedTimeGrainTypes",readOnly:!0,type:{name:"Sequence",element:{type:{name:"String"}}}},dimensions:{serializedName:"dimensions",readOnly:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"MetricDimension"}}}}}}},MetricDimension={type:{name:"Composite",className:"MetricDimension",modelProperties:{name:{serializedName:"name",readOnly:!0,type:{name:"String"}},displayName:{serializedName:"displayName",readOnly:!0,type:{name:"String"}}}}},ContactDetail={type:{name:"Composite",className:"ContactDetail",modelProperties:{role:{serializedName:"role",type:{name:"String"}},email:{serializedName:"email",type:{name:"String"}},phone:{serializedName:"phone",type:{name:"String"}}}}},PeerAsnListResult={type:{name:"Composite",className:"PeerAsnListResult",modelProperties:{value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"PeerAsn"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},PeeringLocationListResult={type:{name:"Composite",className:"PeeringLocationListResult",modelProperties:{value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"PeeringLocation"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},PeeringLocationPropertiesDirect={type:{name:"Composite",className:"PeeringLocationPropertiesDirect",modelProperties:{peeringFacilities:{serializedName:"peeringFacilities",type:{name:"Sequence",element:{type:{name:"Composite",className:"DirectPeeringFacility"}}}},bandwidthOffers:{serializedName:"bandwidthOffers",type:{name:"Sequence",element:{type:{name:"Composite",className:"PeeringBandwidthOffer"}}}}}}},DirectPeeringFacility={type:{name:"Composite",className:"DirectPeeringFacility",modelProperties:{address:{serializedName:"address",type:{name:"String"}},directPeeringType:{serializedName:"directPeeringType",type:{name:"String"}},peeringDBFacilityId:{serializedName:"peeringDBFacilityId",type:{name:"Number"}},peeringDBFacilityLink:{serializedName:"peeringDBFacilityLink",type:{name:"String"}}}}},PeeringBandwidthOffer={type:{name:"Composite",className:"PeeringBandwidthOffer",modelProperties:{offerName:{serializedName:"offerName",type:{name:"String"}},valueInMbps:{serializedName:"valueInMbps",type:{name:"Number"}}}}},PeeringLocationPropertiesExchange={type:{name:"Composite",className:"PeeringLocationPropertiesExchange",modelProperties:{peeringFacilities:{serializedName:"peeringFacilities",type:{name:"Sequence",element:{type:{name:"Composite",className:"ExchangePeeringFacility"}}}}}}},ExchangePeeringFacility={type:{name:"Composite",className:"ExchangePeeringFacility",modelProperties:{exchangeName:{serializedName:"exchangeName",type:{name:"String"}},bandwidthInMbps:{serializedName:"bandwidthInMbps",type:{name:"Number"}},microsoftIPv4Address:{serializedName:"microsoftIPv4Address",type:{name:"String"}},microsoftIPv6Address:{serializedName:"microsoftIPv6Address",type:{name:"String"}},facilityIPv4Prefix:{serializedName:"facilityIPv4Prefix",type:{name:"String"}},facilityIPv6Prefix:{serializedName:"facilityIPv6Prefix",type:{name:"String"}},peeringDBFacilityId:{serializedName:"peeringDBFacilityId",type:{name:"Number"}},peeringDBFacilityLink:{serializedName:"peeringDBFacilityLink",type:{name:"String"}}}}},PeeringRegisteredAsnListResult={type:{name:"Composite",className:"PeeringRegisteredAsnListResult",modelProperties:{value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"PeeringRegisteredAsn"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},PeeringRegisteredPrefixListResult={type:{name:"Composite",className:"PeeringRegisteredPrefixListResult",modelProperties:{value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"PeeringRegisteredPrefix"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},ResourceTags={type:{name:"Composite",className:"ResourceTags",modelProperties:{tags:{serializedName:"tags",type:{name:"Dictionary",value:{type:{name:"String"}}}}}}},PeeringReceivedRouteListResult={type:{name:"Composite",className:"PeeringReceivedRouteListResult",modelProperties:{value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"PeeringReceivedRoute"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},PeeringReceivedRoute={type:{name:"Composite",className:"PeeringReceivedRoute",modelProperties:{prefix:{serializedName:"prefix",readOnly:!0,type:{name:"String"}},nextHop:{serializedName:"nextHop",readOnly:!0,type:{name:"String"}},asPath:{serializedName:"asPath",readOnly:!0,type:{name:"String"}},originAsValidationState:{serializedName:"originAsValidationState",readOnly:!0,type:{name:"String"}},rpkiValidationState:{serializedName:"rpkiValidationState",readOnly:!0,type:{name:"String"}},trustAnchor:{serializedName:"trustAnchor",readOnly:!0,type:{name:"String"}},receivedTimestamp:{serializedName:"receivedTimestamp",readOnly:!0,type:{name:"String"}}}}},ConnectionMonitorTestListResult={type:{name:"Composite",className:"ConnectionMonitorTestListResult",modelProperties:{value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"ConnectionMonitorTest"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},PeeringServiceCountryListResult={type:{name:"Composite",className:"PeeringServiceCountryListResult",modelProperties:{value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"PeeringServiceCountry"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},PeeringServiceLocationListResult={type:{name:"Composite",className:"PeeringServiceLocationListResult",modelProperties:{value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"PeeringServiceLocation"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},PeeringServicePrefixEvent={type:{name:"Composite",className:"PeeringServicePrefixEvent",modelProperties:{eventTimestamp:{serializedName:"eventTimestamp",readOnly:!0,type:{name:"DateTime"}},eventType:{serializedName:"eventType",readOnly:!0,type:{name:"String"}},eventSummary:{serializedName:"eventSummary",readOnly:!0,type:{name:"String"}},eventLevel:{serializedName:"eventLevel",readOnly:!0,type:{name:"String"}},eventDescription:{serializedName:"eventDescription",readOnly:!0,type:{name:"String"}}}}},PeeringServicePrefixListResult={type:{name:"Composite",className:"PeeringServicePrefixListResult",modelProperties:{value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"PeeringServicePrefix"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},PeeringServiceProviderListResult={type:{name:"Composite",className:"PeeringServiceProviderListResult",modelProperties:{value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"PeeringServiceProvider"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},PeeringServiceSku={type:{name:"Composite",className:"PeeringServiceSku",modelProperties:{name:{serializedName:"name",type:{name:"String"}}}}},LogAnalyticsWorkspaceProperties={type:{name:"Composite",className:"LogAnalyticsWorkspaceProperties",modelProperties:{workspaceID:{serializedName:"workspaceID",readOnly:!0,type:{name:"String"}},key:{serializedName:"key",readOnly:!0,type:{name:"String"}},connectedAgents:{serializedName:"connectedAgents",readOnly:!0,type:{name:"Sequence",element:{type:{name:"String"}}}}}}},PeeringServiceListResult={type:{name:"Composite",className:"PeeringServiceListResult",modelProperties:{value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"PeeringService"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},CdnPeeringPrefix={type:{name:"Composite",className:"CdnPeeringPrefix",modelProperties:Object.assign(Object.assign({},Resource.type.modelProperties),{prefix:{serializedName:"properties.prefix",readOnly:!0,type:{name:"String"}},azureRegion:{serializedName:"properties.azureRegion",readOnly:!0,type:{name:"String"}},azureService:{serializedName:"properties.azureService",readOnly:!0,type:{name:"String"}},isPrimaryRegion:{serializedName:"properties.isPrimaryRegion",readOnly:!0,type:{name:"Boolean"}},bgpCommunity:{serializedName:"properties.bgpCommunity",readOnly:!0,type:{name:"String"}}})}},Peering={type:{name:"Composite",className:"Peering",modelProperties:Object.assign(Object.assign({},Resource.type.modelProperties),{sku:{serializedName:"sku",type:{name:"Composite",className:"PeeringSku"}},kind:{serializedName:"kind",required:!0,type:{name:"String"}},location:{serializedName:"location",required:!0,type:{name:"String"}},tags:{serializedName:"tags",type:{name:"Dictionary",value:{type:{name:"String"}}}},direct:{serializedName:"properties.direct",type:{name:"Composite",className:"PeeringPropertiesDirect"}},exchange:{serializedName:"properties.exchange",type:{name:"Composite",className:"PeeringPropertiesExchange"}},peeringLocation:{serializedName:"properties.peeringLocation",type:{name:"String"}},provisioningState:{serializedName:"properties.provisioningState",readOnly:!0,type:{name:"String"}}})}},PeerAsn={type:{name:"Composite",className:"PeerAsn",modelProperties:Object.assign(Object.assign({},Resource.type.modelProperties),{peerAsn:{serializedName:"properties.peerAsn",type:{name:"Number"}},peerContactDetail:{serializedName:"properties.peerContactDetail",type:{name:"Sequence",element:{type:{name:"Composite",className:"ContactDetail"}}}},peerName:{serializedName:"properties.peerName",type:{name:"String"}},validationState:{serializedName:"properties.validationState",readOnly:!0,type:{name:"String"}},errorMessage:{serializedName:"properties.errorMessage",readOnly:!0,type:{name:"String"}}})}},PeeringLocation={type:{name:"Composite",className:"PeeringLocation",modelProperties:Object.assign(Object.assign({},Resource.type.modelProperties),{kind:{serializedName:"kind",type:{name:"String"}},direct:{serializedName:"properties.direct",type:{name:"Composite",className:"PeeringLocationPropertiesDirect"}},exchange:{serializedName:"properties.exchange",type:{name:"Composite",className:"PeeringLocationPropertiesExchange"}},peeringLocation:{serializedName:"properties.peeringLocation",type:{name:"String"}},country:{serializedName:"properties.country",type:{name:"String"}},azureRegion:{serializedName:"properties.azureRegion",type:{name:"String"}}})}},PeeringRegisteredAsn={type:{name:"Composite",className:"PeeringRegisteredAsn",modelProperties:Object.assign(Object.assign({},Resource.type.modelProperties),{asn:{serializedName:"properties.asn",type:{name:"Number"}},peeringServicePrefixKey:{serializedName:"properties.peeringServicePrefixKey",readOnly:!0,type:{name:"String"}},provisioningState:{serializedName:"properties.provisioningState",readOnly:!0,type:{name:"String"}}})}},PeeringRegisteredPrefix={type:{name:"Composite",className:"PeeringRegisteredPrefix",modelProperties:Object.assign(Object.assign({},Resource.type.modelProperties),{prefix:{serializedName:"properties.prefix",type:{name:"String"}},prefixValidationState:{serializedName:"properties.prefixValidationState",readOnly:!0,type:{name:"String"}},peeringServicePrefixKey:{serializedName:"properties.peeringServicePrefixKey",readOnly:!0,type:{name:"String"}},errorMessage:{serializedName:"properties.errorMessage",readOnly:!0,type:{name:"String"}},provisioningState:{serializedName:"properties.provisioningState",readOnly:!0,type:{name:"String"}}})}},ConnectionMonitorTest={type:{name:"Composite",className:"ConnectionMonitorTest",modelProperties:Object.assign(Object.assign({},Resource.type.modelProperties),{sourceAgent:{serializedName:"properties.sourceAgent",type:{name:"String"}},destination:{serializedName:"properties.destination",type:{name:"String"}},destinationPort:{serializedName:"properties.destinationPort",type:{name:"Number"}},testFrequencyInSec:{serializedName:"properties.testFrequencyInSec",type:{name:"Number"}},isTestSuccessful:{serializedName:"properties.isTestSuccessful",readOnly:!0,type:{name:"Boolean"}},path:{serializedName:"properties.path",readOnly:!0,type:{name:"Sequence",element:{type:{name:"String"}}}},provisioningState:{serializedName:"properties.provisioningState",readOnly:!0,type:{name:"String"}}})}},PeeringServiceCountry={type:{name:"Composite",className:"PeeringServiceCountry",modelProperties:Object.assign({},Resource.type.modelProperties)}},PeeringServiceLocation={type:{name:"Composite",className:"PeeringServiceLocation",modelProperties:Object.assign(Object.assign({},Resource.type.modelProperties),{country:{serializedName:"properties.country",type:{name:"String"}},state:{serializedName:"properties.state",type:{name:"String"}},azureRegion:{serializedName:"properties.azureRegion",type:{name:"String"}}})}},PeeringServicePrefix={type:{name:"Composite",className:"PeeringServicePrefix",modelProperties:Object.assign(Object.assign({},Resource.type.modelProperties),{prefix:{serializedName:"properties.prefix",type:{name:"String"}},prefixValidationState:{serializedName:"properties.prefixValidationState",readOnly:!0,type:{name:"String"}},learnedType:{serializedName:"properties.learnedType",readOnly:!0,type:{name:"String"}},errorMessage:{serializedName:"properties.errorMessage",readOnly:!0,type:{name:"String"}},events:{serializedName:"properties.events",readOnly:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"PeeringServicePrefixEvent"}}}},peeringServicePrefixKey:{serializedName:"properties.peeringServicePrefixKey",type:{name:"String"}},provisioningState:{serializedName:"properties.provisioningState",readOnly:!0,type:{name:"String"}}})}},PeeringServiceProvider={type:{name:"Composite",className:"PeeringServiceProvider",modelProperties:Object.assign(Object.assign({},Resource.type.modelProperties),{serviceProviderName:{serializedName:"properties.serviceProviderName",type:{name:"String"}},peeringLocations:{serializedName:"properties.peeringLocations",type:{name:"Sequence",element:{type:{name:"String"}}}}})}},PeeringService={type:{name:"Composite",className:"PeeringService",modelProperties:Object.assign(Object.assign({},Resource.type.modelProperties),{sku:{serializedName:"sku",type:{name:"Composite",className:"PeeringServiceSku"}},location:{serializedName:"location",required:!0,type:{name:"String"}},tags:{serializedName:"tags",type:{name:"Dictionary",value:{type:{name:"String"}}}},peeringServiceLocation:{serializedName:"properties.peeringServiceLocation",type:{name:"String"}},peeringServiceProvider:{serializedName:"properties.peeringServiceProvider",type:{name:"String"}},provisioningState:{serializedName:"properties.provisioningState",readOnly:!0,type:{name:"String"}},providerPrimaryPeeringLocation:{serializedName:"properties.providerPrimaryPeeringLocation",type:{name:"String"}},providerBackupPeeringLocation:{serializedName:"properties.providerBackupPeeringLocation",type:{name:"String"}},logAnalyticsWorkspaceProperties:{serializedName:"properties.logAnalyticsWorkspaceProperties",type:{name:"Composite",className:"LogAnalyticsWorkspaceProperties"}}})}};var Mappers=Object.freeze({__proto__:null,CdnPeeringPrefixListResult:CdnPeeringPrefixListResult,Resource:Resource,ErrorResponse:ErrorResponse,ErrorDetail:ErrorDetail,CheckServiceProviderAvailabilityInput:CheckServiceProviderAvailabilityInput,PeeringListResult:PeeringListResult,PeeringSku:PeeringSku,PeeringPropertiesDirect:PeeringPropertiesDirect,DirectConnection:DirectConnection,BgpSession:BgpSession,SubResource:SubResource,PeeringPropertiesExchange:PeeringPropertiesExchange,ExchangeConnection:ExchangeConnection,LookingGlassOutput:LookingGlassOutput,OperationListResult:OperationListResult,Operation:Operation,OperationDisplayInfo:OperationDisplayInfo,ServiceSpecification:ServiceSpecification,MetricSpecification:MetricSpecification,MetricDimension:MetricDimension,ContactDetail:ContactDetail,PeerAsnListResult:PeerAsnListResult,PeeringLocationListResult:PeeringLocationListResult,PeeringLocationPropertiesDirect:PeeringLocationPropertiesDirect,DirectPeeringFacility:DirectPeeringFacility,PeeringBandwidthOffer:PeeringBandwidthOffer,PeeringLocationPropertiesExchange:PeeringLocationPropertiesExchange,ExchangePeeringFacility:ExchangePeeringFacility,PeeringRegisteredAsnListResult:PeeringRegisteredAsnListResult,PeeringRegisteredPrefixListResult:PeeringRegisteredPrefixListResult,ResourceTags:ResourceTags,PeeringReceivedRouteListResult:PeeringReceivedRouteListResult,PeeringReceivedRoute:PeeringReceivedRoute,ConnectionMonitorTestListResult:ConnectionMonitorTestListResult,PeeringServiceCountryListResult:PeeringServiceCountryListResult,PeeringServiceLocationListResult:PeeringServiceLocationListResult,PeeringServicePrefixEvent:PeeringServicePrefixEvent,PeeringServicePrefixListResult:PeeringServicePrefixListResult,PeeringServiceProviderListResult:PeeringServiceProviderListResult,PeeringServiceSku:PeeringServiceSku,LogAnalyticsWorkspaceProperties:LogAnalyticsWorkspaceProperties,PeeringServiceListResult:PeeringServiceListResult,CdnPeeringPrefix:CdnPeeringPrefix,Peering:Peering,PeerAsn:PeerAsn,PeeringLocation:PeeringLocation,PeeringRegisteredAsn:PeeringRegisteredAsn,PeeringRegisteredPrefix:PeeringRegisteredPrefix,ConnectionMonitorTest:ConnectionMonitorTest,PeeringServiceCountry:PeeringServiceCountry,PeeringServiceLocation:PeeringServiceLocation,PeeringServicePrefix:PeeringServicePrefix,PeeringServiceProvider:PeeringServiceProvider,PeeringService:PeeringService});const accept={parameterPath:"accept",mapper:{defaultValue:"application/json",isConstant:!0,serializedName:"Accept",type:{name:"String"}}},$host={parameterPath:"$host",mapper:{serializedName:"$host",required:!0,type:{name:"String"}},skipEncoding:!0},peeringLocation={parameterPath:"peeringLocation",mapper:{serializedName:"peeringLocation",required:!0,type:{name:"String"}}},subscriptionId={parameterPath:"subscriptionId",mapper:{serializedName:"subscriptionId",required:!0,type:{name:"String"}}},apiVersion={parameterPath:"apiVersion",mapper:{defaultValue:"2021-06-01",isConstant:!0,serializedName:"api-version",type:{name:"String"}}},nextLink={parameterPath:"nextLink",mapper:{serializedName:"nextLink",required:!0,type:{name:"String"}},skipEncoding:!0},contentType={parameterPath:["options","contentType"],mapper:{defaultValue:"application/json",isConstant:!0,serializedName:"Content-Type",type:{name:"String"}}},checkServiceProviderAvailabilityInput={parameterPath:"checkServiceProviderAvailabilityInput",mapper:CheckServiceProviderAvailabilityInput},kind={parameterPath:"kind",mapper:{serializedName:"kind",required:!0,type:{name:"String"}}},asn={parameterPath:["options","asn"],mapper:{serializedName:"asn",type:{name:"Number"}}},command={parameterPath:"command",mapper:{serializedName:"command",required:!0,type:{name:"String"}}},sourceType={parameterPath:"sourceType",mapper:{serializedName:"sourceType",required:!0,type:{name:"String"}}},sourceLocation={parameterPath:"sourceLocation",mapper:{serializedName:"sourceLocation",required:!0,type:{name:"String"}}},destinationIP={parameterPath:"destinationIP",mapper:{serializedName:"destinationIP",required:!0,type:{name:"String"}}},peerAsnName={parameterPath:"peerAsnName",mapper:{serializedName:"peerAsnName",required:!0,type:{name:"String"}}},peerAsn={parameterPath:"peerAsn",mapper:PeerAsn},kind1={parameterPath:"kind",mapper:{serializedName:"kind",required:!0,type:{name:"String"}}},directPeeringType={parameterPath:["options","directPeeringType"],mapper:{serializedName:"directPeeringType",type:{name:"String"}}},resourceGroupName={parameterPath:"resourceGroupName",mapper:{serializedName:"resourceGroupName",required:!0,type:{name:"String"}}},peeringName={parameterPath:"peeringName",mapper:{serializedName:"peeringName",required:!0,type:{name:"String"}}},registeredAsnName={parameterPath:"registeredAsnName",mapper:{serializedName:"registeredAsnName",required:!0,type:{name:"String"}}},registeredAsn={parameterPath:"registeredAsn",mapper:PeeringRegisteredAsn},registeredPrefixName={parameterPath:"registeredPrefixName",mapper:{serializedName:"registeredPrefixName",required:!0,type:{name:"String"}}},registeredPrefix={parameterPath:"registeredPrefix",mapper:PeeringRegisteredPrefix},peering={parameterPath:"peering",mapper:Peering},tags={parameterPath:"tags",mapper:ResourceTags},prefix={parameterPath:["options","prefix"],mapper:{serializedName:"prefix",type:{name:"String"}}},asPath={parameterPath:["options","asPath"],mapper:{serializedName:"asPath",type:{name:"String"}}},originAsValidationState={parameterPath:["options","originAsValidationState"],mapper:{serializedName:"originAsValidationState",type:{name:"String"}}},rpkiValidationState={parameterPath:["options","rpkiValidationState"],mapper:{serializedName:"rpkiValidationState",type:{name:"String"}}},skipToken={parameterPath:["options","skipToken"],mapper:{serializedName:"$skipToken",type:{name:"String"}}},peeringServiceName={parameterPath:"peeringServiceName",mapper:{serializedName:"peeringServiceName",required:!0,type:{name:"String"}}},connectionMonitorTestName={parameterPath:"connectionMonitorTestName",mapper:{serializedName:"connectionMonitorTestName",required:!0,type:{name:"String"}}},connectionMonitorTest={parameterPath:"connectionMonitorTest",mapper:ConnectionMonitorTest},country={parameterPath:["options","country"],mapper:{serializedName:"country",type:{name:"String"}}},prefixName={parameterPath:"prefixName",mapper:{serializedName:"prefixName",required:!0,type:{name:"String"}}},expand={parameterPath:["options","expand"],mapper:{serializedName:"$expand",type:{name:"String"}}},peeringServicePrefix={parameterPath:"peeringServicePrefix",mapper:PeeringServicePrefix},peeringService={parameterPath:"peeringService",mapper:PeeringService};class CdnPeeringPrefixesImpl{constructor(e){this.client=e}list(r,i){const e=this.listPagingAll(r,i);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listPagingPage(r,i,e)}}}listPagingPage(n,a,s){return tslib.__asyncGenerator(this,arguments,function*(){let e,r=null==s?void 0:s.continuationToken;var i;for(r||(setContinuationToken(i=(e=yield tslib.__await(this._list(n,a))).value||[],r=e.nextLink),yield yield tslib.__await(i));r;){e=yield tslib.__await(this._listNext(n,r,a)),r=e.nextLink;var t=e.value||[];setContinuationToken(t,r),yield yield tslib.__await(t)}})}listPagingAll(a,s){return tslib.__asyncGenerator(this,arguments,function*(){var r,e;try{for(var i,t=tslib.__asyncValues(this.listPagingPage(a,s));!(i=yield tslib.__await(t.next())).done;){var n=i.value;yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(n)))}}catch(e){r={error:e}}finally{try{i&&!i.done&&(e=t.return)&&(yield tslib.__await(e.call(t)))}finally{if(r)throw r.error}}})}_list(e,r){return this.client.sendOperationRequest({peeringLocation:e,options:r},listOperationSpec$6)}_listNext(e,r,i){return this.client.sendOperationRequest({peeringLocation:e,nextLink:r,options:i},listNextOperationSpec$6)}}const serializer$g=coreClient__namespace.createSerializer(Mappers,!1),listOperationSpec$6={path:"/subscriptions/{subscriptionId}/providers/Microsoft.Peering/cdnPeeringPrefixes",httpMethod:"GET",responses:{200:{bodyMapper:CdnPeeringPrefixListResult},default:{bodyMapper:ErrorResponse}},queryParameters:[peeringLocation,apiVersion],urlParameters:[$host,subscriptionId],headerParameters:[accept],serializer:serializer$g},listNextOperationSpec$6={path:"{nextLink}",httpMethod:"GET",responses:{200:{bodyMapper:CdnPeeringPrefixListResult},default:{bodyMapper:ErrorResponse}},queryParameters:[peeringLocation,apiVersion],urlParameters:[$host,subscriptionId,nextLink],headerParameters:[accept],serializer:serializer$g};class LegacyPeeringsImpl{constructor(e){this.client=e}list(r,i,t){const e=this.listPagingAll(r,i,t);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listPagingPage(r,i,t,e)}}}listPagingPage(n,a,s,o){return tslib.__asyncGenerator(this,arguments,function*(){let e,r=null==o?void 0:o.continuationToken;var i;for(r||(setContinuationToken(i=(e=yield tslib.__await(this._list(n,a,s))).value||[],r=e.nextLink),yield yield tslib.__await(i));r;){e=yield tslib.__await(this._listNext(n,a,r,s)),r=e.nextLink;var t=e.value||[];setContinuationToken(t,r),yield yield tslib.__await(t)}})}listPagingAll(a,s,o){return tslib.__asyncGenerator(this,arguments,function*(){var r,e;try{for(var i,t=tslib.__asyncValues(this.listPagingPage(a,s,o));!(i=yield tslib.__await(t.next())).done;){var n=i.value;yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(n)))}}catch(e){r={error:e}}finally{try{i&&!i.done&&(e=t.return)&&(yield tslib.__await(e.call(t)))}finally{if(r)throw r.error}}})}_list(e,r,i){return this.client.sendOperationRequest({peeringLocation:e,kind:r,options:i},listOperationSpec$5)}_listNext(e,r,i,t){return this.client.sendOperationRequest({peeringLocation:e,kind:r,nextLink:i,options:t},listNextOperationSpec$5)}}const serializer$f=coreClient__namespace.createSerializer(Mappers,!1),listOperationSpec$5={path:"/subscriptions/{subscriptionId}/providers/Microsoft.Peering/legacyPeerings",httpMethod:"GET",responses:{200:{bodyMapper:PeeringListResult},default:{bodyMapper:ErrorResponse}},queryParameters:[peeringLocation,apiVersion,kind,asn],urlParameters:[$host,subscriptionId],headerParameters:[accept],serializer:serializer$f},listNextOperationSpec$5={path:"{nextLink}",httpMethod:"GET",responses:{200:{bodyMapper:PeeringListResult},default:{bodyMapper:ErrorResponse}},queryParameters:[peeringLocation,apiVersion,kind,asn],urlParameters:[$host,subscriptionId,nextLink],headerParameters:[accept],serializer:serializer$f};class LookingGlassImpl{constructor(e){this.client=e}invoke(e,r,i,t,n){return this.client.sendOperationRequest({command:e,sourceType:r,sourceLocation:i,destinationIP:t,options:n},invokeOperationSpec)}}const serializer$e=coreClient__namespace.createSerializer(Mappers,!1),invokeOperationSpec={path:"/subscriptions/{subscriptionId}/providers/Microsoft.Peering/lookingGlass",httpMethod:"POST",responses:{200:{bodyMapper:LookingGlassOutput},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion,command,sourceType,sourceLocation,destinationIP],urlParameters:[$host,subscriptionId],headerParameters:[accept],serializer:serializer$e};class OperationsImpl{constructor(e){this.client=e}list(r){const e=this.listPagingAll(r);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listPagingPage(r,e)}}}listPagingPage(n,a){return tslib.__asyncGenerator(this,arguments,function*(){let e,r=null==a?void 0:a.continuationToken;var i;for(r||(setContinuationToken(i=(e=yield tslib.__await(this._list(n))).value||[],r=e.nextLink),yield yield tslib.__await(i));r;){e=yield tslib.__await(this._listNext(r,n)),r=e.nextLink;var t=e.value||[];setContinuationToken(t,r),yield yield tslib.__await(t)}})}listPagingAll(a){return tslib.__asyncGenerator(this,arguments,function*(){var r,e;try{for(var i,t=tslib.__asyncValues(this.listPagingPage(a));!(i=yield tslib.__await(t.next())).done;){var n=i.value;yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(n)))}}catch(e){r={error:e}}finally{try{i&&!i.done&&(e=t.return)&&(yield tslib.__await(e.call(t)))}finally{if(r)throw r.error}}})}_list(e){return this.client.sendOperationRequest({options:e},listOperationSpec$4)}_listNext(e,r){return this.client.sendOperationRequest({nextLink:e,options:r},listNextOperationSpec$4)}}const serializer$d=coreClient__namespace.createSerializer(Mappers,!1),listOperationSpec$4={path:"/providers/Microsoft.Peering/operations",httpMethod:"GET",responses:{200:{bodyMapper:OperationListResult},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host],headerParameters:[accept],serializer:serializer$d},listNextOperationSpec$4={path:"{nextLink}",httpMethod:"GET",responses:{200:{bodyMapper:OperationListResult},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,nextLink],headerParameters:[accept],serializer:serializer$d};class PeerAsnsImpl{constructor(e){this.client=e}listBySubscription(r){const e=this.listBySubscriptionPagingAll(r);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listBySubscriptionPagingPage(r,e)}}}listBySubscriptionPagingPage(n,a){return tslib.__asyncGenerator(this,arguments,function*(){let e,r=null==a?void 0:a.continuationToken;var i;for(r||(setContinuationToken(i=(e=yield tslib.__await(this._listBySubscription(n))).value||[],r=e.nextLink),yield yield tslib.__await(i));r;){e=yield tslib.__await(this._listBySubscriptionNext(r,n)),r=e.nextLink;var t=e.value||[];setContinuationToken(t,r),yield yield tslib.__await(t)}})}listBySubscriptionPagingAll(a){return tslib.__asyncGenerator(this,arguments,function*(){var r,e;try{for(var i,t=tslib.__asyncValues(this.listBySubscriptionPagingPage(a));!(i=yield tslib.__await(t.next())).done;){var n=i.value;yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(n)))}}catch(e){r={error:e}}finally{try{i&&!i.done&&(e=t.return)&&(yield tslib.__await(e.call(t)))}finally{if(r)throw r.error}}})}get(e,r){return this.client.sendOperationRequest({peerAsnName:e,options:r},getOperationSpec$6)}createOrUpdate(e,r,i){return this.client.sendOperationRequest({peerAsnName:e,peerAsn:r,options:i},createOrUpdateOperationSpec$6)}delete(e,r){return this.client.sendOperationRequest({peerAsnName:e,options:r},deleteOperationSpec$6)}_listBySubscription(e){return this.client.sendOperationRequest({options:e},listBySubscriptionOperationSpec$2)}_listBySubscriptionNext(e,r){return this.client.sendOperationRequest({nextLink:e,options:r},listBySubscriptionNextOperationSpec$2)}}const serializer$c=coreClient__namespace.createSerializer(Mappers,!1),getOperationSpec$6={path:"/subscriptions/{subscriptionId}/providers/Microsoft.Peering/peerAsns/{peerAsnName}",httpMethod:"GET",responses:{200:{bodyMapper:PeerAsn},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,peerAsnName],headerParameters:[accept],serializer:serializer$c},createOrUpdateOperationSpec$6={path:"/subscriptions/{subscriptionId}/providers/Microsoft.Peering/peerAsns/{peerAsnName}",httpMethod:"PUT",responses:{200:{bodyMapper:PeerAsn},201:{bodyMapper:PeerAsn},default:{bodyMapper:ErrorResponse}},requestBody:peerAsn,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,peerAsnName],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer$c},deleteOperationSpec$6={path:"/subscriptions/{subscriptionId}/providers/Microsoft.Peering/peerAsns/{peerAsnName}",httpMethod:"DELETE",responses:{200:{},204:{},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,peerAsnName],headerParameters:[accept],serializer:serializer$c},listBySubscriptionOperationSpec$2={path:"/subscriptions/{subscriptionId}/providers/Microsoft.Peering/peerAsns",httpMethod:"GET",responses:{200:{bodyMapper:PeerAsnListResult},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId],headerParameters:[accept],serializer:serializer$c},listBySubscriptionNextOperationSpec$2={path:"{nextLink}",httpMethod:"GET",responses:{200:{bodyMapper:PeerAsnListResult},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,nextLink],headerParameters:[accept],serializer:serializer$c};class PeeringLocationsImpl{constructor(e){this.client=e}list(r,i){const e=this.listPagingAll(r,i);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listPagingPage(r,i,e)}}}listPagingPage(n,a,s){return tslib.__asyncGenerator(this,arguments,function*(){let e,r=null==s?void 0:s.continuationToken;var i;for(r||(setContinuationToken(i=(e=yield tslib.__await(this._list(n,a))).value||[],r=e.nextLink),yield yield tslib.__await(i));r;){e=yield tslib.__await(this._listNext(n,r,a)),r=e.nextLink;var t=e.value||[];setContinuationToken(t,r),yield yield tslib.__await(t)}})}listPagingAll(a,s){return tslib.__asyncGenerator(this,arguments,function*(){var r,e;try{for(var i,t=tslib.__asyncValues(this.listPagingPage(a,s));!(i=yield tslib.__await(t.next())).done;){var n=i.value;yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(n)))}}catch(e){r={error:e}}finally{try{i&&!i.done&&(e=t.return)&&(yield tslib.__await(e.call(t)))}finally{if(r)throw r.error}}})}_list(e,r){return this.client.sendOperationRequest({kind:e,options:r},listOperationSpec$3)}_listNext(e,r,i){return this.client.sendOperationRequest({kind:e,nextLink:r,options:i},listNextOperationSpec$3)}}const serializer$b=coreClient__namespace.createSerializer(Mappers,!1),listOperationSpec$3={path:"/subscriptions/{subscriptionId}/providers/Microsoft.Peering/peeringLocations",httpMethod:"GET",responses:{200:{bodyMapper:PeeringLocationListResult},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion,kind1,directPeeringType],urlParameters:[$host,subscriptionId],headerParameters:[accept],serializer:serializer$b},listNextOperationSpec$3={path:"{nextLink}",httpMethod:"GET",responses:{200:{bodyMapper:PeeringLocationListResult},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion,kind1,directPeeringType],urlParameters:[$host,subscriptionId,nextLink],headerParameters:[accept],serializer:serializer$b};class RegisteredAsnsImpl{constructor(e){this.client=e}listByPeering(r,i,t){const e=this.listByPeeringPagingAll(r,i,t);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listByPeeringPagingPage(r,i,t,e)}}}listByPeeringPagingPage(n,a,s,o){return tslib.__asyncGenerator(this,arguments,function*(){let e,r=null==o?void 0:o.continuationToken;var i;for(r||(setContinuationToken(i=(e=yield tslib.__await(this._listByPeering(n,a,s))).value||[],r=e.nextLink),yield yield tslib.__await(i));r;){e=yield tslib.__await(this._listByPeeringNext(n,a,r,s)),r=e.nextLink;var t=e.value||[];setContinuationToken(t,r),yield yield tslib.__await(t)}})}listByPeeringPagingAll(a,s,o){return tslib.__asyncGenerator(this,arguments,function*(){var r,e;try{for(var i,t=tslib.__asyncValues(this.listByPeeringPagingPage(a,s,o));!(i=yield tslib.__await(t.next())).done;){var n=i.value;yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(n)))}}catch(e){r={error:e}}finally{try{i&&!i.done&&(e=t.return)&&(yield tslib.__await(e.call(t)))}finally{if(r)throw r.error}}})}get(e,r,i,t){return this.client.sendOperationRequest({resourceGroupName:e,peeringName:r,registeredAsnName:i,options:t},getOperationSpec$5)}createOrUpdate(e,r,i,t,n){return this.client.sendOperationRequest({resourceGroupName:e,peeringName:r,registeredAsnName:i,registeredAsn:t,options:n},createOrUpdateOperationSpec$5)}delete(e,r,i,t){return this.client.sendOperationRequest({resourceGroupName:e,peeringName:r,registeredAsnName:i,options:t},deleteOperationSpec$5)}_listByPeering(e,r,i){return this.client.sendOperationRequest({resourceGroupName:e,peeringName:r,options:i},listByPeeringOperationSpec$2)}_listByPeeringNext(e,r,i,t){return this.client.sendOperationRequest({resourceGroupName:e,peeringName:r,nextLink:i,options:t},listByPeeringNextOperationSpec$2)}}const serializer$a=coreClient__namespace.createSerializer(Mappers,!1),getOperationSpec$5={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Peering/peerings/{peeringName}/registeredAsns/{registeredAsnName}",httpMethod:"GET",responses:{200:{bodyMapper:PeeringRegisteredAsn},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,peeringName,registeredAsnName],headerParameters:[accept],serializer:serializer$a},createOrUpdateOperationSpec$5={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Peering/peerings/{peeringName}/registeredAsns/{registeredAsnName}",httpMethod:"PUT",responses:{200:{bodyMapper:PeeringRegisteredAsn},201:{bodyMapper:PeeringRegisteredAsn},default:{bodyMapper:ErrorResponse}},requestBody:registeredAsn,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,peeringName,registeredAsnName],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer$a},deleteOperationSpec$5={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Peering/peerings/{peeringName}/registeredAsns/{registeredAsnName}",httpMethod:"DELETE",responses:{200:{},204:{},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,peeringName,registeredAsnName],headerParameters:[accept],serializer:serializer$a},listByPeeringOperationSpec$2={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Peering/peerings/{peeringName}/registeredAsns",httpMethod:"GET",responses:{200:{bodyMapper:PeeringRegisteredAsnListResult},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,peeringName],headerParameters:[accept],serializer:serializer$a},listByPeeringNextOperationSpec$2={path:"{nextLink}",httpMethod:"GET",responses:{200:{bodyMapper:PeeringRegisteredAsnListResult},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,nextLink,resourceGroupName,peeringName],headerParameters:[accept],serializer:serializer$a};class RegisteredPrefixesImpl{constructor(e){this.client=e}listByPeering(r,i,t){const e=this.listByPeeringPagingAll(r,i,t);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listByPeeringPagingPage(r,i,t,e)}}}listByPeeringPagingPage(n,a,s,o){return tslib.__asyncGenerator(this,arguments,function*(){let e,r=null==o?void 0:o.continuationToken;var i;for(r||(setContinuationToken(i=(e=yield tslib.__await(this._listByPeering(n,a,s))).value||[],r=e.nextLink),yield yield tslib.__await(i));r;){e=yield tslib.__await(this._listByPeeringNext(n,a,r,s)),r=e.nextLink;var t=e.value||[];setContinuationToken(t,r),yield yield tslib.__await(t)}})}listByPeeringPagingAll(a,s,o){return tslib.__asyncGenerator(this,arguments,function*(){var r,e;try{for(var i,t=tslib.__asyncValues(this.listByPeeringPagingPage(a,s,o));!(i=yield tslib.__await(t.next())).done;){var n=i.value;yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(n)))}}catch(e){r={error:e}}finally{try{i&&!i.done&&(e=t.return)&&(yield tslib.__await(e.call(t)))}finally{if(r)throw r.error}}})}get(e,r,i,t){return this.client.sendOperationRequest({resourceGroupName:e,peeringName:r,registeredPrefixName:i,options:t},getOperationSpec$4)}createOrUpdate(e,r,i,t,n){return this.client.sendOperationRequest({resourceGroupName:e,peeringName:r,registeredPrefixName:i,registeredPrefix:t,options:n},createOrUpdateOperationSpec$4)}delete(e,r,i,t){return this.client.sendOperationRequest({resourceGroupName:e,peeringName:r,registeredPrefixName:i,options:t},deleteOperationSpec$4)}_listByPeering(e,r,i){return this.client.sendOperationRequest({resourceGroupName:e,peeringName:r,options:i},listByPeeringOperationSpec$1)}_listByPeeringNext(e,r,i,t){return this.client.sendOperationRequest({resourceGroupName:e,peeringName:r,nextLink:i,options:t},listByPeeringNextOperationSpec$1)}}const serializer$9=coreClient__namespace.createSerializer(Mappers,!1),getOperationSpec$4={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Peering/peerings/{peeringName}/registeredPrefixes/{registeredPrefixName}",httpMethod:"GET",responses:{200:{bodyMapper:PeeringRegisteredPrefix},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,peeringName,registeredPrefixName],headerParameters:[accept],serializer:serializer$9},createOrUpdateOperationSpec$4={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Peering/peerings/{peeringName}/registeredPrefixes/{registeredPrefixName}",httpMethod:"PUT",responses:{200:{bodyMapper:PeeringRegisteredPrefix},201:{bodyMapper:PeeringRegisteredPrefix},default:{bodyMapper:ErrorResponse}},requestBody:registeredPrefix,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,peeringName,registeredPrefixName],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer$9},deleteOperationSpec$4={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Peering/peerings/{peeringName}/registeredPrefixes/{registeredPrefixName}",httpMethod:"DELETE",responses:{200:{},204:{},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,peeringName,registeredPrefixName],headerParameters:[accept],serializer:serializer$9},listByPeeringOperationSpec$1={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Peering/peerings/{peeringName}/registeredPrefixes",httpMethod:"GET",responses:{200:{bodyMapper:PeeringRegisteredPrefixListResult},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,peeringName],headerParameters:[accept],serializer:serializer$9},listByPeeringNextOperationSpec$1={path:"{nextLink}",httpMethod:"GET",responses:{200:{bodyMapper:PeeringRegisteredPrefixListResult},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,nextLink,resourceGroupName,peeringName],headerParameters:[accept],serializer:serializer$9};class PeeringsImpl{constructor(e){this.client=e}listByResourceGroup(r,i){const e=this.listByResourceGroupPagingAll(r,i);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listByResourceGroupPagingPage(r,i,e)}}}listByResourceGroupPagingPage(n,a,s){return tslib.__asyncGenerator(this,arguments,function*(){let e,r=null==s?void 0:s.continuationToken;var i;for(r||(setContinuationToken(i=(e=yield tslib.__await(this._listByResourceGroup(n,a))).value||[],r=e.nextLink),yield yield tslib.__await(i));r;){e=yield tslib.__await(this._listByResourceGroupNext(n,r,a)),r=e.nextLink;var t=e.value||[];setContinuationToken(t,r),yield yield tslib.__await(t)}})}listByResourceGroupPagingAll(a,s){return tslib.__asyncGenerator(this,arguments,function*(){var r,e;try{for(var i,t=tslib.__asyncValues(this.listByResourceGroupPagingPage(a,s));!(i=yield tslib.__await(t.next())).done;){var n=i.value;yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(n)))}}catch(e){r={error:e}}finally{try{i&&!i.done&&(e=t.return)&&(yield tslib.__await(e.call(t)))}finally{if(r)throw r.error}}})}listBySubscription(r){const e=this.listBySubscriptionPagingAll(r);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listBySubscriptionPagingPage(r,e)}}}listBySubscriptionPagingPage(n,a){return tslib.__asyncGenerator(this,arguments,function*(){let e,r=null==a?void 0:a.continuationToken;var i;for(r||(setContinuationToken(i=(e=yield tslib.__await(this._listBySubscription(n))).value||[],r=e.nextLink),yield yield tslib.__await(i));r;){e=yield tslib.__await(this._listBySubscriptionNext(r,n)),r=e.nextLink;var t=e.value||[];setContinuationToken(t,r),yield yield tslib.__await(t)}})}listBySubscriptionPagingAll(a){return tslib.__asyncGenerator(this,arguments,function*(){var r,e;try{for(var i,t=tslib.__asyncValues(this.listBySubscriptionPagingPage(a));!(i=yield tslib.__await(t.next())).done;){var n=i.value;yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(n)))}}catch(e){r={error:e}}finally{try{i&&!i.done&&(e=t.return)&&(yield tslib.__await(e.call(t)))}finally{if(r)throw r.error}}})}get(e,r,i){return this.client.sendOperationRequest({resourceGroupName:e,peeringName:r,options:i},getOperationSpec$3)}createOrUpdate(e,r,i,t){return this.client.sendOperationRequest({resourceGroupName:e,peeringName:r,peering:i,options:t},createOrUpdateOperationSpec$3)}delete(e,r,i){return this.client.sendOperationRequest({resourceGroupName:e,peeringName:r,options:i},deleteOperationSpec$3)}update(e,r,i,t){return this.client.sendOperationRequest({resourceGroupName:e,peeringName:r,tags:i,options:t},updateOperationSpec$1)}_listByResourceGroup(e,r){return this.client.sendOperationRequest({resourceGroupName:e,options:r},listByResourceGroupOperationSpec$1)}_listBySubscription(e){return this.client.sendOperationRequest({options:e},listBySubscriptionOperationSpec$1)}_listByResourceGroupNext(e,r,i){return this.client.sendOperationRequest({resourceGroupName:e,nextLink:r,options:i},listByResourceGroupNextOperationSpec$1)}_listBySubscriptionNext(e,r){return this.client.sendOperationRequest({nextLink:e,options:r},listBySubscriptionNextOperationSpec$1)}}const serializer$8=coreClient__namespace.createSerializer(Mappers,!1),getOperationSpec$3={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Peering/peerings/{peeringName}",httpMethod:"GET",responses:{200:{bodyMapper:Peering},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,peeringName],headerParameters:[accept],serializer:serializer$8},createOrUpdateOperationSpec$3={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Peering/peerings/{peeringName}",httpMethod:"PUT",responses:{200:{bodyMapper:Peering},201:{bodyMapper:Peering},default:{bodyMapper:ErrorResponse}},requestBody:peering,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,peeringName],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer$8},deleteOperationSpec$3={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Peering/peerings/{peeringName}",httpMethod:"DELETE",responses:{200:{},204:{},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,peeringName],headerParameters:[accept],serializer:serializer$8},updateOperationSpec$1={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Peering/peerings/{peeringName}",httpMethod:"PATCH",responses:{200:{bodyMapper:Peering},default:{bodyMapper:ErrorResponse}},requestBody:tags,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,peeringName],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer$8},listByResourceGroupOperationSpec$1={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Peering/peerings",httpMethod:"GET",responses:{200:{bodyMapper:PeeringListResult},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName],headerParameters:[accept],serializer:serializer$8},listBySubscriptionOperationSpec$1={path:"/subscriptions/{subscriptionId}/providers/Microsoft.Peering/peerings",httpMethod:"GET",responses:{200:{bodyMapper:PeeringListResult},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId],headerParameters:[accept],serializer:serializer$8},listByResourceGroupNextOperationSpec$1={path:"{nextLink}",httpMethod:"GET",responses:{200:{bodyMapper:PeeringListResult},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,nextLink,resourceGroupName],headerParameters:[accept],serializer:serializer$8},listBySubscriptionNextOperationSpec$1={path:"{nextLink}",httpMethod:"GET",responses:{200:{bodyMapper:PeeringListResult},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,nextLink],headerParameters:[accept],serializer:serializer$8};class ReceivedRoutesImpl{constructor(e){this.client=e}listByPeering(r,i,t){const e=this.listByPeeringPagingAll(r,i,t);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listByPeeringPagingPage(r,i,t,e)}}}listByPeeringPagingPage(n,a,s,o){return tslib.__asyncGenerator(this,arguments,function*(){let e,r=null==o?void 0:o.continuationToken;var i;for(r||(setContinuationToken(i=(e=yield tslib.__await(this._listByPeering(n,a,s))).value||[],r=e.nextLink),yield yield tslib.__await(i));r;){e=yield tslib.__await(this._listByPeeringNext(n,a,r,s)),r=e.nextLink;var t=e.value||[];setContinuationToken(t,r),yield yield tslib.__await(t)}})}listByPeeringPagingAll(a,s,o){return tslib.__asyncGenerator(this,arguments,function*(){var r,e;try{for(var i,t=tslib.__asyncValues(this.listByPeeringPagingPage(a,s,o));!(i=yield tslib.__await(t.next())).done;){var n=i.value;yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(n)))}}catch(e){r={error:e}}finally{try{i&&!i.done&&(e=t.return)&&(yield tslib.__await(e.call(t)))}finally{if(r)throw r.error}}})}_listByPeering(e,r,i){return this.client.sendOperationRequest({resourceGroupName:e,peeringName:r,options:i},listByPeeringOperationSpec)}_listByPeeringNext(e,r,i,t){return this.client.sendOperationRequest({resourceGroupName:e,peeringName:r,nextLink:i,options:t},listByPeeringNextOperationSpec)}}const serializer$7=coreClient__namespace.createSerializer(Mappers,!1),listByPeeringOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Peering/peerings/{peeringName}/receivedRoutes",httpMethod:"GET",responses:{200:{bodyMapper:PeeringReceivedRouteListResult},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion,prefix,asPath,originAsValidationState,rpkiValidationState,skipToken],urlParameters:[$host,subscriptionId,resourceGroupName,peeringName],headerParameters:[accept],serializer:serializer$7},listByPeeringNextOperationSpec={path:"{nextLink}",httpMethod:"GET",responses:{200:{bodyMapper:PeeringReceivedRouteListResult},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion,prefix,asPath,originAsValidationState,rpkiValidationState,skipToken],urlParameters:[$host,subscriptionId,nextLink,resourceGroupName,peeringName],headerParameters:[accept],serializer:serializer$7};class ConnectionMonitorTestsImpl{constructor(e){this.client=e}listByPeeringService(r,i,t){const e=this.listByPeeringServicePagingAll(r,i,t);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listByPeeringServicePagingPage(r,i,t,e)}}}listByPeeringServicePagingPage(n,a,s,o){return tslib.__asyncGenerator(this,arguments,function*(){let e,r=null==o?void 0:o.continuationToken;var i;for(r||(setContinuationToken(i=(e=yield tslib.__await(this._listByPeeringService(n,a,s))).value||[],r=e.nextLink),yield yield tslib.__await(i));r;){e=yield tslib.__await(this._listByPeeringServiceNext(n,a,r,s)),r=e.nextLink;var t=e.value||[];setContinuationToken(t,r),yield yield tslib.__await(t)}})}listByPeeringServicePagingAll(a,s,o){return tslib.__asyncGenerator(this,arguments,function*(){var r,e;try{for(var i,t=tslib.__asyncValues(this.listByPeeringServicePagingPage(a,s,o));!(i=yield tslib.__await(t.next())).done;){var n=i.value;yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(n)))}}catch(e){r={error:e}}finally{try{i&&!i.done&&(e=t.return)&&(yield tslib.__await(e.call(t)))}finally{if(r)throw r.error}}})}get(e,r,i,t){return this.client.sendOperationRequest({resourceGroupName:e,peeringServiceName:r,connectionMonitorTestName:i,options:t},getOperationSpec$2)}createOrUpdate(e,r,i,t,n){return this.client.sendOperationRequest({resourceGroupName:e,peeringServiceName:r,connectionMonitorTestName:i,connectionMonitorTest:t,options:n},createOrUpdateOperationSpec$2)}delete(e,r,i,t){return this.client.sendOperationRequest({resourceGroupName:e,peeringServiceName:r,connectionMonitorTestName:i,options:t},deleteOperationSpec$2)}_listByPeeringService(e,r,i){return this.client.sendOperationRequest({resourceGroupName:e,peeringServiceName:r,options:i},listByPeeringServiceOperationSpec$1)}_listByPeeringServiceNext(e,r,i,t){return this.client.sendOperationRequest({resourceGroupName:e,peeringServiceName:r,nextLink:i,options:t},listByPeeringServiceNextOperationSpec$1)}}const serializer$6=coreClient__namespace.createSerializer(Mappers,!1),getOperationSpec$2={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Peering/peeringServices/{peeringServiceName}/connectionMonitorTests/{connectionMonitorTestName}",httpMethod:"GET",responses:{200:{bodyMapper:ConnectionMonitorTest},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,peeringServiceName,connectionMonitorTestName],headerParameters:[accept],serializer:serializer$6},createOrUpdateOperationSpec$2={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Peering/peeringServices/{peeringServiceName}/connectionMonitorTests/{connectionMonitorTestName}",httpMethod:"PUT",responses:{200:{bodyMapper:ConnectionMonitorTest},201:{bodyMapper:ConnectionMonitorTest},default:{bodyMapper:ErrorResponse}},requestBody:connectionMonitorTest,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,peeringServiceName,connectionMonitorTestName],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer$6},deleteOperationSpec$2={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Peering/peeringServices/{peeringServiceName}/connectionMonitorTests/{connectionMonitorTestName}",httpMethod:"DELETE",responses:{200:{},204:{},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,peeringServiceName,connectionMonitorTestName],headerParameters:[accept],serializer:serializer$6},listByPeeringServiceOperationSpec$1={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Peering/peeringServices/{peeringServiceName}/connectionMonitorTests",httpMethod:"GET",responses:{200:{bodyMapper:ConnectionMonitorTestListResult},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,peeringServiceName],headerParameters:[accept],serializer:serializer$6},listByPeeringServiceNextOperationSpec$1={path:"{nextLink}",httpMethod:"GET",responses:{200:{bodyMapper:ConnectionMonitorTestListResult},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,nextLink,resourceGroupName,peeringServiceName],headerParameters:[accept],serializer:serializer$6};class PeeringServiceCountriesImpl{constructor(e){this.client=e}list(r){const e=this.listPagingAll(r);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listPagingPage(r,e)}}}listPagingPage(n,a){return tslib.__asyncGenerator(this,arguments,function*(){let e,r=null==a?void 0:a.continuationToken;var i;for(r||(setContinuationToken(i=(e=yield tslib.__await(this._list(n))).value||[],r=e.nextLink),yield yield tslib.__await(i));r;){e=yield tslib.__await(this._listNext(r,n)),r=e.nextLink;var t=e.value||[];setContinuationToken(t,r),yield yield tslib.__await(t)}})}listPagingAll(a){return tslib.__asyncGenerator(this,arguments,function*(){var r,e;try{for(var i,t=tslib.__asyncValues(this.listPagingPage(a));!(i=yield tslib.__await(t.next())).done;){var n=i.value;yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(n)))}}catch(e){r={error:e}}finally{try{i&&!i.done&&(e=t.return)&&(yield tslib.__await(e.call(t)))}finally{if(r)throw r.error}}})}_list(e){return this.client.sendOperationRequest({options:e},listOperationSpec$2)}_listNext(e,r){return this.client.sendOperationRequest({nextLink:e,options:r},listNextOperationSpec$2)}}const serializer$5=coreClient__namespace.createSerializer(Mappers,!1),listOperationSpec$2={path:"/subscriptions/{subscriptionId}/providers/Microsoft.Peering/peeringServiceCountries",httpMethod:"GET",responses:{200:{bodyMapper:PeeringServiceCountryListResult},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId],headerParameters:[accept],serializer:serializer$5},listNextOperationSpec$2={path:"{nextLink}",httpMethod:"GET",responses:{200:{bodyMapper:PeeringServiceCountryListResult},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,nextLink],headerParameters:[accept],serializer:serializer$5};class PeeringServiceLocationsImpl{constructor(e){this.client=e}list(r){const e=this.listPagingAll(r);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listPagingPage(r,e)}}}listPagingPage(n,a){return tslib.__asyncGenerator(this,arguments,function*(){let e,r=null==a?void 0:a.continuationToken;var i;for(r||(setContinuationToken(i=(e=yield tslib.__await(this._list(n))).value||[],r=e.nextLink),yield yield tslib.__await(i));r;){e=yield tslib.__await(this._listNext(r,n)),r=e.nextLink;var t=e.value||[];setContinuationToken(t,r),yield yield tslib.__await(t)}})}listPagingAll(a){return tslib.__asyncGenerator(this,arguments,function*(){var r,e;try{for(var i,t=tslib.__asyncValues(this.listPagingPage(a));!(i=yield tslib.__await(t.next())).done;){var n=i.value;yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(n)))}}catch(e){r={error:e}}finally{try{i&&!i.done&&(e=t.return)&&(yield tslib.__await(e.call(t)))}finally{if(r)throw r.error}}})}_list(e){return this.client.sendOperationRequest({options:e},listOperationSpec$1)}_listNext(e,r){return this.client.sendOperationRequest({nextLink:e,options:r},listNextOperationSpec$1)}}const serializer$4=coreClient__namespace.createSerializer(Mappers,!1),listOperationSpec$1={path:"/subscriptions/{subscriptionId}/providers/Microsoft.Peering/peeringServiceLocations",httpMethod:"GET",responses:{200:{bodyMapper:PeeringServiceLocationListResult},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion,country],urlParameters:[$host,subscriptionId],headerParameters:[accept],serializer:serializer$4},listNextOperationSpec$1={path:"{nextLink}",httpMethod:"GET",responses:{200:{bodyMapper:PeeringServiceLocationListResult},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion,country],urlParameters:[$host,subscriptionId,nextLink],headerParameters:[accept],serializer:serializer$4};class PrefixesImpl{constructor(e){this.client=e}listByPeeringService(r,i,t){const e=this.listByPeeringServicePagingAll(r,i,t);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listByPeeringServicePagingPage(r,i,t,e)}}}listByPeeringServicePagingPage(n,a,s,o){return tslib.__asyncGenerator(this,arguments,function*(){let e,r=null==o?void 0:o.continuationToken;var i;for(r||(setContinuationToken(i=(e=yield tslib.__await(this._listByPeeringService(n,a,s))).value||[],r=e.nextLink),yield yield tslib.__await(i));r;){e=yield tslib.__await(this._listByPeeringServiceNext(n,a,r,s)),r=e.nextLink;var t=e.value||[];setContinuationToken(t,r),yield yield tslib.__await(t)}})}listByPeeringServicePagingAll(a,s,o){return tslib.__asyncGenerator(this,arguments,function*(){var r,e;try{for(var i,t=tslib.__asyncValues(this.listByPeeringServicePagingPage(a,s,o));!(i=yield tslib.__await(t.next())).done;){var n=i.value;yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(n)))}}catch(e){r={error:e}}finally{try{i&&!i.done&&(e=t.return)&&(yield tslib.__await(e.call(t)))}finally{if(r)throw r.error}}})}get(e,r,i,t){return this.client.sendOperationRequest({resourceGroupName:e,peeringServiceName:r,prefixName:i,options:t},getOperationSpec$1)}createOrUpdate(e,r,i,t,n){return this.client.sendOperationRequest({resourceGroupName:e,peeringServiceName:r,prefixName:i,peeringServicePrefix:t,options:n},createOrUpdateOperationSpec$1)}delete(e,r,i,t){return this.client.sendOperationRequest({resourceGroupName:e,peeringServiceName:r,prefixName:i,options:t},deleteOperationSpec$1)}_listByPeeringService(e,r,i){return this.client.sendOperationRequest({resourceGroupName:e,peeringServiceName:r,options:i},listByPeeringServiceOperationSpec)}_listByPeeringServiceNext(e,r,i,t){return this.client.sendOperationRequest({resourceGroupName:e,peeringServiceName:r,nextLink:i,options:t},listByPeeringServiceNextOperationSpec)}}const serializer$3=coreClient__namespace.createSerializer(Mappers,!1),getOperationSpec$1={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Peering/peeringServices/{peeringServiceName}/prefixes/{prefixName}",httpMethod:"GET",responses:{200:{bodyMapper:PeeringServicePrefix},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion,expand],urlParameters:[$host,subscriptionId,resourceGroupName,peeringServiceName,prefixName],headerParameters:[accept],serializer:serializer$3},createOrUpdateOperationSpec$1={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Peering/peeringServices/{peeringServiceName}/prefixes/{prefixName}",httpMethod:"PUT",responses:{200:{bodyMapper:PeeringServicePrefix},201:{bodyMapper:PeeringServicePrefix},default:{bodyMapper:ErrorResponse}},requestBody:peeringServicePrefix,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,peeringServiceName,prefixName],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer$3},deleteOperationSpec$1={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Peering/peeringServices/{peeringServiceName}/prefixes/{prefixName}",httpMethod:"DELETE",responses:{200:{},204:{},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,peeringServiceName,prefixName],headerParameters:[accept],serializer:serializer$3},listByPeeringServiceOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Peering/peeringServices/{peeringServiceName}/prefixes",httpMethod:"GET",responses:{200:{bodyMapper:PeeringServicePrefixListResult},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion,expand],urlParameters:[$host,subscriptionId,resourceGroupName,peeringServiceName],headerParameters:[accept],serializer:serializer$3},listByPeeringServiceNextOperationSpec={path:"{nextLink}",httpMethod:"GET",responses:{200:{bodyMapper:PeeringServicePrefixListResult},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion,expand],urlParameters:[$host,subscriptionId,nextLink,resourceGroupName,peeringServiceName],headerParameters:[accept],serializer:serializer$3};class PeeringServiceProvidersImpl{constructor(e){this.client=e}list(r){const e=this.listPagingAll(r);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listPagingPage(r,e)}}}listPagingPage(n,a){return tslib.__asyncGenerator(this,arguments,function*(){let e,r=null==a?void 0:a.continuationToken;var i;for(r||(setContinuationToken(i=(e=yield tslib.__await(this._list(n))).value||[],r=e.nextLink),yield yield tslib.__await(i));r;){e=yield tslib.__await(this._listNext(r,n)),r=e.nextLink;var t=e.value||[];setContinuationToken(t,r),yield yield tslib.__await(t)}})}listPagingAll(a){return tslib.__asyncGenerator(this,arguments,function*(){var r,e;try{for(var i,t=tslib.__asyncValues(this.listPagingPage(a));!(i=yield tslib.__await(t.next())).done;){var n=i.value;yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(n)))}}catch(e){r={error:e}}finally{try{i&&!i.done&&(e=t.return)&&(yield tslib.__await(e.call(t)))}finally{if(r)throw r.error}}})}_list(e){return this.client.sendOperationRequest({options:e},listOperationSpec)}_listNext(e,r){return this.client.sendOperationRequest({nextLink:e,options:r},listNextOperationSpec)}}const serializer$2=coreClient__namespace.createSerializer(Mappers,!1),listOperationSpec={path:"/subscriptions/{subscriptionId}/providers/Microsoft.Peering/peeringServiceProviders",httpMethod:"GET",responses:{200:{bodyMapper:PeeringServiceProviderListResult},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId],headerParameters:[accept],serializer:serializer$2},listNextOperationSpec={path:"{nextLink}",httpMethod:"GET",responses:{200:{bodyMapper:PeeringServiceProviderListResult},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,nextLink],headerParameters:[accept],serializer:serializer$2};class PeeringServicesImpl{constructor(e){this.client=e}listByResourceGroup(r,i){const e=this.listByResourceGroupPagingAll(r,i);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listByResourceGroupPagingPage(r,i,e)}}}listByResourceGroupPagingPage(n,a,s){return tslib.__asyncGenerator(this,arguments,function*(){let e,r=null==s?void 0:s.continuationToken;var i;for(r||(setContinuationToken(i=(e=yield tslib.__await(this._listByResourceGroup(n,a))).value||[],r=e.nextLink),yield yield tslib.__await(i));r;){e=yield tslib.__await(this._listByResourceGroupNext(n,r,a)),r=e.nextLink;var t=e.value||[];setContinuationToken(t,r),yield yield tslib.__await(t)}})}listByResourceGroupPagingAll(a,s){return tslib.__asyncGenerator(this,arguments,function*(){var r,e;try{for(var i,t=tslib.__asyncValues(this.listByResourceGroupPagingPage(a,s));!(i=yield tslib.__await(t.next())).done;){var n=i.value;yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(n)))}}catch(e){r={error:e}}finally{try{i&&!i.done&&(e=t.return)&&(yield tslib.__await(e.call(t)))}finally{if(r)throw r.error}}})}listBySubscription(r){const e=this.listBySubscriptionPagingAll(r);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listBySubscriptionPagingPage(r,e)}}}listBySubscriptionPagingPage(n,a){return tslib.__asyncGenerator(this,arguments,function*(){let e,r=null==a?void 0:a.continuationToken;var i;for(r||(setContinuationToken(i=(e=yield tslib.__await(this._listBySubscription(n))).value||[],r=e.nextLink),yield yield tslib.__await(i));r;){e=yield tslib.__await(this._listBySubscriptionNext(r,n)),r=e.nextLink;var t=e.value||[];setContinuationToken(t,r),yield yield tslib.__await(t)}})}listBySubscriptionPagingAll(a){return tslib.__asyncGenerator(this,arguments,function*(){var r,e;try{for(var i,t=tslib.__asyncValues(this.listBySubscriptionPagingPage(a));!(i=yield tslib.__await(t.next())).done;){var n=i.value;yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(n)))}}catch(e){r={error:e}}finally{try{i&&!i.done&&(e=t.return)&&(yield tslib.__await(e.call(t)))}finally{if(r)throw r.error}}})}get(e,r,i){return this.client.sendOperationRequest({resourceGroupName:e,peeringServiceName:r,options:i},getOperationSpec)}createOrUpdate(e,r,i,t){return this.client.sendOperationRequest({resourceGroupName:e,peeringServiceName:r,peeringService:i,options:t},createOrUpdateOperationSpec)}delete(e,r,i){return this.client.sendOperationRequest({resourceGroupName:e,peeringServiceName:r,options:i},deleteOperationSpec)}update(e,r,i,t){return this.client.sendOperationRequest({resourceGroupName:e,peeringServiceName:r,tags:i,options:t},updateOperationSpec)}_listByResourceGroup(e,r){return this.client.sendOperationRequest({resourceGroupName:e,options:r},listByResourceGroupOperationSpec)}_listBySubscription(e){return this.client.sendOperationRequest({options:e},listBySubscriptionOperationSpec)}initializeConnectionMonitor(e){return this.client.sendOperationRequest({options:e},initializeConnectionMonitorOperationSpec)}_listByResourceGroupNext(e,r,i){return this.client.sendOperationRequest({resourceGroupName:e,nextLink:r,options:i},listByResourceGroupNextOperationSpec)}_listBySubscriptionNext(e,r){return this.client.sendOperationRequest({nextLink:e,options:r},listBySubscriptionNextOperationSpec)}}const serializer$1=coreClient__namespace.createSerializer(Mappers,!1),getOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Peering/peeringServices/{peeringServiceName}",httpMethod:"GET",responses:{200:{bodyMapper:PeeringService},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,peeringServiceName],headerParameters:[accept],serializer:serializer$1},createOrUpdateOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Peering/peeringServices/{peeringServiceName}",httpMethod:"PUT",responses:{200:{bodyMapper:PeeringService},201:{bodyMapper:PeeringService},default:{bodyMapper:ErrorResponse}},requestBody:peeringService,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,peeringServiceName],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer$1},deleteOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Peering/peeringServices/{peeringServiceName}",httpMethod:"DELETE",responses:{200:{},204:{},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,peeringServiceName],headerParameters:[accept],serializer:serializer$1},updateOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Peering/peeringServices/{peeringServiceName}",httpMethod:"PATCH",responses:{200:{bodyMapper:PeeringService},default:{bodyMapper:ErrorResponse}},requestBody:tags,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,peeringServiceName],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer$1},listByResourceGroupOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Peering/peeringServices",httpMethod:"GET",responses:{200:{bodyMapper:PeeringServiceListResult},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName],headerParameters:[accept],serializer:serializer$1},listBySubscriptionOperationSpec={path:"/subscriptions/{subscriptionId}/providers/Microsoft.Peering/peeringServices",httpMethod:"GET",responses:{200:{bodyMapper:PeeringServiceListResult},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId],headerParameters:[accept],serializer:serializer$1},initializeConnectionMonitorOperationSpec={path:"/subscriptions/{subscriptionId}/providers/Microsoft.Peering/initializeConnectionMonitor",httpMethod:"POST",responses:{200:{},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId],headerParameters:[accept],serializer:serializer$1},listByResourceGroupNextOperationSpec={path:"{nextLink}",httpMethod:"GET",responses:{200:{bodyMapper:PeeringServiceListResult},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,nextLink,resourceGroupName],headerParameters:[accept],serializer:serializer$1},listBySubscriptionNextOperationSpec={path:"{nextLink}",httpMethod:"GET",responses:{200:{bodyMapper:PeeringServiceListResult},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,nextLink],headerParameters:[accept],serializer:serializer$1};class PeeringManagementClient extends coreClient__namespace.ServiceClient{constructor(e,r,i){if(void 0===e)throw new Error("'credentials' cannot be null");if(void 0===r)throw new Error("'subscriptionId' cannot be null");var t,n="azsdk-js-arm-peering/2.1.0",n=(i=i||{}).userAgentOptions&&i.userAgentOptions.userAgentPrefix?i.userAgentOptions.userAgentPrefix+" "+n:n,n=Object.assign(Object.assign(Object.assign({},{requestContentType:"application/json; charset=utf-8",credential:e}),i),{userAgentOptions:{userAgentPrefix:n},endpoint:null!=(n=null!=(n=i.endpoint)?n:i.baseUri)?n:"https://management.azure.com"});super(n);let a=!1;null!=i&&i.pipeline&&0<i.pipeline.getOrderedPolicies().length&&(t=i.pipeline.getOrderedPolicies(),a=t.some(e=>e.name===coreRestPipeline__namespace.bearerTokenAuthenticationPolicyName)),i&&i.pipeline&&0!=i.pipeline.getOrderedPolicies().length&&a||(this.pipeline.removePolicy({name:coreRestPipeline__namespace.bearerTokenAuthenticationPolicyName}),this.pipeline.addPolicy(coreRestPipeline__namespace.bearerTokenAuthenticationPolicy({credential:e,scopes:null!=(t=n.credentialScopes)?t:n.endpoint+"/.default",challengeCallbacks:{authorizeRequestOnChallenge:coreClient__namespace.authorizeRequestOnClaimChallenge}}))),this.subscriptionId=r,this.$host=i.$host||"https://management.azure.com",this.apiVersion=i.apiVersion||"2021-06-01",this.cdnPeeringPrefixes=new CdnPeeringPrefixesImpl(this),this.legacyPeerings=new LegacyPeeringsImpl(this),this.lookingGlass=new LookingGlassImpl(this),this.operations=new OperationsImpl(this),this.peerAsns=new PeerAsnsImpl(this),this.peeringLocations=new PeeringLocationsImpl(this),this.registeredAsns=new RegisteredAsnsImpl(this),this.registeredPrefixes=new RegisteredPrefixesImpl(this),this.peerings=new PeeringsImpl(this),this.receivedRoutes=new ReceivedRoutesImpl(this),this.connectionMonitorTests=new ConnectionMonitorTestsImpl(this),this.peeringServiceCountries=new PeeringServiceCountriesImpl(this),this.peeringServiceLocations=new PeeringServiceLocationsImpl(this),this.prefixes=new PrefixesImpl(this),this.peeringServiceProviders=new PeeringServiceProvidersImpl(this),this.peeringServices=new PeeringServicesImpl(this),this.addCustomApiVersionPolicy(i.apiVersion)}addCustomApiVersionPolicy(n){n&&this.pipeline.addPolicy({name:"CustomApiVersionPolicy",sendRequest(i,t){return tslib.__awaiter(this,void 0,void 0,function*(){var e,r=i.url.split("?");return 1<r.length&&(e=r[1].split("&").map(e=>-1<e.indexOf("api-version")?"api-version="+n:e),i.url=r[0]+"?"+e.join("&")),t(i)})}})}checkServiceProviderAvailability(e,r){return this.sendOperationRequest({checkServiceProviderAvailabilityInput:e,options:r},checkServiceProviderAvailabilityOperationSpec)}}const serializer=coreClient__namespace.createSerializer(Mappers,!1),checkServiceProviderAvailabilityOperationSpec={path:"/subscriptions/{subscriptionId}/providers/Microsoft.Peering/checkServiceProviderAvailability",httpMethod:"POST",responses:{200:{bodyMapper:{type:{name:"String"}}},default:{bodyMapper:ErrorResponse}},requestBody:checkServiceProviderAvailabilityInput,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer};exports.PeeringManagementClient=PeeringManagementClient,exports.getContinuationToken=getContinuationToken;