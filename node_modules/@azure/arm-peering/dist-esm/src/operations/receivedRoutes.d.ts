import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { ReceivedRoutes } from "../operationsInterfaces";
import { PeeringManagementClient } from "../peeringManagementClient";
import { PeeringReceivedRoute, ReceivedRoutesListByPeeringOptionalParams } from "../models";
/** Class containing ReceivedRoutes operations. */
export declare class ReceivedRoutesImpl implements ReceivedRoutes {
    private readonly client;
    /**
     * Initialize a new instance of the class ReceivedRoutes class.
     * @param client Reference to the service client
     */
    constructor(client: PeeringManagementClient);
    /**
     * Lists the prefixes received over the specified peering under the given subscription and resource
     * group.
     * @param resourceGroupName The name of the resource group.
     * @param peeringName The name of the peering.
     * @param options The options parameters.
     */
    listByPeering(resourceGroupName: string, peeringName: string, options?: ReceivedRoutesListByPeeringOptionalParams): PagedAsyncIterableIterator<PeeringReceivedRoute>;
    private listByPeeringPagingPage;
    private listByPeeringPagingAll;
    /**
     * Lists the prefixes received over the specified peering under the given subscription and resource
     * group.
     * @param resourceGroupName The name of the resource group.
     * @param peeringName The name of the peering.
     * @param options The options parameters.
     */
    private _listByPeering;
    /**
     * ListByPeeringNext
     * @param resourceGroupName The name of the resource group.
     * @param peeringName The name of the peering.
     * @param nextLink The nextLink from the previous successful call to the ListByPeering method.
     * @param options The options parameters.
     */
    private _listByPeeringNext;
}
//# sourceMappingURL=receivedRoutes.d.ts.map