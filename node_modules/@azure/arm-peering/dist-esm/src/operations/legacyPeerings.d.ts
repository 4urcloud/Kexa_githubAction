import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { LegacyPeerings } from "../operationsInterfaces";
import { PeeringManagementClient } from "../peeringManagementClient";
import { Peering, LegacyPeeringsKind, LegacyPeeringsListOptionalParams } from "../models";
/** Class containing LegacyPeerings operations. */
export declare class LegacyPeeringsImpl implements LegacyPeerings {
    private readonly client;
    /**
     * Initialize a new instance of the class LegacyPeerings class.
     * @param client Reference to the service client
     */
    constructor(client: PeeringManagementClient);
    /**
     * Lists all of the legacy peerings under the given subscription matching the specified kind and
     * location.
     * @param peeringLocation The location of the peering.
     * @param kind The kind of the peering.
     * @param options The options parameters.
     */
    list(peeringLocation: string, kind: LegacyPeeringsKind, options?: LegacyPeeringsListOptionalParams): PagedAsyncIterableIterator<Peering>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Lists all of the legacy peerings under the given subscription matching the specified kind and
     * location.
     * @param peeringLocation The location of the peering.
     * @param kind The kind of the peering.
     * @param options The options parameters.
     */
    private _list;
    /**
     * ListNext
     * @param peeringLocation The location of the peering.
     * @param kind The kind of the peering.
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=legacyPeerings.d.ts.map