import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PeeringServiceLocations } from "../operationsInterfaces";
import { PeeringManagementClient } from "../peeringManagementClient";
import { PeeringServiceLocation, PeeringServiceLocationsListOptionalParams } from "../models";
/** Class containing PeeringServiceLocations operations. */
export declare class PeeringServiceLocationsImpl implements PeeringServiceLocations {
    private readonly client;
    /**
     * Initialize a new instance of the class PeeringServiceLocations class.
     * @param client Reference to the service client
     */
    constructor(client: PeeringManagementClient);
    /**
     * Lists all of the available locations for peering service.
     * @param options The options parameters.
     */
    list(options?: PeeringServiceLocationsListOptionalParams): PagedAsyncIterableIterator<PeeringServiceLocation>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Lists all of the available locations for peering service.
     * @param options The options parameters.
     */
    private _list;
    /**
     * ListNext
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=peeringServiceLocations.d.ts.map