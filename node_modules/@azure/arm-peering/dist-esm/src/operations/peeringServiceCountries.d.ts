import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PeeringServiceCountries } from "../operationsInterfaces";
import { PeeringManagementClient } from "../peeringManagementClient";
import { PeeringServiceCountry, PeeringServiceCountriesListOptionalParams } from "../models";
/** Class containing PeeringServiceCountries operations. */
export declare class PeeringServiceCountriesImpl implements PeeringServiceCountries {
    private readonly client;
    /**
     * Initialize a new instance of the class PeeringServiceCountries class.
     * @param client Reference to the service client
     */
    constructor(client: PeeringManagementClient);
    /**
     * Lists all of the available countries for peering service.
     * @param options The options parameters.
     */
    list(options?: PeeringServiceCountriesListOptionalParams): PagedAsyncIterableIterator<PeeringServiceCountry>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Lists all of the available countries for peering service.
     * @param options The options parameters.
     */
    private _list;
    /**
     * ListNext
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=peeringServiceCountries.d.ts.map