{"version":3,"file":"arm-datamigration.js","sources":["../node_modules/tslib/tslib.es6.js","../src/models/index.ts","../src/models/mappers.ts","../src/models/resourceSkusMappers.ts","../src/models/parameters.ts","../src/operations/resourceSkus.ts","../src/models/servicesMappers.ts","../src/operations/services.ts","../src/models/tasksMappers.ts","../src/operations/tasks.ts","../src/models/serviceTasksMappers.ts","../src/operations/serviceTasks.ts","../src/models/projectsMappers.ts","../src/operations/projects.ts","../src/models/usagesMappers.ts","../src/operations/usages.ts","../src/models/operationsMappers.ts","../src/operations/operations.ts","../src/models/filesMappers.ts","../src/operations/files.ts","../src/dataMigrationServiceClientContext.ts","../src/dataMigrationServiceClient.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { BaseResource, CloudError, AzureServiceClientOptions } from \"@azure/ms-rest-azure-js\";\nimport * as msRest from \"@azure/ms-rest-js\";\n\nexport { BaseResource, CloudError };\n\n/**\n * ARM resource.\n */\nexport interface Resource extends BaseResource {\n  /**\n   * Resource ID.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Resource name.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * Resource type.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly type?: string;\n}\n\n/**\n * ARM tracked top level resource.\n */\nexport interface TrackedResource extends Resource {\n  /**\n   * Resource tags.\n   */\n  tags?: { [propertyName: string]: string };\n  /**\n   * Resource location.\n   */\n  location: string;\n}\n\n/**\n * Base class for file properties.\n */\nexport interface ProjectFileProperties {\n  /**\n   * Optional File extension. If submitted it should not have a leading period and must match the\n   * extension from filePath.\n   */\n  extension?: string;\n  /**\n   * Relative path of this file resource. This property can be set when creating or updating the\n   * file resource.\n   */\n  filePath?: string;\n  /**\n   * Modification DateTime.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly lastModified?: Date;\n  /**\n   * File content type. This property can be modified to reflect the file content type.\n   */\n  mediaType?: string;\n  /**\n   * File size.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly size?: number;\n}\n\n/**\n * A file resource\n */\nexport interface ProjectFile extends Resource {\n  /**\n   * HTTP strong entity tag value. This is ignored if submitted.\n   */\n  etag?: string;\n  /**\n   * Custom file properties\n   */\n  properties?: ProjectFileProperties;\n}\n\n/**\n * Error information in OData format.\n */\nexport interface ODataError {\n  /**\n   * The machine-readable description of the error, such as 'InvalidRequest' or\n   * 'InternalServerError'\n   */\n  code?: string;\n  /**\n   * The human-readable description of the error\n   */\n  message?: string;\n  /**\n   * Inner errors that caused this error\n   */\n  details?: ODataError[];\n}\n\n/**\n * Exception object for all custom exceptions\n */\nexport interface ReportableException {\n  /**\n   * Error message\n   */\n  message?: string;\n  /**\n   * Actionable steps for this exception\n   */\n  actionableMessage?: string;\n  /**\n   * The path to the file where exception occurred\n   */\n  filePath?: string;\n  /**\n   * The line number where exception occurred\n   */\n  lineNumber?: string;\n  /**\n   * Coded numerical value that is assigned to a specific exception\n   */\n  hResult?: number;\n  /**\n   * Stack trace\n   */\n  stackTrace?: string;\n}\n\n/**\n * Output for command that completes online migration for an Azure SQL Database Managed Instance.\n */\nexport interface MigrateMISyncCompleteCommandOutput {\n  /**\n   * List of errors that happened during the command execution\n   */\n  errors?: ReportableException[];\n}\n\n/**\n * Input for command that completes online migration for an Azure SQL Database Managed Instance.\n */\nexport interface MigrateMISyncCompleteCommandInput {\n  /**\n   * Name of managed instance database\n   */\n  sourceDatabaseName: string;\n}\n\n/**\n * Contains the possible cases for CommandProperties.\n */\nexport type CommandPropertiesUnion = CommandProperties | MigrateMISyncCompleteCommandProperties | MigrateSyncCompleteCommandProperties | MongoDbCancelCommand | MongoDbFinishCommand | MongoDbRestartCommand;\n\n/**\n * Base class for all types of DMS command properties. If command is not supported by current\n * client, this object is returned.\n */\nexport interface CommandProperties {\n  /**\n   * Polymorphic Discriminator\n   */\n  commandType: \"CommandProperties\";\n  /**\n   * Array of errors. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly errors?: ODataError[];\n  /**\n   * The state of the command. This is ignored if submitted. Possible values include: 'Unknown',\n   * 'Accepted', 'Running', 'Succeeded', 'Failed'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: CommandState;\n}\n\n/**\n * Properties for the command that completes online migration for an Azure SQL Database Managed\n * Instance.\n */\nexport interface MigrateMISyncCompleteCommandProperties {\n  /**\n   * Polymorphic Discriminator\n   */\n  commandType: \"Migrate.SqlServer.AzureDbSqlMi.Complete\";\n  /**\n   * Array of errors. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly errors?: ODataError[];\n  /**\n   * The state of the command. This is ignored if submitted. Possible values include: 'Unknown',\n   * 'Accepted', 'Running', 'Succeeded', 'Failed'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: CommandState;\n  /**\n   * Command input\n   */\n  input?: MigrateMISyncCompleteCommandInput;\n  /**\n   * Command output. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly output?: MigrateMISyncCompleteCommandOutput;\n}\n\n/**\n * Output for command that completes sync migration for a database.\n */\nexport interface MigrateSyncCompleteCommandOutput {\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * List of errors that happened during the command execution\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly errors?: ReportableException[];\n}\n\n/**\n * Input for command that completes sync migration for a database.\n */\nexport interface MigrateSyncCompleteCommandInput {\n  /**\n   * Name of database\n   */\n  databaseName: string;\n  /**\n   * Time stamp to complete\n   */\n  commitTimeStamp?: Date;\n}\n\n/**\n * Properties for the command that completes sync migration for a database.\n */\nexport interface MigrateSyncCompleteCommandProperties {\n  /**\n   * Polymorphic Discriminator\n   */\n  commandType: \"Migrate.Sync.Complete.Database\";\n  /**\n   * Array of errors. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly errors?: ODataError[];\n  /**\n   * The state of the command. This is ignored if submitted. Possible values include: 'Unknown',\n   * 'Accepted', 'Running', 'Succeeded', 'Failed'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: CommandState;\n  /**\n   * Command input\n   */\n  input?: MigrateSyncCompleteCommandInput;\n  /**\n   * Command output. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly output?: MigrateSyncCompleteCommandOutput;\n}\n\n/**\n * Contains the possible cases for MigrateSsisTaskOutput.\n */\nexport type MigrateSsisTaskOutputUnion = MigrateSsisTaskOutput | MigrateSsisTaskOutputProjectLevel | MigrateSsisTaskOutputMigrationLevel;\n\n/**\n * Output for task that migrates SSIS packages from SQL Server to Azure SQL Database Managed\n * Instance.\n */\nexport interface MigrateSsisTaskOutput {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"MigrateSsisTaskOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n}\n\n/**\n * An interface representing MigrateSsisTaskOutputProjectLevel.\n */\nexport interface MigrateSsisTaskOutputProjectLevel {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"SsisProjectLevelOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Name of the folder\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly folderName?: string;\n  /**\n   * Name of the project\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly projectName?: string;\n  /**\n   * Current state of migration. Possible values include: 'None', 'InProgress', 'Failed',\n   * 'Warning', 'Completed', 'Skipped', 'Stopped'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: MigrationState;\n  /**\n   * Stage of SSIS migration. Possible values include: 'None', 'Initialize', 'InProgress',\n   * 'Completed'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly stage?: SsisMigrationStage;\n  /**\n   * Migration start time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly startedOn?: Date;\n  /**\n   * Migration end time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly endedOn?: Date;\n  /**\n   * Migration progress message\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly message?: string;\n  /**\n   * Migration exceptions and warnings\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly exceptionsAndWarnings?: ReportableException[];\n}\n\n/**\n * An interface representing MigrateSsisTaskOutputMigrationLevel.\n */\nexport interface MigrateSsisTaskOutputMigrationLevel {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"MigrationLevelOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Migration start time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly startedOn?: Date;\n  /**\n   * Migration end time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly endedOn?: Date;\n  /**\n   * Current status of migration. Possible values include: 'Default', 'Connecting',\n   * 'SourceAndTargetSelected', 'SelectLogins', 'Configured', 'Running', 'Error', 'Stopped',\n   * 'Completed', 'CompletedWithWarnings'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly status?: MigrationStatus;\n  /**\n   * Migration progress message\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly message?: string;\n  /**\n   * Source server version\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly sourceServerVersion?: string;\n  /**\n   * Source server brand version\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly sourceServerBrandVersion?: string;\n  /**\n   * Target server version\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly targetServerVersion?: string;\n  /**\n   * Target server brand version\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly targetServerBrandVersion?: string;\n  /**\n   * Migration exceptions and warnings.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly exceptionsAndWarnings?: ReportableException[];\n  /**\n   * Stage of SSIS migration. Possible values include: 'None', 'Initialize', 'InProgress',\n   * 'Completed'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly stage?: SsisMigrationStage;\n}\n\n/**\n * SSIS migration info with SSIS store type, overwrite policy.\n */\nexport interface SsisMigrationInfo {\n  /**\n   * The SSIS store type of source, only SSIS catalog is supported now in DMS. Possible values\n   * include: 'SsisCatalog'\n   */\n  ssisStoreType?: SsisStoreType;\n  /**\n   * The overwrite option for the SSIS project migration. Possible values include: 'Ignore',\n   * 'Overwrite'\n   */\n  projectOverwriteOption?: SsisMigrationOverwriteOption;\n  /**\n   * The overwrite option for the SSIS environment migration. Possible values include: 'Ignore',\n   * 'Overwrite'\n   */\n  environmentOverwriteOption?: SsisMigrationOverwriteOption;\n}\n\n/**\n * Contains the possible cases for ConnectionInfo.\n */\nexport type ConnectionInfoUnion = ConnectionInfo | MiSqlConnectionInfo | PostgreSqlConnectionInfo | OracleConnectionInfo | MySqlConnectionInfo | MongoDbConnectionInfo | SqlConnectionInfo;\n\n/**\n * Defines the connection properties of a server\n */\nexport interface ConnectionInfo {\n  /**\n   * Polymorphic Discriminator\n   */\n  type: \"ConnectionInfo\";\n  /**\n   * User name\n   */\n  userName?: string;\n  /**\n   * Password credential.\n   */\n  password?: string;\n}\n\n/**\n * Properties required to create a connection to Azure SQL database Managed instance\n */\nexport interface MiSqlConnectionInfo {\n  /**\n   * Polymorphic Discriminator\n   */\n  type: \"MiSqlConnectionInfo\";\n  /**\n   * User name\n   */\n  userName?: string;\n  /**\n   * Password credential.\n   */\n  password?: string;\n  /**\n   * Resource id for Azure SQL database Managed instance\n   */\n  managedInstanceResourceId: string;\n}\n\n/**\n * Information for connecting to PostgreSQL server\n */\nexport interface PostgreSqlConnectionInfo {\n  /**\n   * Polymorphic Discriminator\n   */\n  type: \"PostgreSqlConnectionInfo\";\n  /**\n   * User name\n   */\n  userName?: string;\n  /**\n   * Password credential.\n   */\n  password?: string;\n  /**\n   * Name of the server\n   */\n  serverName: string;\n  /**\n   * Name of the database\n   */\n  databaseName?: string;\n  /**\n   * Port for Server\n   */\n  port: number;\n}\n\n/**\n * Information for connecting to Oracle server\n */\nexport interface OracleConnectionInfo {\n  /**\n   * Polymorphic Discriminator\n   */\n  type: \"OracleConnectionInfo\";\n  /**\n   * User name\n   */\n  userName?: string;\n  /**\n   * Password credential.\n   */\n  password?: string;\n  /**\n   * EZConnect or TNSName connection string.\n   */\n  dataSource: string;\n}\n\n/**\n * Information for connecting to MySQL server\n */\nexport interface MySqlConnectionInfo {\n  /**\n   * Polymorphic Discriminator\n   */\n  type: \"MySqlConnectionInfo\";\n  /**\n   * User name\n   */\n  userName?: string;\n  /**\n   * Password credential.\n   */\n  password?: string;\n  /**\n   * Name of the server\n   */\n  serverName: string;\n  /**\n   * Port for Server\n   */\n  port: number;\n}\n\n/**\n * Describes a connection to a MongoDB data source\n */\nexport interface MongoDbConnectionInfo {\n  /**\n   * Polymorphic Discriminator\n   */\n  type: \"MongoDbConnectionInfo\";\n  /**\n   * User name\n   */\n  userName?: string;\n  /**\n   * Password credential.\n   */\n  password?: string;\n  /**\n   * A MongoDB connection string or blob container URL. The user name and password can be specified\n   * here or in the userName and password properties\n   */\n  connectionString: string;\n}\n\n/**\n * Information for connecting to SQL database server\n */\nexport interface SqlConnectionInfo {\n  /**\n   * Polymorphic Discriminator\n   */\n  type: \"SqlConnectionInfo\";\n  /**\n   * User name\n   */\n  userName?: string;\n  /**\n   * Password credential.\n   */\n  password?: string;\n  /**\n   * Data source in the format Protocol:MachineName\\SQLServerInstanceName,PortNumber\n   */\n  dataSource: string;\n  /**\n   * Authentication type to use for connection. Possible values include: 'None',\n   * 'WindowsAuthentication', 'SqlAuthentication', 'ActiveDirectoryIntegrated',\n   * 'ActiveDirectoryPassword'\n   */\n  authentication?: AuthenticationType;\n  /**\n   * Whether to encrypt the connection. Default value: true.\n   */\n  encryptConnection?: boolean;\n  /**\n   * Additional connection settings\n   */\n  additionalSettings?: string;\n  /**\n   * Whether to trust the server certificate. Default value: false.\n   */\n  trustServerCertificate?: boolean;\n  /**\n   * Server platform type for connection. Possible values include: 'SqlOnPrem'\n   */\n  platform?: SqlSourcePlatform;\n}\n\n/**\n * Base class for migration task input\n */\nexport interface SqlMigrationTaskInput {\n  /**\n   * Information for connecting to source\n   */\n  sourceConnectionInfo: SqlConnectionInfo;\n  /**\n   * Information for connecting to target\n   */\n  targetConnectionInfo: SqlConnectionInfo;\n}\n\n/**\n * Input for task that migrates SSIS packages from SQL Server to Azure SQL Database Managed\n * Instance.\n */\nexport interface MigrateSsisTaskInput extends SqlMigrationTaskInput {\n  /**\n   * SSIS package migration information.\n   */\n  ssisMigrationInfo: SsisMigrationInfo;\n}\n\n/**\n * Contains the possible cases for ProjectTaskProperties.\n */\nexport type ProjectTaskPropertiesUnion = ProjectTaskProperties | MigrateSsisTaskProperties | GetTdeCertificatesSqlTaskProperties | ValidateOracleAzureDbForPostgreSqlSyncTaskProperties | ValidateMongoDbTaskProperties | ValidateMigrationInputSqlServerSqlMISyncTaskProperties | ValidateMigrationInputSqlServerSqlMITaskProperties | ValidateMigrationInputSqlServerSqlDbSyncTaskProperties | MigrateOracleAzureDbForPostgreSqlSyncTaskProperties | MigratePostgreSqlAzureDbForPostgreSqlSyncTaskProperties | MigrateMySqlAzureDbForMySqlSyncTaskProperties | MigrateSqlServerSqlDbSyncTaskProperties | MigrateSqlServerSqlDbTaskProperties | MigrateSqlServerSqlMISyncTaskProperties | MigrateSqlServerSqlMITaskProperties | MigrateMongoDbTaskProperties | ConnectToTargetAzureDbForMySqlTaskProperties | ConnectToTargetSqlMISyncTaskProperties | ConnectToTargetSqlMITaskProperties | GetUserTablesPostgreSqlTaskProperties | GetUserTablesOracleTaskProperties | GetUserTablesSqlSyncTaskProperties | GetUserTablesSqlTaskProperties | ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskProperties | ConnectToTargetAzureDbForPostgreSqlSyncTaskProperties | ConnectToTargetSqlSqlDbSyncTaskProperties | ConnectToTargetSqlDbTaskProperties | ConnectToSourceOracleSyncTaskProperties | ConnectToSourcePostgreSqlSyncTaskProperties | ConnectToSourceSqlServerSyncTaskProperties | ConnectToSourceSqlServerTaskProperties | ConnectToMongoDbTaskProperties | ConnectToSourceMySqlTaskProperties | MigrateSchemaSqlServerSqlDbTaskProperties | CheckOCIDriverTaskProperties | UploadOCIDriverTaskProperties | InstallOCIDriverTaskProperties;\n\n/**\n * Base class for all types of DMS task properties. If task is not supported by current client,\n * this object is returned.\n */\nexport interface ProjectTaskProperties {\n  /**\n   * Polymorphic Discriminator\n   */\n  taskType: \"ProjectTaskProperties\";\n  /**\n   * Array of errors. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly errors?: ODataError[];\n  /**\n   * The state of the task. This is ignored if submitted. Possible values include: 'Unknown',\n   * 'Queued', 'Running', 'Canceled', 'Succeeded', 'Failed', 'FailedInputValidation', 'Faulted'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: TaskState;\n  /**\n   * Array of command properties.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly commands?: CommandPropertiesUnion[];\n  /**\n   * Key value pairs of client data to attach meta data information to task\n   */\n  clientData?: { [propertyName: string]: string };\n}\n\n/**\n * Properties for task that migrates SSIS packages from SQL Server databases to Azure SQL Database\n * Managed Instance.\n */\nexport interface MigrateSsisTaskProperties {\n  /**\n   * Polymorphic Discriminator\n   */\n  taskType: \"Migrate.Ssis\";\n  /**\n   * Array of errors. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly errors?: ODataError[];\n  /**\n   * The state of the task. This is ignored if submitted. Possible values include: 'Unknown',\n   * 'Queued', 'Running', 'Canceled', 'Succeeded', 'Failed', 'FailedInputValidation', 'Faulted'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: TaskState;\n  /**\n   * Array of command properties.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly commands?: CommandPropertiesUnion[];\n  /**\n   * Key value pairs of client data to attach meta data information to task\n   */\n  clientData?: { [propertyName: string]: string };\n  /**\n   * Task input\n   */\n  input?: MigrateSsisTaskInput;\n  /**\n   * Task output. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly output?: MigrateSsisTaskOutputUnion[];\n}\n\n/**\n * Output of the task that gets TDE certificates in Base64 encoded format.\n */\nexport interface GetTdeCertificatesSqlTaskOutput {\n  /**\n   * Mapping from certificate name to base 64 encoded format.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly base64EncodedCertificates?: { [propertyName: string]: string[] };\n  /**\n   * Validation errors\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly validationErrors?: ReportableException[];\n}\n\n/**\n * Info for certificate to be exported for TDE enabled databases.\n */\nexport interface SelectedCertificateInput {\n  /**\n   * Name of certificate to be exported.\n   */\n  certificateName: string;\n  /**\n   * Password to use for encrypting the exported certificate.\n   */\n  password: string;\n}\n\n/**\n * File share information with Path, Username, and Password.\n */\nexport interface FileShare {\n  /**\n   * User name credential to connect to the share location\n   */\n  userName?: string;\n  /**\n   * Password credential used to connect to the share location.\n   */\n  password?: string;\n  /**\n   * The folder path for this share.\n   */\n  path: string;\n}\n\n/**\n * Input for the task that gets TDE certificates in Base64 encoded format.\n */\nexport interface GetTdeCertificatesSqlTaskInput {\n  /**\n   * Connection information for SQL Server\n   */\n  connectionInfo: SqlConnectionInfo;\n  /**\n   * Backup file share information for file share to be used for temporarily storing files.\n   */\n  backupFileShare: FileShare;\n  /**\n   * List containing certificate names and corresponding password to use for encrypting the\n   * exported certificate.\n   */\n  selectedCertificates: SelectedCertificateInput[];\n}\n\n/**\n * Properties for the task that gets TDE certificates in Base64 encoded format.\n */\nexport interface GetTdeCertificatesSqlTaskProperties {\n  /**\n   * Polymorphic Discriminator\n   */\n  taskType: \"GetTDECertificates.Sql\";\n  /**\n   * Array of errors. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly errors?: ODataError[];\n  /**\n   * The state of the task. This is ignored if submitted. Possible values include: 'Unknown',\n   * 'Queued', 'Running', 'Canceled', 'Succeeded', 'Failed', 'FailedInputValidation', 'Faulted'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: TaskState;\n  /**\n   * Array of command properties.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly commands?: CommandPropertiesUnion[];\n  /**\n   * Key value pairs of client data to attach meta data information to task\n   */\n  clientData?: { [propertyName: string]: string };\n  /**\n   * Task input\n   */\n  input?: GetTdeCertificatesSqlTaskInput;\n  /**\n   * Task output. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly output?: GetTdeCertificatesSqlTaskOutput[];\n}\n\n/**\n * Output for task that validates migration input for Oracle to Azure Database for PostgreSQL for\n * online migrations\n */\nexport interface ValidateOracleAzureDbPostgreSqlSyncTaskOutput {\n  /**\n   * Errors associated with a selected database object\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly validationErrors?: ReportableException[];\n}\n\n/**\n * Database specific information for Oracle to Azure Database for PostgreSQL migration task inputs\n */\nexport interface MigrateOracleAzureDbPostgreSqlSyncDatabaseInput {\n  /**\n   * How to handle object name casing: either Preserve or ToLower\n   */\n  caseManipulation?: string;\n  /**\n   * Name of the migration pipeline\n   */\n  name?: string;\n  /**\n   * Name of the source schema\n   */\n  schemaName?: string;\n  /**\n   * Mapping of source to target tables\n   */\n  tableMap?: { [propertyName: string]: string };\n  /**\n   * Name of target database. Note: Target database will be truncated before starting migration.\n   */\n  targetDatabaseName?: string;\n  /**\n   * Migration settings which tune the migration behavior\n   */\n  migrationSetting?: { [propertyName: string]: string };\n  /**\n   * Source settings to tune source endpoint migration behavior\n   */\n  sourceSetting?: { [propertyName: string]: string };\n  /**\n   * Target settings to tune target endpoint migration behavior\n   */\n  targetSetting?: { [propertyName: string]: string };\n}\n\n/**\n * Input for the task that migrates Oracle databases to Azure Database for PostgreSQL for online\n * migrations\n */\nexport interface MigrateOracleAzureDbPostgreSqlSyncTaskInput {\n  /**\n   * Databases to migrate\n   */\n  selectedDatabases: MigrateOracleAzureDbPostgreSqlSyncDatabaseInput[];\n  /**\n   * Connection information for target Azure Database for PostgreSQL\n   */\n  targetConnectionInfo: PostgreSqlConnectionInfo;\n  /**\n   * Connection information for source Oracle\n   */\n  sourceConnectionInfo: OracleConnectionInfo;\n}\n\n/**\n * Properties for the task that validates a migration for Oracle to Azure Database for PostgreSQL\n * for online migrations\n */\nexport interface ValidateOracleAzureDbForPostgreSqlSyncTaskProperties {\n  /**\n   * Polymorphic Discriminator\n   */\n  taskType: \"Validate.Oracle.AzureDbPostgreSql.Sync\";\n  /**\n   * Array of errors. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly errors?: ODataError[];\n  /**\n   * The state of the task. This is ignored if submitted. Possible values include: 'Unknown',\n   * 'Queued', 'Running', 'Canceled', 'Succeeded', 'Failed', 'FailedInputValidation', 'Faulted'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: TaskState;\n  /**\n   * Array of command properties.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly commands?: CommandPropertiesUnion[];\n  /**\n   * Key value pairs of client data to attach meta data information to task\n   */\n  clientData?: { [propertyName: string]: string };\n  input?: MigrateOracleAzureDbPostgreSqlSyncTaskInput;\n  /**\n   * An array containing a single validation error response object\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly output?: ValidateOracleAzureDbPostgreSqlSyncTaskOutput[];\n}\n\n/**\n * Describes an error or warning that occurred during a MongoDB migration\n */\nexport interface MongoDbError {\n  /**\n   * The non-localized, machine-readable code that describes the error or warning\n   */\n  code?: string;\n  /**\n   * The number of times the error or warning has occurred\n   */\n  count?: number;\n  /**\n   * The localized, human-readable message that describes the error or warning\n   */\n  message?: string;\n  /**\n   * The type of error or warning. Possible values include: 'Error', 'ValidationError', 'Warning'\n   */\n  type?: MongoDbErrorType;\n}\n\n/**\n * Base class for MongoDB migration outputs\n */\nexport interface MongoDbProgress {\n  /**\n   * The number of document bytes copied during the Copying stage\n   */\n  bytesCopied: number;\n  /**\n   * The number of documents copied during the Copying stage\n   */\n  documentsCopied: number;\n  /**\n   * The elapsed time in the format [ddd.]hh:mm:ss[.fffffff] (i.e. TimeSpan format)\n   */\n  elapsedTime: string;\n  /**\n   * The errors and warnings that have occurred for the current object. The keys are the error\n   * codes.\n   */\n  errors: { [propertyName: string]: MongoDbError };\n  /**\n   * The number of oplog events awaiting replay\n   */\n  eventsPending: number;\n  /**\n   * The number of oplog events replayed so far\n   */\n  eventsReplayed: number;\n  /**\n   * The timestamp of the last oplog event received, or null if no oplog event has been received\n   * yet\n   */\n  lastEventTime?: Date;\n  /**\n   * The timestamp of the last oplog event replayed, or null if no oplog event has been replayed\n   * yet\n   */\n  lastReplayTime?: Date;\n  /**\n   * The name of the progress object. For a collection, this is the unqualified collection name.\n   * For a database, this is the database name. For the overall migration, this is null.\n   */\n  name?: string;\n  /**\n   * The qualified name of the progress object. For a collection, this is the database-qualified\n   * name. For a database, this is the database name. For the overall migration, this is null.\n   */\n  qualifiedName?: string;\n  /**\n   * The type of progress object. Possible values include: 'Migration', 'Database', 'Collection'\n   */\n  resultType: ResultType;\n  /**\n   * Possible values include: 'NotStarted', 'ValidatingInput', 'Initializing', 'Restarting',\n   * 'Copying', 'InitialReplay', 'Replaying', 'Finalizing', 'Complete', 'Canceled', 'Failed'\n   */\n  state: MongoDbMigrationState;\n  /**\n   * The total number of document bytes on the source at the beginning of the Copying stage, or -1\n   * if the total size was unknown\n   */\n  totalBytes: number;\n  /**\n   * The total number of documents on the source at the beginning of the Copying stage, or -1 if\n   * the total count was unknown\n   */\n  totalDocuments: number;\n}\n\n/**\n * Describes the progress of a collection\n */\nexport interface MongoDbCollectionProgress extends MongoDbProgress {\n}\n\n/**\n * Describes the progress of a database\n */\nexport interface MongoDbDatabaseProgress extends MongoDbProgress {\n  /**\n   * The progress of the collections in the database. The keys are the unqualified names of the\n   * collections\n   */\n  collections?: { [propertyName: string]: MongoDbCollectionProgress };\n}\n\n/**\n * Describes the progress of the overall migration\n */\nexport interface MongoDbMigrationProgress extends MongoDbProgress {\n  /**\n   * The progress of the databases in the migration. The keys are the names of the databases\n   */\n  databases?: { [propertyName: string]: MongoDbDatabaseProgress };\n}\n\n/**\n * Specifies resource limits for the migration\n */\nexport interface MongoDbThrottlingSettings {\n  /**\n   * The percentage of CPU time that the migrator will try to avoid using, from 0 to 100\n   */\n  minFreeCpu?: number;\n  /**\n   * The number of megabytes of RAM that the migrator will try to avoid using\n   */\n  minFreeMemoryMb?: number;\n  /**\n   * The maximum number of work items (e.g. collection copies) that will be processed in parallel\n   */\n  maxParallelism?: number;\n}\n\n/**\n * Describes a field reference within a MongoDB shard key\n */\nexport interface MongoDbShardKeyField {\n  /**\n   * The name of the field\n   */\n  name: string;\n  /**\n   * The field ordering. Possible values include: 'Forward', 'Reverse', 'Hashed'\n   */\n  order: MongoDbShardKeyOrder;\n}\n\n/**\n * Describes a MongoDB shard key\n */\nexport interface MongoDbShardKeySetting {\n  /**\n   * The fields within the shard key\n   */\n  fields: MongoDbShardKeyField[];\n  /**\n   * Whether the shard key is unique\n   */\n  isUnique: boolean;\n}\n\n/**\n * Describes how an individual MongoDB collection should be migrated\n */\nexport interface MongoDbCollectionSettings {\n  /**\n   * Whether the migrator is allowed to drop the target collection in the course of performing a\n   * migration. The default is true.\n   */\n  canDelete?: boolean;\n  shardKey?: MongoDbShardKeySetting;\n  /**\n   * The RUs that should be configured on a CosmosDB target, or null to use the default. This has\n   * no effect on non-CosmosDB targets.\n   */\n  targetRUs?: number;\n}\n\n/**\n * Describes how an individual MongoDB database should be migrated\n */\nexport interface MongoDbDatabaseSettings {\n  /**\n   * The collections on the source database to migrate to the target. The keys are the unqualified\n   * names of the collections.\n   */\n  collections: { [propertyName: string]: MongoDbCollectionSettings };\n  /**\n   * The RUs that should be configured on a CosmosDB target, or null to use the default, or 0 if\n   * throughput should not be provisioned for the database. This has no effect on non-CosmosDB\n   * targets.\n   */\n  targetRUs?: number;\n}\n\n/**\n * Describes how a MongoDB data migration should be performed\n */\nexport interface MongoDbMigrationSettings {\n  /**\n   * The RU limit on a CosmosDB target that collections will be temporarily increased to (if lower)\n   * during the initial copy of a migration, from 10,000 to 1,000,000, or 0 to use the default\n   * boost (which is generally the maximum), or null to not boost the RUs. This setting has no\n   * effect on non-CosmosDB targets.\n   */\n  boostRUs?: number;\n  /**\n   * The databases on the source cluster to migrate to the target. The keys are the names of the\n   * databases.\n   */\n  databases: { [propertyName: string]: MongoDbDatabaseSettings };\n  /**\n   * Describes how changes will be replicated from the source to the target. The default is\n   * OneTime. Possible values include: 'Disabled', 'OneTime', 'Continuous'\n   */\n  replication?: MongoDbReplication;\n  /**\n   * Settings used to connect to the source cluster\n   */\n  source: MongoDbConnectionInfo;\n  /**\n   * Settings used to connect to the target cluster\n   */\n  target: MongoDbConnectionInfo;\n  /**\n   * Settings used to limit the resource usage of the migration\n   */\n  throttling?: MongoDbThrottlingSettings;\n}\n\n/**\n * Properties for the task that validates a migration between MongoDB data sources\n */\nexport interface ValidateMongoDbTaskProperties {\n  /**\n   * Polymorphic Discriminator\n   */\n  taskType: \"Validate.MongoDb\";\n  /**\n   * Array of errors. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly errors?: ODataError[];\n  /**\n   * The state of the task. This is ignored if submitted. Possible values include: 'Unknown',\n   * 'Queued', 'Running', 'Canceled', 'Succeeded', 'Failed', 'FailedInputValidation', 'Faulted'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: TaskState;\n  /**\n   * Array of command properties.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly commands?: CommandPropertiesUnion[];\n  /**\n   * Key value pairs of client data to attach meta data information to task\n   */\n  clientData?: { [propertyName: string]: string };\n  input?: MongoDbMigrationSettings;\n  /**\n   * An array containing a single MongoDbMigrationProgress object\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly output?: MongoDbMigrationProgress[];\n}\n\n/**\n * Output for task that validates migration input for Azure SQL Database Managed Instance online\n * migration\n */\nexport interface ValidateMigrationInputSqlServerSqlMISyncTaskOutput {\n  /**\n   * Database identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Name of database\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * Errors associated with a selected database object\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly validationErrors?: ReportableException[];\n}\n\n/**\n * Azure Active Directory Application\n */\nexport interface AzureActiveDirectoryApp {\n  /**\n   * Application ID of the Azure Active Directory Application\n   */\n  applicationId: string;\n  /**\n   * Key used to authenticate to the Azure Active Directory Application\n   */\n  appKey: string;\n  /**\n   * Tenant id of the customer\n   */\n  tenantId: string;\n}\n\n/**\n * Database specific information for SQL to Azure SQL DB Managed Instance migration task inputs\n */\nexport interface MigrateSqlServerSqlMIDatabaseInput {\n  /**\n   * Name of the database\n   */\n  name: string;\n  /**\n   * Name of the database at destination\n   */\n  restoreDatabaseName: string;\n  /**\n   * Backup file share information for backing up this database.\n   */\n  backupFileShare?: FileShare;\n  /**\n   * The list of backup files to be used in case of existing backups.\n   */\n  backupFilePaths?: string[];\n}\n\n/**\n * Input for task that migrates SQL Server databases to Azure SQL Database Managed Instance online\n * scenario.\n */\nexport interface SqlServerSqlMISyncTaskInput {\n  /**\n   * Databases to migrate\n   */\n  selectedDatabases: MigrateSqlServerSqlMIDatabaseInput[];\n  /**\n   * Backup file share information for all selected databases.\n   */\n  backupFileShare?: FileShare;\n  /**\n   * Fully qualified resourceId of storage\n   */\n  storageResourceId: string;\n  /**\n   * Connection information for source SQL Server\n   */\n  sourceConnectionInfo: SqlConnectionInfo;\n  /**\n   * Connection information for Azure SQL Database Managed Instance\n   */\n  targetConnectionInfo: MiSqlConnectionInfo;\n  /**\n   * Azure Active Directory Application the DMS instance will use to connect to the target instance\n   * of Azure SQL Database Managed Instance and the Azure Storage Account\n   */\n  azureApp: AzureActiveDirectoryApp;\n}\n\n/**\n * Input for task that migrates SQL Server databases to Azure SQL Database Managed Instance online\n * scenario.\n */\nexport interface ValidateMigrationInputSqlServerSqlMISyncTaskInput extends SqlServerSqlMISyncTaskInput {\n}\n\n/**\n * Properties for task that validates migration input for SQL to Azure SQL Database Managed\n * Instance sync scenario\n */\nexport interface ValidateMigrationInputSqlServerSqlMISyncTaskProperties {\n  /**\n   * Polymorphic Discriminator\n   */\n  taskType: \"ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS\";\n  /**\n   * Array of errors. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly errors?: ODataError[];\n  /**\n   * The state of the task. This is ignored if submitted. Possible values include: 'Unknown',\n   * 'Queued', 'Running', 'Canceled', 'Succeeded', 'Failed', 'FailedInputValidation', 'Faulted'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: TaskState;\n  /**\n   * Array of command properties.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly commands?: CommandPropertiesUnion[];\n  /**\n   * Key value pairs of client data to attach meta data information to task\n   */\n  clientData?: { [propertyName: string]: string };\n  /**\n   * Task input\n   */\n  input?: ValidateMigrationInputSqlServerSqlMISyncTaskInput;\n  /**\n   * Task output. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly output?: ValidateMigrationInputSqlServerSqlMISyncTaskOutput[];\n}\n\n/**\n * Information about backup files when existing backup mode is used.\n */\nexport interface DatabaseBackupInfo {\n  /**\n   * Database name.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly databaseName?: string;\n  /**\n   * Backup Type. Possible values include: 'Database', 'TransactionLog', 'File',\n   * 'DifferentialDatabase', 'DifferentialFile', 'Partial', 'DifferentialPartial'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly backupType?: BackupType;\n  /**\n   * The list of backup files for the current database.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly backupFiles?: string[];\n  /**\n   * Position of current database backup in the file.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly position?: number;\n  /**\n   * Database was damaged when backed up, but the backup operation was requested to continue\n   * despite errors.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly isDamaged?: boolean;\n  /**\n   * Whether the backup set is compressed\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly isCompressed?: boolean;\n  /**\n   * Number of files in the backup set.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly familyCount?: number;\n  /**\n   * Date and time when the backup operation finished.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly backupFinishDate?: Date;\n}\n\n/**\n * Output for task that validates migration input for SQL to Azure SQL Managed Instance migrations\n */\nexport interface ValidateMigrationInputSqlServerSqlMITaskOutput {\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Name of database\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * Errors associated with the RestoreDatabaseName\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly restoreDatabaseNameErrors?: ReportableException[];\n  /**\n   * Errors associated with the BackupFolder path\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly backupFolderErrors?: ReportableException[];\n  /**\n   * Errors associated with backup share user name and password credentials\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly backupShareCredentialsErrors?: ReportableException[];\n  /**\n   * Errors associated with the storage account provided.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly backupStorageAccountErrors?: ReportableException[];\n  /**\n   * Errors associated with existing backup files.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly existingBackupErrors?: ReportableException[];\n  /**\n   * Information about backup files when existing backup mode is used.\n   */\n  databaseBackupInfo?: DatabaseBackupInfo;\n}\n\n/**\n * Blob container storage information.\n */\nexport interface BlobShare {\n  /**\n   * SAS URI of Azure Storage Account Container.\n   */\n  sasUri: string;\n}\n\n/**\n * Input for task that validates migration input for SQL to Azure SQL Managed Instance\n */\nexport interface ValidateMigrationInputSqlServerSqlMITaskInput {\n  /**\n   * Information for connecting to source\n   */\n  sourceConnectionInfo: SqlConnectionInfo;\n  /**\n   * Information for connecting to target\n   */\n  targetConnectionInfo: SqlConnectionInfo;\n  /**\n   * Databases to migrate\n   */\n  selectedDatabases: MigrateSqlServerSqlMIDatabaseInput[];\n  /**\n   * Logins to migrate\n   */\n  selectedLogins?: string[];\n  /**\n   * Backup file share information for all selected databases.\n   */\n  backupFileShare?: FileShare;\n  /**\n   * SAS URI of Azure Storage Account Container to be used for storing backup files.\n   */\n  backupBlobShare: BlobShare;\n  /**\n   * Backup Mode to specify whether to use existing backup or create new backup. Possible values\n   * include: 'CreateBackup', 'ExistingBackup'\n   */\n  backupMode?: BackupMode;\n}\n\n/**\n * Properties for task that validates migration input for SQL to Azure SQL Database Managed\n * Instance\n */\nexport interface ValidateMigrationInputSqlServerSqlMITaskProperties {\n  /**\n   * Polymorphic Discriminator\n   */\n  taskType: \"ValidateMigrationInput.SqlServer.AzureSqlDbMI\";\n  /**\n   * Array of errors. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly errors?: ODataError[];\n  /**\n   * The state of the task. This is ignored if submitted. Possible values include: 'Unknown',\n   * 'Queued', 'Running', 'Canceled', 'Succeeded', 'Failed', 'FailedInputValidation', 'Faulted'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: TaskState;\n  /**\n   * Array of command properties.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly commands?: CommandPropertiesUnion[];\n  /**\n   * Key value pairs of client data to attach meta data information to task\n   */\n  clientData?: { [propertyName: string]: string };\n  /**\n   * Task input\n   */\n  input?: ValidateMigrationInputSqlServerSqlMITaskInput;\n  /**\n   * Task output. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly output?: ValidateMigrationInputSqlServerSqlMITaskOutput[];\n}\n\n/**\n * Output for task that validates migration input for SQL sync migrations\n */\nexport interface ValidateSyncMigrationInputSqlServerTaskOutput {\n  /**\n   * Database identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Name of database\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * Errors associated with a selected database object\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly validationErrors?: ReportableException[];\n}\n\n/**\n * Database specific information for SQL to Azure SQL DB sync migration task inputs\n */\nexport interface MigrateSqlServerSqlDbSyncDatabaseInput {\n  /**\n   * Unique identifier for database\n   */\n  id?: string;\n  /**\n   * Name of database\n   */\n  name?: string;\n  /**\n   * Target database name\n   */\n  targetDatabaseName?: string;\n  /**\n   * Schema name to be migrated\n   */\n  schemaName?: string;\n  /**\n   * Mapping of source to target tables\n   */\n  tableMap?: { [propertyName: string]: string };\n  /**\n   * Migration settings which tune the migration behavior\n   */\n  migrationSetting?: { [propertyName: string]: string };\n  /**\n   * Source settings to tune source endpoint migration behavior\n   */\n  sourceSetting?: { [propertyName: string]: string };\n  /**\n   * Target settings to tune target endpoint migration behavior\n   */\n  targetSetting?: { [propertyName: string]: string };\n}\n\n/**\n * Input for task that validates migration input for SQL sync migrations\n */\nexport interface ValidateSyncMigrationInputSqlServerTaskInput {\n  /**\n   * Information for connecting to source SQL server\n   */\n  sourceConnectionInfo: SqlConnectionInfo;\n  /**\n   * Information for connecting to target\n   */\n  targetConnectionInfo: SqlConnectionInfo;\n  /**\n   * Databases to migrate\n   */\n  selectedDatabases: MigrateSqlServerSqlDbSyncDatabaseInput[];\n}\n\n/**\n * Properties for task that validates migration input for SQL to Azure SQL DB sync migrations\n */\nexport interface ValidateMigrationInputSqlServerSqlDbSyncTaskProperties {\n  /**\n   * Polymorphic Discriminator\n   */\n  taskType: \"ValidateMigrationInput.SqlServer.SqlDb.Sync\";\n  /**\n   * Array of errors. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly errors?: ODataError[];\n  /**\n   * The state of the task. This is ignored if submitted. Possible values include: 'Unknown',\n   * 'Queued', 'Running', 'Canceled', 'Succeeded', 'Failed', 'FailedInputValidation', 'Faulted'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: TaskState;\n  /**\n   * Array of command properties.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly commands?: CommandPropertiesUnion[];\n  /**\n   * Key value pairs of client data to attach meta data information to task\n   */\n  clientData?: { [propertyName: string]: string };\n  /**\n   * Task input\n   */\n  input?: ValidateSyncMigrationInputSqlServerTaskInput;\n  /**\n   * Task output. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly output?: ValidateSyncMigrationInputSqlServerTaskOutput[];\n}\n\n/**\n * Database migration errors for online migration\n */\nexport interface SyncMigrationDatabaseErrorEvent {\n  /**\n   * String value of timestamp.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly timestampString?: string;\n  /**\n   * Event type.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly eventTypeString?: string;\n  /**\n   * Event text.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly eventText?: string;\n}\n\n/**\n * Contains the possible cases for MigrateOracleAzureDbPostgreSqlSyncTaskOutput.\n */\nexport type MigrateOracleAzureDbPostgreSqlSyncTaskOutputUnion = MigrateOracleAzureDbPostgreSqlSyncTaskOutput | MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseError | MigrateOracleAzureDbPostgreSqlSyncTaskOutputError | MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevel | MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevel | MigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevel;\n\n/**\n * Output for the task that migrates Oracle databases to Azure Database for PostgreSQL for online\n * migrations\n */\nexport interface MigrateOracleAzureDbPostgreSqlSyncTaskOutput {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"MigrateOracleAzureDbPostgreSqlSyncTaskOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n}\n\n/**\n * An interface representing MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseError.\n */\nexport interface MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseError {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"DatabaseLevelErrorOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Error message\n   */\n  errorMessage?: string;\n  /**\n   * List of error events.\n   */\n  events?: SyncMigrationDatabaseErrorEvent[];\n}\n\n/**\n * An interface representing MigrateOracleAzureDbPostgreSqlSyncTaskOutputError.\n */\nexport interface MigrateOracleAzureDbPostgreSqlSyncTaskOutputError {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"ErrorOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Migration error\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly error?: ReportableException;\n}\n\n/**\n * An interface representing MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevel.\n */\nexport interface MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevel {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"TableLevelOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Name of the table\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly tableName?: string;\n  /**\n   * Name of the database\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly databaseName?: string;\n  /**\n   * Number of applied inserts\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly cdcInsertCounter?: number;\n  /**\n   * Number of applied updates\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly cdcUpdateCounter?: number;\n  /**\n   * Number of applied deletes\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly cdcDeleteCounter?: number;\n  /**\n   * Estimate to finish full load\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly fullLoadEstFinishTime?: Date;\n  /**\n   * Full load start time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly fullLoadStartedOn?: Date;\n  /**\n   * Full load end time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly fullLoadEndedOn?: Date;\n  /**\n   * Number of rows applied in full load\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly fullLoadTotalRows?: number;\n  /**\n   * Current state of the table migration. Possible values include: 'BEFORE_LOAD', 'FULL_LOAD',\n   * 'COMPLETED', 'CANCELED', 'ERROR', 'FAILED'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: SyncTableMigrationState;\n  /**\n   * Total number of applied changes\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly totalChangesApplied?: number;\n  /**\n   * Number of data errors occurred\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly dataErrorsCounter?: number;\n  /**\n   * Last modified time on target\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly lastModifiedTime?: Date;\n}\n\n/**\n * An interface representing MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevel.\n */\nexport interface MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevel {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"DatabaseLevelOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Name of the database\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly databaseName?: string;\n  /**\n   * Migration start time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly startedOn?: Date;\n  /**\n   * Migration end time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly endedOn?: Date;\n  /**\n   * Migration state that this database is in. Possible values include: 'UNDEFINED', 'CONFIGURING',\n   * 'INITIALIAZING', 'STARTING', 'RUNNING', 'READY_TO_COMPLETE', 'COMPLETING', 'COMPLETE',\n   * 'CANCELLING', 'CANCELLED', 'FAILED'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly migrationState?: SyncDatabaseMigrationReportingState;\n  /**\n   * Number of incoming changes\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly incomingChanges?: number;\n  /**\n   * Number of applied changes\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly appliedChanges?: number;\n  /**\n   * Number of cdc inserts\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly cdcInsertCounter?: number;\n  /**\n   * Number of cdc deletes\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly cdcDeleteCounter?: number;\n  /**\n   * Number of cdc updates\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly cdcUpdateCounter?: number;\n  /**\n   * Number of tables completed in full load\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly fullLoadCompletedTables?: number;\n  /**\n   * Number of tables loading in full load\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly fullLoadLoadingTables?: number;\n  /**\n   * Number of tables queued in full load\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly fullLoadQueuedTables?: number;\n  /**\n   * Number of tables errored in full load\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly fullLoadErroredTables?: number;\n  /**\n   * Indicates if initial load (full load) has been completed\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly initializationCompleted?: boolean;\n  /**\n   * CDC apply latency\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly latency?: number;\n}\n\n/**\n * An interface representing MigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevel.\n */\nexport interface MigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevel {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"MigrationLevelOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Migration start time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly startedOn?: Date;\n  /**\n   * Migration end time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly endedOn?: Date;\n  /**\n   * Source server version\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly sourceServerVersion?: string;\n  /**\n   * Source server name\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly sourceServer?: string;\n  /**\n   * Target server version\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly targetServerVersion?: string;\n  /**\n   * Target server name\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly targetServer?: string;\n}\n\n/**\n * Properties for the task that migrates Oracle to Azure Database for PostgreSQL for online\n * migrations\n */\nexport interface MigrateOracleAzureDbForPostgreSqlSyncTaskProperties {\n  /**\n   * Polymorphic Discriminator\n   */\n  taskType: \"Migrate.Oracle.AzureDbForPostgreSql.Sync\";\n  /**\n   * Array of errors. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly errors?: ODataError[];\n  /**\n   * The state of the task. This is ignored if submitted. Possible values include: 'Unknown',\n   * 'Queued', 'Running', 'Canceled', 'Succeeded', 'Failed', 'FailedInputValidation', 'Faulted'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: TaskState;\n  /**\n   * Array of command properties.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly commands?: CommandPropertiesUnion[];\n  /**\n   * Key value pairs of client data to attach meta data information to task\n   */\n  clientData?: { [propertyName: string]: string };\n  /**\n   * Task input\n   */\n  input?: MigrateOracleAzureDbPostgreSqlSyncTaskInput;\n  /**\n   * Task output. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly output?: MigrateOracleAzureDbPostgreSqlSyncTaskOutputUnion[];\n}\n\n/**\n * Contains the possible cases for MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutput.\n */\nexport type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputUnion = MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutput | MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseError | MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputError | MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevel | MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevel | MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevel;\n\n/**\n * Output for the task that migrates PostgreSQL databases to Azure Database for PostgreSQL for\n * online migrations\n */\nexport interface MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutput {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n}\n\n/**\n * An interface representing MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseError.\n */\nexport interface MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseError {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"DatabaseLevelErrorOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Error message\n   */\n  errorMessage?: string;\n  /**\n   * List of error events.\n   */\n  events?: SyncMigrationDatabaseErrorEvent[];\n}\n\n/**\n * An interface representing MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputError.\n */\nexport interface MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputError {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"ErrorOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Migration error\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly error?: ReportableException;\n}\n\n/**\n * An interface representing MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevel.\n */\nexport interface MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevel {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"TableLevelOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Name of the table\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly tableName?: string;\n  /**\n   * Name of the database\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly databaseName?: string;\n  /**\n   * Number of applied inserts\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly cdcInsertCounter?: number;\n  /**\n   * Number of applied updates\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly cdcUpdateCounter?: number;\n  /**\n   * Number of applied deletes\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly cdcDeleteCounter?: number;\n  /**\n   * Estimate to finish full load\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly fullLoadEstFinishTime?: Date;\n  /**\n   * Full load start time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly fullLoadStartedOn?: Date;\n  /**\n   * Full load end time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly fullLoadEndedOn?: Date;\n  /**\n   * Number of rows applied in full load\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly fullLoadTotalRows?: number;\n  /**\n   * Current state of the table migration. Possible values include: 'BEFORE_LOAD', 'FULL_LOAD',\n   * 'COMPLETED', 'CANCELED', 'ERROR', 'FAILED'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: SyncTableMigrationState;\n  /**\n   * Total number of applied changes\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly totalChangesApplied?: number;\n  /**\n   * Number of data errors occurred\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly dataErrorsCounter?: number;\n  /**\n   * Last modified time on target\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly lastModifiedTime?: Date;\n}\n\n/**\n * An interface representing MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevel.\n */\nexport interface MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevel {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"DatabaseLevelOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Name of the database\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly databaseName?: string;\n  /**\n   * Migration start time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly startedOn?: Date;\n  /**\n   * Migration end time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly endedOn?: Date;\n  /**\n   * Migration state that this database is in. Possible values include: 'UNDEFINED', 'CONFIGURING',\n   * 'INITIALIAZING', 'STARTING', 'RUNNING', 'READY_TO_COMPLETE', 'COMPLETING', 'COMPLETE',\n   * 'CANCELLING', 'CANCELLED', 'FAILED'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly migrationState?: SyncDatabaseMigrationReportingState;\n  /**\n   * Number of incoming changes\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly incomingChanges?: number;\n  /**\n   * Number of applied changes\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly appliedChanges?: number;\n  /**\n   * Number of cdc inserts\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly cdcInsertCounter?: number;\n  /**\n   * Number of cdc deletes\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly cdcDeleteCounter?: number;\n  /**\n   * Number of cdc updates\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly cdcUpdateCounter?: number;\n  /**\n   * Number of tables completed in full load\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly fullLoadCompletedTables?: number;\n  /**\n   * Number of tables loading in full load\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly fullLoadLoadingTables?: number;\n  /**\n   * Number of tables queued in full load\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly fullLoadQueuedTables?: number;\n  /**\n   * Number of tables errored in full load\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly fullLoadErroredTables?: number;\n  /**\n   * Indicates if initial load (full load) has been completed\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly initializationCompleted?: boolean;\n  /**\n   * CDC apply latency\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly latency?: number;\n}\n\n/**\n * An interface representing MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevel.\n */\nexport interface MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevel {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"MigrationLevelOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Migration start time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly startedOn?: Date;\n  /**\n   * Migration end time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly endedOn?: Date;\n  /**\n   * Source server version\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly sourceServerVersion?: string;\n  /**\n   * Source server name\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly sourceServer?: string;\n  /**\n   * Target server version\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly targetServerVersion?: string;\n  /**\n   * Target server name\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly targetServer?: string;\n}\n\n/**\n * Database specific information for PostgreSQL to Azure Database for PostgreSQL migration task\n * inputs\n */\nexport interface MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput {\n  /**\n   * Name of the database\n   */\n  name?: string;\n  /**\n   * Name of target database. Note: Target database will be truncated before starting migration.\n   */\n  targetDatabaseName?: string;\n  /**\n   * Migration settings which tune the migration behavior\n   */\n  migrationSetting?: { [propertyName: string]: string };\n  /**\n   * Source settings to tune source endpoint migration behavior\n   */\n  sourceSetting?: { [propertyName: string]: string };\n  /**\n   * Target settings to tune target endpoint migration behavior\n   */\n  targetSetting?: { [propertyName: string]: string };\n}\n\n/**\n * Input for the task that migrates PostgreSQL databases to Azure Database for PostgreSQL for\n * online migrations\n */\nexport interface MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput {\n  /**\n   * Databases to migrate\n   */\n  selectedDatabases: MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput[];\n  /**\n   * Connection information for target Azure Database for PostgreSQL\n   */\n  targetConnectionInfo: PostgreSqlConnectionInfo;\n  /**\n   * Connection information for source PostgreSQL\n   */\n  sourceConnectionInfo: PostgreSqlConnectionInfo;\n}\n\n/**\n * Properties for the task that migrates PostgreSQL databases to Azure Database for PostgreSQL for\n * online migrations\n */\nexport interface MigratePostgreSqlAzureDbForPostgreSqlSyncTaskProperties {\n  /**\n   * Polymorphic Discriminator\n   */\n  taskType: \"Migrate.PostgreSql.AzureDbForPostgreSql.Sync\";\n  /**\n   * Array of errors. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly errors?: ODataError[];\n  /**\n   * The state of the task. This is ignored if submitted. Possible values include: 'Unknown',\n   * 'Queued', 'Running', 'Canceled', 'Succeeded', 'Failed', 'FailedInputValidation', 'Faulted'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: TaskState;\n  /**\n   * Array of command properties.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly commands?: CommandPropertiesUnion[];\n  /**\n   * Key value pairs of client data to attach meta data information to task\n   */\n  clientData?: { [propertyName: string]: string };\n  /**\n   * Task input\n   */\n  input?: MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput;\n  /**\n   * Task output. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly output?: MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputUnion[];\n}\n\n/**\n * Contains the possible cases for MigrateMySqlAzureDbForMySqlSyncTaskOutput.\n */\nexport type MigrateMySqlAzureDbForMySqlSyncTaskOutputUnion = MigrateMySqlAzureDbForMySqlSyncTaskOutput | MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseError | MigrateMySqlAzureDbForMySqlSyncTaskOutputError | MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevel | MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevel | MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevel;\n\n/**\n * Output for the task that migrates MySQL databases to Azure Database for MySQL for online\n * migrations\n */\nexport interface MigrateMySqlAzureDbForMySqlSyncTaskOutput {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"MigrateMySqlAzureDbForMySqlSyncTaskOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n}\n\n/**\n * An interface representing MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseError.\n */\nexport interface MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseError {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"DatabaseLevelErrorOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Error message\n   */\n  errorMessage?: string;\n  /**\n   * List of error events.\n   */\n  events?: SyncMigrationDatabaseErrorEvent[];\n}\n\n/**\n * An interface representing MigrateMySqlAzureDbForMySqlSyncTaskOutputError.\n */\nexport interface MigrateMySqlAzureDbForMySqlSyncTaskOutputError {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"ErrorOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Migration error\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly error?: ReportableException;\n}\n\n/**\n * An interface representing MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevel.\n */\nexport interface MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevel {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"TableLevelOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Name of the table\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly tableName?: string;\n  /**\n   * Name of the database\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly databaseName?: string;\n  /**\n   * Number of applied inserts\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly cdcInsertCounter?: string;\n  /**\n   * Number of applied updates\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly cdcUpdateCounter?: string;\n  /**\n   * Number of applied deletes\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly cdcDeleteCounter?: string;\n  /**\n   * Estimate to finish full load\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly fullLoadEstFinishTime?: Date;\n  /**\n   * Full load start time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly fullLoadStartedOn?: Date;\n  /**\n   * Full load end time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly fullLoadEndedOn?: Date;\n  /**\n   * Number of rows applied in full load\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly fullLoadTotalRows?: number;\n  /**\n   * Current state of the table migration. Possible values include: 'BEFORE_LOAD', 'FULL_LOAD',\n   * 'COMPLETED', 'CANCELED', 'ERROR', 'FAILED'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: SyncTableMigrationState;\n  /**\n   * Total number of applied changes\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly totalChangesApplied?: number;\n  /**\n   * Number of data errors occurred\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly dataErrorsCounter?: number;\n  /**\n   * Last modified time on target\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly lastModifiedTime?: Date;\n}\n\n/**\n * An interface representing MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevel.\n */\nexport interface MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevel {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"DatabaseLevelOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Name of the database\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly databaseName?: string;\n  /**\n   * Migration start time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly startedOn?: Date;\n  /**\n   * Migration end time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly endedOn?: Date;\n  /**\n   * Migration state that this database is in. Possible values include: 'UNDEFINED', 'CONFIGURING',\n   * 'INITIALIAZING', 'STARTING', 'RUNNING', 'READY_TO_COMPLETE', 'COMPLETING', 'COMPLETE',\n   * 'CANCELLING', 'CANCELLED', 'FAILED'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly migrationState?: SyncDatabaseMigrationReportingState;\n  /**\n   * Number of incoming changes\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly incomingChanges?: number;\n  /**\n   * Number of applied changes\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly appliedChanges?: number;\n  /**\n   * Number of cdc inserts\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly cdcInsertCounter?: number;\n  /**\n   * Number of cdc deletes\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly cdcDeleteCounter?: number;\n  /**\n   * Number of cdc updates\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly cdcUpdateCounter?: number;\n  /**\n   * Number of tables completed in full load\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly fullLoadCompletedTables?: number;\n  /**\n   * Number of tables loading in full load\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly fullLoadLoadingTables?: number;\n  /**\n   * Number of tables queued in full load\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly fullLoadQueuedTables?: number;\n  /**\n   * Number of tables errored in full load\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly fullLoadErroredTables?: number;\n  /**\n   * Indicates if initial load (full load) has been completed\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly initializationCompleted?: boolean;\n  /**\n   * CDC apply latency\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly latency?: number;\n}\n\n/**\n * An interface representing MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevel.\n */\nexport interface MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevel {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"MigrationLevelOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Migration start time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly startedOn?: Date;\n  /**\n   * Migration end time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly endedOn?: Date;\n  /**\n   * Source server version\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly sourceServerVersion?: string;\n  /**\n   * Source server name\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly sourceServer?: string;\n  /**\n   * Target server version\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly targetServerVersion?: string;\n  /**\n   * Target server name\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly targetServer?: string;\n}\n\n/**\n * Database specific information for MySQL to Azure Database for MySQL migration task inputs\n */\nexport interface MigrateMySqlAzureDbForMySqlSyncDatabaseInput {\n  /**\n   * Name of the database\n   */\n  name?: string;\n  /**\n   * Name of target database. Note: Target database will be truncated before starting migration.\n   */\n  targetDatabaseName?: string;\n  /**\n   * Migration settings which tune the migration behavior\n   */\n  migrationSetting?: { [propertyName: string]: string };\n  /**\n   * Source settings to tune source endpoint migration behavior\n   */\n  sourceSetting?: { [propertyName: string]: string };\n  /**\n   * Target settings to tune target endpoint migration behavior\n   */\n  targetSetting?: { [propertyName: string]: string };\n}\n\n/**\n * Input for the task that migrates MySQL databases to Azure Database for MySQL for online\n * migrations\n */\nexport interface MigrateMySqlAzureDbForMySqlSyncTaskInput {\n  /**\n   * Connection information for source MySQL\n   */\n  sourceConnectionInfo: MySqlConnectionInfo;\n  /**\n   * Connection information for target Azure Database for MySQL\n   */\n  targetConnectionInfo: MySqlConnectionInfo;\n  /**\n   * Databases to migrate\n   */\n  selectedDatabases: MigrateMySqlAzureDbForMySqlSyncDatabaseInput[];\n}\n\n/**\n * Properties for the task that migrates MySQL databases to Azure Database for MySQL for online\n * migrations\n */\nexport interface MigrateMySqlAzureDbForMySqlSyncTaskProperties {\n  /**\n   * Polymorphic Discriminator\n   */\n  taskType: \"Migrate.MySql.AzureDbForMySql.Sync\";\n  /**\n   * Array of errors. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly errors?: ODataError[];\n  /**\n   * The state of the task. This is ignored if submitted. Possible values include: 'Unknown',\n   * 'Queued', 'Running', 'Canceled', 'Succeeded', 'Failed', 'FailedInputValidation', 'Faulted'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: TaskState;\n  /**\n   * Array of command properties.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly commands?: CommandPropertiesUnion[];\n  /**\n   * Key value pairs of client data to attach meta data information to task\n   */\n  clientData?: { [propertyName: string]: string };\n  /**\n   * Task input\n   */\n  input?: MigrateMySqlAzureDbForMySqlSyncTaskInput;\n  /**\n   * Task output. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly output?: MigrateMySqlAzureDbForMySqlSyncTaskOutputUnion[];\n}\n\n/**\n * Contains the possible cases for MigrateSqlServerSqlDbSyncTaskOutput.\n */\nexport type MigrateSqlServerSqlDbSyncTaskOutputUnion = MigrateSqlServerSqlDbSyncTaskOutput | MigrateSqlServerSqlDbSyncTaskOutputDatabaseError | MigrateSqlServerSqlDbSyncTaskOutputError | MigrateSqlServerSqlDbSyncTaskOutputTableLevel | MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevel | MigrateSqlServerSqlDbSyncTaskOutputMigrationLevel;\n\n/**\n * Output for the task that migrates on-prem SQL Server databases to Azure SQL Database for online\n * migrations\n */\nexport interface MigrateSqlServerSqlDbSyncTaskOutput {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"MigrateSqlServerSqlDbSyncTaskOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n}\n\n/**\n * An interface representing MigrateSqlServerSqlDbSyncTaskOutputDatabaseError.\n */\nexport interface MigrateSqlServerSqlDbSyncTaskOutputDatabaseError {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"DatabaseLevelErrorOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Error message\n   */\n  errorMessage?: string;\n  /**\n   * List of error events.\n   */\n  events?: SyncMigrationDatabaseErrorEvent[];\n}\n\n/**\n * An interface representing MigrateSqlServerSqlDbSyncTaskOutputError.\n */\nexport interface MigrateSqlServerSqlDbSyncTaskOutputError {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"ErrorOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Migration error\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly error?: ReportableException;\n}\n\n/**\n * An interface representing MigrateSqlServerSqlDbSyncTaskOutputTableLevel.\n */\nexport interface MigrateSqlServerSqlDbSyncTaskOutputTableLevel {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"TableLevelOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Name of the table\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly tableName?: string;\n  /**\n   * Name of the database\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly databaseName?: string;\n  /**\n   * Number of applied inserts\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly cdcInsertCounter?: number;\n  /**\n   * Number of applied updates\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly cdcUpdateCounter?: number;\n  /**\n   * Number of applied deletes\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly cdcDeleteCounter?: number;\n  /**\n   * Estimate to finish full load\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly fullLoadEstFinishTime?: Date;\n  /**\n   * Full load start time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly fullLoadStartedOn?: Date;\n  /**\n   * Full load end time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly fullLoadEndedOn?: Date;\n  /**\n   * Number of rows applied in full load\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly fullLoadTotalRows?: number;\n  /**\n   * Current state of the table migration. Possible values include: 'BEFORE_LOAD', 'FULL_LOAD',\n   * 'COMPLETED', 'CANCELED', 'ERROR', 'FAILED'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: SyncTableMigrationState;\n  /**\n   * Total number of applied changes\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly totalChangesApplied?: number;\n  /**\n   * Number of data errors occurred\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly dataErrorsCounter?: number;\n  /**\n   * Last modified time on target\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly lastModifiedTime?: Date;\n}\n\n/**\n * An interface representing MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevel.\n */\nexport interface MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevel {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"DatabaseLevelOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Name of the database\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly databaseName?: string;\n  /**\n   * Migration start time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly startedOn?: Date;\n  /**\n   * Migration end time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly endedOn?: Date;\n  /**\n   * Migration state that this database is in. Possible values include: 'UNDEFINED', 'CONFIGURING',\n   * 'INITIALIAZING', 'STARTING', 'RUNNING', 'READY_TO_COMPLETE', 'COMPLETING', 'COMPLETE',\n   * 'CANCELLING', 'CANCELLED', 'FAILED'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly migrationState?: SyncDatabaseMigrationReportingState;\n  /**\n   * Number of incoming changes\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly incomingChanges?: number;\n  /**\n   * Number of applied changes\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly appliedChanges?: number;\n  /**\n   * Number of cdc inserts\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly cdcInsertCounter?: number;\n  /**\n   * Number of cdc deletes\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly cdcDeleteCounter?: number;\n  /**\n   * Number of cdc updates\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly cdcUpdateCounter?: number;\n  /**\n   * Number of tables completed in full load\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly fullLoadCompletedTables?: number;\n  /**\n   * Number of tables loading in full load\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly fullLoadLoadingTables?: number;\n  /**\n   * Number of tables queued in full load\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly fullLoadQueuedTables?: number;\n  /**\n   * Number of tables errored in full load\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly fullLoadErroredTables?: number;\n  /**\n   * Indicates if initial load (full load) has been completed\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly initializationCompleted?: boolean;\n  /**\n   * CDC apply latency\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly latency?: number;\n}\n\n/**\n * An interface representing MigrateSqlServerSqlDbSyncTaskOutputMigrationLevel.\n */\nexport interface MigrateSqlServerSqlDbSyncTaskOutputMigrationLevel {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"MigrationLevelOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Migration start time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly startedOn?: Date;\n  /**\n   * Migration end time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly endedOn?: Date;\n  /**\n   * Source server version\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly sourceServerVersion?: string;\n  /**\n   * Source server name\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly sourceServer?: string;\n  /**\n   * Target server version\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly targetServerVersion?: string;\n  /**\n   * Target server name\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly targetServer?: string;\n  /**\n   * Count of databases\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly databaseCount?: number;\n}\n\n/**\n * Types of validations to run after the migration\n */\nexport interface MigrationValidationOptions {\n  /**\n   * Allows to compare the schema information between source and target.\n   */\n  enableSchemaValidation?: boolean;\n  /**\n   * Allows to perform a checksum based data integrity validation between source and target for the\n   * selected database / tables .\n   */\n  enableDataIntegrityValidation?: boolean;\n  /**\n   * Allows to perform a quick and intelligent query analysis by retrieving queries from the source\n   * database and executes them in the target. The result will have execution statistics for\n   * executions in source and target databases for the extracted queries.\n   */\n  enableQueryAnalysisValidation?: boolean;\n}\n\n/**\n * Input for the task that migrates on-prem SQL Server databases to Azure SQL Database for online\n * migrations\n */\nexport interface MigrateSqlServerSqlDbSyncTaskInput extends SqlMigrationTaskInput {\n  /**\n   * Databases to migrate\n   */\n  selectedDatabases: MigrateSqlServerSqlDbSyncDatabaseInput[];\n  /**\n   * Validation options\n   */\n  validationOptions?: MigrationValidationOptions;\n}\n\n/**\n * Properties for the task that migrates on-prem SQL Server databases to Azure SQL Database for\n * online migrations\n */\nexport interface MigrateSqlServerSqlDbSyncTaskProperties {\n  /**\n   * Polymorphic Discriminator\n   */\n  taskType: \"Migrate.SqlServer.AzureSqlDb.Sync\";\n  /**\n   * Array of errors. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly errors?: ODataError[];\n  /**\n   * The state of the task. This is ignored if submitted. Possible values include: 'Unknown',\n   * 'Queued', 'Running', 'Canceled', 'Succeeded', 'Failed', 'FailedInputValidation', 'Faulted'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: TaskState;\n  /**\n   * Array of command properties.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly commands?: CommandPropertiesUnion[];\n  /**\n   * Key value pairs of client data to attach meta data information to task\n   */\n  clientData?: { [propertyName: string]: string };\n  /**\n   * Task input\n   */\n  input?: MigrateSqlServerSqlDbSyncTaskInput;\n  /**\n   * Task output. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly output?: MigrateSqlServerSqlDbSyncTaskOutputUnion[];\n}\n\n/**\n * Description about the errors happen while performing migration validation\n */\nexport interface ValidationError {\n  /**\n   * Error Text\n   */\n  text?: string;\n  /**\n   * Severity of the error. Possible values include: 'Message', 'Warning', 'Error'\n   */\n  severity?: Severity;\n}\n\n/**\n * Wait statistics gathered during query batch execution\n */\nexport interface WaitStatistics {\n  /**\n   * Type of the Wait\n   */\n  waitType?: string;\n  /**\n   * Total wait time in millisecond(s). Default value: 0.\n   */\n  waitTimeMs?: number;\n  /**\n   * Total no. of waits\n   */\n  waitCount?: number;\n}\n\n/**\n * Description about the errors happen while performing migration validation\n */\nexport interface ExecutionStatistics {\n  /**\n   * No. of query executions\n   */\n  executionCount?: number;\n  /**\n   * CPU Time in millisecond(s) for the query execution\n   */\n  cpuTimeMs?: number;\n  /**\n   * Time taken in millisecond(s) for executing the query\n   */\n  elapsedTimeMs?: number;\n  /**\n   * Dictionary of sql query execution wait types and the respective statistics\n   */\n  waitStats?: { [propertyName: string]: WaitStatistics };\n  /**\n   * Indicates whether the query resulted in an error\n   */\n  hasErrors?: boolean;\n  /**\n   * List of sql Errors\n   */\n  sqlErrors?: string[];\n}\n\n/**\n * Describes query analysis results for execution in source and target\n */\nexport interface QueryExecutionResult {\n  /**\n   * Query text retrieved from the source server\n   */\n  queryText?: string;\n  /**\n   * Total no. of statements in the batch\n   */\n  statementsInBatch?: number;\n  /**\n   * Query analysis result from the source\n   */\n  sourceResult?: ExecutionStatistics;\n  /**\n   * Query analysis result from the target\n   */\n  targetResult?: ExecutionStatistics;\n}\n\n/**\n * Results for query analysis comparison between the source and target\n */\nexport interface QueryAnalysisValidationResult {\n  /**\n   * List of queries executed and it's execution results in source and target\n   */\n  queryResults?: QueryExecutionResult;\n  /**\n   * Errors that are part of the execution\n   */\n  validationErrors?: ValidationError;\n}\n\n/**\n * Description about the errors happen while performing migration validation\n */\nexport interface SchemaComparisonValidationResultType {\n  /**\n   * Name of the object that has the difference\n   */\n  objectName?: string;\n  /**\n   * Type of the object that has the difference. e.g (Table/View/StoredProcedure). Possible values\n   * include: 'StoredProcedures', 'Table', 'User', 'View', 'Function'\n   */\n  objectType?: ObjectType;\n  /**\n   * Update action type with respect to target. Possible values include: 'DeletedOnTarget',\n   * 'ChangedOnTarget', 'AddedOnTarget'\n   */\n  updateAction?: UpdateActionType;\n}\n\n/**\n * Results for schema comparison between the source and target\n */\nexport interface SchemaComparisonValidationResult {\n  /**\n   * List of schema differences between the source and target databases\n   */\n  schemaDifferences?: SchemaComparisonValidationResultType;\n  /**\n   * List of errors that happened while performing schema compare validation\n   */\n  validationErrors?: ValidationError;\n  /**\n   * Count of source database objects\n   */\n  sourceDatabaseObjectCount?: { [propertyName: string]: number };\n  /**\n   * Count of target database objects\n   */\n  targetDatabaseObjectCount?: { [propertyName: string]: number };\n}\n\n/**\n * Results for checksum based Data Integrity validation results\n */\nexport interface DataIntegrityValidationResult {\n  /**\n   * List of failed table names of source and target pair\n   */\n  failedObjects?: { [propertyName: string]: string };\n  /**\n   * List of errors that happened while performing data integrity validation\n   */\n  validationErrors?: ValidationError;\n}\n\n/**\n * Database level validation results\n */\nexport interface MigrationValidationDatabaseLevelResult {\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Migration Identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly migrationId?: string;\n  /**\n   * Name of the source database\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly sourceDatabaseName?: string;\n  /**\n   * Name of the target database\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly targetDatabaseName?: string;\n  /**\n   * Validation start time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly startedOn?: Date;\n  /**\n   * Validation end time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly endedOn?: Date;\n  /**\n   * Provides data integrity validation result between the source and target tables that are\n   * migrated.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly dataIntegrityValidationResult?: DataIntegrityValidationResult;\n  /**\n   * Provides schema comparison result between source and target database\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly schemaValidationResult?: SchemaComparisonValidationResult;\n  /**\n   * Results of some of the query execution result between source and target database\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly queryAnalysisValidationResult?: QueryAnalysisValidationResult;\n  /**\n   * Current status of validation at the database level. Possible values include: 'Default',\n   * 'NotStarted', 'Initialized', 'InProgress', 'Completed', 'CompletedWithIssues', 'Stopped',\n   * 'Failed'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly status?: ValidationStatus;\n}\n\n/**\n * Migration Validation Database level summary result\n */\nexport interface MigrationValidationDatabaseSummaryResult {\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Migration Identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly migrationId?: string;\n  /**\n   * Name of the source database\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly sourceDatabaseName?: string;\n  /**\n   * Name of the target database\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly targetDatabaseName?: string;\n  /**\n   * Validation start time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly startedOn?: Date;\n  /**\n   * Validation end time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly endedOn?: Date;\n  /**\n   * Current status of validation at the database level. Possible values include: 'Default',\n   * 'NotStarted', 'Initialized', 'InProgress', 'Completed', 'CompletedWithIssues', 'Stopped',\n   * 'Failed'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly status?: ValidationStatus;\n}\n\n/**\n * Migration Validation Result\n */\nexport interface MigrationValidationResult {\n  /**\n   * Migration validation result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Migration Identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly migrationId?: string;\n  /**\n   * Validation summary results for each database\n   */\n  summaryResults?: { [propertyName: string]: MigrationValidationDatabaseSummaryResult };\n  /**\n   * Current status of validation at the migration level. Status from the database validation\n   * result status will be aggregated here. Possible values include: 'Default', 'NotStarted',\n   * 'Initialized', 'InProgress', 'Completed', 'CompletedWithIssues', 'Stopped', 'Failed'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly status?: ValidationStatus;\n}\n\n/**\n * Contains the possible cases for MigrateSqlServerSqlDbTaskOutput.\n */\nexport type MigrateSqlServerSqlDbTaskOutputUnion = MigrateSqlServerSqlDbTaskOutput | MigrateSqlServerSqlDbTaskOutputError | MigrateSqlServerSqlDbTaskOutputTableLevel | MigrateSqlServerSqlDbTaskOutputDatabaseLevel | MigrateSqlServerSqlDbTaskOutputMigrationLevel;\n\n/**\n * Output for the task that migrates on-prem SQL Server databases to Azure SQL Database\n */\nexport interface MigrateSqlServerSqlDbTaskOutput {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"MigrateSqlServerSqlDbTaskOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n}\n\n/**\n * An interface representing MigrateSqlServerSqlDbTaskOutputError.\n */\nexport interface MigrateSqlServerSqlDbTaskOutputError {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"ErrorOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Migration error\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly error?: ReportableException;\n}\n\n/**\n * An interface representing MigrateSqlServerSqlDbTaskOutputTableLevel.\n */\nexport interface MigrateSqlServerSqlDbTaskOutputTableLevel {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"TableLevelOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Name of the item\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly objectName?: string;\n  /**\n   * Migration start time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly startedOn?: Date;\n  /**\n   * Migration end time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly endedOn?: Date;\n  /**\n   * Current state of migration. Possible values include: 'None', 'InProgress', 'Failed',\n   * 'Warning', 'Completed', 'Skipped', 'Stopped'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: MigrationState;\n  /**\n   * Status message\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly statusMessage?: string;\n  /**\n   * Number of items\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly itemsCount?: number;\n  /**\n   * Number of successfully completed items\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly itemsCompletedCount?: number;\n  /**\n   * Wildcard string prefix to use for querying all errors of the item\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly errorPrefix?: string;\n  /**\n   * Wildcard string prefix to use for querying all sub-tem results of the item\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly resultPrefix?: string;\n}\n\n/**\n * Basic summary of a data item migration\n */\nexport interface DataItemMigrationSummaryResult {\n  /**\n   * Name of the item\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * Migration start time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly startedOn?: Date;\n  /**\n   * Migration end time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly endedOn?: Date;\n  /**\n   * Current state of migration. Possible values include: 'None', 'InProgress', 'Failed',\n   * 'Warning', 'Completed', 'Skipped', 'Stopped'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: MigrationState;\n  /**\n   * Status message\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly statusMessage?: string;\n  /**\n   * Number of items\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly itemsCount?: number;\n  /**\n   * Number of successfully completed items\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly itemsCompletedCount?: number;\n  /**\n   * Wildcard string prefix to use for querying all errors of the item\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly errorPrefix?: string;\n  /**\n   * Wildcard string prefix to use for querying all sub-tem results of the item\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly resultPrefix?: string;\n}\n\n/**\n * An interface representing MigrateSqlServerSqlDbTaskOutputDatabaseLevel.\n */\nexport interface MigrateSqlServerSqlDbTaskOutputDatabaseLevel {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"DatabaseLevelOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Name of the item\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly databaseName?: string;\n  /**\n   * Migration start time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly startedOn?: Date;\n  /**\n   * Migration end time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly endedOn?: Date;\n  /**\n   * Current state of migration. Possible values include: 'None', 'InProgress', 'Failed',\n   * 'Warning', 'Completed', 'Skipped', 'Stopped'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: MigrationState;\n  /**\n   * Migration stage that this database is in. Possible values include: 'None', 'Initialize',\n   * 'Backup', 'FileCopy', 'Restore', 'Completed'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly stage?: DatabaseMigrationStage;\n  /**\n   * Status message\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly statusMessage?: string;\n  /**\n   * Migration progress message\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly message?: string;\n  /**\n   * Number of objects\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly numberOfObjects?: number;\n  /**\n   * Number of successfully completed objects\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly numberOfObjectsCompleted?: number;\n  /**\n   * Number of database/object errors.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly errorCount?: number;\n  /**\n   * Wildcard string prefix to use for querying all errors of the item\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly errorPrefix?: string;\n  /**\n   * Wildcard string prefix to use for querying all sub-tem results of the item\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly resultPrefix?: string;\n  /**\n   * Migration exceptions and warnings.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly exceptionsAndWarnings?: ReportableException[];\n  /**\n   * Summary of object results in the migration\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly objectSummary?: { [propertyName: string]: DataItemMigrationSummaryResult };\n}\n\n/**\n * Migration validation report result, contains the url for downloading the generated report.\n */\nexport interface MigrationReportResult {\n  /**\n   * Migration validation result identifier\n   */\n  id?: string;\n  /**\n   * The url of the report.\n   */\n  reportUrl?: string;\n}\n\n/**\n * Summary of database results in the migration\n */\nexport interface DatabaseSummaryResult extends DataItemMigrationSummaryResult {\n  /**\n   * Size of the database in megabytes\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly sizeMB?: number;\n}\n\n/**\n * An interface representing MigrateSqlServerSqlDbTaskOutputMigrationLevel.\n */\nexport interface MigrateSqlServerSqlDbTaskOutputMigrationLevel {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"MigrationLevelOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Migration start time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly startedOn?: Date;\n  /**\n   * Migration end time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly endedOn?: Date;\n  /**\n   * Duration of task execution in seconds.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly durationInSeconds?: number;\n  /**\n   * Current status of migration. Possible values include: 'Default', 'Connecting',\n   * 'SourceAndTargetSelected', 'SelectLogins', 'Configured', 'Running', 'Error', 'Stopped',\n   * 'Completed', 'CompletedWithWarnings'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly status?: MigrationStatus;\n  /**\n   * Migration status message\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly statusMessage?: string;\n  /**\n   * Migration progress message\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly message?: string;\n  /**\n   * Selected databases as a map from database name to database id\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly databases?: { [propertyName: string]: string };\n  /**\n   * Summary of database results in the migration\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly databaseSummary?: { [propertyName: string]: DatabaseSummaryResult };\n  /**\n   * Migration Validation Results\n   */\n  migrationValidationResult?: MigrationValidationResult;\n  /**\n   * Migration Report Result, provides unique url for downloading your migration report.\n   */\n  migrationReportResult?: MigrationReportResult;\n  /**\n   * Source server version\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly sourceServerVersion?: string;\n  /**\n   * Source server brand version\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly sourceServerBrandVersion?: string;\n  /**\n   * Target server version\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly targetServerVersion?: string;\n  /**\n   * Target server brand version\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly targetServerBrandVersion?: string;\n  /**\n   * Migration exceptions and warnings.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly exceptionsAndWarnings?: ReportableException[];\n}\n\n/**\n * Database specific information for SQL to Azure SQL DB migration task inputs\n */\nexport interface MigrateSqlServerSqlDbDatabaseInput {\n  /**\n   * Name of the database\n   */\n  name?: string;\n  /**\n   * Name of target database. Note: Target database will be truncated before starting migration.\n   */\n  targetDatabaseName?: string;\n  /**\n   * Whether to set database read only before migration\n   */\n  makeSourceDbReadOnly?: boolean;\n  /**\n   * Mapping of source to target tables\n   */\n  tableMap?: { [propertyName: string]: string };\n}\n\n/**\n * Input for the task that migrates on-prem SQL Server databases to Azure SQL Database\n */\nexport interface MigrateSqlServerSqlDbTaskInput extends SqlMigrationTaskInput {\n  /**\n   * Databases to migrate\n   */\n  selectedDatabases: MigrateSqlServerSqlDbDatabaseInput[];\n  /**\n   * Options for enabling various post migration validations. Available options,\n   * 1.) Data Integrity Check: Performs a checksum based comparison on source and target tables\n   * after the migration to ensure the correctness of the data.\n   * 2.) Schema Validation: Performs a thorough schema comparison between the source and target\n   * tables and provides a list of differences between the source and target database, 3.) Query\n   * Analysis: Executes a set of queries picked up automatically either from the Query Plan Cache\n   * or Query Store and execute them and compares the execution time between the source and target\n   * database.\n   */\n  validationOptions?: MigrationValidationOptions;\n}\n\n/**\n * Properties for the task that migrates on-prem SQL Server databases to Azure SQL Database\n */\nexport interface MigrateSqlServerSqlDbTaskProperties {\n  /**\n   * Polymorphic Discriminator\n   */\n  taskType: \"Migrate.SqlServer.SqlDb\";\n  /**\n   * Array of errors. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly errors?: ODataError[];\n  /**\n   * The state of the task. This is ignored if submitted. Possible values include: 'Unknown',\n   * 'Queued', 'Running', 'Canceled', 'Succeeded', 'Failed', 'FailedInputValidation', 'Faulted'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: TaskState;\n  /**\n   * Array of command properties.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly commands?: CommandPropertiesUnion[];\n  /**\n   * Key value pairs of client data to attach meta data information to task\n   */\n  clientData?: { [propertyName: string]: string };\n  /**\n   * Task input\n   */\n  input?: MigrateSqlServerSqlDbTaskInput;\n  /**\n   * Task output. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly output?: MigrateSqlServerSqlDbTaskOutputUnion[];\n}\n\n/**\n * Contains the possible cases for MigrateSqlServerSqlMISyncTaskOutput.\n */\nexport type MigrateSqlServerSqlMISyncTaskOutputUnion = MigrateSqlServerSqlMISyncTaskOutput | MigrateSqlServerSqlMISyncTaskOutputError | MigrateSqlServerSqlMISyncTaskOutputDatabaseLevel | MigrateSqlServerSqlMISyncTaskOutputMigrationLevel;\n\n/**\n * Output for task that migrates SQL Server databases to Azure SQL Database Managed Instance using\n * Log Replay Service.\n */\nexport interface MigrateSqlServerSqlMISyncTaskOutput {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"MigrateSqlServerSqlMISyncTaskOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n}\n\n/**\n * An interface representing MigrateSqlServerSqlMISyncTaskOutputError.\n */\nexport interface MigrateSqlServerSqlMISyncTaskOutputError {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"ErrorOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Migration error\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly error?: ReportableException;\n}\n\n/**\n * Information of the backup file\n */\nexport interface BackupFileInfo {\n  /**\n   * Location of the backup file in shared folder\n   */\n  fileLocation?: string;\n  /**\n   * Sequence number of the backup file in the backup set\n   */\n  familySequenceNumber?: number;\n  /**\n   * Status of the backup file during migration. Possible values include: 'Arrived', 'Queued',\n   * 'Uploading', 'Uploaded', 'Restoring', 'Restored', 'Cancelled'\n   */\n  status?: BackupFileStatus;\n}\n\n/**\n * Information of backup set\n */\nexport interface BackupSetInfo {\n  /**\n   * Id for the set of backup files\n   */\n  backupSetId?: string;\n  /**\n   * First log sequence number of the backup file\n   */\n  firstLsn?: string;\n  /**\n   * Last log sequence number of the backup file\n   */\n  lastLsn?: string;\n  /**\n   * Last modified time of the backup file in share location\n   */\n  lastModifiedTime?: Date;\n  /**\n   * Enum of the different backup types. Possible values include: 'Database', 'TransactionLog',\n   * 'File', 'DifferentialDatabase', 'DifferentialFile', 'Partial', 'DifferentialPartial'\n   */\n  backupType?: BackupType;\n  /**\n   * List of files in the backup set\n   */\n  listOfBackupFiles?: BackupFileInfo[];\n  /**\n   * Name of the database to which the backup set belongs\n   */\n  databaseName?: string;\n  /**\n   * Date and time that the backup operation began\n   */\n  backupStartDate?: Date;\n  /**\n   * Date and time that the backup operation finished\n   */\n  backupFinishedDate?: Date;\n  /**\n   * Whether the backup set is restored or not\n   */\n  isBackupRestored?: boolean;\n}\n\n/**\n * An interface representing MigrateSqlServerSqlMISyncTaskOutputDatabaseLevel.\n */\nexport interface MigrateSqlServerSqlMISyncTaskOutputDatabaseLevel {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"DatabaseLevelOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Name of the database\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly sourceDatabaseName?: string;\n  /**\n   * Current state of database. Possible values include: 'UNDEFINED', 'INITIAL',\n   * 'FULL_BACKUP_UPLOAD_START', 'LOG_SHIPPING_START', 'UPLOAD_LOG_FILES_START', 'CUTOVER_START',\n   * 'POST_CUTOVER_COMPLETE', 'COMPLETED', 'CANCELLED', 'FAILED'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly migrationState?: DatabaseMigrationState;\n  /**\n   * Database migration start time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly startedOn?: Date;\n  /**\n   * Database migration end time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly endedOn?: Date;\n  /**\n   * Details of full backup set\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly fullBackupSetInfo?: BackupSetInfo;\n  /**\n   * Last applied backup set information\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly lastRestoredBackupSetInfo?: BackupSetInfo;\n  /**\n   * Backup sets that are currently active (Either being uploaded or getting restored)\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly activeBackupSets?: BackupSetInfo[];\n  /**\n   * Name of container created in the Azure Storage account where backups are copied to\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly containerName?: string;\n  /**\n   * prefix string to use for querying errors for this database\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly errorPrefix?: string;\n  /**\n   * Whether full backup has been applied to the target database or not\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly isFullBackupRestored?: boolean;\n  /**\n   * Migration exceptions and warnings\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly exceptionsAndWarnings?: ReportableException[];\n}\n\n/**\n * An interface representing MigrateSqlServerSqlMISyncTaskOutputMigrationLevel.\n */\nexport interface MigrateSqlServerSqlMISyncTaskOutputMigrationLevel {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"MigrationLevelOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Count of databases\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly databaseCount?: number;\n  /**\n   * Current state of migration. Possible values include: 'None', 'InProgress', 'Failed',\n   * 'Warning', 'Completed', 'Skipped', 'Stopped'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: MigrationState;\n  /**\n   * Migration start time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly startedOn?: Date;\n  /**\n   * Migration end time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly endedOn?: Date;\n  /**\n   * Source server name\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly sourceServerName?: string;\n  /**\n   * Source server version\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly sourceServerVersion?: string;\n  /**\n   * Source server brand version\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly sourceServerBrandVersion?: string;\n  /**\n   * Target server name\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly targetServerName?: string;\n  /**\n   * Target server version\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly targetServerVersion?: string;\n  /**\n   * Target server brand version\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly targetServerBrandVersion?: string;\n  /**\n   * Number of database level errors\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly databaseErrorCount?: number;\n}\n\n/**\n * Input for task that migrates SQL Server databases to Azure SQL Database Managed Instance online\n * scenario.\n */\nexport interface MigrateSqlServerSqlMISyncTaskInput extends SqlServerSqlMISyncTaskInput {\n}\n\n/**\n * Properties for task that migrates SQL Server databases to Azure SQL Database Managed Instance\n * sync scenario\n */\nexport interface MigrateSqlServerSqlMISyncTaskProperties {\n  /**\n   * Polymorphic Discriminator\n   */\n  taskType: \"Migrate.SqlServer.AzureSqlDbMI.Sync.LRS\";\n  /**\n   * Array of errors. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly errors?: ODataError[];\n  /**\n   * The state of the task. This is ignored if submitted. Possible values include: 'Unknown',\n   * 'Queued', 'Running', 'Canceled', 'Succeeded', 'Failed', 'FailedInputValidation', 'Faulted'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: TaskState;\n  /**\n   * Array of command properties.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly commands?: CommandPropertiesUnion[];\n  /**\n   * Key value pairs of client data to attach meta data information to task\n   */\n  clientData?: { [propertyName: string]: string };\n  /**\n   * Task input\n   */\n  input?: MigrateSqlServerSqlMISyncTaskInput;\n  /**\n   * Task output. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly output?: MigrateSqlServerSqlMISyncTaskOutputUnion[];\n}\n\n/**\n * Contains the possible cases for MigrateSqlServerSqlMITaskOutput.\n */\nexport type MigrateSqlServerSqlMITaskOutputUnion = MigrateSqlServerSqlMITaskOutput | MigrateSqlServerSqlMITaskOutputError | MigrateSqlServerSqlMITaskOutputLoginLevel | MigrateSqlServerSqlMITaskOutputAgentJobLevel | MigrateSqlServerSqlMITaskOutputDatabaseLevel | MigrateSqlServerSqlMITaskOutputMigrationLevel;\n\n/**\n * Output for task that migrates SQL Server databases to Azure SQL Database Managed Instance.\n */\nexport interface MigrateSqlServerSqlMITaskOutput {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"MigrateSqlServerSqlMITaskOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n}\n\n/**\n * An interface representing MigrateSqlServerSqlMITaskOutputError.\n */\nexport interface MigrateSqlServerSqlMITaskOutputError {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"ErrorOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Migration error\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly error?: ReportableException;\n}\n\n/**\n * An interface representing MigrateSqlServerSqlMITaskOutputLoginLevel.\n */\nexport interface MigrateSqlServerSqlMITaskOutputLoginLevel {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"LoginLevelOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Login name.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly loginName?: string;\n  /**\n   * Current state of login. Possible values include: 'None', 'InProgress', 'Failed', 'Warning',\n   * 'Completed', 'Skipped', 'Stopped'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: MigrationState;\n  /**\n   * Current stage of login. Possible values include: 'None', 'Initialize', 'LoginMigration',\n   * 'EstablishUserMapping', 'AssignRoleMembership', 'AssignRoleOwnership',\n   * 'EstablishServerPermissions', 'EstablishObjectPermissions', 'Completed'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly stage?: LoginMigrationStage;\n  /**\n   * Login migration start time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly startedOn?: Date;\n  /**\n   * Login migration end time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly endedOn?: Date;\n  /**\n   * Login migration progress message\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly message?: string;\n  /**\n   * Login migration errors and warnings per login\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly exceptionsAndWarnings?: ReportableException[];\n}\n\n/**\n * An interface representing MigrateSqlServerSqlMITaskOutputAgentJobLevel.\n */\nexport interface MigrateSqlServerSqlMITaskOutputAgentJobLevel {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"AgentJobLevelOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Agent Job name.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The state of the original Agent Job.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly isEnabled?: boolean;\n  /**\n   * Current state of migration. Possible values include: 'None', 'InProgress', 'Failed',\n   * 'Warning', 'Completed', 'Skipped', 'Stopped'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: MigrationState;\n  /**\n   * Migration start time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly startedOn?: Date;\n  /**\n   * Migration end time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly endedOn?: Date;\n  /**\n   * Migration progress message\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly message?: string;\n  /**\n   * Migration errors and warnings per job\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly exceptionsAndWarnings?: ReportableException[];\n}\n\n/**\n * An interface representing MigrateSqlServerSqlMITaskOutputDatabaseLevel.\n */\nexport interface MigrateSqlServerSqlMITaskOutputDatabaseLevel {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"DatabaseLevelOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Name of the database\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly databaseName?: string;\n  /**\n   * Size of the database in megabytes\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly sizeMB?: number;\n  /**\n   * Current state of migration. Possible values include: 'None', 'InProgress', 'Failed',\n   * 'Warning', 'Completed', 'Skipped', 'Stopped'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: MigrationState;\n  /**\n   * Current stage of migration. Possible values include: 'None', 'Initialize', 'Backup',\n   * 'FileCopy', 'Restore', 'Completed'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly stage?: DatabaseMigrationStage;\n  /**\n   * Migration start time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly startedOn?: Date;\n  /**\n   * Migration end time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly endedOn?: Date;\n  /**\n   * Migration progress message\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly message?: string;\n  /**\n   * Migration exceptions and warnings\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly exceptionsAndWarnings?: ReportableException[];\n}\n\n/**\n * Information of orphaned users on the SQL server database.\n */\nexport interface OrphanedUserInfo {\n  /**\n   * Name of the orphaned user\n   */\n  name?: string;\n  /**\n   * Parent database of the user\n   */\n  databaseName?: string;\n}\n\n/**\n * Server role migration result\n */\nexport interface StartMigrationScenarioServerRoleResult {\n  /**\n   * Name of server role.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * Current state of migration. Possible values include: 'None', 'InProgress', 'Failed',\n   * 'Warning', 'Completed', 'Skipped', 'Stopped'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: MigrationState;\n  /**\n   * Migration exceptions and warnings.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly exceptionsAndWarnings?: ReportableException[];\n}\n\n/**\n * An interface representing MigrateSqlServerSqlMITaskOutputMigrationLevel.\n */\nexport interface MigrateSqlServerSqlMITaskOutputMigrationLevel {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"MigrationLevelOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Migration start time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly startedOn?: Date;\n  /**\n   * Migration end time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly endedOn?: Date;\n  /**\n   * Current status of migration. Possible values include: 'Default', 'Connecting',\n   * 'SourceAndTargetSelected', 'SelectLogins', 'Configured', 'Running', 'Error', 'Stopped',\n   * 'Completed', 'CompletedWithWarnings'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly status?: MigrationStatus;\n  /**\n   * Current state of migration. Possible values include: 'None', 'InProgress', 'Failed',\n   * 'Warning', 'Completed', 'Skipped', 'Stopped'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: MigrationState;\n  /**\n   * Selected agent jobs as a map from name to id\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly agentJobs?: { [propertyName: string]: string };\n  /**\n   * Selected logins as a map from name to id\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly logins?: { [propertyName: string]: string };\n  /**\n   * Migration progress message\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly message?: string;\n  /**\n   * Map of server role migration results.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly serverRoleResults?: { [propertyName: string]: StartMigrationScenarioServerRoleResult };\n  /**\n   * List of orphaned users.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly orphanedUsersInfo?: OrphanedUserInfo[];\n  /**\n   * Selected databases as a map from database name to database id\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly databases?: { [propertyName: string]: string };\n  /**\n   * Source server version\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly sourceServerVersion?: string;\n  /**\n   * Source server brand version\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly sourceServerBrandVersion?: string;\n  /**\n   * Target server version\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly targetServerVersion?: string;\n  /**\n   * Target server brand version\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly targetServerBrandVersion?: string;\n  /**\n   * Migration exceptions and warnings.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly exceptionsAndWarnings?: ReportableException[];\n}\n\n/**\n * Input for task that migrates SQL Server databases to Azure SQL Database Managed Instance.\n */\nexport interface MigrateSqlServerSqlMITaskInput extends SqlMigrationTaskInput {\n  /**\n   * Databases to migrate\n   */\n  selectedDatabases: MigrateSqlServerSqlMIDatabaseInput[];\n  /**\n   * Logins to migrate.\n   */\n  selectedLogins?: string[];\n  /**\n   * Agent Jobs to migrate.\n   */\n  selectedAgentJobs?: string[];\n  /**\n   * Backup file share information for all selected databases.\n   */\n  backupFileShare?: FileShare;\n  /**\n   * SAS URI of Azure Storage Account Container to be used for storing backup files.\n   */\n  backupBlobShare: BlobShare;\n  /**\n   * Backup Mode to specify whether to use existing backup or create new backup. If using existing\n   * backups, backup file paths are required to be provided in selectedDatabases. Possible values\n   * include: 'CreateBackup', 'ExistingBackup'\n   */\n  backupMode?: BackupMode;\n  /**\n   * Azure Active Directory domain name in the format of 'contoso.com' for federated Azure AD or\n   * 'contoso.onmicrosoft.com' for managed domain, required if and only if Windows logins are\n   * selected\n   */\n  aadDomainName?: string;\n}\n\n/**\n * Properties for task that migrates SQL Server databases to Azure SQL Database Managed Instance\n */\nexport interface MigrateSqlServerSqlMITaskProperties {\n  /**\n   * Polymorphic Discriminator\n   */\n  taskType: \"Migrate.SqlServer.AzureSqlDbMI\";\n  /**\n   * Array of errors. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly errors?: ODataError[];\n  /**\n   * The state of the task. This is ignored if submitted. Possible values include: 'Unknown',\n   * 'Queued', 'Running', 'Canceled', 'Succeeded', 'Failed', 'FailedInputValidation', 'Faulted'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: TaskState;\n  /**\n   * Array of command properties.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly commands?: CommandPropertiesUnion[];\n  /**\n   * Key value pairs of client data to attach meta data information to task\n   */\n  clientData?: { [propertyName: string]: string };\n  /**\n   * Task input\n   */\n  input?: MigrateSqlServerSqlMITaskInput;\n  /**\n   * Task output. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly output?: MigrateSqlServerSqlMITaskOutputUnion[];\n}\n\n/**\n * Properties for the task that migrates data between MongoDB data sources\n */\nexport interface MigrateMongoDbTaskProperties {\n  /**\n   * Polymorphic Discriminator\n   */\n  taskType: \"Migrate.MongoDb\";\n  /**\n   * Array of errors. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly errors?: ODataError[];\n  /**\n   * The state of the task. This is ignored if submitted. Possible values include: 'Unknown',\n   * 'Queued', 'Running', 'Canceled', 'Succeeded', 'Failed', 'FailedInputValidation', 'Faulted'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: TaskState;\n  /**\n   * Array of command properties.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly commands?: CommandPropertiesUnion[];\n  /**\n   * Key value pairs of client data to attach meta data information to task\n   */\n  clientData?: { [propertyName: string]: string };\n  input?: MongoDbMigrationSettings;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly output?: MongoDbProgress[];\n}\n\n/**\n * Output for the task that validates connection to Azure Database for MySQL and target server\n * requirements\n */\nexport interface ConnectToTargetAzureDbForMySqlTaskOutput {\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Version of the target server\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly serverVersion?: string;\n  /**\n   * List of databases on target server\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly databases?: string[];\n  /**\n   * Target server brand version\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly targetServerBrandVersion?: string;\n  /**\n   * Validation errors associated with the task\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly validationErrors?: ReportableException[];\n}\n\n/**\n * Input for the task that validates connection to Azure Database for MySQL and target server\n * requirements\n */\nexport interface ConnectToTargetAzureDbForMySqlTaskInput {\n  /**\n   * Connection information for source MySQL server\n   */\n  sourceConnectionInfo: MySqlConnectionInfo;\n  /**\n   * Connection information for target Azure Database for MySQL server\n   */\n  targetConnectionInfo: MySqlConnectionInfo;\n}\n\n/**\n * Properties for the task that validates connection to Azure Database for MySQL and target server\n * requirements\n */\nexport interface ConnectToTargetAzureDbForMySqlTaskProperties {\n  /**\n   * Polymorphic Discriminator\n   */\n  taskType: \"ConnectToTarget.AzureDbForMySql\";\n  /**\n   * Array of errors. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly errors?: ODataError[];\n  /**\n   * The state of the task. This is ignored if submitted. Possible values include: 'Unknown',\n   * 'Queued', 'Running', 'Canceled', 'Succeeded', 'Failed', 'FailedInputValidation', 'Faulted'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: TaskState;\n  /**\n   * Array of command properties.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly commands?: CommandPropertiesUnion[];\n  /**\n   * Key value pairs of client data to attach meta data information to task\n   */\n  clientData?: { [propertyName: string]: string };\n  /**\n   * Task input\n   */\n  input?: ConnectToTargetAzureDbForMySqlTaskInput;\n  /**\n   * Task output. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly output?: ConnectToTargetAzureDbForMySqlTaskOutput[];\n}\n\n/**\n * Output for the task that validates connection to Azure SQL Database Managed Instance.\n */\nexport interface ConnectToTargetSqlMISyncTaskOutput {\n  /**\n   * Target server version\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly targetServerVersion?: string;\n  /**\n   * Target server brand version\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly targetServerBrandVersion?: string;\n  /**\n   * Validation errors\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly validationErrors?: ReportableException[];\n}\n\n/**\n * Input for the task that validates connection to Azure SQL Database Managed Instance online\n * scenario.\n */\nexport interface ConnectToTargetSqlMISyncTaskInput {\n  /**\n   * Connection information for Azure SQL Database Managed Instance\n   */\n  targetConnectionInfo: MiSqlConnectionInfo;\n  /**\n   * Azure Active Directory Application the DMS instance will use to connect to the target instance\n   * of Azure SQL Database Managed Instance and the Azure Storage Account\n   */\n  azureApp: AzureActiveDirectoryApp;\n}\n\n/**\n * Properties for the task that validates connection to Azure SQL Database Managed Instance\n */\nexport interface ConnectToTargetSqlMISyncTaskProperties {\n  /**\n   * Polymorphic Discriminator\n   */\n  taskType: \"ConnectToTarget.AzureSqlDbMI.Sync.LRS\";\n  /**\n   * Array of errors. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly errors?: ODataError[];\n  /**\n   * The state of the task. This is ignored if submitted. Possible values include: 'Unknown',\n   * 'Queued', 'Running', 'Canceled', 'Succeeded', 'Failed', 'FailedInputValidation', 'Faulted'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: TaskState;\n  /**\n   * Array of command properties.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly commands?: CommandPropertiesUnion[];\n  /**\n   * Key value pairs of client data to attach meta data information to task\n   */\n  clientData?: { [propertyName: string]: string };\n  /**\n   * Task input\n   */\n  input?: ConnectToTargetSqlMISyncTaskInput;\n  /**\n   * Task output. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly output?: ConnectToTargetSqlMISyncTaskOutput[];\n}\n\n/**\n * Output for the task that validates connection to Azure SQL Database Managed Instance.\n */\nexport interface ConnectToTargetSqlMITaskOutput {\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Target server version\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly targetServerVersion?: string;\n  /**\n   * Target server brand version\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly targetServerBrandVersion?: string;\n  /**\n   * List of logins on the target server.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly logins?: string[];\n  /**\n   * List of agent jobs on the target server.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly agentJobs?: string[];\n  /**\n   * Validation errors\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly validationErrors?: ReportableException[];\n}\n\n/**\n * Input for the task that validates connection to Azure SQL Database Managed Instance.\n */\nexport interface ConnectToTargetSqlMITaskInput {\n  /**\n   * Connection information for target SQL Server\n   */\n  targetConnectionInfo: SqlConnectionInfo;\n  /**\n   * Flag for whether to collect logins from target SQL MI server. Default value: true.\n   */\n  collectLogins?: boolean;\n  /**\n   * Flag for whether to collect agent jobs from target SQL MI server. Default value: true.\n   */\n  collectAgentJobs?: boolean;\n  /**\n   * Flag for whether to validate SSIS catalog is reachable on the target SQL MI server. Default\n   * value: false.\n   */\n  validateSsisCatalogOnly?: boolean;\n}\n\n/**\n * Properties for the task that validates connection to Azure SQL Database Managed Instance\n */\nexport interface ConnectToTargetSqlMITaskProperties {\n  /**\n   * Polymorphic Discriminator\n   */\n  taskType: \"ConnectToTarget.AzureSqlDbMI\";\n  /**\n   * Array of errors. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly errors?: ODataError[];\n  /**\n   * The state of the task. This is ignored if submitted. Possible values include: 'Unknown',\n   * 'Queued', 'Running', 'Canceled', 'Succeeded', 'Failed', 'FailedInputValidation', 'Faulted'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: TaskState;\n  /**\n   * Array of command properties.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly commands?: CommandPropertiesUnion[];\n  /**\n   * Key value pairs of client data to attach meta data information to task\n   */\n  clientData?: { [propertyName: string]: string };\n  /**\n   * Task input\n   */\n  input?: ConnectToTargetSqlMITaskInput;\n  /**\n   * Task output. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly output?: ConnectToTargetSqlMITaskOutput[];\n}\n\n/**\n * Table properties\n */\nexport interface DatabaseTable {\n  /**\n   * Indicates whether table is empty or not\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly hasRows?: boolean;\n  /**\n   * Schema-qualified name of the table\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n}\n\n/**\n * Output for the task that gets the list of tables for a provided list of PostgreSQL databases.\n */\nexport interface GetUserTablesPostgreSqlTaskOutput {\n  /**\n   * The database this result is for\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly databaseName?: string;\n  /**\n   * List of valid tables found for this database\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly tables?: DatabaseTable[];\n  /**\n   * Validation errors associated with the task\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly validationErrors?: ReportableException[];\n}\n\n/**\n * Input for the task that gets the list of tables for a provided list of PostgreSQL databases.\n */\nexport interface GetUserTablesPostgreSqlTaskInput {\n  /**\n   * Information for connecting to PostgreSQL source\n   */\n  connectionInfo: PostgreSqlConnectionInfo;\n  /**\n   * List of PostgreSQL databases for which to collect tables\n   */\n  selectedDatabases: string[];\n}\n\n/**\n * Properties for the task that collects user tables for the given list of databases\n */\nexport interface GetUserTablesPostgreSqlTaskProperties {\n  /**\n   * Polymorphic Discriminator\n   */\n  taskType: \"GetUserTablesPostgreSql\";\n  /**\n   * Array of errors. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly errors?: ODataError[];\n  /**\n   * The state of the task. This is ignored if submitted. Possible values include: 'Unknown',\n   * 'Queued', 'Running', 'Canceled', 'Succeeded', 'Failed', 'FailedInputValidation', 'Faulted'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: TaskState;\n  /**\n   * Array of command properties.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly commands?: CommandPropertiesUnion[];\n  /**\n   * Key value pairs of client data to attach meta data information to task\n   */\n  clientData?: { [propertyName: string]: string };\n  /**\n   * Task input\n   */\n  input?: GetUserTablesPostgreSqlTaskInput;\n  /**\n   * Task output. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly output?: GetUserTablesPostgreSqlTaskOutput[];\n}\n\n/**\n * Output for the task that gets the list of tables contained within a provided list of Oracle\n * schemas.\n */\nexport interface GetUserTablesOracleTaskOutput {\n  /**\n   * The schema this result is for\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly schemaName?: string;\n  /**\n   * List of valid tables found for this schema\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly tables?: DatabaseTable[];\n  /**\n   * Validation errors associated with the task\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly validationErrors?: ReportableException[];\n}\n\n/**\n * Input for the task that gets the list of tables contained within a provided list of Oracle\n * schemas.\n */\nexport interface GetUserTablesOracleTaskInput {\n  /**\n   * Information for connecting to Oracle source\n   */\n  connectionInfo: OracleConnectionInfo;\n  /**\n   * List of Oracle schemas for which to collect tables\n   */\n  selectedSchemas: string[];\n}\n\n/**\n * Properties for the task that collects user tables for the given list of Oracle schemas\n */\nexport interface GetUserTablesOracleTaskProperties {\n  /**\n   * Polymorphic Discriminator\n   */\n  taskType: \"GetUserTablesOracle\";\n  /**\n   * Array of errors. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly errors?: ODataError[];\n  /**\n   * The state of the task. This is ignored if submitted. Possible values include: 'Unknown',\n   * 'Queued', 'Running', 'Canceled', 'Succeeded', 'Failed', 'FailedInputValidation', 'Faulted'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: TaskState;\n  /**\n   * Array of command properties.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly commands?: CommandPropertiesUnion[];\n  /**\n   * Key value pairs of client data to attach meta data information to task\n   */\n  clientData?: { [propertyName: string]: string };\n  /**\n   * Task input\n   */\n  input?: GetUserTablesOracleTaskInput;\n  /**\n   * Task output. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly output?: GetUserTablesOracleTaskOutput[];\n}\n\n/**\n * Output of the task that collects user tables for the given list of databases\n */\nexport interface GetUserTablesSqlSyncTaskOutput {\n  /**\n   * Mapping from database name to list of source tables\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly databasesToSourceTables?: { [propertyName: string]: DatabaseTable[] };\n  /**\n   * Mapping from database name to list of target tables\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly databasesToTargetTables?: { [propertyName: string]: DatabaseTable[] };\n  /**\n   * Mapping from database name to list of validation errors\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly tableValidationErrors?: { [propertyName: string]: string[] };\n  /**\n   * Validation errors\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly validationErrors?: ReportableException[];\n}\n\n/**\n * Input for the task that collects user tables for the given list of databases\n */\nexport interface GetUserTablesSqlSyncTaskInput {\n  /**\n   * Connection information for SQL Server\n   */\n  sourceConnectionInfo: SqlConnectionInfo;\n  /**\n   * Connection information for SQL DB\n   */\n  targetConnectionInfo: SqlConnectionInfo;\n  /**\n   * List of source database names to collect tables for\n   */\n  selectedSourceDatabases: string[];\n  /**\n   * List of target database names to collect tables for\n   */\n  selectedTargetDatabases: string[];\n}\n\n/**\n * Properties for the task that collects user tables for the given list of databases\n */\nexport interface GetUserTablesSqlSyncTaskProperties {\n  /**\n   * Polymorphic Discriminator\n   */\n  taskType: \"GetUserTables.AzureSqlDb.Sync\";\n  /**\n   * Array of errors. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly errors?: ODataError[];\n  /**\n   * The state of the task. This is ignored if submitted. Possible values include: 'Unknown',\n   * 'Queued', 'Running', 'Canceled', 'Succeeded', 'Failed', 'FailedInputValidation', 'Faulted'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: TaskState;\n  /**\n   * Array of command properties.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly commands?: CommandPropertiesUnion[];\n  /**\n   * Key value pairs of client data to attach meta data information to task\n   */\n  clientData?: { [propertyName: string]: string };\n  /**\n   * Task input\n   */\n  input?: GetUserTablesSqlSyncTaskInput;\n  /**\n   * Task output. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly output?: GetUserTablesSqlSyncTaskOutput[];\n}\n\n/**\n * Output of the task that collects user tables for the given list of databases\n */\nexport interface GetUserTablesSqlTaskOutput {\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Mapping from database name to list of tables\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly databasesToTables?: { [propertyName: string]: DatabaseTable[] };\n  /**\n   * Validation errors\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly validationErrors?: ReportableException[];\n}\n\n/**\n * Input for the task that collects user tables for the given list of databases\n */\nexport interface GetUserTablesSqlTaskInput {\n  /**\n   * Connection information for SQL Server\n   */\n  connectionInfo: SqlConnectionInfo;\n  /**\n   * List of database names to collect tables for\n   */\n  selectedDatabases: string[];\n}\n\n/**\n * Properties for the task that collects user tables for the given list of databases\n */\nexport interface GetUserTablesSqlTaskProperties {\n  /**\n   * Polymorphic Discriminator\n   */\n  taskType: \"GetUserTables.Sql\";\n  /**\n   * Array of errors. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly errors?: ODataError[];\n  /**\n   * The state of the task. This is ignored if submitted. Possible values include: 'Unknown',\n   * 'Queued', 'Running', 'Canceled', 'Succeeded', 'Failed', 'FailedInputValidation', 'Faulted'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: TaskState;\n  /**\n   * Array of command properties.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly commands?: CommandPropertiesUnion[];\n  /**\n   * Key value pairs of client data to attach meta data information to task\n   */\n  clientData?: { [propertyName: string]: string };\n  /**\n   * Task input\n   */\n  input?: GetUserTablesSqlTaskInput;\n  /**\n   * Task output. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly output?: GetUserTablesSqlTaskOutput[];\n}\n\n/**\n * An interface representing\n * ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputDatabaseSchemaMapItem.\n */\nexport interface ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputDatabaseSchemaMapItem {\n  database?: string;\n  schemas?: string[];\n}\n\n/**\n * Output for the task that validates connection to Azure Database for PostgreSQL and target server\n * requirements for Oracle source.\n */\nexport interface ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutput {\n  /**\n   * Version of the target server\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly targetServerVersion?: string;\n  /**\n   * List of databases on target server\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly databases?: string[];\n  /**\n   * Target server brand version\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly targetServerBrandVersion?: string;\n  /**\n   * Validation errors associated with the task\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly validationErrors?: ReportableException[];\n  /**\n   * Mapping of schemas per database\n   */\n  databaseSchemaMap?: ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputDatabaseSchemaMapItem[];\n}\n\n/**\n * Input for the task that validates connection to Azure Database for PostgreSQL and target server\n * requirements for Oracle source.\n */\nexport interface ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInput {\n  /**\n   * Connection information for target Azure Database for PostgreSQL server\n   */\n  targetConnectionInfo: PostgreSqlConnectionInfo;\n}\n\n/**\n * Properties for the task that validates connection to Azure Database For PostgreSQL server and\n * target server requirements for online migration for Oracle source.\n */\nexport interface ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskProperties {\n  /**\n   * Polymorphic Discriminator\n   */\n  taskType: \"ConnectToTarget.Oracle.AzureDbForPostgreSql.Sync\";\n  /**\n   * Array of errors. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly errors?: ODataError[];\n  /**\n   * The state of the task. This is ignored if submitted. Possible values include: 'Unknown',\n   * 'Queued', 'Running', 'Canceled', 'Succeeded', 'Failed', 'FailedInputValidation', 'Faulted'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: TaskState;\n  /**\n   * Array of command properties.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly commands?: CommandPropertiesUnion[];\n  /**\n   * Key value pairs of client data to attach meta data information to task\n   */\n  clientData?: { [propertyName: string]: string };\n  /**\n   * Task input\n   */\n  input?: ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInput;\n  /**\n   * Task output. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly output?: ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutput[];\n}\n\n/**\n * Output for the task that validates connection to Azure Database for PostgreSQL and target server\n * requirements\n */\nexport interface ConnectToTargetAzureDbForPostgreSqlSyncTaskOutput {\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Version of the target server\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly targetServerVersion?: string;\n  /**\n   * List of databases on target server\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly databases?: string[];\n  /**\n   * Target server brand version\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly targetServerBrandVersion?: string;\n  /**\n   * Validation errors associated with the task\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly validationErrors?: ReportableException[];\n}\n\n/**\n * Input for the task that validates connection to Azure Database for PostgreSQL and target server\n * requirements\n */\nexport interface ConnectToTargetAzureDbForPostgreSqlSyncTaskInput {\n  /**\n   * Connection information for source PostgreSQL server\n   */\n  sourceConnectionInfo: PostgreSqlConnectionInfo;\n  /**\n   * Connection information for target Azure Database for PostgreSQL server\n   */\n  targetConnectionInfo: PostgreSqlConnectionInfo;\n}\n\n/**\n * Properties for the task that validates connection to Azure Database For PostgreSQL server and\n * target server requirements for online migration\n */\nexport interface ConnectToTargetAzureDbForPostgreSqlSyncTaskProperties {\n  /**\n   * Polymorphic Discriminator\n   */\n  taskType: \"ConnectToTarget.AzureDbForPostgreSql.Sync\";\n  /**\n   * Array of errors. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly errors?: ODataError[];\n  /**\n   * The state of the task. This is ignored if submitted. Possible values include: 'Unknown',\n   * 'Queued', 'Running', 'Canceled', 'Succeeded', 'Failed', 'FailedInputValidation', 'Faulted'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: TaskState;\n  /**\n   * Array of command properties.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly commands?: CommandPropertiesUnion[];\n  /**\n   * Key value pairs of client data to attach meta data information to task\n   */\n  clientData?: { [propertyName: string]: string };\n  /**\n   * Task input\n   */\n  input?: ConnectToTargetAzureDbForPostgreSqlSyncTaskInput;\n  /**\n   * Task output. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly output?: ConnectToTargetAzureDbForPostgreSqlSyncTaskOutput[];\n}\n\n/**\n * Output for the task that validates connection to SQL DB and target server requirements\n */\nexport interface ConnectToTargetSqlDbTaskOutput {\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Source databases as a map from database name to database id\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly databases?: { [propertyName: string]: string };\n  /**\n   * Version of the target server\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly targetServerVersion?: string;\n  /**\n   * Target server brand version\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly targetServerBrandVersion?: string;\n}\n\n/**\n * Input for the task that validates connection to Azure SQL DB and target server requirements\n */\nexport interface ConnectToTargetSqlSqlDbSyncTaskInput {\n  /**\n   * Connection information for source SQL Server\n   */\n  sourceConnectionInfo: SqlConnectionInfo;\n  /**\n   * Connection information for target SQL DB\n   */\n  targetConnectionInfo: SqlConnectionInfo;\n}\n\n/**\n * Properties for the task that validates connection to SQL DB and target server requirements for\n * online migration\n */\nexport interface ConnectToTargetSqlSqlDbSyncTaskProperties {\n  /**\n   * Polymorphic Discriminator\n   */\n  taskType: \"ConnectToTarget.SqlDb.Sync\";\n  /**\n   * Array of errors. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly errors?: ODataError[];\n  /**\n   * The state of the task. This is ignored if submitted. Possible values include: 'Unknown',\n   * 'Queued', 'Running', 'Canceled', 'Succeeded', 'Failed', 'FailedInputValidation', 'Faulted'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: TaskState;\n  /**\n   * Array of command properties.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly commands?: CommandPropertiesUnion[];\n  /**\n   * Key value pairs of client data to attach meta data information to task\n   */\n  clientData?: { [propertyName: string]: string };\n  /**\n   * Task input\n   */\n  input?: ConnectToTargetSqlSqlDbSyncTaskInput;\n  /**\n   * Task output. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly output?: ConnectToTargetSqlDbTaskOutput[];\n}\n\n/**\n * Input for the task that validates connection to SQL DB and target server requirements\n */\nexport interface ConnectToTargetSqlDbTaskInput {\n  /**\n   * Connection information for target SQL DB\n   */\n  targetConnectionInfo: SqlConnectionInfo;\n}\n\n/**\n * Properties for the task that validates connection to SQL DB and target server requirements\n */\nexport interface ConnectToTargetSqlDbTaskProperties {\n  /**\n   * Polymorphic Discriminator\n   */\n  taskType: \"ConnectToTarget.SqlDb\";\n  /**\n   * Array of errors. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly errors?: ODataError[];\n  /**\n   * The state of the task. This is ignored if submitted. Possible values include: 'Unknown',\n   * 'Queued', 'Running', 'Canceled', 'Succeeded', 'Failed', 'FailedInputValidation', 'Faulted'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: TaskState;\n  /**\n   * Array of command properties.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly commands?: CommandPropertiesUnion[];\n  /**\n   * Key value pairs of client data to attach meta data information to task\n   */\n  clientData?: { [propertyName: string]: string };\n  /**\n   * Task input\n   */\n  input?: ConnectToTargetSqlDbTaskInput;\n  /**\n   * Task output. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly output?: ConnectToTargetSqlDbTaskOutput[];\n}\n\n/**\n * Output for the task that validates Oracle database connection\n */\nexport interface ConnectToSourceOracleSyncTaskOutput {\n  /**\n   * Version of the source server\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly sourceServerVersion?: string;\n  /**\n   * List of schemas on source server\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly databases?: string[];\n  /**\n   * Source server brand version\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly sourceServerBrandVersion?: string;\n  /**\n   * Validation errors associated with the task\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly validationErrors?: ReportableException[];\n}\n\n/**\n * Input for the task that validates Oracle database connection\n */\nexport interface ConnectToSourceOracleSyncTaskInput {\n  /**\n   * Information for connecting to Oracle source\n   */\n  sourceConnectionInfo: OracleConnectionInfo;\n}\n\n/**\n * Properties for the task that validates Oracle database connection\n */\nexport interface ConnectToSourceOracleSyncTaskProperties {\n  /**\n   * Polymorphic Discriminator\n   */\n  taskType: \"ConnectToSource.Oracle.Sync\";\n  /**\n   * Array of errors. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly errors?: ODataError[];\n  /**\n   * The state of the task. This is ignored if submitted. Possible values include: 'Unknown',\n   * 'Queued', 'Running', 'Canceled', 'Succeeded', 'Failed', 'FailedInputValidation', 'Faulted'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: TaskState;\n  /**\n   * Array of command properties.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly commands?: CommandPropertiesUnion[];\n  /**\n   * Key value pairs of client data to attach meta data information to task\n   */\n  clientData?: { [propertyName: string]: string };\n  /**\n   * Task input\n   */\n  input?: ConnectToSourceOracleSyncTaskInput;\n  /**\n   * Task output. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly output?: ConnectToSourceOracleSyncTaskOutput[];\n}\n\n/**\n * Output for the task that validates connection to PostgreSQL and source server requirements\n */\nexport interface ConnectToSourcePostgreSqlSyncTaskOutput {\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Version of the source server\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly sourceServerVersion?: string;\n  /**\n   * List of databases on source server\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly databases?: string[];\n  /**\n   * Source server brand version\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly sourceServerBrandVersion?: string;\n  /**\n   * Validation errors associated with the task\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly validationErrors?: ReportableException[];\n}\n\n/**\n * Input for the task that validates connection to PostgreSQL and source server requirements\n */\nexport interface ConnectToSourcePostgreSqlSyncTaskInput {\n  /**\n   * Connection information for source PostgreSQL server\n   */\n  sourceConnectionInfo: PostgreSqlConnectionInfo;\n}\n\n/**\n * Properties for the task that validates connection to PostgreSQL server and source server\n * requirements for online migration\n */\nexport interface ConnectToSourcePostgreSqlSyncTaskProperties {\n  /**\n   * Polymorphic Discriminator\n   */\n  taskType: \"ConnectToSource.PostgreSql.Sync\";\n  /**\n   * Array of errors. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly errors?: ODataError[];\n  /**\n   * The state of the task. This is ignored if submitted. Possible values include: 'Unknown',\n   * 'Queued', 'Running', 'Canceled', 'Succeeded', 'Failed', 'FailedInputValidation', 'Faulted'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: TaskState;\n  /**\n   * Array of command properties.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly commands?: CommandPropertiesUnion[];\n  /**\n   * Key value pairs of client data to attach meta data information to task\n   */\n  clientData?: { [propertyName: string]: string };\n  /**\n   * Task input\n   */\n  input?: ConnectToSourcePostgreSqlSyncTaskInput;\n  /**\n   * Task output. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly output?: ConnectToSourcePostgreSqlSyncTaskOutput[];\n}\n\n/**\n * Information about migration eligibility of a server object\n */\nexport interface MigrationEligibilityInfo {\n  /**\n   * Whether object is eligible for migration or not.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly isEligibleForMigration?: boolean;\n  /**\n   * Information about eligibility failure for the server object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly validationMessages?: string[];\n}\n\n/**\n * Contains the possible cases for ConnectToSourceSqlServerTaskOutput.\n */\nexport type ConnectToSourceSqlServerTaskOutputUnion = ConnectToSourceSqlServerTaskOutput | ConnectToSourceSqlServerTaskOutputAgentJobLevel | ConnectToSourceSqlServerTaskOutputLoginLevel | ConnectToSourceSqlServerTaskOutputDatabaseLevel | ConnectToSourceSqlServerTaskOutputTaskLevel;\n\n/**\n * Output for the task that validates connection to SQL Server and also validates source server\n * requirements\n */\nexport interface ConnectToSourceSqlServerTaskOutput {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"ConnectToSourceSqlServerTaskOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n}\n\n/**\n * Agent Job level output for the task that validates connection to SQL Server and also validates\n * source server requirements\n */\nexport interface ConnectToSourceSqlServerTaskOutputAgentJobLevel {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"AgentJobLevelOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Agent Job name\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The type of Agent Job.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly jobCategory?: string;\n  /**\n   * The state of the original Agent Job.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly isEnabled?: boolean;\n  /**\n   * The owner of the Agent Job\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly jobOwner?: string;\n  /**\n   * UTC Date and time when the Agent Job was last executed.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly lastExecutedOn?: Date;\n  /**\n   * Validation errors\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly validationErrors?: ReportableException[];\n  /**\n   * Information about eligibility of agent job for migration.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly migrationEligibility?: MigrationEligibilityInfo;\n}\n\n/**\n * Login level output for the task that validates connection to SQL Server and also validates\n * source server requirements\n */\nexport interface ConnectToSourceSqlServerTaskOutputLoginLevel {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"LoginLevelOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Login name.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The type of login. Possible values include: 'WindowsUser', 'WindowsGroup', 'SqlLogin',\n   * 'Certificate', 'AsymmetricKey', 'ExternalUser', 'ExternalGroup'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly loginType?: LoginType;\n  /**\n   * The default database for the login.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly defaultDatabase?: string;\n  /**\n   * The state of the login.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly isEnabled?: boolean;\n  /**\n   * Information about eligibility of login for migration.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly migrationEligibility?: MigrationEligibilityInfo;\n}\n\n/**\n * Database file specific information\n */\nexport interface DatabaseFileInfo {\n  /**\n   * Name of the database\n   */\n  databaseName?: string;\n  /**\n   * Unique identifier for database file\n   */\n  id?: string;\n  /**\n   * Logical name of the file\n   */\n  logicalName?: string;\n  /**\n   * Operating-system full path of the file\n   */\n  physicalFullName?: string;\n  /**\n   * Suggested full path of the file for restoring\n   */\n  restoreFullName?: string;\n  /**\n   * Database file type. Possible values include: 'Rows', 'Log', 'Filestream', 'NotSupported',\n   * 'Fulltext'\n   */\n  fileType?: DatabaseFileType;\n  /**\n   * Size of the file in megabytes\n   */\n  sizeMB?: number;\n}\n\n/**\n * Database level output for the task that validates connection to SQL Server and also validates\n * source server requirements\n */\nexport interface ConnectToSourceSqlServerTaskOutputDatabaseLevel {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"DatabaseLevelOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Database name\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * Size of the file in megabytes\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly sizeMB?: number;\n  /**\n   * The list of database files\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly databaseFiles?: DatabaseFileInfo[];\n  /**\n   * SQL Server compatibility level of database. Possible values include: 'CompatLevel80',\n   * 'CompatLevel90', 'CompatLevel100', 'CompatLevel110', 'CompatLevel120', 'CompatLevel130',\n   * 'CompatLevel140'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly compatibilityLevel?: DatabaseCompatLevel;\n  /**\n   * State of the database. Possible values include: 'Online', 'Restoring', 'Recovering',\n   * 'RecoveryPending', 'Suspect', 'Emergency', 'Offline', 'Copying', 'OfflineSecondary'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly databaseState?: DatabaseState;\n}\n\n/**\n * Task level output for the task that validates connection to SQL Server and also validates source\n * server requirements\n */\nexport interface ConnectToSourceSqlServerTaskOutputTaskLevel {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"TaskLevelOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Source databases as a map from database name to database id\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly databases?: { [propertyName: string]: string };\n  /**\n   * Source logins as a map from login name to login id.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly logins?: { [propertyName: string]: string };\n  /**\n   * Source agent jobs as a map from agent job name to id.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly agentJobs?: { [propertyName: string]: string };\n  /**\n   * Mapping from database name to TDE certificate name, if applicable\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly databaseTdeCertificateMapping?: { [propertyName: string]: string };\n  /**\n   * Source server version\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly sourceServerVersion?: string;\n  /**\n   * Source server brand version\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly sourceServerBrandVersion?: string;\n  /**\n   * Validation errors\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly validationErrors?: ReportableException[];\n}\n\n/**\n * Input for the task that validates connection to SQL Server and also validates source server\n * requirements\n */\nexport interface ConnectToSourceSqlServerTaskInput {\n  /**\n   * Connection information for Source SQL Server\n   */\n  sourceConnectionInfo: SqlConnectionInfo;\n  /**\n   * Permission group for validations. Possible values include: 'Default',\n   * 'MigrationFromSqlServerToAzureDB', 'MigrationFromSqlServerToAzureMI',\n   * 'MigrationFromMySQLToAzureDBForMySQL'\n   */\n  checkPermissionsGroup?: ServerLevelPermissionsGroup;\n  /**\n   * Flag for whether to collect databases from source server. Default value: true.\n   */\n  collectDatabases?: boolean;\n  /**\n   * Flag for whether to collect logins from source server. Default value: false.\n   */\n  collectLogins?: boolean;\n  /**\n   * Flag for whether to collect agent jobs from source server. Default value: false.\n   */\n  collectAgentJobs?: boolean;\n  /**\n   * Flag for whether to collect TDE Certificate names from source server. Default value: false.\n   */\n  collectTdeCertificateInfo?: boolean;\n  /**\n   * Flag for whether to validate SSIS catalog is reachable on the source server. Default value:\n   * false.\n   */\n  validateSsisCatalogOnly?: boolean;\n}\n\n/**\n * Properties for the task that validates connection to SQL Server and source server requirements\n * for online migration\n */\nexport interface ConnectToSourceSqlServerSyncTaskProperties {\n  /**\n   * Polymorphic Discriminator\n   */\n  taskType: \"ConnectToSource.SqlServer.Sync\";\n  /**\n   * Array of errors. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly errors?: ODataError[];\n  /**\n   * The state of the task. This is ignored if submitted. Possible values include: 'Unknown',\n   * 'Queued', 'Running', 'Canceled', 'Succeeded', 'Failed', 'FailedInputValidation', 'Faulted'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: TaskState;\n  /**\n   * Array of command properties.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly commands?: CommandPropertiesUnion[];\n  /**\n   * Key value pairs of client data to attach meta data information to task\n   */\n  clientData?: { [propertyName: string]: string };\n  /**\n   * Task input\n   */\n  input?: ConnectToSourceSqlServerTaskInput;\n  /**\n   * Task output. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly output?: ConnectToSourceSqlServerTaskOutputUnion[];\n}\n\n/**\n * Properties for the task that validates connection to SQL Server and also validates source server\n * requirements\n */\nexport interface ConnectToSourceSqlServerTaskProperties {\n  /**\n   * Polymorphic Discriminator\n   */\n  taskType: \"ConnectToSource.SqlServer\";\n  /**\n   * Array of errors. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly errors?: ODataError[];\n  /**\n   * The state of the task. This is ignored if submitted. Possible values include: 'Unknown',\n   * 'Queued', 'Running', 'Canceled', 'Succeeded', 'Failed', 'FailedInputValidation', 'Faulted'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: TaskState;\n  /**\n   * Array of command properties.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly commands?: CommandPropertiesUnion[];\n  /**\n   * Key value pairs of client data to attach meta data information to task\n   */\n  clientData?: { [propertyName: string]: string };\n  /**\n   * Task input\n   */\n  input?: ConnectToSourceSqlServerTaskInput;\n  /**\n   * Task output. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly output?: ConnectToSourceSqlServerTaskOutputUnion[];\n}\n\n/**\n * Describes a MongoDB shard key\n */\nexport interface MongoDbShardKeyInfo {\n  /**\n   * The fields within the shard key\n   */\n  fields: MongoDbShardKeyField[];\n  /**\n   * Whether the shard key is unique\n   */\n  isUnique: boolean;\n}\n\n/**\n * Describes a database or collection within a MongoDB data source\n */\nexport interface MongoDbObjectInfo {\n  /**\n   * The average document size, or -1 if the average size is unknown\n   */\n  averageDocumentSize: number;\n  /**\n   * The estimated total data size, in bytes, or -1 if the size is unknown.\n   */\n  dataSize: number;\n  /**\n   * The estimated total number of documents, or -1 if the document count is unknown\n   */\n  documentCount: number;\n  /**\n   * The unqualified name of the database or collection\n   */\n  name: string;\n  /**\n   * The qualified name of the database or collection. For a collection, this is the\n   * database-qualified name.\n   */\n  qualifiedName: string;\n}\n\n/**\n * Describes a supported collection within a MongoDB database\n */\nexport interface MongoDbCollectionInfo extends MongoDbObjectInfo {\n  /**\n   * The name of the database containing the collection\n   */\n  databaseName: string;\n  /**\n   * Whether the collection is a capped collection (i.e. whether it has a fixed size and acts like\n   * a circular buffer)\n   */\n  isCapped: boolean;\n  /**\n   * Whether the collection is system collection\n   */\n  isSystemCollection: boolean;\n  /**\n   * Whether the collection is a view of another collection\n   */\n  isView: boolean;\n  /**\n   * The shard key on the collection, or null if the collection is not sharded\n   */\n  shardKey?: MongoDbShardKeyInfo;\n  /**\n   * Whether the database has sharding enabled. Note that the migration task will enable sharding\n   * on the target if necessary.\n   */\n  supportsSharding: boolean;\n  /**\n   * The name of the collection that this is a view of, if IsView is true\n   */\n  viewOf?: string;\n}\n\n/**\n * Describes a database within a MongoDB data source\n */\nexport interface MongoDbDatabaseInfo extends MongoDbObjectInfo {\n  /**\n   * A list of supported collections in a MongoDB database\n   */\n  collections: MongoDbCollectionInfo[];\n  /**\n   * Whether the database has sharding enabled. Note that the migration task will enable sharding\n   * on the target if necessary.\n   */\n  supportsSharding: boolean;\n}\n\n/**\n * Describes a MongoDB data source\n */\nexport interface MongoDbClusterInfo {\n  /**\n   * A list of non-system databases in the cluster\n   */\n  databases: MongoDbDatabaseInfo[];\n  /**\n   * Whether the cluster supports sharded collections\n   */\n  supportsSharding: boolean;\n  /**\n   * The type of data source. Possible values include: 'BlobContainer', 'CosmosDb', 'MongoDb'\n   */\n  type: MongoDbClusterType;\n  /**\n   * The version of the data source in the form x.y.z (e.g. 3.6.7). Not used if Type is\n   * BlobContainer.\n   */\n  version: string;\n}\n\n/**\n * Properties for the task that validates the connection to and provides information about a\n * MongoDB server\n */\nexport interface ConnectToMongoDbTaskProperties {\n  /**\n   * Polymorphic Discriminator\n   */\n  taskType: \"Connect.MongoDb\";\n  /**\n   * Array of errors. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly errors?: ODataError[];\n  /**\n   * The state of the task. This is ignored if submitted. Possible values include: 'Unknown',\n   * 'Queued', 'Running', 'Canceled', 'Succeeded', 'Failed', 'FailedInputValidation', 'Faulted'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: TaskState;\n  /**\n   * Array of command properties.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly commands?: CommandPropertiesUnion[];\n  /**\n   * Key value pairs of client data to attach meta data information to task\n   */\n  clientData?: { [propertyName: string]: string };\n  input?: MongoDbConnectionInfo;\n  /**\n   * An array containing a single MongoDbClusterInfo object\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly output?: MongoDbClusterInfo[];\n}\n\n/**\n * A task resource\n */\nexport interface ProjectTask extends Resource {\n  /**\n   * HTTP strong entity tag value. This is ignored if submitted.\n   */\n  etag?: string;\n  /**\n   * Custom task properties\n   */\n  properties?: ProjectTaskPropertiesUnion;\n}\n\n/**\n * An Azure SKU instance\n */\nexport interface ServiceSku {\n  /**\n   * The unique name of the SKU, such as 'P3'\n   */\n  name?: string;\n  /**\n   * The tier of the SKU, such as 'Basic', 'General Purpose', or 'Business Critical'\n   */\n  tier?: string;\n  /**\n   * The SKU family, used when the service has multiple performance classes within a tier, such as\n   * 'A', 'D', etc. for virtual machines\n   */\n  family?: string;\n  /**\n   * The size of the SKU, used when the name alone does not denote a service size or when a SKU has\n   * multiple performance classes within a family, e.g. 'A1' for virtual machines\n   */\n  size?: string;\n  /**\n   * The capacity of the SKU, if it supports scaling\n   */\n  capacity?: number;\n}\n\n/**\n * A Database Migration Service resource\n */\nexport interface DataMigrationService extends TrackedResource {\n  /**\n   * HTTP strong entity tag value. Ignored if submitted\n   */\n  etag?: string;\n  /**\n   * The resource kind. Only 'vm' (the default) is supported.\n   */\n  kind?: string;\n  /**\n   * The resource's provisioning state. Possible values include: 'Accepted', 'Deleting',\n   * 'Deploying', 'Stopped', 'Stopping', 'Starting', 'FailedToStart', 'FailedToStop', 'Succeeded',\n   * 'Failed'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly provisioningState?: ServiceProvisioningState;\n  /**\n   * The public key of the service, used to encrypt secrets sent to the service\n   */\n  publicKey?: string;\n  /**\n   * The ID of the Microsoft.Network/virtualNetworks/subnets resource to which the service should\n   * be joined\n   */\n  virtualSubnetId: string;\n  /**\n   * Service SKU\n   */\n  sku?: ServiceSku;\n}\n\n/**\n * A resource type and proposed name\n */\nexport interface NameAvailabilityRequest {\n  /**\n   * The proposed resource name\n   */\n  name?: string;\n  /**\n   * The resource type chain (e.g. virtualMachines/extensions)\n   */\n  type?: string;\n}\n\n/**\n * Project Database Details\n */\nexport interface DatabaseInfo {\n  /**\n   * Name of the database\n   */\n  sourceDatabaseName: string;\n}\n\n/**\n * A project resource\n */\nexport interface Project extends TrackedResource {\n  /**\n   * Source platform for the project. Possible values include: 'SQL', 'MySQL', 'PostgreSql',\n   * 'MongoDb', 'Unknown'\n   */\n  sourcePlatform: ProjectSourcePlatform;\n  /**\n   * Target platform for the project. Possible values include: 'SQLDB', 'SQLMI', 'AzureDbForMySql',\n   * 'AzureDbForPostgreSql', 'MongoDb', 'Unknown'\n   */\n  targetPlatform: ProjectTargetPlatform;\n  /**\n   * UTC Date and time when project was created\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly creationTime?: Date;\n  /**\n   * Information for connecting to source\n   */\n  sourceConnectionInfo?: ConnectionInfoUnion;\n  /**\n   * Information for connecting to target\n   */\n  targetConnectionInfo?: ConnectionInfoUnion;\n  /**\n   * List of DatabaseInfo\n   */\n  databasesInfo?: DatabaseInfo[];\n  /**\n   * The project's provisioning state. Possible values include: 'Deleting', 'Succeeded'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly provisioningState?: ProjectProvisioningState;\n}\n\n/**\n * Error information.\n */\nexport interface ApiError {\n  /**\n   * Error information in OData format\n   */\n  error?: ODataError;\n}\n\n/**\n * File storage information.\n */\nexport interface FileStorageInfo {\n  /**\n   * A URI that can be used to access the file content.\n   */\n  uri?: string;\n  headers?: { [propertyName: string]: string };\n}\n\n/**\n * Localized display text\n */\nexport interface ServiceOperationDisplay {\n  /**\n   * The localized resource provider name\n   */\n  provider?: string;\n  /**\n   * The localized resource type name\n   */\n  resource?: string;\n  /**\n   * The localized operation name\n   */\n  operation?: string;\n  /**\n   * The localized operation description\n   */\n  description?: string;\n}\n\n/**\n * Description of an action supported by the Database Migration Service\n */\nexport interface ServiceOperation {\n  /**\n   * The fully qualified action name, e.g. Microsoft.DataMigration/services/read\n   */\n  name?: string;\n  /**\n   * Localized display text\n   */\n  display?: ServiceOperationDisplay;\n}\n\n/**\n * The name of the quota\n */\nexport interface QuotaName {\n  /**\n   * The localized name of the quota\n   */\n  localizedValue?: string;\n  /**\n   * The unlocalized name (or ID) of the quota\n   */\n  value?: string;\n}\n\n/**\n * Describes a quota for or usage details about a resource\n */\nexport interface Quota {\n  /**\n   * The current value of the quota. If null or missing, the current value cannot be determined in\n   * the context of the request.\n   */\n  currentValue?: number;\n  /**\n   * The resource ID of the quota object\n   */\n  id?: string;\n  /**\n   * The maximum value of the quota. If null or missing, the quota has no maximum, in which case it\n   * merely tracks usage.\n   */\n  limit?: number;\n  /**\n   * The name of the quota\n   */\n  name?: QuotaName;\n  /**\n   * The unit for the quota, such as Count, Bytes, BytesPerSecond, etc.\n   */\n  unit?: string;\n}\n\n/**\n * Indicates whether a proposed resource name is available\n */\nexport interface NameAvailabilityResponse {\n  /**\n   * If true, the name is valid and available. If false, 'reason' describes why not.\n   */\n  nameAvailable?: boolean;\n  /**\n   * The reason why the name is not available, if nameAvailable is false. Possible values include:\n   * 'AlreadyExists', 'Invalid'\n   */\n  reason?: NameCheckFailureReason;\n  /**\n   * The localized reason why the name is not available, if nameAvailable is false\n   */\n  message?: string;\n}\n\n/**\n * SKU name, tier, etc.\n */\nexport interface AvailableServiceSkuSku {\n  /**\n   * The name of the SKU\n   */\n  name?: string;\n  /**\n   * SKU family\n   */\n  family?: string;\n  /**\n   * SKU size\n   */\n  size?: string;\n  /**\n   * The tier of the SKU, such as \"Basic\", \"General Purpose\", or \"Business Critical\"\n   */\n  tier?: string;\n}\n\n/**\n * A description of the scaling capacities of the SKU\n */\nexport interface AvailableServiceSkuCapacity {\n  /**\n   * The minimum capacity, usually 0 or 1.\n   */\n  minimum?: number;\n  /**\n   * The maximum capacity\n   */\n  maximum?: number;\n  /**\n   * The default capacity\n   */\n  default?: number;\n  /**\n   * The scalability approach. Possible values include: 'none', 'manual', 'automatic'\n   */\n  scaleType?: ServiceScalability;\n}\n\n/**\n * Describes the available service SKU.\n */\nexport interface AvailableServiceSku {\n  /**\n   * The resource type, including the provider namespace\n   */\n  resourceType?: string;\n  /**\n   * SKU name, tier, etc.\n   */\n  sku?: AvailableServiceSkuSku;\n  /**\n   * A description of the scaling capacities of the SKU\n   */\n  capacity?: AvailableServiceSkuCapacity;\n}\n\n/**\n * Service health status\n */\nexport interface DataMigrationServiceStatusResponse {\n  /**\n   * The DMS instance agent version\n   */\n  agentVersion?: string;\n  /**\n   * The machine-readable status, such as 'Initializing', 'Offline', 'Online', 'Deploying',\n   * 'Deleting', 'Stopped', 'Stopping', 'Starting', 'FailedToStart', 'FailedToStop' or 'Failed'\n   */\n  status?: string;\n  /**\n   * The services virtual machine size, such as 'Standard_D2_v2'\n   */\n  vmSize?: string;\n  /**\n   * The list of supported task types\n   */\n  supportedTaskTypes?: string[];\n}\n\n/**\n * Describes scaling information of a SKU.\n */\nexport interface ResourceSkuRestrictions {\n  /**\n   * The type of restrictions. Possible values include: 'location'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly type?: ResourceSkuRestrictionsType;\n  /**\n   * The value of restrictions. If the restriction type is set to location. This would be different\n   * locations where the SKU is restricted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly values?: string[];\n  /**\n   * The reason code for restriction. Possible values include: 'QuotaId',\n   * 'NotAvailableForSubscription'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly reasonCode?: ResourceSkuRestrictionsReasonCode;\n}\n\n/**\n * Describes The SKU capabilities object.\n */\nexport interface ResourceSkuCapabilities {\n  /**\n   * An invariant to describe the feature.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * An invariant if the feature is measured by quantity.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly value?: string;\n}\n\n/**\n * Describes metadata for retrieving price info.\n */\nexport interface ResourceSkuCosts {\n  /**\n   * Used for querying price from commerce.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly meterID?: string;\n  /**\n   * The multiplier is needed to extend the base metered cost.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly quantity?: number;\n  /**\n   * An invariant to show the extended unit.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly extendedUnit?: string;\n}\n\n/**\n * Describes scaling information of a SKU.\n */\nexport interface ResourceSkuCapacity {\n  /**\n   * The minimum capacity.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly minimum?: number;\n  /**\n   * The maximum capacity.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly maximum?: number;\n  /**\n   * The default capacity.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly default?: number;\n  /**\n   * The scale type applicable to the SKU. Possible values include: 'Automatic', 'Manual', 'None'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly scaleType?: ResourceSkuCapacityScaleType;\n}\n\n/**\n * Describes an available DMS SKU.\n */\nexport interface ResourceSku {\n  /**\n   * The type of resource the SKU applies to.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly resourceType?: string;\n  /**\n   * The name of SKU.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * Specifies the tier of DMS in a scale set.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly tier?: string;\n  /**\n   * The Size of the SKU.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly size?: string;\n  /**\n   * The Family of this particular SKU.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly family?: string;\n  /**\n   * The Kind of resources that are supported in this SKU.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly kind?: string;\n  /**\n   * Not used.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly capacity?: ResourceSkuCapacity;\n  /**\n   * The set of locations that the SKU is available.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly locations?: string[];\n  /**\n   * The api versions that support this SKU.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly apiVersions?: string[];\n  /**\n   * Metadata for retrieving price info.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly costs?: ResourceSkuCosts[];\n  /**\n   * A name value pair to describe the capability.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly capabilities?: ResourceSkuCapabilities[];\n  /**\n   * The restrictions because of which SKU cannot be used. This is empty if there are no\n   * restrictions.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly restrictions?: ResourceSkuRestrictions[];\n}\n\n/**\n * Input for the task that validates MySQL database connection\n */\nexport interface ConnectToSourceMySqlTaskInput {\n  /**\n   * Information for connecting to MySQL source\n   */\n  sourceConnectionInfo: MySqlConnectionInfo;\n  /**\n   * Target Platform for the migration. Possible values include: 'SqlServer', 'AzureDbForMySQL'\n   */\n  targetPlatform?: MySqlTargetPlatformType;\n  /**\n   * Permission group for validations. Possible values include: 'Default',\n   * 'MigrationFromSqlServerToAzureDB', 'MigrationFromSqlServerToAzureMI',\n   * 'MigrationFromMySQLToAzureDBForMySQL'\n   */\n  checkPermissionsGroup?: ServerLevelPermissionsGroup;\n}\n\n/**\n * Server properties for MySQL type source\n */\nexport interface ServerProperties {\n  /**\n   * Name of the server platform\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly serverPlatform?: string;\n  /**\n   * Name of the server\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly serverName?: string;\n  /**\n   * Version of the database server\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly serverVersion?: string;\n  /**\n   * Edition of the database server\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly serverEdition?: string;\n  /**\n   * Version of the operating system\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly serverOperatingSystemVersion?: string;\n  /**\n   * Number of databases in the server\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly serverDatabaseCount?: number;\n}\n\n/**\n * Output for connect to MySQL type source\n */\nexport interface ConnectToSourceNonSqlTaskOutput {\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Server brand version\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly sourceServerBrandVersion?: string;\n  /**\n   * Server properties\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly serverProperties?: ServerProperties;\n  /**\n   * List of databases on the server\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly databases?: string[];\n  /**\n   * Validation errors associated with the task\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly validationErrors?: ReportableException[];\n}\n\n/**\n * Properties for the task that validates MySQL database connection\n */\nexport interface ConnectToSourceMySqlTaskProperties {\n  /**\n   * Polymorphic Discriminator\n   */\n  taskType: \"ConnectToSource.MySql\";\n  /**\n   * Array of errors. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly errors?: ODataError[];\n  /**\n   * The state of the task. This is ignored if submitted. Possible values include: 'Unknown',\n   * 'Queued', 'Running', 'Canceled', 'Succeeded', 'Failed', 'FailedInputValidation', 'Faulted'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: TaskState;\n  /**\n   * Array of command properties.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly commands?: CommandPropertiesUnion[];\n  /**\n   * Key value pairs of client data to attach meta data information to task\n   */\n  clientData?: { [propertyName: string]: string };\n  /**\n   * Task input\n   */\n  input?: ConnectToSourceMySqlTaskInput;\n  /**\n   * Task output. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly output?: ConnectToSourceNonSqlTaskOutput[];\n}\n\n/**\n * Settings for migrating schema from source to target\n */\nexport interface SchemaMigrationSetting {\n  /**\n   * Option on how to migrate the schema. Possible values include: 'None', 'ExtractFromSource',\n   * 'UseStorageFile'\n   */\n  schemaOption?: SchemaMigrationOption;\n  /**\n   * Resource Identifier of a file resource containing the uploaded schema file\n   */\n  fileId?: string;\n}\n\n/**\n * Database input for migrate schema Sql Server to Azure SQL Server scenario\n */\nexport interface MigrateSchemaSqlServerSqlDbDatabaseInput {\n  /**\n   * Name of source database\n   */\n  name?: string;\n  /**\n   * Name of target database\n   */\n  targetDatabaseName?: string;\n  /**\n   * Database schema migration settings\n   */\n  schemaSetting?: SchemaMigrationSetting;\n}\n\n/**\n * Input for task that migrates Schema for SQL Server databases to Azure SQL databases\n */\nexport interface MigrateSchemaSqlServerSqlDbTaskInput extends SqlMigrationTaskInput {\n  /**\n   * Databases to migrate\n   */\n  selectedDatabases: MigrateSchemaSqlServerSqlDbDatabaseInput[];\n}\n\n/**\n * Contains the possible cases for MigrateSchemaSqlServerSqlDbTaskOutput.\n */\nexport type MigrateSchemaSqlServerSqlDbTaskOutputUnion = MigrateSchemaSqlServerSqlDbTaskOutput | MigrateSchemaSqlServerSqlDbTaskOutputMigrationLevel | MigrateSchemaSqlServerSqlDbTaskOutputDatabaseLevel | MigrateSchemaSqlServerSqlDbTaskOutputError | MigrateSchemaSqlTaskOutputError;\n\n/**\n * Output for the task that migrates Schema for SQL Server databases to Azure SQL databases\n */\nexport interface MigrateSchemaSqlServerSqlDbTaskOutput {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"MigrateSchemaSqlServerSqlDbTaskOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n}\n\n/**\n * Properties for task that migrates Schema for SQL Server databases to Azure SQL databases\n */\nexport interface MigrateSchemaSqlServerSqlDbTaskProperties {\n  /**\n   * Polymorphic Discriminator\n   */\n  taskType: \"MigrateSchemaSqlServerSqlDb\";\n  /**\n   * Array of errors. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly errors?: ODataError[];\n  /**\n   * The state of the task. This is ignored if submitted. Possible values include: 'Unknown',\n   * 'Queued', 'Running', 'Canceled', 'Succeeded', 'Failed', 'FailedInputValidation', 'Faulted'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: TaskState;\n  /**\n   * Array of command properties.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly commands?: CommandPropertiesUnion[];\n  /**\n   * Key value pairs of client data to attach meta data information to task\n   */\n  clientData?: { [propertyName: string]: string };\n  /**\n   * Task input\n   */\n  input?: MigrateSchemaSqlServerSqlDbTaskInput;\n  /**\n   * Task output. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly output?: MigrateSchemaSqlServerSqlDbTaskOutputUnion[];\n}\n\n/**\n * An interface representing MigrateSchemaSqlServerSqlDbTaskOutputMigrationLevel.\n */\nexport interface MigrateSchemaSqlServerSqlDbTaskOutputMigrationLevel {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"MigrationLevelOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Overall state of the schema migration. Possible values include: 'None', 'InProgress',\n   * 'Failed', 'Warning', 'Completed', 'Skipped', 'Stopped'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: MigrationState;\n  /**\n   * Migration start time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly startedOn?: Date;\n  /**\n   * Migration end time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly endedOn?: Date;\n  /**\n   * Source server version\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly sourceServerVersion?: string;\n  /**\n   * Source server brand version\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly sourceServerBrandVersion?: string;\n  /**\n   * Target server version\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly targetServerVersion?: string;\n  /**\n   * Target server brand version\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly targetServerBrandVersion?: string;\n}\n\n/**\n * An interface representing MigrateSchemaSqlServerSqlDbTaskOutputDatabaseLevel.\n */\nexport interface MigrateSchemaSqlServerSqlDbTaskOutputDatabaseLevel {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"DatabaseLevelOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The name of the database\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly databaseName?: string;\n  /**\n   * State of the schema migration for this database. Possible values include: 'None',\n   * 'InProgress', 'Failed', 'Warning', 'Completed', 'Skipped', 'Stopped'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: MigrationState;\n  /**\n   * Schema migration stage for this database. Possible values include: 'NotStarted',\n   * 'ValidatingInputs', 'CollectingObjects', 'DownloadingScript', 'GeneratingScript',\n   * 'UploadingScript', 'DeployingSchema', 'Completed', 'CompletedWithWarnings', 'Failed'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly stage?: SchemaMigrationStage;\n  /**\n   * Migration start time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly startedOn?: Date;\n  /**\n   * Migration end time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly endedOn?: Date;\n  /**\n   * Prefix string to use for querying errors for this database\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly databaseErrorResultPrefix?: string;\n  /**\n   * Prefix string to use for querying schema errors for this database\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly schemaErrorResultPrefix?: string;\n  /**\n   * Number of successful operations for this database\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly numberOfSuccessfulOperations?: number;\n  /**\n   * Number of failed operations for this database\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly numberOfFailedOperations?: number;\n  /**\n   * Identifier for the file resource containing the schema of this database\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly fileId?: string;\n}\n\n/**\n * An interface representing MigrateSchemaSqlServerSqlDbTaskOutputError.\n */\nexport interface MigrateSchemaSqlServerSqlDbTaskOutputError {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"SchemaErrorOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Schema command which failed\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly commandText?: string;\n  /**\n   * Reason of failure\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly errorText?: string;\n}\n\n/**\n * An interface representing MigrateSchemaSqlTaskOutputError.\n */\nexport interface MigrateSchemaSqlTaskOutputError {\n  /**\n   * Polymorphic Discriminator\n   */\n  resultType: \"ErrorOutput\";\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Migration error\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly error?: ReportableException;\n}\n\n/**\n * Describes the input to the 'cancel' and 'restart' MongoDB migration commands\n */\nexport interface MongoDbCommandInput {\n  /**\n   * The qualified name of a database or collection to act upon, or null to act upon the entire\n   * migration\n   */\n  objectName?: string;\n}\n\n/**\n * Properties for the command that cancels a migration in whole or in part\n */\nexport interface MongoDbCancelCommand {\n  /**\n   * Polymorphic Discriminator\n   */\n  commandType: \"cancel\";\n  /**\n   * Array of errors. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly errors?: ODataError[];\n  /**\n   * The state of the command. This is ignored if submitted. Possible values include: 'Unknown',\n   * 'Accepted', 'Running', 'Succeeded', 'Failed'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: CommandState;\n  /**\n   * Command input\n   */\n  input?: MongoDbCommandInput;\n}\n\n/**\n * Describes the input to the 'finish' MongoDB migration command\n */\nexport interface MongoDbFinishCommandInput extends MongoDbCommandInput {\n  /**\n   * If true, replication for the affected objects will be stopped immediately. If false, the\n   * migrator will finish replaying queued events before finishing the replication.\n   */\n  immediate: boolean;\n}\n\n/**\n * Properties for the command that finishes a migration in whole or in part\n */\nexport interface MongoDbFinishCommand {\n  /**\n   * Polymorphic Discriminator\n   */\n  commandType: \"finish\";\n  /**\n   * Array of errors. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly errors?: ODataError[];\n  /**\n   * The state of the command. This is ignored if submitted. Possible values include: 'Unknown',\n   * 'Accepted', 'Running', 'Succeeded', 'Failed'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: CommandState;\n  /**\n   * Command input\n   */\n  input?: MongoDbFinishCommandInput;\n}\n\n/**\n * Properties for the command that restarts a migration in whole or in part\n */\nexport interface MongoDbRestartCommand {\n  /**\n   * Polymorphic Discriminator\n   */\n  commandType: \"restart\";\n  /**\n   * Array of errors. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly errors?: ODataError[];\n  /**\n   * The state of the command. This is ignored if submitted. Possible values include: 'Unknown',\n   * 'Accepted', 'Running', 'Succeeded', 'Failed'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: CommandState;\n  /**\n   * Command input\n   */\n  input?: MongoDbCommandInput;\n}\n\n/**\n * Information about an Oracle OCI driver.\n */\nexport interface OracleOCIDriverInfo {\n  /**\n   * The name of the driver package\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly driverName?: string;\n  /**\n   * The size in bytes of the driver package\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly driverSize?: string;\n  /**\n   * The MD5 Base64 encoded checksum for the driver package.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly archiveChecksum?: string;\n  /**\n   * The checksum for the driver package provided by Oracle.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly oracleChecksum?: string;\n  /**\n   * Version listed in the OCI assembly 'oci.dll'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly assemblyVersion?: string;\n  /**\n   * List of Oracle database versions supported by this driver. Only major minor of the version is\n   * listed.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly supportedOracleVersions?: string[];\n}\n\n/**\n * Input for the service task to check for OCI drivers.\n */\nexport interface CheckOCIDriverTaskInput {\n  /**\n   * Version of the source server to check against.  Optional.\n   */\n  serverVersion?: string;\n}\n\n/**\n * Output for the service task to check for OCI drivers.\n */\nexport interface CheckOCIDriverTaskOutput {\n  /**\n   * Information about the installed driver if found and valid.\n   */\n  installedDriver?: OracleOCIDriverInfo;\n  /**\n   * Validation errors\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly validationErrors?: ReportableException[];\n}\n\n/**\n * Input for the service task to upload an OCI driver.\n */\nexport interface UploadOCIDriverTaskInput {\n  /**\n   * File share information for the OCI driver archive.\n   */\n  driverShare?: FileShare;\n}\n\n/**\n * Output for the service task to upload an OCI driver.\n */\nexport interface UploadOCIDriverTaskOutput {\n  /**\n   * The name of the driver package that was validated and uploaded.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly driverPackageName?: string;\n  /**\n   * Validation errors\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly validationErrors?: ReportableException[];\n}\n\n/**\n * Input for the service task to install an OCI driver.\n */\nexport interface InstallOCIDriverTaskInput {\n  /**\n   * Name of the uploaded driver package to install.\n   */\n  driverPackageName?: string;\n}\n\n/**\n * Output for the service task to install an OCI driver.\n */\nexport interface InstallOCIDriverTaskOutput {\n  /**\n   * Validation errors\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly validationErrors?: ReportableException[];\n}\n\n/**\n * Properties for the task that checks for OCI drivers.\n */\nexport interface CheckOCIDriverTaskProperties {\n  /**\n   * Polymorphic Discriminator\n   */\n  taskType: \"Service.Check.OCI\";\n  /**\n   * Array of errors. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly errors?: ODataError[];\n  /**\n   * The state of the task. This is ignored if submitted. Possible values include: 'Unknown',\n   * 'Queued', 'Running', 'Canceled', 'Succeeded', 'Failed', 'FailedInputValidation', 'Faulted'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: TaskState;\n  /**\n   * Array of command properties.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly commands?: CommandPropertiesUnion[];\n  /**\n   * Key value pairs of client data to attach meta data information to task\n   */\n  clientData?: { [propertyName: string]: string };\n  input?: CheckOCIDriverTaskInput;\n  /**\n   * Task output. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly output?: CheckOCIDriverTaskOutput[];\n}\n\n/**\n * Properties for the task that uploads an OCI driver.\n */\nexport interface UploadOCIDriverTaskProperties {\n  /**\n   * Polymorphic Discriminator\n   */\n  taskType: \"Service.Upload.OCI\";\n  /**\n   * Array of errors. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly errors?: ODataError[];\n  /**\n   * The state of the task. This is ignored if submitted. Possible values include: 'Unknown',\n   * 'Queued', 'Running', 'Canceled', 'Succeeded', 'Failed', 'FailedInputValidation', 'Faulted'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: TaskState;\n  /**\n   * Array of command properties.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly commands?: CommandPropertiesUnion[];\n  /**\n   * Key value pairs of client data to attach meta data information to task\n   */\n  clientData?: { [propertyName: string]: string };\n  input?: UploadOCIDriverTaskInput;\n  /**\n   * Task output. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly output?: UploadOCIDriverTaskOutput[];\n}\n\n/**\n * Properties for the task that installs an OCI driver.\n */\nexport interface InstallOCIDriverTaskProperties {\n  /**\n   * Polymorphic Discriminator\n   */\n  taskType: \"Service.Install.OCI\";\n  /**\n   * Array of errors. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly errors?: ODataError[];\n  /**\n   * The state of the task. This is ignored if submitted. Possible values include: 'Unknown',\n   * 'Queued', 'Running', 'Canceled', 'Succeeded', 'Failed', 'FailedInputValidation', 'Faulted'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: TaskState;\n  /**\n   * Array of command properties.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly commands?: CommandPropertiesUnion[];\n  /**\n   * Key value pairs of client data to attach meta data information to task\n   */\n  clientData?: { [propertyName: string]: string };\n  input?: InstallOCIDriverTaskInput;\n  /**\n   * Task output. This is ignored if submitted.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly output?: InstallOCIDriverTaskOutput[];\n}\n\n/**\n * Information about a single database\n */\nexport interface Database {\n  /**\n   * Unique identifier for the database\n   */\n  id?: string;\n  /**\n   * Name of the database\n   */\n  name?: string;\n  /**\n   * SQL Server compatibility level of database. Possible values include: 'CompatLevel80',\n   * 'CompatLevel90', 'CompatLevel100', 'CompatLevel110', 'CompatLevel120', 'CompatLevel130',\n   * 'CompatLevel140'\n   */\n  compatibilityLevel?: DatabaseCompatLevel;\n  /**\n   * Collation name of the database\n   */\n  collation?: string;\n  /**\n   * Name of the server\n   */\n  serverName?: string;\n  /**\n   * Fully qualified name\n   */\n  fqdn?: string;\n  /**\n   * Install id of the database\n   */\n  installId?: string;\n  /**\n   * Version of the server\n   */\n  serverVersion?: string;\n  /**\n   * Edition of the server\n   */\n  serverEdition?: string;\n  /**\n   * Product level of the server (RTM, SP, CTP).\n   */\n  serverLevel?: string;\n  /**\n   * Default path of the data files\n   */\n  serverDefaultDataPath?: string;\n  /**\n   * Default path of the log files\n   */\n  serverDefaultLogPath?: string;\n  /**\n   * Default path of the backup folder\n   */\n  serverDefaultBackupPath?: string;\n  /**\n   * Number of cores on the server\n   */\n  serverCoreCount?: number;\n  /**\n   * Number of cores on the server that have VISIBLE ONLINE status\n   */\n  serverVisibleOnlineCoreCount?: number;\n  /**\n   * State of the database. Possible values include: 'Online', 'Restoring', 'Recovering',\n   * 'RecoveryPending', 'Suspect', 'Emergency', 'Offline', 'Copying', 'OfflineSecondary'\n   */\n  databaseState?: DatabaseState;\n  /**\n   * The unique Server Id\n   */\n  serverId?: string;\n}\n\n/**\n * A representation of the name of an object in a database\n */\nexport interface DatabaseObjectName {\n  /**\n   * The unescaped name of the database containing the object\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly databaseName?: string;\n  /**\n   * The unescaped name of the object\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly objectName?: string;\n  /**\n   * The unescaped name of the schema containing the object\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly schemaName?: string;\n  /**\n   * Type of the object in the database. Possible values include: 'StoredProcedures', 'Table',\n   * 'User', 'View', 'Function'\n   */\n  objectType?: ObjectType;\n}\n\n/**\n * Metadata for tables selected in migration project\n */\nexport interface MigrationTableMetadata {\n  /**\n   * Source table name\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly sourceTableName?: string;\n  /**\n   * Target table name\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly targetTableName?: string;\n}\n\n/**\n * Common metadata for migration projects\n */\nexport interface DataMigrationProjectMetadata {\n  /**\n   * Source server name\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly sourceServerName?: string;\n  /**\n   * Source server port number\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly sourceServerPort?: string;\n  /**\n   * Source username\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly sourceUsername?: string;\n  /**\n   * Target server name\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly targetServerName?: string;\n  /**\n   * Target username\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly targetUsername?: string;\n  /**\n   * Target database name\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly targetDbName?: string;\n  /**\n   * Whether target connection is Windows authentication\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly targetUsingWinAuth?: boolean;\n  /**\n   * List of tables selected for migration\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly selectedMigrationTables?: MigrationTableMetadata[];\n}\n\n/**\n * Input for the task that reads configuration from project artifacts\n */\nexport interface GetProjectDetailsNonSqlTaskInput {\n  /**\n   * Name of the migration project\n   */\n  projectName: string;\n  /**\n   * A URL that points to the location to access project artifacts\n   */\n  projectLocation: string;\n}\n\n/**\n * Defines metadata for table to be migrated\n */\nexport interface NonSqlDataMigrationTable {\n  /**\n   * Source table name\n   */\n  sourceName?: string;\n}\n\n/**\n * Base class for non sql migration task input\n */\nexport interface NonSqlMigrationTaskInput {\n  /**\n   * Information for connecting to target\n   */\n  targetConnectionInfo: SqlConnectionInfo;\n  /**\n   * Target database name\n   */\n  targetDatabaseName: string;\n  /**\n   * Name of the migration project\n   */\n  projectName: string;\n  /**\n   * A URL that points to the drop location to access project artifacts\n   */\n  projectLocation: string;\n  /**\n   * Metadata of the tables selected for migration\n   */\n  selectedTables: NonSqlDataMigrationTable[];\n}\n\n/**\n * Migration Task errors\n */\nexport interface DataMigrationError {\n  /**\n   * Error description\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly message?: string;\n  /**\n   * Possible values include: 'Default', 'Warning', 'Error'\n   */\n  type?: ErrorType;\n}\n\n/**\n * Object used to report the data migration results of a table\n */\nexport interface NonSqlDataMigrationTableResult {\n  /**\n   * Result code of the data migration. Possible values include: 'Initial', 'Completed',\n   * 'ObjectNotExistsInSource', 'ObjectNotExistsInTarget', 'TargetObjectIsInaccessible',\n   * 'FatalError'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly resultCode?: DataMigrationResultCode;\n  /**\n   * Name of the source table\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly sourceName?: string;\n  /**\n   * Name of the target table\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly targetName?: string;\n  /**\n   * Number of rows in the source table\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly sourceRowCount?: number;\n  /**\n   * Number of rows in the target table\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly targetRowCount?: number;\n  /**\n   * Time taken to migrate the data\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly elapsedTimeInMiliseconds?: number;\n  /**\n   * List of errors, if any, during migration\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly errors?: DataMigrationError[];\n}\n\n/**\n * Base class for non sql migration task output\n */\nexport interface NonSqlMigrationTaskOutput {\n  /**\n   * Result identifier\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Migration start time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly startedOn?: Date;\n  /**\n   * Migration end time\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly endedOn?: Date;\n  /**\n   * Current state of migration. Possible values include: 'Default', 'Connecting',\n   * 'SourceAndTargetSelected', 'SelectLogins', 'Configured', 'Running', 'Error', 'Stopped',\n   * 'Completed', 'CompletedWithWarnings'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly status?: MigrationStatus;\n  /**\n   * Results of the migration. The key contains the table name and the value the table result\n   * object\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly dataMigrationTableResults?: { [propertyName: string]: NonSqlDataMigrationTableResult };\n  /**\n   * Message about the progress of the migration\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly progressMessage?: string;\n  /**\n   * Name of source server\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly sourceServerName?: string;\n  /**\n   * Name of target server\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly targetServerName?: string;\n}\n\n/**\n * Database file specific information for input\n */\nexport interface DatabaseFileInput {\n  /**\n   * Unique identifier for database file\n   */\n  id?: string;\n  /**\n   * Logical name of the file\n   */\n  logicalName?: string;\n  /**\n   * Operating-system full path of the file\n   */\n  physicalFullName?: string;\n  /**\n   * Suggested full path of the file for restoring\n   */\n  restoreFullName?: string;\n  /**\n   * Database file type. Possible values include: 'Rows', 'Log', 'Filestream', 'NotSupported',\n   * 'Fulltext'\n   */\n  fileType?: DatabaseFileType;\n}\n\n/**\n * Database specific information for SQL to SQL migration task inputs\n */\nexport interface MigrateSqlServerSqlServerDatabaseInput {\n  /**\n   * Name of the database\n   */\n  name?: string;\n  /**\n   * Name of the database at destination\n   */\n  restoreDatabaseName?: string;\n  /**\n   * The backup and restore folder\n   */\n  backupAndRestoreFolder?: string;\n  /**\n   * The list of database files\n   */\n  databaseFiles?: DatabaseFileInput[];\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ServicesDeleteMethodOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * Delete the resource even if it contains running tasks\n   */\n  deleteRunningTasks?: boolean;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ServicesBeginDeleteMethodOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * Delete the resource even if it contains running tasks\n   */\n  deleteRunningTasks?: boolean;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface TasksListOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * Filter tasks by task type\n   */\n  taskType?: string;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface TasksGetOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * Expand the response\n   */\n  expand?: string;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface TasksDeleteMethodOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * Delete the resource even if it contains running tasks\n   */\n  deleteRunningTasks?: boolean;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ServiceTasksListOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * Filter tasks by task type\n   */\n  taskType?: string;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ServiceTasksGetOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * Expand the response\n   */\n  expand?: string;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ServiceTasksDeleteMethodOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * Delete the resource even if it contains running tasks\n   */\n  deleteRunningTasks?: boolean;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ProjectsDeleteMethodOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * Delete the resource even if it contains running tasks\n   */\n  deleteRunningTasks?: boolean;\n}\n\n/**\n * An interface representing DataMigrationServiceClientOptions.\n */\nexport interface DataMigrationServiceClientOptions extends AzureServiceClientOptions {\n  baseUri?: string;\n}\n\n/**\n * @interface\n * The DMS List SKUs operation response.\n * @extends Array<ResourceSku>\n */\nexport interface ResourceSkusResult extends Array<ResourceSku> {\n  /**\n   * The uri to fetch the next page of DMS SKUs. Call ListNext() with this to fetch the next page\n   * of DMS SKUs.\n   */\n  nextLink?: string;\n}\n\n/**\n * @interface\n * OData page of available SKUs\n * @extends Array<AvailableServiceSku>\n */\nexport interface ServiceSkuList extends Array<AvailableServiceSku> {\n  /**\n   * URL to load the next page of service SKUs\n   */\n  nextLink?: string;\n}\n\n/**\n * @interface\n * OData page of service objects\n * @extends Array<DataMigrationService>\n */\nexport interface DataMigrationServiceList extends Array<DataMigrationService> {\n  /**\n   * URL to load the next page of services\n   */\n  nextLink?: string;\n}\n\n/**\n * @interface\n * OData page of tasks\n * @extends Array<ProjectTask>\n */\nexport interface TaskList extends Array<ProjectTask> {\n  /**\n   * URL to load the next page of tasks\n   */\n  nextLink?: string;\n}\n\n/**\n * @interface\n * OData page of project resources\n * @extends Array<Project>\n */\nexport interface ProjectList extends Array<Project> {\n  /**\n   * URL to load the next page of projects\n   */\n  nextLink?: string;\n}\n\n/**\n * @interface\n * OData page of quota objects\n * @extends Array<Quota>\n */\nexport interface QuotaList extends Array<Quota> {\n  /**\n   * URL to load the next page of quotas, or null or missing if this is the last page\n   */\n  nextLink?: string;\n}\n\n/**\n * @interface\n * OData page of action (operation) objects\n * @extends Array<ServiceOperation>\n */\nexport interface ServiceOperationList extends Array<ServiceOperation> {\n  /**\n   * URL to load the next page of actions\n   */\n  nextLink?: string;\n}\n\n/**\n * @interface\n * OData page of files\n * @extends Array<ProjectFile>\n */\nexport interface FileList extends Array<ProjectFile> {\n  /**\n   * URL to load the next page of files\n   */\n  nextLink?: string;\n}\n\n/**\n * Defines values for CommandState.\n * Possible values include: 'Unknown', 'Accepted', 'Running', 'Succeeded', 'Failed'\n * @readonly\n * @enum {string}\n */\nexport type CommandState = 'Unknown' | 'Accepted' | 'Running' | 'Succeeded' | 'Failed';\n\n/**\n * Defines values for SsisMigrationStage.\n * Possible values include: 'None', 'Initialize', 'InProgress', 'Completed'\n * @readonly\n * @enum {string}\n */\nexport type SsisMigrationStage = 'None' | 'Initialize' | 'InProgress' | 'Completed';\n\n/**\n * Defines values for MigrationState.\n * Possible values include: 'None', 'InProgress', 'Failed', 'Warning', 'Completed', 'Skipped',\n * 'Stopped'\n * @readonly\n * @enum {string}\n */\nexport type MigrationState = 'None' | 'InProgress' | 'Failed' | 'Warning' | 'Completed' | 'Skipped' | 'Stopped';\n\n/**\n * Defines values for MigrationStatus.\n * Possible values include: 'Default', 'Connecting', 'SourceAndTargetSelected', 'SelectLogins',\n * 'Configured', 'Running', 'Error', 'Stopped', 'Completed', 'CompletedWithWarnings'\n * @readonly\n * @enum {string}\n */\nexport type MigrationStatus = 'Default' | 'Connecting' | 'SourceAndTargetSelected' | 'SelectLogins' | 'Configured' | 'Running' | 'Error' | 'Stopped' | 'Completed' | 'CompletedWithWarnings';\n\n/**\n * Defines values for SsisMigrationOverwriteOption.\n * Possible values include: 'Ignore', 'Overwrite'\n * @readonly\n * @enum {string}\n */\nexport type SsisMigrationOverwriteOption = 'Ignore' | 'Overwrite';\n\n/**\n * Defines values for SsisStoreType.\n * Possible values include: 'SsisCatalog'\n * @readonly\n * @enum {string}\n */\nexport type SsisStoreType = 'SsisCatalog';\n\n/**\n * Defines values for SqlSourcePlatform.\n * Possible values include: 'SqlOnPrem'\n * @readonly\n * @enum {string}\n */\nexport type SqlSourcePlatform = 'SqlOnPrem';\n\n/**\n * Defines values for AuthenticationType.\n * Possible values include: 'None', 'WindowsAuthentication', 'SqlAuthentication',\n * 'ActiveDirectoryIntegrated', 'ActiveDirectoryPassword'\n * @readonly\n * @enum {string}\n */\nexport type AuthenticationType = 'None' | 'WindowsAuthentication' | 'SqlAuthentication' | 'ActiveDirectoryIntegrated' | 'ActiveDirectoryPassword';\n\n/**\n * Defines values for MongoDbErrorType.\n * Possible values include: 'Error', 'ValidationError', 'Warning'\n * @readonly\n * @enum {string}\n */\nexport type MongoDbErrorType = 'Error' | 'ValidationError' | 'Warning';\n\n/**\n * Defines values for MongoDbMigrationState.\n * Possible values include: 'NotStarted', 'ValidatingInput', 'Initializing', 'Restarting',\n * 'Copying', 'InitialReplay', 'Replaying', 'Finalizing', 'Complete', 'Canceled', 'Failed'\n * @readonly\n * @enum {string}\n */\nexport type MongoDbMigrationState = 'NotStarted' | 'ValidatingInput' | 'Initializing' | 'Restarting' | 'Copying' | 'InitialReplay' | 'Replaying' | 'Finalizing' | 'Complete' | 'Canceled' | 'Failed';\n\n/**\n * Defines values for MongoDbShardKeyOrder.\n * Possible values include: 'Forward', 'Reverse', 'Hashed'\n * @readonly\n * @enum {string}\n */\nexport type MongoDbShardKeyOrder = 'Forward' | 'Reverse' | 'Hashed';\n\n/**\n * Defines values for MongoDbReplication.\n * Possible values include: 'Disabled', 'OneTime', 'Continuous'\n * @readonly\n * @enum {string}\n */\nexport type MongoDbReplication = 'Disabled' | 'OneTime' | 'Continuous';\n\n/**\n * Defines values for BackupType.\n * Possible values include: 'Database', 'TransactionLog', 'File', 'DifferentialDatabase',\n * 'DifferentialFile', 'Partial', 'DifferentialPartial'\n * @readonly\n * @enum {string}\n */\nexport type BackupType = 'Database' | 'TransactionLog' | 'File' | 'DifferentialDatabase' | 'DifferentialFile' | 'Partial' | 'DifferentialPartial';\n\n/**\n * Defines values for BackupMode.\n * Possible values include: 'CreateBackup', 'ExistingBackup'\n * @readonly\n * @enum {string}\n */\nexport type BackupMode = 'CreateBackup' | 'ExistingBackup';\n\n/**\n * Defines values for SyncTableMigrationState.\n * Possible values include: 'BEFORE_LOAD', 'FULL_LOAD', 'COMPLETED', 'CANCELED', 'ERROR', 'FAILED'\n * @readonly\n * @enum {string}\n */\nexport type SyncTableMigrationState = 'BEFORE_LOAD' | 'FULL_LOAD' | 'COMPLETED' | 'CANCELED' | 'ERROR' | 'FAILED';\n\n/**\n * Defines values for SyncDatabaseMigrationReportingState.\n * Possible values include: 'UNDEFINED', 'CONFIGURING', 'INITIALIAZING', 'STARTING', 'RUNNING',\n * 'READY_TO_COMPLETE', 'COMPLETING', 'COMPLETE', 'CANCELLING', 'CANCELLED', 'FAILED'\n * @readonly\n * @enum {string}\n */\nexport type SyncDatabaseMigrationReportingState = 'UNDEFINED' | 'CONFIGURING' | 'INITIALIAZING' | 'STARTING' | 'RUNNING' | 'READY_TO_COMPLETE' | 'COMPLETING' | 'COMPLETE' | 'CANCELLING' | 'CANCELLED' | 'FAILED';\n\n/**\n * Defines values for ValidationStatus.\n * Possible values include: 'Default', 'NotStarted', 'Initialized', 'InProgress', 'Completed',\n * 'CompletedWithIssues', 'Stopped', 'Failed'\n * @readonly\n * @enum {string}\n */\nexport type ValidationStatus = 'Default' | 'NotStarted' | 'Initialized' | 'InProgress' | 'Completed' | 'CompletedWithIssues' | 'Stopped' | 'Failed';\n\n/**\n * Defines values for Severity.\n * Possible values include: 'Message', 'Warning', 'Error'\n * @readonly\n * @enum {string}\n */\nexport type Severity = 'Message' | 'Warning' | 'Error';\n\n/**\n * Defines values for UpdateActionType.\n * Possible values include: 'DeletedOnTarget', 'ChangedOnTarget', 'AddedOnTarget'\n * @readonly\n * @enum {string}\n */\nexport type UpdateActionType = 'DeletedOnTarget' | 'ChangedOnTarget' | 'AddedOnTarget';\n\n/**\n * Defines values for ObjectType.\n * Possible values include: 'StoredProcedures', 'Table', 'User', 'View', 'Function'\n * @readonly\n * @enum {string}\n */\nexport type ObjectType = 'StoredProcedures' | 'Table' | 'User' | 'View' | 'Function';\n\n/**\n * Defines values for DatabaseMigrationStage.\n * Possible values include: 'None', 'Initialize', 'Backup', 'FileCopy', 'Restore', 'Completed'\n * @readonly\n * @enum {string}\n */\nexport type DatabaseMigrationStage = 'None' | 'Initialize' | 'Backup' | 'FileCopy' | 'Restore' | 'Completed';\n\n/**\n * Defines values for BackupFileStatus.\n * Possible values include: 'Arrived', 'Queued', 'Uploading', 'Uploaded', 'Restoring', 'Restored',\n * 'Cancelled'\n * @readonly\n * @enum {string}\n */\nexport type BackupFileStatus = 'Arrived' | 'Queued' | 'Uploading' | 'Uploaded' | 'Restoring' | 'Restored' | 'Cancelled';\n\n/**\n * Defines values for DatabaseMigrationState.\n * Possible values include: 'UNDEFINED', 'INITIAL', 'FULL_BACKUP_UPLOAD_START',\n * 'LOG_SHIPPING_START', 'UPLOAD_LOG_FILES_START', 'CUTOVER_START', 'POST_CUTOVER_COMPLETE',\n * 'COMPLETED', 'CANCELLED', 'FAILED'\n * @readonly\n * @enum {string}\n */\nexport type DatabaseMigrationState = 'UNDEFINED' | 'INITIAL' | 'FULL_BACKUP_UPLOAD_START' | 'LOG_SHIPPING_START' | 'UPLOAD_LOG_FILES_START' | 'CUTOVER_START' | 'POST_CUTOVER_COMPLETE' | 'COMPLETED' | 'CANCELLED' | 'FAILED';\n\n/**\n * Defines values for LoginMigrationStage.\n * Possible values include: 'None', 'Initialize', 'LoginMigration', 'EstablishUserMapping',\n * 'AssignRoleMembership', 'AssignRoleOwnership', 'EstablishServerPermissions',\n * 'EstablishObjectPermissions', 'Completed'\n * @readonly\n * @enum {string}\n */\nexport type LoginMigrationStage = 'None' | 'Initialize' | 'LoginMigration' | 'EstablishUserMapping' | 'AssignRoleMembership' | 'AssignRoleOwnership' | 'EstablishServerPermissions' | 'EstablishObjectPermissions' | 'Completed';\n\n/**\n * Defines values for LoginType.\n * Possible values include: 'WindowsUser', 'WindowsGroup', 'SqlLogin', 'Certificate',\n * 'AsymmetricKey', 'ExternalUser', 'ExternalGroup'\n * @readonly\n * @enum {string}\n */\nexport type LoginType = 'WindowsUser' | 'WindowsGroup' | 'SqlLogin' | 'Certificate' | 'AsymmetricKey' | 'ExternalUser' | 'ExternalGroup';\n\n/**\n * Defines values for DatabaseState.\n * Possible values include: 'Online', 'Restoring', 'Recovering', 'RecoveryPending', 'Suspect',\n * 'Emergency', 'Offline', 'Copying', 'OfflineSecondary'\n * @readonly\n * @enum {string}\n */\nexport type DatabaseState = 'Online' | 'Restoring' | 'Recovering' | 'RecoveryPending' | 'Suspect' | 'Emergency' | 'Offline' | 'Copying' | 'OfflineSecondary';\n\n/**\n * Defines values for DatabaseCompatLevel.\n * Possible values include: 'CompatLevel80', 'CompatLevel90', 'CompatLevel100', 'CompatLevel110',\n * 'CompatLevel120', 'CompatLevel130', 'CompatLevel140'\n * @readonly\n * @enum {string}\n */\nexport type DatabaseCompatLevel = 'CompatLevel80' | 'CompatLevel90' | 'CompatLevel100' | 'CompatLevel110' | 'CompatLevel120' | 'CompatLevel130' | 'CompatLevel140';\n\n/**\n * Defines values for DatabaseFileType.\n * Possible values include: 'Rows', 'Log', 'Filestream', 'NotSupported', 'Fulltext'\n * @readonly\n * @enum {string}\n */\nexport type DatabaseFileType = 'Rows' | 'Log' | 'Filestream' | 'NotSupported' | 'Fulltext';\n\n/**\n * Defines values for ServerLevelPermissionsGroup.\n * Possible values include: 'Default', 'MigrationFromSqlServerToAzureDB',\n * 'MigrationFromSqlServerToAzureMI', 'MigrationFromMySQLToAzureDBForMySQL'\n * @readonly\n * @enum {string}\n */\nexport type ServerLevelPermissionsGroup = 'Default' | 'MigrationFromSqlServerToAzureDB' | 'MigrationFromSqlServerToAzureMI' | 'MigrationFromMySQLToAzureDBForMySQL';\n\n/**\n * Defines values for MongoDbClusterType.\n * Possible values include: 'BlobContainer', 'CosmosDb', 'MongoDb'\n * @readonly\n * @enum {string}\n */\nexport type MongoDbClusterType = 'BlobContainer' | 'CosmosDb' | 'MongoDb';\n\n/**\n * Defines values for TaskState.\n * Possible values include: 'Unknown', 'Queued', 'Running', 'Canceled', 'Succeeded', 'Failed',\n * 'FailedInputValidation', 'Faulted'\n * @readonly\n * @enum {string}\n */\nexport type TaskState = 'Unknown' | 'Queued' | 'Running' | 'Canceled' | 'Succeeded' | 'Failed' | 'FailedInputValidation' | 'Faulted';\n\n/**\n * Defines values for ServiceProvisioningState.\n * Possible values include: 'Accepted', 'Deleting', 'Deploying', 'Stopped', 'Stopping', 'Starting',\n * 'FailedToStart', 'FailedToStop', 'Succeeded', 'Failed'\n * @readonly\n * @enum {string}\n */\nexport type ServiceProvisioningState = 'Accepted' | 'Deleting' | 'Deploying' | 'Stopped' | 'Stopping' | 'Starting' | 'FailedToStart' | 'FailedToStop' | 'Succeeded' | 'Failed';\n\n/**\n * Defines values for ProjectTargetPlatform.\n * Possible values include: 'SQLDB', 'SQLMI', 'AzureDbForMySql', 'AzureDbForPostgreSql', 'MongoDb',\n * 'Unknown'\n * @readonly\n * @enum {string}\n */\nexport type ProjectTargetPlatform = 'SQLDB' | 'SQLMI' | 'AzureDbForMySql' | 'AzureDbForPostgreSql' | 'MongoDb' | 'Unknown';\n\n/**\n * Defines values for ProjectSourcePlatform.\n * Possible values include: 'SQL', 'MySQL', 'PostgreSql', 'MongoDb', 'Unknown'\n * @readonly\n * @enum {string}\n */\nexport type ProjectSourcePlatform = 'SQL' | 'MySQL' | 'PostgreSql' | 'MongoDb' | 'Unknown';\n\n/**\n * Defines values for ProjectProvisioningState.\n * Possible values include: 'Deleting', 'Succeeded'\n * @readonly\n * @enum {string}\n */\nexport type ProjectProvisioningState = 'Deleting' | 'Succeeded';\n\n/**\n * Defines values for NameCheckFailureReason.\n * Possible values include: 'AlreadyExists', 'Invalid'\n * @readonly\n * @enum {string}\n */\nexport type NameCheckFailureReason = 'AlreadyExists' | 'Invalid';\n\n/**\n * Defines values for ServiceScalability.\n * Possible values include: 'none', 'manual', 'automatic'\n * @readonly\n * @enum {string}\n */\nexport type ServiceScalability = 'none' | 'manual' | 'automatic';\n\n/**\n * Defines values for ResourceSkuRestrictionsType.\n * Possible values include: 'location'\n * @readonly\n * @enum {string}\n */\nexport type ResourceSkuRestrictionsType = 'location';\n\n/**\n * Defines values for ResourceSkuRestrictionsReasonCode.\n * Possible values include: 'QuotaId', 'NotAvailableForSubscription'\n * @readonly\n * @enum {string}\n */\nexport type ResourceSkuRestrictionsReasonCode = 'QuotaId' | 'NotAvailableForSubscription';\n\n/**\n * Defines values for ResourceSkuCapacityScaleType.\n * Possible values include: 'Automatic', 'Manual', 'None'\n * @readonly\n * @enum {string}\n */\nexport type ResourceSkuCapacityScaleType = 'Automatic' | 'Manual' | 'None';\n\n/**\n * Defines values for MySqlTargetPlatformType.\n * Possible values include: 'SqlServer', 'AzureDbForMySQL'\n * @readonly\n * @enum {string}\n */\nexport type MySqlTargetPlatformType = 'SqlServer' | 'AzureDbForMySQL';\n\n/**\n * Defines values for SchemaMigrationOption.\n * Possible values include: 'None', 'ExtractFromSource', 'UseStorageFile'\n * @readonly\n * @enum {string}\n */\nexport type SchemaMigrationOption = 'None' | 'ExtractFromSource' | 'UseStorageFile';\n\n/**\n * Defines values for SchemaMigrationStage.\n * Possible values include: 'NotStarted', 'ValidatingInputs', 'CollectingObjects',\n * 'DownloadingScript', 'GeneratingScript', 'UploadingScript', 'DeployingSchema', 'Completed',\n * 'CompletedWithWarnings', 'Failed'\n * @readonly\n * @enum {string}\n */\nexport type SchemaMigrationStage = 'NotStarted' | 'ValidatingInputs' | 'CollectingObjects' | 'DownloadingScript' | 'GeneratingScript' | 'UploadingScript' | 'DeployingSchema' | 'Completed' | 'CompletedWithWarnings' | 'Failed';\n\n/**\n * Defines values for DataMigrationResultCode.\n * Possible values include: 'Initial', 'Completed', 'ObjectNotExistsInSource',\n * 'ObjectNotExistsInTarget', 'TargetObjectIsInaccessible', 'FatalError'\n * @readonly\n * @enum {string}\n */\nexport type DataMigrationResultCode = 'Initial' | 'Completed' | 'ObjectNotExistsInSource' | 'ObjectNotExistsInTarget' | 'TargetObjectIsInaccessible' | 'FatalError';\n\n/**\n * Defines values for ErrorType.\n * Possible values include: 'Default', 'Warning', 'Error'\n * @readonly\n * @enum {string}\n */\nexport type ErrorType = 'Default' | 'Warning' | 'Error';\n\n/**\n * Defines values for ResultType.\n * Possible values include: 'Migration', 'Database', 'Collection'\n * @readonly\n * @enum {string}\n */\nexport type ResultType = 'Migration' | 'Database' | 'Collection';\n\n/**\n * Contains response data for the listSkus operation.\n */\nexport type ResourceSkusListSkusResponse = ResourceSkusResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ResourceSkusResult;\n    };\n};\n\n/**\n * Contains response data for the listSkusNext operation.\n */\nexport type ResourceSkusListSkusNextResponse = ResourceSkusResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ResourceSkusResult;\n    };\n};\n\n/**\n * Contains response data for the createOrUpdate operation.\n */\nexport type ServicesCreateOrUpdateResponse = DataMigrationService & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: DataMigrationService;\n    };\n};\n\n/**\n * Contains response data for the get operation.\n */\nexport type ServicesGetResponse = DataMigrationService & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: DataMigrationService;\n    };\n};\n\n/**\n * Contains response data for the update operation.\n */\nexport type ServicesUpdateResponse = DataMigrationService & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: DataMigrationService;\n    };\n};\n\n/**\n * Contains response data for the checkStatus operation.\n */\nexport type ServicesCheckStatusResponse = DataMigrationServiceStatusResponse & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: DataMigrationServiceStatusResponse;\n    };\n};\n\n/**\n * Contains response data for the listSkus operation.\n */\nexport type ServicesListSkusResponse = ServiceSkuList & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ServiceSkuList;\n    };\n};\n\n/**\n * Contains response data for the checkChildrenNameAvailability operation.\n */\nexport type ServicesCheckChildrenNameAvailabilityResponse = NameAvailabilityResponse & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: NameAvailabilityResponse;\n    };\n};\n\n/**\n * Contains response data for the listByResourceGroup operation.\n */\nexport type ServicesListByResourceGroupResponse = DataMigrationServiceList & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: DataMigrationServiceList;\n    };\n};\n\n/**\n * Contains response data for the list operation.\n */\nexport type ServicesListResponse = DataMigrationServiceList & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: DataMigrationServiceList;\n    };\n};\n\n/**\n * Contains response data for the checkNameAvailability operation.\n */\nexport type ServicesCheckNameAvailabilityResponse = NameAvailabilityResponse & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: NameAvailabilityResponse;\n    };\n};\n\n/**\n * Contains response data for the beginCreateOrUpdate operation.\n */\nexport type ServicesBeginCreateOrUpdateResponse = DataMigrationService & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: DataMigrationService;\n    };\n};\n\n/**\n * Contains response data for the beginUpdate operation.\n */\nexport type ServicesBeginUpdateResponse = DataMigrationService & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: DataMigrationService;\n    };\n};\n\n/**\n * Contains response data for the listSkusNext operation.\n */\nexport type ServicesListSkusNextResponse = ServiceSkuList & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ServiceSkuList;\n    };\n};\n\n/**\n * Contains response data for the listByResourceGroupNext operation.\n */\nexport type ServicesListByResourceGroupNextResponse = DataMigrationServiceList & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: DataMigrationServiceList;\n    };\n};\n\n/**\n * Contains response data for the listNext operation.\n */\nexport type ServicesListNextResponse = DataMigrationServiceList & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: DataMigrationServiceList;\n    };\n};\n\n/**\n * Contains response data for the list operation.\n */\nexport type TasksListResponse = TaskList & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: TaskList;\n    };\n};\n\n/**\n * Contains response data for the createOrUpdate operation.\n */\nexport type TasksCreateOrUpdateResponse = ProjectTask & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ProjectTask;\n    };\n};\n\n/**\n * Contains response data for the get operation.\n */\nexport type TasksGetResponse = ProjectTask & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ProjectTask;\n    };\n};\n\n/**\n * Contains response data for the update operation.\n */\nexport type TasksUpdateResponse = ProjectTask & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ProjectTask;\n    };\n};\n\n/**\n * Contains response data for the cancel operation.\n */\nexport type TasksCancelResponse = ProjectTask & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ProjectTask;\n    };\n};\n\n/**\n * Contains response data for the command operation.\n */\nexport type TasksCommandResponse = CommandPropertiesUnion & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: CommandPropertiesUnion;\n    };\n};\n\n/**\n * Contains response data for the listNext operation.\n */\nexport type TasksListNextResponse = TaskList & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: TaskList;\n    };\n};\n\n/**\n * Contains response data for the list operation.\n */\nexport type ServiceTasksListResponse = TaskList & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: TaskList;\n    };\n};\n\n/**\n * Contains response data for the createOrUpdate operation.\n */\nexport type ServiceTasksCreateOrUpdateResponse = ProjectTask & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ProjectTask;\n    };\n};\n\n/**\n * Contains response data for the get operation.\n */\nexport type ServiceTasksGetResponse = ProjectTask & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ProjectTask;\n    };\n};\n\n/**\n * Contains response data for the update operation.\n */\nexport type ServiceTasksUpdateResponse = ProjectTask & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ProjectTask;\n    };\n};\n\n/**\n * Contains response data for the cancel operation.\n */\nexport type ServiceTasksCancelResponse = ProjectTask & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ProjectTask;\n    };\n};\n\n/**\n * Contains response data for the listNext operation.\n */\nexport type ServiceTasksListNextResponse = TaskList & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: TaskList;\n    };\n};\n\n/**\n * Contains response data for the list operation.\n */\nexport type ProjectsListResponse = ProjectList & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ProjectList;\n    };\n};\n\n/**\n * Contains response data for the createOrUpdate operation.\n */\nexport type ProjectsCreateOrUpdateResponse = Project & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: Project;\n    };\n};\n\n/**\n * Contains response data for the get operation.\n */\nexport type ProjectsGetResponse = Project & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: Project;\n    };\n};\n\n/**\n * Contains response data for the update operation.\n */\nexport type ProjectsUpdateResponse = Project & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: Project;\n    };\n};\n\n/**\n * Contains response data for the listNext operation.\n */\nexport type ProjectsListNextResponse = ProjectList & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ProjectList;\n    };\n};\n\n/**\n * Contains response data for the list operation.\n */\nexport type UsagesListResponse = QuotaList & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: QuotaList;\n    };\n};\n\n/**\n * Contains response data for the listNext operation.\n */\nexport type UsagesListNextResponse = QuotaList & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: QuotaList;\n    };\n};\n\n/**\n * Contains response data for the list operation.\n */\nexport type OperationsListResponse = ServiceOperationList & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ServiceOperationList;\n    };\n};\n\n/**\n * Contains response data for the listNext operation.\n */\nexport type OperationsListNextResponse = ServiceOperationList & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ServiceOperationList;\n    };\n};\n\n/**\n * Contains response data for the list operation.\n */\nexport type FilesListResponse = FileList & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: FileList;\n    };\n};\n\n/**\n * Contains response data for the get operation.\n */\nexport type FilesGetResponse = ProjectFile & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ProjectFile;\n    };\n};\n\n/**\n * Contains response data for the createOrUpdate operation.\n */\nexport type FilesCreateOrUpdateResponse = ProjectFile & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ProjectFile;\n    };\n};\n\n/**\n * Contains response data for the update operation.\n */\nexport type FilesUpdateResponse = ProjectFile & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ProjectFile;\n    };\n};\n\n/**\n * Contains response data for the read operation.\n */\nexport type FilesReadResponse = FileStorageInfo & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: FileStorageInfo;\n    };\n};\n\n/**\n * Contains response data for the readWrite operation.\n */\nexport type FilesReadWriteResponse = FileStorageInfo & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: FileStorageInfo;\n    };\n};\n\n/**\n * Contains response data for the listNext operation.\n */\nexport type FilesListNextResponse = FileList & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: FileList;\n    };\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { CloudErrorMapper, BaseResourceMapper } from \"@azure/ms-rest-azure-js\";\nimport * as msRest from \"@azure/ms-rest-js\";\n\nexport const CloudError = CloudErrorMapper;\nexport const BaseResource = BaseResourceMapper;\n\nexport const Resource: msRest.CompositeMapper = {\n  serializedName: \"Resource\",\n  type: {\n    name: \"Composite\",\n    className: \"Resource\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        readOnly: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        readOnly: true,\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TrackedResource: msRest.CompositeMapper = {\n  serializedName: \"TrackedResource\",\n  type: {\n    name: \"Composite\",\n    className: \"TrackedResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      location: {\n        required: true,\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ProjectFileProperties: msRest.CompositeMapper = {\n  serializedName: \"ProjectFileProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"ProjectFileProperties\",\n    modelProperties: {\n      extension: {\n        serializedName: \"extension\",\n        type: {\n          name: \"String\"\n        }\n      },\n      filePath: {\n        serializedName: \"filePath\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        readOnly: true,\n        serializedName: \"lastModified\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      mediaType: {\n        serializedName: \"mediaType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      size: {\n        readOnly: true,\n        serializedName: \"size\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ProjectFile: msRest.CompositeMapper = {\n  serializedName: \"ProjectFile\",\n  type: {\n    name: \"Composite\",\n    className: \"ProjectFile\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ProjectFileProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const ODataError: msRest.CompositeMapper = {\n  serializedName: \"ODataError\",\n  type: {\n    name: \"Composite\",\n    className: \"ODataError\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      },\n      details: {\n        serializedName: \"details\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ODataError\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ReportableException: msRest.CompositeMapper = {\n  serializedName: \"ReportableException\",\n  type: {\n    name: \"Composite\",\n    className: \"ReportableException\",\n    modelProperties: {\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      },\n      actionableMessage: {\n        serializedName: \"actionableMessage\",\n        type: {\n          name: \"String\"\n        }\n      },\n      filePath: {\n        serializedName: \"filePath\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lineNumber: {\n        serializedName: \"lineNumber\",\n        type: {\n          name: \"String\"\n        }\n      },\n      hResult: {\n        serializedName: \"hResult\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      stackTrace: {\n        serializedName: \"stackTrace\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateMISyncCompleteCommandOutput: msRest.CompositeMapper = {\n  serializedName: \"MigrateMISyncCompleteCommandOutput\",\n  type: {\n    name: \"Composite\",\n    className: \"MigrateMISyncCompleteCommandOutput\",\n    modelProperties: {\n      errors: {\n        serializedName: \"errors\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReportableException\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateMISyncCompleteCommandInput: msRest.CompositeMapper = {\n  serializedName: \"MigrateMISyncCompleteCommandInput\",\n  type: {\n    name: \"Composite\",\n    className: \"MigrateMISyncCompleteCommandInput\",\n    modelProperties: {\n      sourceDatabaseName: {\n        required: true,\n        serializedName: \"sourceDatabaseName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CommandProperties: msRest.CompositeMapper = {\n  serializedName: \"CommandProperties\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: {\n      serializedName: \"commandType\",\n      clientName: \"commandType\"\n    },\n    uberParent: \"CommandProperties\",\n    className: \"CommandProperties\",\n    modelProperties: {\n      errors: {\n        readOnly: true,\n        serializedName: \"errors\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ODataError\"\n            }\n          }\n        }\n      },\n      state: {\n        readOnly: true,\n        serializedName: \"state\",\n        type: {\n          name: \"String\"\n        }\n      },\n      commandType: {\n        required: true,\n        serializedName: \"commandType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateMISyncCompleteCommandProperties: msRest.CompositeMapper = {\n  serializedName: \"Migrate.SqlServer.AzureDbSqlMi.Complete\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: CommandProperties.type.polymorphicDiscriminator,\n    uberParent: \"CommandProperties\",\n    className: \"MigrateMISyncCompleteCommandProperties\",\n    modelProperties: {\n      ...CommandProperties.type.modelProperties,\n      input: {\n        serializedName: \"input\",\n        type: {\n          name: \"Composite\",\n          className: \"MigrateMISyncCompleteCommandInput\"\n        }\n      },\n      output: {\n        readOnly: true,\n        serializedName: \"output\",\n        type: {\n          name: \"Composite\",\n          className: \"MigrateMISyncCompleteCommandOutput\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateSyncCompleteCommandOutput: msRest.CompositeMapper = {\n  serializedName: \"MigrateSyncCompleteCommandOutput\",\n  type: {\n    name: \"Composite\",\n    className: \"MigrateSyncCompleteCommandOutput\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errors: {\n        readOnly: true,\n        serializedName: \"errors\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReportableException\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateSyncCompleteCommandInput: msRest.CompositeMapper = {\n  serializedName: \"MigrateSyncCompleteCommandInput\",\n  type: {\n    name: \"Composite\",\n    className: \"MigrateSyncCompleteCommandInput\",\n    modelProperties: {\n      databaseName: {\n        required: true,\n        serializedName: \"databaseName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      commitTimeStamp: {\n        serializedName: \"commitTimeStamp\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateSyncCompleteCommandProperties: msRest.CompositeMapper = {\n  serializedName: \"Migrate.Sync.Complete.Database\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: CommandProperties.type.polymorphicDiscriminator,\n    uberParent: \"CommandProperties\",\n    className: \"MigrateSyncCompleteCommandProperties\",\n    modelProperties: {\n      ...CommandProperties.type.modelProperties,\n      input: {\n        serializedName: \"input\",\n        type: {\n          name: \"Composite\",\n          className: \"MigrateSyncCompleteCommandInput\"\n        }\n      },\n      output: {\n        readOnly: true,\n        serializedName: \"output\",\n        type: {\n          name: \"Composite\",\n          className: \"MigrateSyncCompleteCommandOutput\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateSsisTaskOutput: msRest.CompositeMapper = {\n  serializedName: \"MigrateSsisTaskOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: {\n      serializedName: \"resultType\",\n      clientName: \"resultType\"\n    },\n    uberParent: \"MigrateSsisTaskOutput\",\n    className: \"MigrateSsisTaskOutput\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resultType: {\n        required: true,\n        serializedName: \"resultType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateSsisTaskOutputProjectLevel: msRest.CompositeMapper = {\n  serializedName: \"SsisProjectLevelOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: MigrateSsisTaskOutput.type.polymorphicDiscriminator,\n    uberParent: \"MigrateSsisTaskOutput\",\n    className: \"MigrateSsisTaskOutputProjectLevel\",\n    modelProperties: {\n      ...MigrateSsisTaskOutput.type.modelProperties,\n      folderName: {\n        readOnly: true,\n        serializedName: \"folderName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      projectName: {\n        readOnly: true,\n        serializedName: \"projectName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      state: {\n        readOnly: true,\n        serializedName: \"state\",\n        type: {\n          name: \"String\"\n        }\n      },\n      stage: {\n        readOnly: true,\n        serializedName: \"stage\",\n        type: {\n          name: \"String\"\n        }\n      },\n      startedOn: {\n        readOnly: true,\n        serializedName: \"startedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endedOn: {\n        readOnly: true,\n        serializedName: \"endedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      message: {\n        readOnly: true,\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      },\n      exceptionsAndWarnings: {\n        readOnly: true,\n        serializedName: \"exceptionsAndWarnings\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReportableException\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateSsisTaskOutputMigrationLevel: msRest.CompositeMapper = {\n  serializedName: \"MigrationLevelOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: MigrateSsisTaskOutput.type.polymorphicDiscriminator,\n    uberParent: \"MigrateSsisTaskOutput\",\n    className: \"MigrateSsisTaskOutputMigrationLevel\",\n    modelProperties: {\n      ...MigrateSsisTaskOutput.type.modelProperties,\n      startedOn: {\n        readOnly: true,\n        serializedName: \"startedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endedOn: {\n        readOnly: true,\n        serializedName: \"endedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      status: {\n        readOnly: true,\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        readOnly: true,\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sourceServerVersion: {\n        readOnly: true,\n        serializedName: \"sourceServerVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sourceServerBrandVersion: {\n        readOnly: true,\n        serializedName: \"sourceServerBrandVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetServerVersion: {\n        readOnly: true,\n        serializedName: \"targetServerVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetServerBrandVersion: {\n        readOnly: true,\n        serializedName: \"targetServerBrandVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      exceptionsAndWarnings: {\n        readOnly: true,\n        serializedName: \"exceptionsAndWarnings\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReportableException\"\n            }\n          }\n        }\n      },\n      stage: {\n        readOnly: true,\n        serializedName: \"stage\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SsisMigrationInfo: msRest.CompositeMapper = {\n  serializedName: \"SsisMigrationInfo\",\n  type: {\n    name: \"Composite\",\n    className: \"SsisMigrationInfo\",\n    modelProperties: {\n      ssisStoreType: {\n        serializedName: \"ssisStoreType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      projectOverwriteOption: {\n        serializedName: \"projectOverwriteOption\",\n        type: {\n          name: \"String\"\n        }\n      },\n      environmentOverwriteOption: {\n        serializedName: \"environmentOverwriteOption\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectionInfo: msRest.CompositeMapper = {\n  serializedName: \"ConnectionInfo\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: {\n      serializedName: \"type\",\n      clientName: \"type\"\n    },\n    uberParent: \"ConnectionInfo\",\n    className: \"ConnectionInfo\",\n    modelProperties: {\n      userName: {\n        serializedName: \"userName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      password: {\n        serializedName: \"password\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        required: true,\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MiSqlConnectionInfo: msRest.CompositeMapper = {\n  serializedName: \"MiSqlConnectionInfo\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ConnectionInfo.type.polymorphicDiscriminator,\n    uberParent: \"ConnectionInfo\",\n    className: \"MiSqlConnectionInfo\",\n    modelProperties: {\n      ...ConnectionInfo.type.modelProperties,\n      managedInstanceResourceId: {\n        required: true,\n        serializedName: \"managedInstanceResourceId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PostgreSqlConnectionInfo: msRest.CompositeMapper = {\n  serializedName: \"PostgreSqlConnectionInfo\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ConnectionInfo.type.polymorphicDiscriminator,\n    uberParent: \"ConnectionInfo\",\n    className: \"PostgreSqlConnectionInfo\",\n    modelProperties: {\n      ...ConnectionInfo.type.modelProperties,\n      serverName: {\n        required: true,\n        serializedName: \"serverName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      databaseName: {\n        serializedName: \"databaseName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      port: {\n        required: true,\n        serializedName: \"port\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const OracleConnectionInfo: msRest.CompositeMapper = {\n  serializedName: \"OracleConnectionInfo\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ConnectionInfo.type.polymorphicDiscriminator,\n    uberParent: \"ConnectionInfo\",\n    className: \"OracleConnectionInfo\",\n    modelProperties: {\n      ...ConnectionInfo.type.modelProperties,\n      dataSource: {\n        required: true,\n        serializedName: \"dataSource\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MySqlConnectionInfo: msRest.CompositeMapper = {\n  serializedName: \"MySqlConnectionInfo\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ConnectionInfo.type.polymorphicDiscriminator,\n    uberParent: \"ConnectionInfo\",\n    className: \"MySqlConnectionInfo\",\n    modelProperties: {\n      ...ConnectionInfo.type.modelProperties,\n      serverName: {\n        required: true,\n        serializedName: \"serverName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      port: {\n        required: true,\n        serializedName: \"port\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const MongoDbConnectionInfo: msRest.CompositeMapper = {\n  serializedName: \"MongoDbConnectionInfo\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ConnectionInfo.type.polymorphicDiscriminator,\n    uberParent: \"ConnectionInfo\",\n    className: \"MongoDbConnectionInfo\",\n    modelProperties: {\n      ...ConnectionInfo.type.modelProperties,\n      connectionString: {\n        required: true,\n        serializedName: \"connectionString\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SqlConnectionInfo: msRest.CompositeMapper = {\n  serializedName: \"SqlConnectionInfo\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ConnectionInfo.type.polymorphicDiscriminator,\n    uberParent: \"ConnectionInfo\",\n    className: \"SqlConnectionInfo\",\n    modelProperties: {\n      ...ConnectionInfo.type.modelProperties,\n      dataSource: {\n        required: true,\n        serializedName: \"dataSource\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authentication: {\n        serializedName: \"authentication\",\n        type: {\n          name: \"String\"\n        }\n      },\n      encryptConnection: {\n        serializedName: \"encryptConnection\",\n        defaultValue: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      additionalSettings: {\n        serializedName: \"additionalSettings\",\n        type: {\n          name: \"String\"\n        }\n      },\n      trustServerCertificate: {\n        serializedName: \"trustServerCertificate\",\n        defaultValue: false,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      platform: {\n        serializedName: \"platform\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SqlMigrationTaskInput: msRest.CompositeMapper = {\n  serializedName: \"SqlMigrationTaskInput\",\n  type: {\n    name: \"Composite\",\n    className: \"SqlMigrationTaskInput\",\n    modelProperties: {\n      sourceConnectionInfo: {\n        required: true,\n        serializedName: \"sourceConnectionInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"SqlConnectionInfo\"\n        }\n      },\n      targetConnectionInfo: {\n        required: true,\n        serializedName: \"targetConnectionInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"SqlConnectionInfo\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateSsisTaskInput: msRest.CompositeMapper = {\n  serializedName: \"MigrateSsisTaskInput\",\n  type: {\n    name: \"Composite\",\n    className: \"MigrateSsisTaskInput\",\n    modelProperties: {\n      ...SqlMigrationTaskInput.type.modelProperties,\n      ssisMigrationInfo: {\n        required: true,\n        serializedName: \"ssisMigrationInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"SsisMigrationInfo\"\n        }\n      }\n    }\n  }\n};\n\nexport const ProjectTaskProperties: msRest.CompositeMapper = {\n  serializedName: \"ProjectTaskProperties\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: {\n      serializedName: \"taskType\",\n      clientName: \"taskType\"\n    },\n    uberParent: \"ProjectTaskProperties\",\n    className: \"ProjectTaskProperties\",\n    modelProperties: {\n      errors: {\n        readOnly: true,\n        serializedName: \"errors\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ODataError\"\n            }\n          }\n        }\n      },\n      state: {\n        readOnly: true,\n        serializedName: \"state\",\n        type: {\n          name: \"String\"\n        }\n      },\n      commands: {\n        readOnly: true,\n        serializedName: \"commands\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CommandProperties\"\n            }\n          }\n        }\n      },\n      clientData: {\n        serializedName: \"clientData\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      taskType: {\n        required: true,\n        serializedName: \"taskType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateSsisTaskProperties: msRest.CompositeMapper = {\n  serializedName: \"Migrate.Ssis\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ProjectTaskProperties.type.polymorphicDiscriminator,\n    uberParent: \"ProjectTaskProperties\",\n    className: \"MigrateSsisTaskProperties\",\n    modelProperties: {\n      ...ProjectTaskProperties.type.modelProperties,\n      input: {\n        serializedName: \"input\",\n        type: {\n          name: \"Composite\",\n          className: \"MigrateSsisTaskInput\"\n        }\n      },\n      output: {\n        readOnly: true,\n        serializedName: \"output\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MigrateSsisTaskOutput\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const GetTdeCertificatesSqlTaskOutput: msRest.CompositeMapper = {\n  serializedName: \"GetTdeCertificatesSqlTaskOutput\",\n  type: {\n    name: \"Composite\",\n    className: \"GetTdeCertificatesSqlTaskOutput\",\n    modelProperties: {\n      base64EncodedCertificates: {\n        readOnly: true,\n        serializedName: \"base64EncodedCertificates\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"Sequence\",\n              element: {\n                type: {\n                  name: \"String\"\n                }\n              }\n            }\n          }\n        }\n      },\n      validationErrors: {\n        readOnly: true,\n        serializedName: \"validationErrors\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReportableException\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SelectedCertificateInput: msRest.CompositeMapper = {\n  serializedName: \"SelectedCertificateInput\",\n  type: {\n    name: \"Composite\",\n    className: \"SelectedCertificateInput\",\n    modelProperties: {\n      certificateName: {\n        required: true,\n        serializedName: \"certificateName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      password: {\n        required: true,\n        serializedName: \"password\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileShare: msRest.CompositeMapper = {\n  serializedName: \"FileShare\",\n  type: {\n    name: \"Composite\",\n    className: \"FileShare\",\n    modelProperties: {\n      userName: {\n        serializedName: \"userName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      password: {\n        serializedName: \"password\",\n        type: {\n          name: \"String\"\n        }\n      },\n      path: {\n        required: true,\n        serializedName: \"path\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GetTdeCertificatesSqlTaskInput: msRest.CompositeMapper = {\n  serializedName: \"GetTdeCertificatesSqlTaskInput\",\n  type: {\n    name: \"Composite\",\n    className: \"GetTdeCertificatesSqlTaskInput\",\n    modelProperties: {\n      connectionInfo: {\n        required: true,\n        serializedName: \"connectionInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"SqlConnectionInfo\"\n        }\n      },\n      backupFileShare: {\n        required: true,\n        serializedName: \"backupFileShare\",\n        type: {\n          name: \"Composite\",\n          className: \"FileShare\"\n        }\n      },\n      selectedCertificates: {\n        required: true,\n        serializedName: \"selectedCertificates\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SelectedCertificateInput\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const GetTdeCertificatesSqlTaskProperties: msRest.CompositeMapper = {\n  serializedName: \"GetTDECertificates.Sql\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ProjectTaskProperties.type.polymorphicDiscriminator,\n    uberParent: \"ProjectTaskProperties\",\n    className: \"GetTdeCertificatesSqlTaskProperties\",\n    modelProperties: {\n      ...ProjectTaskProperties.type.modelProperties,\n      input: {\n        serializedName: \"input\",\n        type: {\n          name: \"Composite\",\n          className: \"GetTdeCertificatesSqlTaskInput\"\n        }\n      },\n      output: {\n        readOnly: true,\n        serializedName: \"output\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"GetTdeCertificatesSqlTaskOutput\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ValidateOracleAzureDbPostgreSqlSyncTaskOutput: msRest.CompositeMapper = {\n  serializedName: \"ValidateOracleAzureDbPostgreSqlSyncTaskOutput\",\n  type: {\n    name: \"Composite\",\n    className: \"ValidateOracleAzureDbPostgreSqlSyncTaskOutput\",\n    modelProperties: {\n      validationErrors: {\n        readOnly: true,\n        serializedName: \"validationErrors\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReportableException\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateOracleAzureDbPostgreSqlSyncDatabaseInput: msRest.CompositeMapper = {\n  serializedName: \"MigrateOracleAzureDbPostgreSqlSyncDatabaseInput\",\n  type: {\n    name: \"Composite\",\n    className: \"MigrateOracleAzureDbPostgreSqlSyncDatabaseInput\",\n    modelProperties: {\n      caseManipulation: {\n        serializedName: \"caseManipulation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      schemaName: {\n        serializedName: \"schemaName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tableMap: {\n        serializedName: \"tableMap\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      targetDatabaseName: {\n        serializedName: \"targetDatabaseName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      migrationSetting: {\n        serializedName: \"migrationSetting\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      sourceSetting: {\n        serializedName: \"sourceSetting\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      targetSetting: {\n        serializedName: \"targetSetting\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateOracleAzureDbPostgreSqlSyncTaskInput: msRest.CompositeMapper = {\n  serializedName: \"MigrateOracleAzureDbPostgreSqlSyncTaskInput\",\n  type: {\n    name: \"Composite\",\n    className: \"MigrateOracleAzureDbPostgreSqlSyncTaskInput\",\n    modelProperties: {\n      selectedDatabases: {\n        required: true,\n        serializedName: \"selectedDatabases\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MigrateOracleAzureDbPostgreSqlSyncDatabaseInput\"\n            }\n          }\n        }\n      },\n      targetConnectionInfo: {\n        required: true,\n        serializedName: \"targetConnectionInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"PostgreSqlConnectionInfo\"\n        }\n      },\n      sourceConnectionInfo: {\n        required: true,\n        serializedName: \"sourceConnectionInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"OracleConnectionInfo\"\n        }\n      }\n    }\n  }\n};\n\nexport const ValidateOracleAzureDbForPostgreSqlSyncTaskProperties: msRest.CompositeMapper = {\n  serializedName: \"Validate.Oracle.AzureDbPostgreSql.Sync\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ProjectTaskProperties.type.polymorphicDiscriminator,\n    uberParent: \"ProjectTaskProperties\",\n    className: \"ValidateOracleAzureDbForPostgreSqlSyncTaskProperties\",\n    modelProperties: {\n      ...ProjectTaskProperties.type.modelProperties,\n      input: {\n        serializedName: \"input\",\n        type: {\n          name: \"Composite\",\n          className: \"MigrateOracleAzureDbPostgreSqlSyncTaskInput\"\n        }\n      },\n      output: {\n        readOnly: true,\n        serializedName: \"output\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ValidateOracleAzureDbPostgreSqlSyncTaskOutput\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MongoDbError: msRest.CompositeMapper = {\n  serializedName: \"MongoDbError\",\n  type: {\n    name: \"Composite\",\n    className: \"MongoDbError\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      count: {\n        serializedName: \"count\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MongoDbProgress: msRest.CompositeMapper = {\n  serializedName: \"MongoDbProgress\",\n  type: {\n    name: \"Composite\",\n    className: \"MongoDbProgress\",\n    modelProperties: {\n      bytesCopied: {\n        required: true,\n        serializedName: \"bytesCopied\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      documentsCopied: {\n        required: true,\n        serializedName: \"documentsCopied\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      elapsedTime: {\n        required: true,\n        serializedName: \"elapsedTime\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errors: {\n        required: true,\n        serializedName: \"errors\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"Composite\",\n              className: \"MongoDbError\"\n            }\n          }\n        }\n      },\n      eventsPending: {\n        required: true,\n        serializedName: \"eventsPending\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      eventsReplayed: {\n        required: true,\n        serializedName: \"eventsReplayed\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      lastEventTime: {\n        serializedName: \"lastEventTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastReplayTime: {\n        serializedName: \"lastReplayTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      qualifiedName: {\n        serializedName: \"qualifiedName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resultType: {\n        required: true,\n        serializedName: \"resultType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      state: {\n        required: true,\n        serializedName: \"state\",\n        type: {\n          name: \"String\"\n        }\n      },\n      totalBytes: {\n        required: true,\n        serializedName: \"totalBytes\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      totalDocuments: {\n        required: true,\n        serializedName: \"totalDocuments\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const MongoDbCollectionProgress: msRest.CompositeMapper = {\n  serializedName: \"Collection\",\n  type: {\n    name: \"Composite\",\n    className: \"MongoDbCollectionProgress\",\n    modelProperties: {\n      ...MongoDbProgress.type.modelProperties\n    }\n  }\n};\n\nexport const MongoDbDatabaseProgress: msRest.CompositeMapper = {\n  serializedName: \"Database\",\n  type: {\n    name: \"Composite\",\n    className: \"MongoDbDatabaseProgress\",\n    modelProperties: {\n      ...MongoDbProgress.type.modelProperties,\n      collections: {\n        serializedName: \"collections\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"Composite\",\n              className: \"MongoDbCollectionProgress\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MongoDbMigrationProgress: msRest.CompositeMapper = {\n  serializedName: \"Migration\",\n  type: {\n    name: \"Composite\",\n    className: \"MongoDbMigrationProgress\",\n    modelProperties: {\n      ...MongoDbProgress.type.modelProperties,\n      databases: {\n        serializedName: \"databases\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"Composite\",\n              className: \"MongoDbDatabaseProgress\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MongoDbThrottlingSettings: msRest.CompositeMapper = {\n  serializedName: \"MongoDbThrottlingSettings\",\n  type: {\n    name: \"Composite\",\n    className: \"MongoDbThrottlingSettings\",\n    modelProperties: {\n      minFreeCpu: {\n        serializedName: \"minFreeCpu\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      minFreeMemoryMb: {\n        serializedName: \"minFreeMemoryMb\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      maxParallelism: {\n        serializedName: \"maxParallelism\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const MongoDbShardKeyField: msRest.CompositeMapper = {\n  serializedName: \"MongoDbShardKeyField\",\n  type: {\n    name: \"Composite\",\n    className: \"MongoDbShardKeyField\",\n    modelProperties: {\n      name: {\n        required: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      order: {\n        required: true,\n        serializedName: \"order\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MongoDbShardKeySetting: msRest.CompositeMapper = {\n  serializedName: \"MongoDbShardKeySetting\",\n  type: {\n    name: \"Composite\",\n    className: \"MongoDbShardKeySetting\",\n    modelProperties: {\n      fields: {\n        required: true,\n        serializedName: \"fields\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MongoDbShardKeyField\"\n            }\n          }\n        }\n      },\n      isUnique: {\n        required: true,\n        serializedName: \"isUnique\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const MongoDbCollectionSettings: msRest.CompositeMapper = {\n  serializedName: \"MongoDbCollectionSettings\",\n  type: {\n    name: \"Composite\",\n    className: \"MongoDbCollectionSettings\",\n    modelProperties: {\n      canDelete: {\n        serializedName: \"canDelete\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      shardKey: {\n        serializedName: \"shardKey\",\n        type: {\n          name: \"Composite\",\n          className: \"MongoDbShardKeySetting\"\n        }\n      },\n      targetRUs: {\n        serializedName: \"targetRUs\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const MongoDbDatabaseSettings: msRest.CompositeMapper = {\n  serializedName: \"MongoDbDatabaseSettings\",\n  type: {\n    name: \"Composite\",\n    className: \"MongoDbDatabaseSettings\",\n    modelProperties: {\n      collections: {\n        required: true,\n        serializedName: \"collections\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"Composite\",\n              className: \"MongoDbCollectionSettings\"\n            }\n          }\n        }\n      },\n      targetRUs: {\n        serializedName: \"targetRUs\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const MongoDbMigrationSettings: msRest.CompositeMapper = {\n  serializedName: \"MongoDbMigrationSettings\",\n  type: {\n    name: \"Composite\",\n    className: \"MongoDbMigrationSettings\",\n    modelProperties: {\n      boostRUs: {\n        serializedName: \"boostRUs\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      databases: {\n        required: true,\n        serializedName: \"databases\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"Composite\",\n              className: \"MongoDbDatabaseSettings\"\n            }\n          }\n        }\n      },\n      replication: {\n        serializedName: \"replication\",\n        type: {\n          name: \"String\"\n        }\n      },\n      source: {\n        required: true,\n        serializedName: \"source\",\n        type: {\n          name: \"Composite\",\n          className: \"MongoDbConnectionInfo\"\n        }\n      },\n      target: {\n        required: true,\n        serializedName: \"target\",\n        type: {\n          name: \"Composite\",\n          className: \"MongoDbConnectionInfo\"\n        }\n      },\n      throttling: {\n        serializedName: \"throttling\",\n        type: {\n          name: \"Composite\",\n          className: \"MongoDbThrottlingSettings\"\n        }\n      }\n    }\n  }\n};\n\nexport const ValidateMongoDbTaskProperties: msRest.CompositeMapper = {\n  serializedName: \"Validate.MongoDb\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ProjectTaskProperties.type.polymorphicDiscriminator,\n    uberParent: \"ProjectTaskProperties\",\n    className: \"ValidateMongoDbTaskProperties\",\n    modelProperties: {\n      ...ProjectTaskProperties.type.modelProperties,\n      input: {\n        serializedName: \"input\",\n        type: {\n          name: \"Composite\",\n          className: \"MongoDbMigrationSettings\"\n        }\n      },\n      output: {\n        readOnly: true,\n        serializedName: \"output\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MongoDbMigrationProgress\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ValidateMigrationInputSqlServerSqlMISyncTaskOutput: msRest.CompositeMapper = {\n  serializedName: \"ValidateMigrationInputSqlServerSqlMISyncTaskOutput\",\n  type: {\n    name: \"Composite\",\n    className: \"ValidateMigrationInputSqlServerSqlMISyncTaskOutput\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        readOnly: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      validationErrors: {\n        readOnly: true,\n        serializedName: \"validationErrors\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReportableException\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const AzureActiveDirectoryApp: msRest.CompositeMapper = {\n  serializedName: \"AzureActiveDirectoryApp\",\n  type: {\n    name: \"Composite\",\n    className: \"AzureActiveDirectoryApp\",\n    modelProperties: {\n      applicationId: {\n        required: true,\n        serializedName: \"applicationId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      appKey: {\n        required: true,\n        serializedName: \"appKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantId: {\n        required: true,\n        serializedName: \"tenantId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateSqlServerSqlMIDatabaseInput: msRest.CompositeMapper = {\n  serializedName: \"MigrateSqlServerSqlMIDatabaseInput\",\n  type: {\n    name: \"Composite\",\n    className: \"MigrateSqlServerSqlMIDatabaseInput\",\n    modelProperties: {\n      name: {\n        required: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      restoreDatabaseName: {\n        required: true,\n        serializedName: \"restoreDatabaseName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      backupFileShare: {\n        serializedName: \"backupFileShare\",\n        type: {\n          name: \"Composite\",\n          className: \"FileShare\"\n        }\n      },\n      backupFilePaths: {\n        serializedName: \"backupFilePaths\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SqlServerSqlMISyncTaskInput: msRest.CompositeMapper = {\n  serializedName: \"SqlServerSqlMISyncTaskInput\",\n  type: {\n    name: \"Composite\",\n    className: \"SqlServerSqlMISyncTaskInput\",\n    modelProperties: {\n      selectedDatabases: {\n        required: true,\n        serializedName: \"selectedDatabases\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MigrateSqlServerSqlMIDatabaseInput\"\n            }\n          }\n        }\n      },\n      backupFileShare: {\n        serializedName: \"backupFileShare\",\n        type: {\n          name: \"Composite\",\n          className: \"FileShare\"\n        }\n      },\n      storageResourceId: {\n        required: true,\n        serializedName: \"storageResourceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sourceConnectionInfo: {\n        required: true,\n        serializedName: \"sourceConnectionInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"SqlConnectionInfo\"\n        }\n      },\n      targetConnectionInfo: {\n        required: true,\n        serializedName: \"targetConnectionInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"MiSqlConnectionInfo\"\n        }\n      },\n      azureApp: {\n        required: true,\n        serializedName: \"azureApp\",\n        type: {\n          name: \"Composite\",\n          className: \"AzureActiveDirectoryApp\"\n        }\n      }\n    }\n  }\n};\n\nexport const ValidateMigrationInputSqlServerSqlMISyncTaskInput: msRest.CompositeMapper = {\n  serializedName: \"ValidateMigrationInputSqlServerSqlMISyncTaskInput\",\n  type: {\n    name: \"Composite\",\n    className: \"ValidateMigrationInputSqlServerSqlMISyncTaskInput\",\n    modelProperties: {\n      ...SqlServerSqlMISyncTaskInput.type.modelProperties\n    }\n  }\n};\n\nexport const ValidateMigrationInputSqlServerSqlMISyncTaskProperties: msRest.CompositeMapper = {\n  serializedName: \"ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ProjectTaskProperties.type.polymorphicDiscriminator,\n    uberParent: \"ProjectTaskProperties\",\n    className: \"ValidateMigrationInputSqlServerSqlMISyncTaskProperties\",\n    modelProperties: {\n      ...ProjectTaskProperties.type.modelProperties,\n      input: {\n        serializedName: \"input\",\n        type: {\n          name: \"Composite\",\n          className: \"ValidateMigrationInputSqlServerSqlMISyncTaskInput\"\n        }\n      },\n      output: {\n        readOnly: true,\n        serializedName: \"output\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ValidateMigrationInputSqlServerSqlMISyncTaskOutput\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DatabaseBackupInfo: msRest.CompositeMapper = {\n  serializedName: \"DatabaseBackupInfo\",\n  type: {\n    name: \"Composite\",\n    className: \"DatabaseBackupInfo\",\n    modelProperties: {\n      databaseName: {\n        readOnly: true,\n        serializedName: \"databaseName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      backupType: {\n        readOnly: true,\n        serializedName: \"backupType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      backupFiles: {\n        readOnly: true,\n        serializedName: \"backupFiles\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      position: {\n        readOnly: true,\n        serializedName: \"position\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      isDamaged: {\n        readOnly: true,\n        serializedName: \"isDamaged\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isCompressed: {\n        readOnly: true,\n        serializedName: \"isCompressed\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      familyCount: {\n        readOnly: true,\n        serializedName: \"familyCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      backupFinishDate: {\n        readOnly: true,\n        serializedName: \"backupFinishDate\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const ValidateMigrationInputSqlServerSqlMITaskOutput: msRest.CompositeMapper = {\n  serializedName: \"ValidateMigrationInputSqlServerSqlMITaskOutput\",\n  type: {\n    name: \"Composite\",\n    className: \"ValidateMigrationInputSqlServerSqlMITaskOutput\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        readOnly: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      restoreDatabaseNameErrors: {\n        readOnly: true,\n        serializedName: \"restoreDatabaseNameErrors\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReportableException\"\n            }\n          }\n        }\n      },\n      backupFolderErrors: {\n        readOnly: true,\n        serializedName: \"backupFolderErrors\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReportableException\"\n            }\n          }\n        }\n      },\n      backupShareCredentialsErrors: {\n        readOnly: true,\n        serializedName: \"backupShareCredentialsErrors\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReportableException\"\n            }\n          }\n        }\n      },\n      backupStorageAccountErrors: {\n        readOnly: true,\n        serializedName: \"backupStorageAccountErrors\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReportableException\"\n            }\n          }\n        }\n      },\n      existingBackupErrors: {\n        readOnly: true,\n        serializedName: \"existingBackupErrors\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReportableException\"\n            }\n          }\n        }\n      },\n      databaseBackupInfo: {\n        serializedName: \"databaseBackupInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"DatabaseBackupInfo\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobShare: msRest.CompositeMapper = {\n  serializedName: \"BlobShare\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobShare\",\n    modelProperties: {\n      sasUri: {\n        required: true,\n        serializedName: \"sasUri\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ValidateMigrationInputSqlServerSqlMITaskInput: msRest.CompositeMapper = {\n  serializedName: \"ValidateMigrationInputSqlServerSqlMITaskInput\",\n  type: {\n    name: \"Composite\",\n    className: \"ValidateMigrationInputSqlServerSqlMITaskInput\",\n    modelProperties: {\n      sourceConnectionInfo: {\n        required: true,\n        serializedName: \"sourceConnectionInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"SqlConnectionInfo\"\n        }\n      },\n      targetConnectionInfo: {\n        required: true,\n        serializedName: \"targetConnectionInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"SqlConnectionInfo\"\n        }\n      },\n      selectedDatabases: {\n        required: true,\n        serializedName: \"selectedDatabases\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MigrateSqlServerSqlMIDatabaseInput\"\n            }\n          }\n        }\n      },\n      selectedLogins: {\n        serializedName: \"selectedLogins\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      backupFileShare: {\n        serializedName: \"backupFileShare\",\n        type: {\n          name: \"Composite\",\n          className: \"FileShare\"\n        }\n      },\n      backupBlobShare: {\n        required: true,\n        serializedName: \"backupBlobShare\",\n        type: {\n          name: \"Composite\",\n          className: \"BlobShare\"\n        }\n      },\n      backupMode: {\n        serializedName: \"backupMode\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ValidateMigrationInputSqlServerSqlMITaskProperties: msRest.CompositeMapper = {\n  serializedName: \"ValidateMigrationInput.SqlServer.AzureSqlDbMI\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ProjectTaskProperties.type.polymorphicDiscriminator,\n    uberParent: \"ProjectTaskProperties\",\n    className: \"ValidateMigrationInputSqlServerSqlMITaskProperties\",\n    modelProperties: {\n      ...ProjectTaskProperties.type.modelProperties,\n      input: {\n        serializedName: \"input\",\n        type: {\n          name: \"Composite\",\n          className: \"ValidateMigrationInputSqlServerSqlMITaskInput\"\n        }\n      },\n      output: {\n        readOnly: true,\n        serializedName: \"output\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ValidateMigrationInputSqlServerSqlMITaskOutput\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ValidateSyncMigrationInputSqlServerTaskOutput: msRest.CompositeMapper = {\n  serializedName: \"ValidateSyncMigrationInputSqlServerTaskOutput\",\n  type: {\n    name: \"Composite\",\n    className: \"ValidateSyncMigrationInputSqlServerTaskOutput\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        readOnly: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      validationErrors: {\n        readOnly: true,\n        serializedName: \"validationErrors\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReportableException\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateSqlServerSqlDbSyncDatabaseInput: msRest.CompositeMapper = {\n  serializedName: \"MigrateSqlServerSqlDbSyncDatabaseInput\",\n  type: {\n    name: \"Composite\",\n    className: \"MigrateSqlServerSqlDbSyncDatabaseInput\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetDatabaseName: {\n        serializedName: \"targetDatabaseName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      schemaName: {\n        serializedName: \"schemaName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tableMap: {\n        serializedName: \"tableMap\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      migrationSetting: {\n        serializedName: \"migrationSetting\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      sourceSetting: {\n        serializedName: \"sourceSetting\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      targetSetting: {\n        serializedName: \"targetSetting\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ValidateSyncMigrationInputSqlServerTaskInput: msRest.CompositeMapper = {\n  serializedName: \"ValidateSyncMigrationInputSqlServerTaskInput\",\n  type: {\n    name: \"Composite\",\n    className: \"ValidateSyncMigrationInputSqlServerTaskInput\",\n    modelProperties: {\n      sourceConnectionInfo: {\n        required: true,\n        serializedName: \"sourceConnectionInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"SqlConnectionInfo\"\n        }\n      },\n      targetConnectionInfo: {\n        required: true,\n        serializedName: \"targetConnectionInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"SqlConnectionInfo\"\n        }\n      },\n      selectedDatabases: {\n        required: true,\n        serializedName: \"selectedDatabases\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MigrateSqlServerSqlDbSyncDatabaseInput\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ValidateMigrationInputSqlServerSqlDbSyncTaskProperties: msRest.CompositeMapper = {\n  serializedName: \"ValidateMigrationInput.SqlServer.SqlDb.Sync\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ProjectTaskProperties.type.polymorphicDiscriminator,\n    uberParent: \"ProjectTaskProperties\",\n    className: \"ValidateMigrationInputSqlServerSqlDbSyncTaskProperties\",\n    modelProperties: {\n      ...ProjectTaskProperties.type.modelProperties,\n      input: {\n        serializedName: \"input\",\n        type: {\n          name: \"Composite\",\n          className: \"ValidateSyncMigrationInputSqlServerTaskInput\"\n        }\n      },\n      output: {\n        readOnly: true,\n        serializedName: \"output\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ValidateSyncMigrationInputSqlServerTaskOutput\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SyncMigrationDatabaseErrorEvent: msRest.CompositeMapper = {\n  serializedName: \"SyncMigrationDatabaseErrorEvent\",\n  type: {\n    name: \"Composite\",\n    className: \"SyncMigrationDatabaseErrorEvent\",\n    modelProperties: {\n      timestampString: {\n        readOnly: true,\n        serializedName: \"timestampString\",\n        type: {\n          name: \"String\"\n        }\n      },\n      eventTypeString: {\n        readOnly: true,\n        serializedName: \"eventTypeString\",\n        type: {\n          name: \"String\"\n        }\n      },\n      eventText: {\n        readOnly: true,\n        serializedName: \"eventText\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateOracleAzureDbPostgreSqlSyncTaskOutput: msRest.CompositeMapper = {\n  serializedName: \"MigrateOracleAzureDbPostgreSqlSyncTaskOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: {\n      serializedName: \"resultType\",\n      clientName: \"resultType\"\n    },\n    uberParent: \"MigrateOracleAzureDbPostgreSqlSyncTaskOutput\",\n    className: \"MigrateOracleAzureDbPostgreSqlSyncTaskOutput\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resultType: {\n        required: true,\n        serializedName: \"resultType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseError: msRest.CompositeMapper = {\n  serializedName: \"DatabaseLevelErrorOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: MigrateOracleAzureDbPostgreSqlSyncTaskOutput.type.polymorphicDiscriminator,\n    uberParent: \"MigrateOracleAzureDbPostgreSqlSyncTaskOutput\",\n    className: \"MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseError\",\n    modelProperties: {\n      ...MigrateOracleAzureDbPostgreSqlSyncTaskOutput.type.modelProperties,\n      errorMessage: {\n        serializedName: \"errorMessage\",\n        type: {\n          name: \"String\"\n        }\n      },\n      events: {\n        serializedName: \"events\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SyncMigrationDatabaseErrorEvent\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateOracleAzureDbPostgreSqlSyncTaskOutputError: msRest.CompositeMapper = {\n  serializedName: \"ErrorOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: MigrateOracleAzureDbPostgreSqlSyncTaskOutput.type.polymorphicDiscriminator,\n    uberParent: \"MigrateOracleAzureDbPostgreSqlSyncTaskOutput\",\n    className: \"MigrateOracleAzureDbPostgreSqlSyncTaskOutputError\",\n    modelProperties: {\n      ...MigrateOracleAzureDbPostgreSqlSyncTaskOutput.type.modelProperties,\n      error: {\n        readOnly: true,\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ReportableException\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevel: msRest.CompositeMapper = {\n  serializedName: \"TableLevelOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: MigrateOracleAzureDbPostgreSqlSyncTaskOutput.type.polymorphicDiscriminator,\n    uberParent: \"MigrateOracleAzureDbPostgreSqlSyncTaskOutput\",\n    className: \"MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevel\",\n    modelProperties: {\n      ...MigrateOracleAzureDbPostgreSqlSyncTaskOutput.type.modelProperties,\n      tableName: {\n        readOnly: true,\n        serializedName: \"tableName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      databaseName: {\n        readOnly: true,\n        serializedName: \"databaseName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      cdcInsertCounter: {\n        readOnly: true,\n        serializedName: \"cdcInsertCounter\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      cdcUpdateCounter: {\n        readOnly: true,\n        serializedName: \"cdcUpdateCounter\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      cdcDeleteCounter: {\n        readOnly: true,\n        serializedName: \"cdcDeleteCounter\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      fullLoadEstFinishTime: {\n        readOnly: true,\n        serializedName: \"fullLoadEstFinishTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      fullLoadStartedOn: {\n        readOnly: true,\n        serializedName: \"fullLoadStartedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      fullLoadEndedOn: {\n        readOnly: true,\n        serializedName: \"fullLoadEndedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      fullLoadTotalRows: {\n        readOnly: true,\n        serializedName: \"fullLoadTotalRows\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      state: {\n        readOnly: true,\n        serializedName: \"state\",\n        type: {\n          name: \"String\"\n        }\n      },\n      totalChangesApplied: {\n        readOnly: true,\n        serializedName: \"totalChangesApplied\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      dataErrorsCounter: {\n        readOnly: true,\n        serializedName: \"dataErrorsCounter\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      lastModifiedTime: {\n        readOnly: true,\n        serializedName: \"lastModifiedTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevel: msRest.CompositeMapper = {\n  serializedName: \"DatabaseLevelOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: MigrateOracleAzureDbPostgreSqlSyncTaskOutput.type.polymorphicDiscriminator,\n    uberParent: \"MigrateOracleAzureDbPostgreSqlSyncTaskOutput\",\n    className: \"MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevel\",\n    modelProperties: {\n      ...MigrateOracleAzureDbPostgreSqlSyncTaskOutput.type.modelProperties,\n      databaseName: {\n        readOnly: true,\n        serializedName: \"databaseName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      startedOn: {\n        readOnly: true,\n        serializedName: \"startedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endedOn: {\n        readOnly: true,\n        serializedName: \"endedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      migrationState: {\n        readOnly: true,\n        serializedName: \"migrationState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      incomingChanges: {\n        readOnly: true,\n        serializedName: \"incomingChanges\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      appliedChanges: {\n        readOnly: true,\n        serializedName: \"appliedChanges\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      cdcInsertCounter: {\n        readOnly: true,\n        serializedName: \"cdcInsertCounter\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      cdcDeleteCounter: {\n        readOnly: true,\n        serializedName: \"cdcDeleteCounter\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      cdcUpdateCounter: {\n        readOnly: true,\n        serializedName: \"cdcUpdateCounter\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      fullLoadCompletedTables: {\n        readOnly: true,\n        serializedName: \"fullLoadCompletedTables\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      fullLoadLoadingTables: {\n        readOnly: true,\n        serializedName: \"fullLoadLoadingTables\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      fullLoadQueuedTables: {\n        readOnly: true,\n        serializedName: \"fullLoadQueuedTables\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      fullLoadErroredTables: {\n        readOnly: true,\n        serializedName: \"fullLoadErroredTables\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      initializationCompleted: {\n        readOnly: true,\n        serializedName: \"initializationCompleted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      latency: {\n        readOnly: true,\n        serializedName: \"latency\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevel: msRest.CompositeMapper = {\n  serializedName: \"MigrationLevelOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: MigrateOracleAzureDbPostgreSqlSyncTaskOutput.type.polymorphicDiscriminator,\n    uberParent: \"MigrateOracleAzureDbPostgreSqlSyncTaskOutput\",\n    className: \"MigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevel\",\n    modelProperties: {\n      ...MigrateOracleAzureDbPostgreSqlSyncTaskOutput.type.modelProperties,\n      startedOn: {\n        readOnly: true,\n        serializedName: \"startedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endedOn: {\n        readOnly: true,\n        serializedName: \"endedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      sourceServerVersion: {\n        readOnly: true,\n        serializedName: \"sourceServerVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sourceServer: {\n        readOnly: true,\n        serializedName: \"sourceServer\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetServerVersion: {\n        readOnly: true,\n        serializedName: \"targetServerVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetServer: {\n        readOnly: true,\n        serializedName: \"targetServer\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateOracleAzureDbForPostgreSqlSyncTaskProperties: msRest.CompositeMapper = {\n  serializedName: \"Migrate.Oracle.AzureDbForPostgreSql.Sync\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ProjectTaskProperties.type.polymorphicDiscriminator,\n    uberParent: \"ProjectTaskProperties\",\n    className: \"MigrateOracleAzureDbForPostgreSqlSyncTaskProperties\",\n    modelProperties: {\n      ...ProjectTaskProperties.type.modelProperties,\n      input: {\n        serializedName: \"input\",\n        type: {\n          name: \"Composite\",\n          className: \"MigrateOracleAzureDbPostgreSqlSyncTaskInput\"\n        }\n      },\n      output: {\n        readOnly: true,\n        serializedName: \"output\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MigrateOracleAzureDbPostgreSqlSyncTaskOutput\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutput: msRest.CompositeMapper = {\n  serializedName: \"MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: {\n      serializedName: \"resultType\",\n      clientName: \"resultType\"\n    },\n    uberParent: \"MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutput\",\n    className: \"MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutput\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resultType: {\n        required: true,\n        serializedName: \"resultType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseError: msRest.CompositeMapper = {\n  serializedName: \"DatabaseLevelErrorOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutput.type.polymorphicDiscriminator,\n    uberParent: \"MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutput\",\n    className: \"MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseError\",\n    modelProperties: {\n      ...MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutput.type.modelProperties,\n      errorMessage: {\n        serializedName: \"errorMessage\",\n        type: {\n          name: \"String\"\n        }\n      },\n      events: {\n        serializedName: \"events\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SyncMigrationDatabaseErrorEvent\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputError: msRest.CompositeMapper = {\n  serializedName: \"ErrorOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutput.type.polymorphicDiscriminator,\n    uberParent: \"MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutput\",\n    className: \"MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputError\",\n    modelProperties: {\n      ...MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutput.type.modelProperties,\n      error: {\n        readOnly: true,\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ReportableException\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevel: msRest.CompositeMapper = {\n  serializedName: \"TableLevelOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutput.type.polymorphicDiscriminator,\n    uberParent: \"MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutput\",\n    className: \"MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevel\",\n    modelProperties: {\n      ...MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutput.type.modelProperties,\n      tableName: {\n        readOnly: true,\n        serializedName: \"tableName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      databaseName: {\n        readOnly: true,\n        serializedName: \"databaseName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      cdcInsertCounter: {\n        readOnly: true,\n        serializedName: \"cdcInsertCounter\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      cdcUpdateCounter: {\n        readOnly: true,\n        serializedName: \"cdcUpdateCounter\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      cdcDeleteCounter: {\n        readOnly: true,\n        serializedName: \"cdcDeleteCounter\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      fullLoadEstFinishTime: {\n        readOnly: true,\n        serializedName: \"fullLoadEstFinishTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      fullLoadStartedOn: {\n        readOnly: true,\n        serializedName: \"fullLoadStartedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      fullLoadEndedOn: {\n        readOnly: true,\n        serializedName: \"fullLoadEndedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      fullLoadTotalRows: {\n        readOnly: true,\n        serializedName: \"fullLoadTotalRows\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      state: {\n        readOnly: true,\n        serializedName: \"state\",\n        type: {\n          name: \"String\"\n        }\n      },\n      totalChangesApplied: {\n        readOnly: true,\n        serializedName: \"totalChangesApplied\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      dataErrorsCounter: {\n        readOnly: true,\n        serializedName: \"dataErrorsCounter\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      lastModifiedTime: {\n        readOnly: true,\n        serializedName: \"lastModifiedTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevel: msRest.CompositeMapper = {\n  serializedName: \"DatabaseLevelOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutput.type.polymorphicDiscriminator,\n    uberParent: \"MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutput\",\n    className: \"MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevel\",\n    modelProperties: {\n      ...MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutput.type.modelProperties,\n      databaseName: {\n        readOnly: true,\n        serializedName: \"databaseName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      startedOn: {\n        readOnly: true,\n        serializedName: \"startedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endedOn: {\n        readOnly: true,\n        serializedName: \"endedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      migrationState: {\n        readOnly: true,\n        serializedName: \"migrationState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      incomingChanges: {\n        readOnly: true,\n        serializedName: \"incomingChanges\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      appliedChanges: {\n        readOnly: true,\n        serializedName: \"appliedChanges\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      cdcInsertCounter: {\n        readOnly: true,\n        serializedName: \"cdcInsertCounter\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      cdcDeleteCounter: {\n        readOnly: true,\n        serializedName: \"cdcDeleteCounter\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      cdcUpdateCounter: {\n        readOnly: true,\n        serializedName: \"cdcUpdateCounter\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      fullLoadCompletedTables: {\n        readOnly: true,\n        serializedName: \"fullLoadCompletedTables\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      fullLoadLoadingTables: {\n        readOnly: true,\n        serializedName: \"fullLoadLoadingTables\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      fullLoadQueuedTables: {\n        readOnly: true,\n        serializedName: \"fullLoadQueuedTables\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      fullLoadErroredTables: {\n        readOnly: true,\n        serializedName: \"fullLoadErroredTables\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      initializationCompleted: {\n        readOnly: true,\n        serializedName: \"initializationCompleted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      latency: {\n        readOnly: true,\n        serializedName: \"latency\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevel: msRest.CompositeMapper = {\n  serializedName: \"MigrationLevelOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutput.type.polymorphicDiscriminator,\n    uberParent: \"MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutput\",\n    className: \"MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevel\",\n    modelProperties: {\n      ...MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutput.type.modelProperties,\n      startedOn: {\n        readOnly: true,\n        serializedName: \"startedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endedOn: {\n        readOnly: true,\n        serializedName: \"endedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      sourceServerVersion: {\n        readOnly: true,\n        serializedName: \"sourceServerVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sourceServer: {\n        readOnly: true,\n        serializedName: \"sourceServer\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetServerVersion: {\n        readOnly: true,\n        serializedName: \"targetServerVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetServer: {\n        readOnly: true,\n        serializedName: \"targetServer\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput: msRest.CompositeMapper = {\n  serializedName: \"MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput\",\n  type: {\n    name: \"Composite\",\n    className: \"MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetDatabaseName: {\n        serializedName: \"targetDatabaseName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      migrationSetting: {\n        serializedName: \"migrationSetting\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      sourceSetting: {\n        serializedName: \"sourceSetting\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      targetSetting: {\n        serializedName: \"targetSetting\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput: msRest.CompositeMapper = {\n  serializedName: \"MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput\",\n  type: {\n    name: \"Composite\",\n    className: \"MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput\",\n    modelProperties: {\n      selectedDatabases: {\n        required: true,\n        serializedName: \"selectedDatabases\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput\"\n            }\n          }\n        }\n      },\n      targetConnectionInfo: {\n        required: true,\n        serializedName: \"targetConnectionInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"PostgreSqlConnectionInfo\"\n        }\n      },\n      sourceConnectionInfo: {\n        required: true,\n        serializedName: \"sourceConnectionInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"PostgreSqlConnectionInfo\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigratePostgreSqlAzureDbForPostgreSqlSyncTaskProperties: msRest.CompositeMapper = {\n  serializedName: \"Migrate.PostgreSql.AzureDbForPostgreSql.Sync\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ProjectTaskProperties.type.polymorphicDiscriminator,\n    uberParent: \"ProjectTaskProperties\",\n    className: \"MigratePostgreSqlAzureDbForPostgreSqlSyncTaskProperties\",\n    modelProperties: {\n      ...ProjectTaskProperties.type.modelProperties,\n      input: {\n        serializedName: \"input\",\n        type: {\n          name: \"Composite\",\n          className: \"MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput\"\n        }\n      },\n      output: {\n        readOnly: true,\n        serializedName: \"output\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutput\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateMySqlAzureDbForMySqlSyncTaskOutput: msRest.CompositeMapper = {\n  serializedName: \"MigrateMySqlAzureDbForMySqlSyncTaskOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: {\n      serializedName: \"resultType\",\n      clientName: \"resultType\"\n    },\n    uberParent: \"MigrateMySqlAzureDbForMySqlSyncTaskOutput\",\n    className: \"MigrateMySqlAzureDbForMySqlSyncTaskOutput\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resultType: {\n        required: true,\n        serializedName: \"resultType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseError: msRest.CompositeMapper = {\n  serializedName: \"DatabaseLevelErrorOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: MigrateMySqlAzureDbForMySqlSyncTaskOutput.type.polymorphicDiscriminator,\n    uberParent: \"MigrateMySqlAzureDbForMySqlSyncTaskOutput\",\n    className: \"MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseError\",\n    modelProperties: {\n      ...MigrateMySqlAzureDbForMySqlSyncTaskOutput.type.modelProperties,\n      errorMessage: {\n        serializedName: \"errorMessage\",\n        type: {\n          name: \"String\"\n        }\n      },\n      events: {\n        serializedName: \"events\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SyncMigrationDatabaseErrorEvent\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateMySqlAzureDbForMySqlSyncTaskOutputError: msRest.CompositeMapper = {\n  serializedName: \"ErrorOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: MigrateMySqlAzureDbForMySqlSyncTaskOutput.type.polymorphicDiscriminator,\n    uberParent: \"MigrateMySqlAzureDbForMySqlSyncTaskOutput\",\n    className: \"MigrateMySqlAzureDbForMySqlSyncTaskOutputError\",\n    modelProperties: {\n      ...MigrateMySqlAzureDbForMySqlSyncTaskOutput.type.modelProperties,\n      error: {\n        readOnly: true,\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ReportableException\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevel: msRest.CompositeMapper = {\n  serializedName: \"TableLevelOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: MigrateMySqlAzureDbForMySqlSyncTaskOutput.type.polymorphicDiscriminator,\n    uberParent: \"MigrateMySqlAzureDbForMySqlSyncTaskOutput\",\n    className: \"MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevel\",\n    modelProperties: {\n      ...MigrateMySqlAzureDbForMySqlSyncTaskOutput.type.modelProperties,\n      tableName: {\n        readOnly: true,\n        serializedName: \"tableName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      databaseName: {\n        readOnly: true,\n        serializedName: \"databaseName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      cdcInsertCounter: {\n        readOnly: true,\n        serializedName: \"cdcInsertCounter\",\n        type: {\n          name: \"String\"\n        }\n      },\n      cdcUpdateCounter: {\n        readOnly: true,\n        serializedName: \"cdcUpdateCounter\",\n        type: {\n          name: \"String\"\n        }\n      },\n      cdcDeleteCounter: {\n        readOnly: true,\n        serializedName: \"cdcDeleteCounter\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fullLoadEstFinishTime: {\n        readOnly: true,\n        serializedName: \"fullLoadEstFinishTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      fullLoadStartedOn: {\n        readOnly: true,\n        serializedName: \"fullLoadStartedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      fullLoadEndedOn: {\n        readOnly: true,\n        serializedName: \"fullLoadEndedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      fullLoadTotalRows: {\n        readOnly: true,\n        serializedName: \"fullLoadTotalRows\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      state: {\n        readOnly: true,\n        serializedName: \"state\",\n        type: {\n          name: \"String\"\n        }\n      },\n      totalChangesApplied: {\n        readOnly: true,\n        serializedName: \"totalChangesApplied\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      dataErrorsCounter: {\n        readOnly: true,\n        serializedName: \"dataErrorsCounter\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      lastModifiedTime: {\n        readOnly: true,\n        serializedName: \"lastModifiedTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevel: msRest.CompositeMapper = {\n  serializedName: \"DatabaseLevelOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: MigrateMySqlAzureDbForMySqlSyncTaskOutput.type.polymorphicDiscriminator,\n    uberParent: \"MigrateMySqlAzureDbForMySqlSyncTaskOutput\",\n    className: \"MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevel\",\n    modelProperties: {\n      ...MigrateMySqlAzureDbForMySqlSyncTaskOutput.type.modelProperties,\n      databaseName: {\n        readOnly: true,\n        serializedName: \"databaseName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      startedOn: {\n        readOnly: true,\n        serializedName: \"startedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endedOn: {\n        readOnly: true,\n        serializedName: \"endedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      migrationState: {\n        readOnly: true,\n        serializedName: \"migrationState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      incomingChanges: {\n        readOnly: true,\n        serializedName: \"incomingChanges\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      appliedChanges: {\n        readOnly: true,\n        serializedName: \"appliedChanges\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      cdcInsertCounter: {\n        readOnly: true,\n        serializedName: \"cdcInsertCounter\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      cdcDeleteCounter: {\n        readOnly: true,\n        serializedName: \"cdcDeleteCounter\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      cdcUpdateCounter: {\n        readOnly: true,\n        serializedName: \"cdcUpdateCounter\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      fullLoadCompletedTables: {\n        readOnly: true,\n        serializedName: \"fullLoadCompletedTables\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      fullLoadLoadingTables: {\n        readOnly: true,\n        serializedName: \"fullLoadLoadingTables\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      fullLoadQueuedTables: {\n        readOnly: true,\n        serializedName: \"fullLoadQueuedTables\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      fullLoadErroredTables: {\n        readOnly: true,\n        serializedName: \"fullLoadErroredTables\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      initializationCompleted: {\n        readOnly: true,\n        serializedName: \"initializationCompleted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      latency: {\n        readOnly: true,\n        serializedName: \"latency\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevel: msRest.CompositeMapper = {\n  serializedName: \"MigrationLevelOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: MigrateMySqlAzureDbForMySqlSyncTaskOutput.type.polymorphicDiscriminator,\n    uberParent: \"MigrateMySqlAzureDbForMySqlSyncTaskOutput\",\n    className: \"MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevel\",\n    modelProperties: {\n      ...MigrateMySqlAzureDbForMySqlSyncTaskOutput.type.modelProperties,\n      startedOn: {\n        readOnly: true,\n        serializedName: \"startedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endedOn: {\n        readOnly: true,\n        serializedName: \"endedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      sourceServerVersion: {\n        readOnly: true,\n        serializedName: \"sourceServerVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sourceServer: {\n        readOnly: true,\n        serializedName: \"sourceServer\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetServerVersion: {\n        readOnly: true,\n        serializedName: \"targetServerVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetServer: {\n        readOnly: true,\n        serializedName: \"targetServer\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateMySqlAzureDbForMySqlSyncDatabaseInput: msRest.CompositeMapper = {\n  serializedName: \"MigrateMySqlAzureDbForMySqlSyncDatabaseInput\",\n  type: {\n    name: \"Composite\",\n    className: \"MigrateMySqlAzureDbForMySqlSyncDatabaseInput\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetDatabaseName: {\n        serializedName: \"targetDatabaseName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      migrationSetting: {\n        serializedName: \"migrationSetting\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      sourceSetting: {\n        serializedName: \"sourceSetting\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      targetSetting: {\n        serializedName: \"targetSetting\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateMySqlAzureDbForMySqlSyncTaskInput: msRest.CompositeMapper = {\n  serializedName: \"MigrateMySqlAzureDbForMySqlSyncTaskInput\",\n  type: {\n    name: \"Composite\",\n    className: \"MigrateMySqlAzureDbForMySqlSyncTaskInput\",\n    modelProperties: {\n      sourceConnectionInfo: {\n        required: true,\n        serializedName: \"sourceConnectionInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"MySqlConnectionInfo\"\n        }\n      },\n      targetConnectionInfo: {\n        required: true,\n        serializedName: \"targetConnectionInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"MySqlConnectionInfo\"\n        }\n      },\n      selectedDatabases: {\n        required: true,\n        serializedName: \"selectedDatabases\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MigrateMySqlAzureDbForMySqlSyncDatabaseInput\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateMySqlAzureDbForMySqlSyncTaskProperties: msRest.CompositeMapper = {\n  serializedName: \"Migrate.MySql.AzureDbForMySql.Sync\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ProjectTaskProperties.type.polymorphicDiscriminator,\n    uberParent: \"ProjectTaskProperties\",\n    className: \"MigrateMySqlAzureDbForMySqlSyncTaskProperties\",\n    modelProperties: {\n      ...ProjectTaskProperties.type.modelProperties,\n      input: {\n        serializedName: \"input\",\n        type: {\n          name: \"Composite\",\n          className: \"MigrateMySqlAzureDbForMySqlSyncTaskInput\"\n        }\n      },\n      output: {\n        readOnly: true,\n        serializedName: \"output\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MigrateMySqlAzureDbForMySqlSyncTaskOutput\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateSqlServerSqlDbSyncTaskOutput: msRest.CompositeMapper = {\n  serializedName: \"MigrateSqlServerSqlDbSyncTaskOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: {\n      serializedName: \"resultType\",\n      clientName: \"resultType\"\n    },\n    uberParent: \"MigrateSqlServerSqlDbSyncTaskOutput\",\n    className: \"MigrateSqlServerSqlDbSyncTaskOutput\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resultType: {\n        required: true,\n        serializedName: \"resultType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateSqlServerSqlDbSyncTaskOutputDatabaseError: msRest.CompositeMapper = {\n  serializedName: \"DatabaseLevelErrorOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: MigrateSqlServerSqlDbSyncTaskOutput.type.polymorphicDiscriminator,\n    uberParent: \"MigrateSqlServerSqlDbSyncTaskOutput\",\n    className: \"MigrateSqlServerSqlDbSyncTaskOutputDatabaseError\",\n    modelProperties: {\n      ...MigrateSqlServerSqlDbSyncTaskOutput.type.modelProperties,\n      errorMessage: {\n        serializedName: \"errorMessage\",\n        type: {\n          name: \"String\"\n        }\n      },\n      events: {\n        serializedName: \"events\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SyncMigrationDatabaseErrorEvent\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateSqlServerSqlDbSyncTaskOutputError: msRest.CompositeMapper = {\n  serializedName: \"ErrorOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: MigrateSqlServerSqlDbSyncTaskOutput.type.polymorphicDiscriminator,\n    uberParent: \"MigrateSqlServerSqlDbSyncTaskOutput\",\n    className: \"MigrateSqlServerSqlDbSyncTaskOutputError\",\n    modelProperties: {\n      ...MigrateSqlServerSqlDbSyncTaskOutput.type.modelProperties,\n      error: {\n        readOnly: true,\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ReportableException\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateSqlServerSqlDbSyncTaskOutputTableLevel: msRest.CompositeMapper = {\n  serializedName: \"TableLevelOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: MigrateSqlServerSqlDbSyncTaskOutput.type.polymorphicDiscriminator,\n    uberParent: \"MigrateSqlServerSqlDbSyncTaskOutput\",\n    className: \"MigrateSqlServerSqlDbSyncTaskOutputTableLevel\",\n    modelProperties: {\n      ...MigrateSqlServerSqlDbSyncTaskOutput.type.modelProperties,\n      tableName: {\n        readOnly: true,\n        serializedName: \"tableName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      databaseName: {\n        readOnly: true,\n        serializedName: \"databaseName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      cdcInsertCounter: {\n        readOnly: true,\n        serializedName: \"cdcInsertCounter\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      cdcUpdateCounter: {\n        readOnly: true,\n        serializedName: \"cdcUpdateCounter\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      cdcDeleteCounter: {\n        readOnly: true,\n        serializedName: \"cdcDeleteCounter\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      fullLoadEstFinishTime: {\n        readOnly: true,\n        serializedName: \"fullLoadEstFinishTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      fullLoadStartedOn: {\n        readOnly: true,\n        serializedName: \"fullLoadStartedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      fullLoadEndedOn: {\n        readOnly: true,\n        serializedName: \"fullLoadEndedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      fullLoadTotalRows: {\n        readOnly: true,\n        serializedName: \"fullLoadTotalRows\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      state: {\n        readOnly: true,\n        serializedName: \"state\",\n        type: {\n          name: \"String\"\n        }\n      },\n      totalChangesApplied: {\n        readOnly: true,\n        serializedName: \"totalChangesApplied\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      dataErrorsCounter: {\n        readOnly: true,\n        serializedName: \"dataErrorsCounter\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      lastModifiedTime: {\n        readOnly: true,\n        serializedName: \"lastModifiedTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevel: msRest.CompositeMapper = {\n  serializedName: \"DatabaseLevelOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: MigrateSqlServerSqlDbSyncTaskOutput.type.polymorphicDiscriminator,\n    uberParent: \"MigrateSqlServerSqlDbSyncTaskOutput\",\n    className: \"MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevel\",\n    modelProperties: {\n      ...MigrateSqlServerSqlDbSyncTaskOutput.type.modelProperties,\n      databaseName: {\n        readOnly: true,\n        serializedName: \"databaseName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      startedOn: {\n        readOnly: true,\n        serializedName: \"startedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endedOn: {\n        readOnly: true,\n        serializedName: \"endedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      migrationState: {\n        readOnly: true,\n        serializedName: \"migrationState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      incomingChanges: {\n        readOnly: true,\n        serializedName: \"incomingChanges\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      appliedChanges: {\n        readOnly: true,\n        serializedName: \"appliedChanges\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      cdcInsertCounter: {\n        readOnly: true,\n        serializedName: \"cdcInsertCounter\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      cdcDeleteCounter: {\n        readOnly: true,\n        serializedName: \"cdcDeleteCounter\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      cdcUpdateCounter: {\n        readOnly: true,\n        serializedName: \"cdcUpdateCounter\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      fullLoadCompletedTables: {\n        readOnly: true,\n        serializedName: \"fullLoadCompletedTables\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      fullLoadLoadingTables: {\n        readOnly: true,\n        serializedName: \"fullLoadLoadingTables\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      fullLoadQueuedTables: {\n        readOnly: true,\n        serializedName: \"fullLoadQueuedTables\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      fullLoadErroredTables: {\n        readOnly: true,\n        serializedName: \"fullLoadErroredTables\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      initializationCompleted: {\n        readOnly: true,\n        serializedName: \"initializationCompleted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      latency: {\n        readOnly: true,\n        serializedName: \"latency\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateSqlServerSqlDbSyncTaskOutputMigrationLevel: msRest.CompositeMapper = {\n  serializedName: \"MigrationLevelOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: MigrateSqlServerSqlDbSyncTaskOutput.type.polymorphicDiscriminator,\n    uberParent: \"MigrateSqlServerSqlDbSyncTaskOutput\",\n    className: \"MigrateSqlServerSqlDbSyncTaskOutputMigrationLevel\",\n    modelProperties: {\n      ...MigrateSqlServerSqlDbSyncTaskOutput.type.modelProperties,\n      startedOn: {\n        readOnly: true,\n        serializedName: \"startedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endedOn: {\n        readOnly: true,\n        serializedName: \"endedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      sourceServerVersion: {\n        readOnly: true,\n        serializedName: \"sourceServerVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sourceServer: {\n        readOnly: true,\n        serializedName: \"sourceServer\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetServerVersion: {\n        readOnly: true,\n        serializedName: \"targetServerVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetServer: {\n        readOnly: true,\n        serializedName: \"targetServer\",\n        type: {\n          name: \"String\"\n        }\n      },\n      databaseCount: {\n        readOnly: true,\n        serializedName: \"databaseCount\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigrationValidationOptions: msRest.CompositeMapper = {\n  serializedName: \"MigrationValidationOptions\",\n  type: {\n    name: \"Composite\",\n    className: \"MigrationValidationOptions\",\n    modelProperties: {\n      enableSchemaValidation: {\n        serializedName: \"enableSchemaValidation\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      enableDataIntegrityValidation: {\n        serializedName: \"enableDataIntegrityValidation\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      enableQueryAnalysisValidation: {\n        serializedName: \"enableQueryAnalysisValidation\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateSqlServerSqlDbSyncTaskInput: msRest.CompositeMapper = {\n  serializedName: \"MigrateSqlServerSqlDbSyncTaskInput\",\n  type: {\n    name: \"Composite\",\n    className: \"MigrateSqlServerSqlDbSyncTaskInput\",\n    modelProperties: {\n      ...SqlMigrationTaskInput.type.modelProperties,\n      selectedDatabases: {\n        required: true,\n        serializedName: \"selectedDatabases\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MigrateSqlServerSqlDbSyncDatabaseInput\"\n            }\n          }\n        }\n      },\n      validationOptions: {\n        serializedName: \"validationOptions\",\n        type: {\n          name: \"Composite\",\n          className: \"MigrationValidationOptions\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateSqlServerSqlDbSyncTaskProperties: msRest.CompositeMapper = {\n  serializedName: \"Migrate.SqlServer.AzureSqlDb.Sync\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ProjectTaskProperties.type.polymorphicDiscriminator,\n    uberParent: \"ProjectTaskProperties\",\n    className: \"MigrateSqlServerSqlDbSyncTaskProperties\",\n    modelProperties: {\n      ...ProjectTaskProperties.type.modelProperties,\n      input: {\n        serializedName: \"input\",\n        type: {\n          name: \"Composite\",\n          className: \"MigrateSqlServerSqlDbSyncTaskInput\"\n        }\n      },\n      output: {\n        readOnly: true,\n        serializedName: \"output\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MigrateSqlServerSqlDbSyncTaskOutput\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ValidationError: msRest.CompositeMapper = {\n  serializedName: \"ValidationError\",\n  type: {\n    name: \"Composite\",\n    className: \"ValidationError\",\n    modelProperties: {\n      text: {\n        serializedName: \"text\",\n        type: {\n          name: \"String\"\n        }\n      },\n      severity: {\n        serializedName: \"severity\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const WaitStatistics: msRest.CompositeMapper = {\n  serializedName: \"WaitStatistics\",\n  type: {\n    name: \"Composite\",\n    className: \"WaitStatistics\",\n    modelProperties: {\n      waitType: {\n        serializedName: \"waitType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      waitTimeMs: {\n        serializedName: \"waitTimeMs\",\n        defaultValue: 0,\n        type: {\n          name: \"Number\"\n        }\n      },\n      waitCount: {\n        serializedName: \"waitCount\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ExecutionStatistics: msRest.CompositeMapper = {\n  serializedName: \"ExecutionStatistics\",\n  type: {\n    name: \"Composite\",\n    className: \"ExecutionStatistics\",\n    modelProperties: {\n      executionCount: {\n        serializedName: \"executionCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      cpuTimeMs: {\n        serializedName: \"cpuTimeMs\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      elapsedTimeMs: {\n        serializedName: \"elapsedTimeMs\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      waitStats: {\n        serializedName: \"waitStats\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"Composite\",\n              className: \"WaitStatistics\"\n            }\n          }\n        }\n      },\n      hasErrors: {\n        serializedName: \"hasErrors\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      sqlErrors: {\n        serializedName: \"sqlErrors\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const QueryExecutionResult: msRest.CompositeMapper = {\n  serializedName: \"QueryExecutionResult\",\n  type: {\n    name: \"Composite\",\n    className: \"QueryExecutionResult\",\n    modelProperties: {\n      queryText: {\n        serializedName: \"queryText\",\n        type: {\n          name: \"String\"\n        }\n      },\n      statementsInBatch: {\n        serializedName: \"statementsInBatch\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      sourceResult: {\n        serializedName: \"sourceResult\",\n        type: {\n          name: \"Composite\",\n          className: \"ExecutionStatistics\"\n        }\n      },\n      targetResult: {\n        serializedName: \"targetResult\",\n        type: {\n          name: \"Composite\",\n          className: \"ExecutionStatistics\"\n        }\n      }\n    }\n  }\n};\n\nexport const QueryAnalysisValidationResult: msRest.CompositeMapper = {\n  serializedName: \"QueryAnalysisValidationResult\",\n  type: {\n    name: \"Composite\",\n    className: \"QueryAnalysisValidationResult\",\n    modelProperties: {\n      queryResults: {\n        serializedName: \"queryResults\",\n        type: {\n          name: \"Composite\",\n          className: \"QueryExecutionResult\"\n        }\n      },\n      validationErrors: {\n        serializedName: \"validationErrors\",\n        type: {\n          name: \"Composite\",\n          className: \"ValidationError\"\n        }\n      }\n    }\n  }\n};\n\nexport const SchemaComparisonValidationResultType: msRest.CompositeMapper = {\n  serializedName: \"SchemaComparisonValidationResultType\",\n  type: {\n    name: \"Composite\",\n    className: \"SchemaComparisonValidationResultType\",\n    modelProperties: {\n      objectName: {\n        serializedName: \"objectName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      objectType: {\n        serializedName: \"objectType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      updateAction: {\n        serializedName: \"updateAction\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SchemaComparisonValidationResult: msRest.CompositeMapper = {\n  serializedName: \"SchemaComparisonValidationResult\",\n  type: {\n    name: \"Composite\",\n    className: \"SchemaComparisonValidationResult\",\n    modelProperties: {\n      schemaDifferences: {\n        serializedName: \"schemaDifferences\",\n        type: {\n          name: \"Composite\",\n          className: \"SchemaComparisonValidationResultType\"\n        }\n      },\n      validationErrors: {\n        serializedName: \"validationErrors\",\n        type: {\n          name: \"Composite\",\n          className: \"ValidationError\"\n        }\n      },\n      sourceDatabaseObjectCount: {\n        serializedName: \"sourceDatabaseObjectCount\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"Number\"\n            }\n          }\n        }\n      },\n      targetDatabaseObjectCount: {\n        serializedName: \"targetDatabaseObjectCount\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"Number\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DataIntegrityValidationResult: msRest.CompositeMapper = {\n  serializedName: \"DataIntegrityValidationResult\",\n  type: {\n    name: \"Composite\",\n    className: \"DataIntegrityValidationResult\",\n    modelProperties: {\n      failedObjects: {\n        serializedName: \"failedObjects\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      validationErrors: {\n        serializedName: \"validationErrors\",\n        type: {\n          name: \"Composite\",\n          className: \"ValidationError\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigrationValidationDatabaseLevelResult: msRest.CompositeMapper = {\n  serializedName: \"MigrationValidationDatabaseLevelResult\",\n  type: {\n    name: \"Composite\",\n    className: \"MigrationValidationDatabaseLevelResult\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      migrationId: {\n        readOnly: true,\n        serializedName: \"migrationId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sourceDatabaseName: {\n        readOnly: true,\n        serializedName: \"sourceDatabaseName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetDatabaseName: {\n        readOnly: true,\n        serializedName: \"targetDatabaseName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      startedOn: {\n        readOnly: true,\n        serializedName: \"startedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endedOn: {\n        readOnly: true,\n        serializedName: \"endedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      dataIntegrityValidationResult: {\n        readOnly: true,\n        serializedName: \"dataIntegrityValidationResult\",\n        type: {\n          name: \"Composite\",\n          className: \"DataIntegrityValidationResult\"\n        }\n      },\n      schemaValidationResult: {\n        readOnly: true,\n        serializedName: \"schemaValidationResult\",\n        type: {\n          name: \"Composite\",\n          className: \"SchemaComparisonValidationResult\"\n        }\n      },\n      queryAnalysisValidationResult: {\n        readOnly: true,\n        serializedName: \"queryAnalysisValidationResult\",\n        type: {\n          name: \"Composite\",\n          className: \"QueryAnalysisValidationResult\"\n        }\n      },\n      status: {\n        readOnly: true,\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigrationValidationDatabaseSummaryResult: msRest.CompositeMapper = {\n  serializedName: \"MigrationValidationDatabaseSummaryResult\",\n  type: {\n    name: \"Composite\",\n    className: \"MigrationValidationDatabaseSummaryResult\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      migrationId: {\n        readOnly: true,\n        serializedName: \"migrationId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sourceDatabaseName: {\n        readOnly: true,\n        serializedName: \"sourceDatabaseName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetDatabaseName: {\n        readOnly: true,\n        serializedName: \"targetDatabaseName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      startedOn: {\n        readOnly: true,\n        serializedName: \"startedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endedOn: {\n        readOnly: true,\n        serializedName: \"endedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      status: {\n        readOnly: true,\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigrationValidationResult: msRest.CompositeMapper = {\n  serializedName: \"MigrationValidationResult\",\n  type: {\n    name: \"Composite\",\n    className: \"MigrationValidationResult\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      migrationId: {\n        readOnly: true,\n        serializedName: \"migrationId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      summaryResults: {\n        serializedName: \"summaryResults\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"Composite\",\n              className: \"MigrationValidationDatabaseSummaryResult\"\n            }\n          }\n        }\n      },\n      status: {\n        readOnly: true,\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateSqlServerSqlDbTaskOutput: msRest.CompositeMapper = {\n  serializedName: \"MigrateSqlServerSqlDbTaskOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: {\n      serializedName: \"resultType\",\n      clientName: \"resultType\"\n    },\n    uberParent: \"MigrateSqlServerSqlDbTaskOutput\",\n    className: \"MigrateSqlServerSqlDbTaskOutput\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resultType: {\n        required: true,\n        serializedName: \"resultType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateSqlServerSqlDbTaskOutputError: msRest.CompositeMapper = {\n  serializedName: \"ErrorOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: MigrateSqlServerSqlDbTaskOutput.type.polymorphicDiscriminator,\n    uberParent: \"MigrateSqlServerSqlDbTaskOutput\",\n    className: \"MigrateSqlServerSqlDbTaskOutputError\",\n    modelProperties: {\n      ...MigrateSqlServerSqlDbTaskOutput.type.modelProperties,\n      error: {\n        readOnly: true,\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ReportableException\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateSqlServerSqlDbTaskOutputTableLevel: msRest.CompositeMapper = {\n  serializedName: \"TableLevelOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: MigrateSqlServerSqlDbTaskOutput.type.polymorphicDiscriminator,\n    uberParent: \"MigrateSqlServerSqlDbTaskOutput\",\n    className: \"MigrateSqlServerSqlDbTaskOutputTableLevel\",\n    modelProperties: {\n      ...MigrateSqlServerSqlDbTaskOutput.type.modelProperties,\n      objectName: {\n        readOnly: true,\n        serializedName: \"objectName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      startedOn: {\n        readOnly: true,\n        serializedName: \"startedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endedOn: {\n        readOnly: true,\n        serializedName: \"endedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      state: {\n        readOnly: true,\n        serializedName: \"state\",\n        type: {\n          name: \"String\"\n        }\n      },\n      statusMessage: {\n        readOnly: true,\n        serializedName: \"statusMessage\",\n        type: {\n          name: \"String\"\n        }\n      },\n      itemsCount: {\n        readOnly: true,\n        serializedName: \"itemsCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      itemsCompletedCount: {\n        readOnly: true,\n        serializedName: \"itemsCompletedCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      errorPrefix: {\n        readOnly: true,\n        serializedName: \"errorPrefix\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resultPrefix: {\n        readOnly: true,\n        serializedName: \"resultPrefix\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DataItemMigrationSummaryResult: msRest.CompositeMapper = {\n  serializedName: \"DataItemMigrationSummaryResult\",\n  type: {\n    name: \"Composite\",\n    className: \"DataItemMigrationSummaryResult\",\n    modelProperties: {\n      name: {\n        readOnly: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      startedOn: {\n        readOnly: true,\n        serializedName: \"startedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endedOn: {\n        readOnly: true,\n        serializedName: \"endedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      state: {\n        readOnly: true,\n        serializedName: \"state\",\n        type: {\n          name: \"String\"\n        }\n      },\n      statusMessage: {\n        readOnly: true,\n        serializedName: \"statusMessage\",\n        type: {\n          name: \"String\"\n        }\n      },\n      itemsCount: {\n        readOnly: true,\n        serializedName: \"itemsCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      itemsCompletedCount: {\n        readOnly: true,\n        serializedName: \"itemsCompletedCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      errorPrefix: {\n        readOnly: true,\n        serializedName: \"errorPrefix\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resultPrefix: {\n        readOnly: true,\n        serializedName: \"resultPrefix\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateSqlServerSqlDbTaskOutputDatabaseLevel: msRest.CompositeMapper = {\n  serializedName: \"DatabaseLevelOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: MigrateSqlServerSqlDbTaskOutput.type.polymorphicDiscriminator,\n    uberParent: \"MigrateSqlServerSqlDbTaskOutput\",\n    className: \"MigrateSqlServerSqlDbTaskOutputDatabaseLevel\",\n    modelProperties: {\n      ...MigrateSqlServerSqlDbTaskOutput.type.modelProperties,\n      databaseName: {\n        readOnly: true,\n        serializedName: \"databaseName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      startedOn: {\n        readOnly: true,\n        serializedName: \"startedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endedOn: {\n        readOnly: true,\n        serializedName: \"endedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      state: {\n        readOnly: true,\n        serializedName: \"state\",\n        type: {\n          name: \"String\"\n        }\n      },\n      stage: {\n        readOnly: true,\n        serializedName: \"stage\",\n        type: {\n          name: \"String\"\n        }\n      },\n      statusMessage: {\n        readOnly: true,\n        serializedName: \"statusMessage\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        readOnly: true,\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      },\n      numberOfObjects: {\n        readOnly: true,\n        serializedName: \"numberOfObjects\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      numberOfObjectsCompleted: {\n        readOnly: true,\n        serializedName: \"numberOfObjectsCompleted\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      errorCount: {\n        readOnly: true,\n        serializedName: \"errorCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      errorPrefix: {\n        readOnly: true,\n        serializedName: \"errorPrefix\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resultPrefix: {\n        readOnly: true,\n        serializedName: \"resultPrefix\",\n        type: {\n          name: \"String\"\n        }\n      },\n      exceptionsAndWarnings: {\n        readOnly: true,\n        serializedName: \"exceptionsAndWarnings\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReportableException\"\n            }\n          }\n        }\n      },\n      objectSummary: {\n        readOnly: true,\n        serializedName: \"objectSummary\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"Composite\",\n              className: \"DataItemMigrationSummaryResult\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MigrationReportResult: msRest.CompositeMapper = {\n  serializedName: \"MigrationReportResult\",\n  type: {\n    name: \"Composite\",\n    className: \"MigrationReportResult\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      reportUrl: {\n        serializedName: \"reportUrl\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DatabaseSummaryResult: msRest.CompositeMapper = {\n  serializedName: \"DatabaseSummaryResult\",\n  type: {\n    name: \"Composite\",\n    className: \"DatabaseSummaryResult\",\n    modelProperties: {\n      ...DataItemMigrationSummaryResult.type.modelProperties,\n      sizeMB: {\n        readOnly: true,\n        serializedName: \"sizeMB\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateSqlServerSqlDbTaskOutputMigrationLevel: msRest.CompositeMapper = {\n  serializedName: \"MigrationLevelOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: MigrateSqlServerSqlDbTaskOutput.type.polymorphicDiscriminator,\n    uberParent: \"MigrateSqlServerSqlDbTaskOutput\",\n    className: \"MigrateSqlServerSqlDbTaskOutputMigrationLevel\",\n    modelProperties: {\n      ...MigrateSqlServerSqlDbTaskOutput.type.modelProperties,\n      startedOn: {\n        readOnly: true,\n        serializedName: \"startedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endedOn: {\n        readOnly: true,\n        serializedName: \"endedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      durationInSeconds: {\n        readOnly: true,\n        serializedName: \"durationInSeconds\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      status: {\n        readOnly: true,\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      statusMessage: {\n        readOnly: true,\n        serializedName: \"statusMessage\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        readOnly: true,\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      },\n      databases: {\n        readOnly: true,\n        serializedName: \"databases\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      databaseSummary: {\n        readOnly: true,\n        serializedName: \"databaseSummary\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"Composite\",\n              className: \"DatabaseSummaryResult\"\n            }\n          }\n        }\n      },\n      migrationValidationResult: {\n        serializedName: \"migrationValidationResult\",\n        type: {\n          name: \"Composite\",\n          className: \"MigrationValidationResult\"\n        }\n      },\n      migrationReportResult: {\n        serializedName: \"migrationReportResult\",\n        type: {\n          name: \"Composite\",\n          className: \"MigrationReportResult\"\n        }\n      },\n      sourceServerVersion: {\n        readOnly: true,\n        serializedName: \"sourceServerVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sourceServerBrandVersion: {\n        readOnly: true,\n        serializedName: \"sourceServerBrandVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetServerVersion: {\n        readOnly: true,\n        serializedName: \"targetServerVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetServerBrandVersion: {\n        readOnly: true,\n        serializedName: \"targetServerBrandVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      exceptionsAndWarnings: {\n        readOnly: true,\n        serializedName: \"exceptionsAndWarnings\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReportableException\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateSqlServerSqlDbDatabaseInput: msRest.CompositeMapper = {\n  serializedName: \"MigrateSqlServerSqlDbDatabaseInput\",\n  type: {\n    name: \"Composite\",\n    className: \"MigrateSqlServerSqlDbDatabaseInput\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetDatabaseName: {\n        serializedName: \"targetDatabaseName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      makeSourceDbReadOnly: {\n        serializedName: \"makeSourceDbReadOnly\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      tableMap: {\n        serializedName: \"tableMap\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateSqlServerSqlDbTaskInput: msRest.CompositeMapper = {\n  serializedName: \"MigrateSqlServerSqlDbTaskInput\",\n  type: {\n    name: \"Composite\",\n    className: \"MigrateSqlServerSqlDbTaskInput\",\n    modelProperties: {\n      ...SqlMigrationTaskInput.type.modelProperties,\n      selectedDatabases: {\n        required: true,\n        serializedName: \"selectedDatabases\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MigrateSqlServerSqlDbDatabaseInput\"\n            }\n          }\n        }\n      },\n      validationOptions: {\n        serializedName: \"validationOptions\",\n        type: {\n          name: \"Composite\",\n          className: \"MigrationValidationOptions\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateSqlServerSqlDbTaskProperties: msRest.CompositeMapper = {\n  serializedName: \"Migrate.SqlServer.SqlDb\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ProjectTaskProperties.type.polymorphicDiscriminator,\n    uberParent: \"ProjectTaskProperties\",\n    className: \"MigrateSqlServerSqlDbTaskProperties\",\n    modelProperties: {\n      ...ProjectTaskProperties.type.modelProperties,\n      input: {\n        serializedName: \"input\",\n        type: {\n          name: \"Composite\",\n          className: \"MigrateSqlServerSqlDbTaskInput\"\n        }\n      },\n      output: {\n        readOnly: true,\n        serializedName: \"output\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MigrateSqlServerSqlDbTaskOutput\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateSqlServerSqlMISyncTaskOutput: msRest.CompositeMapper = {\n  serializedName: \"MigrateSqlServerSqlMISyncTaskOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: {\n      serializedName: \"resultType\",\n      clientName: \"resultType\"\n    },\n    uberParent: \"MigrateSqlServerSqlMISyncTaskOutput\",\n    className: \"MigrateSqlServerSqlMISyncTaskOutput\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resultType: {\n        required: true,\n        serializedName: \"resultType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateSqlServerSqlMISyncTaskOutputError: msRest.CompositeMapper = {\n  serializedName: \"ErrorOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: MigrateSqlServerSqlMISyncTaskOutput.type.polymorphicDiscriminator,\n    uberParent: \"MigrateSqlServerSqlMISyncTaskOutput\",\n    className: \"MigrateSqlServerSqlMISyncTaskOutputError\",\n    modelProperties: {\n      ...MigrateSqlServerSqlMISyncTaskOutput.type.modelProperties,\n      error: {\n        readOnly: true,\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ReportableException\"\n        }\n      }\n    }\n  }\n};\n\nexport const BackupFileInfo: msRest.CompositeMapper = {\n  serializedName: \"BackupFileInfo\",\n  type: {\n    name: \"Composite\",\n    className: \"BackupFileInfo\",\n    modelProperties: {\n      fileLocation: {\n        serializedName: \"fileLocation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      familySequenceNumber: {\n        serializedName: \"familySequenceNumber\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BackupSetInfo: msRest.CompositeMapper = {\n  serializedName: \"BackupSetInfo\",\n  type: {\n    name: \"Composite\",\n    className: \"BackupSetInfo\",\n    modelProperties: {\n      backupSetId: {\n        serializedName: \"backupSetId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      firstLsn: {\n        serializedName: \"firstLsn\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastLsn: {\n        serializedName: \"lastLsn\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedTime: {\n        serializedName: \"lastModifiedTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      backupType: {\n        serializedName: \"backupType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      listOfBackupFiles: {\n        serializedName: \"listOfBackupFiles\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BackupFileInfo\"\n            }\n          }\n        }\n      },\n      databaseName: {\n        serializedName: \"databaseName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      backupStartDate: {\n        serializedName: \"backupStartDate\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      backupFinishedDate: {\n        serializedName: \"backupFinishedDate\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      isBackupRestored: {\n        serializedName: \"isBackupRestored\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateSqlServerSqlMISyncTaskOutputDatabaseLevel: msRest.CompositeMapper = {\n  serializedName: \"DatabaseLevelOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: MigrateSqlServerSqlMISyncTaskOutput.type.polymorphicDiscriminator,\n    uberParent: \"MigrateSqlServerSqlMISyncTaskOutput\",\n    className: \"MigrateSqlServerSqlMISyncTaskOutputDatabaseLevel\",\n    modelProperties: {\n      ...MigrateSqlServerSqlMISyncTaskOutput.type.modelProperties,\n      sourceDatabaseName: {\n        readOnly: true,\n        serializedName: \"sourceDatabaseName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      migrationState: {\n        readOnly: true,\n        serializedName: \"migrationState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      startedOn: {\n        readOnly: true,\n        serializedName: \"startedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endedOn: {\n        readOnly: true,\n        serializedName: \"endedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      fullBackupSetInfo: {\n        readOnly: true,\n        serializedName: \"fullBackupSetInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"BackupSetInfo\"\n        }\n      },\n      lastRestoredBackupSetInfo: {\n        readOnly: true,\n        serializedName: \"lastRestoredBackupSetInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"BackupSetInfo\"\n        }\n      },\n      activeBackupSets: {\n        readOnly: true,\n        serializedName: \"activeBackupSets\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BackupSetInfo\"\n            }\n          }\n        }\n      },\n      containerName: {\n        readOnly: true,\n        serializedName: \"containerName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorPrefix: {\n        readOnly: true,\n        serializedName: \"errorPrefix\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isFullBackupRestored: {\n        readOnly: true,\n        serializedName: \"isFullBackupRestored\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      exceptionsAndWarnings: {\n        readOnly: true,\n        serializedName: \"exceptionsAndWarnings\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReportableException\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateSqlServerSqlMISyncTaskOutputMigrationLevel: msRest.CompositeMapper = {\n  serializedName: \"MigrationLevelOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: MigrateSqlServerSqlMISyncTaskOutput.type.polymorphicDiscriminator,\n    uberParent: \"MigrateSqlServerSqlMISyncTaskOutput\",\n    className: \"MigrateSqlServerSqlMISyncTaskOutputMigrationLevel\",\n    modelProperties: {\n      ...MigrateSqlServerSqlMISyncTaskOutput.type.modelProperties,\n      databaseCount: {\n        readOnly: true,\n        serializedName: \"databaseCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      state: {\n        readOnly: true,\n        serializedName: \"state\",\n        type: {\n          name: \"String\"\n        }\n      },\n      startedOn: {\n        readOnly: true,\n        serializedName: \"startedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endedOn: {\n        readOnly: true,\n        serializedName: \"endedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      sourceServerName: {\n        readOnly: true,\n        serializedName: \"sourceServerName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sourceServerVersion: {\n        readOnly: true,\n        serializedName: \"sourceServerVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sourceServerBrandVersion: {\n        readOnly: true,\n        serializedName: \"sourceServerBrandVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetServerName: {\n        readOnly: true,\n        serializedName: \"targetServerName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetServerVersion: {\n        readOnly: true,\n        serializedName: \"targetServerVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetServerBrandVersion: {\n        readOnly: true,\n        serializedName: \"targetServerBrandVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      databaseErrorCount: {\n        readOnly: true,\n        serializedName: \"databaseErrorCount\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateSqlServerSqlMISyncTaskInput: msRest.CompositeMapper = {\n  serializedName: \"MigrateSqlServerSqlMISyncTaskInput\",\n  type: {\n    name: \"Composite\",\n    className: \"MigrateSqlServerSqlMISyncTaskInput\",\n    modelProperties: {\n      ...SqlServerSqlMISyncTaskInput.type.modelProperties\n    }\n  }\n};\n\nexport const MigrateSqlServerSqlMISyncTaskProperties: msRest.CompositeMapper = {\n  serializedName: \"Migrate.SqlServer.AzureSqlDbMI.Sync.LRS\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ProjectTaskProperties.type.polymorphicDiscriminator,\n    uberParent: \"ProjectTaskProperties\",\n    className: \"MigrateSqlServerSqlMISyncTaskProperties\",\n    modelProperties: {\n      ...ProjectTaskProperties.type.modelProperties,\n      input: {\n        serializedName: \"input\",\n        type: {\n          name: \"Composite\",\n          className: \"MigrateSqlServerSqlMISyncTaskInput\"\n        }\n      },\n      output: {\n        readOnly: true,\n        serializedName: \"output\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MigrateSqlServerSqlMISyncTaskOutput\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateSqlServerSqlMITaskOutput: msRest.CompositeMapper = {\n  serializedName: \"MigrateSqlServerSqlMITaskOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: {\n      serializedName: \"resultType\",\n      clientName: \"resultType\"\n    },\n    uberParent: \"MigrateSqlServerSqlMITaskOutput\",\n    className: \"MigrateSqlServerSqlMITaskOutput\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resultType: {\n        required: true,\n        serializedName: \"resultType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateSqlServerSqlMITaskOutputError: msRest.CompositeMapper = {\n  serializedName: \"ErrorOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: MigrateSqlServerSqlMITaskOutput.type.polymorphicDiscriminator,\n    uberParent: \"MigrateSqlServerSqlMITaskOutput\",\n    className: \"MigrateSqlServerSqlMITaskOutputError\",\n    modelProperties: {\n      ...MigrateSqlServerSqlMITaskOutput.type.modelProperties,\n      error: {\n        readOnly: true,\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ReportableException\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateSqlServerSqlMITaskOutputLoginLevel: msRest.CompositeMapper = {\n  serializedName: \"LoginLevelOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: MigrateSqlServerSqlMITaskOutput.type.polymorphicDiscriminator,\n    uberParent: \"MigrateSqlServerSqlMITaskOutput\",\n    className: \"MigrateSqlServerSqlMITaskOutputLoginLevel\",\n    modelProperties: {\n      ...MigrateSqlServerSqlMITaskOutput.type.modelProperties,\n      loginName: {\n        readOnly: true,\n        serializedName: \"loginName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      state: {\n        readOnly: true,\n        serializedName: \"state\",\n        type: {\n          name: \"String\"\n        }\n      },\n      stage: {\n        readOnly: true,\n        serializedName: \"stage\",\n        type: {\n          name: \"String\"\n        }\n      },\n      startedOn: {\n        readOnly: true,\n        serializedName: \"startedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endedOn: {\n        readOnly: true,\n        serializedName: \"endedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      message: {\n        readOnly: true,\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      },\n      exceptionsAndWarnings: {\n        readOnly: true,\n        serializedName: \"exceptionsAndWarnings\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReportableException\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateSqlServerSqlMITaskOutputAgentJobLevel: msRest.CompositeMapper = {\n  serializedName: \"AgentJobLevelOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: MigrateSqlServerSqlMITaskOutput.type.polymorphicDiscriminator,\n    uberParent: \"MigrateSqlServerSqlMITaskOutput\",\n    className: \"MigrateSqlServerSqlMITaskOutputAgentJobLevel\",\n    modelProperties: {\n      ...MigrateSqlServerSqlMITaskOutput.type.modelProperties,\n      name: {\n        readOnly: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isEnabled: {\n        readOnly: true,\n        serializedName: \"isEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      state: {\n        readOnly: true,\n        serializedName: \"state\",\n        type: {\n          name: \"String\"\n        }\n      },\n      startedOn: {\n        readOnly: true,\n        serializedName: \"startedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endedOn: {\n        readOnly: true,\n        serializedName: \"endedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      message: {\n        readOnly: true,\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      },\n      exceptionsAndWarnings: {\n        readOnly: true,\n        serializedName: \"exceptionsAndWarnings\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReportableException\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateSqlServerSqlMITaskOutputDatabaseLevel: msRest.CompositeMapper = {\n  serializedName: \"DatabaseLevelOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: MigrateSqlServerSqlMITaskOutput.type.polymorphicDiscriminator,\n    uberParent: \"MigrateSqlServerSqlMITaskOutput\",\n    className: \"MigrateSqlServerSqlMITaskOutputDatabaseLevel\",\n    modelProperties: {\n      ...MigrateSqlServerSqlMITaskOutput.type.modelProperties,\n      databaseName: {\n        readOnly: true,\n        serializedName: \"databaseName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sizeMB: {\n        readOnly: true,\n        serializedName: \"sizeMB\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      state: {\n        readOnly: true,\n        serializedName: \"state\",\n        type: {\n          name: \"String\"\n        }\n      },\n      stage: {\n        readOnly: true,\n        serializedName: \"stage\",\n        type: {\n          name: \"String\"\n        }\n      },\n      startedOn: {\n        readOnly: true,\n        serializedName: \"startedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endedOn: {\n        readOnly: true,\n        serializedName: \"endedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      message: {\n        readOnly: true,\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      },\n      exceptionsAndWarnings: {\n        readOnly: true,\n        serializedName: \"exceptionsAndWarnings\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReportableException\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const OrphanedUserInfo: msRest.CompositeMapper = {\n  serializedName: \"OrphanedUserInfo\",\n  type: {\n    name: \"Composite\",\n    className: \"OrphanedUserInfo\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      databaseName: {\n        serializedName: \"databaseName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const StartMigrationScenarioServerRoleResult: msRest.CompositeMapper = {\n  serializedName: \"StartMigrationScenarioServerRoleResult\",\n  type: {\n    name: \"Composite\",\n    className: \"StartMigrationScenarioServerRoleResult\",\n    modelProperties: {\n      name: {\n        readOnly: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      state: {\n        readOnly: true,\n        serializedName: \"state\",\n        type: {\n          name: \"String\"\n        }\n      },\n      exceptionsAndWarnings: {\n        readOnly: true,\n        serializedName: \"exceptionsAndWarnings\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReportableException\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateSqlServerSqlMITaskOutputMigrationLevel: msRest.CompositeMapper = {\n  serializedName: \"MigrationLevelOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: MigrateSqlServerSqlMITaskOutput.type.polymorphicDiscriminator,\n    uberParent: \"MigrateSqlServerSqlMITaskOutput\",\n    className: \"MigrateSqlServerSqlMITaskOutputMigrationLevel\",\n    modelProperties: {\n      ...MigrateSqlServerSqlMITaskOutput.type.modelProperties,\n      startedOn: {\n        readOnly: true,\n        serializedName: \"startedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endedOn: {\n        readOnly: true,\n        serializedName: \"endedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      status: {\n        readOnly: true,\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      state: {\n        readOnly: true,\n        serializedName: \"state\",\n        type: {\n          name: \"String\"\n        }\n      },\n      agentJobs: {\n        readOnly: true,\n        serializedName: \"agentJobs\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      logins: {\n        readOnly: true,\n        serializedName: \"logins\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      message: {\n        readOnly: true,\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      },\n      serverRoleResults: {\n        readOnly: true,\n        serializedName: \"serverRoleResults\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"Composite\",\n              className: \"StartMigrationScenarioServerRoleResult\"\n            }\n          }\n        }\n      },\n      orphanedUsersInfo: {\n        readOnly: true,\n        serializedName: \"orphanedUsersInfo\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"OrphanedUserInfo\"\n            }\n          }\n        }\n      },\n      databases: {\n        readOnly: true,\n        serializedName: \"databases\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      sourceServerVersion: {\n        readOnly: true,\n        serializedName: \"sourceServerVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sourceServerBrandVersion: {\n        readOnly: true,\n        serializedName: \"sourceServerBrandVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetServerVersion: {\n        readOnly: true,\n        serializedName: \"targetServerVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetServerBrandVersion: {\n        readOnly: true,\n        serializedName: \"targetServerBrandVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      exceptionsAndWarnings: {\n        readOnly: true,\n        serializedName: \"exceptionsAndWarnings\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReportableException\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateSqlServerSqlMITaskInput: msRest.CompositeMapper = {\n  serializedName: \"MigrateSqlServerSqlMITaskInput\",\n  type: {\n    name: \"Composite\",\n    className: \"MigrateSqlServerSqlMITaskInput\",\n    modelProperties: {\n      ...SqlMigrationTaskInput.type.modelProperties,\n      selectedDatabases: {\n        required: true,\n        serializedName: \"selectedDatabases\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MigrateSqlServerSqlMIDatabaseInput\"\n            }\n          }\n        }\n      },\n      selectedLogins: {\n        serializedName: \"selectedLogins\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      selectedAgentJobs: {\n        serializedName: \"selectedAgentJobs\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      backupFileShare: {\n        serializedName: \"backupFileShare\",\n        type: {\n          name: \"Composite\",\n          className: \"FileShare\"\n        }\n      },\n      backupBlobShare: {\n        required: true,\n        serializedName: \"backupBlobShare\",\n        type: {\n          name: \"Composite\",\n          className: \"BlobShare\"\n        }\n      },\n      backupMode: {\n        serializedName: \"backupMode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      aadDomainName: {\n        serializedName: \"aadDomainName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateSqlServerSqlMITaskProperties: msRest.CompositeMapper = {\n  serializedName: \"Migrate.SqlServer.AzureSqlDbMI\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ProjectTaskProperties.type.polymorphicDiscriminator,\n    uberParent: \"ProjectTaskProperties\",\n    className: \"MigrateSqlServerSqlMITaskProperties\",\n    modelProperties: {\n      ...ProjectTaskProperties.type.modelProperties,\n      input: {\n        serializedName: \"input\",\n        type: {\n          name: \"Composite\",\n          className: \"MigrateSqlServerSqlMITaskInput\"\n        }\n      },\n      output: {\n        readOnly: true,\n        serializedName: \"output\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MigrateSqlServerSqlMITaskOutput\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateMongoDbTaskProperties: msRest.CompositeMapper = {\n  serializedName: \"Migrate.MongoDb\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ProjectTaskProperties.type.polymorphicDiscriminator,\n    uberParent: \"ProjectTaskProperties\",\n    className: \"MigrateMongoDbTaskProperties\",\n    modelProperties: {\n      ...ProjectTaskProperties.type.modelProperties,\n      input: {\n        serializedName: \"input\",\n        type: {\n          name: \"Composite\",\n          className: \"MongoDbMigrationSettings\"\n        }\n      },\n      output: {\n        readOnly: true,\n        serializedName: \"output\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MongoDbProgress\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectToTargetAzureDbForMySqlTaskOutput: msRest.CompositeMapper = {\n  serializedName: \"ConnectToTargetAzureDbForMySqlTaskOutput\",\n  type: {\n    name: \"Composite\",\n    className: \"ConnectToTargetAzureDbForMySqlTaskOutput\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      serverVersion: {\n        readOnly: true,\n        serializedName: \"serverVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      databases: {\n        readOnly: true,\n        serializedName: \"databases\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      targetServerBrandVersion: {\n        readOnly: true,\n        serializedName: \"targetServerBrandVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      validationErrors: {\n        readOnly: true,\n        serializedName: \"validationErrors\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReportableException\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectToTargetAzureDbForMySqlTaskInput: msRest.CompositeMapper = {\n  serializedName: \"ConnectToTargetAzureDbForMySqlTaskInput\",\n  type: {\n    name: \"Composite\",\n    className: \"ConnectToTargetAzureDbForMySqlTaskInput\",\n    modelProperties: {\n      sourceConnectionInfo: {\n        required: true,\n        serializedName: \"sourceConnectionInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"MySqlConnectionInfo\"\n        }\n      },\n      targetConnectionInfo: {\n        required: true,\n        serializedName: \"targetConnectionInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"MySqlConnectionInfo\"\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectToTargetAzureDbForMySqlTaskProperties: msRest.CompositeMapper = {\n  serializedName: \"ConnectToTarget.AzureDbForMySql\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ProjectTaskProperties.type.polymorphicDiscriminator,\n    uberParent: \"ProjectTaskProperties\",\n    className: \"ConnectToTargetAzureDbForMySqlTaskProperties\",\n    modelProperties: {\n      ...ProjectTaskProperties.type.modelProperties,\n      input: {\n        serializedName: \"input\",\n        type: {\n          name: \"Composite\",\n          className: \"ConnectToTargetAzureDbForMySqlTaskInput\"\n        }\n      },\n      output: {\n        readOnly: true,\n        serializedName: \"output\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ConnectToTargetAzureDbForMySqlTaskOutput\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectToTargetSqlMISyncTaskOutput: msRest.CompositeMapper = {\n  serializedName: \"ConnectToTargetSqlMISyncTaskOutput\",\n  type: {\n    name: \"Composite\",\n    className: \"ConnectToTargetSqlMISyncTaskOutput\",\n    modelProperties: {\n      targetServerVersion: {\n        readOnly: true,\n        serializedName: \"targetServerVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetServerBrandVersion: {\n        readOnly: true,\n        serializedName: \"targetServerBrandVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      validationErrors: {\n        readOnly: true,\n        serializedName: \"validationErrors\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReportableException\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectToTargetSqlMISyncTaskInput: msRest.CompositeMapper = {\n  serializedName: \"ConnectToTargetSqlMISyncTaskInput\",\n  type: {\n    name: \"Composite\",\n    className: \"ConnectToTargetSqlMISyncTaskInput\",\n    modelProperties: {\n      targetConnectionInfo: {\n        required: true,\n        serializedName: \"targetConnectionInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"MiSqlConnectionInfo\"\n        }\n      },\n      azureApp: {\n        required: true,\n        serializedName: \"azureApp\",\n        type: {\n          name: \"Composite\",\n          className: \"AzureActiveDirectoryApp\"\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectToTargetSqlMISyncTaskProperties: msRest.CompositeMapper = {\n  serializedName: \"ConnectToTarget.AzureSqlDbMI.Sync.LRS\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ProjectTaskProperties.type.polymorphicDiscriminator,\n    uberParent: \"ProjectTaskProperties\",\n    className: \"ConnectToTargetSqlMISyncTaskProperties\",\n    modelProperties: {\n      ...ProjectTaskProperties.type.modelProperties,\n      input: {\n        serializedName: \"input\",\n        type: {\n          name: \"Composite\",\n          className: \"ConnectToTargetSqlMISyncTaskInput\"\n        }\n      },\n      output: {\n        readOnly: true,\n        serializedName: \"output\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ConnectToTargetSqlMISyncTaskOutput\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectToTargetSqlMITaskOutput: msRest.CompositeMapper = {\n  serializedName: \"ConnectToTargetSqlMITaskOutput\",\n  type: {\n    name: \"Composite\",\n    className: \"ConnectToTargetSqlMITaskOutput\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetServerVersion: {\n        readOnly: true,\n        serializedName: \"targetServerVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetServerBrandVersion: {\n        readOnly: true,\n        serializedName: \"targetServerBrandVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      logins: {\n        readOnly: true,\n        serializedName: \"logins\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      agentJobs: {\n        readOnly: true,\n        serializedName: \"agentJobs\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      validationErrors: {\n        readOnly: true,\n        serializedName: \"validationErrors\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReportableException\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectToTargetSqlMITaskInput: msRest.CompositeMapper = {\n  serializedName: \"ConnectToTargetSqlMITaskInput\",\n  type: {\n    name: \"Composite\",\n    className: \"ConnectToTargetSqlMITaskInput\",\n    modelProperties: {\n      targetConnectionInfo: {\n        required: true,\n        serializedName: \"targetConnectionInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"SqlConnectionInfo\"\n        }\n      },\n      collectLogins: {\n        serializedName: \"collectLogins\",\n        defaultValue: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      collectAgentJobs: {\n        serializedName: \"collectAgentJobs\",\n        defaultValue: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      validateSsisCatalogOnly: {\n        serializedName: \"validateSsisCatalogOnly\",\n        defaultValue: false,\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectToTargetSqlMITaskProperties: msRest.CompositeMapper = {\n  serializedName: \"ConnectToTarget.AzureSqlDbMI\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ProjectTaskProperties.type.polymorphicDiscriminator,\n    uberParent: \"ProjectTaskProperties\",\n    className: \"ConnectToTargetSqlMITaskProperties\",\n    modelProperties: {\n      ...ProjectTaskProperties.type.modelProperties,\n      input: {\n        serializedName: \"input\",\n        type: {\n          name: \"Composite\",\n          className: \"ConnectToTargetSqlMITaskInput\"\n        }\n      },\n      output: {\n        readOnly: true,\n        serializedName: \"output\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ConnectToTargetSqlMITaskOutput\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DatabaseTable: msRest.CompositeMapper = {\n  serializedName: \"DatabaseTable\",\n  type: {\n    name: \"Composite\",\n    className: \"DatabaseTable\",\n    modelProperties: {\n      hasRows: {\n        readOnly: true,\n        serializedName: \"hasRows\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      name: {\n        readOnly: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GetUserTablesPostgreSqlTaskOutput: msRest.CompositeMapper = {\n  serializedName: \"GetUserTablesPostgreSqlTaskOutput\",\n  type: {\n    name: \"Composite\",\n    className: \"GetUserTablesPostgreSqlTaskOutput\",\n    modelProperties: {\n      databaseName: {\n        readOnly: true,\n        serializedName: \"databaseName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tables: {\n        readOnly: true,\n        serializedName: \"tables\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DatabaseTable\"\n            }\n          }\n        }\n      },\n      validationErrors: {\n        readOnly: true,\n        serializedName: \"validationErrors\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReportableException\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const GetUserTablesPostgreSqlTaskInput: msRest.CompositeMapper = {\n  serializedName: \"GetUserTablesPostgreSqlTaskInput\",\n  type: {\n    name: \"Composite\",\n    className: \"GetUserTablesPostgreSqlTaskInput\",\n    modelProperties: {\n      connectionInfo: {\n        required: true,\n        serializedName: \"connectionInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"PostgreSqlConnectionInfo\"\n        }\n      },\n      selectedDatabases: {\n        required: true,\n        serializedName: \"selectedDatabases\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const GetUserTablesPostgreSqlTaskProperties: msRest.CompositeMapper = {\n  serializedName: \"GetUserTablesPostgreSql\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ProjectTaskProperties.type.polymorphicDiscriminator,\n    uberParent: \"ProjectTaskProperties\",\n    className: \"GetUserTablesPostgreSqlTaskProperties\",\n    modelProperties: {\n      ...ProjectTaskProperties.type.modelProperties,\n      input: {\n        serializedName: \"input\",\n        type: {\n          name: \"Composite\",\n          className: \"GetUserTablesPostgreSqlTaskInput\"\n        }\n      },\n      output: {\n        readOnly: true,\n        serializedName: \"output\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"GetUserTablesPostgreSqlTaskOutput\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const GetUserTablesOracleTaskOutput: msRest.CompositeMapper = {\n  serializedName: \"GetUserTablesOracleTaskOutput\",\n  type: {\n    name: \"Composite\",\n    className: \"GetUserTablesOracleTaskOutput\",\n    modelProperties: {\n      schemaName: {\n        readOnly: true,\n        serializedName: \"schemaName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tables: {\n        readOnly: true,\n        serializedName: \"tables\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DatabaseTable\"\n            }\n          }\n        }\n      },\n      validationErrors: {\n        readOnly: true,\n        serializedName: \"validationErrors\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReportableException\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const GetUserTablesOracleTaskInput: msRest.CompositeMapper = {\n  serializedName: \"GetUserTablesOracleTaskInput\",\n  type: {\n    name: \"Composite\",\n    className: \"GetUserTablesOracleTaskInput\",\n    modelProperties: {\n      connectionInfo: {\n        required: true,\n        serializedName: \"connectionInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"OracleConnectionInfo\"\n        }\n      },\n      selectedSchemas: {\n        required: true,\n        serializedName: \"selectedSchemas\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const GetUserTablesOracleTaskProperties: msRest.CompositeMapper = {\n  serializedName: \"GetUserTablesOracle\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ProjectTaskProperties.type.polymorphicDiscriminator,\n    uberParent: \"ProjectTaskProperties\",\n    className: \"GetUserTablesOracleTaskProperties\",\n    modelProperties: {\n      ...ProjectTaskProperties.type.modelProperties,\n      input: {\n        serializedName: \"input\",\n        type: {\n          name: \"Composite\",\n          className: \"GetUserTablesOracleTaskInput\"\n        }\n      },\n      output: {\n        readOnly: true,\n        serializedName: \"output\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"GetUserTablesOracleTaskOutput\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const GetUserTablesSqlSyncTaskOutput: msRest.CompositeMapper = {\n  serializedName: \"GetUserTablesSqlSyncTaskOutput\",\n  type: {\n    name: \"Composite\",\n    className: \"GetUserTablesSqlSyncTaskOutput\",\n    modelProperties: {\n      databasesToSourceTables: {\n        readOnly: true,\n        serializedName: \"databasesToSourceTables\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"Sequence\",\n              element: {\n                type: {\n                  name: \"Composite\",\n                  className: \"DatabaseTable\"\n                }\n              }\n            }\n          }\n        }\n      },\n      databasesToTargetTables: {\n        readOnly: true,\n        serializedName: \"databasesToTargetTables\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"Sequence\",\n              element: {\n                type: {\n                  name: \"Composite\",\n                  className: \"DatabaseTable\"\n                }\n              }\n            }\n          }\n        }\n      },\n      tableValidationErrors: {\n        readOnly: true,\n        serializedName: \"tableValidationErrors\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"Sequence\",\n              element: {\n                type: {\n                  name: \"String\"\n                }\n              }\n            }\n          }\n        }\n      },\n      validationErrors: {\n        readOnly: true,\n        serializedName: \"validationErrors\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReportableException\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const GetUserTablesSqlSyncTaskInput: msRest.CompositeMapper = {\n  serializedName: \"GetUserTablesSqlSyncTaskInput\",\n  type: {\n    name: \"Composite\",\n    className: \"GetUserTablesSqlSyncTaskInput\",\n    modelProperties: {\n      sourceConnectionInfo: {\n        required: true,\n        serializedName: \"sourceConnectionInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"SqlConnectionInfo\"\n        }\n      },\n      targetConnectionInfo: {\n        required: true,\n        serializedName: \"targetConnectionInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"SqlConnectionInfo\"\n        }\n      },\n      selectedSourceDatabases: {\n        required: true,\n        serializedName: \"selectedSourceDatabases\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      selectedTargetDatabases: {\n        required: true,\n        serializedName: \"selectedTargetDatabases\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const GetUserTablesSqlSyncTaskProperties: msRest.CompositeMapper = {\n  serializedName: \"GetUserTables.AzureSqlDb.Sync\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ProjectTaskProperties.type.polymorphicDiscriminator,\n    uberParent: \"ProjectTaskProperties\",\n    className: \"GetUserTablesSqlSyncTaskProperties\",\n    modelProperties: {\n      ...ProjectTaskProperties.type.modelProperties,\n      input: {\n        serializedName: \"input\",\n        type: {\n          name: \"Composite\",\n          className: \"GetUserTablesSqlSyncTaskInput\"\n        }\n      },\n      output: {\n        readOnly: true,\n        serializedName: \"output\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"GetUserTablesSqlSyncTaskOutput\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const GetUserTablesSqlTaskOutput: msRest.CompositeMapper = {\n  serializedName: \"GetUserTablesSqlTaskOutput\",\n  type: {\n    name: \"Composite\",\n    className: \"GetUserTablesSqlTaskOutput\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      databasesToTables: {\n        readOnly: true,\n        serializedName: \"databasesToTables\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"Sequence\",\n              element: {\n                type: {\n                  name: \"Composite\",\n                  className: \"DatabaseTable\"\n                }\n              }\n            }\n          }\n        }\n      },\n      validationErrors: {\n        readOnly: true,\n        serializedName: \"validationErrors\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReportableException\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const GetUserTablesSqlTaskInput: msRest.CompositeMapper = {\n  serializedName: \"GetUserTablesSqlTaskInput\",\n  type: {\n    name: \"Composite\",\n    className: \"GetUserTablesSqlTaskInput\",\n    modelProperties: {\n      connectionInfo: {\n        required: true,\n        serializedName: \"connectionInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"SqlConnectionInfo\"\n        }\n      },\n      selectedDatabases: {\n        required: true,\n        serializedName: \"selectedDatabases\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const GetUserTablesSqlTaskProperties: msRest.CompositeMapper = {\n  serializedName: \"GetUserTables.Sql\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ProjectTaskProperties.type.polymorphicDiscriminator,\n    uberParent: \"ProjectTaskProperties\",\n    className: \"GetUserTablesSqlTaskProperties\",\n    modelProperties: {\n      ...ProjectTaskProperties.type.modelProperties,\n      input: {\n        serializedName: \"input\",\n        type: {\n          name: \"Composite\",\n          className: \"GetUserTablesSqlTaskInput\"\n        }\n      },\n      output: {\n        readOnly: true,\n        serializedName: \"output\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"GetUserTablesSqlTaskOutput\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputDatabaseSchemaMapItem: msRest.CompositeMapper = {\n  serializedName: \"ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutput_databaseSchemaMapItem\",\n  type: {\n    name: \"Composite\",\n    className: \"ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputDatabaseSchemaMapItem\",\n    modelProperties: {\n      database: {\n        serializedName: \"database\",\n        type: {\n          name: \"String\"\n        }\n      },\n      schemas: {\n        serializedName: \"schemas\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutput: msRest.CompositeMapper = {\n  serializedName: \"ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutput\",\n  type: {\n    name: \"Composite\",\n    className: \"ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutput\",\n    modelProperties: {\n      targetServerVersion: {\n        readOnly: true,\n        serializedName: \"targetServerVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      databases: {\n        readOnly: true,\n        serializedName: \"databases\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      targetServerBrandVersion: {\n        readOnly: true,\n        serializedName: \"targetServerBrandVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      validationErrors: {\n        readOnly: true,\n        serializedName: \"validationErrors\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReportableException\"\n            }\n          }\n        }\n      },\n      databaseSchemaMap: {\n        serializedName: \"databaseSchemaMap\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputDatabaseSchemaMapItem\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInput: msRest.CompositeMapper = {\n  serializedName: \"ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInput\",\n  type: {\n    name: \"Composite\",\n    className: \"ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInput\",\n    modelProperties: {\n      targetConnectionInfo: {\n        required: true,\n        serializedName: \"targetConnectionInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"PostgreSqlConnectionInfo\"\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskProperties: msRest.CompositeMapper = {\n  serializedName: \"ConnectToTarget.Oracle.AzureDbForPostgreSql.Sync\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ProjectTaskProperties.type.polymorphicDiscriminator,\n    uberParent: \"ProjectTaskProperties\",\n    className: \"ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskProperties\",\n    modelProperties: {\n      ...ProjectTaskProperties.type.modelProperties,\n      input: {\n        serializedName: \"input\",\n        type: {\n          name: \"Composite\",\n          className: \"ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInput\"\n        }\n      },\n      output: {\n        readOnly: true,\n        serializedName: \"output\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutput\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectToTargetAzureDbForPostgreSqlSyncTaskOutput: msRest.CompositeMapper = {\n  serializedName: \"ConnectToTargetAzureDbForPostgreSqlSyncTaskOutput\",\n  type: {\n    name: \"Composite\",\n    className: \"ConnectToTargetAzureDbForPostgreSqlSyncTaskOutput\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetServerVersion: {\n        readOnly: true,\n        serializedName: \"targetServerVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      databases: {\n        readOnly: true,\n        serializedName: \"databases\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      targetServerBrandVersion: {\n        readOnly: true,\n        serializedName: \"targetServerBrandVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      validationErrors: {\n        readOnly: true,\n        serializedName: \"validationErrors\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReportableException\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectToTargetAzureDbForPostgreSqlSyncTaskInput: msRest.CompositeMapper = {\n  serializedName: \"ConnectToTargetAzureDbForPostgreSqlSyncTaskInput\",\n  type: {\n    name: \"Composite\",\n    className: \"ConnectToTargetAzureDbForPostgreSqlSyncTaskInput\",\n    modelProperties: {\n      sourceConnectionInfo: {\n        required: true,\n        serializedName: \"sourceConnectionInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"PostgreSqlConnectionInfo\"\n        }\n      },\n      targetConnectionInfo: {\n        required: true,\n        serializedName: \"targetConnectionInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"PostgreSqlConnectionInfo\"\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectToTargetAzureDbForPostgreSqlSyncTaskProperties: msRest.CompositeMapper = {\n  serializedName: \"ConnectToTarget.AzureDbForPostgreSql.Sync\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ProjectTaskProperties.type.polymorphicDiscriminator,\n    uberParent: \"ProjectTaskProperties\",\n    className: \"ConnectToTargetAzureDbForPostgreSqlSyncTaskProperties\",\n    modelProperties: {\n      ...ProjectTaskProperties.type.modelProperties,\n      input: {\n        serializedName: \"input\",\n        type: {\n          name: \"Composite\",\n          className: \"ConnectToTargetAzureDbForPostgreSqlSyncTaskInput\"\n        }\n      },\n      output: {\n        readOnly: true,\n        serializedName: \"output\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ConnectToTargetAzureDbForPostgreSqlSyncTaskOutput\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectToTargetSqlDbTaskOutput: msRest.CompositeMapper = {\n  serializedName: \"ConnectToTargetSqlDbTaskOutput\",\n  type: {\n    name: \"Composite\",\n    className: \"ConnectToTargetSqlDbTaskOutput\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      databases: {\n        readOnly: true,\n        serializedName: \"databases\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      targetServerVersion: {\n        readOnly: true,\n        serializedName: \"targetServerVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetServerBrandVersion: {\n        readOnly: true,\n        serializedName: \"targetServerBrandVersion\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectToTargetSqlSqlDbSyncTaskInput: msRest.CompositeMapper = {\n  serializedName: \"ConnectToTargetSqlSqlDbSyncTaskInput\",\n  type: {\n    name: \"Composite\",\n    className: \"ConnectToTargetSqlSqlDbSyncTaskInput\",\n    modelProperties: {\n      sourceConnectionInfo: {\n        required: true,\n        serializedName: \"sourceConnectionInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"SqlConnectionInfo\"\n        }\n      },\n      targetConnectionInfo: {\n        required: true,\n        serializedName: \"targetConnectionInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"SqlConnectionInfo\"\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectToTargetSqlSqlDbSyncTaskProperties: msRest.CompositeMapper = {\n  serializedName: \"ConnectToTarget.SqlDb.Sync\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ProjectTaskProperties.type.polymorphicDiscriminator,\n    uberParent: \"ProjectTaskProperties\",\n    className: \"ConnectToTargetSqlSqlDbSyncTaskProperties\",\n    modelProperties: {\n      ...ProjectTaskProperties.type.modelProperties,\n      input: {\n        serializedName: \"input\",\n        type: {\n          name: \"Composite\",\n          className: \"ConnectToTargetSqlSqlDbSyncTaskInput\"\n        }\n      },\n      output: {\n        readOnly: true,\n        serializedName: \"output\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ConnectToTargetSqlDbTaskOutput\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectToTargetSqlDbTaskInput: msRest.CompositeMapper = {\n  serializedName: \"ConnectToTargetSqlDbTaskInput\",\n  type: {\n    name: \"Composite\",\n    className: \"ConnectToTargetSqlDbTaskInput\",\n    modelProperties: {\n      targetConnectionInfo: {\n        required: true,\n        serializedName: \"targetConnectionInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"SqlConnectionInfo\"\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectToTargetSqlDbTaskProperties: msRest.CompositeMapper = {\n  serializedName: \"ConnectToTarget.SqlDb\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ProjectTaskProperties.type.polymorphicDiscriminator,\n    uberParent: \"ProjectTaskProperties\",\n    className: \"ConnectToTargetSqlDbTaskProperties\",\n    modelProperties: {\n      ...ProjectTaskProperties.type.modelProperties,\n      input: {\n        serializedName: \"input\",\n        type: {\n          name: \"Composite\",\n          className: \"ConnectToTargetSqlDbTaskInput\"\n        }\n      },\n      output: {\n        readOnly: true,\n        serializedName: \"output\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ConnectToTargetSqlDbTaskOutput\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectToSourceOracleSyncTaskOutput: msRest.CompositeMapper = {\n  serializedName: \"ConnectToSourceOracleSyncTaskOutput\",\n  type: {\n    name: \"Composite\",\n    className: \"ConnectToSourceOracleSyncTaskOutput\",\n    modelProperties: {\n      sourceServerVersion: {\n        readOnly: true,\n        serializedName: \"sourceServerVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      databases: {\n        readOnly: true,\n        serializedName: \"databases\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      sourceServerBrandVersion: {\n        readOnly: true,\n        serializedName: \"sourceServerBrandVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      validationErrors: {\n        readOnly: true,\n        serializedName: \"validationErrors\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReportableException\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectToSourceOracleSyncTaskInput: msRest.CompositeMapper = {\n  serializedName: \"ConnectToSourceOracleSyncTaskInput\",\n  type: {\n    name: \"Composite\",\n    className: \"ConnectToSourceOracleSyncTaskInput\",\n    modelProperties: {\n      sourceConnectionInfo: {\n        required: true,\n        serializedName: \"sourceConnectionInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"OracleConnectionInfo\"\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectToSourceOracleSyncTaskProperties: msRest.CompositeMapper = {\n  serializedName: \"ConnectToSource.Oracle.Sync\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ProjectTaskProperties.type.polymorphicDiscriminator,\n    uberParent: \"ProjectTaskProperties\",\n    className: \"ConnectToSourceOracleSyncTaskProperties\",\n    modelProperties: {\n      ...ProjectTaskProperties.type.modelProperties,\n      input: {\n        serializedName: \"input\",\n        type: {\n          name: \"Composite\",\n          className: \"ConnectToSourceOracleSyncTaskInput\"\n        }\n      },\n      output: {\n        readOnly: true,\n        serializedName: \"output\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ConnectToSourceOracleSyncTaskOutput\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectToSourcePostgreSqlSyncTaskOutput: msRest.CompositeMapper = {\n  serializedName: \"ConnectToSourcePostgreSqlSyncTaskOutput\",\n  type: {\n    name: \"Composite\",\n    className: \"ConnectToSourcePostgreSqlSyncTaskOutput\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sourceServerVersion: {\n        readOnly: true,\n        serializedName: \"sourceServerVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      databases: {\n        readOnly: true,\n        serializedName: \"databases\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      sourceServerBrandVersion: {\n        readOnly: true,\n        serializedName: \"sourceServerBrandVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      validationErrors: {\n        readOnly: true,\n        serializedName: \"validationErrors\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReportableException\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectToSourcePostgreSqlSyncTaskInput: msRest.CompositeMapper = {\n  serializedName: \"ConnectToSourcePostgreSqlSyncTaskInput\",\n  type: {\n    name: \"Composite\",\n    className: \"ConnectToSourcePostgreSqlSyncTaskInput\",\n    modelProperties: {\n      sourceConnectionInfo: {\n        required: true,\n        serializedName: \"sourceConnectionInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"PostgreSqlConnectionInfo\"\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectToSourcePostgreSqlSyncTaskProperties: msRest.CompositeMapper = {\n  serializedName: \"ConnectToSource.PostgreSql.Sync\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ProjectTaskProperties.type.polymorphicDiscriminator,\n    uberParent: \"ProjectTaskProperties\",\n    className: \"ConnectToSourcePostgreSqlSyncTaskProperties\",\n    modelProperties: {\n      ...ProjectTaskProperties.type.modelProperties,\n      input: {\n        serializedName: \"input\",\n        type: {\n          name: \"Composite\",\n          className: \"ConnectToSourcePostgreSqlSyncTaskInput\"\n        }\n      },\n      output: {\n        readOnly: true,\n        serializedName: \"output\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ConnectToSourcePostgreSqlSyncTaskOutput\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MigrationEligibilityInfo: msRest.CompositeMapper = {\n  serializedName: \"MigrationEligibilityInfo\",\n  type: {\n    name: \"Composite\",\n    className: \"MigrationEligibilityInfo\",\n    modelProperties: {\n      isEligibleForMigration: {\n        readOnly: true,\n        serializedName: \"isEligibleForMigration\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      validationMessages: {\n        readOnly: true,\n        serializedName: \"validationMessages\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectToSourceSqlServerTaskOutput: msRest.CompositeMapper = {\n  serializedName: \"ConnectToSourceSqlServerTaskOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: {\n      serializedName: \"resultType\",\n      clientName: \"resultType\"\n    },\n    uberParent: \"ConnectToSourceSqlServerTaskOutput\",\n    className: \"ConnectToSourceSqlServerTaskOutput\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resultType: {\n        required: true,\n        serializedName: \"resultType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectToSourceSqlServerTaskOutputAgentJobLevel: msRest.CompositeMapper = {\n  serializedName: \"AgentJobLevelOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ConnectToSourceSqlServerTaskOutput.type.polymorphicDiscriminator,\n    uberParent: \"ConnectToSourceSqlServerTaskOutput\",\n    className: \"ConnectToSourceSqlServerTaskOutputAgentJobLevel\",\n    modelProperties: {\n      ...ConnectToSourceSqlServerTaskOutput.type.modelProperties,\n      name: {\n        readOnly: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      jobCategory: {\n        readOnly: true,\n        serializedName: \"jobCategory\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isEnabled: {\n        readOnly: true,\n        serializedName: \"isEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      jobOwner: {\n        readOnly: true,\n        serializedName: \"jobOwner\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastExecutedOn: {\n        readOnly: true,\n        serializedName: \"lastExecutedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      validationErrors: {\n        readOnly: true,\n        serializedName: \"validationErrors\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReportableException\"\n            }\n          }\n        }\n      },\n      migrationEligibility: {\n        readOnly: true,\n        serializedName: \"migrationEligibility\",\n        type: {\n          name: \"Composite\",\n          className: \"MigrationEligibilityInfo\"\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectToSourceSqlServerTaskOutputLoginLevel: msRest.CompositeMapper = {\n  serializedName: \"LoginLevelOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ConnectToSourceSqlServerTaskOutput.type.polymorphicDiscriminator,\n    uberParent: \"ConnectToSourceSqlServerTaskOutput\",\n    className: \"ConnectToSourceSqlServerTaskOutputLoginLevel\",\n    modelProperties: {\n      ...ConnectToSourceSqlServerTaskOutput.type.modelProperties,\n      name: {\n        readOnly: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      loginType: {\n        readOnly: true,\n        serializedName: \"loginType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      defaultDatabase: {\n        readOnly: true,\n        serializedName: \"defaultDatabase\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isEnabled: {\n        readOnly: true,\n        serializedName: \"isEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      migrationEligibility: {\n        readOnly: true,\n        serializedName: \"migrationEligibility\",\n        type: {\n          name: \"Composite\",\n          className: \"MigrationEligibilityInfo\"\n        }\n      }\n    }\n  }\n};\n\nexport const DatabaseFileInfo: msRest.CompositeMapper = {\n  serializedName: \"DatabaseFileInfo\",\n  type: {\n    name: \"Composite\",\n    className: \"DatabaseFileInfo\",\n    modelProperties: {\n      databaseName: {\n        serializedName: \"databaseName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      logicalName: {\n        serializedName: \"logicalName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      physicalFullName: {\n        serializedName: \"physicalFullName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      restoreFullName: {\n        serializedName: \"restoreFullName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileType: {\n        serializedName: \"fileType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sizeMB: {\n        serializedName: \"sizeMB\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectToSourceSqlServerTaskOutputDatabaseLevel: msRest.CompositeMapper = {\n  serializedName: \"DatabaseLevelOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ConnectToSourceSqlServerTaskOutput.type.polymorphicDiscriminator,\n    uberParent: \"ConnectToSourceSqlServerTaskOutput\",\n    className: \"ConnectToSourceSqlServerTaskOutputDatabaseLevel\",\n    modelProperties: {\n      ...ConnectToSourceSqlServerTaskOutput.type.modelProperties,\n      name: {\n        readOnly: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sizeMB: {\n        readOnly: true,\n        serializedName: \"sizeMB\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      databaseFiles: {\n        readOnly: true,\n        serializedName: \"databaseFiles\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DatabaseFileInfo\"\n            }\n          }\n        }\n      },\n      compatibilityLevel: {\n        readOnly: true,\n        serializedName: \"compatibilityLevel\",\n        type: {\n          name: \"String\"\n        }\n      },\n      databaseState: {\n        readOnly: true,\n        serializedName: \"databaseState\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectToSourceSqlServerTaskOutputTaskLevel: msRest.CompositeMapper = {\n  serializedName: \"TaskLevelOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ConnectToSourceSqlServerTaskOutput.type.polymorphicDiscriminator,\n    uberParent: \"ConnectToSourceSqlServerTaskOutput\",\n    className: \"ConnectToSourceSqlServerTaskOutputTaskLevel\",\n    modelProperties: {\n      ...ConnectToSourceSqlServerTaskOutput.type.modelProperties,\n      databases: {\n        readOnly: true,\n        serializedName: \"databases\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      logins: {\n        readOnly: true,\n        serializedName: \"logins\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      agentJobs: {\n        readOnly: true,\n        serializedName: \"agentJobs\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      databaseTdeCertificateMapping: {\n        readOnly: true,\n        serializedName: \"databaseTdeCertificateMapping\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      sourceServerVersion: {\n        readOnly: true,\n        serializedName: \"sourceServerVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sourceServerBrandVersion: {\n        readOnly: true,\n        serializedName: \"sourceServerBrandVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      validationErrors: {\n        readOnly: true,\n        serializedName: \"validationErrors\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReportableException\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectToSourceSqlServerTaskInput: msRest.CompositeMapper = {\n  serializedName: \"ConnectToSourceSqlServerTaskInput\",\n  type: {\n    name: \"Composite\",\n    className: \"ConnectToSourceSqlServerTaskInput\",\n    modelProperties: {\n      sourceConnectionInfo: {\n        required: true,\n        serializedName: \"sourceConnectionInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"SqlConnectionInfo\"\n        }\n      },\n      checkPermissionsGroup: {\n        serializedName: \"checkPermissionsGroup\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Default\",\n            \"MigrationFromSqlServerToAzureDB\",\n            \"MigrationFromSqlServerToAzureMI\",\n            \"MigrationFromMySQLToAzureDBForMySQL\"\n          ]\n        }\n      },\n      collectDatabases: {\n        serializedName: \"collectDatabases\",\n        defaultValue: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      collectLogins: {\n        serializedName: \"collectLogins\",\n        defaultValue: false,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      collectAgentJobs: {\n        serializedName: \"collectAgentJobs\",\n        defaultValue: false,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      collectTdeCertificateInfo: {\n        serializedName: \"collectTdeCertificateInfo\",\n        defaultValue: false,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      validateSsisCatalogOnly: {\n        serializedName: \"validateSsisCatalogOnly\",\n        defaultValue: false,\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectToSourceSqlServerSyncTaskProperties: msRest.CompositeMapper = {\n  serializedName: \"ConnectToSource.SqlServer.Sync\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ProjectTaskProperties.type.polymorphicDiscriminator,\n    uberParent: \"ProjectTaskProperties\",\n    className: \"ConnectToSourceSqlServerSyncTaskProperties\",\n    modelProperties: {\n      ...ProjectTaskProperties.type.modelProperties,\n      input: {\n        serializedName: \"input\",\n        type: {\n          name: \"Composite\",\n          className: \"ConnectToSourceSqlServerTaskInput\"\n        }\n      },\n      output: {\n        readOnly: true,\n        serializedName: \"output\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ConnectToSourceSqlServerTaskOutput\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectToSourceSqlServerTaskProperties: msRest.CompositeMapper = {\n  serializedName: \"ConnectToSource.SqlServer\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ProjectTaskProperties.type.polymorphicDiscriminator,\n    uberParent: \"ProjectTaskProperties\",\n    className: \"ConnectToSourceSqlServerTaskProperties\",\n    modelProperties: {\n      ...ProjectTaskProperties.type.modelProperties,\n      input: {\n        serializedName: \"input\",\n        type: {\n          name: \"Composite\",\n          className: \"ConnectToSourceSqlServerTaskInput\"\n        }\n      },\n      output: {\n        readOnly: true,\n        serializedName: \"output\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ConnectToSourceSqlServerTaskOutput\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MongoDbShardKeyInfo: msRest.CompositeMapper = {\n  serializedName: \"MongoDbShardKeyInfo\",\n  type: {\n    name: \"Composite\",\n    className: \"MongoDbShardKeyInfo\",\n    modelProperties: {\n      fields: {\n        required: true,\n        serializedName: \"fields\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MongoDbShardKeyField\"\n            }\n          }\n        }\n      },\n      isUnique: {\n        required: true,\n        serializedName: \"isUnique\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const MongoDbObjectInfo: msRest.CompositeMapper = {\n  serializedName: \"MongoDbObjectInfo\",\n  type: {\n    name: \"Composite\",\n    className: \"MongoDbObjectInfo\",\n    modelProperties: {\n      averageDocumentSize: {\n        required: true,\n        serializedName: \"averageDocumentSize\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      dataSize: {\n        required: true,\n        serializedName: \"dataSize\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      documentCount: {\n        required: true,\n        serializedName: \"documentCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      name: {\n        required: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      qualifiedName: {\n        required: true,\n        serializedName: \"qualifiedName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MongoDbCollectionInfo: msRest.CompositeMapper = {\n  serializedName: \"MongoDbCollectionInfo\",\n  type: {\n    name: \"Composite\",\n    className: \"MongoDbCollectionInfo\",\n    modelProperties: {\n      ...MongoDbObjectInfo.type.modelProperties,\n      databaseName: {\n        required: true,\n        serializedName: \"databaseName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isCapped: {\n        required: true,\n        serializedName: \"isCapped\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isSystemCollection: {\n        required: true,\n        serializedName: \"isSystemCollection\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isView: {\n        required: true,\n        serializedName: \"isView\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      shardKey: {\n        serializedName: \"shardKey\",\n        type: {\n          name: \"Composite\",\n          className: \"MongoDbShardKeyInfo\"\n        }\n      },\n      supportsSharding: {\n        required: true,\n        serializedName: \"supportsSharding\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      viewOf: {\n        serializedName: \"viewOf\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MongoDbDatabaseInfo: msRest.CompositeMapper = {\n  serializedName: \"MongoDbDatabaseInfo\",\n  type: {\n    name: \"Composite\",\n    className: \"MongoDbDatabaseInfo\",\n    modelProperties: {\n      ...MongoDbObjectInfo.type.modelProperties,\n      collections: {\n        required: true,\n        serializedName: \"collections\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MongoDbCollectionInfo\"\n            }\n          }\n        }\n      },\n      supportsSharding: {\n        required: true,\n        serializedName: \"supportsSharding\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const MongoDbClusterInfo: msRest.CompositeMapper = {\n  serializedName: \"MongoDbClusterInfo\",\n  type: {\n    name: \"Composite\",\n    className: \"MongoDbClusterInfo\",\n    modelProperties: {\n      databases: {\n        required: true,\n        serializedName: \"databases\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MongoDbDatabaseInfo\"\n            }\n          }\n        }\n      },\n      supportsSharding: {\n        required: true,\n        serializedName: \"supportsSharding\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      type: {\n        required: true,\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        required: true,\n        serializedName: \"version\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectToMongoDbTaskProperties: msRest.CompositeMapper = {\n  serializedName: \"Connect.MongoDb\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ProjectTaskProperties.type.polymorphicDiscriminator,\n    uberParent: \"ProjectTaskProperties\",\n    className: \"ConnectToMongoDbTaskProperties\",\n    modelProperties: {\n      ...ProjectTaskProperties.type.modelProperties,\n      input: {\n        serializedName: \"input\",\n        type: {\n          name: \"Composite\",\n          className: \"MongoDbConnectionInfo\"\n        }\n      },\n      output: {\n        readOnly: true,\n        serializedName: \"output\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MongoDbClusterInfo\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ProjectTask: msRest.CompositeMapper = {\n  serializedName: \"ProjectTask\",\n  type: {\n    name: \"Composite\",\n    className: \"ProjectTask\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ProjectTaskProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceSku: msRest.CompositeMapper = {\n  serializedName: \"ServiceSku\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceSku\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tier: {\n        serializedName: \"tier\",\n        type: {\n          name: \"String\"\n        }\n      },\n      family: {\n        serializedName: \"family\",\n        type: {\n          name: \"String\"\n        }\n      },\n      size: {\n        serializedName: \"size\",\n        type: {\n          name: \"String\"\n        }\n      },\n      capacity: {\n        serializedName: \"capacity\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const DataMigrationService: msRest.CompositeMapper = {\n  serializedName: \"DataMigrationService\",\n  type: {\n    name: \"Composite\",\n    className: \"DataMigrationService\",\n    modelProperties: {\n      ...TrackedResource.type.modelProperties,\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      kind: {\n        serializedName: \"kind\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        readOnly: true,\n        serializedName: \"properties.provisioningState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      publicKey: {\n        serializedName: \"properties.publicKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      virtualSubnetId: {\n        required: true,\n        serializedName: \"properties.virtualSubnetId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"ServiceSku\"\n        }\n      }\n    }\n  }\n};\n\nexport const NameAvailabilityRequest: msRest.CompositeMapper = {\n  serializedName: \"NameAvailabilityRequest\",\n  type: {\n    name: \"Composite\",\n    className: \"NameAvailabilityRequest\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DatabaseInfo: msRest.CompositeMapper = {\n  serializedName: \"DatabaseInfo\",\n  type: {\n    name: \"Composite\",\n    className: \"DatabaseInfo\",\n    modelProperties: {\n      sourceDatabaseName: {\n        required: true,\n        serializedName: \"sourceDatabaseName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Project: msRest.CompositeMapper = {\n  serializedName: \"Project\",\n  type: {\n    name: \"Composite\",\n    className: \"Project\",\n    modelProperties: {\n      ...TrackedResource.type.modelProperties,\n      sourcePlatform: {\n        required: true,\n        serializedName: \"properties.sourcePlatform\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetPlatform: {\n        required: true,\n        serializedName: \"properties.targetPlatform\",\n        type: {\n          name: \"String\"\n        }\n      },\n      creationTime: {\n        readOnly: true,\n        serializedName: \"properties.creationTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      sourceConnectionInfo: {\n        serializedName: \"properties.sourceConnectionInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"ConnectionInfo\"\n        }\n      },\n      targetConnectionInfo: {\n        serializedName: \"properties.targetConnectionInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"ConnectionInfo\"\n        }\n      },\n      databasesInfo: {\n        serializedName: \"properties.databasesInfo\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DatabaseInfo\"\n            }\n          }\n        }\n      },\n      provisioningState: {\n        readOnly: true,\n        serializedName: \"properties.provisioningState\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ApiError: msRest.CompositeMapper = {\n  serializedName: \"ApiError\",\n  type: {\n    name: \"Composite\",\n    className: \"ApiError\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ODataError\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileStorageInfo: msRest.CompositeMapper = {\n  serializedName: \"FileStorageInfo\",\n  type: {\n    name: \"Composite\",\n    className: \"FileStorageInfo\",\n    modelProperties: {\n      uri: {\n        serializedName: \"uri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      headers: {\n        serializedName: \"headers\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceOperationDisplay: msRest.CompositeMapper = {\n  serializedName: \"ServiceOperation_display\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceOperationDisplay\",\n    modelProperties: {\n      provider: {\n        serializedName: \"provider\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resource: {\n        serializedName: \"resource\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operation: {\n        serializedName: \"operation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceOperation: msRest.CompositeMapper = {\n  serializedName: \"ServiceOperation\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceOperation\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      display: {\n        serializedName: \"display\",\n        type: {\n          name: \"Composite\",\n          className: \"ServiceOperationDisplay\"\n        }\n      }\n    }\n  }\n};\n\nexport const QuotaName: msRest.CompositeMapper = {\n  serializedName: \"Quota_name\",\n  type: {\n    name: \"Composite\",\n    className: \"QuotaName\",\n    modelProperties: {\n      localizedValue: {\n        serializedName: \"localizedValue\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Quota: msRest.CompositeMapper = {\n  serializedName: \"Quota\",\n  type: {\n    name: \"Composite\",\n    className: \"Quota\",\n    modelProperties: {\n      currentValue: {\n        serializedName: \"currentValue\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      limit: {\n        serializedName: \"limit\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"Composite\",\n          className: \"QuotaName\"\n        }\n      },\n      unit: {\n        serializedName: \"unit\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NameAvailabilityResponse: msRest.CompositeMapper = {\n  serializedName: \"NameAvailabilityResponse\",\n  type: {\n    name: \"Composite\",\n    className: \"NameAvailabilityResponse\",\n    modelProperties: {\n      nameAvailable: {\n        serializedName: \"nameAvailable\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      reason: {\n        serializedName: \"reason\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AvailableServiceSkuSku: msRest.CompositeMapper = {\n  serializedName: \"AvailableServiceSku_sku\",\n  type: {\n    name: \"Composite\",\n    className: \"AvailableServiceSkuSku\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      family: {\n        serializedName: \"family\",\n        type: {\n          name: \"String\"\n        }\n      },\n      size: {\n        serializedName: \"size\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tier: {\n        serializedName: \"tier\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AvailableServiceSkuCapacity: msRest.CompositeMapper = {\n  serializedName: \"AvailableServiceSku_capacity\",\n  type: {\n    name: \"Composite\",\n    className: \"AvailableServiceSkuCapacity\",\n    modelProperties: {\n      minimum: {\n        serializedName: \"minimum\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      maximum: {\n        serializedName: \"maximum\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      default: {\n        serializedName: \"default\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      scaleType: {\n        serializedName: \"scaleType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AvailableServiceSku: msRest.CompositeMapper = {\n  serializedName: \"AvailableServiceSku\",\n  type: {\n    name: \"Composite\",\n    className: \"AvailableServiceSku\",\n    modelProperties: {\n      resourceType: {\n        serializedName: \"resourceType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"AvailableServiceSkuSku\"\n        }\n      },\n      capacity: {\n        serializedName: \"capacity\",\n        type: {\n          name: \"Composite\",\n          className: \"AvailableServiceSkuCapacity\"\n        }\n      }\n    }\n  }\n};\n\nexport const DataMigrationServiceStatusResponse: msRest.CompositeMapper = {\n  serializedName: \"DataMigrationServiceStatusResponse\",\n  type: {\n    name: \"Composite\",\n    className: \"DataMigrationServiceStatusResponse\",\n    modelProperties: {\n      agentVersion: {\n        serializedName: \"agentVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      vmSize: {\n        serializedName: \"vmSize\",\n        type: {\n          name: \"String\"\n        }\n      },\n      supportedTaskTypes: {\n        serializedName: \"supportedTaskTypes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceSkuRestrictions: msRest.CompositeMapper = {\n  serializedName: \"ResourceSkuRestrictions\",\n  type: {\n    name: \"Composite\",\n    className: \"ResourceSkuRestrictions\",\n    modelProperties: {\n      type: {\n        readOnly: true,\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      values: {\n        readOnly: true,\n        serializedName: \"values\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      reasonCode: {\n        readOnly: true,\n        serializedName: \"reasonCode\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceSkuCapabilities: msRest.CompositeMapper = {\n  serializedName: \"ResourceSkuCapabilities\",\n  type: {\n    name: \"Composite\",\n    className: \"ResourceSkuCapabilities\",\n    modelProperties: {\n      name: {\n        readOnly: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        readOnly: true,\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceSkuCosts: msRest.CompositeMapper = {\n  serializedName: \"ResourceSkuCosts\",\n  type: {\n    name: \"Composite\",\n    className: \"ResourceSkuCosts\",\n    modelProperties: {\n      meterID: {\n        readOnly: true,\n        serializedName: \"meterID\",\n        type: {\n          name: \"String\"\n        }\n      },\n      quantity: {\n        readOnly: true,\n        serializedName: \"quantity\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      extendedUnit: {\n        readOnly: true,\n        serializedName: \"extendedUnit\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceSkuCapacity: msRest.CompositeMapper = {\n  serializedName: \"ResourceSkuCapacity\",\n  type: {\n    name: \"Composite\",\n    className: \"ResourceSkuCapacity\",\n    modelProperties: {\n      minimum: {\n        readOnly: true,\n        serializedName: \"minimum\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      maximum: {\n        readOnly: true,\n        serializedName: \"maximum\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      default: {\n        readOnly: true,\n        serializedName: \"default\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      scaleType: {\n        readOnly: true,\n        serializedName: \"scaleType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceSku: msRest.CompositeMapper = {\n  serializedName: \"ResourceSku\",\n  type: {\n    name: \"Composite\",\n    className: \"ResourceSku\",\n    modelProperties: {\n      resourceType: {\n        readOnly: true,\n        serializedName: \"resourceType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        readOnly: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tier: {\n        readOnly: true,\n        serializedName: \"tier\",\n        type: {\n          name: \"String\"\n        }\n      },\n      size: {\n        readOnly: true,\n        serializedName: \"size\",\n        type: {\n          name: \"String\"\n        }\n      },\n      family: {\n        readOnly: true,\n        serializedName: \"family\",\n        type: {\n          name: \"String\"\n        }\n      },\n      kind: {\n        readOnly: true,\n        serializedName: \"kind\",\n        type: {\n          name: \"String\"\n        }\n      },\n      capacity: {\n        readOnly: true,\n        serializedName: \"capacity\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceSkuCapacity\"\n        }\n      },\n      locations: {\n        readOnly: true,\n        serializedName: \"locations\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      apiVersions: {\n        readOnly: true,\n        serializedName: \"apiVersions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      costs: {\n        readOnly: true,\n        serializedName: \"costs\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourceSkuCosts\"\n            }\n          }\n        }\n      },\n      capabilities: {\n        readOnly: true,\n        serializedName: \"capabilities\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourceSkuCapabilities\"\n            }\n          }\n        }\n      },\n      restrictions: {\n        readOnly: true,\n        serializedName: \"restrictions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourceSkuRestrictions\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectToSourceMySqlTaskInput: msRest.CompositeMapper = {\n  serializedName: \"ConnectToSourceMySqlTaskInput\",\n  type: {\n    name: \"Composite\",\n    className: \"ConnectToSourceMySqlTaskInput\",\n    modelProperties: {\n      sourceConnectionInfo: {\n        required: true,\n        serializedName: \"sourceConnectionInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"MySqlConnectionInfo\"\n        }\n      },\n      targetPlatform: {\n        serializedName: \"targetPlatform\",\n        type: {\n          name: \"String\"\n        }\n      },\n      checkPermissionsGroup: {\n        serializedName: \"checkPermissionsGroup\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Default\",\n            \"MigrationFromSqlServerToAzureDB\",\n            \"MigrationFromSqlServerToAzureMI\",\n            \"MigrationFromMySQLToAzureDBForMySQL\"\n          ]\n        }\n      }\n    }\n  }\n};\n\nexport const ServerProperties: msRest.CompositeMapper = {\n  serializedName: \"ServerProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"ServerProperties\",\n    modelProperties: {\n      serverPlatform: {\n        readOnly: true,\n        serializedName: \"serverPlatform\",\n        type: {\n          name: \"String\"\n        }\n      },\n      serverName: {\n        readOnly: true,\n        serializedName: \"serverName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      serverVersion: {\n        readOnly: true,\n        serializedName: \"serverVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      serverEdition: {\n        readOnly: true,\n        serializedName: \"serverEdition\",\n        type: {\n          name: \"String\"\n        }\n      },\n      serverOperatingSystemVersion: {\n        readOnly: true,\n        serializedName: \"serverOperatingSystemVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      serverDatabaseCount: {\n        readOnly: true,\n        serializedName: \"serverDatabaseCount\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectToSourceNonSqlTaskOutput: msRest.CompositeMapper = {\n  serializedName: \"ConnectToSourceNonSqlTaskOutput\",\n  type: {\n    name: \"Composite\",\n    className: \"ConnectToSourceNonSqlTaskOutput\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sourceServerBrandVersion: {\n        readOnly: true,\n        serializedName: \"sourceServerBrandVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      serverProperties: {\n        readOnly: true,\n        serializedName: \"serverProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"ServerProperties\"\n        }\n      },\n      databases: {\n        readOnly: true,\n        serializedName: \"databases\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      validationErrors: {\n        readOnly: true,\n        serializedName: \"validationErrors\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReportableException\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectToSourceMySqlTaskProperties: msRest.CompositeMapper = {\n  serializedName: \"ConnectToSource.MySql\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ProjectTaskProperties.type.polymorphicDiscriminator,\n    uberParent: \"ProjectTaskProperties\",\n    className: \"ConnectToSourceMySqlTaskProperties\",\n    modelProperties: {\n      ...ProjectTaskProperties.type.modelProperties,\n      input: {\n        serializedName: \"input\",\n        type: {\n          name: \"Composite\",\n          className: \"ConnectToSourceMySqlTaskInput\"\n        }\n      },\n      output: {\n        readOnly: true,\n        serializedName: \"output\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ConnectToSourceNonSqlTaskOutput\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SchemaMigrationSetting: msRest.CompositeMapper = {\n  serializedName: \"SchemaMigrationSetting\",\n  type: {\n    name: \"Composite\",\n    className: \"SchemaMigrationSetting\",\n    modelProperties: {\n      schemaOption: {\n        serializedName: \"schemaOption\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileId: {\n        serializedName: \"fileId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateSchemaSqlServerSqlDbDatabaseInput: msRest.CompositeMapper = {\n  serializedName: \"MigrateSchemaSqlServerSqlDbDatabaseInput\",\n  type: {\n    name: \"Composite\",\n    className: \"MigrateSchemaSqlServerSqlDbDatabaseInput\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetDatabaseName: {\n        serializedName: \"targetDatabaseName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      schemaSetting: {\n        serializedName: \"schemaSetting\",\n        type: {\n          name: \"Composite\",\n          className: \"SchemaMigrationSetting\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateSchemaSqlServerSqlDbTaskInput: msRest.CompositeMapper = {\n  serializedName: \"MigrateSchemaSqlServerSqlDbTaskInput\",\n  type: {\n    name: \"Composite\",\n    className: \"MigrateSchemaSqlServerSqlDbTaskInput\",\n    modelProperties: {\n      ...SqlMigrationTaskInput.type.modelProperties,\n      selectedDatabases: {\n        required: true,\n        serializedName: \"selectedDatabases\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MigrateSchemaSqlServerSqlDbDatabaseInput\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateSchemaSqlServerSqlDbTaskOutput: msRest.CompositeMapper = {\n  serializedName: \"MigrateSchemaSqlServerSqlDbTaskOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: {\n      serializedName: \"resultType\",\n      clientName: \"resultType\"\n    },\n    uberParent: \"MigrateSchemaSqlServerSqlDbTaskOutput\",\n    className: \"MigrateSchemaSqlServerSqlDbTaskOutput\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resultType: {\n        required: true,\n        serializedName: \"resultType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateSchemaSqlServerSqlDbTaskProperties: msRest.CompositeMapper = {\n  serializedName: \"MigrateSchemaSqlServerSqlDb\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ProjectTaskProperties.type.polymorphicDiscriminator,\n    uberParent: \"ProjectTaskProperties\",\n    className: \"MigrateSchemaSqlServerSqlDbTaskProperties\",\n    modelProperties: {\n      ...ProjectTaskProperties.type.modelProperties,\n      input: {\n        serializedName: \"input\",\n        type: {\n          name: \"Composite\",\n          className: \"MigrateSchemaSqlServerSqlDbTaskInput\"\n        }\n      },\n      output: {\n        readOnly: true,\n        serializedName: \"output\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MigrateSchemaSqlServerSqlDbTaskOutput\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateSchemaSqlServerSqlDbTaskOutputMigrationLevel: msRest.CompositeMapper = {\n  serializedName: \"MigrationLevelOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: MigrateSchemaSqlServerSqlDbTaskOutput.type.polymorphicDiscriminator,\n    uberParent: \"MigrateSchemaSqlServerSqlDbTaskOutput\",\n    className: \"MigrateSchemaSqlServerSqlDbTaskOutputMigrationLevel\",\n    modelProperties: {\n      ...MigrateSchemaSqlServerSqlDbTaskOutput.type.modelProperties,\n      state: {\n        readOnly: true,\n        serializedName: \"state\",\n        type: {\n          name: \"String\"\n        }\n      },\n      startedOn: {\n        readOnly: true,\n        serializedName: \"startedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endedOn: {\n        readOnly: true,\n        serializedName: \"endedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      sourceServerVersion: {\n        readOnly: true,\n        serializedName: \"sourceServerVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sourceServerBrandVersion: {\n        readOnly: true,\n        serializedName: \"sourceServerBrandVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetServerVersion: {\n        readOnly: true,\n        serializedName: \"targetServerVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetServerBrandVersion: {\n        readOnly: true,\n        serializedName: \"targetServerBrandVersion\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateSchemaSqlServerSqlDbTaskOutputDatabaseLevel: msRest.CompositeMapper = {\n  serializedName: \"DatabaseLevelOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: MigrateSchemaSqlServerSqlDbTaskOutput.type.polymorphicDiscriminator,\n    uberParent: \"MigrateSchemaSqlServerSqlDbTaskOutput\",\n    className: \"MigrateSchemaSqlServerSqlDbTaskOutputDatabaseLevel\",\n    modelProperties: {\n      ...MigrateSchemaSqlServerSqlDbTaskOutput.type.modelProperties,\n      databaseName: {\n        readOnly: true,\n        serializedName: \"databaseName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      state: {\n        readOnly: true,\n        serializedName: \"state\",\n        type: {\n          name: \"String\"\n        }\n      },\n      stage: {\n        readOnly: true,\n        serializedName: \"stage\",\n        type: {\n          name: \"String\"\n        }\n      },\n      startedOn: {\n        readOnly: true,\n        serializedName: \"startedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endedOn: {\n        readOnly: true,\n        serializedName: \"endedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      databaseErrorResultPrefix: {\n        readOnly: true,\n        serializedName: \"databaseErrorResultPrefix\",\n        type: {\n          name: \"String\"\n        }\n      },\n      schemaErrorResultPrefix: {\n        readOnly: true,\n        serializedName: \"schemaErrorResultPrefix\",\n        type: {\n          name: \"String\"\n        }\n      },\n      numberOfSuccessfulOperations: {\n        readOnly: true,\n        serializedName: \"numberOfSuccessfulOperations\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      numberOfFailedOperations: {\n        readOnly: true,\n        serializedName: \"numberOfFailedOperations\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      fileId: {\n        readOnly: true,\n        serializedName: \"fileId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateSchemaSqlServerSqlDbTaskOutputError: msRest.CompositeMapper = {\n  serializedName: \"SchemaErrorOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: MigrateSchemaSqlServerSqlDbTaskOutput.type.polymorphicDiscriminator,\n    uberParent: \"MigrateSchemaSqlServerSqlDbTaskOutput\",\n    className: \"MigrateSchemaSqlServerSqlDbTaskOutputError\",\n    modelProperties: {\n      ...MigrateSchemaSqlServerSqlDbTaskOutput.type.modelProperties,\n      commandText: {\n        readOnly: true,\n        serializedName: \"commandText\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorText: {\n        readOnly: true,\n        serializedName: \"errorText\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateSchemaSqlTaskOutputError: msRest.CompositeMapper = {\n  serializedName: \"ErrorOutput\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: MigrateSchemaSqlServerSqlDbTaskOutput.type.polymorphicDiscriminator,\n    uberParent: \"MigrateSchemaSqlServerSqlDbTaskOutput\",\n    className: \"MigrateSchemaSqlTaskOutputError\",\n    modelProperties: {\n      ...MigrateSchemaSqlServerSqlDbTaskOutput.type.modelProperties,\n      error: {\n        readOnly: true,\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ReportableException\"\n        }\n      }\n    }\n  }\n};\n\nexport const MongoDbCommandInput: msRest.CompositeMapper = {\n  serializedName: \"MongoDbCommandInput\",\n  type: {\n    name: \"Composite\",\n    className: \"MongoDbCommandInput\",\n    modelProperties: {\n      objectName: {\n        serializedName: \"objectName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MongoDbCancelCommand: msRest.CompositeMapper = {\n  serializedName: \"cancel\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: CommandProperties.type.polymorphicDiscriminator,\n    uberParent: \"CommandProperties\",\n    className: \"MongoDbCancelCommand\",\n    modelProperties: {\n      ...CommandProperties.type.modelProperties,\n      input: {\n        serializedName: \"input\",\n        type: {\n          name: \"Composite\",\n          className: \"MongoDbCommandInput\"\n        }\n      }\n    }\n  }\n};\n\nexport const MongoDbFinishCommandInput: msRest.CompositeMapper = {\n  serializedName: \"MongoDbFinishCommandInput\",\n  type: {\n    name: \"Composite\",\n    className: \"MongoDbFinishCommandInput\",\n    modelProperties: {\n      ...MongoDbCommandInput.type.modelProperties,\n      immediate: {\n        required: true,\n        serializedName: \"immediate\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const MongoDbFinishCommand: msRest.CompositeMapper = {\n  serializedName: \"finish\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: CommandProperties.type.polymorphicDiscriminator,\n    uberParent: \"CommandProperties\",\n    className: \"MongoDbFinishCommand\",\n    modelProperties: {\n      ...CommandProperties.type.modelProperties,\n      input: {\n        serializedName: \"input\",\n        type: {\n          name: \"Composite\",\n          className: \"MongoDbFinishCommandInput\"\n        }\n      }\n    }\n  }\n};\n\nexport const MongoDbRestartCommand: msRest.CompositeMapper = {\n  serializedName: \"restart\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: CommandProperties.type.polymorphicDiscriminator,\n    uberParent: \"CommandProperties\",\n    className: \"MongoDbRestartCommand\",\n    modelProperties: {\n      ...CommandProperties.type.modelProperties,\n      input: {\n        serializedName: \"input\",\n        type: {\n          name: \"Composite\",\n          className: \"MongoDbCommandInput\"\n        }\n      }\n    }\n  }\n};\n\nexport const OracleOCIDriverInfo: msRest.CompositeMapper = {\n  serializedName: \"OracleOCIDriverInfo\",\n  type: {\n    name: \"Composite\",\n    className: \"OracleOCIDriverInfo\",\n    modelProperties: {\n      driverName: {\n        readOnly: true,\n        serializedName: \"driverName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      driverSize: {\n        readOnly: true,\n        serializedName: \"driverSize\",\n        type: {\n          name: \"String\"\n        }\n      },\n      archiveChecksum: {\n        readOnly: true,\n        serializedName: \"archiveChecksum\",\n        type: {\n          name: \"String\"\n        }\n      },\n      oracleChecksum: {\n        readOnly: true,\n        serializedName: \"oracleChecksum\",\n        type: {\n          name: \"String\"\n        }\n      },\n      assemblyVersion: {\n        readOnly: true,\n        serializedName: \"assemblyVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      supportedOracleVersions: {\n        readOnly: true,\n        serializedName: \"supportedOracleVersions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const CheckOCIDriverTaskInput: msRest.CompositeMapper = {\n  serializedName: \"CheckOCIDriverTaskInput\",\n  type: {\n    name: \"Composite\",\n    className: \"CheckOCIDriverTaskInput\",\n    modelProperties: {\n      serverVersion: {\n        serializedName: \"serverVersion\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CheckOCIDriverTaskOutput: msRest.CompositeMapper = {\n  serializedName: \"CheckOCIDriverTaskOutput\",\n  type: {\n    name: \"Composite\",\n    className: \"CheckOCIDriverTaskOutput\",\n    modelProperties: {\n      installedDriver: {\n        serializedName: \"installedDriver\",\n        type: {\n          name: \"Composite\",\n          className: \"OracleOCIDriverInfo\"\n        }\n      },\n      validationErrors: {\n        readOnly: true,\n        serializedName: \"validationErrors\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReportableException\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const UploadOCIDriverTaskInput: msRest.CompositeMapper = {\n  serializedName: \"UploadOCIDriverTaskInput\",\n  type: {\n    name: \"Composite\",\n    className: \"UploadOCIDriverTaskInput\",\n    modelProperties: {\n      driverShare: {\n        serializedName: \"driverShare\",\n        type: {\n          name: \"Composite\",\n          className: \"FileShare\"\n        }\n      }\n    }\n  }\n};\n\nexport const UploadOCIDriverTaskOutput: msRest.CompositeMapper = {\n  serializedName: \"UploadOCIDriverTaskOutput\",\n  type: {\n    name: \"Composite\",\n    className: \"UploadOCIDriverTaskOutput\",\n    modelProperties: {\n      driverPackageName: {\n        readOnly: true,\n        serializedName: \"driverPackageName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      validationErrors: {\n        readOnly: true,\n        serializedName: \"validationErrors\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReportableException\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const InstallOCIDriverTaskInput: msRest.CompositeMapper = {\n  serializedName: \"InstallOCIDriverTaskInput\",\n  type: {\n    name: \"Composite\",\n    className: \"InstallOCIDriverTaskInput\",\n    modelProperties: {\n      driverPackageName: {\n        serializedName: \"driverPackageName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const InstallOCIDriverTaskOutput: msRest.CompositeMapper = {\n  serializedName: \"InstallOCIDriverTaskOutput\",\n  type: {\n    name: \"Composite\",\n    className: \"InstallOCIDriverTaskOutput\",\n    modelProperties: {\n      validationErrors: {\n        readOnly: true,\n        serializedName: \"validationErrors\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReportableException\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const CheckOCIDriverTaskProperties: msRest.CompositeMapper = {\n  serializedName: \"Service.Check.OCI\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ProjectTaskProperties.type.polymorphicDiscriminator,\n    uberParent: \"ProjectTaskProperties\",\n    className: \"CheckOCIDriverTaskProperties\",\n    modelProperties: {\n      ...ProjectTaskProperties.type.modelProperties,\n      input: {\n        serializedName: \"input\",\n        type: {\n          name: \"Composite\",\n          className: \"CheckOCIDriverTaskInput\"\n        }\n      },\n      output: {\n        readOnly: true,\n        serializedName: \"output\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CheckOCIDriverTaskOutput\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const UploadOCIDriverTaskProperties: msRest.CompositeMapper = {\n  serializedName: \"Service.Upload.OCI\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ProjectTaskProperties.type.polymorphicDiscriminator,\n    uberParent: \"ProjectTaskProperties\",\n    className: \"UploadOCIDriverTaskProperties\",\n    modelProperties: {\n      ...ProjectTaskProperties.type.modelProperties,\n      input: {\n        serializedName: \"input\",\n        type: {\n          name: \"Composite\",\n          className: \"UploadOCIDriverTaskInput\"\n        }\n      },\n      output: {\n        readOnly: true,\n        serializedName: \"output\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"UploadOCIDriverTaskOutput\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const InstallOCIDriverTaskProperties: msRest.CompositeMapper = {\n  serializedName: \"Service.Install.OCI\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ProjectTaskProperties.type.polymorphicDiscriminator,\n    uberParent: \"ProjectTaskProperties\",\n    className: \"InstallOCIDriverTaskProperties\",\n    modelProperties: {\n      ...ProjectTaskProperties.type.modelProperties,\n      input: {\n        serializedName: \"input\",\n        type: {\n          name: \"Composite\",\n          className: \"InstallOCIDriverTaskInput\"\n        }\n      },\n      output: {\n        readOnly: true,\n        serializedName: \"output\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"InstallOCIDriverTaskOutput\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Database: msRest.CompositeMapper = {\n  serializedName: \"Database\",\n  type: {\n    name: \"Composite\",\n    className: \"Database\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      compatibilityLevel: {\n        serializedName: \"compatibilityLevel\",\n        type: {\n          name: \"String\"\n        }\n      },\n      collation: {\n        serializedName: \"collation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      serverName: {\n        serializedName: \"serverName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fqdn: {\n        serializedName: \"fqdn\",\n        type: {\n          name: \"String\"\n        }\n      },\n      installId: {\n        serializedName: \"installId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      serverVersion: {\n        serializedName: \"serverVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      serverEdition: {\n        serializedName: \"serverEdition\",\n        type: {\n          name: \"String\"\n        }\n      },\n      serverLevel: {\n        serializedName: \"serverLevel\",\n        type: {\n          name: \"String\"\n        }\n      },\n      serverDefaultDataPath: {\n        serializedName: \"serverDefaultDataPath\",\n        type: {\n          name: \"String\"\n        }\n      },\n      serverDefaultLogPath: {\n        serializedName: \"serverDefaultLogPath\",\n        type: {\n          name: \"String\"\n        }\n      },\n      serverDefaultBackupPath: {\n        serializedName: \"serverDefaultBackupPath\",\n        type: {\n          name: \"String\"\n        }\n      },\n      serverCoreCount: {\n        serializedName: \"serverCoreCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      serverVisibleOnlineCoreCount: {\n        serializedName: \"serverVisibleOnlineCoreCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      databaseState: {\n        serializedName: \"databaseState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      serverId: {\n        serializedName: \"serverId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DatabaseObjectName: msRest.CompositeMapper = {\n  serializedName: \"DatabaseObjectName\",\n  type: {\n    name: \"Composite\",\n    className: \"DatabaseObjectName\",\n    modelProperties: {\n      databaseName: {\n        readOnly: true,\n        serializedName: \"databaseName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      objectName: {\n        readOnly: true,\n        serializedName: \"objectName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      schemaName: {\n        readOnly: true,\n        serializedName: \"schemaName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      objectType: {\n        serializedName: \"objectType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigrationTableMetadata: msRest.CompositeMapper = {\n  serializedName: \"MigrationTableMetadata\",\n  type: {\n    name: \"Composite\",\n    className: \"MigrationTableMetadata\",\n    modelProperties: {\n      sourceTableName: {\n        readOnly: true,\n        serializedName: \"sourceTableName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetTableName: {\n        readOnly: true,\n        serializedName: \"targetTableName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DataMigrationProjectMetadata: msRest.CompositeMapper = {\n  serializedName: \"DataMigrationProjectMetadata\",\n  type: {\n    name: \"Composite\",\n    className: \"DataMigrationProjectMetadata\",\n    modelProperties: {\n      sourceServerName: {\n        readOnly: true,\n        serializedName: \"sourceServerName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sourceServerPort: {\n        readOnly: true,\n        serializedName: \"sourceServerPort\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sourceUsername: {\n        readOnly: true,\n        serializedName: \"sourceUsername\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetServerName: {\n        readOnly: true,\n        serializedName: \"targetServerName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetUsername: {\n        readOnly: true,\n        serializedName: \"targetUsername\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetDbName: {\n        readOnly: true,\n        serializedName: \"targetDbName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetUsingWinAuth: {\n        readOnly: true,\n        serializedName: \"targetUsingWinAuth\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      selectedMigrationTables: {\n        readOnly: true,\n        serializedName: \"selectedMigrationTables\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MigrationTableMetadata\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const GetProjectDetailsNonSqlTaskInput: msRest.CompositeMapper = {\n  serializedName: \"GetProjectDetailsNonSqlTaskInput\",\n  type: {\n    name: \"Composite\",\n    className: \"GetProjectDetailsNonSqlTaskInput\",\n    modelProperties: {\n      projectName: {\n        required: true,\n        serializedName: \"projectName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      projectLocation: {\n        required: true,\n        serializedName: \"projectLocation\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NonSqlDataMigrationTable: msRest.CompositeMapper = {\n  serializedName: \"NonSqlDataMigrationTable\",\n  type: {\n    name: \"Composite\",\n    className: \"NonSqlDataMigrationTable\",\n    modelProperties: {\n      sourceName: {\n        serializedName: \"sourceName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NonSqlMigrationTaskInput: msRest.CompositeMapper = {\n  serializedName: \"NonSqlMigrationTaskInput\",\n  type: {\n    name: \"Composite\",\n    className: \"NonSqlMigrationTaskInput\",\n    modelProperties: {\n      targetConnectionInfo: {\n        required: true,\n        serializedName: \"targetConnectionInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"SqlConnectionInfo\"\n        }\n      },\n      targetDatabaseName: {\n        required: true,\n        serializedName: \"targetDatabaseName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      projectName: {\n        required: true,\n        serializedName: \"projectName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      projectLocation: {\n        required: true,\n        serializedName: \"projectLocation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      selectedTables: {\n        required: true,\n        serializedName: \"selectedTables\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"NonSqlDataMigrationTable\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DataMigrationError: msRest.CompositeMapper = {\n  serializedName: \"DataMigrationError\",\n  type: {\n    name: \"Composite\",\n    className: \"DataMigrationError\",\n    modelProperties: {\n      message: {\n        readOnly: true,\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NonSqlDataMigrationTableResult: msRest.CompositeMapper = {\n  serializedName: \"NonSqlDataMigrationTableResult\",\n  type: {\n    name: \"Composite\",\n    className: \"NonSqlDataMigrationTableResult\",\n    modelProperties: {\n      resultCode: {\n        readOnly: true,\n        serializedName: \"resultCode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sourceName: {\n        readOnly: true,\n        serializedName: \"sourceName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetName: {\n        readOnly: true,\n        serializedName: \"targetName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sourceRowCount: {\n        readOnly: true,\n        serializedName: \"sourceRowCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      targetRowCount: {\n        readOnly: true,\n        serializedName: \"targetRowCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      elapsedTimeInMiliseconds: {\n        readOnly: true,\n        serializedName: \"elapsedTimeInMiliseconds\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      errors: {\n        readOnly: true,\n        serializedName: \"errors\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DataMigrationError\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const NonSqlMigrationTaskOutput: msRest.CompositeMapper = {\n  serializedName: \"NonSqlMigrationTaskOutput\",\n  type: {\n    name: \"Composite\",\n    className: \"NonSqlMigrationTaskOutput\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      startedOn: {\n        readOnly: true,\n        serializedName: \"startedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endedOn: {\n        readOnly: true,\n        serializedName: \"endedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      status: {\n        readOnly: true,\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      dataMigrationTableResults: {\n        readOnly: true,\n        serializedName: \"dataMigrationTableResults\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"Composite\",\n              className: \"NonSqlDataMigrationTableResult\"\n            }\n          }\n        }\n      },\n      progressMessage: {\n        readOnly: true,\n        serializedName: \"progressMessage\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sourceServerName: {\n        readOnly: true,\n        serializedName: \"sourceServerName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetServerName: {\n        readOnly: true,\n        serializedName: \"targetServerName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DatabaseFileInput: msRest.CompositeMapper = {\n  serializedName: \"DatabaseFileInput\",\n  type: {\n    name: \"Composite\",\n    className: \"DatabaseFileInput\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      logicalName: {\n        serializedName: \"logicalName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      physicalFullName: {\n        serializedName: \"physicalFullName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      restoreFullName: {\n        serializedName: \"restoreFullName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileType: {\n        serializedName: \"fileType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MigrateSqlServerSqlServerDatabaseInput: msRest.CompositeMapper = {\n  serializedName: \"MigrateSqlServerSqlServerDatabaseInput\",\n  type: {\n    name: \"Composite\",\n    className: \"MigrateSqlServerSqlServerDatabaseInput\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      restoreDatabaseName: {\n        serializedName: \"restoreDatabaseName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      backupAndRestoreFolder: {\n        serializedName: \"backupAndRestoreFolder\",\n        type: {\n          name: \"String\"\n        }\n      },\n      databaseFiles: {\n        serializedName: \"databaseFiles\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DatabaseFileInput\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceSkusResult: msRest.CompositeMapper = {\n  serializedName: \"ResourceSkusResult\",\n  type: {\n    name: \"Composite\",\n    className: \"ResourceSkusResult\",\n    modelProperties: {\n      value: {\n        required: true,\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourceSku\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceSkuList: msRest.CompositeMapper = {\n  serializedName: \"ServiceSkuList\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceSkuList\",\n    modelProperties: {\n      value: {\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"AvailableServiceSku\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DataMigrationServiceList: msRest.CompositeMapper = {\n  serializedName: \"DataMigrationServiceList\",\n  type: {\n    name: \"Composite\",\n    className: \"DataMigrationServiceList\",\n    modelProperties: {\n      value: {\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DataMigrationService\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TaskList: msRest.CompositeMapper = {\n  serializedName: \"TaskList\",\n  type: {\n    name: \"Composite\",\n    className: \"TaskList\",\n    modelProperties: {\n      value: {\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ProjectTask\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ProjectList: msRest.CompositeMapper = {\n  serializedName: \"ProjectList\",\n  type: {\n    name: \"Composite\",\n    className: \"ProjectList\",\n    modelProperties: {\n      value: {\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Project\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const QuotaList: msRest.CompositeMapper = {\n  serializedName: \"QuotaList\",\n  type: {\n    name: \"Composite\",\n    className: \"QuotaList\",\n    modelProperties: {\n      value: {\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Quota\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceOperationList: msRest.CompositeMapper = {\n  serializedName: \"ServiceOperationList\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceOperationList\",\n    modelProperties: {\n      value: {\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ServiceOperation\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileList: msRest.CompositeMapper = {\n  serializedName: \"FileList\",\n  type: {\n    name: \"Composite\",\n    className: \"FileList\",\n    modelProperties: {\n      value: {\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ProjectFile\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const discriminators = {\n  'CommandProperties.Migrate.SqlServer.AzureDbSqlMi.Complete' : MigrateMISyncCompleteCommandProperties,\n  'CommandProperties.Migrate.Sync.Complete.Database' : MigrateSyncCompleteCommandProperties,\n  'CommandProperties' : CommandProperties,\n  'MigrateSsisTaskOutput.SsisProjectLevelOutput' : MigrateSsisTaskOutputProjectLevel,\n  'MigrateSsisTaskOutput.MigrationLevelOutput' : MigrateSsisTaskOutputMigrationLevel,\n  'MigrateSsisTaskOutput' : MigrateSsisTaskOutput,\n  'ConnectionInfo.MiSqlConnectionInfo' : MiSqlConnectionInfo,\n  'ConnectionInfo.PostgreSqlConnectionInfo' : PostgreSqlConnectionInfo,\n  'ConnectionInfo.OracleConnectionInfo' : OracleConnectionInfo,\n  'ConnectionInfo.MySqlConnectionInfo' : MySqlConnectionInfo,\n  'ConnectionInfo.MongoDbConnectionInfo' : MongoDbConnectionInfo,\n  'ConnectionInfo' : ConnectionInfo,\n  'ConnectionInfo.SqlConnectionInfo' : SqlConnectionInfo,\n  'ProjectTaskProperties.Migrate.Ssis' : MigrateSsisTaskProperties,\n  'ProjectTaskProperties.GetTDECertificates.Sql' : GetTdeCertificatesSqlTaskProperties,\n  'ProjectTaskProperties.Validate.Oracle.AzureDbPostgreSql.Sync' : ValidateOracleAzureDbForPostgreSqlSyncTaskProperties,\n  'ProjectTaskProperties.Validate.MongoDb' : ValidateMongoDbTaskProperties,\n  'ProjectTaskProperties.ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS' : ValidateMigrationInputSqlServerSqlMISyncTaskProperties,\n  'ProjectTaskProperties.ValidateMigrationInput.SqlServer.AzureSqlDbMI' : ValidateMigrationInputSqlServerSqlMITaskProperties,\n  'ProjectTaskProperties.ValidateMigrationInput.SqlServer.SqlDb.Sync' : ValidateMigrationInputSqlServerSqlDbSyncTaskProperties,\n  'MigrateOracleAzureDbPostgreSqlSyncTaskOutput.DatabaseLevelErrorOutput' : MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseError,\n  'MigrateOracleAzureDbPostgreSqlSyncTaskOutput.ErrorOutput' : MigrateOracleAzureDbPostgreSqlSyncTaskOutputError,\n  'MigrateOracleAzureDbPostgreSqlSyncTaskOutput.TableLevelOutput' : MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevel,\n  'MigrateOracleAzureDbPostgreSqlSyncTaskOutput.DatabaseLevelOutput' : MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevel,\n  'MigrateOracleAzureDbPostgreSqlSyncTaskOutput.MigrationLevelOutput' : MigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevel,\n  'MigrateOracleAzureDbPostgreSqlSyncTaskOutput' : MigrateOracleAzureDbPostgreSqlSyncTaskOutput,\n  'ProjectTaskProperties.Migrate.Oracle.AzureDbForPostgreSql.Sync' : MigrateOracleAzureDbForPostgreSqlSyncTaskProperties,\n  'MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutput.DatabaseLevelErrorOutput' : MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseError,\n  'MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutput.ErrorOutput' : MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputError,\n  'MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutput.TableLevelOutput' : MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevel,\n  'MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutput.DatabaseLevelOutput' : MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevel,\n  'MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutput.MigrationLevelOutput' : MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevel,\n  'MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutput' : MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutput,\n  'ProjectTaskProperties.Migrate.PostgreSql.AzureDbForPostgreSql.Sync' : MigratePostgreSqlAzureDbForPostgreSqlSyncTaskProperties,\n  'MigrateMySqlAzureDbForMySqlSyncTaskOutput.DatabaseLevelErrorOutput' : MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseError,\n  'MigrateMySqlAzureDbForMySqlSyncTaskOutput.ErrorOutput' : MigrateMySqlAzureDbForMySqlSyncTaskOutputError,\n  'MigrateMySqlAzureDbForMySqlSyncTaskOutput.TableLevelOutput' : MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevel,\n  'MigrateMySqlAzureDbForMySqlSyncTaskOutput.DatabaseLevelOutput' : MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevel,\n  'MigrateMySqlAzureDbForMySqlSyncTaskOutput.MigrationLevelOutput' : MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevel,\n  'MigrateMySqlAzureDbForMySqlSyncTaskOutput' : MigrateMySqlAzureDbForMySqlSyncTaskOutput,\n  'ProjectTaskProperties.Migrate.MySql.AzureDbForMySql.Sync' : MigrateMySqlAzureDbForMySqlSyncTaskProperties,\n  'MigrateSqlServerSqlDbSyncTaskOutput.DatabaseLevelErrorOutput' : MigrateSqlServerSqlDbSyncTaskOutputDatabaseError,\n  'MigrateSqlServerSqlDbSyncTaskOutput.ErrorOutput' : MigrateSqlServerSqlDbSyncTaskOutputError,\n  'MigrateSqlServerSqlDbSyncTaskOutput.TableLevelOutput' : MigrateSqlServerSqlDbSyncTaskOutputTableLevel,\n  'MigrateSqlServerSqlDbSyncTaskOutput.DatabaseLevelOutput' : MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevel,\n  'MigrateSqlServerSqlDbSyncTaskOutput.MigrationLevelOutput' : MigrateSqlServerSqlDbSyncTaskOutputMigrationLevel,\n  'MigrateSqlServerSqlDbSyncTaskOutput' : MigrateSqlServerSqlDbSyncTaskOutput,\n  'ProjectTaskProperties.Migrate.SqlServer.AzureSqlDb.Sync' : MigrateSqlServerSqlDbSyncTaskProperties,\n  'MigrateSqlServerSqlDbTaskOutput.ErrorOutput' : MigrateSqlServerSqlDbTaskOutputError,\n  'MigrateSqlServerSqlDbTaskOutput.TableLevelOutput' : MigrateSqlServerSqlDbTaskOutputTableLevel,\n  'MigrateSqlServerSqlDbTaskOutput.DatabaseLevelOutput' : MigrateSqlServerSqlDbTaskOutputDatabaseLevel,\n  'MigrateSqlServerSqlDbTaskOutput.MigrationLevelOutput' : MigrateSqlServerSqlDbTaskOutputMigrationLevel,\n  'MigrateSqlServerSqlDbTaskOutput' : MigrateSqlServerSqlDbTaskOutput,\n  'ProjectTaskProperties.Migrate.SqlServer.SqlDb' : MigrateSqlServerSqlDbTaskProperties,\n  'MigrateSqlServerSqlMISyncTaskOutput.ErrorOutput' : MigrateSqlServerSqlMISyncTaskOutputError,\n  'MigrateSqlServerSqlMISyncTaskOutput.DatabaseLevelOutput' : MigrateSqlServerSqlMISyncTaskOutputDatabaseLevel,\n  'MigrateSqlServerSqlMISyncTaskOutput.MigrationLevelOutput' : MigrateSqlServerSqlMISyncTaskOutputMigrationLevel,\n  'MigrateSqlServerSqlMISyncTaskOutput' : MigrateSqlServerSqlMISyncTaskOutput,\n  'ProjectTaskProperties.Migrate.SqlServer.AzureSqlDbMI.Sync.LRS' : MigrateSqlServerSqlMISyncTaskProperties,\n  'MigrateSqlServerSqlMITaskOutput.ErrorOutput' : MigrateSqlServerSqlMITaskOutputError,\n  'MigrateSqlServerSqlMITaskOutput.LoginLevelOutput' : MigrateSqlServerSqlMITaskOutputLoginLevel,\n  'MigrateSqlServerSqlMITaskOutput.AgentJobLevelOutput' : MigrateSqlServerSqlMITaskOutputAgentJobLevel,\n  'MigrateSqlServerSqlMITaskOutput.DatabaseLevelOutput' : MigrateSqlServerSqlMITaskOutputDatabaseLevel,\n  'MigrateSqlServerSqlMITaskOutput.MigrationLevelOutput' : MigrateSqlServerSqlMITaskOutputMigrationLevel,\n  'MigrateSqlServerSqlMITaskOutput' : MigrateSqlServerSqlMITaskOutput,\n  'ProjectTaskProperties.Migrate.SqlServer.AzureSqlDbMI' : MigrateSqlServerSqlMITaskProperties,\n  'ProjectTaskProperties.Migrate.MongoDb' : MigrateMongoDbTaskProperties,\n  'ProjectTaskProperties.ConnectToTarget.AzureDbForMySql' : ConnectToTargetAzureDbForMySqlTaskProperties,\n  'ProjectTaskProperties.ConnectToTarget.AzureSqlDbMI.Sync.LRS' : ConnectToTargetSqlMISyncTaskProperties,\n  'ProjectTaskProperties.ConnectToTarget.AzureSqlDbMI' : ConnectToTargetSqlMITaskProperties,\n  'ProjectTaskProperties.GetUserTablesPostgreSql' : GetUserTablesPostgreSqlTaskProperties,\n  'ProjectTaskProperties.GetUserTablesOracle' : GetUserTablesOracleTaskProperties,\n  'ProjectTaskProperties.GetUserTables.AzureSqlDb.Sync' : GetUserTablesSqlSyncTaskProperties,\n  'ProjectTaskProperties.GetUserTables.Sql' : GetUserTablesSqlTaskProperties,\n  'ProjectTaskProperties.ConnectToTarget.Oracle.AzureDbForPostgreSql.Sync' : ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskProperties,\n  'ProjectTaskProperties.ConnectToTarget.AzureDbForPostgreSql.Sync' : ConnectToTargetAzureDbForPostgreSqlSyncTaskProperties,\n  'ProjectTaskProperties.ConnectToTarget.SqlDb.Sync' : ConnectToTargetSqlSqlDbSyncTaskProperties,\n  'ProjectTaskProperties.ConnectToTarget.SqlDb' : ConnectToTargetSqlDbTaskProperties,\n  'ProjectTaskProperties.ConnectToSource.Oracle.Sync' : ConnectToSourceOracleSyncTaskProperties,\n  'ProjectTaskProperties.ConnectToSource.PostgreSql.Sync' : ConnectToSourcePostgreSqlSyncTaskProperties,\n  'ConnectToSourceSqlServerTaskOutput.AgentJobLevelOutput' : ConnectToSourceSqlServerTaskOutputAgentJobLevel,\n  'ConnectToSourceSqlServerTaskOutput.LoginLevelOutput' : ConnectToSourceSqlServerTaskOutputLoginLevel,\n  'ConnectToSourceSqlServerTaskOutput.DatabaseLevelOutput' : ConnectToSourceSqlServerTaskOutputDatabaseLevel,\n  'ConnectToSourceSqlServerTaskOutput.TaskLevelOutput' : ConnectToSourceSqlServerTaskOutputTaskLevel,\n  'ConnectToSourceSqlServerTaskOutput' : ConnectToSourceSqlServerTaskOutput,\n  'ProjectTaskProperties.ConnectToSource.SqlServer.Sync' : ConnectToSourceSqlServerSyncTaskProperties,\n  'ProjectTaskProperties.ConnectToSource.SqlServer' : ConnectToSourceSqlServerTaskProperties,\n  'ProjectTaskProperties.Connect.MongoDb' : ConnectToMongoDbTaskProperties,\n  'ProjectTaskProperties' : ProjectTaskProperties,\n  'ProjectTaskProperties.ConnectToSource.MySql' : ConnectToSourceMySqlTaskProperties,\n  'MigrateSchemaSqlServerSqlDbTaskOutput' : MigrateSchemaSqlServerSqlDbTaskOutput,\n  'ProjectTaskProperties.MigrateSchemaSqlServerSqlDb' : MigrateSchemaSqlServerSqlDbTaskProperties,\n  'MigrateSchemaSqlServerSqlDbTaskOutput.MigrationLevelOutput' : MigrateSchemaSqlServerSqlDbTaskOutputMigrationLevel,\n  'MigrateSchemaSqlServerSqlDbTaskOutput.DatabaseLevelOutput' : MigrateSchemaSqlServerSqlDbTaskOutputDatabaseLevel,\n  'MigrateSchemaSqlServerSqlDbTaskOutput.SchemaErrorOutput' : MigrateSchemaSqlServerSqlDbTaskOutputError,\n  'MigrateSchemaSqlServerSqlDbTaskOutput.ErrorOutput' : MigrateSchemaSqlTaskOutputError,\n  'CommandProperties.cancel' : MongoDbCancelCommand,\n  'CommandProperties.finish' : MongoDbFinishCommand,\n  'CommandProperties.restart' : MongoDbRestartCommand,\n  'ProjectTaskProperties.Service.Check.OCI' : CheckOCIDriverTaskProperties,\n  'ProjectTaskProperties.Service.Upload.OCI' : UploadOCIDriverTaskProperties,\n  'ProjectTaskProperties.Service.Install.OCI' : InstallOCIDriverTaskProperties\n\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  discriminators,\n  ApiError,\n  ODataError,\n  ResourceSku,\n  ResourceSkuCapabilities,\n  ResourceSkuCapacity,\n  ResourceSkuCosts,\n  ResourceSkuRestrictions,\n  ResourceSkusResult\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\n\nexport const acceptLanguage: msRest.OperationParameter = {\n  parameterPath: \"acceptLanguage\",\n  mapper: {\n    serializedName: \"accept-language\",\n    defaultValue: 'en-US',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const apiVersion: msRest.OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    required: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const deleteRunningTasks: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"deleteRunningTasks\"\n  ],\n  mapper: {\n    serializedName: \"deleteRunningTasks\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\nexport const expand: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"expand\"\n  ],\n  mapper: {\n    serializedName: \"$expand\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const fileName: msRest.OperationURLParameter = {\n  parameterPath: \"fileName\",\n  mapper: {\n    required: true,\n    serializedName: \"fileName\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const groupName: msRest.OperationURLParameter = {\n  parameterPath: \"groupName\",\n  mapper: {\n    required: true,\n    serializedName: \"groupName\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const location: msRest.OperationURLParameter = {\n  parameterPath: \"location\",\n  mapper: {\n    required: true,\n    serializedName: \"location\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const nextPageLink: msRest.OperationURLParameter = {\n  parameterPath: \"nextPageLink\",\n  mapper: {\n    required: true,\n    serializedName: \"nextLink\",\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\nexport const projectName: msRest.OperationURLParameter = {\n  parameterPath: \"projectName\",\n  mapper: {\n    required: true,\n    serializedName: \"projectName\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const serviceName: msRest.OperationURLParameter = {\n  parameterPath: \"serviceName\",\n  mapper: {\n    required: true,\n    serializedName: \"serviceName\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const subscriptionId: msRest.OperationURLParameter = {\n  parameterPath: \"subscriptionId\",\n  mapper: {\n    required: true,\n    serializedName: \"subscriptionId\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const taskName: msRest.OperationURLParameter = {\n  parameterPath: \"taskName\",\n  mapper: {\n    required: true,\n    serializedName: \"taskName\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const taskType: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"taskType\"\n  ],\n  mapper: {\n    serializedName: \"taskType\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/resourceSkusMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { DataMigrationServiceClientContext } from \"../dataMigrationServiceClientContext\";\n\n/** Class representing a ResourceSkus. */\nexport class ResourceSkus {\n  private readonly client: DataMigrationServiceClientContext;\n\n  /**\n   * Create a ResourceSkus.\n   * @param {DataMigrationServiceClientContext} client Reference to the service client.\n   */\n  constructor(client: DataMigrationServiceClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * The skus action returns the list of SKUs that DMS supports.\n   * @summary Get supported SKUs\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ResourceSkusListSkusResponse>\n   */\n  listSkus(options?: msRest.RequestOptionsBase): Promise<Models.ResourceSkusListSkusResponse>;\n  /**\n   * @param callback The callback\n   */\n  listSkus(callback: msRest.ServiceCallback<Models.ResourceSkusResult>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listSkus(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceSkusResult>): void;\n  listSkus(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ResourceSkusResult>, callback?: msRest.ServiceCallback<Models.ResourceSkusResult>): Promise<Models.ResourceSkusListSkusResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      listSkusOperationSpec,\n      callback) as Promise<Models.ResourceSkusListSkusResponse>;\n  }\n\n  /**\n   * The skus action returns the list of SKUs that DMS supports.\n   * @summary Get supported SKUs\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ResourceSkusListSkusNextResponse>\n   */\n  listSkusNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ResourceSkusListSkusNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listSkusNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ResourceSkusResult>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listSkusNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceSkusResult>): void;\n  listSkusNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ResourceSkusResult>, callback?: msRest.ServiceCallback<Models.ResourceSkusResult>): Promise<Models.ResourceSkusListSkusNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listSkusNextOperationSpec,\n      callback) as Promise<Models.ResourceSkusListSkusNextResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst listSkusOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/providers/Microsoft.DataMigration/skus\",\n  urlParameters: [\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceSkusResult\n    },\n    default: {\n      bodyMapper: Mappers.ApiError\n    }\n  },\n  serializer\n};\n\nconst listSkusNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceSkusResult\n    },\n    default: {\n      bodyMapper: Mappers.ApiError\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  discriminators,\n  ApiError,\n  AvailableServiceSku,\n  AvailableServiceSkuCapacity,\n  AvailableServiceSkuSku,\n  AzureActiveDirectoryApp,\n  BackupFileInfo,\n  BackupSetInfo,\n  BaseResource,\n  BlobShare,\n  CheckOCIDriverTaskInput,\n  CheckOCIDriverTaskOutput,\n  CheckOCIDriverTaskProperties,\n  CommandProperties,\n  ConnectionInfo,\n  ConnectToMongoDbTaskProperties,\n  ConnectToSourceMySqlTaskInput,\n  ConnectToSourceMySqlTaskProperties,\n  ConnectToSourceNonSqlTaskOutput,\n  ConnectToSourceOracleSyncTaskInput,\n  ConnectToSourceOracleSyncTaskOutput,\n  ConnectToSourceOracleSyncTaskProperties,\n  ConnectToSourcePostgreSqlSyncTaskInput,\n  ConnectToSourcePostgreSqlSyncTaskOutput,\n  ConnectToSourcePostgreSqlSyncTaskProperties,\n  ConnectToSourceSqlServerSyncTaskProperties,\n  ConnectToSourceSqlServerTaskInput,\n  ConnectToSourceSqlServerTaskOutput,\n  ConnectToSourceSqlServerTaskOutputAgentJobLevel,\n  ConnectToSourceSqlServerTaskOutputDatabaseLevel,\n  ConnectToSourceSqlServerTaskOutputLoginLevel,\n  ConnectToSourceSqlServerTaskOutputTaskLevel,\n  ConnectToSourceSqlServerTaskProperties,\n  ConnectToTargetAzureDbForMySqlTaskInput,\n  ConnectToTargetAzureDbForMySqlTaskOutput,\n  ConnectToTargetAzureDbForMySqlTaskProperties,\n  ConnectToTargetAzureDbForPostgreSqlSyncTaskInput,\n  ConnectToTargetAzureDbForPostgreSqlSyncTaskOutput,\n  ConnectToTargetAzureDbForPostgreSqlSyncTaskProperties,\n  ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInput,\n  ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutput,\n  ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputDatabaseSchemaMapItem,\n  ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskProperties,\n  ConnectToTargetSqlDbTaskInput,\n  ConnectToTargetSqlDbTaskOutput,\n  ConnectToTargetSqlDbTaskProperties,\n  ConnectToTargetSqlMISyncTaskInput,\n  ConnectToTargetSqlMISyncTaskOutput,\n  ConnectToTargetSqlMISyncTaskProperties,\n  ConnectToTargetSqlMITaskInput,\n  ConnectToTargetSqlMITaskOutput,\n  ConnectToTargetSqlMITaskProperties,\n  ConnectToTargetSqlSqlDbSyncTaskInput,\n  ConnectToTargetSqlSqlDbSyncTaskProperties,\n  DatabaseBackupInfo,\n  DatabaseFileInfo,\n  DatabaseInfo,\n  DatabaseSummaryResult,\n  DatabaseTable,\n  DataItemMigrationSummaryResult,\n  DataMigrationService,\n  DataMigrationServiceList,\n  DataMigrationServiceStatusResponse,\n  FileShare,\n  GetTdeCertificatesSqlTaskInput,\n  GetTdeCertificatesSqlTaskOutput,\n  GetTdeCertificatesSqlTaskProperties,\n  GetUserTablesOracleTaskInput,\n  GetUserTablesOracleTaskOutput,\n  GetUserTablesOracleTaskProperties,\n  GetUserTablesPostgreSqlTaskInput,\n  GetUserTablesPostgreSqlTaskOutput,\n  GetUserTablesPostgreSqlTaskProperties,\n  GetUserTablesSqlSyncTaskInput,\n  GetUserTablesSqlSyncTaskOutput,\n  GetUserTablesSqlSyncTaskProperties,\n  GetUserTablesSqlTaskInput,\n  GetUserTablesSqlTaskOutput,\n  GetUserTablesSqlTaskProperties,\n  InstallOCIDriverTaskInput,\n  InstallOCIDriverTaskOutput,\n  InstallOCIDriverTaskProperties,\n  MigrateMISyncCompleteCommandInput,\n  MigrateMISyncCompleteCommandOutput,\n  MigrateMISyncCompleteCommandProperties,\n  MigrateMongoDbTaskProperties,\n  MigrateMySqlAzureDbForMySqlSyncDatabaseInput,\n  MigrateMySqlAzureDbForMySqlSyncTaskInput,\n  MigrateMySqlAzureDbForMySqlSyncTaskOutput,\n  MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseError,\n  MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevel,\n  MigrateMySqlAzureDbForMySqlSyncTaskOutputError,\n  MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevel,\n  MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevel,\n  MigrateMySqlAzureDbForMySqlSyncTaskProperties,\n  MigrateOracleAzureDbForPostgreSqlSyncTaskProperties,\n  MigrateOracleAzureDbPostgreSqlSyncDatabaseInput,\n  MigrateOracleAzureDbPostgreSqlSyncTaskInput,\n  MigrateOracleAzureDbPostgreSqlSyncTaskOutput,\n  MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseError,\n  MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevel,\n  MigrateOracleAzureDbPostgreSqlSyncTaskOutputError,\n  MigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevel,\n  MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevel,\n  MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput,\n  MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput,\n  MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutput,\n  MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseError,\n  MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevel,\n  MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputError,\n  MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevel,\n  MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevel,\n  MigratePostgreSqlAzureDbForPostgreSqlSyncTaskProperties,\n  MigrateSchemaSqlServerSqlDbDatabaseInput,\n  MigrateSchemaSqlServerSqlDbTaskInput,\n  MigrateSchemaSqlServerSqlDbTaskOutput,\n  MigrateSchemaSqlServerSqlDbTaskOutputDatabaseLevel,\n  MigrateSchemaSqlServerSqlDbTaskOutputError,\n  MigrateSchemaSqlServerSqlDbTaskOutputMigrationLevel,\n  MigrateSchemaSqlServerSqlDbTaskProperties,\n  MigrateSchemaSqlTaskOutputError,\n  MigrateSqlServerSqlDbDatabaseInput,\n  MigrateSqlServerSqlDbSyncDatabaseInput,\n  MigrateSqlServerSqlDbSyncTaskInput,\n  MigrateSqlServerSqlDbSyncTaskOutput,\n  MigrateSqlServerSqlDbSyncTaskOutputDatabaseError,\n  MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevel,\n  MigrateSqlServerSqlDbSyncTaskOutputError,\n  MigrateSqlServerSqlDbSyncTaskOutputMigrationLevel,\n  MigrateSqlServerSqlDbSyncTaskOutputTableLevel,\n  MigrateSqlServerSqlDbSyncTaskProperties,\n  MigrateSqlServerSqlDbTaskInput,\n  MigrateSqlServerSqlDbTaskOutput,\n  MigrateSqlServerSqlDbTaskOutputDatabaseLevel,\n  MigrateSqlServerSqlDbTaskOutputError,\n  MigrateSqlServerSqlDbTaskOutputMigrationLevel,\n  MigrateSqlServerSqlDbTaskOutputTableLevel,\n  MigrateSqlServerSqlDbTaskProperties,\n  MigrateSqlServerSqlMIDatabaseInput,\n  MigrateSqlServerSqlMISyncTaskInput,\n  MigrateSqlServerSqlMISyncTaskOutput,\n  MigrateSqlServerSqlMISyncTaskOutputDatabaseLevel,\n  MigrateSqlServerSqlMISyncTaskOutputError,\n  MigrateSqlServerSqlMISyncTaskOutputMigrationLevel,\n  MigrateSqlServerSqlMISyncTaskProperties,\n  MigrateSqlServerSqlMITaskInput,\n  MigrateSqlServerSqlMITaskOutput,\n  MigrateSqlServerSqlMITaskOutputAgentJobLevel,\n  MigrateSqlServerSqlMITaskOutputDatabaseLevel,\n  MigrateSqlServerSqlMITaskOutputError,\n  MigrateSqlServerSqlMITaskOutputLoginLevel,\n  MigrateSqlServerSqlMITaskOutputMigrationLevel,\n  MigrateSqlServerSqlMITaskProperties,\n  MigrateSsisTaskInput,\n  MigrateSsisTaskOutput,\n  MigrateSsisTaskOutputMigrationLevel,\n  MigrateSsisTaskOutputProjectLevel,\n  MigrateSsisTaskProperties,\n  MigrateSyncCompleteCommandInput,\n  MigrateSyncCompleteCommandOutput,\n  MigrateSyncCompleteCommandProperties,\n  MigrationEligibilityInfo,\n  MigrationReportResult,\n  MigrationValidationDatabaseSummaryResult,\n  MigrationValidationOptions,\n  MigrationValidationResult,\n  MiSqlConnectionInfo,\n  MongoDbCancelCommand,\n  MongoDbClusterInfo,\n  MongoDbCollectionInfo,\n  MongoDbCollectionProgress,\n  MongoDbCollectionSettings,\n  MongoDbCommandInput,\n  MongoDbConnectionInfo,\n  MongoDbDatabaseInfo,\n  MongoDbDatabaseProgress,\n  MongoDbDatabaseSettings,\n  MongoDbError,\n  MongoDbFinishCommand,\n  MongoDbFinishCommandInput,\n  MongoDbMigrationProgress,\n  MongoDbMigrationSettings,\n  MongoDbObjectInfo,\n  MongoDbProgress,\n  MongoDbRestartCommand,\n  MongoDbShardKeyField,\n  MongoDbShardKeyInfo,\n  MongoDbShardKeySetting,\n  MongoDbThrottlingSettings,\n  MySqlConnectionInfo,\n  NameAvailabilityRequest,\n  NameAvailabilityResponse,\n  ODataError,\n  OracleConnectionInfo,\n  OracleOCIDriverInfo,\n  OrphanedUserInfo,\n  PostgreSqlConnectionInfo,\n  Project,\n  ProjectFile,\n  ProjectFileProperties,\n  ProjectTask,\n  ProjectTaskProperties,\n  ReportableException,\n  Resource,\n  SchemaMigrationSetting,\n  SelectedCertificateInput,\n  ServerProperties,\n  ServiceSku,\n  ServiceSkuList,\n  SqlConnectionInfo,\n  SqlMigrationTaskInput,\n  SqlServerSqlMISyncTaskInput,\n  SsisMigrationInfo,\n  StartMigrationScenarioServerRoleResult,\n  SyncMigrationDatabaseErrorEvent,\n  TrackedResource,\n  UploadOCIDriverTaskInput,\n  UploadOCIDriverTaskOutput,\n  UploadOCIDriverTaskProperties,\n  ValidateMigrationInputSqlServerSqlDbSyncTaskProperties,\n  ValidateMigrationInputSqlServerSqlMISyncTaskInput,\n  ValidateMigrationInputSqlServerSqlMISyncTaskOutput,\n  ValidateMigrationInputSqlServerSqlMISyncTaskProperties,\n  ValidateMigrationInputSqlServerSqlMITaskInput,\n  ValidateMigrationInputSqlServerSqlMITaskOutput,\n  ValidateMigrationInputSqlServerSqlMITaskProperties,\n  ValidateMongoDbTaskProperties,\n  ValidateOracleAzureDbForPostgreSqlSyncTaskProperties,\n  ValidateOracleAzureDbPostgreSqlSyncTaskOutput,\n  ValidateSyncMigrationInputSqlServerTaskInput,\n  ValidateSyncMigrationInputSqlServerTaskOutput\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as msRestAzure from \"@azure/ms-rest-azure-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/servicesMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { DataMigrationServiceClientContext } from \"../dataMigrationServiceClientContext\";\n\n/** Class representing a Services. */\nexport class Services {\n  private readonly client: DataMigrationServiceClientContext;\n\n  /**\n   * Create a Services.\n   * @param {DataMigrationServiceClientContext} client Reference to the service client.\n   */\n  constructor(client: DataMigrationServiceClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * The services resource is the top-level resource that represents the Database Migration Service.\n   * The PUT method creates a new service or updates an existing one. When a service is updated,\n   * existing child resources (i.e. tasks) are unaffected. Services currently support a single kind,\n   * \"vm\", which refers to a VM-based service, although other kinds may be added in the future. This\n   * method can change the kind, SKU, and network of the service, but if tasks are currently running\n   * (i.e. the service is busy), this will fail with 400 Bad Request (\"ServiceIsBusy\"). The provider\n   * will reply when successful with 200 OK or 201 Created. Long-running operations use the\n   * provisioningState property.\n   * @summary Create or update DMS Instance\n   * @param parameters Information about the service\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ServicesCreateOrUpdateResponse>\n   */\n  createOrUpdate(parameters: Models.DataMigrationService, groupName: string, serviceName: string, options?: msRest.RequestOptionsBase): Promise<Models.ServicesCreateOrUpdateResponse> {\n    return this.beginCreateOrUpdate(parameters,groupName,serviceName,options)\n      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.ServicesCreateOrUpdateResponse>;\n  }\n\n  /**\n   * The services resource is the top-level resource that represents the Database Migration Service.\n   * The GET method retrieves information about a service instance.\n   * @summary Get DMS Service Instance\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ServicesGetResponse>\n   */\n  get(groupName: string, serviceName: string, options?: msRest.RequestOptionsBase): Promise<Models.ServicesGetResponse>;\n  /**\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param callback The callback\n   */\n  get(groupName: string, serviceName: string, callback: msRest.ServiceCallback<Models.DataMigrationService>): void;\n  /**\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  get(groupName: string, serviceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DataMigrationService>): void;\n  get(groupName: string, serviceName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DataMigrationService>, callback?: msRest.ServiceCallback<Models.DataMigrationService>): Promise<Models.ServicesGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        groupName,\n        serviceName,\n        options\n      },\n      getOperationSpec,\n      callback) as Promise<Models.ServicesGetResponse>;\n  }\n\n  /**\n   * The services resource is the top-level resource that represents the Database Migration Service.\n   * The DELETE method deletes a service. Any running tasks will be canceled.\n   * @summary Delete DMS Service Instance\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  deleteMethod(groupName: string, serviceName: string, options?: Models.ServicesDeleteMethodOptionalParams): Promise<msRest.RestResponse> {\n    return this.beginDeleteMethod(groupName,serviceName,options)\n      .then(lroPoller => lroPoller.pollUntilFinished());\n  }\n\n  /**\n   * The services resource is the top-level resource that represents the Database Migration Service.\n   * The PATCH method updates an existing service. This method can change the kind, SKU, and network\n   * of the service, but if tasks are currently running (i.e. the service is busy), this will fail\n   * with 400 Bad Request (\"ServiceIsBusy\").\n   * @summary Create or update DMS Service Instance\n   * @param parameters Information about the service\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ServicesUpdateResponse>\n   */\n  update(parameters: Models.DataMigrationService, groupName: string, serviceName: string, options?: msRest.RequestOptionsBase): Promise<Models.ServicesUpdateResponse> {\n    return this.beginUpdate(parameters,groupName,serviceName,options)\n      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.ServicesUpdateResponse>;\n  }\n\n  /**\n   * The services resource is the top-level resource that represents the Database Migration Service.\n   * This action performs a health check and returns the status of the service and virtual machine\n   * size.\n   * @summary Check service health status\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ServicesCheckStatusResponse>\n   */\n  checkStatus(groupName: string, serviceName: string, options?: msRest.RequestOptionsBase): Promise<Models.ServicesCheckStatusResponse>;\n  /**\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param callback The callback\n   */\n  checkStatus(groupName: string, serviceName: string, callback: msRest.ServiceCallback<Models.DataMigrationServiceStatusResponse>): void;\n  /**\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  checkStatus(groupName: string, serviceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DataMigrationServiceStatusResponse>): void;\n  checkStatus(groupName: string, serviceName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DataMigrationServiceStatusResponse>, callback?: msRest.ServiceCallback<Models.DataMigrationServiceStatusResponse>): Promise<Models.ServicesCheckStatusResponse> {\n    return this.client.sendOperationRequest(\n      {\n        groupName,\n        serviceName,\n        options\n      },\n      checkStatusOperationSpec,\n      callback) as Promise<Models.ServicesCheckStatusResponse>;\n  }\n\n  /**\n   * The services resource is the top-level resource that represents the Database Migration Service.\n   * This action starts the service and the service can be used for data migration.\n   * @summary Start service\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  start(groupName: string, serviceName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse> {\n    return this.beginStart(groupName,serviceName,options)\n      .then(lroPoller => lroPoller.pollUntilFinished());\n  }\n\n  /**\n   * The services resource is the top-level resource that represents the Database Migration Service.\n   * This action stops the service and the service cannot be used for data migration. The service\n   * owner won't be billed when the service is stopped.\n   * @summary Stop service\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  stop(groupName: string, serviceName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse> {\n    return this.beginStop(groupName,serviceName,options)\n      .then(lroPoller => lroPoller.pollUntilFinished());\n  }\n\n  /**\n   * The services resource is the top-level resource that represents the Database Migration Service.\n   * The skus action returns the list of SKUs that a service resource can be updated to.\n   * @summary Get compatible SKUs\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ServicesListSkusResponse>\n   */\n  listSkus(groupName: string, serviceName: string, options?: msRest.RequestOptionsBase): Promise<Models.ServicesListSkusResponse>;\n  /**\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param callback The callback\n   */\n  listSkus(groupName: string, serviceName: string, callback: msRest.ServiceCallback<Models.ServiceSkuList>): void;\n  /**\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listSkus(groupName: string, serviceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ServiceSkuList>): void;\n  listSkus(groupName: string, serviceName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ServiceSkuList>, callback?: msRest.ServiceCallback<Models.ServiceSkuList>): Promise<Models.ServicesListSkusResponse> {\n    return this.client.sendOperationRequest(\n      {\n        groupName,\n        serviceName,\n        options\n      },\n      listSkusOperationSpec,\n      callback) as Promise<Models.ServicesListSkusResponse>;\n  }\n\n  /**\n   * This method checks whether a proposed nested resource name is valid and available.\n   * @summary Check nested resource name validity and availability\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param parameters Requested name to validate\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ServicesCheckChildrenNameAvailabilityResponse>\n   */\n  checkChildrenNameAvailability(groupName: string, serviceName: string, parameters: Models.NameAvailabilityRequest, options?: msRest.RequestOptionsBase): Promise<Models.ServicesCheckChildrenNameAvailabilityResponse>;\n  /**\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param parameters Requested name to validate\n   * @param callback The callback\n   */\n  checkChildrenNameAvailability(groupName: string, serviceName: string, parameters: Models.NameAvailabilityRequest, callback: msRest.ServiceCallback<Models.NameAvailabilityResponse>): void;\n  /**\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param parameters Requested name to validate\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  checkChildrenNameAvailability(groupName: string, serviceName: string, parameters: Models.NameAvailabilityRequest, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.NameAvailabilityResponse>): void;\n  checkChildrenNameAvailability(groupName: string, serviceName: string, parameters: Models.NameAvailabilityRequest, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.NameAvailabilityResponse>, callback?: msRest.ServiceCallback<Models.NameAvailabilityResponse>): Promise<Models.ServicesCheckChildrenNameAvailabilityResponse> {\n    return this.client.sendOperationRequest(\n      {\n        groupName,\n        serviceName,\n        parameters,\n        options\n      },\n      checkChildrenNameAvailabilityOperationSpec,\n      callback) as Promise<Models.ServicesCheckChildrenNameAvailabilityResponse>;\n  }\n\n  /**\n   * The Services resource is the top-level resource that represents the Database Migration Service.\n   * This method returns a list of service resources in a resource group.\n   * @summary Get services in resource group\n   * @param groupName Name of the resource group\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ServicesListByResourceGroupResponse>\n   */\n  listByResourceGroup(groupName: string, options?: msRest.RequestOptionsBase): Promise<Models.ServicesListByResourceGroupResponse>;\n  /**\n   * @param groupName Name of the resource group\n   * @param callback The callback\n   */\n  listByResourceGroup(groupName: string, callback: msRest.ServiceCallback<Models.DataMigrationServiceList>): void;\n  /**\n   * @param groupName Name of the resource group\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listByResourceGroup(groupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DataMigrationServiceList>): void;\n  listByResourceGroup(groupName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DataMigrationServiceList>, callback?: msRest.ServiceCallback<Models.DataMigrationServiceList>): Promise<Models.ServicesListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      {\n        groupName,\n        options\n      },\n      listByResourceGroupOperationSpec,\n      callback) as Promise<Models.ServicesListByResourceGroupResponse>;\n  }\n\n  /**\n   * The services resource is the top-level resource that represents the Database Migration Service.\n   * This method returns a list of service resources in a subscription.\n   * @summary Get services in subscription\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ServicesListResponse>\n   */\n  list(options?: msRest.RequestOptionsBase): Promise<Models.ServicesListResponse>;\n  /**\n   * @param callback The callback\n   */\n  list(callback: msRest.ServiceCallback<Models.DataMigrationServiceList>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  list(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DataMigrationServiceList>): void;\n  list(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DataMigrationServiceList>, callback?: msRest.ServiceCallback<Models.DataMigrationServiceList>): Promise<Models.ServicesListResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      listOperationSpec,\n      callback) as Promise<Models.ServicesListResponse>;\n  }\n\n  /**\n   * This method checks whether a proposed top-level resource name is valid and available.\n   * @summary Check name validity and availability\n   * @param location The Azure region of the operation\n   * @param parameters Requested name to validate\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ServicesCheckNameAvailabilityResponse>\n   */\n  checkNameAvailability(location: string, parameters: Models.NameAvailabilityRequest, options?: msRest.RequestOptionsBase): Promise<Models.ServicesCheckNameAvailabilityResponse>;\n  /**\n   * @param location The Azure region of the operation\n   * @param parameters Requested name to validate\n   * @param callback The callback\n   */\n  checkNameAvailability(location: string, parameters: Models.NameAvailabilityRequest, callback: msRest.ServiceCallback<Models.NameAvailabilityResponse>): void;\n  /**\n   * @param location The Azure region of the operation\n   * @param parameters Requested name to validate\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  checkNameAvailability(location: string, parameters: Models.NameAvailabilityRequest, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.NameAvailabilityResponse>): void;\n  checkNameAvailability(location: string, parameters: Models.NameAvailabilityRequest, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.NameAvailabilityResponse>, callback?: msRest.ServiceCallback<Models.NameAvailabilityResponse>): Promise<Models.ServicesCheckNameAvailabilityResponse> {\n    return this.client.sendOperationRequest(\n      {\n        location,\n        parameters,\n        options\n      },\n      checkNameAvailabilityOperationSpec,\n      callback) as Promise<Models.ServicesCheckNameAvailabilityResponse>;\n  }\n\n  /**\n   * The services resource is the top-level resource that represents the Database Migration Service.\n   * The PUT method creates a new service or updates an existing one. When a service is updated,\n   * existing child resources (i.e. tasks) are unaffected. Services currently support a single kind,\n   * \"vm\", which refers to a VM-based service, although other kinds may be added in the future. This\n   * method can change the kind, SKU, and network of the service, but if tasks are currently running\n   * (i.e. the service is busy), this will fail with 400 Bad Request (\"ServiceIsBusy\"). The provider\n   * will reply when successful with 200 OK or 201 Created. Long-running operations use the\n   * provisioningState property.\n   * @summary Create or update DMS Instance\n   * @param parameters Information about the service\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginCreateOrUpdate(parameters: Models.DataMigrationService, groupName: string, serviceName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        parameters,\n        groupName,\n        serviceName,\n        options\n      },\n      beginCreateOrUpdateOperationSpec,\n      options);\n  }\n\n  /**\n   * The services resource is the top-level resource that represents the Database Migration Service.\n   * The DELETE method deletes a service. Any running tasks will be canceled.\n   * @summary Delete DMS Service Instance\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginDeleteMethod(groupName: string, serviceName: string, options?: Models.ServicesBeginDeleteMethodOptionalParams): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        groupName,\n        serviceName,\n        options\n      },\n      beginDeleteMethodOperationSpec,\n      options);\n  }\n\n  /**\n   * The services resource is the top-level resource that represents the Database Migration Service.\n   * The PATCH method updates an existing service. This method can change the kind, SKU, and network\n   * of the service, but if tasks are currently running (i.e. the service is busy), this will fail\n   * with 400 Bad Request (\"ServiceIsBusy\").\n   * @summary Create or update DMS Service Instance\n   * @param parameters Information about the service\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginUpdate(parameters: Models.DataMigrationService, groupName: string, serviceName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        parameters,\n        groupName,\n        serviceName,\n        options\n      },\n      beginUpdateOperationSpec,\n      options);\n  }\n\n  /**\n   * The services resource is the top-level resource that represents the Database Migration Service.\n   * This action starts the service and the service can be used for data migration.\n   * @summary Start service\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginStart(groupName: string, serviceName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        groupName,\n        serviceName,\n        options\n      },\n      beginStartOperationSpec,\n      options);\n  }\n\n  /**\n   * The services resource is the top-level resource that represents the Database Migration Service.\n   * This action stops the service and the service cannot be used for data migration. The service\n   * owner won't be billed when the service is stopped.\n   * @summary Stop service\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginStop(groupName: string, serviceName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        groupName,\n        serviceName,\n        options\n      },\n      beginStopOperationSpec,\n      options);\n  }\n\n  /**\n   * The services resource is the top-level resource that represents the Database Migration Service.\n   * The skus action returns the list of SKUs that a service resource can be updated to.\n   * @summary Get compatible SKUs\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ServicesListSkusNextResponse>\n   */\n  listSkusNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ServicesListSkusNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listSkusNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ServiceSkuList>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listSkusNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ServiceSkuList>): void;\n  listSkusNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ServiceSkuList>, callback?: msRest.ServiceCallback<Models.ServiceSkuList>): Promise<Models.ServicesListSkusNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listSkusNextOperationSpec,\n      callback) as Promise<Models.ServicesListSkusNextResponse>;\n  }\n\n  /**\n   * The Services resource is the top-level resource that represents the Database Migration Service.\n   * This method returns a list of service resources in a resource group.\n   * @summary Get services in resource group\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ServicesListByResourceGroupNextResponse>\n   */\n  listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ServicesListByResourceGroupNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listByResourceGroupNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.DataMigrationServiceList>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listByResourceGroupNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DataMigrationServiceList>): void;\n  listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DataMigrationServiceList>, callback?: msRest.ServiceCallback<Models.DataMigrationServiceList>): Promise<Models.ServicesListByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listByResourceGroupNextOperationSpec,\n      callback) as Promise<Models.ServicesListByResourceGroupNextResponse>;\n  }\n\n  /**\n   * The services resource is the top-level resource that represents the Database Migration Service.\n   * This method returns a list of service resources in a subscription.\n   * @summary Get services in subscription\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ServicesListNextResponse>\n   */\n  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ServicesListNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.DataMigrationServiceList>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DataMigrationServiceList>): void;\n  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DataMigrationServiceList>, callback?: msRest.ServiceCallback<Models.DataMigrationServiceList>): Promise<Models.ServicesListNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listNextOperationSpec,\n      callback) as Promise<Models.ServicesListNextResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst getOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.groupName,\n    Parameters.serviceName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataMigrationService\n    },\n    default: {\n      bodyMapper: Mappers.ApiError\n    }\n  },\n  serializer\n};\n\nconst checkStatusOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/checkStatus\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.groupName,\n    Parameters.serviceName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataMigrationServiceStatusResponse\n    },\n    default: {\n      bodyMapper: Mappers.ApiError\n    }\n  },\n  serializer\n};\n\nconst listSkusOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/skus\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.groupName,\n    Parameters.serviceName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServiceSkuList\n    },\n    default: {\n      bodyMapper: Mappers.ApiError\n    }\n  },\n  serializer\n};\n\nconst checkChildrenNameAvailabilityOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/checkNameAvailability\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.groupName,\n    Parameters.serviceName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.NameAvailabilityRequest,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.NameAvailabilityResponse\n    },\n    default: {\n      bodyMapper: Mappers.ApiError\n    }\n  },\n  serializer\n};\n\nconst listByResourceGroupOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.groupName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataMigrationServiceList\n    },\n    default: {\n      bodyMapper: Mappers.ApiError\n    }\n  },\n  serializer\n};\n\nconst listOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/providers/Microsoft.DataMigration/services\",\n  urlParameters: [\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataMigrationServiceList\n    },\n    default: {\n      bodyMapper: Mappers.ApiError\n    }\n  },\n  serializer\n};\n\nconst checkNameAvailabilityOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/providers/Microsoft.DataMigration/locations/{location}/checkNameAvailability\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.location\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.NameAvailabilityRequest,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.NameAvailabilityResponse\n    },\n    default: {\n      bodyMapper: Mappers.ApiError\n    }\n  },\n  serializer\n};\n\nconst beginCreateOrUpdateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.groupName,\n    Parameters.serviceName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.DataMigrationService,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataMigrationService\n    },\n    201: {\n      bodyMapper: Mappers.DataMigrationService\n    },\n    202: {},\n    default: {\n      bodyMapper: Mappers.ApiError\n    }\n  },\n  serializer\n};\n\nconst beginDeleteMethodOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.groupName,\n    Parameters.serviceName\n  ],\n  queryParameters: [\n    Parameters.deleteRunningTasks,\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ApiError\n    }\n  },\n  serializer\n};\n\nconst beginUpdateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PATCH\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.groupName,\n    Parameters.serviceName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.DataMigrationService,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataMigrationService\n    },\n    202: {},\n    default: {\n      bodyMapper: Mappers.ApiError\n    }\n  },\n  serializer\n};\n\nconst beginStartOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/start\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.groupName,\n    Parameters.serviceName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {},\n    202: {},\n    default: {\n      bodyMapper: Mappers.ApiError\n    }\n  },\n  serializer\n};\n\nconst beginStopOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/stop\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.groupName,\n    Parameters.serviceName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {},\n    202: {},\n    default: {\n      bodyMapper: Mappers.ApiError\n    }\n  },\n  serializer\n};\n\nconst listSkusNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServiceSkuList\n    },\n    default: {\n      bodyMapper: Mappers.ApiError\n    }\n  },\n  serializer\n};\n\nconst listByResourceGroupNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataMigrationServiceList\n    },\n    default: {\n      bodyMapper: Mappers.ApiError\n    }\n  },\n  serializer\n};\n\nconst listNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataMigrationServiceList\n    },\n    default: {\n      bodyMapper: Mappers.ApiError\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  discriminators,\n  ApiError,\n  AzureActiveDirectoryApp,\n  BackupFileInfo,\n  BackupSetInfo,\n  BaseResource,\n  BlobShare,\n  CheckOCIDriverTaskInput,\n  CheckOCIDriverTaskOutput,\n  CheckOCIDriverTaskProperties,\n  CommandProperties,\n  ConnectionInfo,\n  ConnectToMongoDbTaskProperties,\n  ConnectToSourceMySqlTaskInput,\n  ConnectToSourceMySqlTaskProperties,\n  ConnectToSourceNonSqlTaskOutput,\n  ConnectToSourceOracleSyncTaskInput,\n  ConnectToSourceOracleSyncTaskOutput,\n  ConnectToSourceOracleSyncTaskProperties,\n  ConnectToSourcePostgreSqlSyncTaskInput,\n  ConnectToSourcePostgreSqlSyncTaskOutput,\n  ConnectToSourcePostgreSqlSyncTaskProperties,\n  ConnectToSourceSqlServerSyncTaskProperties,\n  ConnectToSourceSqlServerTaskInput,\n  ConnectToSourceSqlServerTaskOutput,\n  ConnectToSourceSqlServerTaskOutputAgentJobLevel,\n  ConnectToSourceSqlServerTaskOutputDatabaseLevel,\n  ConnectToSourceSqlServerTaskOutputLoginLevel,\n  ConnectToSourceSqlServerTaskOutputTaskLevel,\n  ConnectToSourceSqlServerTaskProperties,\n  ConnectToTargetAzureDbForMySqlTaskInput,\n  ConnectToTargetAzureDbForMySqlTaskOutput,\n  ConnectToTargetAzureDbForMySqlTaskProperties,\n  ConnectToTargetAzureDbForPostgreSqlSyncTaskInput,\n  ConnectToTargetAzureDbForPostgreSqlSyncTaskOutput,\n  ConnectToTargetAzureDbForPostgreSqlSyncTaskProperties,\n  ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInput,\n  ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutput,\n  ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputDatabaseSchemaMapItem,\n  ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskProperties,\n  ConnectToTargetSqlDbTaskInput,\n  ConnectToTargetSqlDbTaskOutput,\n  ConnectToTargetSqlDbTaskProperties,\n  ConnectToTargetSqlMISyncTaskInput,\n  ConnectToTargetSqlMISyncTaskOutput,\n  ConnectToTargetSqlMISyncTaskProperties,\n  ConnectToTargetSqlMITaskInput,\n  ConnectToTargetSqlMITaskOutput,\n  ConnectToTargetSqlMITaskProperties,\n  ConnectToTargetSqlSqlDbSyncTaskInput,\n  ConnectToTargetSqlSqlDbSyncTaskProperties,\n  DatabaseBackupInfo,\n  DatabaseFileInfo,\n  DatabaseInfo,\n  DatabaseSummaryResult,\n  DatabaseTable,\n  DataItemMigrationSummaryResult,\n  DataMigrationService,\n  FileShare,\n  GetTdeCertificatesSqlTaskInput,\n  GetTdeCertificatesSqlTaskOutput,\n  GetTdeCertificatesSqlTaskProperties,\n  GetUserTablesOracleTaskInput,\n  GetUserTablesOracleTaskOutput,\n  GetUserTablesOracleTaskProperties,\n  GetUserTablesPostgreSqlTaskInput,\n  GetUserTablesPostgreSqlTaskOutput,\n  GetUserTablesPostgreSqlTaskProperties,\n  GetUserTablesSqlSyncTaskInput,\n  GetUserTablesSqlSyncTaskOutput,\n  GetUserTablesSqlSyncTaskProperties,\n  GetUserTablesSqlTaskInput,\n  GetUserTablesSqlTaskOutput,\n  GetUserTablesSqlTaskProperties,\n  InstallOCIDriverTaskInput,\n  InstallOCIDriverTaskOutput,\n  InstallOCIDriverTaskProperties,\n  MigrateMISyncCompleteCommandInput,\n  MigrateMISyncCompleteCommandOutput,\n  MigrateMISyncCompleteCommandProperties,\n  MigrateMongoDbTaskProperties,\n  MigrateMySqlAzureDbForMySqlSyncDatabaseInput,\n  MigrateMySqlAzureDbForMySqlSyncTaskInput,\n  MigrateMySqlAzureDbForMySqlSyncTaskOutput,\n  MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseError,\n  MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevel,\n  MigrateMySqlAzureDbForMySqlSyncTaskOutputError,\n  MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevel,\n  MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevel,\n  MigrateMySqlAzureDbForMySqlSyncTaskProperties,\n  MigrateOracleAzureDbForPostgreSqlSyncTaskProperties,\n  MigrateOracleAzureDbPostgreSqlSyncDatabaseInput,\n  MigrateOracleAzureDbPostgreSqlSyncTaskInput,\n  MigrateOracleAzureDbPostgreSqlSyncTaskOutput,\n  MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseError,\n  MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevel,\n  MigrateOracleAzureDbPostgreSqlSyncTaskOutputError,\n  MigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevel,\n  MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevel,\n  MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput,\n  MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput,\n  MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutput,\n  MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseError,\n  MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevel,\n  MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputError,\n  MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevel,\n  MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevel,\n  MigratePostgreSqlAzureDbForPostgreSqlSyncTaskProperties,\n  MigrateSchemaSqlServerSqlDbDatabaseInput,\n  MigrateSchemaSqlServerSqlDbTaskInput,\n  MigrateSchemaSqlServerSqlDbTaskOutput,\n  MigrateSchemaSqlServerSqlDbTaskOutputDatabaseLevel,\n  MigrateSchemaSqlServerSqlDbTaskOutputError,\n  MigrateSchemaSqlServerSqlDbTaskOutputMigrationLevel,\n  MigrateSchemaSqlServerSqlDbTaskProperties,\n  MigrateSchemaSqlTaskOutputError,\n  MigrateSqlServerSqlDbDatabaseInput,\n  MigrateSqlServerSqlDbSyncDatabaseInput,\n  MigrateSqlServerSqlDbSyncTaskInput,\n  MigrateSqlServerSqlDbSyncTaskOutput,\n  MigrateSqlServerSqlDbSyncTaskOutputDatabaseError,\n  MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevel,\n  MigrateSqlServerSqlDbSyncTaskOutputError,\n  MigrateSqlServerSqlDbSyncTaskOutputMigrationLevel,\n  MigrateSqlServerSqlDbSyncTaskOutputTableLevel,\n  MigrateSqlServerSqlDbSyncTaskProperties,\n  MigrateSqlServerSqlDbTaskInput,\n  MigrateSqlServerSqlDbTaskOutput,\n  MigrateSqlServerSqlDbTaskOutputDatabaseLevel,\n  MigrateSqlServerSqlDbTaskOutputError,\n  MigrateSqlServerSqlDbTaskOutputMigrationLevel,\n  MigrateSqlServerSqlDbTaskOutputTableLevel,\n  MigrateSqlServerSqlDbTaskProperties,\n  MigrateSqlServerSqlMIDatabaseInput,\n  MigrateSqlServerSqlMISyncTaskInput,\n  MigrateSqlServerSqlMISyncTaskOutput,\n  MigrateSqlServerSqlMISyncTaskOutputDatabaseLevel,\n  MigrateSqlServerSqlMISyncTaskOutputError,\n  MigrateSqlServerSqlMISyncTaskOutputMigrationLevel,\n  MigrateSqlServerSqlMISyncTaskProperties,\n  MigrateSqlServerSqlMITaskInput,\n  MigrateSqlServerSqlMITaskOutput,\n  MigrateSqlServerSqlMITaskOutputAgentJobLevel,\n  MigrateSqlServerSqlMITaskOutputDatabaseLevel,\n  MigrateSqlServerSqlMITaskOutputError,\n  MigrateSqlServerSqlMITaskOutputLoginLevel,\n  MigrateSqlServerSqlMITaskOutputMigrationLevel,\n  MigrateSqlServerSqlMITaskProperties,\n  MigrateSsisTaskInput,\n  MigrateSsisTaskOutput,\n  MigrateSsisTaskOutputMigrationLevel,\n  MigrateSsisTaskOutputProjectLevel,\n  MigrateSsisTaskProperties,\n  MigrateSyncCompleteCommandInput,\n  MigrateSyncCompleteCommandOutput,\n  MigrateSyncCompleteCommandProperties,\n  MigrationEligibilityInfo,\n  MigrationReportResult,\n  MigrationValidationDatabaseSummaryResult,\n  MigrationValidationOptions,\n  MigrationValidationResult,\n  MiSqlConnectionInfo,\n  MongoDbCancelCommand,\n  MongoDbClusterInfo,\n  MongoDbCollectionInfo,\n  MongoDbCollectionProgress,\n  MongoDbCollectionSettings,\n  MongoDbCommandInput,\n  MongoDbConnectionInfo,\n  MongoDbDatabaseInfo,\n  MongoDbDatabaseProgress,\n  MongoDbDatabaseSettings,\n  MongoDbError,\n  MongoDbFinishCommand,\n  MongoDbFinishCommandInput,\n  MongoDbMigrationProgress,\n  MongoDbMigrationSettings,\n  MongoDbObjectInfo,\n  MongoDbProgress,\n  MongoDbRestartCommand,\n  MongoDbShardKeyField,\n  MongoDbShardKeyInfo,\n  MongoDbShardKeySetting,\n  MongoDbThrottlingSettings,\n  MySqlConnectionInfo,\n  ODataError,\n  OracleConnectionInfo,\n  OracleOCIDriverInfo,\n  OrphanedUserInfo,\n  PostgreSqlConnectionInfo,\n  Project,\n  ProjectFile,\n  ProjectFileProperties,\n  ProjectTask,\n  ProjectTaskProperties,\n  ReportableException,\n  Resource,\n  SchemaMigrationSetting,\n  SelectedCertificateInput,\n  ServerProperties,\n  ServiceSku,\n  SqlConnectionInfo,\n  SqlMigrationTaskInput,\n  SqlServerSqlMISyncTaskInput,\n  SsisMigrationInfo,\n  StartMigrationScenarioServerRoleResult,\n  SyncMigrationDatabaseErrorEvent,\n  TaskList,\n  TrackedResource,\n  UploadOCIDriverTaskInput,\n  UploadOCIDriverTaskOutput,\n  UploadOCIDriverTaskProperties,\n  ValidateMigrationInputSqlServerSqlDbSyncTaskProperties,\n  ValidateMigrationInputSqlServerSqlMISyncTaskInput,\n  ValidateMigrationInputSqlServerSqlMISyncTaskOutput,\n  ValidateMigrationInputSqlServerSqlMISyncTaskProperties,\n  ValidateMigrationInputSqlServerSqlMITaskInput,\n  ValidateMigrationInputSqlServerSqlMITaskOutput,\n  ValidateMigrationInputSqlServerSqlMITaskProperties,\n  ValidateMongoDbTaskProperties,\n  ValidateOracleAzureDbForPostgreSqlSyncTaskProperties,\n  ValidateOracleAzureDbPostgreSqlSyncTaskOutput,\n  ValidateSyncMigrationInputSqlServerTaskInput,\n  ValidateSyncMigrationInputSqlServerTaskOutput\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/tasksMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { DataMigrationServiceClientContext } from \"../dataMigrationServiceClientContext\";\n\n/** Class representing a Tasks. */\nexport class Tasks {\n  private readonly client: DataMigrationServiceClientContext;\n\n  /**\n   * Create a Tasks.\n   * @param {DataMigrationServiceClientContext} client Reference to the service client.\n   */\n  constructor(client: DataMigrationServiceClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * The services resource is the top-level resource that represents the Database Migration Service.\n   * This method returns a list of tasks owned by a service resource. Some tasks may have a status of\n   * Unknown, which indicates that an error occurred while querying the status of that task.\n   * @summary Get tasks in a service\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param [options] The optional parameters\n   * @returns Promise<Models.TasksListResponse>\n   */\n  list(groupName: string, serviceName: string, projectName: string, options?: Models.TasksListOptionalParams): Promise<Models.TasksListResponse>;\n  /**\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param callback The callback\n   */\n  list(groupName: string, serviceName: string, projectName: string, callback: msRest.ServiceCallback<Models.TaskList>): void;\n  /**\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  list(groupName: string, serviceName: string, projectName: string, options: Models.TasksListOptionalParams, callback: msRest.ServiceCallback<Models.TaskList>): void;\n  list(groupName: string, serviceName: string, projectName: string, options?: Models.TasksListOptionalParams | msRest.ServiceCallback<Models.TaskList>, callback?: msRest.ServiceCallback<Models.TaskList>): Promise<Models.TasksListResponse> {\n    return this.client.sendOperationRequest(\n      {\n        groupName,\n        serviceName,\n        projectName,\n        options\n      },\n      listOperationSpec,\n      callback) as Promise<Models.TasksListResponse>;\n  }\n\n  /**\n   * The tasks resource is a nested, proxy-only resource representing work performed by a DMS\n   * instance. The PUT method creates a new task or updates an existing one, although since tasks\n   * have no mutable custom properties, there is little reason to update an existing one.\n   * @summary Create or update task\n   * @param parameters Information about the task\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param taskName Name of the Task\n   * @param [options] The optional parameters\n   * @returns Promise<Models.TasksCreateOrUpdateResponse>\n   */\n  createOrUpdate(parameters: Models.ProjectTask, groupName: string, serviceName: string, projectName: string, taskName: string, options?: msRest.RequestOptionsBase): Promise<Models.TasksCreateOrUpdateResponse>;\n  /**\n   * @param parameters Information about the task\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param taskName Name of the Task\n   * @param callback The callback\n   */\n  createOrUpdate(parameters: Models.ProjectTask, groupName: string, serviceName: string, projectName: string, taskName: string, callback: msRest.ServiceCallback<Models.ProjectTask>): void;\n  /**\n   * @param parameters Information about the task\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param taskName Name of the Task\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  createOrUpdate(parameters: Models.ProjectTask, groupName: string, serviceName: string, projectName: string, taskName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ProjectTask>): void;\n  createOrUpdate(parameters: Models.ProjectTask, groupName: string, serviceName: string, projectName: string, taskName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ProjectTask>, callback?: msRest.ServiceCallback<Models.ProjectTask>): Promise<Models.TasksCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        parameters,\n        groupName,\n        serviceName,\n        projectName,\n        taskName,\n        options\n      },\n      createOrUpdateOperationSpec,\n      callback) as Promise<Models.TasksCreateOrUpdateResponse>;\n  }\n\n  /**\n   * The tasks resource is a nested, proxy-only resource representing work performed by a DMS\n   * instance. The GET method retrieves information about a task.\n   * @summary Get task information\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param taskName Name of the Task\n   * @param [options] The optional parameters\n   * @returns Promise<Models.TasksGetResponse>\n   */\n  get(groupName: string, serviceName: string, projectName: string, taskName: string, options?: Models.TasksGetOptionalParams): Promise<Models.TasksGetResponse>;\n  /**\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param taskName Name of the Task\n   * @param callback The callback\n   */\n  get(groupName: string, serviceName: string, projectName: string, taskName: string, callback: msRest.ServiceCallback<Models.ProjectTask>): void;\n  /**\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param taskName Name of the Task\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  get(groupName: string, serviceName: string, projectName: string, taskName: string, options: Models.TasksGetOptionalParams, callback: msRest.ServiceCallback<Models.ProjectTask>): void;\n  get(groupName: string, serviceName: string, projectName: string, taskName: string, options?: Models.TasksGetOptionalParams | msRest.ServiceCallback<Models.ProjectTask>, callback?: msRest.ServiceCallback<Models.ProjectTask>): Promise<Models.TasksGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        groupName,\n        serviceName,\n        projectName,\n        taskName,\n        options\n      },\n      getOperationSpec,\n      callback) as Promise<Models.TasksGetResponse>;\n  }\n\n  /**\n   * The tasks resource is a nested, proxy-only resource representing work performed by a DMS\n   * instance. The DELETE method deletes a task, canceling it first if it's running.\n   * @summary Delete task\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param taskName Name of the Task\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  deleteMethod(groupName: string, serviceName: string, projectName: string, taskName: string, options?: Models.TasksDeleteMethodOptionalParams): Promise<msRest.RestResponse>;\n  /**\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param taskName Name of the Task\n   * @param callback The callback\n   */\n  deleteMethod(groupName: string, serviceName: string, projectName: string, taskName: string, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param taskName Name of the Task\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  deleteMethod(groupName: string, serviceName: string, projectName: string, taskName: string, options: Models.TasksDeleteMethodOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  deleteMethod(groupName: string, serviceName: string, projectName: string, taskName: string, options?: Models.TasksDeleteMethodOptionalParams | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {\n    return this.client.sendOperationRequest(\n      {\n        groupName,\n        serviceName,\n        projectName,\n        taskName,\n        options\n      },\n      deleteMethodOperationSpec,\n      callback);\n  }\n\n  /**\n   * The tasks resource is a nested, proxy-only resource representing work performed by a DMS\n   * instance. The PATCH method updates an existing task, but since tasks have no mutable custom\n   * properties, there is little reason to do so.\n   * @summary Create or update task\n   * @param parameters Information about the task\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param taskName Name of the Task\n   * @param [options] The optional parameters\n   * @returns Promise<Models.TasksUpdateResponse>\n   */\n  update(parameters: Models.ProjectTask, groupName: string, serviceName: string, projectName: string, taskName: string, options?: msRest.RequestOptionsBase): Promise<Models.TasksUpdateResponse>;\n  /**\n   * @param parameters Information about the task\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param taskName Name of the Task\n   * @param callback The callback\n   */\n  update(parameters: Models.ProjectTask, groupName: string, serviceName: string, projectName: string, taskName: string, callback: msRest.ServiceCallback<Models.ProjectTask>): void;\n  /**\n   * @param parameters Information about the task\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param taskName Name of the Task\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  update(parameters: Models.ProjectTask, groupName: string, serviceName: string, projectName: string, taskName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ProjectTask>): void;\n  update(parameters: Models.ProjectTask, groupName: string, serviceName: string, projectName: string, taskName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ProjectTask>, callback?: msRest.ServiceCallback<Models.ProjectTask>): Promise<Models.TasksUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        parameters,\n        groupName,\n        serviceName,\n        projectName,\n        taskName,\n        options\n      },\n      updateOperationSpec,\n      callback) as Promise<Models.TasksUpdateResponse>;\n  }\n\n  /**\n   * The tasks resource is a nested, proxy-only resource representing work performed by a DMS\n   * instance. This method cancels a task if it's currently queued or running.\n   * @summary Cancel a task\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param taskName Name of the Task\n   * @param [options] The optional parameters\n   * @returns Promise<Models.TasksCancelResponse>\n   */\n  cancel(groupName: string, serviceName: string, projectName: string, taskName: string, options?: msRest.RequestOptionsBase): Promise<Models.TasksCancelResponse>;\n  /**\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param taskName Name of the Task\n   * @param callback The callback\n   */\n  cancel(groupName: string, serviceName: string, projectName: string, taskName: string, callback: msRest.ServiceCallback<Models.ProjectTask>): void;\n  /**\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param taskName Name of the Task\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  cancel(groupName: string, serviceName: string, projectName: string, taskName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ProjectTask>): void;\n  cancel(groupName: string, serviceName: string, projectName: string, taskName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ProjectTask>, callback?: msRest.ServiceCallback<Models.ProjectTask>): Promise<Models.TasksCancelResponse> {\n    return this.client.sendOperationRequest(\n      {\n        groupName,\n        serviceName,\n        projectName,\n        taskName,\n        options\n      },\n      cancelOperationSpec,\n      callback) as Promise<Models.TasksCancelResponse>;\n  }\n\n  /**\n   * The tasks resource is a nested, proxy-only resource representing work performed by a DMS\n   * instance. This method executes a command on a running task.\n   * @summary Execute a command on a task\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param taskName Name of the Task\n   * @param parameters Command to execute\n   * @param [options] The optional parameters\n   * @returns Promise<Models.TasksCommandResponse>\n   */\n  command(groupName: string, serviceName: string, projectName: string, taskName: string, parameters: Models.CommandPropertiesUnion, options?: msRest.RequestOptionsBase): Promise<Models.TasksCommandResponse>;\n  /**\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param taskName Name of the Task\n   * @param parameters Command to execute\n   * @param callback The callback\n   */\n  command(groupName: string, serviceName: string, projectName: string, taskName: string, parameters: Models.CommandPropertiesUnion, callback: msRest.ServiceCallback<Models.CommandPropertiesUnion>): void;\n  /**\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param taskName Name of the Task\n   * @param parameters Command to execute\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  command(groupName: string, serviceName: string, projectName: string, taskName: string, parameters: Models.CommandPropertiesUnion, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CommandPropertiesUnion>): void;\n  command(groupName: string, serviceName: string, projectName: string, taskName: string, parameters: Models.CommandPropertiesUnion, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.CommandPropertiesUnion>, callback?: msRest.ServiceCallback<Models.CommandPropertiesUnion>): Promise<Models.TasksCommandResponse> {\n    return this.client.sendOperationRequest(\n      {\n        groupName,\n        serviceName,\n        projectName,\n        taskName,\n        parameters,\n        options\n      },\n      commandOperationSpec,\n      callback) as Promise<Models.TasksCommandResponse>;\n  }\n\n  /**\n   * The services resource is the top-level resource that represents the Database Migration Service.\n   * This method returns a list of tasks owned by a service resource. Some tasks may have a status of\n   * Unknown, which indicates that an error occurred while querying the status of that task.\n   * @summary Get tasks in a service\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.TasksListNextResponse>\n   */\n  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.TasksListNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.TaskList>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.TaskList>): void;\n  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.TaskList>, callback?: msRest.ServiceCallback<Models.TaskList>): Promise<Models.TasksListNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listNextOperationSpec,\n      callback) as Promise<Models.TasksListNextResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst listOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects/{projectName}/tasks\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.groupName,\n    Parameters.serviceName,\n    Parameters.projectName\n  ],\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.taskType\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.TaskList\n    },\n    default: {\n      bodyMapper: Mappers.ApiError\n    }\n  },\n  serializer\n};\n\nconst createOrUpdateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects/{projectName}/tasks/{taskName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.groupName,\n    Parameters.serviceName,\n    Parameters.projectName,\n    Parameters.taskName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.ProjectTask,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProjectTask\n    },\n    201: {\n      bodyMapper: Mappers.ProjectTask\n    },\n    default: {\n      bodyMapper: Mappers.ApiError\n    }\n  },\n  serializer\n};\n\nconst getOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects/{projectName}/tasks/{taskName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.groupName,\n    Parameters.serviceName,\n    Parameters.projectName,\n    Parameters.taskName\n  ],\n  queryParameters: [\n    Parameters.expand,\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProjectTask\n    },\n    default: {\n      bodyMapper: Mappers.ApiError\n    }\n  },\n  serializer\n};\n\nconst deleteMethodOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects/{projectName}/tasks/{taskName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.groupName,\n    Parameters.serviceName,\n    Parameters.projectName,\n    Parameters.taskName\n  ],\n  queryParameters: [\n    Parameters.deleteRunningTasks,\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ApiError\n    }\n  },\n  serializer\n};\n\nconst updateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PATCH\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects/{projectName}/tasks/{taskName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.groupName,\n    Parameters.serviceName,\n    Parameters.projectName,\n    Parameters.taskName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.ProjectTask,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProjectTask\n    },\n    default: {\n      bodyMapper: Mappers.ApiError\n    }\n  },\n  serializer\n};\n\nconst cancelOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects/{projectName}/tasks/{taskName}/cancel\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.groupName,\n    Parameters.serviceName,\n    Parameters.projectName,\n    Parameters.taskName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProjectTask\n    },\n    default: {\n      bodyMapper: Mappers.ApiError\n    }\n  },\n  serializer\n};\n\nconst commandOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects/{projectName}/tasks/{taskName}/command\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.groupName,\n    Parameters.serviceName,\n    Parameters.projectName,\n    Parameters.taskName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.CommandProperties,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.CommandProperties\n    },\n    default: {\n      bodyMapper: Mappers.ApiError\n    }\n  },\n  serializer\n};\n\nconst listNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.TaskList\n    },\n    default: {\n      bodyMapper: Mappers.ApiError\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  discriminators,\n  ApiError,\n  AzureActiveDirectoryApp,\n  BackupFileInfo,\n  BackupSetInfo,\n  BaseResource,\n  BlobShare,\n  CheckOCIDriverTaskInput,\n  CheckOCIDriverTaskOutput,\n  CheckOCIDriverTaskProperties,\n  CommandProperties,\n  ConnectionInfo,\n  ConnectToMongoDbTaskProperties,\n  ConnectToSourceMySqlTaskInput,\n  ConnectToSourceMySqlTaskProperties,\n  ConnectToSourceNonSqlTaskOutput,\n  ConnectToSourceOracleSyncTaskInput,\n  ConnectToSourceOracleSyncTaskOutput,\n  ConnectToSourceOracleSyncTaskProperties,\n  ConnectToSourcePostgreSqlSyncTaskInput,\n  ConnectToSourcePostgreSqlSyncTaskOutput,\n  ConnectToSourcePostgreSqlSyncTaskProperties,\n  ConnectToSourceSqlServerSyncTaskProperties,\n  ConnectToSourceSqlServerTaskInput,\n  ConnectToSourceSqlServerTaskOutput,\n  ConnectToSourceSqlServerTaskOutputAgentJobLevel,\n  ConnectToSourceSqlServerTaskOutputDatabaseLevel,\n  ConnectToSourceSqlServerTaskOutputLoginLevel,\n  ConnectToSourceSqlServerTaskOutputTaskLevel,\n  ConnectToSourceSqlServerTaskProperties,\n  ConnectToTargetAzureDbForMySqlTaskInput,\n  ConnectToTargetAzureDbForMySqlTaskOutput,\n  ConnectToTargetAzureDbForMySqlTaskProperties,\n  ConnectToTargetAzureDbForPostgreSqlSyncTaskInput,\n  ConnectToTargetAzureDbForPostgreSqlSyncTaskOutput,\n  ConnectToTargetAzureDbForPostgreSqlSyncTaskProperties,\n  ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInput,\n  ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutput,\n  ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputDatabaseSchemaMapItem,\n  ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskProperties,\n  ConnectToTargetSqlDbTaskInput,\n  ConnectToTargetSqlDbTaskOutput,\n  ConnectToTargetSqlDbTaskProperties,\n  ConnectToTargetSqlMISyncTaskInput,\n  ConnectToTargetSqlMISyncTaskOutput,\n  ConnectToTargetSqlMISyncTaskProperties,\n  ConnectToTargetSqlMITaskInput,\n  ConnectToTargetSqlMITaskOutput,\n  ConnectToTargetSqlMITaskProperties,\n  ConnectToTargetSqlSqlDbSyncTaskInput,\n  ConnectToTargetSqlSqlDbSyncTaskProperties,\n  DatabaseBackupInfo,\n  DatabaseFileInfo,\n  DatabaseInfo,\n  DatabaseSummaryResult,\n  DatabaseTable,\n  DataItemMigrationSummaryResult,\n  DataMigrationService,\n  FileShare,\n  GetTdeCertificatesSqlTaskInput,\n  GetTdeCertificatesSqlTaskOutput,\n  GetTdeCertificatesSqlTaskProperties,\n  GetUserTablesOracleTaskInput,\n  GetUserTablesOracleTaskOutput,\n  GetUserTablesOracleTaskProperties,\n  GetUserTablesPostgreSqlTaskInput,\n  GetUserTablesPostgreSqlTaskOutput,\n  GetUserTablesPostgreSqlTaskProperties,\n  GetUserTablesSqlSyncTaskInput,\n  GetUserTablesSqlSyncTaskOutput,\n  GetUserTablesSqlSyncTaskProperties,\n  GetUserTablesSqlTaskInput,\n  GetUserTablesSqlTaskOutput,\n  GetUserTablesSqlTaskProperties,\n  InstallOCIDriverTaskInput,\n  InstallOCIDriverTaskOutput,\n  InstallOCIDriverTaskProperties,\n  MigrateMISyncCompleteCommandInput,\n  MigrateMISyncCompleteCommandOutput,\n  MigrateMISyncCompleteCommandProperties,\n  MigrateMongoDbTaskProperties,\n  MigrateMySqlAzureDbForMySqlSyncDatabaseInput,\n  MigrateMySqlAzureDbForMySqlSyncTaskInput,\n  MigrateMySqlAzureDbForMySqlSyncTaskOutput,\n  MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseError,\n  MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevel,\n  MigrateMySqlAzureDbForMySqlSyncTaskOutputError,\n  MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevel,\n  MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevel,\n  MigrateMySqlAzureDbForMySqlSyncTaskProperties,\n  MigrateOracleAzureDbForPostgreSqlSyncTaskProperties,\n  MigrateOracleAzureDbPostgreSqlSyncDatabaseInput,\n  MigrateOracleAzureDbPostgreSqlSyncTaskInput,\n  MigrateOracleAzureDbPostgreSqlSyncTaskOutput,\n  MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseError,\n  MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevel,\n  MigrateOracleAzureDbPostgreSqlSyncTaskOutputError,\n  MigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevel,\n  MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevel,\n  MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput,\n  MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput,\n  MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutput,\n  MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseError,\n  MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevel,\n  MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputError,\n  MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevel,\n  MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevel,\n  MigratePostgreSqlAzureDbForPostgreSqlSyncTaskProperties,\n  MigrateSchemaSqlServerSqlDbDatabaseInput,\n  MigrateSchemaSqlServerSqlDbTaskInput,\n  MigrateSchemaSqlServerSqlDbTaskOutput,\n  MigrateSchemaSqlServerSqlDbTaskOutputDatabaseLevel,\n  MigrateSchemaSqlServerSqlDbTaskOutputError,\n  MigrateSchemaSqlServerSqlDbTaskOutputMigrationLevel,\n  MigrateSchemaSqlServerSqlDbTaskProperties,\n  MigrateSchemaSqlTaskOutputError,\n  MigrateSqlServerSqlDbDatabaseInput,\n  MigrateSqlServerSqlDbSyncDatabaseInput,\n  MigrateSqlServerSqlDbSyncTaskInput,\n  MigrateSqlServerSqlDbSyncTaskOutput,\n  MigrateSqlServerSqlDbSyncTaskOutputDatabaseError,\n  MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevel,\n  MigrateSqlServerSqlDbSyncTaskOutputError,\n  MigrateSqlServerSqlDbSyncTaskOutputMigrationLevel,\n  MigrateSqlServerSqlDbSyncTaskOutputTableLevel,\n  MigrateSqlServerSqlDbSyncTaskProperties,\n  MigrateSqlServerSqlDbTaskInput,\n  MigrateSqlServerSqlDbTaskOutput,\n  MigrateSqlServerSqlDbTaskOutputDatabaseLevel,\n  MigrateSqlServerSqlDbTaskOutputError,\n  MigrateSqlServerSqlDbTaskOutputMigrationLevel,\n  MigrateSqlServerSqlDbTaskOutputTableLevel,\n  MigrateSqlServerSqlDbTaskProperties,\n  MigrateSqlServerSqlMIDatabaseInput,\n  MigrateSqlServerSqlMISyncTaskInput,\n  MigrateSqlServerSqlMISyncTaskOutput,\n  MigrateSqlServerSqlMISyncTaskOutputDatabaseLevel,\n  MigrateSqlServerSqlMISyncTaskOutputError,\n  MigrateSqlServerSqlMISyncTaskOutputMigrationLevel,\n  MigrateSqlServerSqlMISyncTaskProperties,\n  MigrateSqlServerSqlMITaskInput,\n  MigrateSqlServerSqlMITaskOutput,\n  MigrateSqlServerSqlMITaskOutputAgentJobLevel,\n  MigrateSqlServerSqlMITaskOutputDatabaseLevel,\n  MigrateSqlServerSqlMITaskOutputError,\n  MigrateSqlServerSqlMITaskOutputLoginLevel,\n  MigrateSqlServerSqlMITaskOutputMigrationLevel,\n  MigrateSqlServerSqlMITaskProperties,\n  MigrateSsisTaskInput,\n  MigrateSsisTaskOutput,\n  MigrateSsisTaskOutputMigrationLevel,\n  MigrateSsisTaskOutputProjectLevel,\n  MigrateSsisTaskProperties,\n  MigrateSyncCompleteCommandInput,\n  MigrateSyncCompleteCommandOutput,\n  MigrateSyncCompleteCommandProperties,\n  MigrationEligibilityInfo,\n  MigrationReportResult,\n  MigrationValidationDatabaseSummaryResult,\n  MigrationValidationOptions,\n  MigrationValidationResult,\n  MiSqlConnectionInfo,\n  MongoDbCancelCommand,\n  MongoDbClusterInfo,\n  MongoDbCollectionInfo,\n  MongoDbCollectionProgress,\n  MongoDbCollectionSettings,\n  MongoDbCommandInput,\n  MongoDbConnectionInfo,\n  MongoDbDatabaseInfo,\n  MongoDbDatabaseProgress,\n  MongoDbDatabaseSettings,\n  MongoDbError,\n  MongoDbFinishCommand,\n  MongoDbFinishCommandInput,\n  MongoDbMigrationProgress,\n  MongoDbMigrationSettings,\n  MongoDbObjectInfo,\n  MongoDbProgress,\n  MongoDbRestartCommand,\n  MongoDbShardKeyField,\n  MongoDbShardKeyInfo,\n  MongoDbShardKeySetting,\n  MongoDbThrottlingSettings,\n  MySqlConnectionInfo,\n  ODataError,\n  OracleConnectionInfo,\n  OracleOCIDriverInfo,\n  OrphanedUserInfo,\n  PostgreSqlConnectionInfo,\n  Project,\n  ProjectFile,\n  ProjectFileProperties,\n  ProjectTask,\n  ProjectTaskProperties,\n  ReportableException,\n  Resource,\n  SchemaMigrationSetting,\n  SelectedCertificateInput,\n  ServerProperties,\n  ServiceSku,\n  SqlConnectionInfo,\n  SqlMigrationTaskInput,\n  SqlServerSqlMISyncTaskInput,\n  SsisMigrationInfo,\n  StartMigrationScenarioServerRoleResult,\n  SyncMigrationDatabaseErrorEvent,\n  TaskList,\n  TrackedResource,\n  UploadOCIDriverTaskInput,\n  UploadOCIDriverTaskOutput,\n  UploadOCIDriverTaskProperties,\n  ValidateMigrationInputSqlServerSqlDbSyncTaskProperties,\n  ValidateMigrationInputSqlServerSqlMISyncTaskInput,\n  ValidateMigrationInputSqlServerSqlMISyncTaskOutput,\n  ValidateMigrationInputSqlServerSqlMISyncTaskProperties,\n  ValidateMigrationInputSqlServerSqlMITaskInput,\n  ValidateMigrationInputSqlServerSqlMITaskOutput,\n  ValidateMigrationInputSqlServerSqlMITaskProperties,\n  ValidateMongoDbTaskProperties,\n  ValidateOracleAzureDbForPostgreSqlSyncTaskProperties,\n  ValidateOracleAzureDbPostgreSqlSyncTaskOutput,\n  ValidateSyncMigrationInputSqlServerTaskInput,\n  ValidateSyncMigrationInputSqlServerTaskOutput\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/serviceTasksMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { DataMigrationServiceClientContext } from \"../dataMigrationServiceClientContext\";\n\n/** Class representing a ServiceTasks. */\nexport class ServiceTasks {\n  private readonly client: DataMigrationServiceClientContext;\n\n  /**\n   * Create a ServiceTasks.\n   * @param {DataMigrationServiceClientContext} client Reference to the service client.\n   */\n  constructor(client: DataMigrationServiceClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * The services resource is the top-level resource that represents the Database Migration Service.\n   * This method returns a list of service level tasks owned by a service resource. Some tasks may\n   * have a status of Unknown, which indicates that an error occurred while querying the status of\n   * that task.\n   * @summary Get service level tasks for a service\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ServiceTasksListResponse>\n   */\n  list(groupName: string, serviceName: string, options?: Models.ServiceTasksListOptionalParams): Promise<Models.ServiceTasksListResponse>;\n  /**\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param callback The callback\n   */\n  list(groupName: string, serviceName: string, callback: msRest.ServiceCallback<Models.TaskList>): void;\n  /**\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  list(groupName: string, serviceName: string, options: Models.ServiceTasksListOptionalParams, callback: msRest.ServiceCallback<Models.TaskList>): void;\n  list(groupName: string, serviceName: string, options?: Models.ServiceTasksListOptionalParams | msRest.ServiceCallback<Models.TaskList>, callback?: msRest.ServiceCallback<Models.TaskList>): Promise<Models.ServiceTasksListResponse> {\n    return this.client.sendOperationRequest(\n      {\n        groupName,\n        serviceName,\n        options\n      },\n      listOperationSpec,\n      callback) as Promise<Models.ServiceTasksListResponse>;\n  }\n\n  /**\n   * The service tasks resource is a nested, proxy-only resource representing work performed by a DMS\n   * instance. The PUT method creates a new service task or updates an existing one, although since\n   * service tasks have no mutable custom properties, there is little reason to update an existing\n   * one.\n   * @summary Create or update service task\n   * @param parameters Information about the task\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param taskName Name of the Task\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ServiceTasksCreateOrUpdateResponse>\n   */\n  createOrUpdate(parameters: Models.ProjectTask, groupName: string, serviceName: string, taskName: string, options?: msRest.RequestOptionsBase): Promise<Models.ServiceTasksCreateOrUpdateResponse>;\n  /**\n   * @param parameters Information about the task\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param taskName Name of the Task\n   * @param callback The callback\n   */\n  createOrUpdate(parameters: Models.ProjectTask, groupName: string, serviceName: string, taskName: string, callback: msRest.ServiceCallback<Models.ProjectTask>): void;\n  /**\n   * @param parameters Information about the task\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param taskName Name of the Task\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  createOrUpdate(parameters: Models.ProjectTask, groupName: string, serviceName: string, taskName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ProjectTask>): void;\n  createOrUpdate(parameters: Models.ProjectTask, groupName: string, serviceName: string, taskName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ProjectTask>, callback?: msRest.ServiceCallback<Models.ProjectTask>): Promise<Models.ServiceTasksCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        parameters,\n        groupName,\n        serviceName,\n        taskName,\n        options\n      },\n      createOrUpdateOperationSpec,\n      callback) as Promise<Models.ServiceTasksCreateOrUpdateResponse>;\n  }\n\n  /**\n   * The service tasks resource is a nested, proxy-only resource representing work performed by a DMS\n   * instance. The GET method retrieves information about a service task.\n   * @summary Get service task information\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param taskName Name of the Task\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ServiceTasksGetResponse>\n   */\n  get(groupName: string, serviceName: string, taskName: string, options?: Models.ServiceTasksGetOptionalParams): Promise<Models.ServiceTasksGetResponse>;\n  /**\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param taskName Name of the Task\n   * @param callback The callback\n   */\n  get(groupName: string, serviceName: string, taskName: string, callback: msRest.ServiceCallback<Models.ProjectTask>): void;\n  /**\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param taskName Name of the Task\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  get(groupName: string, serviceName: string, taskName: string, options: Models.ServiceTasksGetOptionalParams, callback: msRest.ServiceCallback<Models.ProjectTask>): void;\n  get(groupName: string, serviceName: string, taskName: string, options?: Models.ServiceTasksGetOptionalParams | msRest.ServiceCallback<Models.ProjectTask>, callback?: msRest.ServiceCallback<Models.ProjectTask>): Promise<Models.ServiceTasksGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        groupName,\n        serviceName,\n        taskName,\n        options\n      },\n      getOperationSpec,\n      callback) as Promise<Models.ServiceTasksGetResponse>;\n  }\n\n  /**\n   * The service tasks resource is a nested, proxy-only resource representing work performed by a DMS\n   * instance. The DELETE method deletes a service task, canceling it first if it's running.\n   * @summary Delete service task\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param taskName Name of the Task\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  deleteMethod(groupName: string, serviceName: string, taskName: string, options?: Models.ServiceTasksDeleteMethodOptionalParams): Promise<msRest.RestResponse>;\n  /**\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param taskName Name of the Task\n   * @param callback The callback\n   */\n  deleteMethod(groupName: string, serviceName: string, taskName: string, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param taskName Name of the Task\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  deleteMethod(groupName: string, serviceName: string, taskName: string, options: Models.ServiceTasksDeleteMethodOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  deleteMethod(groupName: string, serviceName: string, taskName: string, options?: Models.ServiceTasksDeleteMethodOptionalParams | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {\n    return this.client.sendOperationRequest(\n      {\n        groupName,\n        serviceName,\n        taskName,\n        options\n      },\n      deleteMethodOperationSpec,\n      callback);\n  }\n\n  /**\n   * The service tasks resource is a nested, proxy-only resource representing work performed by a DMS\n   * instance. The PATCH method updates an existing service task, but since service tasks have no\n   * mutable custom properties, there is little reason to do so.\n   * @summary Create or update service task\n   * @param parameters Information about the task\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param taskName Name of the Task\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ServiceTasksUpdateResponse>\n   */\n  update(parameters: Models.ProjectTask, groupName: string, serviceName: string, taskName: string, options?: msRest.RequestOptionsBase): Promise<Models.ServiceTasksUpdateResponse>;\n  /**\n   * @param parameters Information about the task\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param taskName Name of the Task\n   * @param callback The callback\n   */\n  update(parameters: Models.ProjectTask, groupName: string, serviceName: string, taskName: string, callback: msRest.ServiceCallback<Models.ProjectTask>): void;\n  /**\n   * @param parameters Information about the task\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param taskName Name of the Task\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  update(parameters: Models.ProjectTask, groupName: string, serviceName: string, taskName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ProjectTask>): void;\n  update(parameters: Models.ProjectTask, groupName: string, serviceName: string, taskName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ProjectTask>, callback?: msRest.ServiceCallback<Models.ProjectTask>): Promise<Models.ServiceTasksUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        parameters,\n        groupName,\n        serviceName,\n        taskName,\n        options\n      },\n      updateOperationSpec,\n      callback) as Promise<Models.ServiceTasksUpdateResponse>;\n  }\n\n  /**\n   * The service tasks resource is a nested, proxy-only resource representing work performed by a DMS\n   * instance. This method cancels a service task if it's currently queued or running.\n   * @summary Cancel a service task\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param taskName Name of the Task\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ServiceTasksCancelResponse>\n   */\n  cancel(groupName: string, serviceName: string, taskName: string, options?: msRest.RequestOptionsBase): Promise<Models.ServiceTasksCancelResponse>;\n  /**\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param taskName Name of the Task\n   * @param callback The callback\n   */\n  cancel(groupName: string, serviceName: string, taskName: string, callback: msRest.ServiceCallback<Models.ProjectTask>): void;\n  /**\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param taskName Name of the Task\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  cancel(groupName: string, serviceName: string, taskName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ProjectTask>): void;\n  cancel(groupName: string, serviceName: string, taskName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ProjectTask>, callback?: msRest.ServiceCallback<Models.ProjectTask>): Promise<Models.ServiceTasksCancelResponse> {\n    return this.client.sendOperationRequest(\n      {\n        groupName,\n        serviceName,\n        taskName,\n        options\n      },\n      cancelOperationSpec,\n      callback) as Promise<Models.ServiceTasksCancelResponse>;\n  }\n\n  /**\n   * The services resource is the top-level resource that represents the Database Migration Service.\n   * This method returns a list of service level tasks owned by a service resource. Some tasks may\n   * have a status of Unknown, which indicates that an error occurred while querying the status of\n   * that task.\n   * @summary Get service level tasks for a service\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ServiceTasksListNextResponse>\n   */\n  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ServiceTasksListNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.TaskList>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.TaskList>): void;\n  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.TaskList>, callback?: msRest.ServiceCallback<Models.TaskList>): Promise<Models.ServiceTasksListNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listNextOperationSpec,\n      callback) as Promise<Models.ServiceTasksListNextResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst listOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/serviceTasks\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.groupName,\n    Parameters.serviceName\n  ],\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.taskType\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.TaskList\n    },\n    default: {\n      bodyMapper: Mappers.ApiError\n    }\n  },\n  serializer\n};\n\nconst createOrUpdateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/serviceTasks/{taskName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.groupName,\n    Parameters.serviceName,\n    Parameters.taskName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.ProjectTask,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProjectTask\n    },\n    201: {\n      bodyMapper: Mappers.ProjectTask\n    },\n    default: {\n      bodyMapper: Mappers.ApiError\n    }\n  },\n  serializer\n};\n\nconst getOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/serviceTasks/{taskName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.groupName,\n    Parameters.serviceName,\n    Parameters.taskName\n  ],\n  queryParameters: [\n    Parameters.expand,\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProjectTask\n    },\n    default: {\n      bodyMapper: Mappers.ApiError\n    }\n  },\n  serializer\n};\n\nconst deleteMethodOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/serviceTasks/{taskName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.groupName,\n    Parameters.serviceName,\n    Parameters.taskName\n  ],\n  queryParameters: [\n    Parameters.deleteRunningTasks,\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ApiError\n    }\n  },\n  serializer\n};\n\nconst updateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PATCH\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/serviceTasks/{taskName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.groupName,\n    Parameters.serviceName,\n    Parameters.taskName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.ProjectTask,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProjectTask\n    },\n    default: {\n      bodyMapper: Mappers.ApiError\n    }\n  },\n  serializer\n};\n\nconst cancelOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/serviceTasks/{taskName}/cancel\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.groupName,\n    Parameters.serviceName,\n    Parameters.taskName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProjectTask\n    },\n    default: {\n      bodyMapper: Mappers.ApiError\n    }\n  },\n  serializer\n};\n\nconst listNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.TaskList\n    },\n    default: {\n      bodyMapper: Mappers.ApiError\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  discriminators,\n  ApiError,\n  AzureActiveDirectoryApp,\n  BackupFileInfo,\n  BackupSetInfo,\n  BaseResource,\n  BlobShare,\n  CheckOCIDriverTaskInput,\n  CheckOCIDriverTaskOutput,\n  CheckOCIDriverTaskProperties,\n  CommandProperties,\n  ConnectionInfo,\n  ConnectToMongoDbTaskProperties,\n  ConnectToSourceMySqlTaskInput,\n  ConnectToSourceMySqlTaskProperties,\n  ConnectToSourceNonSqlTaskOutput,\n  ConnectToSourceOracleSyncTaskInput,\n  ConnectToSourceOracleSyncTaskOutput,\n  ConnectToSourceOracleSyncTaskProperties,\n  ConnectToSourcePostgreSqlSyncTaskInput,\n  ConnectToSourcePostgreSqlSyncTaskOutput,\n  ConnectToSourcePostgreSqlSyncTaskProperties,\n  ConnectToSourceSqlServerSyncTaskProperties,\n  ConnectToSourceSqlServerTaskInput,\n  ConnectToSourceSqlServerTaskOutput,\n  ConnectToSourceSqlServerTaskOutputAgentJobLevel,\n  ConnectToSourceSqlServerTaskOutputDatabaseLevel,\n  ConnectToSourceSqlServerTaskOutputLoginLevel,\n  ConnectToSourceSqlServerTaskOutputTaskLevel,\n  ConnectToSourceSqlServerTaskProperties,\n  ConnectToTargetAzureDbForMySqlTaskInput,\n  ConnectToTargetAzureDbForMySqlTaskOutput,\n  ConnectToTargetAzureDbForMySqlTaskProperties,\n  ConnectToTargetAzureDbForPostgreSqlSyncTaskInput,\n  ConnectToTargetAzureDbForPostgreSqlSyncTaskOutput,\n  ConnectToTargetAzureDbForPostgreSqlSyncTaskProperties,\n  ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInput,\n  ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutput,\n  ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputDatabaseSchemaMapItem,\n  ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskProperties,\n  ConnectToTargetSqlDbTaskInput,\n  ConnectToTargetSqlDbTaskOutput,\n  ConnectToTargetSqlDbTaskProperties,\n  ConnectToTargetSqlMISyncTaskInput,\n  ConnectToTargetSqlMISyncTaskOutput,\n  ConnectToTargetSqlMISyncTaskProperties,\n  ConnectToTargetSqlMITaskInput,\n  ConnectToTargetSqlMITaskOutput,\n  ConnectToTargetSqlMITaskProperties,\n  ConnectToTargetSqlSqlDbSyncTaskInput,\n  ConnectToTargetSqlSqlDbSyncTaskProperties,\n  DatabaseBackupInfo,\n  DatabaseFileInfo,\n  DatabaseInfo,\n  DatabaseSummaryResult,\n  DatabaseTable,\n  DataItemMigrationSummaryResult,\n  DataMigrationService,\n  FileShare,\n  GetTdeCertificatesSqlTaskInput,\n  GetTdeCertificatesSqlTaskOutput,\n  GetTdeCertificatesSqlTaskProperties,\n  GetUserTablesOracleTaskInput,\n  GetUserTablesOracleTaskOutput,\n  GetUserTablesOracleTaskProperties,\n  GetUserTablesPostgreSqlTaskInput,\n  GetUserTablesPostgreSqlTaskOutput,\n  GetUserTablesPostgreSqlTaskProperties,\n  GetUserTablesSqlSyncTaskInput,\n  GetUserTablesSqlSyncTaskOutput,\n  GetUserTablesSqlSyncTaskProperties,\n  GetUserTablesSqlTaskInput,\n  GetUserTablesSqlTaskOutput,\n  GetUserTablesSqlTaskProperties,\n  InstallOCIDriverTaskInput,\n  InstallOCIDriverTaskOutput,\n  InstallOCIDriverTaskProperties,\n  MigrateMISyncCompleteCommandInput,\n  MigrateMISyncCompleteCommandOutput,\n  MigrateMISyncCompleteCommandProperties,\n  MigrateMongoDbTaskProperties,\n  MigrateMySqlAzureDbForMySqlSyncDatabaseInput,\n  MigrateMySqlAzureDbForMySqlSyncTaskInput,\n  MigrateMySqlAzureDbForMySqlSyncTaskOutput,\n  MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseError,\n  MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevel,\n  MigrateMySqlAzureDbForMySqlSyncTaskOutputError,\n  MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevel,\n  MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevel,\n  MigrateMySqlAzureDbForMySqlSyncTaskProperties,\n  MigrateOracleAzureDbForPostgreSqlSyncTaskProperties,\n  MigrateOracleAzureDbPostgreSqlSyncDatabaseInput,\n  MigrateOracleAzureDbPostgreSqlSyncTaskInput,\n  MigrateOracleAzureDbPostgreSqlSyncTaskOutput,\n  MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseError,\n  MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevel,\n  MigrateOracleAzureDbPostgreSqlSyncTaskOutputError,\n  MigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevel,\n  MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevel,\n  MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput,\n  MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput,\n  MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutput,\n  MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseError,\n  MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevel,\n  MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputError,\n  MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevel,\n  MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevel,\n  MigratePostgreSqlAzureDbForPostgreSqlSyncTaskProperties,\n  MigrateSchemaSqlServerSqlDbDatabaseInput,\n  MigrateSchemaSqlServerSqlDbTaskInput,\n  MigrateSchemaSqlServerSqlDbTaskOutput,\n  MigrateSchemaSqlServerSqlDbTaskOutputDatabaseLevel,\n  MigrateSchemaSqlServerSqlDbTaskOutputError,\n  MigrateSchemaSqlServerSqlDbTaskOutputMigrationLevel,\n  MigrateSchemaSqlServerSqlDbTaskProperties,\n  MigrateSchemaSqlTaskOutputError,\n  MigrateSqlServerSqlDbDatabaseInput,\n  MigrateSqlServerSqlDbSyncDatabaseInput,\n  MigrateSqlServerSqlDbSyncTaskInput,\n  MigrateSqlServerSqlDbSyncTaskOutput,\n  MigrateSqlServerSqlDbSyncTaskOutputDatabaseError,\n  MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevel,\n  MigrateSqlServerSqlDbSyncTaskOutputError,\n  MigrateSqlServerSqlDbSyncTaskOutputMigrationLevel,\n  MigrateSqlServerSqlDbSyncTaskOutputTableLevel,\n  MigrateSqlServerSqlDbSyncTaskProperties,\n  MigrateSqlServerSqlDbTaskInput,\n  MigrateSqlServerSqlDbTaskOutput,\n  MigrateSqlServerSqlDbTaskOutputDatabaseLevel,\n  MigrateSqlServerSqlDbTaskOutputError,\n  MigrateSqlServerSqlDbTaskOutputMigrationLevel,\n  MigrateSqlServerSqlDbTaskOutputTableLevel,\n  MigrateSqlServerSqlDbTaskProperties,\n  MigrateSqlServerSqlMIDatabaseInput,\n  MigrateSqlServerSqlMISyncTaskInput,\n  MigrateSqlServerSqlMISyncTaskOutput,\n  MigrateSqlServerSqlMISyncTaskOutputDatabaseLevel,\n  MigrateSqlServerSqlMISyncTaskOutputError,\n  MigrateSqlServerSqlMISyncTaskOutputMigrationLevel,\n  MigrateSqlServerSqlMISyncTaskProperties,\n  MigrateSqlServerSqlMITaskInput,\n  MigrateSqlServerSqlMITaskOutput,\n  MigrateSqlServerSqlMITaskOutputAgentJobLevel,\n  MigrateSqlServerSqlMITaskOutputDatabaseLevel,\n  MigrateSqlServerSqlMITaskOutputError,\n  MigrateSqlServerSqlMITaskOutputLoginLevel,\n  MigrateSqlServerSqlMITaskOutputMigrationLevel,\n  MigrateSqlServerSqlMITaskProperties,\n  MigrateSsisTaskInput,\n  MigrateSsisTaskOutput,\n  MigrateSsisTaskOutputMigrationLevel,\n  MigrateSsisTaskOutputProjectLevel,\n  MigrateSsisTaskProperties,\n  MigrateSyncCompleteCommandInput,\n  MigrateSyncCompleteCommandOutput,\n  MigrateSyncCompleteCommandProperties,\n  MigrationEligibilityInfo,\n  MigrationReportResult,\n  MigrationValidationDatabaseSummaryResult,\n  MigrationValidationOptions,\n  MigrationValidationResult,\n  MiSqlConnectionInfo,\n  MongoDbCancelCommand,\n  MongoDbClusterInfo,\n  MongoDbCollectionInfo,\n  MongoDbCollectionProgress,\n  MongoDbCollectionSettings,\n  MongoDbCommandInput,\n  MongoDbConnectionInfo,\n  MongoDbDatabaseInfo,\n  MongoDbDatabaseProgress,\n  MongoDbDatabaseSettings,\n  MongoDbError,\n  MongoDbFinishCommand,\n  MongoDbFinishCommandInput,\n  MongoDbMigrationProgress,\n  MongoDbMigrationSettings,\n  MongoDbObjectInfo,\n  MongoDbProgress,\n  MongoDbRestartCommand,\n  MongoDbShardKeyField,\n  MongoDbShardKeyInfo,\n  MongoDbShardKeySetting,\n  MongoDbThrottlingSettings,\n  MySqlConnectionInfo,\n  ODataError,\n  OracleConnectionInfo,\n  OracleOCIDriverInfo,\n  OrphanedUserInfo,\n  PostgreSqlConnectionInfo,\n  Project,\n  ProjectFile,\n  ProjectFileProperties,\n  ProjectList,\n  ProjectTask,\n  ProjectTaskProperties,\n  ReportableException,\n  Resource,\n  SchemaMigrationSetting,\n  SelectedCertificateInput,\n  ServerProperties,\n  ServiceSku,\n  SqlConnectionInfo,\n  SqlMigrationTaskInput,\n  SqlServerSqlMISyncTaskInput,\n  SsisMigrationInfo,\n  StartMigrationScenarioServerRoleResult,\n  SyncMigrationDatabaseErrorEvent,\n  TrackedResource,\n  UploadOCIDriverTaskInput,\n  UploadOCIDriverTaskOutput,\n  UploadOCIDriverTaskProperties,\n  ValidateMigrationInputSqlServerSqlDbSyncTaskProperties,\n  ValidateMigrationInputSqlServerSqlMISyncTaskInput,\n  ValidateMigrationInputSqlServerSqlMISyncTaskOutput,\n  ValidateMigrationInputSqlServerSqlMISyncTaskProperties,\n  ValidateMigrationInputSqlServerSqlMITaskInput,\n  ValidateMigrationInputSqlServerSqlMITaskOutput,\n  ValidateMigrationInputSqlServerSqlMITaskProperties,\n  ValidateMongoDbTaskProperties,\n  ValidateOracleAzureDbForPostgreSqlSyncTaskProperties,\n  ValidateOracleAzureDbPostgreSqlSyncTaskOutput,\n  ValidateSyncMigrationInputSqlServerTaskInput,\n  ValidateSyncMigrationInputSqlServerTaskOutput\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/projectsMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { DataMigrationServiceClientContext } from \"../dataMigrationServiceClientContext\";\n\n/** Class representing a Projects. */\nexport class Projects {\n  private readonly client: DataMigrationServiceClientContext;\n\n  /**\n   * Create a Projects.\n   * @param {DataMigrationServiceClientContext} client Reference to the service client.\n   */\n  constructor(client: DataMigrationServiceClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * The project resource is a nested resource representing a stored migration project. This method\n   * returns a list of projects owned by a service resource.\n   * @summary Get projects in a service\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ProjectsListResponse>\n   */\n  list(groupName: string, serviceName: string, options?: msRest.RequestOptionsBase): Promise<Models.ProjectsListResponse>;\n  /**\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param callback The callback\n   */\n  list(groupName: string, serviceName: string, callback: msRest.ServiceCallback<Models.ProjectList>): void;\n  /**\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  list(groupName: string, serviceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ProjectList>): void;\n  list(groupName: string, serviceName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ProjectList>, callback?: msRest.ServiceCallback<Models.ProjectList>): Promise<Models.ProjectsListResponse> {\n    return this.client.sendOperationRequest(\n      {\n        groupName,\n        serviceName,\n        options\n      },\n      listOperationSpec,\n      callback) as Promise<Models.ProjectsListResponse>;\n  }\n\n  /**\n   * The project resource is a nested resource representing a stored migration project. The PUT\n   * method creates a new project or updates an existing one.\n   * @summary Create or update project\n   * @param parameters Information about the project\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ProjectsCreateOrUpdateResponse>\n   */\n  createOrUpdate(parameters: Models.Project, groupName: string, serviceName: string, projectName: string, options?: msRest.RequestOptionsBase): Promise<Models.ProjectsCreateOrUpdateResponse>;\n  /**\n   * @param parameters Information about the project\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param callback The callback\n   */\n  createOrUpdate(parameters: Models.Project, groupName: string, serviceName: string, projectName: string, callback: msRest.ServiceCallback<Models.Project>): void;\n  /**\n   * @param parameters Information about the project\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  createOrUpdate(parameters: Models.Project, groupName: string, serviceName: string, projectName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Project>): void;\n  createOrUpdate(parameters: Models.Project, groupName: string, serviceName: string, projectName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.Project>, callback?: msRest.ServiceCallback<Models.Project>): Promise<Models.ProjectsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        parameters,\n        groupName,\n        serviceName,\n        projectName,\n        options\n      },\n      createOrUpdateOperationSpec,\n      callback) as Promise<Models.ProjectsCreateOrUpdateResponse>;\n  }\n\n  /**\n   * The project resource is a nested resource representing a stored migration project. The GET\n   * method retrieves information about a project.\n   * @summary Get project information\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ProjectsGetResponse>\n   */\n  get(groupName: string, serviceName: string, projectName: string, options?: msRest.RequestOptionsBase): Promise<Models.ProjectsGetResponse>;\n  /**\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param callback The callback\n   */\n  get(groupName: string, serviceName: string, projectName: string, callback: msRest.ServiceCallback<Models.Project>): void;\n  /**\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  get(groupName: string, serviceName: string, projectName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Project>): void;\n  get(groupName: string, serviceName: string, projectName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.Project>, callback?: msRest.ServiceCallback<Models.Project>): Promise<Models.ProjectsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        groupName,\n        serviceName,\n        projectName,\n        options\n      },\n      getOperationSpec,\n      callback) as Promise<Models.ProjectsGetResponse>;\n  }\n\n  /**\n   * The project resource is a nested resource representing a stored migration project. The DELETE\n   * method deletes a project.\n   * @summary Delete project\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  deleteMethod(groupName: string, serviceName: string, projectName: string, options?: Models.ProjectsDeleteMethodOptionalParams): Promise<msRest.RestResponse>;\n  /**\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param callback The callback\n   */\n  deleteMethod(groupName: string, serviceName: string, projectName: string, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  deleteMethod(groupName: string, serviceName: string, projectName: string, options: Models.ProjectsDeleteMethodOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  deleteMethod(groupName: string, serviceName: string, projectName: string, options?: Models.ProjectsDeleteMethodOptionalParams | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {\n    return this.client.sendOperationRequest(\n      {\n        groupName,\n        serviceName,\n        projectName,\n        options\n      },\n      deleteMethodOperationSpec,\n      callback);\n  }\n\n  /**\n   * The project resource is a nested resource representing a stored migration project. The PATCH\n   * method updates an existing project.\n   * @summary Update project\n   * @param parameters Information about the project\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ProjectsUpdateResponse>\n   */\n  update(parameters: Models.Project, groupName: string, serviceName: string, projectName: string, options?: msRest.RequestOptionsBase): Promise<Models.ProjectsUpdateResponse>;\n  /**\n   * @param parameters Information about the project\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param callback The callback\n   */\n  update(parameters: Models.Project, groupName: string, serviceName: string, projectName: string, callback: msRest.ServiceCallback<Models.Project>): void;\n  /**\n   * @param parameters Information about the project\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  update(parameters: Models.Project, groupName: string, serviceName: string, projectName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Project>): void;\n  update(parameters: Models.Project, groupName: string, serviceName: string, projectName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.Project>, callback?: msRest.ServiceCallback<Models.Project>): Promise<Models.ProjectsUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        parameters,\n        groupName,\n        serviceName,\n        projectName,\n        options\n      },\n      updateOperationSpec,\n      callback) as Promise<Models.ProjectsUpdateResponse>;\n  }\n\n  /**\n   * The project resource is a nested resource representing a stored migration project. This method\n   * returns a list of projects owned by a service resource.\n   * @summary Get projects in a service\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ProjectsListNextResponse>\n   */\n  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ProjectsListNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ProjectList>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ProjectList>): void;\n  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ProjectList>, callback?: msRest.ServiceCallback<Models.ProjectList>): Promise<Models.ProjectsListNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listNextOperationSpec,\n      callback) as Promise<Models.ProjectsListNextResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst listOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.groupName,\n    Parameters.serviceName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProjectList\n    },\n    default: {\n      bodyMapper: Mappers.ApiError\n    }\n  },\n  serializer\n};\n\nconst createOrUpdateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects/{projectName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.groupName,\n    Parameters.serviceName,\n    Parameters.projectName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.Project,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.Project\n    },\n    201: {\n      bodyMapper: Mappers.Project\n    },\n    default: {\n      bodyMapper: Mappers.ApiError\n    }\n  },\n  serializer\n};\n\nconst getOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects/{projectName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.groupName,\n    Parameters.serviceName,\n    Parameters.projectName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.Project\n    },\n    default: {\n      bodyMapper: Mappers.ApiError\n    }\n  },\n  serializer\n};\n\nconst deleteMethodOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects/{projectName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.groupName,\n    Parameters.serviceName,\n    Parameters.projectName\n  ],\n  queryParameters: [\n    Parameters.deleteRunningTasks,\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ApiError\n    }\n  },\n  serializer\n};\n\nconst updateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PATCH\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects/{projectName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.groupName,\n    Parameters.serviceName,\n    Parameters.projectName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.Project,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.Project\n    },\n    default: {\n      bodyMapper: Mappers.ApiError\n    }\n  },\n  serializer\n};\n\nconst listNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProjectList\n    },\n    default: {\n      bodyMapper: Mappers.ApiError\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  discriminators,\n  ApiError,\n  ODataError,\n  Quota,\n  QuotaList,\n  QuotaName\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/usagesMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { DataMigrationServiceClientContext } from \"../dataMigrationServiceClientContext\";\n\n/** Class representing a Usages. */\nexport class Usages {\n  private readonly client: DataMigrationServiceClientContext;\n\n  /**\n   * Create a Usages.\n   * @param {DataMigrationServiceClientContext} client Reference to the service client.\n   */\n  constructor(client: DataMigrationServiceClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * This method returns region-specific quotas and resource usage information for the Database\n   * Migration Service.\n   * @summary Get resource quotas and usage information\n   * @param location The Azure region of the operation\n   * @param [options] The optional parameters\n   * @returns Promise<Models.UsagesListResponse>\n   */\n  list(location: string, options?: msRest.RequestOptionsBase): Promise<Models.UsagesListResponse>;\n  /**\n   * @param location The Azure region of the operation\n   * @param callback The callback\n   */\n  list(location: string, callback: msRest.ServiceCallback<Models.QuotaList>): void;\n  /**\n   * @param location The Azure region of the operation\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  list(location: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.QuotaList>): void;\n  list(location: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.QuotaList>, callback?: msRest.ServiceCallback<Models.QuotaList>): Promise<Models.UsagesListResponse> {\n    return this.client.sendOperationRequest(\n      {\n        location,\n        options\n      },\n      listOperationSpec,\n      callback) as Promise<Models.UsagesListResponse>;\n  }\n\n  /**\n   * This method returns region-specific quotas and resource usage information for the Database\n   * Migration Service.\n   * @summary Get resource quotas and usage information\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.UsagesListNextResponse>\n   */\n  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.UsagesListNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.QuotaList>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.QuotaList>): void;\n  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.QuotaList>, callback?: msRest.ServiceCallback<Models.QuotaList>): Promise<Models.UsagesListNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listNextOperationSpec,\n      callback) as Promise<Models.UsagesListNextResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst listOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/providers/Microsoft.DataMigration/locations/{location}/usages\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.location\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.QuotaList\n    },\n    default: {\n      bodyMapper: Mappers.ApiError\n    }\n  },\n  serializer\n};\n\nconst listNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.QuotaList\n    },\n    default: {\n      bodyMapper: Mappers.ApiError\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  discriminators,\n  ApiError,\n  ODataError,\n  ServiceOperation,\n  ServiceOperationDisplay,\n  ServiceOperationList\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/operationsMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { DataMigrationServiceClientContext } from \"../dataMigrationServiceClientContext\";\n\n/** Class representing a Operations. */\nexport class Operations {\n  private readonly client: DataMigrationServiceClientContext;\n\n  /**\n   * Create a Operations.\n   * @param {DataMigrationServiceClientContext} client Reference to the service client.\n   */\n  constructor(client: DataMigrationServiceClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all available actions exposed by the Database Migration Service resource provider.\n   * @summary Get available resource provider actions (operations)\n   * @param [options] The optional parameters\n   * @returns Promise<Models.OperationsListResponse>\n   */\n  list(options?: msRest.RequestOptionsBase): Promise<Models.OperationsListResponse>;\n  /**\n   * @param callback The callback\n   */\n  list(callback: msRest.ServiceCallback<Models.ServiceOperationList>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  list(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ServiceOperationList>): void;\n  list(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ServiceOperationList>, callback?: msRest.ServiceCallback<Models.ServiceOperationList>): Promise<Models.OperationsListResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      listOperationSpec,\n      callback) as Promise<Models.OperationsListResponse>;\n  }\n\n  /**\n   * Lists all available actions exposed by the Database Migration Service resource provider.\n   * @summary Get available resource provider actions (operations)\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.OperationsListNextResponse>\n   */\n  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.OperationsListNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ServiceOperationList>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ServiceOperationList>): void;\n  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ServiceOperationList>, callback?: msRest.ServiceCallback<Models.ServiceOperationList>): Promise<Models.OperationsListNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listNextOperationSpec,\n      callback) as Promise<Models.OperationsListNextResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst listOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"providers/Microsoft.DataMigration/operations\",\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServiceOperationList\n    },\n    default: {\n      bodyMapper: Mappers.ApiError\n    }\n  },\n  serializer\n};\n\nconst listNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServiceOperationList\n    },\n    default: {\n      bodyMapper: Mappers.ApiError\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  discriminators,\n  ApiError,\n  AzureActiveDirectoryApp,\n  BackupFileInfo,\n  BackupSetInfo,\n  BaseResource,\n  BlobShare,\n  CheckOCIDriverTaskInput,\n  CheckOCIDriverTaskOutput,\n  CheckOCIDriverTaskProperties,\n  CommandProperties,\n  ConnectionInfo,\n  ConnectToMongoDbTaskProperties,\n  ConnectToSourceMySqlTaskInput,\n  ConnectToSourceMySqlTaskProperties,\n  ConnectToSourceNonSqlTaskOutput,\n  ConnectToSourceOracleSyncTaskInput,\n  ConnectToSourceOracleSyncTaskOutput,\n  ConnectToSourceOracleSyncTaskProperties,\n  ConnectToSourcePostgreSqlSyncTaskInput,\n  ConnectToSourcePostgreSqlSyncTaskOutput,\n  ConnectToSourcePostgreSqlSyncTaskProperties,\n  ConnectToSourceSqlServerSyncTaskProperties,\n  ConnectToSourceSqlServerTaskInput,\n  ConnectToSourceSqlServerTaskOutput,\n  ConnectToSourceSqlServerTaskOutputAgentJobLevel,\n  ConnectToSourceSqlServerTaskOutputDatabaseLevel,\n  ConnectToSourceSqlServerTaskOutputLoginLevel,\n  ConnectToSourceSqlServerTaskOutputTaskLevel,\n  ConnectToSourceSqlServerTaskProperties,\n  ConnectToTargetAzureDbForMySqlTaskInput,\n  ConnectToTargetAzureDbForMySqlTaskOutput,\n  ConnectToTargetAzureDbForMySqlTaskProperties,\n  ConnectToTargetAzureDbForPostgreSqlSyncTaskInput,\n  ConnectToTargetAzureDbForPostgreSqlSyncTaskOutput,\n  ConnectToTargetAzureDbForPostgreSqlSyncTaskProperties,\n  ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInput,\n  ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutput,\n  ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutputDatabaseSchemaMapItem,\n  ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskProperties,\n  ConnectToTargetSqlDbTaskInput,\n  ConnectToTargetSqlDbTaskOutput,\n  ConnectToTargetSqlDbTaskProperties,\n  ConnectToTargetSqlMISyncTaskInput,\n  ConnectToTargetSqlMISyncTaskOutput,\n  ConnectToTargetSqlMISyncTaskProperties,\n  ConnectToTargetSqlMITaskInput,\n  ConnectToTargetSqlMITaskOutput,\n  ConnectToTargetSqlMITaskProperties,\n  ConnectToTargetSqlSqlDbSyncTaskInput,\n  ConnectToTargetSqlSqlDbSyncTaskProperties,\n  DatabaseBackupInfo,\n  DatabaseFileInfo,\n  DatabaseInfo,\n  DatabaseSummaryResult,\n  DatabaseTable,\n  DataItemMigrationSummaryResult,\n  DataMigrationService,\n  FileList,\n  FileShare,\n  FileStorageInfo,\n  GetTdeCertificatesSqlTaskInput,\n  GetTdeCertificatesSqlTaskOutput,\n  GetTdeCertificatesSqlTaskProperties,\n  GetUserTablesOracleTaskInput,\n  GetUserTablesOracleTaskOutput,\n  GetUserTablesOracleTaskProperties,\n  GetUserTablesPostgreSqlTaskInput,\n  GetUserTablesPostgreSqlTaskOutput,\n  GetUserTablesPostgreSqlTaskProperties,\n  GetUserTablesSqlSyncTaskInput,\n  GetUserTablesSqlSyncTaskOutput,\n  GetUserTablesSqlSyncTaskProperties,\n  GetUserTablesSqlTaskInput,\n  GetUserTablesSqlTaskOutput,\n  GetUserTablesSqlTaskProperties,\n  InstallOCIDriverTaskInput,\n  InstallOCIDriverTaskOutput,\n  InstallOCIDriverTaskProperties,\n  MigrateMISyncCompleteCommandInput,\n  MigrateMISyncCompleteCommandOutput,\n  MigrateMISyncCompleteCommandProperties,\n  MigrateMongoDbTaskProperties,\n  MigrateMySqlAzureDbForMySqlSyncDatabaseInput,\n  MigrateMySqlAzureDbForMySqlSyncTaskInput,\n  MigrateMySqlAzureDbForMySqlSyncTaskOutput,\n  MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseError,\n  MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevel,\n  MigrateMySqlAzureDbForMySqlSyncTaskOutputError,\n  MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevel,\n  MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevel,\n  MigrateMySqlAzureDbForMySqlSyncTaskProperties,\n  MigrateOracleAzureDbForPostgreSqlSyncTaskProperties,\n  MigrateOracleAzureDbPostgreSqlSyncDatabaseInput,\n  MigrateOracleAzureDbPostgreSqlSyncTaskInput,\n  MigrateOracleAzureDbPostgreSqlSyncTaskOutput,\n  MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseError,\n  MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevel,\n  MigrateOracleAzureDbPostgreSqlSyncTaskOutputError,\n  MigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevel,\n  MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevel,\n  MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput,\n  MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput,\n  MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutput,\n  MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseError,\n  MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevel,\n  MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputError,\n  MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevel,\n  MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevel,\n  MigratePostgreSqlAzureDbForPostgreSqlSyncTaskProperties,\n  MigrateSchemaSqlServerSqlDbDatabaseInput,\n  MigrateSchemaSqlServerSqlDbTaskInput,\n  MigrateSchemaSqlServerSqlDbTaskOutput,\n  MigrateSchemaSqlServerSqlDbTaskOutputDatabaseLevel,\n  MigrateSchemaSqlServerSqlDbTaskOutputError,\n  MigrateSchemaSqlServerSqlDbTaskOutputMigrationLevel,\n  MigrateSchemaSqlServerSqlDbTaskProperties,\n  MigrateSchemaSqlTaskOutputError,\n  MigrateSqlServerSqlDbDatabaseInput,\n  MigrateSqlServerSqlDbSyncDatabaseInput,\n  MigrateSqlServerSqlDbSyncTaskInput,\n  MigrateSqlServerSqlDbSyncTaskOutput,\n  MigrateSqlServerSqlDbSyncTaskOutputDatabaseError,\n  MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevel,\n  MigrateSqlServerSqlDbSyncTaskOutputError,\n  MigrateSqlServerSqlDbSyncTaskOutputMigrationLevel,\n  MigrateSqlServerSqlDbSyncTaskOutputTableLevel,\n  MigrateSqlServerSqlDbSyncTaskProperties,\n  MigrateSqlServerSqlDbTaskInput,\n  MigrateSqlServerSqlDbTaskOutput,\n  MigrateSqlServerSqlDbTaskOutputDatabaseLevel,\n  MigrateSqlServerSqlDbTaskOutputError,\n  MigrateSqlServerSqlDbTaskOutputMigrationLevel,\n  MigrateSqlServerSqlDbTaskOutputTableLevel,\n  MigrateSqlServerSqlDbTaskProperties,\n  MigrateSqlServerSqlMIDatabaseInput,\n  MigrateSqlServerSqlMISyncTaskInput,\n  MigrateSqlServerSqlMISyncTaskOutput,\n  MigrateSqlServerSqlMISyncTaskOutputDatabaseLevel,\n  MigrateSqlServerSqlMISyncTaskOutputError,\n  MigrateSqlServerSqlMISyncTaskOutputMigrationLevel,\n  MigrateSqlServerSqlMISyncTaskProperties,\n  MigrateSqlServerSqlMITaskInput,\n  MigrateSqlServerSqlMITaskOutput,\n  MigrateSqlServerSqlMITaskOutputAgentJobLevel,\n  MigrateSqlServerSqlMITaskOutputDatabaseLevel,\n  MigrateSqlServerSqlMITaskOutputError,\n  MigrateSqlServerSqlMITaskOutputLoginLevel,\n  MigrateSqlServerSqlMITaskOutputMigrationLevel,\n  MigrateSqlServerSqlMITaskProperties,\n  MigrateSsisTaskInput,\n  MigrateSsisTaskOutput,\n  MigrateSsisTaskOutputMigrationLevel,\n  MigrateSsisTaskOutputProjectLevel,\n  MigrateSsisTaskProperties,\n  MigrateSyncCompleteCommandInput,\n  MigrateSyncCompleteCommandOutput,\n  MigrateSyncCompleteCommandProperties,\n  MigrationEligibilityInfo,\n  MigrationReportResult,\n  MigrationValidationDatabaseSummaryResult,\n  MigrationValidationOptions,\n  MigrationValidationResult,\n  MiSqlConnectionInfo,\n  MongoDbCancelCommand,\n  MongoDbClusterInfo,\n  MongoDbCollectionInfo,\n  MongoDbCollectionProgress,\n  MongoDbCollectionSettings,\n  MongoDbCommandInput,\n  MongoDbConnectionInfo,\n  MongoDbDatabaseInfo,\n  MongoDbDatabaseProgress,\n  MongoDbDatabaseSettings,\n  MongoDbError,\n  MongoDbFinishCommand,\n  MongoDbFinishCommandInput,\n  MongoDbMigrationProgress,\n  MongoDbMigrationSettings,\n  MongoDbObjectInfo,\n  MongoDbProgress,\n  MongoDbRestartCommand,\n  MongoDbShardKeyField,\n  MongoDbShardKeyInfo,\n  MongoDbShardKeySetting,\n  MongoDbThrottlingSettings,\n  MySqlConnectionInfo,\n  ODataError,\n  OracleConnectionInfo,\n  OracleOCIDriverInfo,\n  OrphanedUserInfo,\n  PostgreSqlConnectionInfo,\n  Project,\n  ProjectFile,\n  ProjectFileProperties,\n  ProjectTask,\n  ProjectTaskProperties,\n  ReportableException,\n  Resource,\n  SchemaMigrationSetting,\n  SelectedCertificateInput,\n  ServerProperties,\n  ServiceSku,\n  SqlConnectionInfo,\n  SqlMigrationTaskInput,\n  SqlServerSqlMISyncTaskInput,\n  SsisMigrationInfo,\n  StartMigrationScenarioServerRoleResult,\n  SyncMigrationDatabaseErrorEvent,\n  TrackedResource,\n  UploadOCIDriverTaskInput,\n  UploadOCIDriverTaskOutput,\n  UploadOCIDriverTaskProperties,\n  ValidateMigrationInputSqlServerSqlDbSyncTaskProperties,\n  ValidateMigrationInputSqlServerSqlMISyncTaskInput,\n  ValidateMigrationInputSqlServerSqlMISyncTaskOutput,\n  ValidateMigrationInputSqlServerSqlMISyncTaskProperties,\n  ValidateMigrationInputSqlServerSqlMITaskInput,\n  ValidateMigrationInputSqlServerSqlMITaskOutput,\n  ValidateMigrationInputSqlServerSqlMITaskProperties,\n  ValidateMongoDbTaskProperties,\n  ValidateOracleAzureDbForPostgreSqlSyncTaskProperties,\n  ValidateOracleAzureDbPostgreSqlSyncTaskOutput,\n  ValidateSyncMigrationInputSqlServerTaskInput,\n  ValidateSyncMigrationInputSqlServerTaskOutput\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/filesMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { DataMigrationServiceClientContext } from \"../dataMigrationServiceClientContext\";\n\n/** Class representing a Files. */\nexport class Files {\n  private readonly client: DataMigrationServiceClientContext;\n\n  /**\n   * Create a Files.\n   * @param {DataMigrationServiceClientContext} client Reference to the service client.\n   */\n  constructor(client: DataMigrationServiceClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * The project resource is a nested resource representing a stored migration project. This method\n   * returns a list of files owned by a project resource.\n   * @summary Get files in a project\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param [options] The optional parameters\n   * @returns Promise<Models.FilesListResponse>\n   */\n  list(groupName: string, serviceName: string, projectName: string, options?: msRest.RequestOptionsBase): Promise<Models.FilesListResponse>;\n  /**\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param callback The callback\n   */\n  list(groupName: string, serviceName: string, projectName: string, callback: msRest.ServiceCallback<Models.FileList>): void;\n  /**\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  list(groupName: string, serviceName: string, projectName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.FileList>): void;\n  list(groupName: string, serviceName: string, projectName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.FileList>, callback?: msRest.ServiceCallback<Models.FileList>): Promise<Models.FilesListResponse> {\n    return this.client.sendOperationRequest(\n      {\n        groupName,\n        serviceName,\n        projectName,\n        options\n      },\n      listOperationSpec,\n      callback) as Promise<Models.FilesListResponse>;\n  }\n\n  /**\n   * The files resource is a nested, proxy-only resource representing a file stored under the project\n   * resource. This method retrieves information about a file.\n   * @summary Get file information\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param fileName Name of the File\n   * @param [options] The optional parameters\n   * @returns Promise<Models.FilesGetResponse>\n   */\n  get(groupName: string, serviceName: string, projectName: string, fileName: string, options?: msRest.RequestOptionsBase): Promise<Models.FilesGetResponse>;\n  /**\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param fileName Name of the File\n   * @param callback The callback\n   */\n  get(groupName: string, serviceName: string, projectName: string, fileName: string, callback: msRest.ServiceCallback<Models.ProjectFile>): void;\n  /**\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param fileName Name of the File\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  get(groupName: string, serviceName: string, projectName: string, fileName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ProjectFile>): void;\n  get(groupName: string, serviceName: string, projectName: string, fileName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ProjectFile>, callback?: msRest.ServiceCallback<Models.ProjectFile>): Promise<Models.FilesGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        groupName,\n        serviceName,\n        projectName,\n        fileName,\n        options\n      },\n      getOperationSpec,\n      callback) as Promise<Models.FilesGetResponse>;\n  }\n\n  /**\n   * The PUT method creates a new file or updates an existing one.\n   * @summary Create a file resource\n   * @param parameters Information about the file\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param fileName Name of the File\n   * @param [options] The optional parameters\n   * @returns Promise<Models.FilesCreateOrUpdateResponse>\n   */\n  createOrUpdate(parameters: Models.ProjectFile, groupName: string, serviceName: string, projectName: string, fileName: string, options?: msRest.RequestOptionsBase): Promise<Models.FilesCreateOrUpdateResponse>;\n  /**\n   * @param parameters Information about the file\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param fileName Name of the File\n   * @param callback The callback\n   */\n  createOrUpdate(parameters: Models.ProjectFile, groupName: string, serviceName: string, projectName: string, fileName: string, callback: msRest.ServiceCallback<Models.ProjectFile>): void;\n  /**\n   * @param parameters Information about the file\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param fileName Name of the File\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  createOrUpdate(parameters: Models.ProjectFile, groupName: string, serviceName: string, projectName: string, fileName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ProjectFile>): void;\n  createOrUpdate(parameters: Models.ProjectFile, groupName: string, serviceName: string, projectName: string, fileName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ProjectFile>, callback?: msRest.ServiceCallback<Models.ProjectFile>): Promise<Models.FilesCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        parameters,\n        groupName,\n        serviceName,\n        projectName,\n        fileName,\n        options\n      },\n      createOrUpdateOperationSpec,\n      callback) as Promise<Models.FilesCreateOrUpdateResponse>;\n  }\n\n  /**\n   * This method deletes a file.\n   * @summary Delete file\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param fileName Name of the File\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  deleteMethod(groupName: string, serviceName: string, projectName: string, fileName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;\n  /**\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param fileName Name of the File\n   * @param callback The callback\n   */\n  deleteMethod(groupName: string, serviceName: string, projectName: string, fileName: string, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param fileName Name of the File\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  deleteMethod(groupName: string, serviceName: string, projectName: string, fileName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;\n  deleteMethod(groupName: string, serviceName: string, projectName: string, fileName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {\n    return this.client.sendOperationRequest(\n      {\n        groupName,\n        serviceName,\n        projectName,\n        fileName,\n        options\n      },\n      deleteMethodOperationSpec,\n      callback);\n  }\n\n  /**\n   * This method updates an existing file.\n   * @summary Update a file\n   * @param parameters Information about the file\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param fileName Name of the File\n   * @param [options] The optional parameters\n   * @returns Promise<Models.FilesUpdateResponse>\n   */\n  update(parameters: Models.ProjectFile, groupName: string, serviceName: string, projectName: string, fileName: string, options?: msRest.RequestOptionsBase): Promise<Models.FilesUpdateResponse>;\n  /**\n   * @param parameters Information about the file\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param fileName Name of the File\n   * @param callback The callback\n   */\n  update(parameters: Models.ProjectFile, groupName: string, serviceName: string, projectName: string, fileName: string, callback: msRest.ServiceCallback<Models.ProjectFile>): void;\n  /**\n   * @param parameters Information about the file\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param fileName Name of the File\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  update(parameters: Models.ProjectFile, groupName: string, serviceName: string, projectName: string, fileName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ProjectFile>): void;\n  update(parameters: Models.ProjectFile, groupName: string, serviceName: string, projectName: string, fileName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ProjectFile>, callback?: msRest.ServiceCallback<Models.ProjectFile>): Promise<Models.FilesUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        parameters,\n        groupName,\n        serviceName,\n        projectName,\n        fileName,\n        options\n      },\n      updateOperationSpec,\n      callback) as Promise<Models.FilesUpdateResponse>;\n  }\n\n  /**\n   * This method is used for requesting storage information using which contents of the file can be\n   * downloaded.\n   * @summary Request storage information for downloading the file content\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param fileName Name of the File\n   * @param [options] The optional parameters\n   * @returns Promise<Models.FilesReadResponse>\n   */\n  read(groupName: string, serviceName: string, projectName: string, fileName: string, options?: msRest.RequestOptionsBase): Promise<Models.FilesReadResponse>;\n  /**\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param fileName Name of the File\n   * @param callback The callback\n   */\n  read(groupName: string, serviceName: string, projectName: string, fileName: string, callback: msRest.ServiceCallback<Models.FileStorageInfo>): void;\n  /**\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param fileName Name of the File\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  read(groupName: string, serviceName: string, projectName: string, fileName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.FileStorageInfo>): void;\n  read(groupName: string, serviceName: string, projectName: string, fileName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.FileStorageInfo>, callback?: msRest.ServiceCallback<Models.FileStorageInfo>): Promise<Models.FilesReadResponse> {\n    return this.client.sendOperationRequest(\n      {\n        groupName,\n        serviceName,\n        projectName,\n        fileName,\n        options\n      },\n      readOperationSpec,\n      callback) as Promise<Models.FilesReadResponse>;\n  }\n\n  /**\n   * This method is used for requesting information for reading and writing the file content.\n   * @summary Request information for reading and writing file content.\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param fileName Name of the File\n   * @param [options] The optional parameters\n   * @returns Promise<Models.FilesReadWriteResponse>\n   */\n  readWrite(groupName: string, serviceName: string, projectName: string, fileName: string, options?: msRest.RequestOptionsBase): Promise<Models.FilesReadWriteResponse>;\n  /**\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param fileName Name of the File\n   * @param callback The callback\n   */\n  readWrite(groupName: string, serviceName: string, projectName: string, fileName: string, callback: msRest.ServiceCallback<Models.FileStorageInfo>): void;\n  /**\n   * @param groupName Name of the resource group\n   * @param serviceName Name of the service\n   * @param projectName Name of the project\n   * @param fileName Name of the File\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  readWrite(groupName: string, serviceName: string, projectName: string, fileName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.FileStorageInfo>): void;\n  readWrite(groupName: string, serviceName: string, projectName: string, fileName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.FileStorageInfo>, callback?: msRest.ServiceCallback<Models.FileStorageInfo>): Promise<Models.FilesReadWriteResponse> {\n    return this.client.sendOperationRequest(\n      {\n        groupName,\n        serviceName,\n        projectName,\n        fileName,\n        options\n      },\n      readWriteOperationSpec,\n      callback) as Promise<Models.FilesReadWriteResponse>;\n  }\n\n  /**\n   * The project resource is a nested resource representing a stored migration project. This method\n   * returns a list of files owned by a project resource.\n   * @summary Get files in a project\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.FilesListNextResponse>\n   */\n  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.FilesListNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.FileList>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.FileList>): void;\n  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.FileList>, callback?: msRest.ServiceCallback<Models.FileList>): Promise<Models.FilesListNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listNextOperationSpec,\n      callback) as Promise<Models.FilesListNextResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst listOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects/{projectName}/files\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.groupName,\n    Parameters.serviceName,\n    Parameters.projectName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.FileList\n    },\n    default: {\n      bodyMapper: Mappers.ApiError\n    }\n  },\n  serializer\n};\n\nconst getOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects/{projectName}/files/{fileName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.groupName,\n    Parameters.serviceName,\n    Parameters.projectName,\n    Parameters.fileName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProjectFile\n    },\n    default: {\n      bodyMapper: Mappers.ApiError\n    }\n  },\n  serializer\n};\n\nconst createOrUpdateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects/{projectName}/files/{fileName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.groupName,\n    Parameters.serviceName,\n    Parameters.projectName,\n    Parameters.fileName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.ProjectFile,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProjectFile\n    },\n    201: {\n      bodyMapper: Mappers.ProjectFile\n    },\n    default: {\n      bodyMapper: Mappers.ApiError\n    }\n  },\n  serializer\n};\n\nconst deleteMethodOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects/{projectName}/files/{fileName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.groupName,\n    Parameters.serviceName,\n    Parameters.projectName,\n    Parameters.fileName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ApiError\n    }\n  },\n  serializer\n};\n\nconst updateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PATCH\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects/{projectName}/files/{fileName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.groupName,\n    Parameters.serviceName,\n    Parameters.projectName,\n    Parameters.fileName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.ProjectFile,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProjectFile\n    },\n    default: {\n      bodyMapper: Mappers.ApiError\n    }\n  },\n  serializer\n};\n\nconst readOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects/{projectName}/files/{fileName}/read\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.groupName,\n    Parameters.serviceName,\n    Parameters.projectName,\n    Parameters.fileName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.FileStorageInfo\n    },\n    default: {\n      bodyMapper: Mappers.ApiError\n    }\n  },\n  serializer\n};\n\nconst readWriteOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects/{projectName}/files/{fileName}/readwrite\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.groupName,\n    Parameters.serviceName,\n    Parameters.projectName,\n    Parameters.fileName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.FileStorageInfo\n    },\n    default: {\n      bodyMapper: Mappers.ApiError\n    }\n  },\n  serializer\n};\n\nconst listNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.FileList\n    },\n    default: {\n      bodyMapper: Mappers.ApiError\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as Models from \"./models\";\nimport * as msRest from \"@azure/ms-rest-js\";\nimport { TokenCredential } from \"@azure/core-auth\";\nimport * as msRestAzure from \"@azure/ms-rest-azure-js\";\n\nconst packageName = \"@azure/arm-datamigration\";\nconst packageVersion = \"2.1.1\";\n\nexport class DataMigrationServiceClientContext extends msRestAzure.AzureServiceClient {\n  credentials: msRest.ServiceClientCredentials | TokenCredential;\n  apiVersion?: string;\n  subscriptionId: string;\n\n  /**\n   * Initializes a new instance of the DataMigrationServiceClient class.\n   * @param credentials Credentials needed for the client to connect to Azure. Credentials\n   * implementing the TokenCredential interface from the @azure/identity package are recommended. For\n   * more information about these credentials, see\n   * {@link https://www.npmjs.com/package/@azure/identity}. Credentials implementing the\n   * ServiceClientCredentials interface from the older packages @azure/ms-rest-nodeauth and\n   * @azure/ms-rest-browserauth are also supported.\n   * @param subscriptionId Identifier of the subscription\n   * @param [options] The parameter options\n   */\n  constructor(credentials: msRest.ServiceClientCredentials | TokenCredential, subscriptionId: string, options?: Models.DataMigrationServiceClientOptions) {\n    if (credentials == undefined) {\n      throw new Error('\\'credentials\\' cannot be null.');\n    }\n    if (subscriptionId == undefined) {\n      throw new Error('\\'subscriptionId\\' cannot be null.');\n    }\n\n    if (!options) {\n      options = {};\n    }\n    if (!options.userAgent) {\n      const defaultUserAgent = msRestAzure.getDefaultUserAgentValue();\n      options.userAgent = `${packageName}/${packageVersion} ${defaultUserAgent}`;\n    }\n\n    super(credentials, options);\n\n    this.apiVersion = '2018-07-15-preview';\n    this.acceptLanguage = 'en-US';\n    this.longRunningOperationRetryTimeout = 30;\n    this.baseUri = options.baseUri || this.baseUri || \"https://management.azure.com\";\n    this.requestContentType = \"application/json; charset=utf-8\";\n    this.credentials = credentials;\n    this.subscriptionId = subscriptionId;\n\n    if (options.acceptLanguage !== null && options.acceptLanguage !== undefined) {\n      this.acceptLanguage = options.acceptLanguage;\n    }\n    if (options.longRunningOperationRetryTimeout !== null && options.longRunningOperationRetryTimeout !== undefined) {\n      this.longRunningOperationRetryTimeout = options.longRunningOperationRetryTimeout;\n    }\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport { TokenCredential } from \"@azure/core-auth\";\nimport * as Models from \"./models\";\nimport * as Mappers from \"./models/mappers\";\nimport * as operations from \"./operations\";\nimport { DataMigrationServiceClientContext } from \"./dataMigrationServiceClientContext\";\n\n\nclass DataMigrationServiceClient extends DataMigrationServiceClientContext {\n  // Operation groups\n  resourceSkus: operations.ResourceSkus;\n  services: operations.Services;\n  tasks: operations.Tasks;\n  serviceTasks: operations.ServiceTasks;\n  projects: operations.Projects;\n  usages: operations.Usages;\n  operations: operations.Operations;\n  files: operations.Files;\n\n  /**\n   * Initializes a new instance of the DataMigrationServiceClient class.\n   * @param credentials Credentials needed for the client to connect to Azure. Credentials\n   * implementing the TokenCredential interface from the @azure/identity package are recommended. For\n   * more information about these credentials, see\n   * {@link https://www.npmjs.com/package/@azure/identity}. Credentials implementing the\n   * ServiceClientCredentials interface from the older packages @azure/ms-rest-nodeauth and\n   * @azure/ms-rest-browserauth are also supported.\n   * @param subscriptionId Identifier of the subscription\n   * @param [options] The parameter options\n   */\n  constructor(credentials: msRest.ServiceClientCredentials | TokenCredential, subscriptionId: string, options?: Models.DataMigrationServiceClientOptions) {\n    super(credentials, subscriptionId, options);\n    this.resourceSkus = new operations.ResourceSkus(this);\n    this.services = new operations.Services(this);\n    this.tasks = new operations.Tasks(this);\n    this.serviceTasks = new operations.ServiceTasks(this);\n    this.projects = new operations.Projects(this);\n    this.usages = new operations.Usages(this);\n    this.operations = new operations.Operations(this);\n    this.files = new operations.Files(this);\n  }\n}\n\n// Operation Specifications\n\nexport {\n  DataMigrationServiceClient,\n  DataMigrationServiceClientContext,\n  Models as DataMigrationServiceModels,\n  Mappers as DataMigrationServiceMappers\n};\nexport * from \"./operations\";\n"],"names":["CloudErrorMapper","BaseResourceMapper","msRest.Serializer","Parameters.subscriptionId","Parameters.apiVersion","Parameters.acceptLanguage","Mappers.ResourceSkusResult","Mappers.ApiError","Parameters.nextPageLink","listSkusOperationSpec","listSkusNextOperationSpec","serializer","Mappers","Parameters.groupName","Parameters.serviceName","Mappers.DataMigrationService","Mappers.DataMigrationServiceStatusResponse","Mappers.ServiceSkuList","Mappers.NameAvailabilityRequest","Mappers.NameAvailabilityResponse","Mappers.DataMigrationServiceList","Parameters.location","Parameters.deleteRunningTasks","listOperationSpec","getOperationSpec","listNextOperationSpec","Parameters.projectName","Parameters.taskType","Mappers.TaskList","Parameters.taskName","Mappers.ProjectTask","Parameters.expand","Mappers.CommandProperties","createOrUpdateOperationSpec","deleteMethodOperationSpec","updateOperationSpec","cancelOperationSpec","Mappers.ProjectList","Mappers.Project","Mappers.QuotaList","Mappers.ServiceOperationList","Mappers.FileList","Parameters.fileName","Mappers.ProjectFile","Mappers.FileStorageInfo","msRestAzure.getDefaultUserAgentValue","msRestAzure.AzureServiceClient","operations.ResourceSkus","operations.Services","operations.Tasks","operations.ServiceTasks","operations.Projects","operations.Usages","operations.Operations","operations.Files"],"mappings":"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"}