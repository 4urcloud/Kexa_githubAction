import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { DataMigrationServiceClientContext } from "../dataMigrationServiceClientContext";
/** Class representing a Projects. */
export declare class Projects {
    private readonly client;
    /**
     * Create a Projects.
     * @param {DataMigrationServiceClientContext} client Reference to the service client.
     */
    constructor(client: DataMigrationServiceClientContext);
    /**
     * The project resource is a nested resource representing a stored migration project. This method
     * returns a list of projects owned by a service resource.
     * @summary Get projects in a service
     * @param groupName Name of the resource group
     * @param serviceName Name of the service
     * @param [options] The optional parameters
     * @returns Promise<Models.ProjectsListResponse>
     */
    list(groupName: string, serviceName: string, options?: msRest.RequestOptionsBase): Promise<Models.ProjectsListResponse>;
    /**
     * @param groupName Name of the resource group
     * @param serviceName Name of the service
     * @param callback The callback
     */
    list(groupName: string, serviceName: string, callback: msRest.ServiceCallback<Models.ProjectList>): void;
    /**
     * @param groupName Name of the resource group
     * @param serviceName Name of the service
     * @param options The optional parameters
     * @param callback The callback
     */
    list(groupName: string, serviceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ProjectList>): void;
    /**
     * The project resource is a nested resource representing a stored migration project. The PUT
     * method creates a new project or updates an existing one.
     * @summary Create or update project
     * @param parameters Information about the project
     * @param groupName Name of the resource group
     * @param serviceName Name of the service
     * @param projectName Name of the project
     * @param [options] The optional parameters
     * @returns Promise<Models.ProjectsCreateOrUpdateResponse>
     */
    createOrUpdate(parameters: Models.Project, groupName: string, serviceName: string, projectName: string, options?: msRest.RequestOptionsBase): Promise<Models.ProjectsCreateOrUpdateResponse>;
    /**
     * @param parameters Information about the project
     * @param groupName Name of the resource group
     * @param serviceName Name of the service
     * @param projectName Name of the project
     * @param callback The callback
     */
    createOrUpdate(parameters: Models.Project, groupName: string, serviceName: string, projectName: string, callback: msRest.ServiceCallback<Models.Project>): void;
    /**
     * @param parameters Information about the project
     * @param groupName Name of the resource group
     * @param serviceName Name of the service
     * @param projectName Name of the project
     * @param options The optional parameters
     * @param callback The callback
     */
    createOrUpdate(parameters: Models.Project, groupName: string, serviceName: string, projectName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Project>): void;
    /**
     * The project resource is a nested resource representing a stored migration project. The GET
     * method retrieves information about a project.
     * @summary Get project information
     * @param groupName Name of the resource group
     * @param serviceName Name of the service
     * @param projectName Name of the project
     * @param [options] The optional parameters
     * @returns Promise<Models.ProjectsGetResponse>
     */
    get(groupName: string, serviceName: string, projectName: string, options?: msRest.RequestOptionsBase): Promise<Models.ProjectsGetResponse>;
    /**
     * @param groupName Name of the resource group
     * @param serviceName Name of the service
     * @param projectName Name of the project
     * @param callback The callback
     */
    get(groupName: string, serviceName: string, projectName: string, callback: msRest.ServiceCallback<Models.Project>): void;
    /**
     * @param groupName Name of the resource group
     * @param serviceName Name of the service
     * @param projectName Name of the project
     * @param options The optional parameters
     * @param callback The callback
     */
    get(groupName: string, serviceName: string, projectName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Project>): void;
    /**
     * The project resource is a nested resource representing a stored migration project. The DELETE
     * method deletes a project.
     * @summary Delete project
     * @param groupName Name of the resource group
     * @param serviceName Name of the service
     * @param projectName Name of the project
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(groupName: string, serviceName: string, projectName: string, options?: Models.ProjectsDeleteMethodOptionalParams): Promise<msRest.RestResponse>;
    /**
     * @param groupName Name of the resource group
     * @param serviceName Name of the service
     * @param projectName Name of the project
     * @param callback The callback
     */
    deleteMethod(groupName: string, serviceName: string, projectName: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param groupName Name of the resource group
     * @param serviceName Name of the service
     * @param projectName Name of the project
     * @param options The optional parameters
     * @param callback The callback
     */
    deleteMethod(groupName: string, serviceName: string, projectName: string, options: Models.ProjectsDeleteMethodOptionalParams, callback: msRest.ServiceCallback<void>): void;
    /**
     * The project resource is a nested resource representing a stored migration project. The PATCH
     * method updates an existing project.
     * @summary Update project
     * @param parameters Information about the project
     * @param groupName Name of the resource group
     * @param serviceName Name of the service
     * @param projectName Name of the project
     * @param [options] The optional parameters
     * @returns Promise<Models.ProjectsUpdateResponse>
     */
    update(parameters: Models.Project, groupName: string, serviceName: string, projectName: string, options?: msRest.RequestOptionsBase): Promise<Models.ProjectsUpdateResponse>;
    /**
     * @param parameters Information about the project
     * @param groupName Name of the resource group
     * @param serviceName Name of the service
     * @param projectName Name of the project
     * @param callback The callback
     */
    update(parameters: Models.Project, groupName: string, serviceName: string, projectName: string, callback: msRest.ServiceCallback<Models.Project>): void;
    /**
     * @param parameters Information about the project
     * @param groupName Name of the resource group
     * @param serviceName Name of the service
     * @param projectName Name of the project
     * @param options The optional parameters
     * @param callback The callback
     */
    update(parameters: Models.Project, groupName: string, serviceName: string, projectName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Project>): void;
    /**
     * The project resource is a nested resource representing a stored migration project. This method
     * returns a list of projects owned by a service resource.
     * @summary Get projects in a service
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.ProjectsListNextResponse>
     */
    listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ProjectsListNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ProjectList>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ProjectList>): void;
}
//# sourceMappingURL=projects.d.ts.map