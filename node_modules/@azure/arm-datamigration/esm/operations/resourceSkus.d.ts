import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { DataMigrationServiceClientContext } from "../dataMigrationServiceClientContext";
/** Class representing a ResourceSkus. */
export declare class ResourceSkus {
    private readonly client;
    /**
     * Create a ResourceSkus.
     * @param {DataMigrationServiceClientContext} client Reference to the service client.
     */
    constructor(client: DataMigrationServiceClientContext);
    /**
     * The skus action returns the list of SKUs that DMS supports.
     * @summary Get supported SKUs
     * @param [options] The optional parameters
     * @returns Promise<Models.ResourceSkusListSkusResponse>
     */
    listSkus(options?: msRest.RequestOptionsBase): Promise<Models.ResourceSkusListSkusResponse>;
    /**
     * @param callback The callback
     */
    listSkus(callback: msRest.ServiceCallback<Models.ResourceSkusResult>): void;
    /**
     * @param options The optional parameters
     * @param callback The callback
     */
    listSkus(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceSkusResult>): void;
    /**
     * The skus action returns the list of SKUs that DMS supports.
     * @summary Get supported SKUs
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.ResourceSkusListSkusNextResponse>
     */
    listSkusNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ResourceSkusListSkusNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listSkusNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ResourceSkusResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listSkusNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceSkusResult>): void;
}
//# sourceMappingURL=resourceSkus.d.ts.map