import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { AzureStackManagementClientContext } from "../azureStackManagementClientContext";
/** Class representing a CustomerSubscriptions. */
export declare class CustomerSubscriptions {
    private readonly client;
    /**
     * Create a CustomerSubscriptions.
     * @param {AzureStackManagementClientContext} client Reference to the service client.
     */
    constructor(client: AzureStackManagementClientContext);
    /**
     * Returns a list of products.
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param [options] The optional parameters
     * @returns Promise<Models.CustomerSubscriptionsListResponse>
     */
    list(resourceGroup: string, registrationName: string, options?: msRest.RequestOptionsBase): Promise<Models.CustomerSubscriptionsListResponse>;
    /**
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param callback The callback
     */
    list(resourceGroup: string, registrationName: string, callback: msRest.ServiceCallback<Models.CustomerSubscriptionList>): void;
    /**
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param options The optional parameters
     * @param callback The callback
     */
    list(resourceGroup: string, registrationName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CustomerSubscriptionList>): void;
    /**
     * Returns the specified product.
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param customerSubscriptionName Name of the product.
     * @param [options] The optional parameters
     * @returns Promise<Models.CustomerSubscriptionsGetResponse>
     */
    get(resourceGroup: string, registrationName: string, customerSubscriptionName: string, options?: msRest.RequestOptionsBase): Promise<Models.CustomerSubscriptionsGetResponse>;
    /**
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param customerSubscriptionName Name of the product.
     * @param callback The callback
     */
    get(resourceGroup: string, registrationName: string, customerSubscriptionName: string, callback: msRest.ServiceCallback<Models.CustomerSubscription>): void;
    /**
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param customerSubscriptionName Name of the product.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroup: string, registrationName: string, customerSubscriptionName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CustomerSubscription>): void;
    /**
     * Deletes a customer subscription under a registration.
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param customerSubscriptionName Name of the product.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroup: string, registrationName: string, customerSubscriptionName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param customerSubscriptionName Name of the product.
     * @param callback The callback
     */
    deleteMethod(resourceGroup: string, registrationName: string, customerSubscriptionName: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param customerSubscriptionName Name of the product.
     * @param options The optional parameters
     * @param callback The callback
     */
    deleteMethod(resourceGroup: string, registrationName: string, customerSubscriptionName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Creates a new customer subscription under a registration.
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param customerSubscriptionName Name of the product.
     * @param customerCreationParameters Parameters use to create a customer subscription.
     * @param [options] The optional parameters
     * @returns Promise<Models.CustomerSubscriptionsCreateResponse>
     */
    create(resourceGroup: string, registrationName: string, customerSubscriptionName: string, customerCreationParameters: Models.CustomerSubscription, options?: msRest.RequestOptionsBase): Promise<Models.CustomerSubscriptionsCreateResponse>;
    /**
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param customerSubscriptionName Name of the product.
     * @param customerCreationParameters Parameters use to create a customer subscription.
     * @param callback The callback
     */
    create(resourceGroup: string, registrationName: string, customerSubscriptionName: string, customerCreationParameters: Models.CustomerSubscription, callback: msRest.ServiceCallback<Models.CustomerSubscription>): void;
    /**
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param customerSubscriptionName Name of the product.
     * @param customerCreationParameters Parameters use to create a customer subscription.
     * @param options The optional parameters
     * @param callback The callback
     */
    create(resourceGroup: string, registrationName: string, customerSubscriptionName: string, customerCreationParameters: Models.CustomerSubscription, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CustomerSubscription>): void;
    /**
     * Returns a list of products.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.CustomerSubscriptionsListNextResponse>
     */
    listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.CustomerSubscriptionsListNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.CustomerSubscriptionList>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CustomerSubscriptionList>): void;
}
//# sourceMappingURL=customerSubscriptions.d.ts.map