import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { AzureStackManagementClientContext } from "../azureStackManagementClientContext";
/** Class representing a Products. */
export declare class Products {
    private readonly client;
    /**
     * Create a Products.
     * @param {AzureStackManagementClientContext} client Reference to the service client.
     */
    constructor(client: AzureStackManagementClientContext);
    /**
     * Returns a list of products.
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param [options] The optional parameters
     * @returns Promise<Models.ProductsListResponse>
     */
    list(resourceGroup: string, registrationName: string, options?: msRest.RequestOptionsBase): Promise<Models.ProductsListResponse>;
    /**
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param callback The callback
     */
    list(resourceGroup: string, registrationName: string, callback: msRest.ServiceCallback<Models.ProductList>): void;
    /**
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param options The optional parameters
     * @param callback The callback
     */
    list(resourceGroup: string, registrationName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ProductList>): void;
    /**
     * Returns the specified product.
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param productName Name of the product.
     * @param [options] The optional parameters
     * @returns Promise<Models.ProductsGetResponse>
     */
    get(resourceGroup: string, registrationName: string, productName: string, options?: msRest.RequestOptionsBase): Promise<Models.ProductsGetResponse>;
    /**
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param productName Name of the product.
     * @param callback The callback
     */
    get(resourceGroup: string, registrationName: string, productName: string, callback: msRest.ServiceCallback<Models.Product>): void;
    /**
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param productName Name of the product.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroup: string, registrationName: string, productName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Product>): void;
    /**
     * Returns the extended properties of a product.
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param productName Name of the product.
     * @param [options] The optional parameters
     * @returns Promise<Models.ProductsListDetailsResponse>
     */
    listDetails(resourceGroup: string, registrationName: string, productName: string, options?: msRest.RequestOptionsBase): Promise<Models.ProductsListDetailsResponse>;
    /**
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param productName Name of the product.
     * @param callback The callback
     */
    listDetails(resourceGroup: string, registrationName: string, productName: string, callback: msRest.ServiceCallback<Models.ExtendedProduct>): void;
    /**
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param productName Name of the product.
     * @param options The optional parameters
     * @param callback The callback
     */
    listDetails(resourceGroup: string, registrationName: string, productName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ExtendedProduct>): void;
    /**
     * Returns a list of products.
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param [options] The optional parameters
     * @returns Promise<Models.ProductsGetProductsResponse>
     */
    getProducts(resourceGroup: string, registrationName: string, options?: msRest.RequestOptionsBase): Promise<Models.ProductsGetProductsResponse>;
    /**
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param callback The callback
     */
    getProducts(resourceGroup: string, registrationName: string, callback: msRest.ServiceCallback<Models.ProductList>): void;
    /**
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param options The optional parameters
     * @param callback The callback
     */
    getProducts(resourceGroup: string, registrationName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ProductList>): void;
    /**
     * Returns the specified product.
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param productName Name of the product.
     * @param [options] The optional parameters
     * @returns Promise<Models.ProductsGetProductResponse>
     */
    getProduct(resourceGroup: string, registrationName: string, productName: string, options?: msRest.RequestOptionsBase): Promise<Models.ProductsGetProductResponse>;
    /**
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param productName Name of the product.
     * @param callback The callback
     */
    getProduct(resourceGroup: string, registrationName: string, productName: string, callback: msRest.ServiceCallback<Models.Product>): void;
    /**
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param productName Name of the product.
     * @param options The optional parameters
     * @param callback The callback
     */
    getProduct(resourceGroup: string, registrationName: string, productName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Product>): void;
    /**
     * Returns the specified product.
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param productName Name of the product.
     * @param [options] The optional parameters
     * @returns Promise<Models.ProductsUploadLogResponse>
     */
    uploadLog(resourceGroup: string, registrationName: string, productName: string, options?: msRest.RequestOptionsBase): Promise<Models.ProductsUploadLogResponse>;
    /**
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param productName Name of the product.
     * @param callback The callback
     */
    uploadLog(resourceGroup: string, registrationName: string, productName: string, callback: msRest.ServiceCallback<Models.ProductLog>): void;
    /**
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param productName Name of the product.
     * @param options The optional parameters
     * @param callback The callback
     */
    uploadLog(resourceGroup: string, registrationName: string, productName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ProductLog>): void;
    /**
     * Returns a list of products.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.ProductsListNextResponse>
     */
    listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ProductsListNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ProductList>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ProductList>): void;
}
//# sourceMappingURL=products.d.ts.map