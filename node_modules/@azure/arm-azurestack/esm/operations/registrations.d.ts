import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { AzureStackManagementClientContext } from "../azureStackManagementClientContext";
/** Class representing a Registrations. */
export declare class Registrations {
    private readonly client;
    /**
     * Create a Registrations.
     * @param {AzureStackManagementClientContext} client Reference to the service client.
     */
    constructor(client: AzureStackManagementClientContext);
    /**
     * Returns a list of all registrations.
     * @param resourceGroup Name of the resource group.
     * @param [options] The optional parameters
     * @returns Promise<Models.RegistrationsListResponse>
     */
    list(resourceGroup: string, options?: msRest.RequestOptionsBase): Promise<Models.RegistrationsListResponse>;
    /**
     * @param resourceGroup Name of the resource group.
     * @param callback The callback
     */
    list(resourceGroup: string, callback: msRest.ServiceCallback<Models.RegistrationList>): void;
    /**
     * @param resourceGroup Name of the resource group.
     * @param options The optional parameters
     * @param callback The callback
     */
    list(resourceGroup: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.RegistrationList>): void;
    /**
     * Returns the properties of an Azure Stack registration.
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param [options] The optional parameters
     * @returns Promise<Models.RegistrationsGetResponse>
     */
    get(resourceGroup: string, registrationName: string, options?: msRest.RequestOptionsBase): Promise<Models.RegistrationsGetResponse>;
    /**
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param callback The callback
     */
    get(resourceGroup: string, registrationName: string, callback: msRest.ServiceCallback<Models.Registration>): void;
    /**
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroup: string, registrationName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Registration>): void;
    /**
     * Delete the requested Azure Stack registration.
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroup: string, registrationName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param callback The callback
     */
    deleteMethod(resourceGroup: string, registrationName: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param options The optional parameters
     * @param callback The callback
     */
    deleteMethod(resourceGroup: string, registrationName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Create or update an Azure Stack registration.
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param token Registration token
     * @param [options] The optional parameters
     * @returns Promise<Models.RegistrationsCreateOrUpdateResponse>
     */
    createOrUpdate(resourceGroup: string, registrationName: string, token: Models.RegistrationParameter, options?: msRest.RequestOptionsBase): Promise<Models.RegistrationsCreateOrUpdateResponse>;
    /**
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param token Registration token
     * @param callback The callback
     */
    createOrUpdate(resourceGroup: string, registrationName: string, token: Models.RegistrationParameter, callback: msRest.ServiceCallback<Models.Registration>): void;
    /**
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param token Registration token
     * @param options The optional parameters
     * @param callback The callback
     */
    createOrUpdate(resourceGroup: string, registrationName: string, token: Models.RegistrationParameter, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Registration>): void;
    /**
     * Patch an Azure Stack registration.
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param token Registration token
     * @param [options] The optional parameters
     * @returns Promise<Models.RegistrationsUpdateResponse>
     */
    update(resourceGroup: string, registrationName: string, token: Models.RegistrationParameter, options?: msRest.RequestOptionsBase): Promise<Models.RegistrationsUpdateResponse>;
    /**
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param token Registration token
     * @param callback The callback
     */
    update(resourceGroup: string, registrationName: string, token: Models.RegistrationParameter, callback: msRest.ServiceCallback<Models.Registration>): void;
    /**
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param token Registration token
     * @param options The optional parameters
     * @param callback The callback
     */
    update(resourceGroup: string, registrationName: string, token: Models.RegistrationParameter, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Registration>): void;
    /**
     * Returns Azure Stack Activation Key.
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param [options] The optional parameters
     * @returns Promise<Models.RegistrationsGetActivationKeyResponse>
     */
    getActivationKey(resourceGroup: string, registrationName: string, options?: msRest.RequestOptionsBase): Promise<Models.RegistrationsGetActivationKeyResponse>;
    /**
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param callback The callback
     */
    getActivationKey(resourceGroup: string, registrationName: string, callback: msRest.ServiceCallback<Models.ActivationKeyResult>): void;
    /**
     * @param resourceGroup Name of the resource group.
     * @param registrationName Name of the Azure Stack registration.
     * @param options The optional parameters
     * @param callback The callback
     */
    getActivationKey(resourceGroup: string, registrationName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ActivationKeyResult>): void;
    /**
     * Returns a list of all registrations.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.RegistrationsListNextResponse>
     */
    listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.RegistrationsListNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.RegistrationList>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.RegistrationList>): void;
}
//# sourceMappingURL=registrations.d.ts.map