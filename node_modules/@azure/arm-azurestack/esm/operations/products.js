/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/productsMappers";
import * as Parameters from "../models/parameters";
/** Class representing a Products. */
var Products = /** @class */ (function () {
    /**
     * Create a Products.
     * @param {AzureStackManagementClientContext} client Reference to the service client.
     */
    function Products(client) {
        this.client = client;
    }
    Products.prototype.list = function (resourceGroup, registrationName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroup: resourceGroup,
            registrationName: registrationName,
            options: options
        }, listOperationSpec, callback);
    };
    Products.prototype.get = function (resourceGroup, registrationName, productName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroup: resourceGroup,
            registrationName: registrationName,
            productName: productName,
            options: options
        }, getOperationSpec, callback);
    };
    Products.prototype.listDetails = function (resourceGroup, registrationName, productName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroup: resourceGroup,
            registrationName: registrationName,
            productName: productName,
            options: options
        }, listDetailsOperationSpec, callback);
    };
    Products.prototype.getProducts = function (resourceGroup, registrationName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroup: resourceGroup,
            registrationName: registrationName,
            options: options
        }, getProductsOperationSpec, callback);
    };
    Products.prototype.getProduct = function (resourceGroup, registrationName, productName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroup: resourceGroup,
            registrationName: registrationName,
            productName: productName,
            options: options
        }, getProductOperationSpec, callback);
    };
    Products.prototype.uploadLog = function (resourceGroup, registrationName, productName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroup: resourceGroup,
            registrationName: registrationName,
            productName: productName,
            options: options
        }, uploadLogOperationSpec, callback);
    };
    Products.prototype.listNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listNextOperationSpec, callback);
    };
    return Products;
}());
export { Products };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var listOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/{registrationName}/products",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroup,
        Parameters.registrationName
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.ProductList
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var getOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/{registrationName}/products/{productName}",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroup,
        Parameters.registrationName,
        Parameters.productName
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.Product
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var listDetailsOperationSpec = {
    httpMethod: "POST",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/{registrationName}/products/{productName}/listDetails",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroup,
        Parameters.registrationName,
        Parameters.productName
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.ExtendedProduct
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var getProductsOperationSpec = {
    httpMethod: "POST",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/{registrationName}/products/_all/GetProducts",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroup,
        Parameters.registrationName
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: [
            "options",
            "deviceConfiguration"
        ],
        mapper: Mappers.DeviceConfiguration
    },
    responses: {
        200: {
            bodyMapper: Mappers.ProductList
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var getProductOperationSpec = {
    httpMethod: "POST",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/{registrationName}/products/{productName}/GetProduct",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroup,
        Parameters.registrationName,
        Parameters.productName
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: [
            "options",
            "deviceConfiguration"
        ],
        mapper: Mappers.DeviceConfiguration
    },
    responses: {
        200: {
            bodyMapper: Mappers.Product
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var uploadLogOperationSpec = {
    httpMethod: "POST",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/{registrationName}/products/{productName}/uploadProductLog",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroup,
        Parameters.registrationName,
        Parameters.productName
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: [
            "options",
            "marketplaceProductLogUpdate"
        ],
        mapper: Mappers.MarketplaceProductLogUpdate
    },
    responses: {
        200: {
            bodyMapper: Mappers.ProductLog
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var listNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.ProductList
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
//# sourceMappingURL=products.js.map