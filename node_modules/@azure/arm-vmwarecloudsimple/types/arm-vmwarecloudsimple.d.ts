import * as coreAuth from '@azure/core-auth';
import * as coreClient from '@azure/core-client';
import { PagedAsyncIterableIterator } from '@azure/core-paging';
import { PollerLike } from '@azure/core-lro';
import { PollOperationState } from '@azure/core-lro';

/** Defines values for AggregationType. */
export declare type AggregationType = "Average" | "Total";

/** Resource provider available operation model */
export declare interface AvailableOperation {
    /** The list of operations */
    display?: AvailableOperationDisplay;
    /** Indicating whether the operation is a data action or not */
    isDataAction?: boolean;
    /** {resourceProviderNamespace}/{resourceType}/{read|write|delete|action} */
    name?: string;
    /** The origin of operation */
    origin?: OperationOrigin;
    /** The list of specification's service metrics */
    serviceSpecification?: AvailableOperationDisplayPropertyServiceSpecificationMetricsList;
}

/** Resource provider available operation display model */
export declare interface AvailableOperationDisplay {
    /** Description of the operation for display purposes */
    description?: string;
    /** Name of the operation for display purposes */
    operation?: string;
    /** Name of the provider for display purposes */
    provider?: string;
    /** Name of the resource type for display purposes */
    resource?: string;
}

/** Available operation display property service specification metrics item */
export declare interface AvailableOperationDisplayPropertyServiceSpecificationMetricsItem {
    /** Metric's aggregation type for e.g. (Average, Total) */
    aggregationType: AggregationType;
    /** Metric's description */
    displayDescription: string;
    /** Human readable metric's name */
    displayName: string;
    /** Metric's name/id */
    name: string;
    /** Metric's unit */
    unit: string;
}

/** List of available operation display property service specification metrics */
export declare interface AvailableOperationDisplayPropertyServiceSpecificationMetricsList {
    /** Metric specifications of operation */
    metricSpecifications?: AvailableOperationDisplayPropertyServiceSpecificationMetricsItem[];
}

/** List of available operations */
export declare interface AvailableOperationsListResponse {
    /** Link for next list of available operations */
    nextLink?: string;
    /** Returns a list of available operations */
    value?: AvailableOperation[];
}

/** General error model */
export declare interface CsrpError {
    /** Error's body */
    error?: CsrpErrorBody;
}

/** Error properties */
export declare interface CsrpErrorBody {
    /**
     * Error's code
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly code?: string;
    /**
     * Error's details
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly details?: CsrpErrorBody[];
    /**
     * Error's message
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly message?: string;
    /** Error's target */
    target?: string;
}

/** Host name model */
export declare interface CustomizationHostName {
    /** Hostname */
    name?: string;
    /** Type of host name */
    type?: CustomizationHostNameType;
}

/**
 * Defines values for CustomizationHostNameType. \
 * {@link KnownCustomizationHostNameType} can be used interchangeably with CustomizationHostNameType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **USER_DEFINED** \
 * **PREFIX_BASED** \
 * **FIXED** \
 * **VIRTUAL_MACHINE_NAME** \
 * **CUSTOM_NAME**
 */
export declare type CustomizationHostNameType = string;

export declare interface CustomizationIdentity {
    /** Windows Text Identity. Prepared data */
    data?: string;
    /** Virtual machine host name settings */
    hostName?: CustomizationHostName;
    /** Identity type */
    type?: CustomizationIdentityType;
    /** Windows Identity. User data customization */
    userData?: CustomizationIdentityUserData;
}

/**
 * Defines values for CustomizationIdentityType. \
 * {@link KnownCustomizationIdentityType} can be used interchangeably with CustomizationIdentityType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **WINDOWS_TEXT** \
 * **WINDOWS** \
 * **LINUX**
 */
export declare type CustomizationIdentityType = string;

/** Windows Identity. User data customization */
export declare interface CustomizationIdentityUserData {
    /** Is password predefined in customization policy */
    isPasswordPredefined?: boolean;
}

export declare interface CustomizationIPAddress {
    /** Argument when Custom ip type is selected */
    argument?: string;
    /** Defined Ip Address when Fixed ip type is selected */
    ipAddress?: string;
    /** Customization Specification ip type */
    type?: CustomizationIPAddressType;
}

/**
 * Defines values for CustomizationIPAddressType. \
 * {@link KnownCustomizationIPAddressType} can be used interchangeably with CustomizationIPAddressType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **CUSTOM** \
 * **DHCP_IP** \
 * **FIXED_IP** \
 * **USER_DEFINED**
 */
export declare type CustomizationIPAddressType = string;

export declare interface CustomizationIPSettings {
    /** The list of gateways */
    gateway?: string[];
    /** Ip address customization settings */
    ip?: CustomizationIPAddress;
    /** Adapter subnet mask */
    subnetMask?: string;
}

export declare interface CustomizationNicSetting {
    /** The list of adapters' settings */
    adapter?: CustomizationIPSettings;
    /** NIC mac address */
    macAddress?: string;
}

/** Interface representing a CustomizationPolicies. */
export declare interface CustomizationPolicies {
    /**
     * Returns list of customization policies in region for private cloud
     * @param regionId The region Id (westus, eastus)
     * @param pcName The private cloud name
     * @param options The options parameters.
     */
    list(regionId: string, pcName: string, options?: CustomizationPoliciesListOptionalParams): PagedAsyncIterableIterator<CustomizationPolicy>;
    /**
     * Returns customization policy by its name
     * @param regionId The region Id (westus, eastus)
     * @param pcName The private cloud name
     * @param customizationPolicyName customization policy name
     * @param options The options parameters.
     */
    get(regionId: string, pcName: string, customizationPolicyName: string, options?: CustomizationPoliciesGetOptionalParams): Promise<CustomizationPoliciesGetResponse>;
}

/** Optional parameters. */
export declare interface CustomizationPoliciesGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type CustomizationPoliciesGetResponse = CustomizationPolicy;

/** Optional parameters. */
export declare interface CustomizationPoliciesListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type CustomizationPoliciesListNextResponse = CustomizationPoliciesListResponse;

/** Contains response data for the list operation. */
export declare type CustomizationPoliciesListOperationResponse = CustomizationPoliciesListResponse;

/** Optional parameters. */
export declare interface CustomizationPoliciesListOptionalParams extends coreClient.OperationOptions {
    /** The filter to apply on the list operation. only type is allowed here as a filter e.g. $filter=type eq 'xxxx' */
    filter?: string;
}

/** List of customization polices response model */
export declare interface CustomizationPoliciesListResponse {
    /** Link for next list of the Customization policy */
    nextLink?: string;
    /** List of the customization policies */
    value?: CustomizationPolicy[];
}

/** The virtual machine customization policy */
export declare interface CustomizationPolicy {
    /** Customization policy azure id */
    id?: string;
    /** Azure region */
    location?: string;
    /**
     * Customization policy name
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly type?: string;
    /** Policy description */
    description?: string;
    /** The Private cloud id */
    privateCloudId?: string;
    /** Detailed customization policy specification */
    specification?: CustomizationSpecification;
    /** The type of customization (Linux or Windows) */
    typePropertiesType?: CustomizationPolicyPropertiesType;
    /** Policy version */
    version?: string;
}

/**
 * Defines values for CustomizationPolicyPropertiesType. \
 * {@link KnownCustomizationPolicyPropertiesType} can be used interchangeably with CustomizationPolicyPropertiesType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **LINUX** \
 * **WINDOWS**
 */
export declare type CustomizationPolicyPropertiesType = string;

/** The specification for Customization Policy */
export declare interface CustomizationSpecification {
    /** Customization Identity. It contains data about user and hostname */
    identity?: CustomizationIdentity;
    /** Network interface settings */
    nicSettings?: CustomizationNicSetting[];
}

/** Dedicated cloud node model */
export declare interface DedicatedCloudNode {
    /**
     * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/dedicatedCloudNodes/{dedicatedCloudNodeName}
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /** Azure region */
    location: string;
    /**
     * {dedicatedCloudNodeName}
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /** Dedicated Cloud Nodes SKU */
    sku?: Sku;
    /** Dedicated Cloud Nodes tags */
    tags?: {
        [propertyName: string]: string;
    };
    /**
     * {resourceProviderNamespace}/{resourceType}
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /** Availability Zone id, e.g. "az1" */
    availabilityZoneId?: string;
    /**
     * Availability Zone name, e.g. "Availability Zone 1"
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly availabilityZoneName?: string;
    /**
     * VMWare Cloud Rack Name
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly cloudRackName?: string;
    /**
     * date time the resource was created
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly created?: Date;
    /** count of nodes to create */
    nodesCount?: number;
    /** Placement Group id, e.g. "n1" */
    placementGroupId?: string;
    /**
     * Placement Name, e.g. "Placement Group 1"
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly placementGroupName?: string;
    /**
     * Private Cloud Id
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly privateCloudId?: string;
    /**
     * Resource Pool Name
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly privateCloudName?: string;
    /**
     * The provisioning status of the resource
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: string;
    /** purchase id */
    purchaseId?: string;
    /**
     * Node status, indicates is private cloud set up on this node or not
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly status?: NodeStatus;
    /**
     * VMWare Cluster Name
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly vmwareClusterName?: string;
    /** SKU's id */
    idPropertiesSkuDescriptionId?: string;
    /** SKU's name */
    namePropertiesSkuDescriptionName?: string;
}

/** List of dedicated nodes response model */
export declare interface DedicatedCloudNodeListResponse {
    /** Link for next list of DedicatedCloudNode */
    nextLink?: string;
    /** Results of the DedicatedCloudNode list */
    value?: DedicatedCloudNode[];
}

/** Interface representing a DedicatedCloudNodes. */
export declare interface DedicatedCloudNodes {
    /**
     * Returns list of dedicate cloud nodes within subscription
     * @param options The options parameters.
     */
    listBySubscription(options?: DedicatedCloudNodesListBySubscriptionOptionalParams): PagedAsyncIterableIterator<DedicatedCloudNode>;
    /**
     * Returns list of dedicate cloud nodes within resource group
     * @param resourceGroupName The name of the resource group
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: DedicatedCloudNodesListByResourceGroupOptionalParams): PagedAsyncIterableIterator<DedicatedCloudNode>;
    /**
     * Returns dedicated cloud node
     * @param resourceGroupName The name of the resource group
     * @param dedicatedCloudNodeName dedicated cloud node name
     * @param options The options parameters.
     */
    get(resourceGroupName: string, dedicatedCloudNodeName: string, options?: DedicatedCloudNodesGetOptionalParams): Promise<DedicatedCloudNodesGetResponse>;
    /**
     * Returns dedicated cloud node by its name
     * @param resourceGroupName The name of the resource group
     * @param referer referer url
     * @param dedicatedCloudNodeName dedicated cloud node name
     * @param dedicatedCloudNodeRequest Create Dedicated Cloud Node request
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, referer: string, dedicatedCloudNodeName: string, dedicatedCloudNodeRequest: DedicatedCloudNode, options?: DedicatedCloudNodesCreateOrUpdateOptionalParams): Promise<PollerLike<PollOperationState<DedicatedCloudNodesCreateOrUpdateResponse>, DedicatedCloudNodesCreateOrUpdateResponse>>;
    /**
     * Returns dedicated cloud node by its name
     * @param resourceGroupName The name of the resource group
     * @param referer referer url
     * @param dedicatedCloudNodeName dedicated cloud node name
     * @param dedicatedCloudNodeRequest Create Dedicated Cloud Node request
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, referer: string, dedicatedCloudNodeName: string, dedicatedCloudNodeRequest: DedicatedCloudNode, options?: DedicatedCloudNodesCreateOrUpdateOptionalParams): Promise<DedicatedCloudNodesCreateOrUpdateResponse>;
    /**
     * Delete dedicated cloud node
     * @param resourceGroupName The name of the resource group
     * @param dedicatedCloudNodeName dedicated cloud node name
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, dedicatedCloudNodeName: string, options?: DedicatedCloudNodesDeleteOptionalParams): Promise<void>;
    /**
     * Patches dedicated node properties
     * @param resourceGroupName The name of the resource group
     * @param dedicatedCloudNodeName dedicated cloud node name
     * @param dedicatedCloudNodeRequest Patch Dedicated Cloud Node request
     * @param options The options parameters.
     */
    update(resourceGroupName: string, dedicatedCloudNodeName: string, dedicatedCloudNodeRequest: PatchPayload, options?: DedicatedCloudNodesUpdateOptionalParams): Promise<DedicatedCloudNodesUpdateResponse>;
}

/** Defines headers for DedicatedCloudNodes_createOrUpdate operation. */
export declare interface DedicatedCloudNodesCreateOrUpdateHeaders {
    azureAsyncOperation?: string;
    location?: string;
    retryAfter?: number;
}

/** Optional parameters. */
export declare interface DedicatedCloudNodesCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export declare type DedicatedCloudNodesCreateOrUpdateResponse = DedicatedCloudNodesCreateOrUpdateHeaders & DedicatedCloudNode;

/** Defines headers for DedicatedCloudNodes_delete operation. */
export declare interface DedicatedCloudNodesDeleteExceptionHeaders {
    contentType?: string;
}

/** Optional parameters. */
export declare interface DedicatedCloudNodesDeleteOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface DedicatedCloudNodesGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type DedicatedCloudNodesGetResponse = DedicatedCloudNode;

/** Optional parameters. */
export declare interface DedicatedCloudNodesListByResourceGroupNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroupNext operation. */
export declare type DedicatedCloudNodesListByResourceGroupNextResponse = DedicatedCloudNodeListResponse;

/** Optional parameters. */
export declare interface DedicatedCloudNodesListByResourceGroupOptionalParams extends coreClient.OperationOptions {
    /** The filter to apply on the list operation */
    filter?: string;
    /** The maximum number of record sets to return */
    top?: number;
    /** to be used by nextLink implementation */
    skipToken?: string;
}

/** Contains response data for the listByResourceGroup operation. */
export declare type DedicatedCloudNodesListByResourceGroupResponse = DedicatedCloudNodeListResponse;

/** Optional parameters. */
export declare interface DedicatedCloudNodesListBySubscriptionNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listBySubscriptionNext operation. */
export declare type DedicatedCloudNodesListBySubscriptionNextResponse = DedicatedCloudNodeListResponse;

/** Optional parameters. */
export declare interface DedicatedCloudNodesListBySubscriptionOptionalParams extends coreClient.OperationOptions {
    /** The filter to apply on the list operation */
    filter?: string;
    /** The maximum number of record sets to return */
    top?: number;
    /** to be used by nextLink implementation */
    skipToken?: string;
}

/** Contains response data for the listBySubscription operation. */
export declare type DedicatedCloudNodesListBySubscriptionResponse = DedicatedCloudNodeListResponse;

/** Optional parameters. */
export declare interface DedicatedCloudNodesUpdateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the update operation. */
export declare type DedicatedCloudNodesUpdateResponse = DedicatedCloudNode;

/** Dedicated cloud service model */
export declare interface DedicatedCloudService {
    /**
     * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/dedicatedCloudServices/{dedicatedCloudServiceName}
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /** Azure region */
    location: string;
    /**
     * {dedicatedCloudServiceName}
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /** The list of tags */
    tags?: {
        [propertyName: string]: string;
    };
    /**
     * {resourceProviderNamespace}/{resourceType}
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /** gateway Subnet for the account. It will collect the subnet address and always treat it as /28 */
    gatewaySubnet?: string;
    /**
     * indicates whether account onboarded or not in a given region
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly isAccountOnboarded?: OnboardingStatus;
    /**
     * total nodes purchased
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nodes?: number;
    /**
     * link to a service management web portal
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly serviceURL?: string;
}

/** List of dedicated cloud services */
export declare interface DedicatedCloudServiceListResponse {
    /** Link for next list of DedicatedCloudNode */
    nextLink?: string;
    /** Results of the DedicatedCloudService list */
    value?: DedicatedCloudService[];
}

/** Interface representing a DedicatedCloudServices. */
export declare interface DedicatedCloudServices {
    /**
     * Returns list of dedicated cloud services within a subscription
     * @param options The options parameters.
     */
    listBySubscription(options?: DedicatedCloudServicesListBySubscriptionOptionalParams): PagedAsyncIterableIterator<DedicatedCloudService>;
    /**
     * Returns list of dedicated cloud services within a resource group
     * @param resourceGroupName The name of the resource group
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: DedicatedCloudServicesListByResourceGroupOptionalParams): PagedAsyncIterableIterator<DedicatedCloudService>;
    /**
     * Returns Dedicate Cloud Service
     * @param resourceGroupName The name of the resource group
     * @param dedicatedCloudServiceName dedicated cloud Service name
     * @param options The options parameters.
     */
    get(resourceGroupName: string, dedicatedCloudServiceName: string, options?: DedicatedCloudServicesGetOptionalParams): Promise<DedicatedCloudServicesGetResponse>;
    /**
     * Create dedicate cloud service
     * @param resourceGroupName The name of the resource group
     * @param dedicatedCloudServiceName dedicated cloud Service name
     * @param dedicatedCloudServiceRequest Create Dedicated Cloud Service request
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, dedicatedCloudServiceName: string, dedicatedCloudServiceRequest: DedicatedCloudService, options?: DedicatedCloudServicesCreateOrUpdateOptionalParams): Promise<DedicatedCloudServicesCreateOrUpdateResponse>;
    /**
     * Delete dedicate cloud service
     * @param resourceGroupName The name of the resource group
     * @param dedicatedCloudServiceName dedicated cloud service name
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, dedicatedCloudServiceName: string, options?: DedicatedCloudServicesDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Delete dedicate cloud service
     * @param resourceGroupName The name of the resource group
     * @param dedicatedCloudServiceName dedicated cloud service name
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, dedicatedCloudServiceName: string, options?: DedicatedCloudServicesDeleteOptionalParams): Promise<void>;
    /**
     * Patch dedicated cloud service's properties
     * @param resourceGroupName The name of the resource group
     * @param dedicatedCloudServiceName dedicated cloud service name
     * @param dedicatedCloudServiceRequest Patch Dedicated Cloud Service request
     * @param options The options parameters.
     */
    update(resourceGroupName: string, dedicatedCloudServiceName: string, dedicatedCloudServiceRequest: PatchPayload, options?: DedicatedCloudServicesUpdateOptionalParams): Promise<DedicatedCloudServicesUpdateResponse>;
}

/** Optional parameters. */
export declare interface DedicatedCloudServicesCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the createOrUpdate operation. */
export declare type DedicatedCloudServicesCreateOrUpdateResponse = DedicatedCloudService;

/** Defines headers for DedicatedCloudServices_delete operation. */
export declare interface DedicatedCloudServicesDeleteExceptionHeaders {
    contentType?: string;
}

/** Optional parameters. */
export declare interface DedicatedCloudServicesDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface DedicatedCloudServicesGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type DedicatedCloudServicesGetResponse = DedicatedCloudService;

/** Optional parameters. */
export declare interface DedicatedCloudServicesListByResourceGroupNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroupNext operation. */
export declare type DedicatedCloudServicesListByResourceGroupNextResponse = DedicatedCloudServiceListResponse;

/** Optional parameters. */
export declare interface DedicatedCloudServicesListByResourceGroupOptionalParams extends coreClient.OperationOptions {
    /** The filter to apply on the list operation */
    filter?: string;
    /** The maximum number of record sets to return */
    top?: number;
    /** to be used by nextLink implementation */
    skipToken?: string;
}

/** Contains response data for the listByResourceGroup operation. */
export declare type DedicatedCloudServicesListByResourceGroupResponse = DedicatedCloudServiceListResponse;

/** Optional parameters. */
export declare interface DedicatedCloudServicesListBySubscriptionNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listBySubscriptionNext operation. */
export declare type DedicatedCloudServicesListBySubscriptionNextResponse = DedicatedCloudServiceListResponse;

/** Optional parameters. */
export declare interface DedicatedCloudServicesListBySubscriptionOptionalParams extends coreClient.OperationOptions {
    /** The filter to apply on the list operation */
    filter?: string;
    /** The maximum number of record sets to return */
    top?: number;
    /** to be used by nextLink implementation */
    skipToken?: string;
}

/** Contains response data for the listBySubscription operation. */
export declare type DedicatedCloudServicesListBySubscriptionResponse = DedicatedCloudServiceListResponse;

/** Optional parameters. */
export declare interface DedicatedCloudServicesUpdateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the update operation. */
export declare type DedicatedCloudServicesUpdateResponse = DedicatedCloudService;

/** Defines values for DiskIndependenceMode. */
export declare type DiskIndependenceMode = "persistent" | "independent_persistent" | "independent_nonpersistent";

/**
 * Given the last `.value` produced by the `byPage` iterator,
 * returns a continuation token that can be used to begin paging from
 * that point later.
 * @param page An object from accessing `value` on the IteratorResult from a `byPage` iterator.
 * @returns The continuation token that can be passed into byPage() during future calls.
 */
export declare function getContinuationToken(page: unknown): string | undefined;

/** Guest OS Customization properties */
export declare interface GuestOSCustomization {
    /** List of dns servers to use */
    dnsServers?: string[];
    /** Virtual Machine hostname */
    hostName?: string;
    /** Password for login */
    password?: string;
    /** id of customization policy */
    policyId?: string;
    /** Username for login */
    username?: string;
}

/** Guest OS nic customization */
export declare interface GuestOsnicCustomization {
    /** IP address allocation method */
    allocation?: GuestOsnicCustomizationAllocation;
    /** List of dns servers to use */
    dnsServers?: string[];
    /** Gateway addresses assigned to nic */
    gateway?: string[];
    /** Static ip address for nic */
    ipAddress?: string;
    /** Network mask for nic */
    mask?: string;
    /** primary WINS server for Windows */
    primaryWinsServer?: string;
    /** secondary WINS server for Windows */
    secondaryWinsServer?: string;
}

/**
 * Defines values for GuestOsnicCustomizationAllocation. \
 * {@link KnownGuestOsnicCustomizationAllocation} can be used interchangeably with GuestOsnicCustomizationAllocation,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **static** \
 * **dynamic**
 */
export declare type GuestOsnicCustomizationAllocation = string;

/** Defines values for GuestOSType. */
export declare type GuestOSType = "linux" | "windows" | "other";

/** Known values of {@link CustomizationHostNameType} that the service accepts. */
export declare enum KnownCustomizationHostNameType {
    /** UserDefined */
    UserDefined = "USER_DEFINED",
    /** PrefixBased */
    PrefixBased = "PREFIX_BASED",
    /** Fixed */
    Fixed = "FIXED",
    /** VirtualMachineName */
    VirtualMachineName = "VIRTUAL_MACHINE_NAME",
    /** CustomName */
    CustomName = "CUSTOM_NAME"
}

/** Known values of {@link CustomizationIdentityType} that the service accepts. */
export declare enum KnownCustomizationIdentityType {
    /** WindowsText */
    WindowsText = "WINDOWS_TEXT",
    /** Windows */
    Windows = "WINDOWS",
    /** Linux */
    Linux = "LINUX"
}

/** Known values of {@link CustomizationIPAddressType} that the service accepts. */
export declare enum KnownCustomizationIPAddressType {
    /** Custom */
    Custom = "CUSTOM",
    /** DhcpIP */
    DhcpIP = "DHCP_IP",
    /** FixedIP */
    FixedIP = "FIXED_IP",
    /** UserDefined */
    UserDefined = "USER_DEFINED"
}

/** Known values of {@link CustomizationPolicyPropertiesType} that the service accepts. */
export declare enum KnownCustomizationPolicyPropertiesType {
    /** Linux */
    Linux = "LINUX",
    /** Windows */
    Windows = "WINDOWS"
}

/** Known values of {@link GuestOsnicCustomizationAllocation} that the service accepts. */
export declare enum KnownGuestOsnicCustomizationAllocation {
    /** Static */
    Static = "static",
    /** Dynamic */
    Dynamic = "dynamic"
}

/** Defines values for NICType. */
export declare type NICType = "E1000" | "E1000E" | "PCNET32" | "VMXNET" | "VMXNET2" | "VMXNET3";

/** Defines values for NodeStatus. */
export declare type NodeStatus = "unused" | "used";

/** Defines values for OnboardingStatus. */
export declare type OnboardingStatus = "notOnBoarded" | "onBoarded" | "onBoardingFailed" | "onBoarding";

/** Operation error model */
export declare interface OperationError {
    /** Error's code */
    code?: string;
    /** Error's message */
    message?: string;
}

/** Defines values for OperationOrigin. */
export declare type OperationOrigin = "user" | "system" | "user,system";

/** Operation status response */
export declare interface OperationResource {
    /**
     * End time of the operation
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly endTime?: Date;
    /** Error Message if operation failed */
    error?: OperationError;
    /**
     * Operation Id
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /**
     * Operation ID
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * Start time of the operation
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly startTime?: Date;
    /**
     * Operation status
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly status?: string;
}

/** Interface representing a Operations. */
export declare interface Operations {
    /**
     * Return list of operations
     * @param options The options parameters.
     */
    list(options?: OperationsListOptionalParams): PagedAsyncIterableIterator<AvailableOperation>;
    /**
     * Return an async operation
     * @param regionId The region Id (westus, eastus)
     * @param referer referer url
     * @param operationId operation id
     * @param options The options parameters.
     */
    get(regionId: string, referer: string, operationId: string, options?: OperationsGetOptionalParams): Promise<OperationsGetResponse>;
}

/** Defines headers for Operations_get operation. */
export declare interface OperationsGetExceptionHeaders {
    contentType?: string;
}

/** Defines headers for Operations_get operation. */
export declare interface OperationsGetHeaders {
    location?: string;
    retryAfter?: number;
}

/** Optional parameters. */
export declare interface OperationsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type OperationsGetResponse = OperationResource;

/** Optional parameters. */
export declare interface OperationsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type OperationsListNextResponse = AvailableOperationsListResponse;

/** Optional parameters. */
export declare interface OperationsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type OperationsListResponse = AvailableOperationsListResponse;

/** General patch payload modal */
export declare interface PatchPayload {
    /** The tags key:value pairs */
    tags?: {
        [propertyName: string]: string;
    };
}

/** Private cloud model */
export declare interface PrivateCloud {
    /** Azure Id, e.g. "/subscriptions/4da99247-a172-4ed6-8ae9-ebed2d12f839/providers/Microsoft.VMwareCloudSimple/privateClouds/cloud123" */
    id?: string;
    /** Location where private cloud created, e.g "westus" */
    location?: string;
    /** Private cloud name */
    name?: string;
    /** Azure Resource type */
    type?: "Microsoft.VMwareCloudSimple/privateClouds";
    /** Availability Zone id, e.g. "az1" */
    availabilityZoneId?: string;
    /** Availability Zone name, e.g. "Availability Zone 1" */
    availabilityZoneName?: string;
    /** Number of clusters */
    clustersNumber?: number;
    /** User's emails who created cloud */
    createdBy?: string;
    /** When private cloud was created */
    createdOn?: Date;
    /** Array of DNS servers */
    dnsServers?: string[];
    /** Expiration date of PC */
    expires?: string;
    /** Nsx Type, e.g. "Advanced" */
    nsxType?: string;
    /** Placement Group id, e.g. "n1" */
    placementGroupId?: string;
    /** Placement Group name */
    placementGroupName?: string;
    /** Id of a private cloud */
    privateCloudId?: string;
    /** The list of Resource Pools */
    resourcePools?: ResourcePool[];
    /** Private Cloud state, e.g. "operational" */
    state?: string;
    /** Number of cores */
    totalCpuCores?: number;
    /** Number of nodes */
    totalNodes?: number;
    /** Memory size */
    totalRam?: number;
    /** Disk space in TB */
    totalStorage?: number;
    /** Virtualization type e.g. "vSphere" */
    typePropertiesType?: string;
    /** e.g. "6.5u2" */
    vSphereVersion?: string;
    /** FQDN for vcenter access */
    vcenterFqdn?: string;
    /** Vcenter ip address */
    vcenterRefid?: string;
    /** The list of Virtual Machine Templates */
    virtualMachineTemplates?: VirtualMachineTemplate[];
    /** The list of Virtual Networks */
    virtualNetworks?: VirtualNetwork[];
    /** Is Vrops enabled/disabled */
    vrOpsEnabled?: boolean;
}

/** List of private clouds */
export declare interface PrivateCloudList {
    /** Link for next list of Private Clouds */
    nextLink?: string;
    /** the list of private clouds */
    value?: PrivateCloud[];
}

/** Interface representing a PrivateClouds. */
export declare interface PrivateClouds {
    /**
     * Returns list of private clouds in particular region
     * @param regionId The region Id (westus, eastus)
     * @param options The options parameters.
     */
    list(regionId: string, options?: PrivateCloudsListOptionalParams): PagedAsyncIterableIterator<PrivateCloud>;
    /**
     * Returns private cloud by its name
     * @param pcName The private cloud name
     * @param regionId The region Id (westus, eastus)
     * @param options The options parameters.
     */
    get(pcName: string, regionId: string, options?: PrivateCloudsGetOptionalParams): Promise<PrivateCloudsGetResponse>;
}

/** Optional parameters. */
export declare interface PrivateCloudsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type PrivateCloudsGetResponse = PrivateCloud;

/** Optional parameters. */
export declare interface PrivateCloudsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type PrivateCloudsListNextResponse = PrivateCloudList;

/** Optional parameters. */
export declare interface PrivateCloudsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type PrivateCloudsListResponse = PrivateCloudList;

/** Resource pool model */
export declare interface ResourcePool {
    /** resource pool id (privateCloudId:vsphereId) */
    id: string;
    /**
     * Azure region
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly location?: string;
    /**
     * {ResourcePoolName}
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * The Private Cloud Id
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly privateCloudId?: string;
    /**
     * {resourceProviderNamespace}/{resourceType}
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /**
     * Hierarchical resource pool name
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly fullName?: string;
}

/** Interface representing a ResourcePools. */
export declare interface ResourcePools {
    /**
     * Returns list of resource pools in region for private cloud
     * @param regionId The region Id (westus, eastus)
     * @param pcName The private cloud name
     * @param options The options parameters.
     */
    list(regionId: string, pcName: string, options?: ResourcePoolsListOptionalParams): PagedAsyncIterableIterator<ResourcePool>;
    /**
     * Returns resource pool templates by its name
     * @param regionId The region Id (westus, eastus)
     * @param pcName The private cloud name
     * @param resourcePoolName resource pool id (vsphereId)
     * @param options The options parameters.
     */
    get(regionId: string, pcName: string, resourcePoolName: string, options?: ResourcePoolsGetOptionalParams): Promise<ResourcePoolsGetResponse>;
}

/** Optional parameters. */
export declare interface ResourcePoolsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type ResourcePoolsGetResponse = ResourcePool;

/** Optional parameters. */
export declare interface ResourcePoolsListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type ResourcePoolsListNextResponse = ResourcePoolsListResponse;

/** Contains response data for the list operation. */
export declare type ResourcePoolsListOperationResponse = ResourcePoolsListResponse;

/** Optional parameters. */
export declare interface ResourcePoolsListOptionalParams extends coreClient.OperationOptions {
}

/** List of resource pools response model */
export declare interface ResourcePoolsListResponse {
    /** Link for next list of ResourcePoolsList */
    nextLink?: string;
    /** Results of the Resource pools list */
    value?: ResourcePool[];
}

/** The purchase SKU for CloudSimple paid resources */
export declare interface Sku {
    /** The capacity of the SKU */
    capacity?: string;
    /** dedicatedCloudNode example: 8 x Ten-Core Intel® Xeon® Processor E5-2640 v4 2.40GHz 25MB Cache (90W); 12 x 64GB PC4-19200 2400MHz DDR4 ECC Registered DIMM, ... */
    description?: string;
    /** If the service has different generations of hardware, for the same SKU, then that can be captured here */
    family?: string;
    /** The name of the SKU for VMWare CloudSimple Node */
    name: string;
    /** The tier of the SKU */
    tier?: string;
}

/** SKU availability model */
export declare interface SkuAvailability {
    /** CloudSimple Availability Zone id */
    dedicatedAvailabilityZoneId?: string;
    /** CloudSimple Availability Zone Name */
    dedicatedAvailabilityZoneName?: string;
    /** CloudSimple Placement Group Id */
    dedicatedPlacementGroupId?: string;
    /** CloudSimple Placement Group name */
    dedicatedPlacementGroupName?: string;
    /** indicates how many resources of a given SKU is available in a AZ->PG */
    limit: number;
    /** resource type e.g. DedicatedCloudNodes */
    resourceType?: string;
    /** sku id */
    skuId?: string;
    /** sku name */
    skuName?: string;
}

/** List of SKU availabilities */
export declare interface SkuAvailabilityListResponse {
    /** Link for next list of DedicatedCloudNode */
    nextLink?: string;
    /** Results of the DedicatedPlacementGroupSkuAvailability list */
    value?: SkuAvailability[];
}

/** Interface representing a SkusAvailability. */
export declare interface SkusAvailability {
    /**
     * Returns list of available resources in region
     * @param regionId The region Id (westus, eastus)
     * @param options The options parameters.
     */
    list(regionId: string, options?: SkusAvailabilityListOptionalParams): PagedAsyncIterableIterator<SkuAvailability>;
}

/** Optional parameters. */
export declare interface SkusAvailabilityListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type SkusAvailabilityListNextResponse = SkuAvailabilityListResponse;

/** Optional parameters. */
export declare interface SkusAvailabilityListOptionalParams extends coreClient.OperationOptions {
    /** sku id, if no sku is passed availability for all skus will be returned */
    skuId?: string;
}

/** Contains response data for the list operation. */
export declare type SkusAvailabilityListResponse = SkuAvailabilityListResponse;

/** Defines values for StopMode. */
export declare type StopMode = "reboot" | "suspend" | "shutdown" | "poweroff";

/** Usage model */
export declare interface Usage {
    /** The current usage value */
    currentValue: number;
    /** limit of a given sku in a region for a subscription. The maximum permitted value for the usage quota. If there is no limit, this value will be -1 */
    limit: number;
    /** Usage name value and localized name */
    name?: UsageName;
    /** The usages' unit */
    unit?: UsageCount;
}

/** Defines values for UsageCount. */
export declare type UsageCount = "Count" | "Bytes" | "Seconds" | "Percent" | "CountPerSecond" | "BytesPerSecond";

/** List of usages */
export declare interface UsageListResponse {
    /** Link for next list of DedicatedCloudNode */
    nextLink?: string;
    /**
     * The list of usages
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: Usage[];
}

/** User name model */
export declare interface UsageName {
    /** e.g. "Virtual Machines" */
    localizedValue?: string;
    /** resource type or resource type sku name, e.g. virtualMachines */
    value?: string;
}

/** Interface representing a Usages. */
export declare interface Usages {
    /**
     * Returns list of usage in region
     * @param regionId The region Id (westus, eastus)
     * @param options The options parameters.
     */
    list(regionId: string, options?: UsagesListOptionalParams): PagedAsyncIterableIterator<Usage>;
}

/** Optional parameters. */
export declare interface UsagesListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type UsagesListNextResponse = UsageListResponse;

/** Optional parameters. */
export declare interface UsagesListOptionalParams extends coreClient.OperationOptions {
    /** The filter to apply on the list operation. only name.value is allowed here as a filter e.g. $filter=name.value eq 'xxxx' */
    filter?: string;
}

/** Contains response data for the list operation. */
export declare type UsagesListResponse = UsageListResponse;

/** Virtual disk model */
export declare interface VirtualDisk {
    /** Disk's Controller id */
    controllerId: string;
    /** Disk's independence mode type */
    independenceMode: DiskIndependenceMode;
    /** Disk's total size */
    totalSize: number;
    /** Disk's id */
    virtualDiskId?: string;
    /**
     * Disk's display name
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly virtualDiskName?: string;
}

/** Virtual disk controller model */
export declare interface VirtualDiskController {
    /**
     * Controller's id
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /**
     * The display name of Controller
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * dik controller subtype (VMWARE_PARAVIRTUAL, BUS_PARALLEL, LSI_PARALLEL, LSI_SAS)
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly subType?: string;
    /**
     * disk controller type (SCSI)
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
}

/** Virtual machine model */
export declare interface VirtualMachine {
    /**
     * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/virtualMachines/{virtualMachineName}
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /** Azure region */
    location: string;
    /**
     * {virtualMachineName}
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /** The list of tags */
    tags?: {
        [propertyName: string]: string;
    };
    /**
     * {resourceProviderNamespace}/{resourceType}
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /** The amount of memory */
    amountOfRam?: number;
    /**
     * The list of Virtual Disks' Controllers
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly controllers?: VirtualDiskController[];
    /** Virtual machine properties */
    customization?: GuestOSCustomization;
    /** The list of Virtual Disks */
    disks?: VirtualDisk[];
    /**
     * The DNS name of Virtual Machine in VCenter
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly dnsname?: string;
    /** Expose Guest OS or not */
    exposeToGuestVM?: boolean;
    /**
     * The path to virtual machine folder in VCenter
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly folder?: string;
    /**
     * The name of Guest OS
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly guestOS?: string;
    /**
     * The Guest OS type
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly guestOSType?: GuestOSType;
    /** The list of Virtual NICs */
    nics?: VirtualNic[];
    /** The number of CPU cores */
    numberOfCores?: number;
    /** Password for login. Deprecated - use customization property */
    password?: string;
    /** Private Cloud Id */
    privateCloudId?: string;
    /**
     * The provisioning status of the resource
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: string;
    /**
     * The public ip of Virtual Machine
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly publicIP?: string;
    /** Virtual Machines Resource Pool */
    resourcePool?: ResourcePool;
    /**
     * The status of Virtual machine
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly status?: VirtualMachineStatus;
    /** Virtual Machine Template Id */
    templateId?: string;
    /** Username for login. Deprecated - use customization property */
    username?: string;
    /** The list of Virtual VSphere Networks */
    vSphereNetworks?: string[];
    /**
     * The internal id of Virtual Machine in VCenter
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly vmId?: string;
    /**
     * VMware tools version
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly vmwaretools?: string;
}

/** List of virtual machines */
export declare interface VirtualMachineListResponse {
    /** Link for next list of VirtualMachines */
    nextLink?: string;
    /** Results of the VirtualMachine list */
    value?: VirtualMachine[];
}

/** Interface representing a VirtualMachines. */
export declare interface VirtualMachines {
    /**
     * Returns list virtual machine within subscription
     * @param options The options parameters.
     */
    listBySubscription(options?: VirtualMachinesListBySubscriptionOptionalParams): PagedAsyncIterableIterator<VirtualMachine>;
    /**
     * Returns list of virtual machine within resource group
     * @param resourceGroupName The name of the resource group
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: VirtualMachinesListByResourceGroupOptionalParams): PagedAsyncIterableIterator<VirtualMachine>;
    /**
     * Get virtual machine
     * @param resourceGroupName The name of the resource group
     * @param virtualMachineName virtual machine name
     * @param options The options parameters.
     */
    get(resourceGroupName: string, virtualMachineName: string, options?: VirtualMachinesGetOptionalParams): Promise<VirtualMachinesGetResponse>;
    /**
     * Create Or Update Virtual Machine
     * @param resourceGroupName The name of the resource group
     * @param referer referer url
     * @param virtualMachineName virtual machine name
     * @param virtualMachineRequest Create or Update Virtual Machine request
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, referer: string, virtualMachineName: string, virtualMachineRequest: VirtualMachine, options?: VirtualMachinesCreateOrUpdateOptionalParams): Promise<PollerLike<PollOperationState<VirtualMachinesCreateOrUpdateResponse>, VirtualMachinesCreateOrUpdateResponse>>;
    /**
     * Create Or Update Virtual Machine
     * @param resourceGroupName The name of the resource group
     * @param referer referer url
     * @param virtualMachineName virtual machine name
     * @param virtualMachineRequest Create or Update Virtual Machine request
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, referer: string, virtualMachineName: string, virtualMachineRequest: VirtualMachine, options?: VirtualMachinesCreateOrUpdateOptionalParams): Promise<VirtualMachinesCreateOrUpdateResponse>;
    /**
     * Delete virtual machine
     * @param resourceGroupName The name of the resource group
     * @param referer referer url
     * @param virtualMachineName virtual machine name
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, referer: string, virtualMachineName: string, options?: VirtualMachinesDeleteOptionalParams): Promise<PollerLike<PollOperationState<VirtualMachinesDeleteResponse>, VirtualMachinesDeleteResponse>>;
    /**
     * Delete virtual machine
     * @param resourceGroupName The name of the resource group
     * @param referer referer url
     * @param virtualMachineName virtual machine name
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, referer: string, virtualMachineName: string, options?: VirtualMachinesDeleteOptionalParams): Promise<VirtualMachinesDeleteResponse>;
    /**
     * Patch virtual machine properties
     * @param resourceGroupName The name of the resource group
     * @param virtualMachineName virtual machine name
     * @param virtualMachineRequest Patch virtual machine request
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, virtualMachineName: string, virtualMachineRequest: PatchPayload, options?: VirtualMachinesUpdateOptionalParams): Promise<PollerLike<PollOperationState<VirtualMachinesUpdateResponse>, VirtualMachinesUpdateResponse>>;
    /**
     * Patch virtual machine properties
     * @param resourceGroupName The name of the resource group
     * @param virtualMachineName virtual machine name
     * @param virtualMachineRequest Patch virtual machine request
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, virtualMachineName: string, virtualMachineRequest: PatchPayload, options?: VirtualMachinesUpdateOptionalParams): Promise<VirtualMachinesUpdateResponse>;
    /**
     * Power on virtual machine
     * @param resourceGroupName The name of the resource group
     * @param referer referer url
     * @param virtualMachineName virtual machine name
     * @param options The options parameters.
     */
    beginStart(resourceGroupName: string, referer: string, virtualMachineName: string, options?: VirtualMachinesStartOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Power on virtual machine
     * @param resourceGroupName The name of the resource group
     * @param referer referer url
     * @param virtualMachineName virtual machine name
     * @param options The options parameters.
     */
    beginStartAndWait(resourceGroupName: string, referer: string, virtualMachineName: string, options?: VirtualMachinesStartOptionalParams): Promise<void>;
    /**
     * Power off virtual machine, options: shutdown, poweroff, and suspend
     * @param resourceGroupName The name of the resource group
     * @param referer referer url
     * @param virtualMachineName virtual machine name
     * @param options The options parameters.
     */
    beginStop(resourceGroupName: string, referer: string, virtualMachineName: string, options?: VirtualMachinesStopOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Power off virtual machine, options: shutdown, poweroff, and suspend
     * @param resourceGroupName The name of the resource group
     * @param referer referer url
     * @param virtualMachineName virtual machine name
     * @param options The options parameters.
     */
    beginStopAndWait(resourceGroupName: string, referer: string, virtualMachineName: string, options?: VirtualMachinesStopOptionalParams): Promise<void>;
}

/** Defines headers for VirtualMachines_createOrUpdate operation. */
export declare interface VirtualMachinesCreateOrUpdateHeaders {
    azureAsyncOperation?: string;
}

/** Optional parameters. */
export declare interface VirtualMachinesCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export declare type VirtualMachinesCreateOrUpdateResponse = VirtualMachinesCreateOrUpdateHeaders & VirtualMachine;

/** Defines headers for VirtualMachines_delete operation. */
export declare interface VirtualMachinesDeleteExceptionHeaders {
    contentType?: string;
}

/** Defines headers for VirtualMachines_delete operation. */
export declare interface VirtualMachinesDeleteHeaders {
    azureAsyncOperation?: string;
    location?: string;
    retryAfter?: number;
}

/** Optional parameters. */
export declare interface VirtualMachinesDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export declare type VirtualMachinesDeleteResponse = VirtualMachinesDeleteHeaders;

/** Optional parameters. */
export declare interface VirtualMachinesGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type VirtualMachinesGetResponse = VirtualMachine;

/** Optional parameters. */
export declare interface VirtualMachinesListByResourceGroupNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listByResourceGroupNext operation. */
export declare type VirtualMachinesListByResourceGroupNextResponse = VirtualMachineListResponse;

/** Optional parameters. */
export declare interface VirtualMachinesListByResourceGroupOptionalParams extends coreClient.OperationOptions {
    /** The filter to apply on the list operation */
    filter?: string;
    /** The maximum number of record sets to return */
    top?: number;
    /** to be used by nextLink implementation */
    skipToken?: string;
}

/** Contains response data for the listByResourceGroup operation. */
export declare type VirtualMachinesListByResourceGroupResponse = VirtualMachineListResponse;

/** Optional parameters. */
export declare interface VirtualMachinesListBySubscriptionNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listBySubscriptionNext operation. */
export declare type VirtualMachinesListBySubscriptionNextResponse = VirtualMachineListResponse;

/** Optional parameters. */
export declare interface VirtualMachinesListBySubscriptionOptionalParams extends coreClient.OperationOptions {
    /** The filter to apply on the list operation */
    filter?: string;
    /** The maximum number of record sets to return */
    top?: number;
    /** to be used by nextLink implementation */
    skipToken?: string;
}

/** Contains response data for the listBySubscription operation. */
export declare type VirtualMachinesListBySubscriptionResponse = VirtualMachineListResponse;

/** Defines headers for VirtualMachines_start operation. */
export declare interface VirtualMachinesStartExceptionHeaders {
    contentType?: string;
}

/** Defines headers for VirtualMachines_start operation. */
export declare interface VirtualMachinesStartHeaders {
    azureAsyncOperation?: string;
    location?: string;
    retryAfter?: number;
}

/** Optional parameters. */
export declare interface VirtualMachinesStartOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Defines headers for VirtualMachines_stop operation. */
export declare interface VirtualMachinesStopExceptionHeaders {
    contentType?: string;
}

/** Defines headers for VirtualMachines_stop operation. */
export declare interface VirtualMachinesStopHeaders {
    azureAsyncOperation?: string;
    location?: string;
    retryAfter?: number;
}

/** Optional parameters. */
export declare interface VirtualMachinesStopOptionalParams extends coreClient.OperationOptions {
    /** body stop mode parameter (reboot, shutdown, etc...) */
    m?: VirtualMachineStopMode;
    /** query stop mode parameter (reboot, shutdown, etc...) */
    mode?: StopMode;
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Defines values for VirtualMachineStatus. */
export declare type VirtualMachineStatus = "running" | "suspended" | "poweredoff" | "updating" | "deallocating" | "deleting";

/** List of virtual machine stop modes */
export declare interface VirtualMachineStopMode {
    /** mode indicates a type of stop operation - reboot, suspend, shutdown or power-off */
    mode?: StopMode;
}

/** Optional parameters. */
export declare interface VirtualMachinesUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the update operation. */
export declare type VirtualMachinesUpdateResponse = VirtualMachine;

/** Virtual machine template model */
export declare interface VirtualMachineTemplate {
    /**
     * virtual machine template id (privateCloudId:vsphereId)
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /** Azure region */
    location?: string;
    /**
     * {virtualMachineTemplateName}
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * {resourceProviderNamespace}/{resourceType}
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /** The amount of memory */
    amountOfRam?: number;
    /** The list of Virtual Disk Controllers */
    controllers?: VirtualDiskController[];
    /** The description of Virtual Machine Template */
    description?: string;
    /** The list of Virtual Disks */
    disks?: VirtualDisk[];
    /** Expose Guest OS or not */
    exposeToGuestVM?: boolean;
    /**
     * The Guest OS
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly guestOS?: string;
    /**
     * The Guest OS types
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly guestOSType?: string;
    /** The list of Virtual NICs */
    nics?: VirtualNic[];
    /** The number of CPU cores */
    numberOfCores?: number;
    /** path to folder */
    path?: string;
    /** The Private Cloud Id */
    privateCloudId?: string;
    /** The list of VSphere networks */
    vSphereNetworks?: string[];
    /** The tags from VSphere */
    vSphereTags?: string[];
    /**
     * The VMware tools version
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly vmwaretools?: string;
}

/** List of virtual machine templates */
export declare interface VirtualMachineTemplateListResponse {
    /** Link for next list of VirtualMachineTemplate */
    nextLink?: string;
    /** Results of the VM template list */
    value?: VirtualMachineTemplate[];
}

/** Interface representing a VirtualMachineTemplates. */
export declare interface VirtualMachineTemplates {
    /**
     * Returns list of virtual machine templates in region for private cloud
     * @param pcName The private cloud name
     * @param regionId The region Id (westus, eastus)
     * @param resourcePoolName Resource pool used to derive vSphere cluster which contains VM templates
     * @param options The options parameters.
     */
    list(pcName: string, regionId: string, resourcePoolName: string, options?: VirtualMachineTemplatesListOptionalParams): PagedAsyncIterableIterator<VirtualMachineTemplate>;
    /**
     * Returns virtual machine templates by its name
     * @param regionId The region Id (westus, eastus)
     * @param pcName The private cloud name
     * @param virtualMachineTemplateName virtual machine template id (vsphereId)
     * @param options The options parameters.
     */
    get(regionId: string, pcName: string, virtualMachineTemplateName: string, options?: VirtualMachineTemplatesGetOptionalParams): Promise<VirtualMachineTemplatesGetResponse>;
}

/** Optional parameters. */
export declare interface VirtualMachineTemplatesGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type VirtualMachineTemplatesGetResponse = VirtualMachineTemplate;

/** Optional parameters. */
export declare interface VirtualMachineTemplatesListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type VirtualMachineTemplatesListNextResponse = VirtualMachineTemplateListResponse;

/** Optional parameters. */
export declare interface VirtualMachineTemplatesListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type VirtualMachineTemplatesListResponse = VirtualMachineTemplateListResponse;

/** Virtual network model */
export declare interface VirtualNetwork {
    /**
     * can be used in vm creation/deletion
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly assignable?: boolean;
    /** virtual network id (privateCloudId:vsphereId) */
    id: string;
    /**
     * Azure region
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly location?: string;
    /**
     * {VirtualNetworkName}
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * {resourceProviderNamespace}/{resourceType}
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /**
     * The Private Cloud id
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly privateCloudId?: string;
}

/** List of virtual networks */
export declare interface VirtualNetworkListResponse {
    /** Link for next list of VirtualNetwork */
    nextLink?: string;
    /** Results of the VirtualNetwork list */
    value?: VirtualNetwork[];
}

/** Interface representing a VirtualNetworks. */
export declare interface VirtualNetworks {
    /**
     * Return list of virtual networks in location for private cloud
     * @param regionId The region Id (westus, eastus)
     * @param pcName The private cloud name
     * @param resourcePoolName Resource pool used to derive vSphere cluster which contains virtual networks
     * @param options The options parameters.
     */
    list(regionId: string, pcName: string, resourcePoolName: string, options?: VirtualNetworksListOptionalParams): PagedAsyncIterableIterator<VirtualNetwork>;
    /**
     * Return virtual network by its name
     * @param regionId The region Id (westus, eastus)
     * @param pcName The private cloud name
     * @param virtualNetworkName virtual network id (vsphereId)
     * @param options The options parameters.
     */
    get(regionId: string, pcName: string, virtualNetworkName: string, options?: VirtualNetworksGetOptionalParams): Promise<VirtualNetworksGetResponse>;
}

/** Optional parameters. */
export declare interface VirtualNetworksGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type VirtualNetworksGetResponse = VirtualNetwork;

/** Optional parameters. */
export declare interface VirtualNetworksListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type VirtualNetworksListNextResponse = VirtualNetworkListResponse;

/** Optional parameters. */
export declare interface VirtualNetworksListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type VirtualNetworksListResponse = VirtualNetworkListResponse;

/** Virtual NIC model */
export declare interface VirtualNic {
    /** guest OS customization for nic */
    customization?: GuestOsnicCustomization;
    /** NIC ip address */
    ipAddresses?: string[];
    /** NIC MAC address */
    macAddress?: string;
    /** Virtual Network */
    network: VirtualNetwork;
    /** NIC type */
    nicType: NICType;
    /** Is NIC powered on/off on boot */
    powerOnBoot?: boolean;
    /** NIC id */
    virtualNicId?: string;
    /**
     * NIC name
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly virtualNicName?: string;
}

export declare class VMwareCloudSimple extends coreClient.ServiceClient {
    $host: string;
    apiVersion: string;
    subscriptionId: string;
    /**
     * Initializes a new instance of the VMwareCloudSimple class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId The subscription ID.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: VMwareCloudSimpleOptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    operations: Operations;
    dedicatedCloudNodes: DedicatedCloudNodes;
    dedicatedCloudServices: DedicatedCloudServices;
    skusAvailability: SkusAvailability;
    privateClouds: PrivateClouds;
    customizationPolicies: CustomizationPolicies;
    resourcePools: ResourcePools;
    virtualMachineTemplates: VirtualMachineTemplates;
    virtualNetworks: VirtualNetworks;
    usages: Usages;
    virtualMachines: VirtualMachines;
}

/** Optional parameters. */
export declare interface VMwareCloudSimpleOptionalParams extends coreClient.ServiceClientOptions {
    /** server parameter */
    $host?: string;
    /** Api Version */
    apiVersion?: string;
    /** Overrides client endpoint. */
    endpoint?: string;
}

export { }
