/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
export const SubResource = {
    type: {
        name: "Composite",
        className: "SubResource",
        modelProperties: {
            id: {
                serializedName: "id",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SystemData = {
    type: {
        name: "Composite",
        className: "SystemData",
        modelProperties: {
            createdBy: {
                serializedName: "createdBy",
                type: {
                    name: "String"
                }
            },
            createdByType: {
                serializedName: "createdByType",
                type: {
                    name: "String"
                }
            },
            createdAt: {
                serializedName: "createdAt",
                type: {
                    name: "DateTime"
                }
            },
            lastModifiedBy: {
                serializedName: "lastModifiedBy",
                type: {
                    name: "String"
                }
            },
            lastModifiedByType: {
                serializedName: "lastModifiedByType",
                type: {
                    name: "String"
                }
            },
            lastModifiedAt: {
                serializedName: "lastModifiedAt",
                type: {
                    name: "DateTime"
                }
            }
        }
    }
};
export const Resource = {
    type: {
        name: "Composite",
        className: "Resource",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CloudError = {
    type: {
        name: "Composite",
        className: "CloudError",
        modelProperties: {
            error: {
                serializedName: "error",
                type: {
                    name: "Composite",
                    className: "CloudErrorBody"
                }
            }
        }
    }
};
export const CloudErrorBody = {
    type: {
        name: "Composite",
        className: "CloudErrorBody",
        modelProperties: {
            code: {
                serializedName: "code",
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                type: {
                    name: "String"
                }
            },
            target: {
                serializedName: "target",
                type: {
                    name: "String"
                }
            },
            details: {
                serializedName: "details",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CloudErrorBody"
                        }
                    }
                }
            }
        }
    }
};
export const DnsResolverPatch = {
    type: {
        name: "Composite",
        className: "DnsResolverPatch",
        modelProperties: {
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            }
        }
    }
};
export const DnsResolverListResult = {
    type: {
        name: "Composite",
        className: "DnsResolverListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DnsResolver"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const IpConfiguration = {
    type: {
        name: "Composite",
        className: "IpConfiguration",
        modelProperties: {
            subnet: {
                serializedName: "subnet",
                type: {
                    name: "Composite",
                    className: "SubResource"
                }
            },
            privateIpAddress: {
                serializedName: "privateIpAddress",
                type: {
                    name: "String"
                }
            },
            privateIpAllocationMethod: {
                defaultValue: "Dynamic",
                serializedName: "privateIpAllocationMethod",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const InboundEndpointPatch = {
    type: {
        name: "Composite",
        className: "InboundEndpointPatch",
        modelProperties: {
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            }
        }
    }
};
export const InboundEndpointListResult = {
    type: {
        name: "Composite",
        className: "InboundEndpointListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "InboundEndpoint"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const OutboundEndpointPatch = {
    type: {
        name: "Composite",
        className: "OutboundEndpointPatch",
        modelProperties: {
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            }
        }
    }
};
export const OutboundEndpointListResult = {
    type: {
        name: "Composite",
        className: "OutboundEndpointListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "OutboundEndpoint"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const DnsForwardingRulesetPatch = {
    type: {
        name: "Composite",
        className: "DnsForwardingRulesetPatch",
        modelProperties: {
            dnsResolverOutboundEndpoints: {
                serializedName: "dnsResolverOutboundEndpoints",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SubResource"
                        }
                    }
                }
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            }
        }
    }
};
export const DnsForwardingRulesetListResult = {
    type: {
        name: "Composite",
        className: "DnsForwardingRulesetListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DnsForwardingRuleset"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const TargetDnsServer = {
    type: {
        name: "Composite",
        className: "TargetDnsServer",
        modelProperties: {
            ipAddress: {
                serializedName: "ipAddress",
                required: true,
                type: {
                    name: "String"
                }
            },
            port: {
                defaultValue: 53,
                serializedName: "port",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const ForwardingRulePatch = {
    type: {
        name: "Composite",
        className: "ForwardingRulePatch",
        modelProperties: {
            targetDnsServers: {
                serializedName: "properties.targetDnsServers",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TargetDnsServer"
                        }
                    }
                }
            },
            metadata: {
                serializedName: "properties.metadata",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            },
            forwardingRuleState: {
                serializedName: "properties.forwardingRuleState",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ForwardingRuleListResult = {
    type: {
        name: "Composite",
        className: "ForwardingRuleListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ForwardingRule"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const VirtualNetworkLinkPatch = {
    type: {
        name: "Composite",
        className: "VirtualNetworkLinkPatch",
        modelProperties: {
            metadata: {
                serializedName: "properties.metadata",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            }
        }
    }
};
export const VirtualNetworkLinkListResult = {
    type: {
        name: "Composite",
        className: "VirtualNetworkLinkListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualNetworkLink"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SubResourceListResult = {
    type: {
        name: "Composite",
        className: "SubResourceListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SubResource"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const VirtualNetworkDnsForwardingRulesetListResult = {
    type: {
        name: "Composite",
        className: "VirtualNetworkDnsForwardingRulesetListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualNetworkDnsForwardingRuleset"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const VirtualNetworkDnsForwardingRuleset = {
    type: {
        name: "Composite",
        className: "VirtualNetworkDnsForwardingRuleset",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            virtualNetworkLink: {
                serializedName: "properties.virtualNetworkLink",
                type: {
                    name: "Composite",
                    className: "SubResource"
                }
            }
        }
    }
};
export const TrackedResource = {
    type: {
        name: "Composite",
        className: "TrackedResource",
        modelProperties: Object.assign(Object.assign({}, Resource.type.modelProperties), { tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            }, location: {
                serializedName: "location",
                required: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const ProxyResource = {
    type: {
        name: "Composite",
        className: "ProxyResource",
        modelProperties: Object.assign({}, Resource.type.modelProperties)
    }
};
export const DnsResolver = {
    type: {
        name: "Composite",
        className: "DnsResolver",
        modelProperties: Object.assign(Object.assign({}, TrackedResource.type.modelProperties), { etag: {
                serializedName: "etag",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, systemData: {
                serializedName: "systemData",
                type: {
                    name: "Composite",
                    className: "SystemData"
                }
            }, virtualNetwork: {
                serializedName: "properties.virtualNetwork",
                type: {
                    name: "Composite",
                    className: "SubResource"
                }
            }, dnsResolverState: {
                serializedName: "properties.dnsResolverState",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, provisioningState: {
                serializedName: "properties.provisioningState",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, resourceGuid: {
                serializedName: "properties.resourceGuid",
                readOnly: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const InboundEndpoint = {
    type: {
        name: "Composite",
        className: "InboundEndpoint",
        modelProperties: Object.assign(Object.assign({}, TrackedResource.type.modelProperties), { etag: {
                serializedName: "etag",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, systemData: {
                serializedName: "systemData",
                type: {
                    name: "Composite",
                    className: "SystemData"
                }
            }, ipConfigurations: {
                serializedName: "properties.ipConfigurations",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "IpConfiguration"
                        }
                    }
                }
            }, provisioningState: {
                serializedName: "properties.provisioningState",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, resourceGuid: {
                serializedName: "properties.resourceGuid",
                readOnly: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const OutboundEndpoint = {
    type: {
        name: "Composite",
        className: "OutboundEndpoint",
        modelProperties: Object.assign(Object.assign({}, TrackedResource.type.modelProperties), { etag: {
                serializedName: "etag",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, systemData: {
                serializedName: "systemData",
                type: {
                    name: "Composite",
                    className: "SystemData"
                }
            }, subnet: {
                serializedName: "properties.subnet",
                type: {
                    name: "Composite",
                    className: "SubResource"
                }
            }, provisioningState: {
                serializedName: "properties.provisioningState",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, resourceGuid: {
                serializedName: "properties.resourceGuid",
                readOnly: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const DnsForwardingRuleset = {
    type: {
        name: "Composite",
        className: "DnsForwardingRuleset",
        modelProperties: Object.assign(Object.assign({}, TrackedResource.type.modelProperties), { etag: {
                serializedName: "etag",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, systemData: {
                serializedName: "systemData",
                type: {
                    name: "Composite",
                    className: "SystemData"
                }
            }, dnsResolverOutboundEndpoints: {
                serializedName: "properties.dnsResolverOutboundEndpoints",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SubResource"
                        }
                    }
                }
            }, provisioningState: {
                serializedName: "properties.provisioningState",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, resourceGuid: {
                serializedName: "properties.resourceGuid",
                readOnly: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const ForwardingRule = {
    type: {
        name: "Composite",
        className: "ForwardingRule",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { etag: {
                serializedName: "etag",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, systemData: {
                serializedName: "systemData",
                type: {
                    name: "Composite",
                    className: "SystemData"
                }
            }, domainName: {
                serializedName: "properties.domainName",
                required: true,
                type: {
                    name: "String"
                }
            }, targetDnsServers: {
                serializedName: "properties.targetDnsServers",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TargetDnsServer"
                        }
                    }
                }
            }, metadata: {
                serializedName: "properties.metadata",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            }, forwardingRuleState: {
                serializedName: "properties.forwardingRuleState",
                type: {
                    name: "String"
                }
            }, provisioningState: {
                serializedName: "properties.provisioningState",
                readOnly: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const VirtualNetworkLink = {
    type: {
        name: "Composite",
        className: "VirtualNetworkLink",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { etag: {
                serializedName: "etag",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, systemData: {
                serializedName: "systemData",
                type: {
                    name: "Composite",
                    className: "SystemData"
                }
            }, virtualNetwork: {
                serializedName: "properties.virtualNetwork",
                type: {
                    name: "Composite",
                    className: "SubResource"
                }
            }, metadata: {
                serializedName: "properties.metadata",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            }, provisioningState: {
                serializedName: "properties.provisioningState",
                readOnly: true,
                type: {
                    name: "String"
                }
            } })
    }
};
//# sourceMappingURL=mappers.js.map