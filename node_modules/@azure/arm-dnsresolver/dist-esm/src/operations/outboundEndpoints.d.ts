import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { OutboundEndpoints } from "../operationsInterfaces";
import { DnsResolverManagementClient } from "../dnsResolverManagementClient";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { OutboundEndpoint, OutboundEndpointsListOptionalParams, OutboundEndpointsCreateOrUpdateOptionalParams, OutboundEndpointsCreateOrUpdateResponse, OutboundEndpointPatch, OutboundEndpointsUpdateOptionalParams, OutboundEndpointsUpdateResponse, OutboundEndpointsDeleteOptionalParams, OutboundEndpointsGetOptionalParams, OutboundEndpointsGetResponse } from "../models";
/** Class containing OutboundEndpoints operations. */
export declare class OutboundEndpointsImpl implements OutboundEndpoints {
    private readonly client;
    /**
     * Initialize a new instance of the class OutboundEndpoints class.
     * @param client Reference to the service client
     */
    constructor(client: DnsResolverManagementClient);
    /**
     * Lists outbound endpoints for a DNS resolver.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dnsResolverName The name of the DNS resolver.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, dnsResolverName: string, options?: OutboundEndpointsListOptionalParams): PagedAsyncIterableIterator<OutboundEndpoint>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Creates or updates an outbound endpoint for a DNS resolver.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dnsResolverName The name of the DNS resolver.
     * @param outboundEndpointName The name of the outbound endpoint for the DNS resolver.
     * @param parameters Parameters supplied to the CreateOrUpdate operation.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, dnsResolverName: string, outboundEndpointName: string, parameters: OutboundEndpoint, options?: OutboundEndpointsCreateOrUpdateOptionalParams): Promise<PollerLike<PollOperationState<OutboundEndpointsCreateOrUpdateResponse>, OutboundEndpointsCreateOrUpdateResponse>>;
    /**
     * Creates or updates an outbound endpoint for a DNS resolver.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dnsResolverName The name of the DNS resolver.
     * @param outboundEndpointName The name of the outbound endpoint for the DNS resolver.
     * @param parameters Parameters supplied to the CreateOrUpdate operation.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, dnsResolverName: string, outboundEndpointName: string, parameters: OutboundEndpoint, options?: OutboundEndpointsCreateOrUpdateOptionalParams): Promise<OutboundEndpointsCreateOrUpdateResponse>;
    /**
     * Updates an outbound endpoint for a DNS resolver.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dnsResolverName The name of the DNS resolver.
     * @param outboundEndpointName The name of the outbound endpoint for the DNS resolver.
     * @param parameters Parameters supplied to the Update operation.
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, dnsResolverName: string, outboundEndpointName: string, parameters: OutboundEndpointPatch, options?: OutboundEndpointsUpdateOptionalParams): Promise<PollerLike<PollOperationState<OutboundEndpointsUpdateResponse>, OutboundEndpointsUpdateResponse>>;
    /**
     * Updates an outbound endpoint for a DNS resolver.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dnsResolverName The name of the DNS resolver.
     * @param outboundEndpointName The name of the outbound endpoint for the DNS resolver.
     * @param parameters Parameters supplied to the Update operation.
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, dnsResolverName: string, outboundEndpointName: string, parameters: OutboundEndpointPatch, options?: OutboundEndpointsUpdateOptionalParams): Promise<OutboundEndpointsUpdateResponse>;
    /**
     * Deletes an outbound endpoint for a DNS resolver. WARNING: This operation cannot be undone.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dnsResolverName The name of the DNS resolver.
     * @param outboundEndpointName The name of the outbound endpoint for the DNS resolver.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, dnsResolverName: string, outboundEndpointName: string, options?: OutboundEndpointsDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Deletes an outbound endpoint for a DNS resolver. WARNING: This operation cannot be undone.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dnsResolverName The name of the DNS resolver.
     * @param outboundEndpointName The name of the outbound endpoint for the DNS resolver.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, dnsResolverName: string, outboundEndpointName: string, options?: OutboundEndpointsDeleteOptionalParams): Promise<void>;
    /**
     * Gets properties of an outbound endpoint for a DNS resolver.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dnsResolverName The name of the DNS resolver.
     * @param outboundEndpointName The name of the outbound endpoint for the DNS resolver.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, dnsResolverName: string, outboundEndpointName: string, options?: OutboundEndpointsGetOptionalParams): Promise<OutboundEndpointsGetResponse>;
    /**
     * Lists outbound endpoints for a DNS resolver.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dnsResolverName The name of the DNS resolver.
     * @param options The options parameters.
     */
    private _list;
    /**
     * ListNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dnsResolverName The name of the DNS resolver.
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=outboundEndpoints.d.ts.map