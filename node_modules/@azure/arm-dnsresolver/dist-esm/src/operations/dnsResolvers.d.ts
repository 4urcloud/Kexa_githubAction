import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { DnsResolvers } from "../operationsInterfaces";
import { DnsResolverManagementClient } from "../dnsResolverManagementClient";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { DnsResolver, DnsResolversListByResourceGroupOptionalParams, DnsResolversListOptionalParams, SubResource, DnsResolversListByVirtualNetworkOptionalParams, DnsResolversCreateOrUpdateOptionalParams, DnsResolversCreateOrUpdateResponse, DnsResolverPatch, DnsResolversUpdateOptionalParams, DnsResolversUpdateResponse, DnsResolversDeleteOptionalParams, DnsResolversGetOptionalParams, DnsResolversGetResponse } from "../models";
/** Class containing DnsResolvers operations. */
export declare class DnsResolversImpl implements DnsResolvers {
    private readonly client;
    /**
     * Initialize a new instance of the class DnsResolvers class.
     * @param client Reference to the service client
     */
    constructor(client: DnsResolverManagementClient);
    /**
     * Lists DNS resolvers within a resource group.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: DnsResolversListByResourceGroupOptionalParams): PagedAsyncIterableIterator<DnsResolver>;
    private listByResourceGroupPagingPage;
    private listByResourceGroupPagingAll;
    /**
     * Lists DNS resolvers in all resource groups of a subscription.
     * @param options The options parameters.
     */
    list(options?: DnsResolversListOptionalParams): PagedAsyncIterableIterator<DnsResolver>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Lists DNS resolver resource IDs linked to a virtual network.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualNetworkName The name of the virtual network.
     * @param options The options parameters.
     */
    listByVirtualNetwork(resourceGroupName: string, virtualNetworkName: string, options?: DnsResolversListByVirtualNetworkOptionalParams): PagedAsyncIterableIterator<SubResource>;
    private listByVirtualNetworkPagingPage;
    private listByVirtualNetworkPagingAll;
    /**
     * Creates or updates a DNS resolver.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dnsResolverName The name of the DNS resolver.
     * @param parameters Parameters supplied to the CreateOrUpdate operation.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, dnsResolverName: string, parameters: DnsResolver, options?: DnsResolversCreateOrUpdateOptionalParams): Promise<PollerLike<PollOperationState<DnsResolversCreateOrUpdateResponse>, DnsResolversCreateOrUpdateResponse>>;
    /**
     * Creates or updates a DNS resolver.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dnsResolverName The name of the DNS resolver.
     * @param parameters Parameters supplied to the CreateOrUpdate operation.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, dnsResolverName: string, parameters: DnsResolver, options?: DnsResolversCreateOrUpdateOptionalParams): Promise<DnsResolversCreateOrUpdateResponse>;
    /**
     * Updates a DNS resolver.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dnsResolverName The name of the DNS resolver.
     * @param parameters Parameters supplied to the Update operation.
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, dnsResolverName: string, parameters: DnsResolverPatch, options?: DnsResolversUpdateOptionalParams): Promise<PollerLike<PollOperationState<DnsResolversUpdateResponse>, DnsResolversUpdateResponse>>;
    /**
     * Updates a DNS resolver.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dnsResolverName The name of the DNS resolver.
     * @param parameters Parameters supplied to the Update operation.
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, dnsResolverName: string, parameters: DnsResolverPatch, options?: DnsResolversUpdateOptionalParams): Promise<DnsResolversUpdateResponse>;
    /**
     * Deletes a DNS resolver. WARNING: This operation cannot be undone.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dnsResolverName The name of the DNS resolver.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, dnsResolverName: string, options?: DnsResolversDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Deletes a DNS resolver. WARNING: This operation cannot be undone.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dnsResolverName The name of the DNS resolver.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, dnsResolverName: string, options?: DnsResolversDeleteOptionalParams): Promise<void>;
    /**
     * Gets properties of a DNS resolver.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dnsResolverName The name of the DNS resolver.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, dnsResolverName: string, options?: DnsResolversGetOptionalParams): Promise<DnsResolversGetResponse>;
    /**
     * Lists DNS resolvers within a resource group.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    private _listByResourceGroup;
    /**
     * Lists DNS resolvers in all resource groups of a subscription.
     * @param options The options parameters.
     */
    private _list;
    /**
     * Lists DNS resolver resource IDs linked to a virtual network.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualNetworkName The name of the virtual network.
     * @param options The options parameters.
     */
    private _listByVirtualNetwork;
    /**
     * ListByResourceGroupNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.
     * @param options The options parameters.
     */
    private _listByResourceGroupNext;
    /**
     * ListNext
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
    /**
     * ListByVirtualNetworkNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param virtualNetworkName The name of the virtual network.
     * @param nextLink The nextLink from the previous successful call to the ListByVirtualNetwork method.
     * @param options The options parameters.
     */
    private _listByVirtualNetworkNext;
}
//# sourceMappingURL=dnsResolvers.d.ts.map