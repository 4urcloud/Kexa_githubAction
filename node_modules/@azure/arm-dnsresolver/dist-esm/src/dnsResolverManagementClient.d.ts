import * as coreClient from "@azure/core-client";
import * as coreAuth from "@azure/core-auth";
import { DnsResolvers, InboundEndpoints, OutboundEndpoints, DnsForwardingRulesets, ForwardingRules, VirtualNetworkLinks } from "./operationsInterfaces";
import { DnsResolverManagementClientOptionalParams } from "./models";
export declare class DnsResolverManagementClient extends coreClient.ServiceClient {
    $host: string;
    subscriptionId: string;
    apiVersion: string;
    /**
     * Initializes a new instance of the DnsResolverManagementClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId The ID of the target subscription.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: DnsResolverManagementClientOptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    dnsResolvers: DnsResolvers;
    inboundEndpoints: InboundEndpoints;
    outboundEndpoints: OutboundEndpoints;
    dnsForwardingRulesets: DnsForwardingRulesets;
    forwardingRules: ForwardingRules;
    virtualNetworkLinks: VirtualNetworkLinks;
}
//# sourceMappingURL=dnsResolverManagementClient.d.ts.map