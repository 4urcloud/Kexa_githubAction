import * as coreAuth from '@azure/core-auth';
import * as coreClient from '@azure/core-client';
import { PagedAsyncIterableIterator } from '@azure/core-paging';

/** Details about the change resource */
export declare interface ChangeAttributes {
    /**
     * The ARM correlation ID of the change resource
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly correlationId?: string;
    /**
     * The time the change(s) on the target resource ocurred
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly timestamp?: string;
    /**
     * The number of changes this resource captures
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly changesCount?: number;
    /**
     * The GUID of the previous snapshot
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly previousResourceSnapshotId?: string;
    /**
     * The GUID of the new snapshot
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly newResourceSnapshotId?: string;
}

/** An individual change on the target resource */
export declare interface ChangeBase {
    /**
     * The type of change that occurred
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly propertyChangeType?: PropertyChangeType;
    /**
     * The entity that made the change
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly changeCategory?: ChangeCategory;
    /**
     * The target resource property value before the change
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly previousValue?: string;
    /**
     * The target resource property value after the change
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly newValue?: string;
}

/** Defines values for ChangeCategory. */
export declare type ChangeCategory = "User" | "System";

/** The properties of a change */
export declare interface ChangeProperties {
    /**
     * The fully qualified ID of the target resource that was changed
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly targetResourceId?: string;
    /**
     * The namespace and type of the resource
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly targetResourceType?: string;
    /**
     * The type of change that was captured in the resource
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly changeType?: ChangeType;
    /** Details about the change resource */
    changeAttributes?: ChangeAttributes;
    /** A dictionary with changed property name as a key and the change details as the value */
    changes?: {
        [propertyName: string]: ChangeBase;
    };
}

/** The list of resources */
export declare interface ChangeResourceListResult {
    /** The link used to get the next page of Change Resources */
    nextLink?: string;
    /** The list of resources */
    value?: ChangeResourceResult[];
}

/** Change Resource */
export declare interface ChangeResourceResult extends Resource {
    /** The properties of a change */
    properties?: ChangeProperties;
}

/** Interface representing a Changes. */
export declare interface Changes {
    /**
     * Obtains a list of change resources from the past 14 days for the target resource
     * @param resourceGroupName The name of the resource group.
     * @param resourceProviderNamespace The name of the resource provider namespace.
     * @param resourceType The name of the resource type.
     * @param resourceName The name of the resource.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, resourceProviderNamespace: string, resourceType: string, resourceName: string, options?: ChangesListOptionalParams): PagedAsyncIterableIterator<ChangeResourceResult>;
    /**
     * Obtains the specified change resource for the target resource
     * @param resourceGroupName The name of the resource group.
     * @param resourceProviderNamespace The name of the resource provider namespace.
     * @param resourceType The name of the resource type.
     * @param resourceName The name of the resource.
     * @param changeResourceId The ID of the change resource
     * @param options The options parameters.
     */
    get(resourceGroupName: string, resourceProviderNamespace: string, resourceType: string, resourceName: string, changeResourceId: string, options?: ChangesGetOptionalParams): Promise<ChangesGetResponse>;
}

export declare class ChangesClient extends coreClient.ServiceClient {
    $host: string;
    subscriptionId: string;
    apiVersion: string;
    /**
     * Initializes a new instance of the ChangesClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId The Azure subscription ID. This is a GUID-formatted string (e.g.
     *                       00000000-0000-0000-0000-000000000000)
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: ChangesClientOptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    changes: Changes;
}

/** Optional parameters. */
export declare interface ChangesClientOptionalParams extends coreClient.ServiceClientOptions {
    /** server parameter */
    $host?: string;
    /** Api Version */
    apiVersion?: string;
    /** Overrides client endpoint. */
    endpoint?: string;
}

/** Optional parameters. */
export declare interface ChangesGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type ChangesGetResponse = ChangeResourceResult;

/** Optional parameters. */
export declare interface ChangesListNextOptionalParams extends coreClient.OperationOptions {
    /** (Optional) Set the maximum number of results per response. */
    top?: number;
    /** (Optional) The page-continuation token */
    skipToken?: string;
}

/** Contains response data for the listNext operation. */
export declare type ChangesListNextResponse = ChangeResourceListResult;

/** Optional parameters. */
export declare interface ChangesListOptionalParams extends coreClient.OperationOptions {
    /** (Optional) Set the maximum number of results per response. */
    top?: number;
    /** (Optional) The page-continuation token */
    skipToken?: string;
}

/** Contains response data for the list operation. */
export declare type ChangesListResponse = ChangeResourceListResult;

/** Defines values for ChangeType. */
export declare type ChangeType = "Update" | "Delete" | "Create";

/** The resource management error additional info. */
export declare interface ErrorAdditionalInfo {
    /**
     * The additional info type.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /**
     * The additional info.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly info?: Record<string, unknown>;
}

/** The error detail. */
export declare interface ErrorDetail {
    /**
     * The error code.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly code?: string;
    /**
     * The error message.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly message?: string;
    /**
     * The error target.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly target?: string;
    /**
     * The error details.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly details?: ErrorDetail[];
    /**
     * The error additional info.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export declare interface ErrorResponse {
    /** The error object. */
    error?: ErrorDetail;
}

/**
 * Given a result page from a pageable operation, returns a
 * continuation token that can be used to begin paging from
 * that point later.
 * @param page A result object from calling .byPage() on a paged operation.
 * @returns The continuation token that can be passed into byPage().
 */
export declare function getContinuationToken(page: unknown): string | undefined;

/** Defines values for PropertyChangeType. */
export declare type PropertyChangeType = "Update" | "Insert" | "Remove";

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export declare interface Resource {
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /**
     * The name of the resource
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
}

export { }
