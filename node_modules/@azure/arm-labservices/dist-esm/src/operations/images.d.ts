import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Images } from "../operationsInterfaces";
import { LabServicesClient } from "../labServicesClient";
import { Image, ImagesListByLabPlanOptionalParams, ImagesGetOptionalParams, ImagesGetResponse, ImagesCreateOrUpdateOptionalParams, ImagesCreateOrUpdateResponse, ImageUpdate, ImagesUpdateOptionalParams, ImagesUpdateResponse } from "../models";
/** Class containing Images operations. */
export declare class ImagesImpl implements Images {
    private readonly client;
    /**
     * Initialize a new instance of the class Images class.
     * @param client Reference to the service client
     */
    constructor(client: LabServicesClient);
    /**
     * Gets all images from galleries attached to a lab plan.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param labPlanName The name of the lab plan that uniquely identifies it within containing resource
     *                    group. Used in resource URIs and in UI.
     * @param options The options parameters.
     */
    listByLabPlan(resourceGroupName: string, labPlanName: string, options?: ImagesListByLabPlanOptionalParams): PagedAsyncIterableIterator<Image>;
    private listByLabPlanPagingPage;
    private listByLabPlanPagingAll;
    /**
     * Gets all images from galleries attached to a lab plan.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param labPlanName The name of the lab plan that uniquely identifies it within containing resource
     *                    group. Used in resource URIs and in UI.
     * @param options The options parameters.
     */
    private _listByLabPlan;
    /**
     * Gets an image resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param labPlanName The name of the lab plan that uniquely identifies it within containing resource
     *                    group. Used in resource URIs and in UI.
     * @param imageName The image name.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, labPlanName: string, imageName: string, options?: ImagesGetOptionalParams): Promise<ImagesGetResponse>;
    /**
     * Updates an image resource via PUT. Creating new resources via PUT will not function.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param labPlanName The name of the lab plan that uniquely identifies it within containing resource
     *                    group. Used in resource URIs and in UI.
     * @param imageName The image name.
     * @param body The request body.
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, labPlanName: string, imageName: string, body: Image, options?: ImagesCreateOrUpdateOptionalParams): Promise<ImagesCreateOrUpdateResponse>;
    /**
     * Updates an image resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param labPlanName The name of the lab plan that uniquely identifies it within containing resource
     *                    group. Used in resource URIs and in UI.
     * @param imageName The image name.
     * @param body The request body.
     * @param options The options parameters.
     */
    update(resourceGroupName: string, labPlanName: string, imageName: string, body: ImageUpdate, options?: ImagesUpdateOptionalParams): Promise<ImagesUpdateResponse>;
    /**
     * ListByLabPlanNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param labPlanName The name of the lab plan that uniquely identifies it within containing resource
     *                    group. Used in resource URIs and in UI.
     * @param nextLink The nextLink from the previous successful call to the ListByLabPlan method.
     * @param options The options parameters.
     */
    private _listByLabPlanNext;
}
//# sourceMappingURL=images.d.ts.map