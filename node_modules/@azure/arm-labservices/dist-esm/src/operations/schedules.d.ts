import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Schedules } from "../operationsInterfaces";
import { LabServicesClient } from "../labServicesClient";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { Schedule, SchedulesListByLabOptionalParams, SchedulesGetOptionalParams, SchedulesGetResponse, SchedulesCreateOrUpdateOptionalParams, SchedulesCreateOrUpdateResponse, ScheduleUpdate, SchedulesUpdateOptionalParams, SchedulesUpdateResponse, SchedulesDeleteOptionalParams } from "../models";
/** Class containing Schedules operations. */
export declare class SchedulesImpl implements Schedules {
    private readonly client;
    /**
     * Initialize a new instance of the class Schedules class.
     * @param client Reference to the service client
     */
    constructor(client: LabServicesClient);
    /**
     * Returns a list of all schedules for a lab.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param labName The name of the lab that uniquely identifies it within containing lab plan. Used in
     *                resource URIs.
     * @param options The options parameters.
     */
    listByLab(resourceGroupName: string, labName: string, options?: SchedulesListByLabOptionalParams): PagedAsyncIterableIterator<Schedule>;
    private listByLabPagingPage;
    private listByLabPagingAll;
    /**
     * Returns a list of all schedules for a lab.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param labName The name of the lab that uniquely identifies it within containing lab plan. Used in
     *                resource URIs.
     * @param options The options parameters.
     */
    private _listByLab;
    /**
     * Returns the properties of a lab Schedule.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param labName The name of the lab that uniquely identifies it within containing lab plan. Used in
     *                resource URIs.
     * @param scheduleName The name of the schedule that uniquely identifies it within containing lab. Used
     *                     in resource URIs.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, labName: string, scheduleName: string, options?: SchedulesGetOptionalParams): Promise<SchedulesGetResponse>;
    /**
     * Operation to create or update a lab schedule.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param labName The name of the lab that uniquely identifies it within containing lab plan. Used in
     *                resource URIs.
     * @param scheduleName The name of the schedule that uniquely identifies it within containing lab. Used
     *                     in resource URIs.
     * @param body The request body.
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, labName: string, scheduleName: string, body: Schedule, options?: SchedulesCreateOrUpdateOptionalParams): Promise<SchedulesCreateOrUpdateResponse>;
    /**
     * Operation to update a lab schedule.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param labName The name of the lab that uniquely identifies it within containing lab plan. Used in
     *                resource URIs.
     * @param scheduleName The name of the schedule that uniquely identifies it within containing lab. Used
     *                     in resource URIs.
     * @param body The request body.
     * @param options The options parameters.
     */
    update(resourceGroupName: string, labName: string, scheduleName: string, body: ScheduleUpdate, options?: SchedulesUpdateOptionalParams): Promise<SchedulesUpdateResponse>;
    /**
     * Operation to delete a schedule resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param labName The name of the lab that uniquely identifies it within containing lab plan. Used in
     *                resource URIs.
     * @param scheduleName The name of the schedule that uniquely identifies it within containing lab. Used
     *                     in resource URIs.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, labName: string, scheduleName: string, options?: SchedulesDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Operation to delete a schedule resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param labName The name of the lab that uniquely identifies it within containing lab plan. Used in
     *                resource URIs.
     * @param scheduleName The name of the schedule that uniquely identifies it within containing lab. Used
     *                     in resource URIs.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, labName: string, scheduleName: string, options?: SchedulesDeleteOptionalParams): Promise<void>;
    /**
     * ListByLabNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param labName The name of the lab that uniquely identifies it within containing lab plan. Used in
     *                resource URIs.
     * @param nextLink The nextLink from the previous successful call to the ListByLab method.
     * @param options The options parameters.
     */
    private _listByLabNext;
}
//# sourceMappingURL=schedules.d.ts.map