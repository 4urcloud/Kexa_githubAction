import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Labs } from "../operationsInterfaces";
import { LabServicesClient } from "../labServicesClient";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { Lab, LabsListBySubscriptionOptionalParams, LabsListByResourceGroupOptionalParams, LabsGetOptionalParams, LabsGetResponse, LabsCreateOrUpdateOptionalParams, LabsCreateOrUpdateResponse, LabUpdate, LabsUpdateOptionalParams, LabsUpdateResponse, LabsDeleteOptionalParams, LabsPublishOptionalParams, LabsSyncGroupOptionalParams } from "../models";
/** Class containing Labs operations. */
export declare class LabsImpl implements Labs {
    private readonly client;
    /**
     * Initialize a new instance of the class Labs class.
     * @param client Reference to the service client
     */
    constructor(client: LabServicesClient);
    /**
     * Returns a list of all labs for a subscription.
     * @param options The options parameters.
     */
    listBySubscription(options?: LabsListBySubscriptionOptionalParams): PagedAsyncIterableIterator<Lab>;
    private listBySubscriptionPagingPage;
    private listBySubscriptionPagingAll;
    /**
     * Returns a list of all labs in a resource group.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: LabsListByResourceGroupOptionalParams): PagedAsyncIterableIterator<Lab>;
    private listByResourceGroupPagingPage;
    private listByResourceGroupPagingAll;
    /**
     * Returns a list of all labs for a subscription.
     * @param options The options parameters.
     */
    private _listBySubscription;
    /**
     * Returns a list of all labs in a resource group.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    private _listByResourceGroup;
    /**
     * Returns the properties of a lab resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param labName The name of the lab that uniquely identifies it within containing lab plan. Used in
     *                resource URIs.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, labName: string, options?: LabsGetOptionalParams): Promise<LabsGetResponse>;
    /**
     * Operation to create or update a lab resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param labName The name of the lab that uniquely identifies it within containing lab plan. Used in
     *                resource URIs.
     * @param body The request body.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, labName: string, body: Lab, options?: LabsCreateOrUpdateOptionalParams): Promise<PollerLike<PollOperationState<LabsCreateOrUpdateResponse>, LabsCreateOrUpdateResponse>>;
    /**
     * Operation to create or update a lab resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param labName The name of the lab that uniquely identifies it within containing lab plan. Used in
     *                resource URIs.
     * @param body The request body.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, labName: string, body: Lab, options?: LabsCreateOrUpdateOptionalParams): Promise<LabsCreateOrUpdateResponse>;
    /**
     * Operation to update a lab resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param labName The name of the lab that uniquely identifies it within containing lab plan. Used in
     *                resource URIs.
     * @param body The request body.
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, labName: string, body: LabUpdate, options?: LabsUpdateOptionalParams): Promise<PollerLike<PollOperationState<LabsUpdateResponse>, LabsUpdateResponse>>;
    /**
     * Operation to update a lab resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param labName The name of the lab that uniquely identifies it within containing lab plan. Used in
     *                resource URIs.
     * @param body The request body.
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, labName: string, body: LabUpdate, options?: LabsUpdateOptionalParams): Promise<LabsUpdateResponse>;
    /**
     * Operation to delete a lab resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param labName The name of the lab that uniquely identifies it within containing lab plan. Used in
     *                resource URIs.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, labName: string, options?: LabsDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Operation to delete a lab resource.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param labName The name of the lab that uniquely identifies it within containing lab plan. Used in
     *                resource URIs.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, labName: string, options?: LabsDeleteOptionalParams): Promise<void>;
    /**
     * Publish or re-publish a lab. This will create or update all lab resources, such as virtual machines.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param labName The name of the lab that uniquely identifies it within containing lab plan. Used in
     *                resource URIs.
     * @param options The options parameters.
     */
    beginPublish(resourceGroupName: string, labName: string, options?: LabsPublishOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Publish or re-publish a lab. This will create or update all lab resources, such as virtual machines.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param labName The name of the lab that uniquely identifies it within containing lab plan. Used in
     *                resource URIs.
     * @param options The options parameters.
     */
    beginPublishAndWait(resourceGroupName: string, labName: string, options?: LabsPublishOptionalParams): Promise<void>;
    /**
     * Action used to manually kick off an AAD group sync job.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param labName The name of the lab that uniquely identifies it within containing lab plan. Used in
     *                resource URIs.
     * @param options The options parameters.
     */
    beginSyncGroup(resourceGroupName: string, labName: string, options?: LabsSyncGroupOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Action used to manually kick off an AAD group sync job.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param labName The name of the lab that uniquely identifies it within containing lab plan. Used in
     *                resource URIs.
     * @param options The options parameters.
     */
    beginSyncGroupAndWait(resourceGroupName: string, labName: string, options?: LabsSyncGroupOptionalParams): Promise<void>;
    /**
     * ListBySubscriptionNext
     * @param nextLink The nextLink from the previous successful call to the ListBySubscription method.
     * @param options The options parameters.
     */
    private _listBySubscriptionNext;
    /**
     * ListByResourceGroupNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.
     * @param options The options parameters.
     */
    private _listByResourceGroupNext;
}
//# sourceMappingURL=labs.d.ts.map