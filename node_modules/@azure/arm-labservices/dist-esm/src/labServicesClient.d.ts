import * as coreClient from "@azure/core-client";
import * as coreAuth from "@azure/core-auth";
import { Images, LabPlans, Operations, Labs, OperationResults, Schedules, Skus, Usages, Users, VirtualMachines } from "./operationsInterfaces";
import { LabServicesClientOptionalParams } from "./models";
export declare class LabServicesClient extends coreClient.ServiceClient {
    $host: string;
    apiVersion: string;
    subscriptionId: string;
    /**
     * Initializes a new instance of the LabServicesClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId The ID of the target subscription.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: LabServicesClientOptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    images: Images;
    labPlans: LabPlans;
    operations: Operations;
    labs: Labs;
    operationResults: OperationResults;
    schedules: Schedules;
    skus: Skus;
    usages: Usages;
    users: Users;
    virtualMachines: VirtualMachines;
}
//# sourceMappingURL=labServicesClient.d.ts.map