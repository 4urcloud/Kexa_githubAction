/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
export const PagedImages = {
    type: {
        name: "Composite",
        className: "PagedImages",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Image"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SystemData = {
    type: {
        name: "Composite",
        className: "SystemData",
        modelProperties: {
            createdBy: {
                serializedName: "createdBy",
                type: {
                    name: "String"
                }
            },
            createdByType: {
                serializedName: "createdByType",
                type: {
                    name: "String"
                }
            },
            createdAt: {
                serializedName: "createdAt",
                type: {
                    name: "DateTime"
                }
            },
            lastModifiedBy: {
                serializedName: "lastModifiedBy",
                type: {
                    name: "String"
                }
            },
            lastModifiedByType: {
                serializedName: "lastModifiedByType",
                type: {
                    name: "String"
                }
            },
            lastModifiedAt: {
                serializedName: "lastModifiedAt",
                type: {
                    name: "DateTime"
                }
            }
        }
    }
};
export const ImageUpdateProperties = {
    type: {
        name: "Composite",
        className: "ImageUpdateProperties",
        modelProperties: {
            enabledState: {
                serializedName: "enabledState",
                type: {
                    name: "Enum",
                    allowedValues: ["Enabled", "Disabled"]
                }
            }
        }
    }
};
export const Resource = {
    type: {
        name: "Composite",
        className: "Resource",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ErrorResponse = {
    type: {
        name: "Composite",
        className: "ErrorResponse",
        modelProperties: {
            error: {
                serializedName: "error",
                type: {
                    name: "Composite",
                    className: "ErrorDetail"
                }
            }
        }
    }
};
export const ErrorDetail = {
    type: {
        name: "Composite",
        className: "ErrorDetail",
        modelProperties: {
            code: {
                serializedName: "code",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            target: {
                serializedName: "target",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            details: {
                serializedName: "details",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ErrorDetail"
                        }
                    }
                }
            },
            additionalInfo: {
                serializedName: "additionalInfo",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ErrorAdditionalInfo"
                        }
                    }
                }
            }
        }
    }
};
export const ErrorAdditionalInfo = {
    type: {
        name: "Composite",
        className: "ErrorAdditionalInfo",
        modelProperties: {
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            info: {
                serializedName: "info",
                readOnly: true,
                type: {
                    name: "Dictionary",
                    value: { type: { name: "any" } }
                }
            }
        }
    }
};
export const ImageUpdate = {
    type: {
        name: "Composite",
        className: "ImageUpdate",
        modelProperties: {
            enabledState: {
                serializedName: "properties.enabledState",
                type: {
                    name: "Enum",
                    allowedValues: ["Enabled", "Disabled"]
                }
            }
        }
    }
};
export const PagedLabPlans = {
    type: {
        name: "Composite",
        className: "PagedLabPlans",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "LabPlan"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const LabPlanUpdateProperties = {
    type: {
        name: "Composite",
        className: "LabPlanUpdateProperties",
        modelProperties: {
            defaultConnectionProfile: {
                serializedName: "defaultConnectionProfile",
                type: {
                    name: "Composite",
                    className: "ConnectionProfile"
                }
            },
            defaultAutoShutdownProfile: {
                serializedName: "defaultAutoShutdownProfile",
                type: {
                    name: "Composite",
                    className: "AutoShutdownProfile"
                }
            },
            defaultNetworkProfile: {
                serializedName: "defaultNetworkProfile",
                type: {
                    name: "Composite",
                    className: "LabPlanNetworkProfile"
                }
            },
            allowedRegions: {
                serializedName: "allowedRegions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            sharedGalleryId: {
                constraints: {
                    MaxLength: 2000,
                    MinLength: 3
                },
                serializedName: "sharedGalleryId",
                type: {
                    name: "String"
                }
            },
            supportInfo: {
                serializedName: "supportInfo",
                type: {
                    name: "Composite",
                    className: "SupportInfo"
                }
            },
            linkedLmsInstance: {
                constraints: {
                    MaxLength: 2000,
                    MinLength: 3
                },
                serializedName: "linkedLmsInstance",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ConnectionProfile = {
    type: {
        name: "Composite",
        className: "ConnectionProfile",
        modelProperties: {
            webSshAccess: {
                serializedName: "webSshAccess",
                type: {
                    name: "Enum",
                    allowedValues: ["Public", "Private", "None"]
                }
            },
            webRdpAccess: {
                serializedName: "webRdpAccess",
                type: {
                    name: "Enum",
                    allowedValues: ["Public", "Private", "None"]
                }
            },
            clientSshAccess: {
                serializedName: "clientSshAccess",
                type: {
                    name: "Enum",
                    allowedValues: ["Public", "Private", "None"]
                }
            },
            clientRdpAccess: {
                serializedName: "clientRdpAccess",
                type: {
                    name: "Enum",
                    allowedValues: ["Public", "Private", "None"]
                }
            }
        }
    }
};
export const AutoShutdownProfile = {
    type: {
        name: "Composite",
        className: "AutoShutdownProfile",
        modelProperties: {
            shutdownOnDisconnect: {
                serializedName: "shutdownOnDisconnect",
                type: {
                    name: "Enum",
                    allowedValues: ["Enabled", "Disabled"]
                }
            },
            shutdownWhenNotConnected: {
                serializedName: "shutdownWhenNotConnected",
                type: {
                    name: "Enum",
                    allowedValues: ["Enabled", "Disabled"]
                }
            },
            shutdownOnIdle: {
                serializedName: "shutdownOnIdle",
                type: {
                    name: "Enum",
                    allowedValues: ["None", "UserAbsence", "LowUsage"]
                }
            },
            disconnectDelay: {
                serializedName: "disconnectDelay",
                type: {
                    name: "TimeSpan"
                }
            },
            noConnectDelay: {
                serializedName: "noConnectDelay",
                type: {
                    name: "TimeSpan"
                }
            },
            idleDelay: {
                serializedName: "idleDelay",
                type: {
                    name: "TimeSpan"
                }
            }
        }
    }
};
export const LabPlanNetworkProfile = {
    type: {
        name: "Composite",
        className: "LabPlanNetworkProfile",
        modelProperties: {
            subnetId: {
                constraints: {
                    MaxLength: 2000,
                    MinLength: 3
                },
                serializedName: "subnetId",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SupportInfo = {
    type: {
        name: "Composite",
        className: "SupportInfo",
        modelProperties: {
            url: {
                constraints: {
                    MaxLength: 2000,
                    MinLength: 3
                },
                serializedName: "url",
                type: {
                    name: "String"
                }
            },
            email: {
                constraints: {
                    MaxLength: 254,
                    MinLength: 6
                },
                serializedName: "email",
                type: {
                    name: "String"
                }
            },
            phone: {
                constraints: {
                    MaxLength: 31,
                    MinLength: 1
                },
                serializedName: "phone",
                type: {
                    name: "String"
                }
            },
            instructions: {
                serializedName: "instructions",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const Identity = {
    type: {
        name: "Composite",
        className: "Identity",
        modelProperties: {
            principalId: {
                serializedName: "principalId",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            tenantId: {
                serializedName: "tenantId",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            type: {
                defaultValue: "SystemAssigned",
                isConstant: true,
                serializedName: "type",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const TrackedResourceUpdate = {
    type: {
        name: "Composite",
        className: "TrackedResourceUpdate",
        modelProperties: {
            tags: {
                serializedName: "tags",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export const SaveImageBody = {
    type: {
        name: "Composite",
        className: "SaveImageBody",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            labVirtualMachineId: {
                constraints: {
                    MaxLength: 2000,
                    MinLength: 3
                },
                serializedName: "labVirtualMachineId",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const OperationListResult = {
    type: {
        name: "Composite",
        className: "OperationListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Operation"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const Operation = {
    type: {
        name: "Composite",
        className: "Operation",
        modelProperties: {
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            isDataAction: {
                serializedName: "isDataAction",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            },
            display: {
                serializedName: "display",
                type: {
                    name: "Composite",
                    className: "OperationDisplay"
                }
            },
            origin: {
                serializedName: "origin",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            actionType: {
                serializedName: "actionType",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const OperationDisplay = {
    type: {
        name: "Composite",
        className: "OperationDisplay",
        modelProperties: {
            provider: {
                serializedName: "provider",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            resource: {
                serializedName: "resource",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            operation: {
                serializedName: "operation",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            description: {
                serializedName: "description",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const PagedLabs = {
    type: {
        name: "Composite",
        className: "PagedLabs",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Lab"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const LabNetworkProfile = {
    type: {
        name: "Composite",
        className: "LabNetworkProfile",
        modelProperties: {
            subnetId: {
                constraints: {
                    MaxLength: 2000,
                    MinLength: 3
                },
                serializedName: "subnetId",
                type: {
                    name: "String"
                }
            },
            loadBalancerId: {
                constraints: {
                    MaxLength: 2000,
                    MinLength: 3
                },
                serializedName: "loadBalancerId",
                type: {
                    name: "String"
                }
            },
            publicIpId: {
                constraints: {
                    MaxLength: 2000,
                    MinLength: 3
                },
                serializedName: "publicIpId",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const LabUpdateProperties = {
    type: {
        name: "Composite",
        className: "LabUpdateProperties",
        modelProperties: {
            autoShutdownProfile: {
                serializedName: "autoShutdownProfile",
                type: {
                    name: "Composite",
                    className: "AutoShutdownProfile"
                }
            },
            connectionProfile: {
                serializedName: "connectionProfile",
                type: {
                    name: "Composite",
                    className: "ConnectionProfile"
                }
            },
            virtualMachineProfile: {
                serializedName: "virtualMachineProfile",
                type: {
                    name: "Composite",
                    className: "VirtualMachineProfile"
                }
            },
            securityProfile: {
                serializedName: "securityProfile",
                type: {
                    name: "Composite",
                    className: "SecurityProfile"
                }
            },
            rosterProfile: {
                serializedName: "rosterProfile",
                type: {
                    name: "Composite",
                    className: "RosterProfile"
                }
            },
            labPlanId: {
                constraints: {
                    MaxLength: 2000,
                    MinLength: 3
                },
                serializedName: "labPlanId",
                type: {
                    name: "String"
                }
            },
            title: {
                constraints: {
                    MaxLength: 120,
                    MinLength: 1
                },
                serializedName: "title",
                type: {
                    name: "String"
                }
            },
            description: {
                serializedName: "description",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const VirtualMachineProfile = {
    type: {
        name: "Composite",
        className: "VirtualMachineProfile",
        modelProperties: {
            createOption: {
                serializedName: "createOption",
                required: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Image", "TemplateVM"]
                }
            },
            imageReference: {
                serializedName: "imageReference",
                type: {
                    name: "Composite",
                    className: "ImageReference"
                }
            },
            osType: {
                serializedName: "osType",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Windows", "Linux"]
                }
            },
            sku: {
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "Sku"
                }
            },
            additionalCapabilities: {
                serializedName: "additionalCapabilities",
                type: {
                    name: "Composite",
                    className: "VirtualMachineAdditionalCapabilities"
                }
            },
            usageQuota: {
                serializedName: "usageQuota",
                required: true,
                type: {
                    name: "TimeSpan"
                }
            },
            useSharedPassword: {
                serializedName: "useSharedPassword",
                type: {
                    name: "Enum",
                    allowedValues: ["Enabled", "Disabled"]
                }
            },
            adminUser: {
                serializedName: "adminUser",
                type: {
                    name: "Composite",
                    className: "Credentials"
                }
            },
            nonAdminUser: {
                serializedName: "nonAdminUser",
                type: {
                    name: "Composite",
                    className: "Credentials"
                }
            }
        }
    }
};
export const ImageReference = {
    type: {
        name: "Composite",
        className: "ImageReference",
        modelProperties: {
            id: {
                constraints: {
                    MaxLength: 2000,
                    MinLength: 3
                },
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            offer: {
                serializedName: "offer",
                type: {
                    name: "String"
                }
            },
            publisher: {
                serializedName: "publisher",
                type: {
                    name: "String"
                }
            },
            sku: {
                serializedName: "sku",
                type: {
                    name: "String"
                }
            },
            version: {
                serializedName: "version",
                type: {
                    name: "String"
                }
            },
            exactVersion: {
                serializedName: "exactVersion",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const Sku = {
    type: {
        name: "Composite",
        className: "Sku",
        modelProperties: {
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String"
                }
            },
            tier: {
                serializedName: "tier",
                type: {
                    name: "Enum",
                    allowedValues: ["Free", "Basic", "Standard", "Premium"]
                }
            },
            size: {
                serializedName: "size",
                type: {
                    name: "String"
                }
            },
            family: {
                serializedName: "family",
                type: {
                    name: "String"
                }
            },
            capacity: {
                serializedName: "capacity",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const VirtualMachineAdditionalCapabilities = {
    type: {
        name: "Composite",
        className: "VirtualMachineAdditionalCapabilities",
        modelProperties: {
            installGpuDrivers: {
                serializedName: "installGpuDrivers",
                type: {
                    name: "Enum",
                    allowedValues: ["Enabled", "Disabled"]
                }
            }
        }
    }
};
export const Credentials = {
    type: {
        name: "Composite",
        className: "Credentials",
        modelProperties: {
            username: {
                serializedName: "username",
                required: true,
                type: {
                    name: "String"
                }
            },
            password: {
                serializedName: "password",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SecurityProfile = {
    type: {
        name: "Composite",
        className: "SecurityProfile",
        modelProperties: {
            registrationCode: {
                serializedName: "registrationCode",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            openAccess: {
                serializedName: "openAccess",
                type: {
                    name: "Enum",
                    allowedValues: ["Enabled", "Disabled"]
                }
            }
        }
    }
};
export const RosterProfile = {
    type: {
        name: "Composite",
        className: "RosterProfile",
        modelProperties: {
            activeDirectoryGroupId: {
                serializedName: "activeDirectoryGroupId",
                type: {
                    name: "String"
                }
            },
            ltiContextId: {
                serializedName: "ltiContextId",
                type: {
                    name: "String"
                }
            },
            lmsInstance: {
                serializedName: "lmsInstance",
                type: {
                    name: "String"
                }
            },
            ltiClientId: {
                serializedName: "ltiClientId",
                type: {
                    name: "String"
                }
            },
            ltiRosterEndpoint: {
                serializedName: "ltiRosterEndpoint",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const OperationResult = {
    type: {
        name: "Composite",
        className: "OperationResult",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            status: {
                serializedName: "status",
                required: true,
                type: {
                    name: "Enum",
                    allowedValues: [
                        "NotStarted",
                        "InProgress",
                        "Succeeded",
                        "Failed",
                        "Canceled"
                    ]
                }
            },
            startTime: {
                serializedName: "startTime",
                type: {
                    name: "DateTime"
                }
            },
            endTime: {
                serializedName: "endTime",
                type: {
                    name: "DateTime"
                }
            },
            percentComplete: {
                serializedName: "percentComplete",
                type: {
                    name: "Number"
                }
            },
            error: {
                serializedName: "error",
                type: {
                    name: "Composite",
                    className: "ErrorDetail"
                }
            }
        }
    }
};
export const PagedSchedules = {
    type: {
        name: "Composite",
        className: "PagedSchedules",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Schedule"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ScheduleUpdateProperties = {
    type: {
        name: "Composite",
        className: "ScheduleUpdateProperties",
        modelProperties: {
            startAt: {
                serializedName: "startAt",
                type: {
                    name: "DateTime"
                }
            },
            stopAt: {
                serializedName: "stopAt",
                type: {
                    name: "DateTime"
                }
            },
            recurrencePattern: {
                serializedName: "recurrencePattern",
                type: {
                    name: "Composite",
                    className: "RecurrencePattern"
                }
            },
            timeZoneId: {
                constraints: {
                    MaxLength: 50
                },
                serializedName: "timeZoneId",
                type: {
                    name: "String"
                }
            },
            notes: {
                constraints: {
                    MaxLength: 1000
                },
                serializedName: "notes",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const RecurrencePattern = {
    type: {
        name: "Composite",
        className: "RecurrencePattern",
        modelProperties: {
            frequency: {
                serializedName: "frequency",
                required: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Daily", "Weekly"]
                }
            },
            weekDays: {
                serializedName: "weekDays",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Enum",
                            allowedValues: [
                                "Sunday",
                                "Monday",
                                "Tuesday",
                                "Wednesday",
                                "Thursday",
                                "Friday",
                                "Saturday"
                            ]
                        }
                    }
                }
            },
            interval: {
                constraints: {
                    InclusiveMaximum: 365,
                    InclusiveMinimum: 1
                },
                serializedName: "interval",
                type: {
                    name: "Number"
                }
            },
            expirationDate: {
                serializedName: "expirationDate",
                required: true,
                type: {
                    name: "DateTime"
                }
            }
        }
    }
};
export const ScheduleUpdate = {
    type: {
        name: "Composite",
        className: "ScheduleUpdate",
        modelProperties: {
            startAt: {
                serializedName: "properties.startAt",
                type: {
                    name: "DateTime"
                }
            },
            stopAt: {
                serializedName: "properties.stopAt",
                type: {
                    name: "DateTime"
                }
            },
            recurrencePattern: {
                serializedName: "properties.recurrencePattern",
                type: {
                    name: "Composite",
                    className: "RecurrencePattern"
                }
            },
            timeZoneId: {
                constraints: {
                    MaxLength: 50
                },
                serializedName: "properties.timeZoneId",
                type: {
                    name: "String"
                }
            },
            notes: {
                constraints: {
                    MaxLength: 1000
                },
                serializedName: "properties.notes",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const PagedLabServicesSkus = {
    type: {
        name: "Composite",
        className: "PagedLabServicesSkus",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "LabServicesSku"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const LabServicesSku = {
    type: {
        name: "Composite",
        className: "LabServicesSku",
        modelProperties: {
            resourceType: {
                serializedName: "resourceType",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            tier: {
                serializedName: "tier",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            size: {
                serializedName: "size",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            family: {
                serializedName: "family",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            capacity: {
                serializedName: "capacity",
                type: {
                    name: "Composite",
                    className: "LabServicesSkuCapacity"
                }
            },
            capabilities: {
                serializedName: "capabilities",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "LabServicesSkuCapabilities"
                        }
                    }
                }
            },
            locations: {
                serializedName: "locations",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            costs: {
                serializedName: "costs",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "LabServicesSkuCost"
                        }
                    }
                }
            },
            restrictions: {
                serializedName: "restrictions",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "LabServicesSkuRestrictions"
                        }
                    }
                }
            }
        }
    }
};
export const LabServicesSkuCapacity = {
    type: {
        name: "Composite",
        className: "LabServicesSkuCapacity",
        modelProperties: {
            default: {
                serializedName: "default",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            minimum: {
                serializedName: "minimum",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            maximum: {
                serializedName: "maximum",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            scaleType: {
                serializedName: "scaleType",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const LabServicesSkuCapabilities = {
    type: {
        name: "Composite",
        className: "LabServicesSkuCapabilities",
        modelProperties: {
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const LabServicesSkuCost = {
    type: {
        name: "Composite",
        className: "LabServicesSkuCost",
        modelProperties: {
            meterId: {
                serializedName: "meterId",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            quantity: {
                serializedName: "quantity",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            extendedUnit: {
                serializedName: "extendedUnit",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const LabServicesSkuRestrictions = {
    type: {
        name: "Composite",
        className: "LabServicesSkuRestrictions",
        modelProperties: {
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            values: {
                serializedName: "values",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            reasonCode: {
                serializedName: "reasonCode",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ListUsagesResult = {
    type: {
        name: "Composite",
        className: "ListUsagesResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Usage"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const Usage = {
    type: {
        name: "Composite",
        className: "Usage",
        modelProperties: {
            currentValue: {
                serializedName: "currentValue",
                type: {
                    name: "Number"
                }
            },
            limit: {
                serializedName: "limit",
                type: {
                    name: "Number"
                }
            },
            unit: {
                serializedName: "unit",
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                type: {
                    name: "Composite",
                    className: "UsageName"
                }
            },
            id: {
                serializedName: "id",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const UsageName = {
    type: {
        name: "Composite",
        className: "UsageName",
        modelProperties: {
            localizedValue: {
                serializedName: "localizedValue",
                type: {
                    name: "String"
                }
            },
            skuInstances: {
                serializedName: "skuInstances",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            value: {
                serializedName: "value",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const PagedUsers = {
    type: {
        name: "Composite",
        className: "PagedUsers",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "User"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const UserUpdateProperties = {
    type: {
        name: "Composite",
        className: "UserUpdateProperties",
        modelProperties: {
            additionalUsageQuota: {
                serializedName: "additionalUsageQuota",
                type: {
                    name: "TimeSpan"
                }
            }
        }
    }
};
export const UserUpdate = {
    type: {
        name: "Composite",
        className: "UserUpdate",
        modelProperties: {
            additionalUsageQuota: {
                serializedName: "properties.additionalUsageQuota",
                type: {
                    name: "TimeSpan"
                }
            }
        }
    }
};
export const InviteBody = {
    type: {
        name: "Composite",
        className: "InviteBody",
        modelProperties: {
            text: {
                serializedName: "text",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const PagedVirtualMachines = {
    type: {
        name: "Composite",
        className: "PagedVirtualMachines",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualMachine"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const VirtualMachineConnectionProfile = {
    type: {
        name: "Composite",
        className: "VirtualMachineConnectionProfile",
        modelProperties: {
            privateIpAddress: {
                serializedName: "privateIpAddress",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            sshAuthority: {
                serializedName: "sshAuthority",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            sshInBrowserUrl: {
                constraints: {
                    MaxLength: 2000,
                    MinLength: 3
                },
                serializedName: "sshInBrowserUrl",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            rdpAuthority: {
                serializedName: "rdpAuthority",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            rdpInBrowserUrl: {
                constraints: {
                    MaxLength: 2000,
                    MinLength: 3
                },
                serializedName: "rdpInBrowserUrl",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            adminUsername: {
                serializedName: "adminUsername",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            nonAdminUsername: {
                serializedName: "nonAdminUsername",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ResetPasswordBody = {
    type: {
        name: "Composite",
        className: "ResetPasswordBody",
        modelProperties: {
            username: {
                serializedName: "username",
                required: true,
                type: {
                    name: "String"
                }
            },
            password: {
                serializedName: "password",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ImageProperties = {
    type: {
        name: "Composite",
        className: "ImageProperties",
        modelProperties: Object.assign(Object.assign({}, ImageUpdateProperties.type.modelProperties), { provisioningState: {
                serializedName: "provisioningState",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Locked"
                    ]
                }
            }, displayName: {
                serializedName: "displayName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, description: {
                serializedName: "description",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, iconUrl: {
                serializedName: "iconUrl",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, author: {
                serializedName: "author",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, osType: {
                serializedName: "osType",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Windows", "Linux"]
                }
            }, plan: {
                serializedName: "plan",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, termsStatus: {
                serializedName: "termsStatus",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Enabled", "Disabled"]
                }
            }, offer: {
                serializedName: "offer",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, publisher: {
                serializedName: "publisher",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, sku: {
                serializedName: "sku",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, version: {
                serializedName: "version",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, sharedGalleryId: {
                constraints: {
                    MaxLength: 2000,
                    MinLength: 3
                },
                serializedName: "sharedGalleryId",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, availableRegions: {
                serializedName: "availableRegions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, osState: {
                serializedName: "osState",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Generalized", "Specialized"]
                }
            } })
    }
};
export const ProxyResource = {
    type: {
        name: "Composite",
        className: "ProxyResource",
        modelProperties: Object.assign({}, Resource.type.modelProperties)
    }
};
export const TrackedResource = {
    type: {
        name: "Composite",
        className: "TrackedResource",
        modelProperties: Object.assign(Object.assign({}, Resource.type.modelProperties), { tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            }, location: {
                serializedName: "location",
                required: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const LabPlanProperties = {
    type: {
        name: "Composite",
        className: "LabPlanProperties",
        modelProperties: Object.assign(Object.assign({}, LabPlanUpdateProperties.type.modelProperties), { provisioningState: {
                serializedName: "provisioningState",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Locked"
                    ]
                }
            } })
    }
};
export const LabPlanUpdate = {
    type: {
        name: "Composite",
        className: "LabPlanUpdate",
        modelProperties: Object.assign(Object.assign({}, TrackedResourceUpdate.type.modelProperties), { identity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "Identity"
                }
            }, defaultConnectionProfile: {
                serializedName: "properties.defaultConnectionProfile",
                type: {
                    name: "Composite",
                    className: "ConnectionProfile"
                }
            }, defaultAutoShutdownProfile: {
                serializedName: "properties.defaultAutoShutdownProfile",
                type: {
                    name: "Composite",
                    className: "AutoShutdownProfile"
                }
            }, defaultNetworkProfile: {
                serializedName: "properties.defaultNetworkProfile",
                type: {
                    name: "Composite",
                    className: "LabPlanNetworkProfile"
                }
            }, allowedRegions: {
                serializedName: "properties.allowedRegions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, sharedGalleryId: {
                constraints: {
                    MaxLength: 2000,
                    MinLength: 3
                },
                serializedName: "properties.sharedGalleryId",
                type: {
                    name: "String"
                }
            }, supportInfo: {
                serializedName: "properties.supportInfo",
                type: {
                    name: "Composite",
                    className: "SupportInfo"
                }
            }, linkedLmsInstance: {
                constraints: {
                    MaxLength: 2000,
                    MinLength: 3
                },
                serializedName: "properties.linkedLmsInstance",
                type: {
                    name: "String"
                }
            } })
    }
};
export const LabUpdate = {
    type: {
        name: "Composite",
        className: "LabUpdate",
        modelProperties: Object.assign(Object.assign({}, TrackedResourceUpdate.type.modelProperties), { autoShutdownProfile: {
                serializedName: "properties.autoShutdownProfile",
                type: {
                    name: "Composite",
                    className: "AutoShutdownProfile"
                }
            }, connectionProfile: {
                serializedName: "properties.connectionProfile",
                type: {
                    name: "Composite",
                    className: "ConnectionProfile"
                }
            }, virtualMachineProfile: {
                serializedName: "properties.virtualMachineProfile",
                type: {
                    name: "Composite",
                    className: "VirtualMachineProfile"
                }
            }, securityProfile: {
                serializedName: "properties.securityProfile",
                type: {
                    name: "Composite",
                    className: "SecurityProfile"
                }
            }, rosterProfile: {
                serializedName: "properties.rosterProfile",
                type: {
                    name: "Composite",
                    className: "RosterProfile"
                }
            }, labPlanId: {
                constraints: {
                    MaxLength: 2000,
                    MinLength: 3
                },
                serializedName: "properties.labPlanId",
                type: {
                    name: "String"
                }
            }, title: {
                constraints: {
                    MaxLength: 120,
                    MinLength: 1
                },
                serializedName: "properties.title",
                type: {
                    name: "String"
                }
            }, description: {
                serializedName: "properties.description",
                type: {
                    name: "String"
                }
            } })
    }
};
export const LabProperties = {
    type: {
        name: "Composite",
        className: "LabProperties",
        modelProperties: Object.assign(Object.assign({}, LabUpdateProperties.type.modelProperties), { provisioningState: {
                serializedName: "provisioningState",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Locked"
                    ]
                }
            }, networkProfile: {
                serializedName: "networkProfile",
                type: {
                    name: "Composite",
                    className: "LabNetworkProfile"
                }
            }, state: {
                serializedName: "state",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Draft",
                        "Publishing",
                        "Scaling",
                        "Syncing",
                        "Published"
                    ]
                }
            } })
    }
};
export const ScheduleProperties = {
    type: {
        name: "Composite",
        className: "ScheduleProperties",
        modelProperties: Object.assign(Object.assign({}, ScheduleUpdateProperties.type.modelProperties), { provisioningState: {
                serializedName: "provisioningState",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Locked"
                    ]
                }
            } })
    }
};
export const UserProperties = {
    type: {
        name: "Composite",
        className: "UserProperties",
        modelProperties: Object.assign(Object.assign({}, UserUpdateProperties.type.modelProperties), { provisioningState: {
                serializedName: "provisioningState",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Locked"
                    ]
                }
            }, displayName: {
                serializedName: "displayName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, email: {
                constraints: {
                    MaxLength: 254,
                    MinLength: 6
                },
                serializedName: "email",
                required: true,
                type: {
                    name: "String"
                }
            }, registrationState: {
                serializedName: "registrationState",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Registered", "NotRegistered"]
                }
            }, invitationState: {
                serializedName: "invitationState",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["NotSent", "Sending", "Sent", "Failed"]
                }
            }, invitationSent: {
                serializedName: "invitationSent",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, totalUsage: {
                serializedName: "totalUsage",
                readOnly: true,
                type: {
                    name: "TimeSpan"
                }
            } })
    }
};
export const Image = {
    type: {
        name: "Composite",
        className: "Image",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { systemData: {
                serializedName: "systemData",
                type: {
                    name: "Composite",
                    className: "SystemData"
                }
            }, enabledState: {
                serializedName: "properties.enabledState",
                type: {
                    name: "Enum",
                    allowedValues: ["Enabled", "Disabled"]
                }
            }, provisioningState: {
                serializedName: "properties.provisioningState",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Locked"
                    ]
                }
            }, displayName: {
                serializedName: "properties.displayName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, description: {
                serializedName: "properties.description",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, iconUrl: {
                serializedName: "properties.iconUrl",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, author: {
                serializedName: "properties.author",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, osType: {
                serializedName: "properties.osType",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Windows", "Linux"]
                }
            }, plan: {
                serializedName: "properties.plan",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, termsStatus: {
                serializedName: "properties.termsStatus",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Enabled", "Disabled"]
                }
            }, offer: {
                serializedName: "properties.offer",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, publisher: {
                serializedName: "properties.publisher",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, sku: {
                serializedName: "properties.sku",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, version: {
                serializedName: "properties.version",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, sharedGalleryId: {
                constraints: {
                    MaxLength: 2000,
                    MinLength: 3
                },
                serializedName: "properties.sharedGalleryId",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, availableRegions: {
                serializedName: "properties.availableRegions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, osState: {
                serializedName: "properties.osState",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Generalized", "Specialized"]
                }
            } })
    }
};
export const Schedule = {
    type: {
        name: "Composite",
        className: "Schedule",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { systemData: {
                serializedName: "systemData",
                type: {
                    name: "Composite",
                    className: "SystemData"
                }
            }, startAt: {
                serializedName: "properties.startAt",
                type: {
                    name: "DateTime"
                }
            }, stopAt: {
                serializedName: "properties.stopAt",
                type: {
                    name: "DateTime"
                }
            }, recurrencePattern: {
                serializedName: "properties.recurrencePattern",
                type: {
                    name: "Composite",
                    className: "RecurrencePattern"
                }
            }, timeZoneId: {
                constraints: {
                    MaxLength: 50
                },
                serializedName: "properties.timeZoneId",
                type: {
                    name: "String"
                }
            }, notes: {
                constraints: {
                    MaxLength: 1000
                },
                serializedName: "properties.notes",
                type: {
                    name: "String"
                }
            }, provisioningState: {
                serializedName: "properties.provisioningState",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Locked"
                    ]
                }
            } })
    }
};
export const User = {
    type: {
        name: "Composite",
        className: "User",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { systemData: {
                serializedName: "systemData",
                type: {
                    name: "Composite",
                    className: "SystemData"
                }
            }, additionalUsageQuota: {
                serializedName: "properties.additionalUsageQuota",
                type: {
                    name: "TimeSpan"
                }
            }, provisioningState: {
                serializedName: "properties.provisioningState",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Locked"
                    ]
                }
            }, displayName: {
                serializedName: "properties.displayName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, email: {
                constraints: {
                    MaxLength: 254,
                    MinLength: 6
                },
                serializedName: "properties.email",
                required: true,
                type: {
                    name: "String"
                }
            }, registrationState: {
                serializedName: "properties.registrationState",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Registered", "NotRegistered"]
                }
            }, invitationState: {
                serializedName: "properties.invitationState",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["NotSent", "Sending", "Sent", "Failed"]
                }
            }, invitationSent: {
                serializedName: "properties.invitationSent",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, totalUsage: {
                serializedName: "properties.totalUsage",
                readOnly: true,
                type: {
                    name: "TimeSpan"
                }
            } })
    }
};
export const VirtualMachine = {
    type: {
        name: "Composite",
        className: "VirtualMachine",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { systemData: {
                serializedName: "systemData",
                type: {
                    name: "Composite",
                    className: "SystemData"
                }
            }, provisioningState: {
                serializedName: "properties.provisioningState",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Locked"
                    ]
                }
            }, state: {
                serializedName: "properties.state",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Stopped",
                        "Starting",
                        "Running",
                        "Stopping",
                        "ResettingPassword",
                        "Reimaging",
                        "Redeploying"
                    ]
                }
            }, connectionProfile: {
                serializedName: "properties.connectionProfile",
                type: {
                    name: "Composite",
                    className: "VirtualMachineConnectionProfile"
                }
            }, claimedByUserId: {
                serializedName: "properties.claimedByUserId",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, vmType: {
                serializedName: "properties.vmType",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["User", "Template"]
                }
            } })
    }
};
export const LabPlan = {
    type: {
        name: "Composite",
        className: "LabPlan",
        modelProperties: Object.assign(Object.assign({}, TrackedResource.type.modelProperties), { systemData: {
                serializedName: "systemData",
                type: {
                    name: "Composite",
                    className: "SystemData"
                }
            }, identity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "Identity"
                }
            }, defaultConnectionProfile: {
                serializedName: "properties.defaultConnectionProfile",
                type: {
                    name: "Composite",
                    className: "ConnectionProfile"
                }
            }, defaultAutoShutdownProfile: {
                serializedName: "properties.defaultAutoShutdownProfile",
                type: {
                    name: "Composite",
                    className: "AutoShutdownProfile"
                }
            }, defaultNetworkProfile: {
                serializedName: "properties.defaultNetworkProfile",
                type: {
                    name: "Composite",
                    className: "LabPlanNetworkProfile"
                }
            }, allowedRegions: {
                serializedName: "properties.allowedRegions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, sharedGalleryId: {
                constraints: {
                    MaxLength: 2000,
                    MinLength: 3
                },
                serializedName: "properties.sharedGalleryId",
                type: {
                    name: "String"
                }
            }, supportInfo: {
                serializedName: "properties.supportInfo",
                type: {
                    name: "Composite",
                    className: "SupportInfo"
                }
            }, linkedLmsInstance: {
                constraints: {
                    MaxLength: 2000,
                    MinLength: 3
                },
                serializedName: "properties.linkedLmsInstance",
                type: {
                    name: "String"
                }
            }, provisioningState: {
                serializedName: "properties.provisioningState",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Locked"
                    ]
                }
            } })
    }
};
export const Lab = {
    type: {
        name: "Composite",
        className: "Lab",
        modelProperties: Object.assign(Object.assign({}, TrackedResource.type.modelProperties), { systemData: {
                serializedName: "systemData",
                type: {
                    name: "Composite",
                    className: "SystemData"
                }
            }, autoShutdownProfile: {
                serializedName: "properties.autoShutdownProfile",
                type: {
                    name: "Composite",
                    className: "AutoShutdownProfile"
                }
            }, connectionProfile: {
                serializedName: "properties.connectionProfile",
                type: {
                    name: "Composite",
                    className: "ConnectionProfile"
                }
            }, virtualMachineProfile: {
                serializedName: "properties.virtualMachineProfile",
                type: {
                    name: "Composite",
                    className: "VirtualMachineProfile"
                }
            }, securityProfile: {
                serializedName: "properties.securityProfile",
                type: {
                    name: "Composite",
                    className: "SecurityProfile"
                }
            }, rosterProfile: {
                serializedName: "properties.rosterProfile",
                type: {
                    name: "Composite",
                    className: "RosterProfile"
                }
            }, labPlanId: {
                constraints: {
                    MaxLength: 2000,
                    MinLength: 3
                },
                serializedName: "properties.labPlanId",
                type: {
                    name: "String"
                }
            }, title: {
                constraints: {
                    MaxLength: 120,
                    MinLength: 1
                },
                serializedName: "properties.title",
                type: {
                    name: "String"
                }
            }, description: {
                serializedName: "properties.description",
                type: {
                    name: "String"
                }
            }, provisioningState: {
                serializedName: "properties.provisioningState",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Locked"
                    ]
                }
            }, networkProfile: {
                serializedName: "properties.networkProfile",
                type: {
                    name: "Composite",
                    className: "LabNetworkProfile"
                }
            }, state: {
                serializedName: "properties.state",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Draft",
                        "Publishing",
                        "Scaling",
                        "Syncing",
                        "Published"
                    ]
                }
            } })
    }
};
//# sourceMappingURL=mappers.js.map