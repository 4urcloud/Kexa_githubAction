/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
export const OperationListResult = {
    type: {
        name: "Composite",
        className: "OperationListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Operation"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const Operation = {
    type: {
        name: "Composite",
        className: "Operation",
        modelProperties: {
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            display: {
                serializedName: "display",
                type: {
                    name: "Composite",
                    className: "OperationDisplay"
                }
            }
        }
    }
};
export const OperationDisplay = {
    type: {
        name: "Composite",
        className: "OperationDisplay",
        modelProperties: {
            provider: {
                serializedName: "provider",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            resource: {
                serializedName: "resource",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            operation: {
                serializedName: "operation",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ErrorDetails = {
    type: {
        name: "Composite",
        className: "ErrorDetails",
        modelProperties: {
            code: {
                serializedName: "code",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            httpStatusCode: {
                serializedName: "httpStatusCode",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            details: {
                serializedName: "details",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CertificateResponse = {
    type: {
        name: "Composite",
        className: "CertificateResponse",
        modelProperties: {
            properties: {
                serializedName: "properties",
                type: {
                    name: "Composite",
                    className: "CertificateProperties"
                }
            },
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            etag: {
                serializedName: "etag",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            systemData: {
                serializedName: "systemData",
                type: {
                    name: "Composite",
                    className: "SystemData"
                }
            }
        }
    }
};
export const CertificateProperties = {
    type: {
        name: "Composite",
        className: "CertificateProperties",
        modelProperties: {
            subject: {
                serializedName: "subject",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            expiry: {
                serializedName: "expiry",
                readOnly: true,
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            thumbprint: {
                serializedName: "thumbprint",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            isVerified: {
                serializedName: "isVerified",
                type: {
                    name: "Boolean"
                }
            },
            certificate: {
                serializedName: "certificate",
                type: {
                    name: "ByteArray"
                }
            },
            created: {
                serializedName: "created",
                readOnly: true,
                type: {
                    name: "DateTimeRfc1123"
                }
            },
            updated: {
                serializedName: "updated",
                readOnly: true,
                type: {
                    name: "DateTimeRfc1123"
                }
            }
        }
    }
};
export const SystemData = {
    type: {
        name: "Composite",
        className: "SystemData",
        modelProperties: {
            createdBy: {
                serializedName: "createdBy",
                type: {
                    name: "String"
                }
            },
            createdByType: {
                serializedName: "createdByType",
                type: {
                    name: "String"
                }
            },
            createdAt: {
                serializedName: "createdAt",
                type: {
                    name: "DateTime"
                }
            },
            lastModifiedBy: {
                serializedName: "lastModifiedBy",
                type: {
                    name: "String"
                }
            },
            lastModifiedByType: {
                serializedName: "lastModifiedByType",
                type: {
                    name: "String"
                }
            },
            lastModifiedAt: {
                serializedName: "lastModifiedAt",
                type: {
                    name: "DateTime"
                }
            }
        }
    }
};
export const IotDpsPropertiesDescription = {
    type: {
        name: "Composite",
        className: "IotDpsPropertiesDescription",
        modelProperties: {
            state: {
                serializedName: "state",
                type: {
                    name: "String"
                }
            },
            publicNetworkAccess: {
                serializedName: "publicNetworkAccess",
                type: {
                    name: "String"
                }
            },
            ipFilterRules: {
                serializedName: "ipFilterRules",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "IpFilterRule"
                        }
                    }
                }
            },
            privateEndpointConnections: {
                serializedName: "privateEndpointConnections",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "PrivateEndpointConnection"
                        }
                    }
                }
            },
            provisioningState: {
                serializedName: "provisioningState",
                type: {
                    name: "String"
                }
            },
            iotHubs: {
                serializedName: "iotHubs",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "IotHubDefinitionDescription"
                        }
                    }
                }
            },
            allocationPolicy: {
                serializedName: "allocationPolicy",
                type: {
                    name: "String"
                }
            },
            serviceOperationsHostName: {
                serializedName: "serviceOperationsHostName",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            deviceProvisioningHostName: {
                serializedName: "deviceProvisioningHostName",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            idScope: {
                serializedName: "idScope",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            authorizationPolicies: {
                serializedName: "authorizationPolicies",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SharedAccessSignatureAuthorizationRuleAccessRightsDescription"
                        }
                    }
                }
            },
            enableDataResidency: {
                serializedName: "enableDataResidency",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export const IpFilterRule = {
    type: {
        name: "Composite",
        className: "IpFilterRule",
        modelProperties: {
            filterName: {
                serializedName: "filterName",
                required: true,
                type: {
                    name: "String"
                }
            },
            action: {
                serializedName: "action",
                required: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Accept", "Reject"]
                }
            },
            ipMask: {
                serializedName: "ipMask",
                required: true,
                type: {
                    name: "String"
                }
            },
            target: {
                serializedName: "target",
                type: {
                    name: "Enum",
                    allowedValues: ["all", "serviceApi", "deviceApi"]
                }
            }
        }
    }
};
export const PrivateEndpointConnection = {
    type: {
        name: "Composite",
        className: "PrivateEndpointConnection",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            name: {
                constraints: {
                    Pattern: new RegExp("^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$")
                },
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            properties: {
                serializedName: "properties",
                type: {
                    name: "Composite",
                    className: "PrivateEndpointConnectionProperties"
                }
            },
            systemData: {
                serializedName: "systemData",
                type: {
                    name: "Composite",
                    className: "SystemData"
                }
            }
        }
    }
};
export const PrivateEndpointConnectionProperties = {
    type: {
        name: "Composite",
        className: "PrivateEndpointConnectionProperties",
        modelProperties: {
            privateEndpoint: {
                serializedName: "privateEndpoint",
                type: {
                    name: "Composite",
                    className: "PrivateEndpoint"
                }
            },
            privateLinkServiceConnectionState: {
                serializedName: "privateLinkServiceConnectionState",
                type: {
                    name: "Composite",
                    className: "PrivateLinkServiceConnectionState"
                }
            }
        }
    }
};
export const PrivateEndpoint = {
    type: {
        name: "Composite",
        className: "PrivateEndpoint",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const PrivateLinkServiceConnectionState = {
    type: {
        name: "Composite",
        className: "PrivateLinkServiceConnectionState",
        modelProperties: {
            status: {
                serializedName: "status",
                required: true,
                type: {
                    name: "String"
                }
            },
            description: {
                serializedName: "description",
                required: true,
                type: {
                    name: "String"
                }
            },
            actionsRequired: {
                serializedName: "actionsRequired",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const IotHubDefinitionDescription = {
    type: {
        name: "Composite",
        className: "IotHubDefinitionDescription",
        modelProperties: {
            applyAllocationPolicy: {
                serializedName: "applyAllocationPolicy",
                type: {
                    name: "Boolean"
                }
            },
            allocationWeight: {
                serializedName: "allocationWeight",
                type: {
                    name: "Number"
                }
            },
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            connectionString: {
                serializedName: "connectionString",
                required: true,
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SharedAccessSignatureAuthorizationRuleAccessRightsDescription = {
    type: {
        name: "Composite",
        className: "SharedAccessSignatureAuthorizationRuleAccessRightsDescription",
        modelProperties: {
            keyName: {
                serializedName: "keyName",
                required: true,
                type: {
                    name: "String"
                }
            },
            primaryKey: {
                serializedName: "primaryKey",
                type: {
                    name: "String"
                }
            },
            secondaryKey: {
                serializedName: "secondaryKey",
                type: {
                    name: "String"
                }
            },
            rights: {
                serializedName: "rights",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const IotDpsSkuInfo = {
    type: {
        name: "Composite",
        className: "IotDpsSkuInfo",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            tier: {
                serializedName: "tier",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            capacity: {
                serializedName: "capacity",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const Resource = {
    type: {
        name: "Composite",
        className: "Resource",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            name: {
                constraints: {
                    Pattern: new RegExp("^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$")
                },
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                required: true,
                type: {
                    name: "String"
                }
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            }
        }
    }
};
export const TagsResource = {
    type: {
        name: "Composite",
        className: "TagsResource",
        modelProperties: {
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            }
        }
    }
};
export const CertificateListDescription = {
    type: {
        name: "Composite",
        className: "CertificateListDescription",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CertificateResponse"
                        }
                    }
                }
            }
        }
    }
};
export const ProvisioningServiceDescriptionListResult = {
    type: {
        name: "Composite",
        className: "ProvisioningServiceDescriptionListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ProvisioningServiceDescription"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const AsyncOperationResult = {
    type: {
        name: "Composite",
        className: "AsyncOperationResult",
        modelProperties: {
            status: {
                serializedName: "status",
                type: {
                    name: "String"
                }
            },
            error: {
                serializedName: "error",
                type: {
                    name: "Composite",
                    className: "ErrorMessage"
                }
            }
        }
    }
};
export const ErrorMessage = {
    type: {
        name: "Composite",
        className: "ErrorMessage",
        modelProperties: {
            code: {
                serializedName: "code",
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                type: {
                    name: "String"
                }
            },
            details: {
                serializedName: "details",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const IotDpsSkuDefinitionListResult = {
    type: {
        name: "Composite",
        className: "IotDpsSkuDefinitionListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "IotDpsSkuDefinition"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const IotDpsSkuDefinition = {
    type: {
        name: "Composite",
        className: "IotDpsSkuDefinition",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const VerificationCodeResponse = {
    type: {
        name: "Composite",
        className: "VerificationCodeResponse",
        modelProperties: {
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            etag: {
                serializedName: "etag",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            properties: {
                serializedName: "properties",
                type: {
                    name: "Composite",
                    className: "VerificationCodeResponseProperties"
                }
            }
        }
    }
};
export const VerificationCodeResponseProperties = {
    type: {
        name: "Composite",
        className: "VerificationCodeResponseProperties",
        modelProperties: {
            verificationCode: {
                serializedName: "verificationCode",
                type: {
                    name: "String"
                }
            },
            subject: {
                serializedName: "subject",
                type: {
                    name: "String"
                }
            },
            expiry: {
                serializedName: "expiry",
                type: {
                    name: "String"
                }
            },
            thumbprint: {
                serializedName: "thumbprint",
                type: {
                    name: "String"
                }
            },
            isVerified: {
                serializedName: "isVerified",
                type: {
                    name: "Boolean"
                }
            },
            certificate: {
                serializedName: "certificate",
                type: {
                    name: "ByteArray"
                }
            },
            created: {
                serializedName: "created",
                type: {
                    name: "String"
                }
            },
            updated: {
                serializedName: "updated",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const VerificationCodeRequest = {
    type: {
        name: "Composite",
        className: "VerificationCodeRequest",
        modelProperties: {
            certificate: {
                serializedName: "certificate",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const OperationInputs = {
    type: {
        name: "Composite",
        className: "OperationInputs",
        modelProperties: {
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const NameAvailabilityInfo = {
    type: {
        name: "Composite",
        className: "NameAvailabilityInfo",
        modelProperties: {
            nameAvailable: {
                serializedName: "nameAvailable",
                type: {
                    name: "Boolean"
                }
            },
            reason: {
                serializedName: "reason",
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SharedAccessSignatureAuthorizationRuleListResult = {
    type: {
        name: "Composite",
        className: "SharedAccessSignatureAuthorizationRuleListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SharedAccessSignatureAuthorizationRuleAccessRightsDescription"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const PrivateLinkResources = {
    type: {
        name: "Composite",
        className: "PrivateLinkResources",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "GroupIdInformation"
                        }
                    }
                }
            }
        }
    }
};
export const GroupIdInformation = {
    type: {
        name: "Composite",
        className: "GroupIdInformation",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            name: {
                constraints: {
                    Pattern: new RegExp("^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$")
                },
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            properties: {
                serializedName: "properties",
                type: {
                    name: "Composite",
                    className: "GroupIdInformationProperties"
                }
            }
        }
    }
};
export const GroupIdInformationProperties = {
    type: {
        name: "Composite",
        className: "GroupIdInformationProperties",
        modelProperties: {
            groupId: {
                serializedName: "groupId",
                type: {
                    name: "String"
                }
            },
            requiredMembers: {
                serializedName: "requiredMembers",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            requiredZoneNames: {
                serializedName: "requiredZoneNames",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export const CertificateBodyDescription = {
    type: {
        name: "Composite",
        className: "CertificateBodyDescription",
        modelProperties: {
            certificate: {
                serializedName: "certificate",
                type: {
                    name: "String"
                }
            },
            isVerified: {
                serializedName: "isVerified",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export const ProvisioningServiceDescription = {
    type: {
        name: "Composite",
        className: "ProvisioningServiceDescription",
        modelProperties: Object.assign(Object.assign({}, Resource.type.modelProperties), { etag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            }, properties: {
                serializedName: "properties",
                type: {
                    name: "Composite",
                    className: "IotDpsPropertiesDescription"
                }
            }, sku: {
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "IotDpsSkuInfo"
                }
            }, systemData: {
                serializedName: "systemData",
                type: {
                    name: "Composite",
                    className: "SystemData"
                }
            } })
    }
};
export const IotDpsResourceDeletePrivateEndpointConnectionHeaders = {
    type: {
        name: "Composite",
        className: "IotDpsResourceDeletePrivateEndpointConnectionHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            retryAfter: {
                serializedName: "retry-after",
                type: {
                    name: "String"
                }
            }
        }
    }
};
//# sourceMappingURL=mappers.js.map