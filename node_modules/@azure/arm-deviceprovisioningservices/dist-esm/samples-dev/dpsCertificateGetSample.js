/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { IotDpsClient } from "@azure/arm-deviceprovisioningservices";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Get the certificate from the provisioning service.
 *
 * @summary Get the certificate from the provisioning service.
 * x-ms-original-file: specification/deviceprovisioningservices/resource-manager/Microsoft.Devices/stable/2022-02-05/examples/DPSGetCertificate.json
 */
function dpsGetCertificate() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["DEVICEPROVISIONINGSERVICES_SUBSCRIPTION_ID"] ||
            "91d12660-3dec-467a-be2a-213b5544ddc0";
        const certificateName = "cert";
        const resourceGroupName = process.env["DEVICEPROVISIONINGSERVICES_RESOURCE_GROUP"] ||
            "myResourceGroup";
        const provisioningServiceName = "myFirstProvisioningService";
        const credential = new DefaultAzureCredential();
        const client = new IotDpsClient(credential, subscriptionId);
        const result = yield client.dpsCertificate.get(certificateName, resourceGroupName, provisioningServiceName);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        dpsGetCertificate();
    });
}
main().catch(console.error);
//# sourceMappingURL=dpsCertificateGetSample.js.map