{"version":3,"file":"index.js","sources":["../src/models/index.ts","../src/models/mappers.ts","../src/models/parameters.ts","../src/operations/operations.ts","../src/lroImpl.ts","../src/operations/workspaces.ts","../src/operations/usages.ts","../src/operations/virtualMachineSizes.ts","../src/operations/quotas.ts","../src/operations/computeOperations.ts","../src/operations/privateEndpointConnections.ts","../src/operations/privateLinkResources.ts","../src/operations/workspaceConnections.ts","../src/operations/workspaceFeatures.ts","../src/operations/workspaceSkus.ts","../src/azureMachineLearningWorkspaces.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport type ComputeUnion =\n  | Compute\n  | Aks\n  | Kubernetes\n  | AmlCompute\n  | ComputeInstance\n  | VirtualMachine\n  | HDInsight\n  | DataFactory\n  | Databricks\n  | DataLakeAnalytics\n  | SynapseSpark;\nexport type ComputeSecretsUnion =\n  | ComputeSecrets\n  | AksComputeSecrets\n  | VirtualMachineSecrets\n  | DatabricksComputeSecrets;\n\n/** An array of operations supported by the resource provider. */\nexport interface OperationListResult {\n  /** List of AML workspace operations supported by the AML workspace resource provider. */\n  value?: Operation[];\n}\n\n/** Azure Machine Learning workspace REST API operation */\nexport interface Operation {\n  /** Operation name: {provider}/{resource}/{operation} */\n  name?: string;\n  /** Display name of operation */\n  display?: OperationDisplay;\n}\n\n/** Display name of operation */\nexport interface OperationDisplay {\n  /** The resource provider name: Microsoft.MachineLearningExperimentation */\n  provider?: string;\n  /** The resource on which the operation is performed. */\n  resource?: string;\n  /** The operation that users can perform. */\n  operation?: string;\n  /** The description for the operation. */\n  description?: string;\n}\n\n/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */\nexport interface ErrorResponse {\n  /** The error object. */\n  error?: ErrorDetail;\n}\n\n/** The error detail. */\nexport interface ErrorDetail {\n  /**\n   * The error code.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly code?: string;\n  /**\n   * The error message.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n  /**\n   * The error target.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly target?: string;\n  /**\n   * The error details.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly details?: ErrorDetail[];\n  /**\n   * The error additional info.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly additionalInfo?: ErrorAdditionalInfo[];\n}\n\n/** The resource management error additional info. */\nexport interface ErrorAdditionalInfo {\n  /**\n   * The additional info type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * The additional info.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly info?: Record<string, unknown>;\n}\n\nexport interface EncryptionProperty {\n  /** Indicates whether or not the encryption is enabled for the workspace. */\n  status: EncryptionStatus;\n  /** The identity that will be used to access the key vault for encryption at rest. */\n  identity?: IdentityForCmk;\n  /** Customer Key vault properties. */\n  keyVaultProperties: KeyVaultProperties;\n}\n\n/** Identity that will be used to access key vault for encryption at rest */\nexport interface IdentityForCmk {\n  /** The ArmId of the user assigned identity that will be used to access the customer managed key vault */\n  userAssignedIdentity?: string;\n}\n\nexport interface KeyVaultProperties {\n  /** The ArmId of the keyVault where the customer owned encryption key is present. */\n  keyVaultArmId: string;\n  /** Key vault uri to access the encryption key. */\n  keyIdentifier: string;\n  /** For future use - The client id of the identity which will be used to access key vault. */\n  identityClientId?: string;\n}\n\n/** The Private Endpoint resource. */\nexport interface PrivateEndpoint {\n  /**\n   * The ARM identifier for Private Endpoint\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The ARM identifier for Subnet resource that private endpoint links to\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly subnetArmId?: string;\n}\n\n/** A collection of information about the state of the connection between service consumer and provider. */\nexport interface PrivateLinkServiceConnectionState {\n  /** Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service. */\n  status?: PrivateEndpointServiceConnectionStatus;\n  /** The reason for approval/rejection of the connection. */\n  description?: string;\n  /** A message indicating if changes on the service provider require any updates on the consumer. */\n  actionsRequired?: string;\n}\n\n/** Identity for the resource. */\nexport interface Identity {\n  /**\n   * The principal ID of resource identity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly principalId?: string;\n  /**\n   * The tenant ID of resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantId?: string;\n  /** The identity type. */\n  type?: ResourceIdentityType;\n  /** The user assigned identities associated with the resource. */\n  userAssignedIdentities?: { [propertyName: string]: UserAssignedIdentity };\n}\n\n/** User Assigned Identity */\nexport interface UserAssignedIdentity {\n  /**\n   * The principal ID of the user assigned identity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly principalId?: string;\n  /**\n   * The tenant ID of the user assigned identity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantId?: string;\n  /**\n   * The clientId(aka appId) of the user assigned identity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly clientId?: string;\n}\n\n/** Sku of the resource */\nexport interface Sku {\n  /** Name of the sku */\n  name?: string;\n  /** Tier of the sku like Basic or Enterprise */\n  tier?: string;\n}\n\n/** Metadata pertaining to creation and last modification of the resource. */\nexport interface SystemData {\n  /** The identity that created the resource. */\n  createdBy?: string;\n  /** The type of identity that created the resource. */\n  createdByType?: CreatedByType;\n  /** The timestamp of resource creation (UTC). */\n  createdAt?: Date;\n  /** The identity that last modified the resource. */\n  lastModifiedBy?: string;\n  /** The type of identity that last modified the resource. */\n  lastModifiedByType?: CreatedByType;\n  /** The timestamp of resource last modification (UTC) */\n  lastModifiedAt?: Date;\n}\n\n/** Common fields that are returned in the response for all Azure Resource Manager resources */\nexport interface Resource {\n  /**\n   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The name of the resource\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n}\n\nexport interface SharedPrivateLinkResource {\n  /** Unique name of the private link. */\n  name?: string;\n  /** The resource id that private link links to. */\n  privateLinkResourceId?: string;\n  /** The private link resource group id. */\n  groupId?: string;\n  /** Request message. */\n  requestMessage?: string;\n  /** Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service. */\n  status?: PrivateEndpointServiceConnectionStatus;\n}\n\nexport interface NotebookResourceInfo {\n  fqdn?: string;\n  /** the data plane resourceId that used to initialize notebook component */\n  resourceId?: string;\n  /** The error that occurs when preparing notebook. */\n  notebookPreparationError?: NotebookPreparationError;\n}\n\nexport interface NotebookPreparationError {\n  errorMessage?: string;\n  statusCode?: number;\n}\n\nexport interface ServiceManagedResourcesSettings {\n  /** The settings for the service managed cosmosdb account. */\n  cosmosDb?: CosmosDbSettings;\n}\n\nexport interface CosmosDbSettings {\n  /** The throughput of the collections in cosmosdb database */\n  collectionsThroughput?: number;\n}\n\n/** The parameters for updating a machine learning workspace. */\nexport interface WorkspaceUpdateParameters {\n  /** The resource tags for the machine learning workspace. */\n  tags?: { [propertyName: string]: string };\n  /** The sku of the workspace. */\n  sku?: Sku;\n  /** The identity of the resource. */\n  identity?: Identity;\n  /** The description of this workspace. */\n  description?: string;\n  /** The friendly name for this workspace. */\n  friendlyName?: string;\n  /** The compute name for image build */\n  imageBuildCompute?: string;\n  /** The service managed resource settings. */\n  serviceManagedResourcesSettings?: ServiceManagedResourcesSettings;\n  /** The user assigned identity resource id that represents the workspace identity. */\n  primaryUserAssignedIdentity?: string;\n  /** Whether requests from Public Network are allowed. */\n  publicNetworkAccess?: PublicNetworkAccess;\n}\n\n/** The result of a request to list machine learning workspaces. */\nexport interface WorkspaceListResult {\n  /** The list of machine learning workspaces. Since this list may be incomplete, the nextLink field should be used to request the next list of machine learning workspaces. */\n  value?: Workspace[];\n  /** The URI that can be used to request the next list of machine learning workspaces. */\n  nextLink?: string;\n}\n\n/** Parameters to diagnose a workspace */\nexport interface DiagnoseWorkspaceParameters {\n  /** Value of Parameters */\n  value?: DiagnoseRequestProperties;\n}\n\nexport interface DiagnoseRequestProperties {\n  /** Setting for diagnosing user defined routing */\n  udr?: { [propertyName: string]: Record<string, unknown> };\n  /** Setting for diagnosing network security group */\n  nsg?: { [propertyName: string]: Record<string, unknown> };\n  /** Setting for diagnosing resource lock */\n  resourceLock?: { [propertyName: string]: Record<string, unknown> };\n  /** Setting for diagnosing dns resolution */\n  dnsResolution?: { [propertyName: string]: Record<string, unknown> };\n  /** Setting for diagnosing dependent storage account */\n  storageAccount?: { [propertyName: string]: Record<string, unknown> };\n  /** Setting for diagnosing dependent key vault */\n  keyVault?: { [propertyName: string]: Record<string, unknown> };\n  /** Setting for diagnosing dependent container registry */\n  containerRegistry?: { [propertyName: string]: Record<string, unknown> };\n  /** Setting for diagnosing dependent application insights */\n  applicationInsights?: { [propertyName: string]: Record<string, unknown> };\n  /** Setting for diagnosing unclassified category of problems */\n  others?: { [propertyName: string]: Record<string, unknown> };\n}\n\nexport interface DiagnoseResponseResult {\n  value?: DiagnoseResponseResultValue;\n}\n\nexport interface DiagnoseResponseResultValue {\n  userDefinedRouteResults?: DiagnoseResult[];\n  networkSecurityRuleResults?: DiagnoseResult[];\n  resourceLockResults?: DiagnoseResult[];\n  dnsResolutionResults?: DiagnoseResult[];\n  storageAccountResults?: DiagnoseResult[];\n  keyVaultResults?: DiagnoseResult[];\n  containerRegistryResults?: DiagnoseResult[];\n  applicationInsightsResults?: DiagnoseResult[];\n  otherResults?: DiagnoseResult[];\n}\n\n/** Result of Diagnose */\nexport interface DiagnoseResult {\n  /**\n   * Code for workspace setup error\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly code?: string;\n  /**\n   * Level of workspace setup error\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly level?: DiagnoseResultLevel;\n  /**\n   * Message of workspace setup error\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n}\n\nexport interface ListWorkspaceKeysResult {\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly userStorageKey?: string;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly userStorageResourceId?: string;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly appInsightsInstrumentationKey?: string;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly containerRegistryCredentials?: RegistryListCredentialsResult;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly notebookAccessKeys?: ListNotebookKeysResult;\n}\n\nexport interface RegistryListCredentialsResult {\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly location?: string;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly username?: string;\n  passwords?: Password[];\n}\n\nexport interface Password {\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly name?: string;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly value?: string;\n}\n\nexport interface ListNotebookKeysResult {\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly primaryAccessKey?: string;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly secondaryAccessKey?: string;\n}\n\n/** The List Usages operation response. */\nexport interface ListUsagesResult {\n  /**\n   * The list of AML resource usages.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: Usage[];\n  /**\n   * The URI to fetch the next page of AML resource usage information. Call ListNext() with this to fetch the next page of AML resource usage information.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Describes AML Resource Usage. */\nexport interface Usage {\n  /**\n   * Specifies the resource ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Region of the AML workspace in the id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly amlWorkspaceLocation?: string;\n  /**\n   * Specifies the resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * An enum describing the unit of usage measurement.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly unit?: UsageUnit;\n  /**\n   * The current usage of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currentValue?: number;\n  /**\n   * The maximum permitted usage of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly limit?: number;\n  /**\n   * The name of the type of usage.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: UsageName;\n}\n\n/** The Usage Names. */\nexport interface UsageName {\n  /**\n   * The name of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: string;\n  /**\n   * The localized name of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly localizedValue?: string;\n}\n\n/** The List Virtual Machine size operation response. */\nexport interface VirtualMachineSizeListResult {\n  /** The list of virtual machine sizes supported by AmlCompute. */\n  value?: VirtualMachineSize[];\n}\n\n/** Describes the properties of a VM size. */\nexport interface VirtualMachineSize {\n  /**\n   * The name of the virtual machine size.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The family name of the virtual machine size.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly family?: string;\n  /**\n   * The number of vCPUs supported by the virtual machine size.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly vCPUs?: number;\n  /**\n   * The number of gPUs supported by the virtual machine size.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly gpus?: number;\n  /**\n   * The OS VHD disk size, in MB, allowed by the virtual machine size.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly osVhdSizeMB?: number;\n  /**\n   * The resource volume size, in MB, allowed by the virtual machine size.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly maxResourceVolumeMB?: number;\n  /**\n   * The amount of memory, in GB, supported by the virtual machine size.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly memoryGB?: number;\n  /**\n   * Specifies if the virtual machine size supports low priority VMs.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lowPriorityCapable?: boolean;\n  /**\n   * Specifies if the virtual machine size supports premium IO.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly premiumIO?: boolean;\n  /** The estimated price information for using a VM. */\n  estimatedVMPrices?: EstimatedVMPrices;\n  /** Specifies the compute types supported by the virtual machine size. */\n  supportedComputeTypes?: string[];\n}\n\n/** The estimated price info for using a VM. */\nexport interface EstimatedVMPrices {\n  /** Three lettered code specifying the currency of the VM price. Example: USD */\n  billingCurrency: BillingCurrency;\n  /** The unit of time measurement for the specified VM price. Example: OneHour */\n  unitOfMeasure: UnitOfMeasure;\n  /** The list of estimated prices for using a VM of a particular OS type, tier, etc. */\n  values: EstimatedVMPrice[];\n}\n\n/** The estimated price info for using a VM of a particular OS type, tier, etc. */\nexport interface EstimatedVMPrice {\n  /** The price charged for using the VM. */\n  retailPrice: number;\n  /** Operating system type used by the VM. */\n  osType: VMPriceOSType;\n  /** The type of the VM. */\n  vmTier: VMTier;\n}\n\n/** Quota update parameters. */\nexport interface QuotaUpdateParameters {\n  /** The list for update quota. */\n  value?: QuotaBaseProperties[];\n  /** Region of workspace quota to be updated. */\n  location?: string;\n}\n\n/** The properties for Quota update or retrieval. */\nexport interface QuotaBaseProperties {\n  /** Specifies the resource ID. */\n  id?: string;\n  /** Specifies the resource type. */\n  type?: string;\n  /** The maximum permitted quota of the resource. */\n  limit?: number;\n  /** An enum describing the unit of quota measurement. */\n  unit?: QuotaUnit;\n}\n\n/** The result of update workspace quota. */\nexport interface UpdateWorkspaceQuotasResult {\n  /**\n   * The list of workspace quota update result.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: UpdateWorkspaceQuotas[];\n  /**\n   * The URI to fetch the next page of workspace quota update result. Call ListNext() with this to fetch the next page of Workspace Quota update result.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The properties for update Quota response. */\nexport interface UpdateWorkspaceQuotas {\n  /**\n   * Specifies the resource ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Specifies the resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** The maximum permitted quota of the resource. */\n  limit?: number;\n  /**\n   * An enum describing the unit of quota measurement.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly unit?: QuotaUnit;\n  /** Status of update workspace quota. */\n  status?: Status;\n}\n\n/** The List WorkspaceQuotasByVMFamily operation response. */\nexport interface ListWorkspaceQuotas {\n  /**\n   * The list of Workspace Quotas by VM Family\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ResourceQuota[];\n  /**\n   * The URI to fetch the next page of workspace quota information by VM Family. Call ListNext() with this to fetch the next page of Workspace Quota information.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The quota assigned to a resource. */\nexport interface ResourceQuota {\n  /**\n   * Specifies the resource ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Region of the AML workspace in the id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly amlWorkspaceLocation?: string;\n  /**\n   * Specifies the resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * Name of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: ResourceName;\n  /**\n   * The maximum permitted quota of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly limit?: number;\n  /**\n   * An enum describing the unit of quota measurement.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly unit?: QuotaUnit;\n}\n\n/** The Resource Name. */\nexport interface ResourceName {\n  /**\n   * The name of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: string;\n  /**\n   * The localized name of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly localizedValue?: string;\n}\n\n/** Paginated list of Machine Learning compute objects wrapped in ARM resource envelope. */\nexport interface PaginatedComputeResourcesList {\n  /** An array of Machine Learning compute objects wrapped in ARM resource envelope. */\n  value?: ComputeResource[];\n  /** A continuation link (absolute URI) to the next page of results in the list. */\n  nextLink?: string;\n}\n\nexport interface Components1D3SwueSchemasComputeresourceAllof1 {\n  /** Compute properties */\n  properties?: ComputeUnion;\n}\n\n/** Machine Learning compute object. */\nexport interface Compute {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  computeType:\n    | \"AKS\"\n    | \"Kubernetes\"\n    | \"AmlCompute\"\n    | \"ComputeInstance\"\n    | \"VirtualMachine\"\n    | \"HDInsight\"\n    | \"DataFactory\"\n    | \"Databricks\"\n    | \"DataLakeAnalytics\"\n    | \"SynapseSpark\";\n  /** Location for the underlying compute */\n  computeLocation?: string;\n  /**\n   * The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** The description of the Machine Learning compute. */\n  description?: string;\n  /**\n   * The time at which the compute was created.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly createdOn?: Date;\n  /**\n   * The time at which the compute was last modified.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly modifiedOn?: Date;\n  /** ARM resource id of the underlying compute */\n  resourceId?: string;\n  /**\n   * Errors during provisioning\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningErrors?: ErrorResponse[];\n  /**\n   * Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isAttachedCompute?: boolean;\n  /** Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication. */\n  disableLocalAuth?: boolean;\n}\n\n/** AmlCompute update parameters. */\nexport interface ClusterUpdateParameters {\n  /** Properties of ClusterUpdate */\n  properties?: ScaleSettingsInformation;\n}\n\n/** Desired scale settings for the amlCompute. */\nexport interface ScaleSettingsInformation {\n  /** scale settings for AML Compute */\n  scaleSettings?: ScaleSettings;\n}\n\n/** scale settings for AML Compute */\nexport interface ScaleSettings {\n  /** Max number of nodes to use */\n  maxNodeCount: number;\n  /** Min number of nodes to use */\n  minNodeCount?: number;\n  /** Node Idle Time before scaling down amlCompute. This string needs to be in the RFC Format. */\n  nodeIdleTimeBeforeScaleDown?: string;\n}\n\n/** Result of AmlCompute Nodes */\nexport interface AmlComputeNodesInformation {\n  /**\n   * The collection of returned AmlCompute nodes details.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nodes?: AmlComputeNodeInformation[];\n  /**\n   * The continuation token.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Compute node information related to a AmlCompute. */\nexport interface AmlComputeNodeInformation {\n  /**\n   * ID of the compute node.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nodeId?: string;\n  /**\n   * Private IP address of the compute node.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly privateIpAddress?: string;\n  /**\n   * Public IP address of the compute node.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly publicIpAddress?: string;\n  /**\n   * SSH port number of the node.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly port?: number;\n  /**\n   * State of the compute node. Values are idle, running, preparing, unusable, leaving and preempted.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nodeState?: NodeState;\n  /**\n   * ID of the Experiment running on the node, if any else null.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly runId?: string;\n}\n\nexport interface NotebookAccessTokenResult {\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly notebookResourceId?: string;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly hostName?: string;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly publicDns?: string;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly accessToken?: string;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly tokenType?: string;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly expiresIn?: number;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly refreshToken?: string;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly scope?: string;\n}\n\n/** Secrets related to a Machine Learning compute. Might differ for every type of compute. */\nexport interface ComputeSecrets {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  computeType: \"AKS\" | \"VirtualMachine\" | \"Databricks\";\n}\n\n/** List of private endpoint connection associated with the specified workspace */\nexport interface PrivateEndpointConnectionListResult {\n  /** Array of private endpoint connections */\n  value?: PrivateEndpointConnection[];\n}\n\n/** A list of private link resources */\nexport interface PrivateLinkResourceListResult {\n  /** Array of private link resources */\n  value?: PrivateLinkResource[];\n}\n\nexport interface ListStorageAccountKeysResult {\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly userStorageKey?: string;\n}\n\n/** Paginated list of Workspace connection objects. */\nexport interface PaginatedWorkspaceConnectionsList {\n  /** An array of Workspace connection objects. */\n  value?: WorkspaceConnection[];\n  /** A continuation link (absolute URI) to the next page of results in the list. */\n  nextLink?: string;\n}\n\n/** Workspace connection. */\nexport interface WorkspaceConnection {\n  /**\n   * ResourceId of the workspace connection.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Friendly name of the workspace connection.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Resource type of workspace connection.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Category of the workspace connection. */\n  category?: string;\n  /** Target of the workspace connection. */\n  target?: string;\n  /** Authorization type of the workspace connection. */\n  authType?: string;\n  /** Value details of the workspace connection. */\n  value?: string;\n  /** format for the workspace connection value */\n  valueFormat?: ValueFormat;\n}\n\nexport interface ExternalFqdnResponse {\n  value?: FqdnEndpoints[];\n}\n\nexport interface FqdnEndpoints {\n  properties?: FqdnEndpointsProperties;\n}\n\nexport interface FqdnEndpointsProperties {\n  category?: string;\n  endpoints?: FqdnEndpoint[];\n}\n\nexport interface FqdnEndpoint {\n  domainName?: string;\n  endpointDetails?: FqdnEndpointDetail[];\n}\n\nexport interface FqdnEndpointDetail {\n  port?: number;\n}\n\n/** The List Aml user feature operation response. */\nexport interface ListAmlUserFeatureResult {\n  /**\n   * The list of AML user facing features.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: AmlUserFeature[];\n  /**\n   * The URI to fetch the next page of AML user features information. Call ListNext() with this to fetch the next page of AML user features information.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Features enabled for a workspace */\nexport interface AmlUserFeature {\n  /** Specifies the feature ID */\n  id?: string;\n  /** Specifies the feature name */\n  displayName?: string;\n  /** Describes the feature for user experience */\n  description?: string;\n}\n\n/** List of skus with features */\nexport interface SkuListResult {\n  value?: WorkspaceSku[];\n  /** The URI to fetch the next page of Workspace Skus. Call ListNext() with this URI to fetch the next page of Workspace Skus */\n  nextLink?: string;\n}\n\n/** Describes Workspace Sku details and features */\nexport interface WorkspaceSku {\n  /**\n   * The set of locations that the SKU is available. This will be supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly locations?: string[];\n  /**\n   * A list of locations and availability zones in those locations where the SKU is available.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly locationInfo?: ResourceSkuLocationInfo[];\n  /**\n   * Sku Tier like Basic or Enterprise\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tier?: string;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly resourceType?: string;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly name?: string;\n  /**\n   * List of features/user capabilities associated with the sku\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly capabilities?: SKUCapability[];\n  /** The restrictions because of which SKU cannot be used. This is empty if there are no restrictions. */\n  restrictions?: Restriction[];\n}\n\nexport interface ResourceSkuLocationInfo {\n  /**\n   * Location of the SKU\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly location?: string;\n  /**\n   * List of availability zones where the SKU is supported.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly zones?: string[];\n  /**\n   * Details of capabilities available to a SKU in specific zones.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly zoneDetails?: ResourceSkuZoneDetails[];\n}\n\n/** Describes The zonal capabilities of a SKU. */\nexport interface ResourceSkuZoneDetails {\n  /**\n   * The set of zones that the SKU is available in with the specified capabilities.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string[];\n  /**\n   * A list of capabilities that are available for the SKU in the specified list of zones.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly capabilities?: SKUCapability[];\n}\n\n/** Features/user capabilities associated with the sku */\nexport interface SKUCapability {\n  /** Capability/Feature ID */\n  name?: string;\n  /** Details about the feature/capability */\n  value?: string;\n}\n\n/** The restriction because of which SKU cannot be used. */\nexport interface Restriction {\n  /**\n   * The type of restrictions. As of now only possible value for this is location.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly values?: string[];\n  /** The reason for the restriction. */\n  reasonCode?: ReasonCode;\n}\n\n/** Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet. */\nexport interface ResourceId {\n  /** The ID of the resource */\n  id: string;\n}\n\n/** AKS properties */\nexport interface AKSProperties {\n  /** Cluster full qualified domain name */\n  clusterFqdn?: string;\n  /**\n   * System services\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemServices?: SystemService[];\n  /** Number of agents */\n  agentCount?: number;\n  /** Agent virtual machine size */\n  agentVmSize?: string;\n  /** Intended usage of the cluster */\n  clusterPurpose?: ClusterPurpose;\n  /** SSL configuration */\n  sslConfiguration?: SslConfiguration;\n  /** AKS networking configuration for vnet */\n  aksNetworkingConfiguration?: AksNetworkingConfiguration;\n  /** Load Balancer Type */\n  loadBalancerType?: LoadBalancerType;\n  /** Load Balancer Subnet */\n  loadBalancerSubnet?: string;\n}\n\n/** A system service running on a compute. */\nexport interface SystemService {\n  /**\n   * The type of this system service.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemServiceType?: string;\n  /**\n   * Public IP address\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly publicIpAddress?: string;\n  /**\n   * The version for this type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly version?: string;\n}\n\n/** The ssl configuration for scoring */\nexport interface SslConfiguration {\n  /** Enable or disable ssl for scoring */\n  status?: SslConfigurationStatus;\n  /** Cert data */\n  cert?: string;\n  /** Key data */\n  key?: string;\n  /** CNAME of the cert */\n  cname?: string;\n  /** Leaf domain label of public endpoint */\n  leafDomainLabel?: string;\n  /** Indicates whether to overwrite existing domain label. */\n  overwriteExistingDomain?: boolean;\n}\n\n/** Advance configuration for AKS networking */\nexport interface AksNetworkingConfiguration {\n  /** Virtual network subnet resource ID the compute nodes belong to */\n  subnetId?: string;\n  /** A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges. */\n  serviceCidr?: string;\n  /** An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr. */\n  dnsServiceIP?: string;\n  /** A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range. */\n  dockerBridgeCidr?: string;\n}\n\n/** Kubernetes Compute Schema */\nexport interface KubernetesSchema {\n  /** Properties of Kubernetes */\n  properties?: KubernetesProperties;\n}\n\n/** Kubernetes properties */\nexport interface KubernetesProperties {\n  /** Relay connection string. */\n  relayConnectionString?: string;\n  /** ServiceBus connection string. */\n  serviceBusConnectionString?: string;\n  /** Extension principal-id. */\n  extensionPrincipalId?: string;\n  /** Extension instance release train. */\n  extensionInstanceReleaseTrain?: string;\n  /** VC name. */\n  vcName?: string;\n  /** Compute namespace */\n  namespace?: string;\n  /** Default instance type */\n  defaultInstanceType?: string;\n  /** Instance Type Schema */\n  instanceTypes?: { [propertyName: string]: InstanceTypeSchema };\n}\n\n/** Instance type schema. */\nexport interface InstanceTypeSchema {\n  /** Node Selector */\n  nodeSelector?: { [propertyName: string]: string };\n  /** Resource requests/limits for this instance type */\n  resources?: InstanceTypeSchemaResources;\n}\n\n/** Resource requests/limits for this instance type */\nexport interface InstanceTypeSchemaResources {\n  /** Resource requests for this instance type */\n  requests?: { [propertyName: string]: string };\n  /** Resource limits for this instance type */\n  limits?: { [propertyName: string]: string };\n}\n\n/** AML Compute properties */\nexport interface AmlComputeProperties {\n  /** Compute OS Type */\n  osType?: OsType;\n  /** Virtual Machine Size */\n  vmSize?: string;\n  /** Virtual Machine priority */\n  vmPriority?: VmPriority;\n  /** Virtual Machine image for AML Compute - windows only */\n  virtualMachineImage?: VirtualMachineImage;\n  /** Network is isolated or not */\n  isolatedNetwork?: boolean;\n  /** Scale settings for AML Compute */\n  scaleSettings?: ScaleSettings;\n  /** Credentials for an administrator user account that will be created on each compute node. */\n  userAccountCredentials?: UserAccountCredentials;\n  /** Virtual network subnet resource ID the compute nodes belong to. */\n  subnet?: ResourceId;\n  /** State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on all nodes of the cluster. Enabled - Indicates that the public ssh port is open on all nodes of the cluster. NotSpecified - Indicates that the public ssh port is closed on all nodes of the cluster if VNet is defined, else is open all public nodes. It can be default only during cluster creation time, after creation it will be either enabled or disabled. */\n  remoteLoginPortPublicAccess?: RemoteLoginPortPublicAccess;\n  /**\n   * Allocation state of the compute. Possible values are: steady - Indicates that the compute is not resizing. There are no changes to the number of compute nodes in the compute in progress. A compute enters this state when it is created and when no operations are being performed on the compute to change the number of compute nodes. resizing - Indicates that the compute is resizing; that is, compute nodes are being added to or removed from the compute.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly allocationState?: AllocationState;\n  /**\n   * The time at which the compute entered its current allocation state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly allocationStateTransitionTime?: Date;\n  /**\n   * Collection of errors encountered by various compute nodes during node setup.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly errors?: ErrorResponse[];\n  /**\n   * The number of compute nodes currently assigned to the compute.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currentNodeCount?: number;\n  /**\n   * The target number of compute nodes for the compute. If the allocationState is resizing, this property denotes the target node count for the ongoing resize operation. If the allocationState is steady, this property denotes the target node count for the previous resize operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly targetNodeCount?: number;\n  /**\n   * Counts of various node states on the compute.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nodeStateCounts?: NodeStateCounts;\n  /** Enable or disable node public IP address provisioning. Possible values are: Possible values are: true - Indicates that the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will have a private endpoint and no public IPs. */\n  enableNodePublicIp?: boolean;\n}\n\n/** Virtual Machine image for Windows AML Compute */\nexport interface VirtualMachineImage {\n  /** Virtual Machine image path */\n  id: string;\n}\n\n/** Settings for user account that gets created on each on the nodes of a compute. */\nexport interface UserAccountCredentials {\n  /** Name of the administrator user account which can be used to SSH to nodes. */\n  adminUserName: string;\n  /** SSH public key of the administrator user account. */\n  adminUserSshPublicKey?: string;\n  /** Password of the administrator user account. */\n  adminUserPassword?: string;\n}\n\n/** Counts of various compute node states on the amlCompute. */\nexport interface NodeStateCounts {\n  /**\n   * Number of compute nodes in idle state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly idleNodeCount?: number;\n  /**\n   * Number of compute nodes which are running jobs.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly runningNodeCount?: number;\n  /**\n   * Number of compute nodes which are being prepared.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly preparingNodeCount?: number;\n  /**\n   * Number of compute nodes which are in unusable state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly unusableNodeCount?: number;\n  /**\n   * Number of compute nodes which are leaving the amlCompute.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly leavingNodeCount?: number;\n  /**\n   * Number of compute nodes which are in preempted state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly preemptedNodeCount?: number;\n}\n\n/** Compute Instance properties */\nexport interface ComputeInstanceProperties {\n  /** Virtual Machine Size */\n  vmSize?: string;\n  /** Virtual network subnet resource ID the compute nodes belong to. */\n  subnet?: ResourceId;\n  /** Policy for sharing applications on this compute instance among users of parent workspace. If Personal, only the creator can access applications on this compute instance. When Shared, any workspace user can access applications on this instance depending on his/her assigned role. */\n  applicationSharingPolicy?: ApplicationSharingPolicy;\n  /** Specifies policy and settings for SSH access. */\n  sshSettings?: ComputeInstanceSshSettings;\n  /**\n   * Describes all connectivity endpoints available for this ComputeInstance.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly connectivityEndpoints?: ComputeInstanceConnectivityEndpoints;\n  /**\n   * Describes available applications and their endpoints on this ComputeInstance.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly applications?: ComputeInstanceApplication[];\n  /**\n   * Describes information on user who created this ComputeInstance.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly createdBy?: ComputeInstanceCreatedBy;\n  /**\n   * Collection of errors encountered on this ComputeInstance.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly errors?: ErrorResponse[];\n  /**\n   * The current state of this ComputeInstance.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly state?: ComputeInstanceState;\n  /** The Compute Instance Authorization type. Available values are personal (default). */\n  computeInstanceAuthorizationType?: ComputeInstanceAuthorizationType;\n  /** Settings for a personal compute instance. */\n  personalComputeInstanceSettings?: PersonalComputeInstanceSettings;\n  /** Details of customized scripts to execute for setting up the cluster. */\n  setupScripts?: SetupScripts;\n  /**\n   * The last operation on ComputeInstance.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastOperation?: ComputeInstanceLastOperation;\n}\n\n/** Specifies policy and settings for SSH access. */\nexport interface ComputeInstanceSshSettings {\n  /** State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on this instance. Enabled - Indicates that the public ssh port is open and accessible according to the VNet/subnet policy if applicable. */\n  sshPublicAccess?: SshPublicAccess;\n  /**\n   * Describes the admin user name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly adminUserName?: string;\n  /**\n   * Describes the port for connecting through SSH.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sshPort?: number;\n  /** Specifies the SSH rsa public key file as a string. Use \"ssh-keygen -t rsa -b 2048\" to generate your SSH key pairs. */\n  adminPublicKey?: string;\n}\n\n/** Defines all connectivity endpoints and properties for an ComputeInstance. */\nexport interface ComputeInstanceConnectivityEndpoints {\n  /**\n   * Public IP Address of this ComputeInstance.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly publicIpAddress?: string;\n  /**\n   * Private IP Address of this ComputeInstance (local to the VNET in which the compute instance is deployed).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly privateIpAddress?: string;\n}\n\n/** Defines an Aml Instance application and its connectivity endpoint URI. */\nexport interface ComputeInstanceApplication {\n  /** Name of the ComputeInstance application. */\n  displayName?: string;\n  /** Application' endpoint URI. */\n  endpointUri?: string;\n}\n\n/** Describes information on user who created this ComputeInstance. */\nexport interface ComputeInstanceCreatedBy {\n  /**\n   * Name of the user.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly userName?: string;\n  /**\n   * Uniquely identifies user' Azure Active Directory organization.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly userOrgId?: string;\n  /**\n   * Uniquely identifies the user within his/her organization.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly userId?: string;\n}\n\n/** Settings for a personal compute instance. */\nexport interface PersonalComputeInstanceSettings {\n  /** A user explicitly assigned to a personal compute instance. */\n  assignedUser?: AssignedUser;\n}\n\n/** A user that can be assigned to a compute instance. */\nexport interface AssignedUser {\n  /** User’s AAD Object Id. */\n  objectId: string;\n  /** User’s AAD Tenant Id. */\n  tenantId: string;\n}\n\n/** Details of customized scripts to execute for setting up the cluster. */\nexport interface SetupScripts {\n  /** Customized setup scripts */\n  scripts?: ScriptsToExecute;\n}\n\n/** Customized setup scripts */\nexport interface ScriptsToExecute {\n  /** Script that's run every time the machine starts. */\n  startupScript?: ScriptReference;\n  /** Script that's run only once during provision of the compute. */\n  creationScript?: ScriptReference;\n}\n\n/** Script reference */\nexport interface ScriptReference {\n  /** The storage source of the script: inline, workspace. */\n  scriptSource?: string;\n  /** The location of scripts in the mounted volume. */\n  scriptData?: string;\n  /** Optional command line arguments passed to the script to run. */\n  scriptArguments?: string;\n  /** Optional time period passed to timeout command. */\n  timeout?: string;\n}\n\n/** The last operation on ComputeInstance. */\nexport interface ComputeInstanceLastOperation {\n  /** Name of the last operation. */\n  operationName?: OperationName;\n  /** Time of the last operation. */\n  operationTime?: Date;\n  /** Operation status. */\n  operationStatus?: OperationStatus;\n}\n\nexport interface VirtualMachineProperties {\n  /** Virtual Machine size */\n  virtualMachineSize?: string;\n  /** Port open for ssh connections. */\n  sshPort?: number;\n  /** Public IP address of the virtual machine. */\n  address?: string;\n  /** Admin credentials for virtual machine */\n  administratorAccount?: VirtualMachineSshCredentials;\n  /** Indicates whether this compute will be used for running notebooks. */\n  isNotebookInstanceCompute?: boolean;\n}\n\n/** Admin credentials for virtual machine */\nexport interface VirtualMachineSshCredentials {\n  /** Username of admin account */\n  username?: string;\n  /** Password of admin account */\n  password?: string;\n  /** Public key data */\n  publicKeyData?: string;\n  /** Private key data */\n  privateKeyData?: string;\n}\n\n/** HDInsight compute properties */\nexport interface HDInsightProperties {\n  /** Port open for ssh connections on the master node of the cluster. */\n  sshPort?: number;\n  /** Public IP address of the master node of the cluster. */\n  address?: string;\n  /** Admin credentials for master node of the cluster */\n  administratorAccount?: VirtualMachineSshCredentials;\n}\n\n/** Properties of Databricks */\nexport interface DatabricksProperties {\n  /** Databricks access token */\n  databricksAccessToken?: string;\n  /** Workspace Url */\n  workspaceUrl?: string;\n}\n\nexport interface DataLakeAnalyticsProperties {\n  /** DataLake Store Account Name */\n  dataLakeStoreAccountName?: string;\n}\n\nexport interface SynapseSparkProperties {\n  /** Auto scale properties. */\n  autoScaleProperties?: AutoScaleProperties;\n  /** Auto pause properties. */\n  autoPauseProperties?: AutoPauseProperties;\n  /** Spark version. */\n  sparkVersion?: string;\n  /** The number of compute nodes currently assigned to the compute. */\n  nodeCount?: number;\n  /** Node size. */\n  nodeSize?: string;\n  /** Node size family. */\n  nodeSizeFamily?: string;\n  /** Azure subscription identifier. */\n  subscriptionId?: string;\n  /** Name of the resource group in which workspace is located. */\n  resourceGroup?: string;\n  /** Name of Azure Machine Learning workspace. */\n  workspaceName?: string;\n  /** Pool name. */\n  poolName?: string;\n}\n\n/** Auto scale properties */\nexport interface AutoScaleProperties {\n  minNodeCount?: number;\n  enabled?: boolean;\n  maxNodeCount?: number;\n}\n\n/** Auto pause properties */\nexport interface AutoPauseProperties {\n  delayInMinutes?: number;\n  enabled?: boolean;\n}\n\n/** Service principal credentials. */\nexport interface ServicePrincipalCredentials {\n  /** Client Id */\n  clientId: string;\n  /** Client secret */\n  clientSecret: string;\n}\n\n/** Properties of AksComputeSecrets */\nexport interface AksComputeSecretsProperties {\n  /** Content of kubeconfig file that can be used to connect to the Kubernetes cluster. */\n  userKubeConfig?: string;\n  /** Content of kubeconfig file that can be used to connect to the Kubernetes cluster. */\n  adminKubeConfig?: string;\n  /** Image registry pull secret. */\n  imagePullSecretName?: string;\n}\n\n/** Properties of Databricks Compute Secrets */\nexport interface DatabricksComputeSecretsProperties {\n  /** access token for databricks account. */\n  databricksAccessToken?: string;\n}\n\n/** The resource requirements for the container (cpu and memory). */\nexport interface ContainerResourceRequirements {\n  /**\n   * The minimum amount of CPU cores to be used by the container. More info:\n   * https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/\n   */\n  cpu?: number;\n  /**\n   * The maximum amount of CPU cores allowed to be used by the container. More info:\n   * https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/\n   */\n  cpuLimit?: number;\n  /**\n   * The minimum amount of memory (in GB) to be used by the container. More info:\n   * https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/\n   */\n  memoryInGB?: number;\n  /**\n   * The maximum amount of memory (in GB) allowed to be used by the container. More info:\n   * https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/\n   */\n  memoryInGBLimit?: number;\n  /** The number of GPU cores in the container. */\n  gpu?: number;\n  /** The number of FPGA PCIE devices exposed to the container. Must be multiple of 2. */\n  fpga?: number;\n}\n\n/** The Private Endpoint Connection resource. */\nexport type PrivateEndpointConnection = Resource & {\n  /** The identity of the resource. */\n  identity?: Identity;\n  /** Specifies the location of the resource. */\n  location?: string;\n  /** Contains resource tags defined as key/value pairs. */\n  tags?: { [propertyName: string]: string };\n  /** The sku of the workspace. */\n  sku?: Sku;\n  /**\n   * System data\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n  /** The resource of private end point. */\n  privateEndpoint?: PrivateEndpoint;\n  /** A collection of information about the state of the connection between service consumer and provider. */\n  privateLinkServiceConnectionState?: PrivateLinkServiceConnectionState;\n  /**\n   * The provisioning state of the private endpoint connection resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: PrivateEndpointConnectionProvisioningState;\n};\n\n/** An object that represents a machine learning workspace. */\nexport type Workspace = Resource & {\n  /** The identity of the resource. */\n  identity?: Identity;\n  /** Specifies the location of the resource. */\n  location?: string;\n  /** Contains resource tags defined as key/value pairs. */\n  tags?: { [propertyName: string]: string };\n  /** The sku of the workspace. */\n  sku?: Sku;\n  /**\n   * System data\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n  /**\n   * The immutable id associated with this workspace.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly workspaceId?: string;\n  /** The description of this workspace. */\n  description?: string;\n  /** The friendly name for this workspace. This name in mutable */\n  friendlyName?: string;\n  /** ARM id of the key vault associated with this workspace. This cannot be changed once the workspace has been created */\n  keyVault?: string;\n  /** ARM id of the application insights associated with this workspace. This cannot be changed once the workspace has been created */\n  applicationInsights?: string;\n  /** ARM id of the container registry associated with this workspace. This cannot be changed once the workspace has been created */\n  containerRegistry?: string;\n  /** ARM id of the storage account associated with this workspace. This cannot be changed once the workspace has been created */\n  storageAccount?: string;\n  /** Url for the discovery service to identify regional endpoints for machine learning experimentation services */\n  discoveryUrl?: string;\n  /**\n   * The current deployment state of workspace resource. The provisioningState is to indicate states for resource provisioning.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** The encryption settings of Azure ML workspace. */\n  encryption?: EncryptionProperty;\n  /** The flag to signal HBI data in the workspace and reduce diagnostic data collected by the service */\n  hbiWorkspace?: boolean;\n  /**\n   * The name of the managed resource group created by workspace RP in customer subscription if the workspace is CMK workspace\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly serviceProvisionedResourceGroup?: string;\n  /**\n   * Count of private connections in the workspace\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly privateLinkCount?: number;\n  /** The compute name for image build */\n  imageBuildCompute?: string;\n  /** The flag to indicate whether to allow public access when behind VNet. */\n  allowPublicAccessWhenBehindVnet?: boolean;\n  /** Whether requests from Public Network are allowed. */\n  publicNetworkAccess?: PublicNetworkAccess;\n  /**\n   * The list of private endpoint connections in the workspace.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly privateEndpointConnections?: PrivateEndpointConnection[];\n  /** The list of shared private link resources in this workspace. */\n  sharedPrivateLinkResources?: SharedPrivateLinkResource[];\n  /**\n   * The notebook info of Azure ML workspace.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly notebookInfo?: NotebookResourceInfo;\n  /** The service managed resource settings. */\n  serviceManagedResourcesSettings?: ServiceManagedResourcesSettings;\n  /** The user assigned identity resource id that represents the workspace identity. */\n  primaryUserAssignedIdentity?: string;\n  /**\n   * The tenant id associated with this workspace.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantId?: string;\n  /**\n   * If the storage associated with the workspace has hierarchical namespace(HNS) enabled.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly storageHnsEnabled?: boolean;\n  /**\n   * The URI associated with this workspace that machine learning flow must point at to set up tracking.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly mlFlowTrackingUri?: string;\n};\n\n/** Machine Learning compute object wrapped into ARM resource envelope. */\nexport type ComputeResource = Resource &\n  Components1D3SwueSchemasComputeresourceAllof1 & {\n    /** The identity of the resource. */\n    identity?: Identity;\n    /** Specifies the location of the resource. */\n    location?: string;\n    /** Contains resource tags defined as key/value pairs. */\n    tags?: { [propertyName: string]: string };\n    /** The sku of the workspace. */\n    sku?: Sku;\n    /**\n     * System data\n     * NOTE: This property will not be serialized. It can only be populated by the server.\n     */\n    readonly systemData?: SystemData;\n  };\n\n/** A private link resource */\nexport type PrivateLinkResource = Resource & {\n  /** The identity of the resource. */\n  identity?: Identity;\n  /** Specifies the location of the resource. */\n  location?: string;\n  /** Contains resource tags defined as key/value pairs. */\n  tags?: { [propertyName: string]: string };\n  /** The sku of the workspace. */\n  sku?: Sku;\n  /**\n   * System data\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n  /**\n   * The private link resource group id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly groupId?: string;\n  /**\n   * The private link resource required member names.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly requiredMembers?: string[];\n  /** The private link resource Private link DNS zone name. */\n  requiredZoneNames?: string[];\n};\n\n/** A Machine Learning compute based on AKS. */\nexport type Aks = Compute & {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  computeType: \"AKS\";\n  /** AKS properties */\n  properties?: AKSProperties;\n};\n\n/** A Machine Learning compute based on Kubernetes Compute. */\nexport type Kubernetes = Compute &\n  KubernetesSchema & {\n    /** Polymorphic discriminator, which specifies the different types this object can be */\n    computeType: \"Kubernetes\";\n  };\n\n/** Properties(top level) of AmlCompute */\nexport type AmlCompute = Compute & {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  computeType: \"AmlCompute\";\n  /** Properties of AmlCompute */\n  properties?: AmlComputeProperties;\n};\n\n/** Properties(top level) of ComputeInstance */\nexport type ComputeInstance = Compute & {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  computeType: \"ComputeInstance\";\n  /** Properties of ComputeInstance */\n  properties?: ComputeInstanceProperties;\n};\n\n/** A Machine Learning compute based on Azure Virtual Machines. */\nexport type VirtualMachine = Compute & {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  computeType: \"VirtualMachine\";\n  properties?: VirtualMachineProperties;\n};\n\n/** A HDInsight compute. */\nexport type HDInsight = Compute & {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  computeType: \"HDInsight\";\n  /** HDInsight compute properties */\n  properties?: HDInsightProperties;\n};\n\n/** A DataFactory compute. */\nexport type DataFactory = Compute & {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  computeType: \"DataFactory\";\n};\n\n/** A DataFactory compute. */\nexport type Databricks = Compute & {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  computeType: \"Databricks\";\n  /** Properties of Databricks */\n  properties?: DatabricksProperties;\n};\n\n/** A DataLakeAnalytics compute. */\nexport type DataLakeAnalytics = Compute & {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  computeType: \"DataLakeAnalytics\";\n  properties?: DataLakeAnalyticsProperties;\n};\n\n/** A SynapseSpark compute. */\nexport type SynapseSpark = Compute & {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  computeType: \"SynapseSpark\";\n  properties?: SynapseSparkProperties;\n};\n\n/** Secrets related to a Machine Learning compute based on AKS. */\nexport type AksComputeSecrets = ComputeSecrets &\n  AksComputeSecretsProperties & {\n    /** Polymorphic discriminator, which specifies the different types this object can be */\n    computeType: \"AKS\";\n  };\n\n/** Secrets related to a Machine Learning compute based on AKS. */\nexport type VirtualMachineSecrets = ComputeSecrets & {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  computeType: \"VirtualMachine\";\n  /** Admin credentials for virtual machine. */\n  administratorAccount?: VirtualMachineSshCredentials;\n};\n\n/** Secrets related to a Machine Learning compute based on Databricks. */\nexport type DatabricksComputeSecrets = ComputeSecrets &\n  DatabricksComputeSecretsProperties & {\n    /** Polymorphic discriminator, which specifies the different types this object can be */\n    computeType: \"Databricks\";\n  };\n\n/** Defines headers for Workspaces_diagnose operation. */\nexport interface WorkspacesDiagnoseHeaders {\n  /** URI to poll for asynchronous operation result. */\n  location?: string;\n  /** Duration the client should wait between requests, in seconds. */\n  retryAfter?: number;\n}\n\n/** Defines headers for Compute_createOrUpdate operation. */\nexport interface ComputeCreateOrUpdateHeaders {\n  /** URI to poll for asynchronous operation status. */\n  azureAsyncOperation?: string;\n}\n\n/** Defines headers for Compute_delete operation. */\nexport interface ComputeDeleteHeaders {\n  /** URI to poll for asynchronous operation status. */\n  azureAsyncOperation?: string;\n  /** URI to poll for asynchronous operation result. */\n  location?: string;\n}\n\n/** Known values of {@link ProvisioningState} that the service accepts. */\nexport enum KnownProvisioningState {\n  Unknown = \"Unknown\",\n  Updating = \"Updating\",\n  Creating = \"Creating\",\n  Deleting = \"Deleting\",\n  Succeeded = \"Succeeded\",\n  Failed = \"Failed\",\n  Canceled = \"Canceled\"\n}\n\n/**\n * Defines values for ProvisioningState. \\\n * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unknown** \\\n * **Updating** \\\n * **Creating** \\\n * **Deleting** \\\n * **Succeeded** \\\n * **Failed** \\\n * **Canceled**\n */\nexport type ProvisioningState = string;\n\n/** Known values of {@link EncryptionStatus} that the service accepts. */\nexport enum KnownEncryptionStatus {\n  Enabled = \"Enabled\",\n  Disabled = \"Disabled\"\n}\n\n/**\n * Defines values for EncryptionStatus. \\\n * {@link KnownEncryptionStatus} can be used interchangeably with EncryptionStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled** \\\n * **Disabled**\n */\nexport type EncryptionStatus = string;\n\n/** Known values of {@link PublicNetworkAccess} that the service accepts. */\nexport enum KnownPublicNetworkAccess {\n  Enabled = \"Enabled\",\n  Disabled = \"Disabled\"\n}\n\n/**\n * Defines values for PublicNetworkAccess. \\\n * {@link KnownPublicNetworkAccess} can be used interchangeably with PublicNetworkAccess,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled** \\\n * **Disabled**\n */\nexport type PublicNetworkAccess = string;\n\n/** Known values of {@link PrivateEndpointServiceConnectionStatus} that the service accepts. */\nexport enum KnownPrivateEndpointServiceConnectionStatus {\n  Pending = \"Pending\",\n  Approved = \"Approved\",\n  Rejected = \"Rejected\",\n  Disconnected = \"Disconnected\",\n  Timeout = \"Timeout\"\n}\n\n/**\n * Defines values for PrivateEndpointServiceConnectionStatus. \\\n * {@link KnownPrivateEndpointServiceConnectionStatus} can be used interchangeably with PrivateEndpointServiceConnectionStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Pending** \\\n * **Approved** \\\n * **Rejected** \\\n * **Disconnected** \\\n * **Timeout**\n */\nexport type PrivateEndpointServiceConnectionStatus = string;\n\n/** Known values of {@link PrivateEndpointConnectionProvisioningState} that the service accepts. */\nexport enum KnownPrivateEndpointConnectionProvisioningState {\n  Succeeded = \"Succeeded\",\n  Creating = \"Creating\",\n  Deleting = \"Deleting\",\n  Failed = \"Failed\"\n}\n\n/**\n * Defines values for PrivateEndpointConnectionProvisioningState. \\\n * {@link KnownPrivateEndpointConnectionProvisioningState} can be used interchangeably with PrivateEndpointConnectionProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Succeeded** \\\n * **Creating** \\\n * **Deleting** \\\n * **Failed**\n */\nexport type PrivateEndpointConnectionProvisioningState = string;\n\n/** Known values of {@link CreatedByType} that the service accepts. */\nexport enum KnownCreatedByType {\n  User = \"User\",\n  Application = \"Application\",\n  ManagedIdentity = \"ManagedIdentity\",\n  Key = \"Key\"\n}\n\n/**\n * Defines values for CreatedByType. \\\n * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **User** \\\n * **Application** \\\n * **ManagedIdentity** \\\n * **Key**\n */\nexport type CreatedByType = string;\n\n/** Known values of {@link DiagnoseResultLevel} that the service accepts. */\nexport enum KnownDiagnoseResultLevel {\n  Warning = \"Warning\",\n  Error = \"Error\",\n  Information = \"Information\"\n}\n\n/**\n * Defines values for DiagnoseResultLevel. \\\n * {@link KnownDiagnoseResultLevel} can be used interchangeably with DiagnoseResultLevel,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Warning** \\\n * **Error** \\\n * **Information**\n */\nexport type DiagnoseResultLevel = string;\n\n/** Known values of {@link UsageUnit} that the service accepts. */\nexport enum KnownUsageUnit {\n  Count = \"Count\"\n}\n\n/**\n * Defines values for UsageUnit. \\\n * {@link KnownUsageUnit} can be used interchangeably with UsageUnit,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Count**\n */\nexport type UsageUnit = string;\n\n/** Known values of {@link BillingCurrency} that the service accepts. */\nexport enum KnownBillingCurrency {\n  USD = \"USD\"\n}\n\n/**\n * Defines values for BillingCurrency. \\\n * {@link KnownBillingCurrency} can be used interchangeably with BillingCurrency,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **USD**\n */\nexport type BillingCurrency = string;\n\n/** Known values of {@link UnitOfMeasure} that the service accepts. */\nexport enum KnownUnitOfMeasure {\n  OneHour = \"OneHour\"\n}\n\n/**\n * Defines values for UnitOfMeasure. \\\n * {@link KnownUnitOfMeasure} can be used interchangeably with UnitOfMeasure,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **OneHour**\n */\nexport type UnitOfMeasure = string;\n\n/** Known values of {@link VMPriceOSType} that the service accepts. */\nexport enum KnownVMPriceOSType {\n  Linux = \"Linux\",\n  Windows = \"Windows\"\n}\n\n/**\n * Defines values for VMPriceOSType. \\\n * {@link KnownVMPriceOSType} can be used interchangeably with VMPriceOSType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Linux** \\\n * **Windows**\n */\nexport type VMPriceOSType = string;\n\n/** Known values of {@link VMTier} that the service accepts. */\nexport enum KnownVMTier {\n  Standard = \"Standard\",\n  LowPriority = \"LowPriority\",\n  Spot = \"Spot\"\n}\n\n/**\n * Defines values for VMTier. \\\n * {@link KnownVMTier} can be used interchangeably with VMTier,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Standard** \\\n * **LowPriority** \\\n * **Spot**\n */\nexport type VMTier = string;\n\n/** Known values of {@link QuotaUnit} that the service accepts. */\nexport enum KnownQuotaUnit {\n  Count = \"Count\"\n}\n\n/**\n * Defines values for QuotaUnit. \\\n * {@link KnownQuotaUnit} can be used interchangeably with QuotaUnit,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Count**\n */\nexport type QuotaUnit = string;\n\n/** Known values of {@link Status} that the service accepts. */\nexport enum KnownStatus {\n  Undefined = \"Undefined\",\n  Success = \"Success\",\n  Failure = \"Failure\",\n  InvalidQuotaBelowClusterMinimum = \"InvalidQuotaBelowClusterMinimum\",\n  InvalidQuotaExceedsSubscriptionLimit = \"InvalidQuotaExceedsSubscriptionLimit\",\n  InvalidVMFamilyName = \"InvalidVMFamilyName\",\n  OperationNotSupportedForSku = \"OperationNotSupportedForSku\",\n  OperationNotEnabledForRegion = \"OperationNotEnabledForRegion\"\n}\n\n/**\n * Defines values for Status. \\\n * {@link KnownStatus} can be used interchangeably with Status,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Undefined** \\\n * **Success** \\\n * **Failure** \\\n * **InvalidQuotaBelowClusterMinimum** \\\n * **InvalidQuotaExceedsSubscriptionLimit** \\\n * **InvalidVMFamilyName** \\\n * **OperationNotSupportedForSku** \\\n * **OperationNotEnabledForRegion**\n */\nexport type Status = string;\n\n/** Known values of {@link ComputeType} that the service accepts. */\nexport enum KnownComputeType {\n  AKS = \"AKS\",\n  Kubernetes = \"Kubernetes\",\n  AmlCompute = \"AmlCompute\",\n  ComputeInstance = \"ComputeInstance\",\n  DataFactory = \"DataFactory\",\n  VirtualMachine = \"VirtualMachine\",\n  HDInsight = \"HDInsight\",\n  Databricks = \"Databricks\",\n  DataLakeAnalytics = \"DataLakeAnalytics\",\n  SynapseSpark = \"SynapseSpark\"\n}\n\n/**\n * Defines values for ComputeType. \\\n * {@link KnownComputeType} can be used interchangeably with ComputeType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **AKS** \\\n * **Kubernetes** \\\n * **AmlCompute** \\\n * **ComputeInstance** \\\n * **DataFactory** \\\n * **VirtualMachine** \\\n * **HDInsight** \\\n * **Databricks** \\\n * **DataLakeAnalytics** \\\n * **SynapseSpark**\n */\nexport type ComputeType = string;\n\n/** Known values of {@link UnderlyingResourceAction} that the service accepts. */\nexport enum KnownUnderlyingResourceAction {\n  Delete = \"Delete\",\n  Detach = \"Detach\"\n}\n\n/**\n * Defines values for UnderlyingResourceAction. \\\n * {@link KnownUnderlyingResourceAction} can be used interchangeably with UnderlyingResourceAction,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Delete** \\\n * **Detach**\n */\nexport type UnderlyingResourceAction = string;\n\n/** Known values of {@link NodeState} that the service accepts. */\nexport enum KnownNodeState {\n  Idle = \"idle\",\n  Running = \"running\",\n  Preparing = \"preparing\",\n  Unusable = \"unusable\",\n  Leaving = \"leaving\",\n  Preempted = \"preempted\"\n}\n\n/**\n * Defines values for NodeState. \\\n * {@link KnownNodeState} can be used interchangeably with NodeState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **idle** \\\n * **running** \\\n * **preparing** \\\n * **unusable** \\\n * **leaving** \\\n * **preempted**\n */\nexport type NodeState = string;\n\n/** Known values of {@link ValueFormat} that the service accepts. */\nexport enum KnownValueFormat {\n  Json = \"JSON\"\n}\n\n/**\n * Defines values for ValueFormat. \\\n * {@link KnownValueFormat} can be used interchangeably with ValueFormat,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **JSON**\n */\nexport type ValueFormat = string;\n\n/** Known values of {@link ReasonCode} that the service accepts. */\nexport enum KnownReasonCode {\n  NotSpecified = \"NotSpecified\",\n  NotAvailableForRegion = \"NotAvailableForRegion\",\n  NotAvailableForSubscription = \"NotAvailableForSubscription\"\n}\n\n/**\n * Defines values for ReasonCode. \\\n * {@link KnownReasonCode} can be used interchangeably with ReasonCode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NotSpecified** \\\n * **NotAvailableForRegion** \\\n * **NotAvailableForSubscription**\n */\nexport type ReasonCode = string;\n\n/** Known values of {@link ClusterPurpose} that the service accepts. */\nexport enum KnownClusterPurpose {\n  FastProd = \"FastProd\",\n  DenseProd = \"DenseProd\",\n  DevTest = \"DevTest\"\n}\n\n/**\n * Defines values for ClusterPurpose. \\\n * {@link KnownClusterPurpose} can be used interchangeably with ClusterPurpose,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **FastProd** \\\n * **DenseProd** \\\n * **DevTest**\n */\nexport type ClusterPurpose = string;\n\n/** Known values of {@link SslConfigurationStatus} that the service accepts. */\nexport enum KnownSslConfigurationStatus {\n  Disabled = \"Disabled\",\n  Enabled = \"Enabled\",\n  Auto = \"Auto\"\n}\n\n/**\n * Defines values for SslConfigurationStatus. \\\n * {@link KnownSslConfigurationStatus} can be used interchangeably with SslConfigurationStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Disabled** \\\n * **Enabled** \\\n * **Auto**\n */\nexport type SslConfigurationStatus = string;\n\n/** Known values of {@link LoadBalancerType} that the service accepts. */\nexport enum KnownLoadBalancerType {\n  PublicIp = \"PublicIp\",\n  InternalLoadBalancer = \"InternalLoadBalancer\"\n}\n\n/**\n * Defines values for LoadBalancerType. \\\n * {@link KnownLoadBalancerType} can be used interchangeably with LoadBalancerType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **PublicIp** \\\n * **InternalLoadBalancer**\n */\nexport type LoadBalancerType = string;\n\n/** Known values of {@link OsType} that the service accepts. */\nexport enum KnownOsType {\n  Linux = \"Linux\",\n  Windows = \"Windows\"\n}\n\n/**\n * Defines values for OsType. \\\n * {@link KnownOsType} can be used interchangeably with OsType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Linux** \\\n * **Windows**\n */\nexport type OsType = string;\n\n/** Known values of {@link VmPriority} that the service accepts. */\nexport enum KnownVmPriority {\n  Dedicated = \"Dedicated\",\n  LowPriority = \"LowPriority\"\n}\n\n/**\n * Defines values for VmPriority. \\\n * {@link KnownVmPriority} can be used interchangeably with VmPriority,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Dedicated** \\\n * **LowPriority**\n */\nexport type VmPriority = string;\n\n/** Known values of {@link RemoteLoginPortPublicAccess} that the service accepts. */\nexport enum KnownRemoteLoginPortPublicAccess {\n  Enabled = \"Enabled\",\n  Disabled = \"Disabled\",\n  NotSpecified = \"NotSpecified\"\n}\n\n/**\n * Defines values for RemoteLoginPortPublicAccess. \\\n * {@link KnownRemoteLoginPortPublicAccess} can be used interchangeably with RemoteLoginPortPublicAccess,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled** \\\n * **Disabled** \\\n * **NotSpecified**\n */\nexport type RemoteLoginPortPublicAccess = string;\n\n/** Known values of {@link AllocationState} that the service accepts. */\nexport enum KnownAllocationState {\n  Steady = \"Steady\",\n  Resizing = \"Resizing\"\n}\n\n/**\n * Defines values for AllocationState. \\\n * {@link KnownAllocationState} can be used interchangeably with AllocationState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Steady** \\\n * **Resizing**\n */\nexport type AllocationState = string;\n\n/** Known values of {@link ApplicationSharingPolicy} that the service accepts. */\nexport enum KnownApplicationSharingPolicy {\n  Personal = \"Personal\",\n  Shared = \"Shared\"\n}\n\n/**\n * Defines values for ApplicationSharingPolicy. \\\n * {@link KnownApplicationSharingPolicy} can be used interchangeably with ApplicationSharingPolicy,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Personal** \\\n * **Shared**\n */\nexport type ApplicationSharingPolicy = string;\n\n/** Known values of {@link SshPublicAccess} that the service accepts. */\nexport enum KnownSshPublicAccess {\n  Enabled = \"Enabled\",\n  Disabled = \"Disabled\"\n}\n\n/**\n * Defines values for SshPublicAccess. \\\n * {@link KnownSshPublicAccess} can be used interchangeably with SshPublicAccess,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled** \\\n * **Disabled**\n */\nexport type SshPublicAccess = string;\n\n/** Known values of {@link ComputeInstanceState} that the service accepts. */\nexport enum KnownComputeInstanceState {\n  Creating = \"Creating\",\n  CreateFailed = \"CreateFailed\",\n  Deleting = \"Deleting\",\n  Running = \"Running\",\n  Restarting = \"Restarting\",\n  JobRunning = \"JobRunning\",\n  SettingUp = \"SettingUp\",\n  SetupFailed = \"SetupFailed\",\n  Starting = \"Starting\",\n  Stopped = \"Stopped\",\n  Stopping = \"Stopping\",\n  UserSettingUp = \"UserSettingUp\",\n  UserSetupFailed = \"UserSetupFailed\",\n  Unknown = \"Unknown\",\n  Unusable = \"Unusable\"\n}\n\n/**\n * Defines values for ComputeInstanceState. \\\n * {@link KnownComputeInstanceState} can be used interchangeably with ComputeInstanceState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Creating** \\\n * **CreateFailed** \\\n * **Deleting** \\\n * **Running** \\\n * **Restarting** \\\n * **JobRunning** \\\n * **SettingUp** \\\n * **SetupFailed** \\\n * **Starting** \\\n * **Stopped** \\\n * **Stopping** \\\n * **UserSettingUp** \\\n * **UserSetupFailed** \\\n * **Unknown** \\\n * **Unusable**\n */\nexport type ComputeInstanceState = string;\n\n/** Known values of {@link ComputeInstanceAuthorizationType} that the service accepts. */\nexport enum KnownComputeInstanceAuthorizationType {\n  Personal = \"personal\"\n}\n\n/**\n * Defines values for ComputeInstanceAuthorizationType. \\\n * {@link KnownComputeInstanceAuthorizationType} can be used interchangeably with ComputeInstanceAuthorizationType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **personal**\n */\nexport type ComputeInstanceAuthorizationType = string;\n\n/** Known values of {@link OperationName} that the service accepts. */\nexport enum KnownOperationName {\n  Create = \"Create\",\n  Start = \"Start\",\n  Stop = \"Stop\",\n  Restart = \"Restart\",\n  Reimage = \"Reimage\",\n  Delete = \"Delete\"\n}\n\n/**\n * Defines values for OperationName. \\\n * {@link KnownOperationName} can be used interchangeably with OperationName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Create** \\\n * **Start** \\\n * **Stop** \\\n * **Restart** \\\n * **Reimage** \\\n * **Delete**\n */\nexport type OperationName = string;\n\n/** Known values of {@link OperationStatus} that the service accepts. */\nexport enum KnownOperationStatus {\n  InProgress = \"InProgress\",\n  Succeeded = \"Succeeded\",\n  CreateFailed = \"CreateFailed\",\n  StartFailed = \"StartFailed\",\n  StopFailed = \"StopFailed\",\n  RestartFailed = \"RestartFailed\",\n  ReimageFailed = \"ReimageFailed\",\n  DeleteFailed = \"DeleteFailed\"\n}\n\n/**\n * Defines values for OperationStatus. \\\n * {@link KnownOperationStatus} can be used interchangeably with OperationStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **InProgress** \\\n * **Succeeded** \\\n * **CreateFailed** \\\n * **StartFailed** \\\n * **StopFailed** \\\n * **RestartFailed** \\\n * **ReimageFailed** \\\n * **DeleteFailed**\n */\nexport type OperationStatus = string;\n/** Defines values for ResourceIdentityType. */\nexport type ResourceIdentityType =\n  | \"SystemAssigned\"\n  | \"SystemAssigned,UserAssigned\"\n  | \"UserAssigned\"\n  | \"None\";\n\n/** Optional parameters. */\nexport interface OperationsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type OperationsListResponse = OperationListResult;\n\n/** Optional parameters. */\nexport interface WorkspacesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type WorkspacesGetResponse = Workspace;\n\n/** Optional parameters. */\nexport interface WorkspacesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type WorkspacesCreateOrUpdateResponse = Workspace;\n\n/** Optional parameters. */\nexport interface WorkspacesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface WorkspacesUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the update operation. */\nexport type WorkspacesUpdateResponse = Workspace;\n\n/** Optional parameters. */\nexport interface WorkspacesListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skip?: string;\n}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type WorkspacesListByResourceGroupResponse = WorkspaceListResult;\n\n/** Optional parameters. */\nexport interface WorkspacesDiagnoseOptionalParams\n  extends coreClient.OperationOptions {\n  /** The parameter of diagnosing workspace health */\n  parameters?: DiagnoseWorkspaceParameters;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the diagnose operation. */\nexport type WorkspacesDiagnoseResponse = DiagnoseResponseResult;\n\n/** Optional parameters. */\nexport interface WorkspacesListKeysOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listKeys operation. */\nexport type WorkspacesListKeysResponse = ListWorkspaceKeysResult;\n\n/** Optional parameters. */\nexport interface WorkspacesResyncKeysOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface WorkspacesListBySubscriptionOptionalParams\n  extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skip?: string;\n}\n\n/** Contains response data for the listBySubscription operation. */\nexport type WorkspacesListBySubscriptionResponse = WorkspaceListResult;\n\n/** Optional parameters. */\nexport interface WorkspacesListNotebookAccessTokenOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNotebookAccessToken operation. */\nexport type WorkspacesListNotebookAccessTokenResponse = NotebookAccessTokenResult;\n\n/** Optional parameters. */\nexport interface WorkspacesPrepareNotebookOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the prepareNotebook operation. */\nexport type WorkspacesPrepareNotebookResponse = NotebookResourceInfo;\n\n/** Optional parameters. */\nexport interface WorkspacesListStorageAccountKeysOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listStorageAccountKeys operation. */\nexport type WorkspacesListStorageAccountKeysResponse = ListStorageAccountKeysResult;\n\n/** Optional parameters. */\nexport interface WorkspacesListNotebookKeysOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNotebookKeys operation. */\nexport type WorkspacesListNotebookKeysResponse = ListNotebookKeysResult;\n\n/** Optional parameters. */\nexport interface WorkspacesListOutboundNetworkDependenciesEndpointsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listOutboundNetworkDependenciesEndpoints operation. */\nexport type WorkspacesListOutboundNetworkDependenciesEndpointsResponse = ExternalFqdnResponse;\n\n/** Optional parameters. */\nexport interface WorkspacesListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skip?: string;\n}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type WorkspacesListByResourceGroupNextResponse = WorkspaceListResult;\n\n/** Optional parameters. */\nexport interface WorkspacesListBySubscriptionNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skip?: string;\n}\n\n/** Contains response data for the listBySubscriptionNext operation. */\nexport type WorkspacesListBySubscriptionNextResponse = WorkspaceListResult;\n\n/** Optional parameters. */\nexport interface UsagesListOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type UsagesListResponse = ListUsagesResult;\n\n/** Optional parameters. */\nexport interface UsagesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type UsagesListNextResponse = ListUsagesResult;\n\n/** Optional parameters. */\nexport interface VirtualMachineSizesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type VirtualMachineSizesListResponse = VirtualMachineSizeListResult;\n\n/** Optional parameters. */\nexport interface QuotasUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the update operation. */\nexport type QuotasUpdateResponse = UpdateWorkspaceQuotasResult;\n\n/** Optional parameters. */\nexport interface QuotasListOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type QuotasListResponse = ListWorkspaceQuotas;\n\n/** Optional parameters. */\nexport interface QuotasListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type QuotasListNextResponse = ListWorkspaceQuotas;\n\n/** Optional parameters. */\nexport interface ComputeListOptionalParams extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skip?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type ComputeListResponse = PaginatedComputeResourcesList;\n\n/** Optional parameters. */\nexport interface ComputeGetOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ComputeGetResponse = ComputeResource;\n\n/** Optional parameters. */\nexport interface ComputeCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ComputeCreateOrUpdateResponse = ComputeResource;\n\n/** Optional parameters. */\nexport interface ComputeUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type ComputeUpdateResponse = ComputeResource;\n\n/** Optional parameters. */\nexport interface ComputeDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ComputeListNodesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNodes operation. */\nexport type ComputeListNodesResponse = AmlComputeNodesInformation;\n\n/** Optional parameters. */\nexport interface ComputeListKeysOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listKeys operation. */\nexport type ComputeListKeysResponse = ComputeSecretsUnion;\n\n/** Optional parameters. */\nexport interface ComputeStartOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ComputeStopOptionalParams extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ComputeRestartOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ComputeListNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skip?: string;\n}\n\n/** Contains response data for the listNext operation. */\nexport type ComputeListNextResponse = PaginatedComputeResourcesList;\n\n/** Optional parameters. */\nexport interface ComputeListNodesNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNodesNext operation. */\nexport type ComputeListNodesNextResponse = AmlComputeNodesInformation;\n\n/** Optional parameters. */\nexport interface PrivateEndpointConnectionsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type PrivateEndpointConnectionsListResponse = PrivateEndpointConnectionListResult;\n\n/** Optional parameters. */\nexport interface PrivateEndpointConnectionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type PrivateEndpointConnectionsGetResponse = PrivateEndpointConnection;\n\n/** Optional parameters. */\nexport interface PrivateEndpointConnectionsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type PrivateEndpointConnectionsCreateOrUpdateResponse = PrivateEndpointConnection;\n\n/** Optional parameters. */\nexport interface PrivateEndpointConnectionsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface PrivateLinkResourcesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type PrivateLinkResourcesListResponse = PrivateLinkResourceListResult;\n\n/** Optional parameters. */\nexport interface WorkspaceConnectionsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** Target of the workspace connection. */\n  target?: string;\n  /** Category of the workspace connection. */\n  category?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type WorkspaceConnectionsListResponse = PaginatedWorkspaceConnectionsList;\n\n/** Optional parameters. */\nexport interface WorkspaceConnectionsCreateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the create operation. */\nexport type WorkspaceConnectionsCreateResponse = WorkspaceConnection;\n\n/** Optional parameters. */\nexport interface WorkspaceConnectionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type WorkspaceConnectionsGetResponse = WorkspaceConnection;\n\n/** Optional parameters. */\nexport interface WorkspaceConnectionsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface WorkspaceFeaturesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type WorkspaceFeaturesListResponse = ListAmlUserFeatureResult;\n\n/** Optional parameters. */\nexport interface WorkspaceFeaturesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type WorkspaceFeaturesListNextResponse = ListAmlUserFeatureResult;\n\n/** Optional parameters. */\nexport interface WorkspaceSkusListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type WorkspaceSkusListResponse = SkuListResult;\n\n/** Optional parameters. */\nexport interface WorkspaceSkusListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type WorkspaceSkusListNextResponse = SkuListResult;\n\n/** Optional parameters. */\nexport interface AzureMachineLearningWorkspacesOptionalParams\n  extends coreClient.ServiceClientOptions {\n  /** server parameter */\n  $host?: string;\n  /** Api Version */\n  apiVersion?: string;\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport const OperationListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Operation\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Operation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Operation\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      display: {\n        serializedName: \"display\",\n        type: {\n          name: \"Composite\",\n          className: \"OperationDisplay\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationDisplay: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationDisplay\",\n    modelProperties: {\n      provider: {\n        serializedName: \"provider\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resource: {\n        serializedName: \"resource\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operation: {\n        serializedName: \"operation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorResponse\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorDetail\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorDetail: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorDetail\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      target: {\n        serializedName: \"target\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      details: {\n        serializedName: \"details\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorDetail\"\n            }\n          }\n        }\n      },\n      additionalInfo: {\n        serializedName: \"additionalInfo\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorAdditionalInfo\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorAdditionalInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorAdditionalInfo\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      info: {\n        serializedName: \"info\",\n        readOnly: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const EncryptionProperty: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EncryptionProperty\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"IdentityForCmk\"\n        }\n      },\n      keyVaultProperties: {\n        serializedName: \"keyVaultProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"KeyVaultProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const IdentityForCmk: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IdentityForCmk\",\n    modelProperties: {\n      userAssignedIdentity: {\n        serializedName: \"userAssignedIdentity\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const KeyVaultProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KeyVaultProperties\",\n    modelProperties: {\n      keyVaultArmId: {\n        serializedName: \"keyVaultArmId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      keyIdentifier: {\n        serializedName: \"keyIdentifier\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      identityClientId: {\n        serializedName: \"identityClientId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateEndpoint: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateEndpoint\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      subnetArmId: {\n        serializedName: \"subnetArmId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateLinkServiceConnectionState: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateLinkServiceConnectionState\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      actionsRequired: {\n        serializedName: \"actionsRequired\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Identity: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Identity\",\n    modelProperties: {\n      principalId: {\n        serializedName: \"principalId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantId: {\n        serializedName: \"tenantId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"SystemAssigned\",\n            \"SystemAssigned,UserAssigned\",\n            \"UserAssigned\",\n            \"None\"\n          ]\n        }\n      },\n      userAssignedIdentities: {\n        serializedName: \"userAssignedIdentities\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Composite\", className: \"UserAssignedIdentity\" }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const UserAssignedIdentity: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UserAssignedIdentity\",\n    modelProperties: {\n      principalId: {\n        serializedName: \"principalId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantId: {\n        serializedName: \"tenantId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      clientId: {\n        serializedName: \"clientId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Sku: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Sku\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tier: {\n        serializedName: \"tier\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SystemData: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SystemData\",\n    modelProperties: {\n      createdBy: {\n        serializedName: \"createdBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdByType: {\n        serializedName: \"createdByType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdAt: {\n        serializedName: \"createdAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastModifiedBy: {\n        serializedName: \"lastModifiedBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedByType: {\n        serializedName: \"lastModifiedByType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedAt: {\n        serializedName: \"lastModifiedAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const Resource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Resource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SharedPrivateLinkResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SharedPrivateLinkResource\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      privateLinkResourceId: {\n        serializedName: \"properties.privateLinkResourceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      groupId: {\n        serializedName: \"properties.groupId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestMessage: {\n        serializedName: \"properties.requestMessage\",\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"properties.status\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NotebookResourceInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NotebookResourceInfo\",\n    modelProperties: {\n      fqdn: {\n        serializedName: \"fqdn\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceId: {\n        serializedName: \"resourceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      notebookPreparationError: {\n        serializedName: \"notebookPreparationError\",\n        type: {\n          name: \"Composite\",\n          className: \"NotebookPreparationError\"\n        }\n      }\n    }\n  }\n};\n\nexport const NotebookPreparationError: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NotebookPreparationError\",\n    modelProperties: {\n      errorMessage: {\n        serializedName: \"errorMessage\",\n        type: {\n          name: \"String\"\n        }\n      },\n      statusCode: {\n        serializedName: \"statusCode\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceManagedResourcesSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServiceManagedResourcesSettings\",\n    modelProperties: {\n      cosmosDb: {\n        serializedName: \"cosmosDb\",\n        type: {\n          name: \"Composite\",\n          className: \"CosmosDbSettings\"\n        }\n      }\n    }\n  }\n};\n\nexport const CosmosDbSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CosmosDbSettings\",\n    modelProperties: {\n      collectionsThroughput: {\n        serializedName: \"collectionsThroughput\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const WorkspaceUpdateParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WorkspaceUpdateParameters\",\n    modelProperties: {\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"Identity\"\n        }\n      },\n      description: {\n        serializedName: \"properties.description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      friendlyName: {\n        serializedName: \"properties.friendlyName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      imageBuildCompute: {\n        serializedName: \"properties.imageBuildCompute\",\n        type: {\n          name: \"String\"\n        }\n      },\n      serviceManagedResourcesSettings: {\n        serializedName: \"properties.serviceManagedResourcesSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"ServiceManagedResourcesSettings\"\n        }\n      },\n      primaryUserAssignedIdentity: {\n        serializedName: \"properties.primaryUserAssignedIdentity\",\n        type: {\n          name: \"String\"\n        }\n      },\n      publicNetworkAccess: {\n        serializedName: \"properties.publicNetworkAccess\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const WorkspaceListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WorkspaceListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Workspace\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DiagnoseWorkspaceParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DiagnoseWorkspaceParameters\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Composite\",\n          className: \"DiagnoseRequestProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const DiagnoseRequestProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DiagnoseRequestProperties\",\n    modelProperties: {\n      udr: {\n        serializedName: \"udr\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n          }\n        }\n      },\n      nsg: {\n        serializedName: \"nsg\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n          }\n        }\n      },\n      resourceLock: {\n        serializedName: \"resourceLock\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n          }\n        }\n      },\n      dnsResolution: {\n        serializedName: \"dnsResolution\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n          }\n        }\n      },\n      storageAccount: {\n        serializedName: \"storageAccount\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n          }\n        }\n      },\n      keyVault: {\n        serializedName: \"keyVault\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n          }\n        }\n      },\n      containerRegistry: {\n        serializedName: \"containerRegistry\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n          }\n        }\n      },\n      applicationInsights: {\n        serializedName: \"applicationInsights\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n          }\n        }\n      },\n      others: {\n        serializedName: \"others\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DiagnoseResponseResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DiagnoseResponseResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Composite\",\n          className: \"DiagnoseResponseResultValue\"\n        }\n      }\n    }\n  }\n};\n\nexport const DiagnoseResponseResultValue: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DiagnoseResponseResultValue\",\n    modelProperties: {\n      userDefinedRouteResults: {\n        serializedName: \"userDefinedRouteResults\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DiagnoseResult\"\n            }\n          }\n        }\n      },\n      networkSecurityRuleResults: {\n        serializedName: \"networkSecurityRuleResults\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DiagnoseResult\"\n            }\n          }\n        }\n      },\n      resourceLockResults: {\n        serializedName: \"resourceLockResults\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DiagnoseResult\"\n            }\n          }\n        }\n      },\n      dnsResolutionResults: {\n        serializedName: \"dnsResolutionResults\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DiagnoseResult\"\n            }\n          }\n        }\n      },\n      storageAccountResults: {\n        serializedName: \"storageAccountResults\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DiagnoseResult\"\n            }\n          }\n        }\n      },\n      keyVaultResults: {\n        serializedName: \"keyVaultResults\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DiagnoseResult\"\n            }\n          }\n        }\n      },\n      containerRegistryResults: {\n        serializedName: \"containerRegistryResults\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DiagnoseResult\"\n            }\n          }\n        }\n      },\n      applicationInsightsResults: {\n        serializedName: \"applicationInsightsResults\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DiagnoseResult\"\n            }\n          }\n        }\n      },\n      otherResults: {\n        serializedName: \"otherResults\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DiagnoseResult\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DiagnoseResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DiagnoseResult\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      level: {\n        serializedName: \"level\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ListWorkspaceKeysResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ListWorkspaceKeysResult\",\n    modelProperties: {\n      userStorageKey: {\n        serializedName: \"userStorageKey\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      userStorageResourceId: {\n        serializedName: \"userStorageResourceId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      appInsightsInstrumentationKey: {\n        serializedName: \"appInsightsInstrumentationKey\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      containerRegistryCredentials: {\n        serializedName: \"containerRegistryCredentials\",\n        type: {\n          name: \"Composite\",\n          className: \"RegistryListCredentialsResult\"\n        }\n      },\n      notebookAccessKeys: {\n        serializedName: \"notebookAccessKeys\",\n        type: {\n          name: \"Composite\",\n          className: \"ListNotebookKeysResult\"\n        }\n      }\n    }\n  }\n};\n\nexport const RegistryListCredentialsResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RegistryListCredentialsResult\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      username: {\n        serializedName: \"username\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      passwords: {\n        serializedName: \"passwords\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Password\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Password: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Password\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ListNotebookKeysResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ListNotebookKeysResult\",\n    modelProperties: {\n      primaryAccessKey: {\n        serializedName: \"primaryAccessKey\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      secondaryAccessKey: {\n        serializedName: \"secondaryAccessKey\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ListUsagesResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ListUsagesResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Usage\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Usage: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Usage\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      amlWorkspaceLocation: {\n        serializedName: \"amlWorkspaceLocation\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      unit: {\n        serializedName: \"unit\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      currentValue: {\n        serializedName: \"currentValue\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      limit: {\n        serializedName: \"limit\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"Composite\",\n          className: \"UsageName\"\n        }\n      }\n    }\n  }\n};\n\nexport const UsageName: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UsageName\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      localizedValue: {\n        serializedName: \"localizedValue\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineSizeListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineSizeListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VirtualMachineSize\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineSize: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineSize\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      family: {\n        serializedName: \"family\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      vCPUs: {\n        serializedName: \"vCPUs\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      gpus: {\n        serializedName: \"gpus\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      osVhdSizeMB: {\n        serializedName: \"osVhdSizeMB\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      maxResourceVolumeMB: {\n        serializedName: \"maxResourceVolumeMB\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      memoryGB: {\n        serializedName: \"memoryGB\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      lowPriorityCapable: {\n        serializedName: \"lowPriorityCapable\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      premiumIO: {\n        serializedName: \"premiumIO\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      estimatedVMPrices: {\n        serializedName: \"estimatedVMPrices\",\n        type: {\n          name: \"Composite\",\n          className: \"EstimatedVMPrices\"\n        }\n      },\n      supportedComputeTypes: {\n        serializedName: \"supportedComputeTypes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const EstimatedVMPrices: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EstimatedVMPrices\",\n    modelProperties: {\n      billingCurrency: {\n        serializedName: \"billingCurrency\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      unitOfMeasure: {\n        serializedName: \"unitOfMeasure\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      values: {\n        serializedName: \"values\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"EstimatedVMPrice\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const EstimatedVMPrice: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EstimatedVMPrice\",\n    modelProperties: {\n      retailPrice: {\n        serializedName: \"retailPrice\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      osType: {\n        serializedName: \"osType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      vmTier: {\n        serializedName: \"vmTier\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const QuotaUpdateParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"QuotaUpdateParameters\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"QuotaBaseProperties\"\n            }\n          }\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const QuotaBaseProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"QuotaBaseProperties\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      limit: {\n        serializedName: \"limit\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      unit: {\n        serializedName: \"unit\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UpdateWorkspaceQuotasResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UpdateWorkspaceQuotasResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"UpdateWorkspaceQuotas\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UpdateWorkspaceQuotas: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UpdateWorkspaceQuotas\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      limit: {\n        serializedName: \"limit\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      unit: {\n        serializedName: \"unit\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ListWorkspaceQuotas: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ListWorkspaceQuotas\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourceQuota\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceQuota: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceQuota\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      amlWorkspaceLocation: {\n        serializedName: \"amlWorkspaceLocation\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceName\"\n        }\n      },\n      limit: {\n        serializedName: \"limit\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      unit: {\n        serializedName: \"unit\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceName: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceName\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      localizedValue: {\n        serializedName: \"localizedValue\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PaginatedComputeResourcesList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PaginatedComputeResourcesList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ComputeResource\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Components1D3SwueSchemasComputeresourceAllof1: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Components1D3SwueSchemasComputeresourceAllof1\",\n    modelProperties: {\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"Compute\"\n        }\n      }\n    }\n  }\n};\n\nexport const Compute: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Compute\",\n    uberParent: \"Compute\",\n    polymorphicDiscriminator: {\n      serializedName: \"computeType\",\n      clientName: \"computeType\"\n    },\n    modelProperties: {\n      computeType: {\n        serializedName: \"computeType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      computeLocation: {\n        serializedName: \"computeLocation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdOn: {\n        serializedName: \"createdOn\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      modifiedOn: {\n        serializedName: \"modifiedOn\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      resourceId: {\n        serializedName: \"resourceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningErrors: {\n        serializedName: \"provisioningErrors\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorResponse\"\n            }\n          }\n        }\n      },\n      isAttachedCompute: {\n        serializedName: \"isAttachedCompute\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      disableLocalAuth: {\n        serializedName: \"disableLocalAuth\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const ClusterUpdateParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ClusterUpdateParameters\",\n    modelProperties: {\n      properties: {\n        serializedName: \"properties.properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ScaleSettingsInformation\"\n        }\n      }\n    }\n  }\n};\n\nexport const ScaleSettingsInformation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ScaleSettingsInformation\",\n    modelProperties: {\n      scaleSettings: {\n        serializedName: \"scaleSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"ScaleSettings\"\n        }\n      }\n    }\n  }\n};\n\nexport const ScaleSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ScaleSettings\",\n    modelProperties: {\n      maxNodeCount: {\n        serializedName: \"maxNodeCount\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      minNodeCount: {\n        defaultValue: 0,\n        serializedName: \"minNodeCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      nodeIdleTimeBeforeScaleDown: {\n        serializedName: \"nodeIdleTimeBeforeScaleDown\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      }\n    }\n  }\n};\n\nexport const AmlComputeNodesInformation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AmlComputeNodesInformation\",\n    modelProperties: {\n      nodes: {\n        serializedName: \"nodes\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"AmlComputeNodeInformation\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AmlComputeNodeInformation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AmlComputeNodeInformation\",\n    modelProperties: {\n      nodeId: {\n        serializedName: \"nodeId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      privateIpAddress: {\n        serializedName: \"privateIpAddress\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      publicIpAddress: {\n        serializedName: \"publicIpAddress\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      port: {\n        serializedName: \"port\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      nodeState: {\n        serializedName: \"nodeState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      runId: {\n        serializedName: \"runId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NotebookAccessTokenResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NotebookAccessTokenResult\",\n    modelProperties: {\n      notebookResourceId: {\n        serializedName: \"notebookResourceId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      hostName: {\n        serializedName: \"hostName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      publicDns: {\n        serializedName: \"publicDns\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      accessToken: {\n        serializedName: \"accessToken\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tokenType: {\n        serializedName: \"tokenType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      expiresIn: {\n        serializedName: \"expiresIn\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      refreshToken: {\n        serializedName: \"refreshToken\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      scope: {\n        serializedName: \"scope\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeSecrets: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ComputeSecrets\",\n    uberParent: \"ComputeSecrets\",\n    polymorphicDiscriminator: {\n      serializedName: \"computeType\",\n      clientName: \"computeType\"\n    },\n    modelProperties: {\n      computeType: {\n        serializedName: \"computeType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateEndpointConnectionListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateEndpointConnectionListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PrivateEndpointConnection\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateLinkResourceListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateLinkResourceListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PrivateLinkResource\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ListStorageAccountKeysResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ListStorageAccountKeysResult\",\n    modelProperties: {\n      userStorageKey: {\n        serializedName: \"userStorageKey\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PaginatedWorkspaceConnectionsList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PaginatedWorkspaceConnectionsList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"WorkspaceConnection\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const WorkspaceConnection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WorkspaceConnection\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      category: {\n        serializedName: \"properties.category\",\n        type: {\n          name: \"String\"\n        }\n      },\n      target: {\n        serializedName: \"properties.target\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authType: {\n        serializedName: \"properties.authType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"properties.value\",\n        type: {\n          name: \"String\"\n        }\n      },\n      valueFormat: {\n        serializedName: \"properties.valueFormat\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ExternalFqdnResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExternalFqdnResponse\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"FqdnEndpoints\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const FqdnEndpoints: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FqdnEndpoints\",\n    modelProperties: {\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"FqdnEndpointsProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const FqdnEndpointsProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FqdnEndpointsProperties\",\n    modelProperties: {\n      category: {\n        serializedName: \"category\",\n        type: {\n          name: \"String\"\n        }\n      },\n      endpoints: {\n        serializedName: \"endpoints\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"FqdnEndpoint\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const FqdnEndpoint: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FqdnEndpoint\",\n    modelProperties: {\n      domainName: {\n        serializedName: \"domainName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      endpointDetails: {\n        serializedName: \"endpointDetails\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"FqdnEndpointDetail\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const FqdnEndpointDetail: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FqdnEndpointDetail\",\n    modelProperties: {\n      port: {\n        serializedName: \"port\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ListAmlUserFeatureResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ListAmlUserFeatureResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"AmlUserFeature\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AmlUserFeature: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AmlUserFeature\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SkuListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SkuListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"WorkspaceSku\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const WorkspaceSku: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WorkspaceSku\",\n    modelProperties: {\n      locations: {\n        serializedName: \"locations\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      locationInfo: {\n        serializedName: \"locationInfo\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourceSkuLocationInfo\"\n            }\n          }\n        }\n      },\n      tier: {\n        serializedName: \"tier\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceType: {\n        serializedName: \"resourceType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      capabilities: {\n        serializedName: \"capabilities\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SKUCapability\"\n            }\n          }\n        }\n      },\n      restrictions: {\n        serializedName: \"restrictions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Restriction\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceSkuLocationInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceSkuLocationInfo\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      zones: {\n        serializedName: \"zones\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      zoneDetails: {\n        serializedName: \"zoneDetails\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourceSkuZoneDetails\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceSkuZoneDetails: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceSkuZoneDetails\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      capabilities: {\n        serializedName: \"capabilities\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SKUCapability\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SKUCapability: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SKUCapability\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Restriction: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Restriction\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      values: {\n        serializedName: \"values\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      reasonCode: {\n        serializedName: \"reasonCode\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceId: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceId\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AKSProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AKSProperties\",\n    modelProperties: {\n      clusterFqdn: {\n        serializedName: \"clusterFqdn\",\n        type: {\n          name: \"String\"\n        }\n      },\n      systemServices: {\n        serializedName: \"systemServices\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SystemService\"\n            }\n          }\n        }\n      },\n      agentCount: {\n        constraints: {\n          InclusiveMinimum: 0\n        },\n        serializedName: \"agentCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      agentVmSize: {\n        serializedName: \"agentVmSize\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clusterPurpose: {\n        defaultValue: \"FastProd\",\n        serializedName: \"clusterPurpose\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sslConfiguration: {\n        serializedName: \"sslConfiguration\",\n        type: {\n          name: \"Composite\",\n          className: \"SslConfiguration\"\n        }\n      },\n      aksNetworkingConfiguration: {\n        serializedName: \"aksNetworkingConfiguration\",\n        type: {\n          name: \"Composite\",\n          className: \"AksNetworkingConfiguration\"\n        }\n      },\n      loadBalancerType: {\n        defaultValue: \"PublicIp\",\n        serializedName: \"loadBalancerType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      loadBalancerSubnet: {\n        serializedName: \"loadBalancerSubnet\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SystemService: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SystemService\",\n    modelProperties: {\n      systemServiceType: {\n        serializedName: \"systemServiceType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      publicIpAddress: {\n        serializedName: \"publicIpAddress\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"version\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SslConfiguration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SslConfiguration\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      cert: {\n        serializedName: \"cert\",\n        type: {\n          name: \"String\"\n        }\n      },\n      key: {\n        serializedName: \"key\",\n        type: {\n          name: \"String\"\n        }\n      },\n      cname: {\n        serializedName: \"cname\",\n        type: {\n          name: \"String\"\n        }\n      },\n      leafDomainLabel: {\n        serializedName: \"leafDomainLabel\",\n        type: {\n          name: \"String\"\n        }\n      },\n      overwriteExistingDomain: {\n        serializedName: \"overwriteExistingDomain\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const AksNetworkingConfiguration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AksNetworkingConfiguration\",\n    modelProperties: {\n      subnetId: {\n        serializedName: \"subnetId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      serviceCidr: {\n        constraints: {\n          Pattern: new RegExp(\n            \"^([0-9]{1,3}\\\\.){3}[0-9]{1,3}(\\\\/([0-9]|[1-2][0-9]|3[0-2]))?$\"\n          )\n        },\n        serializedName: \"serviceCidr\",\n        type: {\n          name: \"String\"\n        }\n      },\n      dnsServiceIP: {\n        constraints: {\n          Pattern: new RegExp(\n            \"^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$\"\n          )\n        },\n        serializedName: \"dnsServiceIP\",\n        type: {\n          name: \"String\"\n        }\n      },\n      dockerBridgeCidr: {\n        constraints: {\n          Pattern: new RegExp(\n            \"^([0-9]{1,3}\\\\.){3}[0-9]{1,3}(\\\\/([0-9]|[1-2][0-9]|3[0-2]))?$\"\n          )\n        },\n        serializedName: \"dockerBridgeCidr\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const KubernetesSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KubernetesSchema\",\n    modelProperties: {\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"KubernetesProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const KubernetesProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KubernetesProperties\",\n    modelProperties: {\n      relayConnectionString: {\n        serializedName: \"relayConnectionString\",\n        type: {\n          name: \"String\"\n        }\n      },\n      serviceBusConnectionString: {\n        serializedName: \"serviceBusConnectionString\",\n        type: {\n          name: \"String\"\n        }\n      },\n      extensionPrincipalId: {\n        serializedName: \"extensionPrincipalId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      extensionInstanceReleaseTrain: {\n        serializedName: \"extensionInstanceReleaseTrain\",\n        type: {\n          name: \"String\"\n        }\n      },\n      vcName: {\n        serializedName: \"vcName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      namespace: {\n        defaultValue: \"default\",\n        serializedName: \"namespace\",\n        type: {\n          name: \"String\"\n        }\n      },\n      defaultInstanceType: {\n        serializedName: \"defaultInstanceType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      instanceTypes: {\n        serializedName: \"instanceTypes\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Composite\", className: \"InstanceTypeSchema\" }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const InstanceTypeSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"InstanceTypeSchema\",\n    modelProperties: {\n      nodeSelector: {\n        serializedName: \"nodeSelector\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      resources: {\n        serializedName: \"resources\",\n        type: {\n          name: \"Composite\",\n          className: \"InstanceTypeSchemaResources\"\n        }\n      }\n    }\n  }\n};\n\nexport const InstanceTypeSchemaResources: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"InstanceTypeSchemaResources\",\n    modelProperties: {\n      requests: {\n        serializedName: \"requests\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      limits: {\n        serializedName: \"limits\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const AmlComputeProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AmlComputeProperties\",\n    modelProperties: {\n      osType: {\n        defaultValue: \"Linux\",\n        serializedName: \"osType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      vmSize: {\n        serializedName: \"vmSize\",\n        type: {\n          name: \"String\"\n        }\n      },\n      vmPriority: {\n        serializedName: \"vmPriority\",\n        type: {\n          name: \"String\"\n        }\n      },\n      virtualMachineImage: {\n        serializedName: \"virtualMachineImage\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineImage\"\n        }\n      },\n      isolatedNetwork: {\n        serializedName: \"isolatedNetwork\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      scaleSettings: {\n        serializedName: \"scaleSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"ScaleSettings\"\n        }\n      },\n      userAccountCredentials: {\n        serializedName: \"userAccountCredentials\",\n        type: {\n          name: \"Composite\",\n          className: \"UserAccountCredentials\"\n        }\n      },\n      subnet: {\n        serializedName: \"subnet\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceId\"\n        }\n      },\n      remoteLoginPortPublicAccess: {\n        defaultValue: \"NotSpecified\",\n        serializedName: \"remoteLoginPortPublicAccess\",\n        type: {\n          name: \"String\"\n        }\n      },\n      allocationState: {\n        serializedName: \"allocationState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      allocationStateTransitionTime: {\n        serializedName: \"allocationStateTransitionTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      errors: {\n        serializedName: \"errors\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorResponse\"\n            }\n          }\n        }\n      },\n      currentNodeCount: {\n        serializedName: \"currentNodeCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      targetNodeCount: {\n        serializedName: \"targetNodeCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      nodeStateCounts: {\n        serializedName: \"nodeStateCounts\",\n        type: {\n          name: \"Composite\",\n          className: \"NodeStateCounts\"\n        }\n      },\n      enableNodePublicIp: {\n        defaultValue: true,\n        serializedName: \"enableNodePublicIp\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineImage: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineImage\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UserAccountCredentials: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UserAccountCredentials\",\n    modelProperties: {\n      adminUserName: {\n        serializedName: \"adminUserName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      adminUserSshPublicKey: {\n        serializedName: \"adminUserSshPublicKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      adminUserPassword: {\n        serializedName: \"adminUserPassword\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NodeStateCounts: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NodeStateCounts\",\n    modelProperties: {\n      idleNodeCount: {\n        serializedName: \"idleNodeCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      runningNodeCount: {\n        serializedName: \"runningNodeCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      preparingNodeCount: {\n        serializedName: \"preparingNodeCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      unusableNodeCount: {\n        serializedName: \"unusableNodeCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      leavingNodeCount: {\n        serializedName: \"leavingNodeCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      preemptedNodeCount: {\n        serializedName: \"preemptedNodeCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeInstanceProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ComputeInstanceProperties\",\n    modelProperties: {\n      vmSize: {\n        serializedName: \"vmSize\",\n        type: {\n          name: \"String\"\n        }\n      },\n      subnet: {\n        serializedName: \"subnet\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceId\"\n        }\n      },\n      applicationSharingPolicy: {\n        defaultValue: \"Shared\",\n        serializedName: \"applicationSharingPolicy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sshSettings: {\n        serializedName: \"sshSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"ComputeInstanceSshSettings\"\n        }\n      },\n      connectivityEndpoints: {\n        serializedName: \"connectivityEndpoints\",\n        type: {\n          name: \"Composite\",\n          className: \"ComputeInstanceConnectivityEndpoints\"\n        }\n      },\n      applications: {\n        serializedName: \"applications\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ComputeInstanceApplication\"\n            }\n          }\n        }\n      },\n      createdBy: {\n        serializedName: \"createdBy\",\n        type: {\n          name: \"Composite\",\n          className: \"ComputeInstanceCreatedBy\"\n        }\n      },\n      errors: {\n        serializedName: \"errors\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorResponse\"\n            }\n          }\n        }\n      },\n      state: {\n        serializedName: \"state\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      computeInstanceAuthorizationType: {\n        defaultValue: \"personal\",\n        serializedName: \"computeInstanceAuthorizationType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      personalComputeInstanceSettings: {\n        serializedName: \"personalComputeInstanceSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"PersonalComputeInstanceSettings\"\n        }\n      },\n      setupScripts: {\n        serializedName: \"setupScripts\",\n        type: {\n          name: \"Composite\",\n          className: \"SetupScripts\"\n        }\n      },\n      lastOperation: {\n        serializedName: \"lastOperation\",\n        type: {\n          name: \"Composite\",\n          className: \"ComputeInstanceLastOperation\"\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeInstanceSshSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ComputeInstanceSshSettings\",\n    modelProperties: {\n      sshPublicAccess: {\n        defaultValue: \"Disabled\",\n        serializedName: \"sshPublicAccess\",\n        type: {\n          name: \"String\"\n        }\n      },\n      adminUserName: {\n        serializedName: \"adminUserName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      sshPort: {\n        serializedName: \"sshPort\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      adminPublicKey: {\n        serializedName: \"adminPublicKey\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeInstanceConnectivityEndpoints: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ComputeInstanceConnectivityEndpoints\",\n    modelProperties: {\n      publicIpAddress: {\n        serializedName: \"publicIpAddress\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      privateIpAddress: {\n        serializedName: \"privateIpAddress\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeInstanceApplication: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ComputeInstanceApplication\",\n    modelProperties: {\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      endpointUri: {\n        serializedName: \"endpointUri\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeInstanceCreatedBy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ComputeInstanceCreatedBy\",\n    modelProperties: {\n      userName: {\n        serializedName: \"userName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      userOrgId: {\n        serializedName: \"userOrgId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      userId: {\n        serializedName: \"userId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PersonalComputeInstanceSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PersonalComputeInstanceSettings\",\n    modelProperties: {\n      assignedUser: {\n        serializedName: \"assignedUser\",\n        type: {\n          name: \"Composite\",\n          className: \"AssignedUser\"\n        }\n      }\n    }\n  }\n};\n\nexport const AssignedUser: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AssignedUser\",\n    modelProperties: {\n      objectId: {\n        serializedName: \"objectId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantId: {\n        serializedName: \"tenantId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SetupScripts: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SetupScripts\",\n    modelProperties: {\n      scripts: {\n        serializedName: \"scripts\",\n        type: {\n          name: \"Composite\",\n          className: \"ScriptsToExecute\"\n        }\n      }\n    }\n  }\n};\n\nexport const ScriptsToExecute: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ScriptsToExecute\",\n    modelProperties: {\n      startupScript: {\n        serializedName: \"startupScript\",\n        type: {\n          name: \"Composite\",\n          className: \"ScriptReference\"\n        }\n      },\n      creationScript: {\n        serializedName: \"creationScript\",\n        type: {\n          name: \"Composite\",\n          className: \"ScriptReference\"\n        }\n      }\n    }\n  }\n};\n\nexport const ScriptReference: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ScriptReference\",\n    modelProperties: {\n      scriptSource: {\n        serializedName: \"scriptSource\",\n        type: {\n          name: \"String\"\n        }\n      },\n      scriptData: {\n        serializedName: \"scriptData\",\n        type: {\n          name: \"String\"\n        }\n      },\n      scriptArguments: {\n        serializedName: \"scriptArguments\",\n        type: {\n          name: \"String\"\n        }\n      },\n      timeout: {\n        serializedName: \"timeout\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeInstanceLastOperation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ComputeInstanceLastOperation\",\n    modelProperties: {\n      operationName: {\n        serializedName: \"operationName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operationTime: {\n        serializedName: \"operationTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      operationStatus: {\n        serializedName: \"operationStatus\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineProperties\",\n    modelProperties: {\n      virtualMachineSize: {\n        serializedName: \"virtualMachineSize\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sshPort: {\n        serializedName: \"sshPort\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      address: {\n        serializedName: \"address\",\n        type: {\n          name: \"String\"\n        }\n      },\n      administratorAccount: {\n        serializedName: \"administratorAccount\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineSshCredentials\"\n        }\n      },\n      isNotebookInstanceCompute: {\n        serializedName: \"isNotebookInstanceCompute\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineSshCredentials: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineSshCredentials\",\n    modelProperties: {\n      username: {\n        serializedName: \"username\",\n        type: {\n          name: \"String\"\n        }\n      },\n      password: {\n        serializedName: \"password\",\n        type: {\n          name: \"String\"\n        }\n      },\n      publicKeyData: {\n        serializedName: \"publicKeyData\",\n        type: {\n          name: \"String\"\n        }\n      },\n      privateKeyData: {\n        serializedName: \"privateKeyData\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const HDInsightProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"HDInsightProperties\",\n    modelProperties: {\n      sshPort: {\n        serializedName: \"sshPort\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      address: {\n        serializedName: \"address\",\n        type: {\n          name: \"String\"\n        }\n      },\n      administratorAccount: {\n        serializedName: \"administratorAccount\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineSshCredentials\"\n        }\n      }\n    }\n  }\n};\n\nexport const DatabricksProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DatabricksProperties\",\n    modelProperties: {\n      databricksAccessToken: {\n        serializedName: \"databricksAccessToken\",\n        type: {\n          name: \"String\"\n        }\n      },\n      workspaceUrl: {\n        serializedName: \"workspaceUrl\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DataLakeAnalyticsProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DataLakeAnalyticsProperties\",\n    modelProperties: {\n      dataLakeStoreAccountName: {\n        serializedName: \"dataLakeStoreAccountName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SynapseSparkProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SynapseSparkProperties\",\n    modelProperties: {\n      autoScaleProperties: {\n        serializedName: \"autoScaleProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"AutoScaleProperties\"\n        }\n      },\n      autoPauseProperties: {\n        serializedName: \"autoPauseProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"AutoPauseProperties\"\n        }\n      },\n      sparkVersion: {\n        serializedName: \"sparkVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      nodeCount: {\n        serializedName: \"nodeCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      nodeSize: {\n        serializedName: \"nodeSize\",\n        type: {\n          name: \"String\"\n        }\n      },\n      nodeSizeFamily: {\n        serializedName: \"nodeSizeFamily\",\n        type: {\n          name: \"String\"\n        }\n      },\n      subscriptionId: {\n        serializedName: \"subscriptionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceGroup: {\n        serializedName: \"resourceGroup\",\n        type: {\n          name: \"String\"\n        }\n      },\n      workspaceName: {\n        serializedName: \"workspaceName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      poolName: {\n        serializedName: \"poolName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AutoScaleProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AutoScaleProperties\",\n    modelProperties: {\n      minNodeCount: {\n        serializedName: \"minNodeCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      enabled: {\n        serializedName: \"enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      maxNodeCount: {\n        serializedName: \"maxNodeCount\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const AutoPauseProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AutoPauseProperties\",\n    modelProperties: {\n      delayInMinutes: {\n        serializedName: \"delayInMinutes\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      enabled: {\n        serializedName: \"enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServicePrincipalCredentials: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServicePrincipalCredentials\",\n    modelProperties: {\n      clientId: {\n        serializedName: \"clientId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      clientSecret: {\n        serializedName: \"clientSecret\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AksComputeSecretsProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AksComputeSecretsProperties\",\n    modelProperties: {\n      userKubeConfig: {\n        serializedName: \"userKubeConfig\",\n        type: {\n          name: \"String\"\n        }\n      },\n      adminKubeConfig: {\n        serializedName: \"adminKubeConfig\",\n        type: {\n          name: \"String\"\n        }\n      },\n      imagePullSecretName: {\n        serializedName: \"imagePullSecretName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DatabricksComputeSecretsProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DatabricksComputeSecretsProperties\",\n    modelProperties: {\n      databricksAccessToken: {\n        serializedName: \"databricksAccessToken\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerResourceRequirements: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContainerResourceRequirements\",\n    modelProperties: {\n      cpu: {\n        serializedName: \"cpu\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      cpuLimit: {\n        serializedName: \"cpuLimit\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      memoryInGB: {\n        serializedName: \"memoryInGB\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      memoryInGBLimit: {\n        serializedName: \"memoryInGBLimit\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      gpu: {\n        serializedName: \"gpu\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      fpga: {\n        serializedName: \"fpga\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateEndpointConnection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateEndpointConnection\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"Identity\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      },\n      privateEndpoint: {\n        serializedName: \"properties.privateEndpoint\",\n        type: {\n          name: \"Composite\",\n          className: \"PrivateEndpoint\"\n        }\n      },\n      privateLinkServiceConnectionState: {\n        serializedName: \"properties.privateLinkServiceConnectionState\",\n        type: {\n          name: \"Composite\",\n          className: \"PrivateLinkServiceConnectionState\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Workspace: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Workspace\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"Identity\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      },\n      workspaceId: {\n        serializedName: \"properties.workspaceId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"properties.description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      friendlyName: {\n        serializedName: \"properties.friendlyName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      keyVault: {\n        serializedName: \"properties.keyVault\",\n        type: {\n          name: \"String\"\n        }\n      },\n      applicationInsights: {\n        serializedName: \"properties.applicationInsights\",\n        type: {\n          name: \"String\"\n        }\n      },\n      containerRegistry: {\n        serializedName: \"properties.containerRegistry\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      storageAccount: {\n        serializedName: \"properties.storageAccount\",\n        type: {\n          name: \"String\"\n        }\n      },\n      discoveryUrl: {\n        serializedName: \"properties.discoveryUrl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      encryption: {\n        serializedName: \"properties.encryption\",\n        type: {\n          name: \"Composite\",\n          className: \"EncryptionProperty\"\n        }\n      },\n      hbiWorkspace: {\n        defaultValue: false,\n        serializedName: \"properties.hbiWorkspace\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      serviceProvisionedResourceGroup: {\n        serializedName: \"properties.serviceProvisionedResourceGroup\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      privateLinkCount: {\n        serializedName: \"properties.privateLinkCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      imageBuildCompute: {\n        serializedName: \"properties.imageBuildCompute\",\n        type: {\n          name: \"String\"\n        }\n      },\n      allowPublicAccessWhenBehindVnet: {\n        defaultValue: false,\n        serializedName: \"properties.allowPublicAccessWhenBehindVnet\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      publicNetworkAccess: {\n        serializedName: \"properties.publicNetworkAccess\",\n        type: {\n          name: \"String\"\n        }\n      },\n      privateEndpointConnections: {\n        serializedName: \"properties.privateEndpointConnections\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PrivateEndpointConnection\"\n            }\n          }\n        }\n      },\n      sharedPrivateLinkResources: {\n        serializedName: \"properties.sharedPrivateLinkResources\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SharedPrivateLinkResource\"\n            }\n          }\n        }\n      },\n      notebookInfo: {\n        serializedName: \"properties.notebookInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"NotebookResourceInfo\"\n        }\n      },\n      serviceManagedResourcesSettings: {\n        serializedName: \"properties.serviceManagedResourcesSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"ServiceManagedResourcesSettings\"\n        }\n      },\n      primaryUserAssignedIdentity: {\n        serializedName: \"properties.primaryUserAssignedIdentity\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantId: {\n        serializedName: \"properties.tenantId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      storageHnsEnabled: {\n        serializedName: \"properties.storageHnsEnabled\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      mlFlowTrackingUri: {\n        serializedName: \"properties.mlFlowTrackingUri\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ComputeResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      ...Components1D3SwueSchemasComputeresourceAllof1.type.modelProperties,\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"Identity\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateLinkResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateLinkResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"Identity\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      },\n      groupId: {\n        serializedName: \"properties.groupId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      requiredMembers: {\n        serializedName: \"properties.requiredMembers\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      requiredZoneNames: {\n        serializedName: \"properties.requiredZoneNames\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Aks: coreClient.CompositeMapper = {\n  serializedName: \"AKS\",\n  type: {\n    name: \"Composite\",\n    className: \"Aks\",\n    uberParent: \"Compute\",\n    polymorphicDiscriminator: Compute.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...Compute.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"AKSProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const Kubernetes: coreClient.CompositeMapper = {\n  serializedName: \"Kubernetes\",\n  type: {\n    name: \"Composite\",\n    className: \"Kubernetes\",\n    uberParent: \"Compute\",\n    polymorphicDiscriminator: Compute.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...Compute.type.modelProperties,\n      ...KubernetesSchema.type.modelProperties\n    }\n  }\n};\n\nexport const AmlCompute: coreClient.CompositeMapper = {\n  serializedName: \"AmlCompute\",\n  type: {\n    name: \"Composite\",\n    className: \"AmlCompute\",\n    uberParent: \"Compute\",\n    polymorphicDiscriminator: Compute.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...Compute.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"AmlComputeProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeInstance: coreClient.CompositeMapper = {\n  serializedName: \"ComputeInstance\",\n  type: {\n    name: \"Composite\",\n    className: \"ComputeInstance\",\n    uberParent: \"Compute\",\n    polymorphicDiscriminator: Compute.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...Compute.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ComputeInstanceProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachine: coreClient.CompositeMapper = {\n  serializedName: \"VirtualMachine\",\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachine\",\n    uberParent: \"Compute\",\n    polymorphicDiscriminator: Compute.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...Compute.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const HDInsight: coreClient.CompositeMapper = {\n  serializedName: \"HDInsight\",\n  type: {\n    name: \"Composite\",\n    className: \"HDInsight\",\n    uberParent: \"Compute\",\n    polymorphicDiscriminator: Compute.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...Compute.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"HDInsightProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const DataFactory: coreClient.CompositeMapper = {\n  serializedName: \"DataFactory\",\n  type: {\n    name: \"Composite\",\n    className: \"DataFactory\",\n    uberParent: \"Compute\",\n    polymorphicDiscriminator: Compute.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...Compute.type.modelProperties\n    }\n  }\n};\n\nexport const Databricks: coreClient.CompositeMapper = {\n  serializedName: \"Databricks\",\n  type: {\n    name: \"Composite\",\n    className: \"Databricks\",\n    uberParent: \"Compute\",\n    polymorphicDiscriminator: Compute.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...Compute.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DatabricksProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const DataLakeAnalytics: coreClient.CompositeMapper = {\n  serializedName: \"DataLakeAnalytics\",\n  type: {\n    name: \"Composite\",\n    className: \"DataLakeAnalytics\",\n    uberParent: \"Compute\",\n    polymorphicDiscriminator: Compute.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...Compute.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DataLakeAnalyticsProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const SynapseSpark: coreClient.CompositeMapper = {\n  serializedName: \"SynapseSpark\",\n  type: {\n    name: \"Composite\",\n    className: \"SynapseSpark\",\n    uberParent: \"Compute\",\n    polymorphicDiscriminator: Compute.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...Compute.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"SynapseSparkProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const AksComputeSecrets: coreClient.CompositeMapper = {\n  serializedName: \"AKS\",\n  type: {\n    name: \"Composite\",\n    className: \"AksComputeSecrets\",\n    uberParent: \"ComputeSecrets\",\n    polymorphicDiscriminator: ComputeSecrets.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...ComputeSecrets.type.modelProperties,\n      ...AksComputeSecretsProperties.type.modelProperties\n    }\n  }\n};\n\nexport const VirtualMachineSecrets: coreClient.CompositeMapper = {\n  serializedName: \"VirtualMachine\",\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineSecrets\",\n    uberParent: \"ComputeSecrets\",\n    polymorphicDiscriminator: ComputeSecrets.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...ComputeSecrets.type.modelProperties,\n      administratorAccount: {\n        serializedName: \"administratorAccount\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineSshCredentials\"\n        }\n      }\n    }\n  }\n};\n\nexport const DatabricksComputeSecrets: coreClient.CompositeMapper = {\n  serializedName: \"Databricks\",\n  type: {\n    name: \"Composite\",\n    className: \"DatabricksComputeSecrets\",\n    uberParent: \"ComputeSecrets\",\n    polymorphicDiscriminator: ComputeSecrets.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...ComputeSecrets.type.modelProperties,\n      ...DatabricksComputeSecretsProperties.type.modelProperties\n    }\n  }\n};\n\nexport const WorkspacesDiagnoseHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WorkspacesDiagnoseHeaders\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retryAfter: {\n        constraints: {\n          InclusiveMaximum: 600,\n          InclusiveMinimum: 10\n        },\n        serializedName: \"retry-after\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeCreateOrUpdateHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ComputeCreateOrUpdateHeaders\",\n    modelProperties: {\n      azureAsyncOperation: {\n        serializedName: \"azure-asyncoperation\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeDeleteHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ComputeDeleteHeaders\",\n    modelProperties: {\n      azureAsyncOperation: {\n        serializedName: \"azure-asyncoperation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport let discriminators = {\n  Compute: Compute,\n  ComputeSecrets: ComputeSecrets,\n  \"Compute.AKS\": Aks,\n  \"Compute.Kubernetes\": Kubernetes,\n  \"Compute.AmlCompute\": AmlCompute,\n  \"Compute.ComputeInstance\": ComputeInstance,\n  \"Compute.VirtualMachine\": VirtualMachine,\n  \"Compute.HDInsight\": HDInsight,\n  \"Compute.DataFactory\": DataFactory,\n  \"Compute.Databricks\": Databricks,\n  \"Compute.DataLakeAnalytics\": DataLakeAnalytics,\n  \"Compute.SynapseSpark\": SynapseSpark,\n  \"ComputeSecrets.AKS\": AksComputeSecrets,\n  \"ComputeSecrets.VirtualMachine\": VirtualMachineSecrets,\n  \"ComputeSecrets.Databricks\": DatabricksComputeSecrets\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter\n} from \"@azure/core-client\";\nimport {\n  Workspace as WorkspaceMapper,\n  WorkspaceUpdateParameters as WorkspaceUpdateParametersMapper,\n  DiagnoseWorkspaceParameters as DiagnoseWorkspaceParametersMapper,\n  QuotaUpdateParameters as QuotaUpdateParametersMapper,\n  ComputeResource as ComputeResourceMapper,\n  ClusterUpdateParameters as ClusterUpdateParametersMapper,\n  PrivateEndpointConnection as PrivateEndpointConnectionMapper,\n  WorkspaceConnection as WorkspaceConnectionMapper\n} from \"../models/mappers\";\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2021-07-01\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const subscriptionId: OperationURLParameter = {\n  parameterPath: \"subscriptionId\",\n  mapper: {\n    constraints: {\n      MinLength: 1\n    },\n    serializedName: \"subscriptionId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const resourceGroupName: OperationURLParameter = {\n  parameterPath: \"resourceGroupName\",\n  mapper: {\n    constraints: {\n      MaxLength: 90,\n      MinLength: 1\n    },\n    serializedName: \"resourceGroupName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const workspaceName: OperationURLParameter = {\n  parameterPath: \"workspaceName\",\n  mapper: {\n    serializedName: \"workspaceName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: WorkspaceMapper\n};\n\nexport const parameters1: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: WorkspaceUpdateParametersMapper\n};\n\nexport const skip: OperationQueryParameter = {\n  parameterPath: [\"options\", \"skip\"],\n  mapper: {\n    serializedName: \"$skip\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters2: OperationParameter = {\n  parameterPath: [\"options\", \"parameters\"],\n  mapper: DiagnoseWorkspaceParametersMapper\n};\n\nexport const nextLink: OperationURLParameter = {\n  parameterPath: \"nextLink\",\n  mapper: {\n    serializedName: \"nextLink\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const location: OperationURLParameter = {\n  parameterPath: \"location\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[-\\\\w\\\\._]+$\")\n    },\n    serializedName: \"location\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters3: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: QuotaUpdateParametersMapper\n};\n\nexport const computeName: OperationURLParameter = {\n  parameterPath: \"computeName\",\n  mapper: {\n    serializedName: \"computeName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters4: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ComputeResourceMapper\n};\n\nexport const parameters5: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ClusterUpdateParametersMapper\n};\n\nexport const underlyingResourceAction: OperationQueryParameter = {\n  parameterPath: \"underlyingResourceAction\",\n  mapper: {\n    serializedName: \"underlyingResourceAction\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const privateEndpointConnectionName: OperationURLParameter = {\n  parameterPath: \"privateEndpointConnectionName\",\n  mapper: {\n    serializedName: \"privateEndpointConnectionName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const properties: OperationParameter = {\n  parameterPath: \"properties\",\n  mapper: PrivateEndpointConnectionMapper\n};\n\nexport const target: OperationQueryParameter = {\n  parameterPath: [\"options\", \"target\"],\n  mapper: {\n    serializedName: \"target\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const category: OperationQueryParameter = {\n  parameterPath: [\"options\", \"category\"],\n  mapper: {\n    serializedName: \"category\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters6: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: WorkspaceConnectionMapper\n};\n\nexport const connectionName: OperationURLParameter = {\n  parameterPath: \"connectionName\",\n  mapper: {\n    serializedName: \"connectionName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { Operations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureMachineLearningWorkspaces } from \"../azureMachineLearningWorkspaces\";\nimport {\n  Operation,\n  OperationsListOptionalParams,\n  OperationsListResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Operations operations. */\nexport class OperationsImpl implements Operations {\n  private readonly client: AzureMachineLearningWorkspaces;\n\n  /**\n   * Initialize a new instance of the class Operations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureMachineLearningWorkspaces) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all of the available Azure Machine Learning Workspaces REST API operations.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: OperationsListOptionalParams\n  ): PagedAsyncIterableIterator<Operation> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(options);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: OperationsListOptionalParams\n  ): AsyncIterableIterator<Operation[]> {\n    let result = await this._list(options);\n    yield result.value || [];\n  }\n\n  private async *listPagingAll(\n    options?: OperationsListOptionalParams\n  ): AsyncIterableIterator<Operation> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all of the available Azure Machine Learning Workspaces REST API operations.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: OperationsListOptionalParams\n  ): Promise<OperationsListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.MachineLearningServices/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { LongRunningOperation, LroResponse } from \"@azure/core-lro\";\n\nexport class LroImpl<T> implements LongRunningOperation<T> {\n  constructor(\n    private sendOperationFn: (args: any, spec: any) => Promise<LroResponse<T>>,\n    private args: Record<string, unknown>,\n    private spec: {\n      readonly requestBody?: unknown;\n      readonly path?: string;\n      readonly httpMethod: string;\n    } & Record<string, any>,\n    public requestPath: string = spec.path!,\n    public requestMethod: string = spec.httpMethod\n  ) {}\n  public async sendInitialRequest(): Promise<LroResponse<T>> {\n    return this.sendOperationFn(this.args, this.spec);\n  }\n  public async sendPollRequest(path: string): Promise<LroResponse<T>> {\n    const { requestBody, ...restSpec } = this.spec;\n    return this.sendOperationFn(this.args, {\n      ...restSpec,\n      path,\n      httpMethod: \"GET\"\n    });\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { Workspaces } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureMachineLearningWorkspaces } from \"../azureMachineLearningWorkspaces\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  Workspace,\n  WorkspacesListByResourceGroupNextOptionalParams,\n  WorkspacesListByResourceGroupOptionalParams,\n  WorkspacesListBySubscriptionNextOptionalParams,\n  WorkspacesListBySubscriptionOptionalParams,\n  WorkspacesGetOptionalParams,\n  WorkspacesGetResponse,\n  WorkspacesCreateOrUpdateOptionalParams,\n  WorkspacesCreateOrUpdateResponse,\n  WorkspacesDeleteOptionalParams,\n  WorkspaceUpdateParameters,\n  WorkspacesUpdateOptionalParams,\n  WorkspacesUpdateResponse,\n  WorkspacesListByResourceGroupResponse,\n  WorkspacesDiagnoseOptionalParams,\n  WorkspacesDiagnoseResponse,\n  WorkspacesListKeysOptionalParams,\n  WorkspacesListKeysResponse,\n  WorkspacesResyncKeysOptionalParams,\n  WorkspacesListBySubscriptionResponse,\n  WorkspacesListNotebookAccessTokenOptionalParams,\n  WorkspacesListNotebookAccessTokenResponse,\n  WorkspacesPrepareNotebookOptionalParams,\n  WorkspacesPrepareNotebookResponse,\n  WorkspacesListStorageAccountKeysOptionalParams,\n  WorkspacesListStorageAccountKeysResponse,\n  WorkspacesListNotebookKeysOptionalParams,\n  WorkspacesListNotebookKeysResponse,\n  WorkspacesListOutboundNetworkDependenciesEndpointsOptionalParams,\n  WorkspacesListOutboundNetworkDependenciesEndpointsResponse,\n  WorkspacesListByResourceGroupNextResponse,\n  WorkspacesListBySubscriptionNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Workspaces operations. */\nexport class WorkspacesImpl implements Workspaces {\n  private readonly client: AzureMachineLearningWorkspaces;\n\n  /**\n   * Initialize a new instance of the class Workspaces class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureMachineLearningWorkspaces) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all the available machine learning workspaces under the specified resource group.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  public listByResourceGroup(\n    resourceGroupName: string,\n    options?: WorkspacesListByResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<Workspace> {\n    const iter = this.listByResourceGroupPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByResourceGroupPagingPage(resourceGroupName, options);\n      }\n    };\n  }\n\n  private async *listByResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: WorkspacesListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<Workspace[]> {\n    let result = await this._listByResourceGroup(resourceGroupName, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listByResourceGroupNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listByResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: WorkspacesListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<Workspace> {\n    for await (const page of this.listByResourceGroupPagingPage(\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all the available machine learning workspaces under the specified subscription.\n   * @param options The options parameters.\n   */\n  public listBySubscription(\n    options?: WorkspacesListBySubscriptionOptionalParams\n  ): PagedAsyncIterableIterator<Workspace> {\n    const iter = this.listBySubscriptionPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listBySubscriptionPagingPage(options);\n      }\n    };\n  }\n\n  private async *listBySubscriptionPagingPage(\n    options?: WorkspacesListBySubscriptionOptionalParams\n  ): AsyncIterableIterator<Workspace[]> {\n    let result = await this._listBySubscription(options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listBySubscriptionNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listBySubscriptionPagingAll(\n    options?: WorkspacesListBySubscriptionOptionalParams\n  ): AsyncIterableIterator<Workspace> {\n    for await (const page of this.listBySubscriptionPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets the properties of the specified machine learning workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspacesGetOptionalParams\n  ): Promise<WorkspacesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a workspace with the specified parameters.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param parameters The parameters for creating or updating a machine learning workspace.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    parameters: Workspace,\n    options?: WorkspacesCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<WorkspacesCreateOrUpdateResponse>,\n      WorkspacesCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<WorkspacesCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates or updates a workspace with the specified parameters.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param parameters The parameters for creating or updating a machine learning workspace.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    parameters: Workspace,\n    options?: WorkspacesCreateOrUpdateOptionalParams\n  ): Promise<WorkspacesCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      workspaceName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes a machine learning workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspacesDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes a machine learning workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspacesDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      workspaceName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Updates a machine learning workspace with the specified parameters.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param parameters The parameters for updating a machine learning workspace.\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    workspaceName: string,\n    parameters: WorkspaceUpdateParameters,\n    options?: WorkspacesUpdateOptionalParams\n  ): Promise<WorkspacesUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, parameters, options },\n      updateOperationSpec\n    );\n  }\n\n  /**\n   * Lists all the available machine learning workspaces under the specified resource group.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroup(\n    resourceGroupName: string,\n    options?: WorkspacesListByResourceGroupOptionalParams\n  ): Promise<WorkspacesListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listByResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Diagnose workspace setup issue.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  async beginDiagnose(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspacesDiagnoseOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<WorkspacesDiagnoseResponse>,\n      WorkspacesDiagnoseResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<WorkspacesDiagnoseResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, options },\n      diagnoseOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"location\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Diagnose workspace setup issue.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  async beginDiagnoseAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspacesDiagnoseOptionalParams\n  ): Promise<WorkspacesDiagnoseResponse> {\n    const poller = await this.beginDiagnose(\n      resourceGroupName,\n      workspaceName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Lists all the keys associated with this workspace. This includes keys for the storage account, app\n   * insights and password for container registry\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  listKeys(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspacesListKeysOptionalParams\n  ): Promise<WorkspacesListKeysResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listKeysOperationSpec\n    );\n  }\n\n  /**\n   * Resync all the keys associated with this workspace. This includes keys for the storage account, app\n   * insights and password for container registry\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  async beginResyncKeys(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspacesResyncKeysOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, options },\n      resyncKeysOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Resync all the keys associated with this workspace. This includes keys for the storage account, app\n   * insights and password for container registry\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  async beginResyncKeysAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspacesResyncKeysOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginResyncKeys(\n      resourceGroupName,\n      workspaceName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Lists all the available machine learning workspaces under the specified subscription.\n   * @param options The options parameters.\n   */\n  private _listBySubscription(\n    options?: WorkspacesListBySubscriptionOptionalParams\n  ): Promise<WorkspacesListBySubscriptionResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      listBySubscriptionOperationSpec\n    );\n  }\n\n  /**\n   * return notebook access token and refresh token\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  listNotebookAccessToken(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspacesListNotebookAccessTokenOptionalParams\n  ): Promise<WorkspacesListNotebookAccessTokenResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listNotebookAccessTokenOperationSpec\n    );\n  }\n\n  /**\n   * Prepare a notebook.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  async beginPrepareNotebook(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspacesPrepareNotebookOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<WorkspacesPrepareNotebookResponse>,\n      WorkspacesPrepareNotebookResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<WorkspacesPrepareNotebookResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, options },\n      prepareNotebookOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"location\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Prepare a notebook.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  async beginPrepareNotebookAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspacesPrepareNotebookOptionalParams\n  ): Promise<WorkspacesPrepareNotebookResponse> {\n    const poller = await this.beginPrepareNotebook(\n      resourceGroupName,\n      workspaceName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * List storage account keys of a workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  listStorageAccountKeys(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspacesListStorageAccountKeysOptionalParams\n  ): Promise<WorkspacesListStorageAccountKeysResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listStorageAccountKeysOperationSpec\n    );\n  }\n\n  /**\n   * List keys of a notebook.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  listNotebookKeys(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspacesListNotebookKeysOptionalParams\n  ): Promise<WorkspacesListNotebookKeysResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listNotebookKeysOperationSpec\n    );\n  }\n\n  /**\n   * Called by Client (Portal, CLI, etc) to get a list of all external outbound dependencies (FQDNs)\n   * programmatically.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  listOutboundNetworkDependenciesEndpoints(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspacesListOutboundNetworkDependenciesEndpointsOptionalParams\n  ): Promise<WorkspacesListOutboundNetworkDependenciesEndpointsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listOutboundNetworkDependenciesEndpointsOperationSpec\n    );\n  }\n\n  /**\n   * ListByResourceGroupNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: WorkspacesListByResourceGroupNextOptionalParams\n  ): Promise<WorkspacesListByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listByResourceGroupNextOperationSpec\n    );\n  }\n\n  /**\n   * ListBySubscriptionNext\n   * @param nextLink The nextLink from the previous successful call to the ListBySubscription method.\n   * @param options The options parameters.\n   */\n  private _listBySubscriptionNext(\n    nextLink: string,\n    options?: WorkspacesListBySubscriptionNextOptionalParams\n  ): Promise<WorkspacesListBySubscriptionNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listBySubscriptionNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Workspace\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Workspace\n    },\n    201: {\n      bodyMapper: Mappers.Workspace\n    },\n    202: {\n      bodyMapper: Mappers.Workspace\n    },\n    204: {\n      bodyMapper: Mappers.Workspace\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Workspace\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkspaceListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.skip],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst diagnoseOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/diagnose\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DiagnoseResponseResult\n    },\n    201: {\n      bodyMapper: Mappers.DiagnoseResponseResult\n    },\n    202: {\n      bodyMapper: Mappers.DiagnoseResponseResult\n    },\n    204: {\n      bodyMapper: Mappers.DiagnoseResponseResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters2,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listKeysOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/listKeys\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListWorkspaceKeysResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst resyncKeysOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/resyncKeys\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listBySubscriptionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/workspaces\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkspaceListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.skip],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNotebookAccessTokenOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/listNotebookAccessToken\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NotebookAccessTokenResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst prepareNotebookOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/prepareNotebook\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NotebookResourceInfo\n    },\n    201: {\n      bodyMapper: Mappers.NotebookResourceInfo\n    },\n    202: {\n      bodyMapper: Mappers.NotebookResourceInfo\n    },\n    204: {\n      bodyMapper: Mappers.NotebookResourceInfo\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listStorageAccountKeysOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/listStorageAccountKeys\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListStorageAccountKeysResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNotebookKeysOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/listNotebookKeys\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListNotebookKeysResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOutboundNetworkDependenciesEndpointsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/outboundNetworkDependenciesEndpoints\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ExternalFqdnResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkspaceListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.skip],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listBySubscriptionNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkspaceListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.skip],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { Usages } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureMachineLearningWorkspaces } from \"../azureMachineLearningWorkspaces\";\nimport {\n  Usage,\n  UsagesListNextOptionalParams,\n  UsagesListOptionalParams,\n  UsagesListResponse,\n  UsagesListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Usages operations. */\nexport class UsagesImpl implements Usages {\n  private readonly client: AzureMachineLearningWorkspaces;\n\n  /**\n   * Initialize a new instance of the class Usages class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureMachineLearningWorkspaces) {\n    this.client = client;\n  }\n\n  /**\n   * Gets the current usage information as well as limits for AML resources for given subscription and\n   * location.\n   * @param location The location for which resource usage is queried.\n   * @param options The options parameters.\n   */\n  public list(\n    location: string,\n    options?: UsagesListOptionalParams\n  ): PagedAsyncIterableIterator<Usage> {\n    const iter = this.listPagingAll(location, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(location, options);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    location: string,\n    options?: UsagesListOptionalParams\n  ): AsyncIterableIterator<Usage[]> {\n    let result = await this._list(location, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(location, continuationToken, options);\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    location: string,\n    options?: UsagesListOptionalParams\n  ): AsyncIterableIterator<Usage> {\n    for await (const page of this.listPagingPage(location, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets the current usage information as well as limits for AML resources for given subscription and\n   * location.\n   * @param location The location for which resource usage is queried.\n   * @param options The options parameters.\n   */\n  private _list(\n    location: string,\n    options?: UsagesListOptionalParams\n  ): Promise<UsagesListResponse> {\n    return this.client.sendOperationRequest(\n      { location, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param location The location for which resource usage is queried.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    location: string,\n    nextLink: string,\n    options?: UsagesListNextOptionalParams\n  ): Promise<UsagesListNextResponse> {\n    return this.client.sendOperationRequest(\n      { location, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/locations/{location}/usages\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListUsagesResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListUsagesResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.location\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { VirtualMachineSizes } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureMachineLearningWorkspaces } from \"../azureMachineLearningWorkspaces\";\nimport {\n  VirtualMachineSizesListOptionalParams,\n  VirtualMachineSizesListResponse\n} from \"../models\";\n\n/** Class containing VirtualMachineSizes operations. */\nexport class VirtualMachineSizesImpl implements VirtualMachineSizes {\n  private readonly client: AzureMachineLearningWorkspaces;\n\n  /**\n   * Initialize a new instance of the class VirtualMachineSizes class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureMachineLearningWorkspaces) {\n    this.client = client;\n  }\n\n  /**\n   * Returns supported VM Sizes in a location\n   * @param location The location upon which virtual-machine-sizes is queried.\n   * @param options The options parameters.\n   */\n  list(\n    location: string,\n    options?: VirtualMachineSizesListOptionalParams\n  ): Promise<VirtualMachineSizesListResponse> {\n    return this.client.sendOperationRequest(\n      { location, options },\n      listOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/locations/{location}/vmSizes\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineSizeListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { Quotas } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureMachineLearningWorkspaces } from \"../azureMachineLearningWorkspaces\";\nimport {\n  ResourceQuota,\n  QuotasListNextOptionalParams,\n  QuotasListOptionalParams,\n  QuotaUpdateParameters,\n  QuotasUpdateOptionalParams,\n  QuotasUpdateResponse,\n  QuotasListResponse,\n  QuotasListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Quotas operations. */\nexport class QuotasImpl implements Quotas {\n  private readonly client: AzureMachineLearningWorkspaces;\n\n  /**\n   * Initialize a new instance of the class Quotas class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureMachineLearningWorkspaces) {\n    this.client = client;\n  }\n\n  /**\n   * Gets the currently assigned Workspace Quotas based on VMFamily.\n   * @param location The location for which resource usage is queried.\n   * @param options The options parameters.\n   */\n  public list(\n    location: string,\n    options?: QuotasListOptionalParams\n  ): PagedAsyncIterableIterator<ResourceQuota> {\n    const iter = this.listPagingAll(location, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(location, options);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    location: string,\n    options?: QuotasListOptionalParams\n  ): AsyncIterableIterator<ResourceQuota[]> {\n    let result = await this._list(location, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(location, continuationToken, options);\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    location: string,\n    options?: QuotasListOptionalParams\n  ): AsyncIterableIterator<ResourceQuota> {\n    for await (const page of this.listPagingPage(location, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Update quota for each VM family in workspace.\n   * @param location The location for update quota is queried.\n   * @param parameters Quota update parameters.\n   * @param options The options parameters.\n   */\n  update(\n    location: string,\n    parameters: QuotaUpdateParameters,\n    options?: QuotasUpdateOptionalParams\n  ): Promise<QuotasUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { location, parameters, options },\n      updateOperationSpec\n    );\n  }\n\n  /**\n   * Gets the currently assigned Workspace Quotas based on VMFamily.\n   * @param location The location for which resource usage is queried.\n   * @param options The options parameters.\n   */\n  private _list(\n    location: string,\n    options?: QuotasListOptionalParams\n  ): Promise<QuotasListResponse> {\n    return this.client.sendOperationRequest(\n      { location, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param location The location for which resource usage is queried.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    location: string,\n    nextLink: string,\n    options?: QuotasListNextOptionalParams\n  ): Promise<QuotasListNextResponse> {\n    return this.client.sendOperationRequest(\n      { location, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/locations/{location}/updateQuotas\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.UpdateWorkspaceQuotasResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters3,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/locations/{location}/quotas\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListWorkspaceQuotas\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListWorkspaceQuotas\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.location\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { ComputeOperations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureMachineLearningWorkspaces } from \"../azureMachineLearningWorkspaces\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  ComputeResource,\n  ComputeListNextOptionalParams,\n  ComputeListOptionalParams,\n  AmlComputeNodeInformation,\n  ComputeListNodesNextOptionalParams,\n  ComputeListNodesOptionalParams,\n  ComputeListResponse,\n  ComputeGetOptionalParams,\n  ComputeGetResponse,\n  ComputeCreateOrUpdateOptionalParams,\n  ComputeCreateOrUpdateResponse,\n  ClusterUpdateParameters,\n  ComputeUpdateOptionalParams,\n  ComputeUpdateResponse,\n  UnderlyingResourceAction,\n  ComputeDeleteOptionalParams,\n  ComputeListNodesResponse,\n  ComputeListKeysOptionalParams,\n  ComputeListKeysResponse,\n  ComputeStartOptionalParams,\n  ComputeStopOptionalParams,\n  ComputeRestartOptionalParams,\n  ComputeListNextResponse,\n  ComputeListNodesNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ComputeOperations operations. */\nexport class ComputeOperationsImpl implements ComputeOperations {\n  private readonly client: AzureMachineLearningWorkspaces;\n\n  /**\n   * Initialize a new instance of the class ComputeOperations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureMachineLearningWorkspaces) {\n    this.client = client;\n  }\n\n  /**\n   * Gets computes in specified workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: ComputeListOptionalParams\n  ): PagedAsyncIterableIterator<ComputeResource> {\n    const iter = this.listPagingAll(resourceGroupName, workspaceName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(resourceGroupName, workspaceName, options);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: ComputeListOptionalParams\n  ): AsyncIterableIterator<ComputeResource[]> {\n    let result = await this._list(resourceGroupName, workspaceName, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        workspaceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: ComputeListOptionalParams\n  ): AsyncIterableIterator<ComputeResource> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      workspaceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get the details (e.g IP address, port etc) of all the compute nodes in the compute.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param computeName Name of the Azure Machine Learning compute.\n   * @param options The options parameters.\n   */\n  public listNodes(\n    resourceGroupName: string,\n    workspaceName: string,\n    computeName: string,\n    options?: ComputeListNodesOptionalParams\n  ): PagedAsyncIterableIterator<AmlComputeNodeInformation> {\n    const iter = this.listNodesPagingAll(\n      resourceGroupName,\n      workspaceName,\n      computeName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listNodesPagingPage(\n          resourceGroupName,\n          workspaceName,\n          computeName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listNodesPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    computeName: string,\n    options?: ComputeListNodesOptionalParams\n  ): AsyncIterableIterator<AmlComputeNodeInformation[]> {\n    let result = await this._listNodes(\n      resourceGroupName,\n      workspaceName,\n      computeName,\n      options\n    );\n    yield result.nodes || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNodesNext(\n        resourceGroupName,\n        workspaceName,\n        computeName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.nodes || [];\n    }\n  }\n\n  private async *listNodesPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    computeName: string,\n    options?: ComputeListNodesOptionalParams\n  ): AsyncIterableIterator<AmlComputeNodeInformation> {\n    for await (const page of this.listNodesPagingPage(\n      resourceGroupName,\n      workspaceName,\n      computeName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets computes in specified workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: ComputeListOptionalParams\n  ): Promise<ComputeListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Gets compute definition by its name. Any secrets (storage keys, service credentials, etc) are not\n   * returned - use 'keys' nested resource to get them.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param computeName Name of the Azure Machine Learning compute.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    computeName: string,\n    options?: ComputeGetOptionalParams\n  ): Promise<ComputeGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, computeName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates compute. This call will overwrite a compute if it exists. This is a\n   * nonrecoverable operation. If your intent is to create a new compute, do a GET first to verify that\n   * it does not exist yet.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param computeName Name of the Azure Machine Learning compute.\n   * @param parameters Payload with Machine Learning compute definition.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    computeName: string,\n    parameters: ComputeResource,\n    options?: ComputeCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<ComputeCreateOrUpdateResponse>,\n      ComputeCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ComputeCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, computeName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates or updates compute. This call will overwrite a compute if it exists. This is a\n   * nonrecoverable operation. If your intent is to create a new compute, do a GET first to verify that\n   * it does not exist yet.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param computeName Name of the Azure Machine Learning compute.\n   * @param parameters Payload with Machine Learning compute definition.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    computeName: string,\n    parameters: ComputeResource,\n    options?: ComputeCreateOrUpdateOptionalParams\n  ): Promise<ComputeCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      workspaceName,\n      computeName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Updates properties of a compute. This call will overwrite a compute if it exists. This is a\n   * nonrecoverable operation.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param computeName Name of the Azure Machine Learning compute.\n   * @param parameters Additional parameters for cluster update.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    computeName: string,\n    parameters: ClusterUpdateParameters,\n    options?: ComputeUpdateOptionalParams\n  ): Promise<\n    PollerLike<PollOperationState<ComputeUpdateResponse>, ComputeUpdateResponse>\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ComputeUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, computeName, parameters, options },\n      updateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Updates properties of a compute. This call will overwrite a compute if it exists. This is a\n   * nonrecoverable operation.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param computeName Name of the Azure Machine Learning compute.\n   * @param parameters Additional parameters for cluster update.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    computeName: string,\n    parameters: ClusterUpdateParameters,\n    options?: ComputeUpdateOptionalParams\n  ): Promise<ComputeUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      workspaceName,\n      computeName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes specified Machine Learning compute.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param computeName Name of the Azure Machine Learning compute.\n   * @param underlyingResourceAction Delete the underlying compute if 'Delete', or detach the underlying\n   *                                 compute from workspace if 'Detach'.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    workspaceName: string,\n    computeName: string,\n    underlyingResourceAction: UnderlyingResourceAction,\n    options?: ComputeDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        workspaceName,\n        computeName,\n        underlyingResourceAction,\n        options\n      },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes specified Machine Learning compute.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param computeName Name of the Azure Machine Learning compute.\n   * @param underlyingResourceAction Delete the underlying compute if 'Delete', or detach the underlying\n   *                                 compute from workspace if 'Detach'.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    computeName: string,\n    underlyingResourceAction: UnderlyingResourceAction,\n    options?: ComputeDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      workspaceName,\n      computeName,\n      underlyingResourceAction,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Get the details (e.g IP address, port etc) of all the compute nodes in the compute.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param computeName Name of the Azure Machine Learning compute.\n   * @param options The options parameters.\n   */\n  private _listNodes(\n    resourceGroupName: string,\n    workspaceName: string,\n    computeName: string,\n    options?: ComputeListNodesOptionalParams\n  ): Promise<ComputeListNodesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, computeName, options },\n      listNodesOperationSpec\n    );\n  }\n\n  /**\n   * Gets secrets related to Machine Learning compute (storage keys, service credentials, etc).\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param computeName Name of the Azure Machine Learning compute.\n   * @param options The options parameters.\n   */\n  listKeys(\n    resourceGroupName: string,\n    workspaceName: string,\n    computeName: string,\n    options?: ComputeListKeysOptionalParams\n  ): Promise<ComputeListKeysResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, computeName, options },\n      listKeysOperationSpec\n    );\n  }\n\n  /**\n   * Posts a start action to a compute instance\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param computeName Name of the Azure Machine Learning compute.\n   * @param options The options parameters.\n   */\n  async beginStart(\n    resourceGroupName: string,\n    workspaceName: string,\n    computeName: string,\n    options?: ComputeStartOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, computeName, options },\n      startOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Posts a start action to a compute instance\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param computeName Name of the Azure Machine Learning compute.\n   * @param options The options parameters.\n   */\n  async beginStartAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    computeName: string,\n    options?: ComputeStartOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginStart(\n      resourceGroupName,\n      workspaceName,\n      computeName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Posts a stop action to a compute instance\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param computeName Name of the Azure Machine Learning compute.\n   * @param options The options parameters.\n   */\n  async beginStop(\n    resourceGroupName: string,\n    workspaceName: string,\n    computeName: string,\n    options?: ComputeStopOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, computeName, options },\n      stopOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Posts a stop action to a compute instance\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param computeName Name of the Azure Machine Learning compute.\n   * @param options The options parameters.\n   */\n  async beginStopAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    computeName: string,\n    options?: ComputeStopOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginStop(\n      resourceGroupName,\n      workspaceName,\n      computeName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Posts a restart action to a compute instance\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param computeName Name of the Azure Machine Learning compute.\n   * @param options The options parameters.\n   */\n  async beginRestart(\n    resourceGroupName: string,\n    workspaceName: string,\n    computeName: string,\n    options?: ComputeRestartOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, computeName, options },\n      restartOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Posts a restart action to a compute instance\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param computeName Name of the Azure Machine Learning compute.\n   * @param options The options parameters.\n   */\n  async beginRestartAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    computeName: string,\n    options?: ComputeRestartOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginRestart(\n      resourceGroupName,\n      workspaceName,\n      computeName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    nextLink: string,\n    options?: ComputeListNextOptionalParams\n  ): Promise<ComputeListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n\n  /**\n   * ListNodesNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param computeName Name of the Azure Machine Learning compute.\n   * @param nextLink The nextLink from the previous successful call to the ListNodes method.\n   * @param options The options parameters.\n   */\n  private _listNodesNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    computeName: string,\n    nextLink: string,\n    options?: ComputeListNodesNextOptionalParams\n  ): Promise<ComputeListNodesNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, computeName, nextLink, options },\n      listNodesNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PaginatedComputeResourcesList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.skip],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ComputeResource\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.computeName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ComputeResource\n    },\n    201: {\n      bodyMapper: Mappers.ComputeResource\n    },\n    202: {\n      bodyMapper: Mappers.ComputeResource\n    },\n    204: {\n      bodyMapper: Mappers.ComputeResource\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters4,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.computeName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ComputeResource\n    },\n    201: {\n      bodyMapper: Mappers.ComputeResource\n    },\n    202: {\n      bodyMapper: Mappers.ComputeResource\n    },\n    204: {\n      bodyMapper: Mappers.ComputeResource\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters5,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.computeName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.underlyingResourceAction],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.computeName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNodesOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}/listNodes\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AmlComputeNodesInformation\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.computeName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listKeysOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}/listKeys\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ComputeSecrets\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.computeName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst startOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}/start\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.computeName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst stopOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}/stop\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.computeName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst restartOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}/restart\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.computeName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PaginatedComputeResourcesList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.skip],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNodesNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AmlComputeNodesInformation\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink,\n    Parameters.computeName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { PrivateEndpointConnections } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureMachineLearningWorkspaces } from \"../azureMachineLearningWorkspaces\";\nimport {\n  PrivateEndpointConnection,\n  PrivateEndpointConnectionsListOptionalParams,\n  PrivateEndpointConnectionsListResponse,\n  PrivateEndpointConnectionsGetOptionalParams,\n  PrivateEndpointConnectionsGetResponse,\n  PrivateEndpointConnectionsCreateOrUpdateOptionalParams,\n  PrivateEndpointConnectionsCreateOrUpdateResponse,\n  PrivateEndpointConnectionsDeleteOptionalParams\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing PrivateEndpointConnections operations. */\nexport class PrivateEndpointConnectionsImpl\n  implements PrivateEndpointConnections {\n  private readonly client: AzureMachineLearningWorkspaces;\n\n  /**\n   * Initialize a new instance of the class PrivateEndpointConnections class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureMachineLearningWorkspaces) {\n    this.client = client;\n  }\n\n  /**\n   * List all the private endpoint connections associated with the workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: PrivateEndpointConnectionsListOptionalParams\n  ): PagedAsyncIterableIterator<PrivateEndpointConnection> {\n    const iter = this.listPagingAll(resourceGroupName, workspaceName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(resourceGroupName, workspaceName, options);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: PrivateEndpointConnectionsListOptionalParams\n  ): AsyncIterableIterator<PrivateEndpointConnection[]> {\n    let result = await this._list(resourceGroupName, workspaceName, options);\n    yield result.value || [];\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: PrivateEndpointConnectionsListOptionalParams\n  ): AsyncIterableIterator<PrivateEndpointConnection> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      workspaceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List all the private endpoint connections associated with the workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: PrivateEndpointConnectionsListOptionalParams\n  ): Promise<PrivateEndpointConnectionsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Gets the specified private endpoint connection associated with the workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param privateEndpointConnectionName The name of the private endpoint connection associated with the\n   *                                      workspace\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    privateEndpointConnectionName: string,\n    options?: PrivateEndpointConnectionsGetOptionalParams\n  ): Promise<PrivateEndpointConnectionsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        privateEndpointConnectionName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Update the state of specified private endpoint connection associated with the workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param privateEndpointConnectionName The name of the private endpoint connection associated with the\n   *                                      workspace\n   * @param properties The private endpoint connection properties.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    privateEndpointConnectionName: string,\n    properties: PrivateEndpointConnection,\n    options?: PrivateEndpointConnectionsCreateOrUpdateOptionalParams\n  ): Promise<PrivateEndpointConnectionsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        privateEndpointConnectionName,\n        properties,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Deletes the specified private endpoint connection associated with the workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param privateEndpointConnectionName The name of the private endpoint connection associated with the\n   *                                      workspace\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    workspaceName: string,\n    privateEndpointConnectionName: string,\n    options?: PrivateEndpointConnectionsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        privateEndpointConnectionName,\n        options\n      },\n      deleteOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/privateEndpointConnections\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateEndpointConnectionListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/privateEndpointConnections/{privateEndpointConnectionName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateEndpointConnection\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.privateEndpointConnectionName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/privateEndpointConnections/{privateEndpointConnectionName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateEndpointConnection\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.properties,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.privateEndpointConnectionName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/privateEndpointConnections/{privateEndpointConnectionName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.privateEndpointConnectionName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PrivateLinkResources } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureMachineLearningWorkspaces } from \"../azureMachineLearningWorkspaces\";\nimport {\n  PrivateLinkResourcesListOptionalParams,\n  PrivateLinkResourcesListResponse\n} from \"../models\";\n\n/** Class containing PrivateLinkResources operations. */\nexport class PrivateLinkResourcesImpl implements PrivateLinkResources {\n  private readonly client: AzureMachineLearningWorkspaces;\n\n  /**\n   * Initialize a new instance of the class PrivateLinkResources class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureMachineLearningWorkspaces) {\n    this.client = client;\n  }\n\n  /**\n   * Gets the private link resources that need to be created for a workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: PrivateLinkResourcesListOptionalParams\n  ): Promise<PrivateLinkResourcesListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/privateLinkResources\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateLinkResourceListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { WorkspaceConnections } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureMachineLearningWorkspaces } from \"../azureMachineLearningWorkspaces\";\nimport {\n  WorkspaceConnection,\n  WorkspaceConnectionsListOptionalParams,\n  WorkspaceConnectionsListResponse,\n  WorkspaceConnectionsCreateOptionalParams,\n  WorkspaceConnectionsCreateResponse,\n  WorkspaceConnectionsGetOptionalParams,\n  WorkspaceConnectionsGetResponse,\n  WorkspaceConnectionsDeleteOptionalParams\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing WorkspaceConnections operations. */\nexport class WorkspaceConnectionsImpl implements WorkspaceConnections {\n  private readonly client: AzureMachineLearningWorkspaces;\n\n  /**\n   * Initialize a new instance of the class WorkspaceConnections class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureMachineLearningWorkspaces) {\n    this.client = client;\n  }\n\n  /**\n   * List all connections under a AML workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspaceConnectionsListOptionalParams\n  ): PagedAsyncIterableIterator<WorkspaceConnection> {\n    const iter = this.listPagingAll(resourceGroupName, workspaceName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(resourceGroupName, workspaceName, options);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspaceConnectionsListOptionalParams\n  ): AsyncIterableIterator<WorkspaceConnection[]> {\n    let result = await this._list(resourceGroupName, workspaceName, options);\n    yield result.value || [];\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspaceConnectionsListOptionalParams\n  ): AsyncIterableIterator<WorkspaceConnection> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      workspaceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List all connections under a AML workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspaceConnectionsListOptionalParams\n  ): Promise<WorkspaceConnectionsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Add a new workspace connection.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param connectionName Friendly name of the workspace connection\n   * @param parameters The object for creating or updating a new workspace connection\n   * @param options The options parameters.\n   */\n  create(\n    resourceGroupName: string,\n    workspaceName: string,\n    connectionName: string,\n    parameters: WorkspaceConnection,\n    options?: WorkspaceConnectionsCreateOptionalParams\n  ): Promise<WorkspaceConnectionsCreateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, connectionName, parameters, options },\n      createOperationSpec\n    );\n  }\n\n  /**\n   * Get the detail of a workspace connection.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param connectionName Friendly name of the workspace connection\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    connectionName: string,\n    options?: WorkspaceConnectionsGetOptionalParams\n  ): Promise<WorkspaceConnectionsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, connectionName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Delete a workspace connection.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param connectionName Friendly name of the workspace connection\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    workspaceName: string,\n    connectionName: string,\n    options?: WorkspaceConnectionsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, connectionName, options },\n      deleteOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/connections\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PaginatedWorkspaceConnectionsList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.target,\n    Parameters.category\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/connections/{connectionName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkspaceConnection\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters6,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.connectionName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/connections/{connectionName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkspaceConnection\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.connectionName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/connections/{connectionName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.connectionName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { WorkspaceFeatures } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureMachineLearningWorkspaces } from \"../azureMachineLearningWorkspaces\";\nimport {\n  AmlUserFeature,\n  WorkspaceFeaturesListNextOptionalParams,\n  WorkspaceFeaturesListOptionalParams,\n  WorkspaceFeaturesListResponse,\n  WorkspaceFeaturesListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing WorkspaceFeatures operations. */\nexport class WorkspaceFeaturesImpl implements WorkspaceFeatures {\n  private readonly client: AzureMachineLearningWorkspaces;\n\n  /**\n   * Initialize a new instance of the class WorkspaceFeatures class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureMachineLearningWorkspaces) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all enabled features for a workspace\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspaceFeaturesListOptionalParams\n  ): PagedAsyncIterableIterator<AmlUserFeature> {\n    const iter = this.listPagingAll(resourceGroupName, workspaceName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(resourceGroupName, workspaceName, options);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspaceFeaturesListOptionalParams\n  ): AsyncIterableIterator<AmlUserFeature[]> {\n    let result = await this._list(resourceGroupName, workspaceName, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        workspaceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspaceFeaturesListOptionalParams\n  ): AsyncIterableIterator<AmlUserFeature> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      workspaceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all enabled features for a workspace\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspaceFeaturesListOptionalParams\n  ): Promise<WorkspaceFeaturesListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName Name of Azure Machine Learning workspace.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    nextLink: string,\n    options?: WorkspaceFeaturesListNextOptionalParams\n  ): Promise<WorkspaceFeaturesListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/features\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListAmlUserFeatureResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListAmlUserFeatureResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { WorkspaceSkus } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureMachineLearningWorkspaces } from \"../azureMachineLearningWorkspaces\";\nimport {\n  WorkspaceSku,\n  WorkspaceSkusListNextOptionalParams,\n  WorkspaceSkusListOptionalParams,\n  WorkspaceSkusListResponse,\n  WorkspaceSkusListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing WorkspaceSkus operations. */\nexport class WorkspaceSkusImpl implements WorkspaceSkus {\n  private readonly client: AzureMachineLearningWorkspaces;\n\n  /**\n   * Initialize a new instance of the class WorkspaceSkus class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureMachineLearningWorkspaces) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all skus with associated features\n   * @param options The options parameters.\n   */\n  public list(\n    options?: WorkspaceSkusListOptionalParams\n  ): PagedAsyncIterableIterator<WorkspaceSku> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(options);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: WorkspaceSkusListOptionalParams\n  ): AsyncIterableIterator<WorkspaceSku[]> {\n    let result = await this._list(options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    options?: WorkspaceSkusListOptionalParams\n  ): AsyncIterableIterator<WorkspaceSku> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all skus with associated features\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: WorkspaceSkusListOptionalParams\n  ): Promise<WorkspaceSkusListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: WorkspaceSkusListNextOptionalParams\n  ): Promise<WorkspaceSkusListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/workspaces/skus\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SkuListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SkuListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\nimport * as coreAuth from \"@azure/core-auth\";\nimport {\n  OperationsImpl,\n  WorkspacesImpl,\n  UsagesImpl,\n  VirtualMachineSizesImpl,\n  QuotasImpl,\n  ComputeOperationsImpl,\n  PrivateEndpointConnectionsImpl,\n  PrivateLinkResourcesImpl,\n  WorkspaceConnectionsImpl,\n  WorkspaceFeaturesImpl,\n  WorkspaceSkusImpl\n} from \"./operations\";\nimport {\n  Operations,\n  Workspaces,\n  Usages,\n  VirtualMachineSizes,\n  Quotas,\n  ComputeOperations,\n  PrivateEndpointConnections,\n  PrivateLinkResources,\n  WorkspaceConnections,\n  WorkspaceFeatures,\n  WorkspaceSkus\n} from \"./operationsInterfaces\";\nimport { AzureMachineLearningWorkspacesOptionalParams } from \"./models\";\n\nexport class AzureMachineLearningWorkspaces extends coreClient.ServiceClient {\n  $host: string;\n  apiVersion: string;\n  subscriptionId: string;\n\n  /**\n   * Initializes a new instance of the AzureMachineLearningWorkspaces class.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param subscriptionId The ID of the target subscription.\n   * @param options The parameter options\n   */\n  constructor(\n    credentials: coreAuth.TokenCredential,\n    subscriptionId: string,\n    options?: AzureMachineLearningWorkspacesOptionalParams\n  ) {\n    if (credentials === undefined) {\n      throw new Error(\"'credentials' cannot be null\");\n    }\n    if (subscriptionId === undefined) {\n      throw new Error(\"'subscriptionId' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: AzureMachineLearningWorkspacesOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\",\n      credential: credentials\n    };\n\n    const packageDetails = `azsdk-js-arm-machinelearningservices/5.0.1`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    if (!options.credentialScopes) {\n      options.credentialScopes = [\"https://management.azure.com/.default\"];\n    }\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      baseUri:\n        options.endpoint ?? options.baseUri ?? \"https://management.azure.com\"\n    };\n    super(optionsWithDefaults);\n\n    if (options?.pipeline && options.pipeline.getOrderedPolicies().length > 0) {\n      const pipelinePolicies: coreRestPipeline.PipelinePolicy[] = options.pipeline.getOrderedPolicies();\n      const bearerTokenAuthenticationPolicyFound = pipelinePolicies.some(\n        (pipelinePolicy) =>\n          pipelinePolicy.name ===\n          coreRestPipeline.bearerTokenAuthenticationPolicyName\n      );\n      if (!bearerTokenAuthenticationPolicyFound) {\n        this.pipeline.removePolicy({\n          name: coreRestPipeline.bearerTokenAuthenticationPolicyName\n        });\n        this.pipeline.addPolicy(\n          coreRestPipeline.bearerTokenAuthenticationPolicy({\n            scopes: `${optionsWithDefaults.baseUri}/.default`,\n            challengeCallbacks: {\n              authorizeRequestOnChallenge:\n                coreClient.authorizeRequestOnClaimChallenge\n            }\n          })\n        );\n      }\n    }\n    // Parameter assignments\n    this.subscriptionId = subscriptionId;\n\n    // Assigning values to Constant parameters\n    this.$host = options.$host || \"https://management.azure.com\";\n    this.apiVersion = options.apiVersion || \"2021-07-01\";\n    this.operations = new OperationsImpl(this);\n    this.workspaces = new WorkspacesImpl(this);\n    this.usages = new UsagesImpl(this);\n    this.virtualMachineSizes = new VirtualMachineSizesImpl(this);\n    this.quotas = new QuotasImpl(this);\n    this.computeOperations = new ComputeOperationsImpl(this);\n    this.privateEndpointConnections = new PrivateEndpointConnectionsImpl(this);\n    this.privateLinkResources = new PrivateLinkResourcesImpl(this);\n    this.workspaceConnections = new WorkspaceConnectionsImpl(this);\n    this.workspaceFeatures = new WorkspaceFeaturesImpl(this);\n    this.workspaceSkus = new WorkspaceSkusImpl(this);\n  }\n\n  operations: Operations;\n  workspaces: Workspaces;\n  usages: Usages;\n  virtualMachineSizes: VirtualMachineSizes;\n  quotas: Quotas;\n  computeOperations: ComputeOperations;\n  privateEndpointConnections: PrivateEndpointConnections;\n  privateLinkResources: PrivateLinkResources;\n  workspaceConnections: WorkspaceConnections;\n  workspaceFeatures: WorkspaceFeatures;\n  workspaceSkus: WorkspaceSkus;\n}\n"],"names":["KnownProvisioningState","KnownEncryptionStatus","KnownPublicNetworkAccess","KnownPrivateEndpointServiceConnectionStatus","KnownPrivateEndpointConnectionProvisioningState","KnownCreatedByType","KnownDiagnoseResultLevel","KnownUsageUnit","KnownBillingCurrency","KnownUnitOfMeasure","KnownVMPriceOSType","KnownVMTier","KnownQuotaUnit","KnownStatus","KnownComputeType","KnownUnderlyingResourceAction","KnownNodeState","KnownValueFormat","KnownReasonCode","KnownClusterPurpose","KnownSslConfigurationStatus","KnownLoadBalancerType","KnownOsType","KnownVmPriority","KnownRemoteLoginPortPublicAccess","KnownAllocationState","KnownApplicationSharingPolicy","KnownSshPublicAccess","KnownComputeInstanceState","KnownComputeInstanceAuthorizationType","KnownOperationName","KnownOperationStatus","WorkspaceMapper","WorkspaceUpdateParametersMapper","DiagnoseWorkspaceParametersMapper","QuotaUpdateParametersMapper","ComputeResourceMapper","ClusterUpdateParametersMapper","PrivateEndpointConnectionMapper","WorkspaceConnectionMapper","__await","__asyncValues","__asyncDelegator","listOperationSpec","serializer","coreClient","Mappers.OperationListResult","Mappers.ErrorResponse","Parameters.apiVersion","Parameters.$host","Parameters.accept","__rest","getOperationSpec","__awaiter","createOrUpdateOperationSpec","LroEngine","deleteOperationSpec","updateOperationSpec","listKeysOperationSpec","Mappers.Workspace","Parameters.subscriptionId","Parameters.resourceGroupName","Parameters.workspaceName","Parameters.parameters","Parameters.contentType","Parameters.parameters1","Mappers.WorkspaceListResult","Parameters.skip","Mappers.DiagnoseResponseResult","Parameters.parameters2","Mappers.ListWorkspaceKeysResult","Mappers.NotebookAccessTokenResult","Mappers.NotebookResourceInfo","Mappers.ListStorageAccountKeysResult","Mappers.ListNotebookKeysResult","Mappers.ExternalFqdnResponse","Parameters.nextLink","listNextOperationSpec","Mappers.ListUsagesResult","Parameters.location","Mappers.VirtualMachineSizeListResult","Mappers.UpdateWorkspaceQuotasResult","Parameters.parameters3","Mappers.ListWorkspaceQuotas","Mappers.PaginatedComputeResourcesList","Mappers.ComputeResource","Parameters.computeName","Parameters.parameters4","Parameters.parameters5","Parameters.underlyingResourceAction","Mappers.AmlComputeNodesInformation","Mappers.ComputeSecrets","Mappers.PrivateEndpointConnectionListResult","Mappers.PrivateEndpointConnection","Parameters.privateEndpointConnectionName","Parameters.properties","Mappers.PrivateLinkResourceListResult","Mappers.PaginatedWorkspaceConnectionsList","Parameters.target","Parameters.category","Mappers.WorkspaceConnection","Parameters.parameters6","Parameters.connectionName","Mappers.ListAmlUserFeatureResult","Mappers.SkuListResult","coreRestPipeline"],"mappings":"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"}