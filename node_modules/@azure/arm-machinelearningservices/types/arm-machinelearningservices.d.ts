import * as coreAuth from '@azure/core-auth';
import * as coreClient from '@azure/core-client';
import { PagedAsyncIterableIterator } from '@azure/core-paging';
import { PollerLike } from '@azure/core-lro';
import { PollOperationState } from '@azure/core-lro';

/** A Machine Learning compute based on AKS. */
export declare type Aks = Compute & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    computeType: "AKS";
    /** AKS properties */
    properties?: AKSProperties;
};

/** Secrets related to a Machine Learning compute based on AKS. */
export declare type AksComputeSecrets = ComputeSecrets & AksComputeSecretsProperties & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    computeType: "AKS";
};

/** Properties of AksComputeSecrets */
export declare interface AksComputeSecretsProperties {
    /** Content of kubeconfig file that can be used to connect to the Kubernetes cluster. */
    userKubeConfig?: string;
    /** Content of kubeconfig file that can be used to connect to the Kubernetes cluster. */
    adminKubeConfig?: string;
    /** Image registry pull secret. */
    imagePullSecretName?: string;
}

/** Advance configuration for AKS networking */
export declare interface AksNetworkingConfiguration {
    /** Virtual network subnet resource ID the compute nodes belong to */
    subnetId?: string;
    /** A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges. */
    serviceCidr?: string;
    /** An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr. */
    dnsServiceIP?: string;
    /** A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range. */
    dockerBridgeCidr?: string;
}

/** AKS properties */
export declare interface AKSProperties {
    /** Cluster full qualified domain name */
    clusterFqdn?: string;
    /**
     * System services
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemServices?: SystemService[];
    /** Number of agents */
    agentCount?: number;
    /** Agent virtual machine size */
    agentVmSize?: string;
    /** Intended usage of the cluster */
    clusterPurpose?: ClusterPurpose;
    /** SSL configuration */
    sslConfiguration?: SslConfiguration;
    /** AKS networking configuration for vnet */
    aksNetworkingConfiguration?: AksNetworkingConfiguration;
    /** Load Balancer Type */
    loadBalancerType?: LoadBalancerType;
    /** Load Balancer Subnet */
    loadBalancerSubnet?: string;
}

/**
 * Defines values for AllocationState. \
 * {@link KnownAllocationState} can be used interchangeably with AllocationState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Steady** \
 * **Resizing**
 */
export declare type AllocationState = string;

/** Properties(top level) of AmlCompute */
export declare type AmlCompute = Compute & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    computeType: "AmlCompute";
    /** Properties of AmlCompute */
    properties?: AmlComputeProperties;
};

/** Compute node information related to a AmlCompute. */
export declare interface AmlComputeNodeInformation {
    /**
     * ID of the compute node.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nodeId?: string;
    /**
     * Private IP address of the compute node.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly privateIpAddress?: string;
    /**
     * Public IP address of the compute node.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly publicIpAddress?: string;
    /**
     * SSH port number of the node.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly port?: number;
    /**
     * State of the compute node. Values are idle, running, preparing, unusable, leaving and preempted.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nodeState?: NodeState;
    /**
     * ID of the Experiment running on the node, if any else null.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly runId?: string;
}

/** Result of AmlCompute Nodes */
export declare interface AmlComputeNodesInformation {
    /**
     * The collection of returned AmlCompute nodes details.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nodes?: AmlComputeNodeInformation[];
    /**
     * The continuation token.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** AML Compute properties */
export declare interface AmlComputeProperties {
    /** Compute OS Type */
    osType?: OsType;
    /** Virtual Machine Size */
    vmSize?: string;
    /** Virtual Machine priority */
    vmPriority?: VmPriority;
    /** Virtual Machine image for AML Compute - windows only */
    virtualMachineImage?: VirtualMachineImage;
    /** Network is isolated or not */
    isolatedNetwork?: boolean;
    /** Scale settings for AML Compute */
    scaleSettings?: ScaleSettings;
    /** Credentials for an administrator user account that will be created on each compute node. */
    userAccountCredentials?: UserAccountCredentials;
    /** Virtual network subnet resource ID the compute nodes belong to. */
    subnet?: ResourceId;
    /** State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on all nodes of the cluster. Enabled - Indicates that the public ssh port is open on all nodes of the cluster. NotSpecified - Indicates that the public ssh port is closed on all nodes of the cluster if VNet is defined, else is open all public nodes. It can be default only during cluster creation time, after creation it will be either enabled or disabled. */
    remoteLoginPortPublicAccess?: RemoteLoginPortPublicAccess;
    /**
     * Allocation state of the compute. Possible values are: steady - Indicates that the compute is not resizing. There are no changes to the number of compute nodes in the compute in progress. A compute enters this state when it is created and when no operations are being performed on the compute to change the number of compute nodes. resizing - Indicates that the compute is resizing; that is, compute nodes are being added to or removed from the compute.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly allocationState?: AllocationState;
    /**
     * The time at which the compute entered its current allocation state.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly allocationStateTransitionTime?: Date;
    /**
     * Collection of errors encountered by various compute nodes during node setup.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly errors?: ErrorResponse[];
    /**
     * The number of compute nodes currently assigned to the compute.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly currentNodeCount?: number;
    /**
     * The target number of compute nodes for the compute. If the allocationState is resizing, this property denotes the target node count for the ongoing resize operation. If the allocationState is steady, this property denotes the target node count for the previous resize operation.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly targetNodeCount?: number;
    /**
     * Counts of various node states on the compute.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nodeStateCounts?: NodeStateCounts;
    /** Enable or disable node public IP address provisioning. Possible values are: Possible values are: true - Indicates that the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will have a private endpoint and no public IPs. */
    enableNodePublicIp?: boolean;
}

/** Features enabled for a workspace */
export declare interface AmlUserFeature {
    /** Specifies the feature ID */
    id?: string;
    /** Specifies the feature name */
    displayName?: string;
    /** Describes the feature for user experience */
    description?: string;
}

/**
 * Defines values for ApplicationSharingPolicy. \
 * {@link KnownApplicationSharingPolicy} can be used interchangeably with ApplicationSharingPolicy,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Personal** \
 * **Shared**
 */
export declare type ApplicationSharingPolicy = string;

/** A user that can be assigned to a compute instance. */
export declare interface AssignedUser {
    /** User’s AAD Object Id. */
    objectId: string;
    /** User’s AAD Tenant Id. */
    tenantId: string;
}

/** Auto pause properties */
export declare interface AutoPauseProperties {
    delayInMinutes?: number;
    enabled?: boolean;
}

/** Auto scale properties */
export declare interface AutoScaleProperties {
    minNodeCount?: number;
    enabled?: boolean;
    maxNodeCount?: number;
}

export declare class AzureMachineLearningWorkspaces extends coreClient.ServiceClient {
    $host: string;
    apiVersion: string;
    subscriptionId: string;
    /**
     * Initializes a new instance of the AzureMachineLearningWorkspaces class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId The ID of the target subscription.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: AzureMachineLearningWorkspacesOptionalParams);
    operations: Operations;
    workspaces: Workspaces;
    usages: Usages;
    virtualMachineSizes: VirtualMachineSizes;
    quotas: Quotas;
    computeOperations: ComputeOperations;
    privateEndpointConnections: PrivateEndpointConnections;
    privateLinkResources: PrivateLinkResources;
    workspaceConnections: WorkspaceConnections;
    workspaceFeatures: WorkspaceFeatures;
    workspaceSkus: WorkspaceSkus;
}

/** Optional parameters. */
export declare interface AzureMachineLearningWorkspacesOptionalParams extends coreClient.ServiceClientOptions {
    /** server parameter */
    $host?: string;
    /** Api Version */
    apiVersion?: string;
    /** Overrides client endpoint. */
    endpoint?: string;
}

/**
 * Defines values for BillingCurrency. \
 * {@link KnownBillingCurrency} can be used interchangeably with BillingCurrency,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **USD**
 */
export declare type BillingCurrency = string;

/**
 * Defines values for ClusterPurpose. \
 * {@link KnownClusterPurpose} can be used interchangeably with ClusterPurpose,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **FastProd** \
 * **DenseProd** \
 * **DevTest**
 */
export declare type ClusterPurpose = string;

/** AmlCompute update parameters. */
export declare interface ClusterUpdateParameters {
    /** Properties of ClusterUpdate */
    properties?: ScaleSettingsInformation;
}

export declare interface Components1D3SwueSchemasComputeresourceAllof1 {
    /** Compute properties */
    properties?: ComputeUnion;
}

/** Machine Learning compute object. */
export declare interface Compute {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    computeType: "AKS" | "Kubernetes" | "AmlCompute" | "ComputeInstance" | "VirtualMachine" | "HDInsight" | "DataFactory" | "Databricks" | "DataLakeAnalytics" | "SynapseSpark";
    /** Location for the underlying compute */
    computeLocation?: string;
    /**
     * The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: ProvisioningState;
    /** The description of the Machine Learning compute. */
    description?: string;
    /**
     * The time at which the compute was created.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly createdOn?: Date;
    /**
     * The time at which the compute was last modified.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly modifiedOn?: Date;
    /** ARM resource id of the underlying compute */
    resourceId?: string;
    /**
     * Errors during provisioning
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningErrors?: ErrorResponse[];
    /**
     * Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly isAttachedCompute?: boolean;
    /** Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication. */
    disableLocalAuth?: boolean;
}

/** Defines headers for Compute_createOrUpdate operation. */
export declare interface ComputeCreateOrUpdateHeaders {
    /** URI to poll for asynchronous operation status. */
    azureAsyncOperation?: string;
}

/** Optional parameters. */
export declare interface ComputeCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export declare type ComputeCreateOrUpdateResponse = ComputeResource;

/** Defines headers for Compute_delete operation. */
export declare interface ComputeDeleteHeaders {
    /** URI to poll for asynchronous operation status. */
    azureAsyncOperation?: string;
    /** URI to poll for asynchronous operation result. */
    location?: string;
}

/** Optional parameters. */
export declare interface ComputeDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface ComputeGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type ComputeGetResponse = ComputeResource;

/** Properties(top level) of ComputeInstance */
export declare type ComputeInstance = Compute & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    computeType: "ComputeInstance";
    /** Properties of ComputeInstance */
    properties?: ComputeInstanceProperties;
};

/** Defines an Aml Instance application and its connectivity endpoint URI. */
export declare interface ComputeInstanceApplication {
    /** Name of the ComputeInstance application. */
    displayName?: string;
    /** Application' endpoint URI. */
    endpointUri?: string;
}

/**
 * Defines values for ComputeInstanceAuthorizationType. \
 * {@link KnownComputeInstanceAuthorizationType} can be used interchangeably with ComputeInstanceAuthorizationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **personal**
 */
export declare type ComputeInstanceAuthorizationType = string;

/** Defines all connectivity endpoints and properties for an ComputeInstance. */
export declare interface ComputeInstanceConnectivityEndpoints {
    /**
     * Public IP Address of this ComputeInstance.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly publicIpAddress?: string;
    /**
     * Private IP Address of this ComputeInstance (local to the VNET in which the compute instance is deployed).
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly privateIpAddress?: string;
}

/** Describes information on user who created this ComputeInstance. */
export declare interface ComputeInstanceCreatedBy {
    /**
     * Name of the user.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly userName?: string;
    /**
     * Uniquely identifies user' Azure Active Directory organization.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly userOrgId?: string;
    /**
     * Uniquely identifies the user within his/her organization.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly userId?: string;
}

/** The last operation on ComputeInstance. */
export declare interface ComputeInstanceLastOperation {
    /** Name of the last operation. */
    operationName?: OperationName;
    /** Time of the last operation. */
    operationTime?: Date;
    /** Operation status. */
    operationStatus?: OperationStatus;
}

/** Compute Instance properties */
export declare interface ComputeInstanceProperties {
    /** Virtual Machine Size */
    vmSize?: string;
    /** Virtual network subnet resource ID the compute nodes belong to. */
    subnet?: ResourceId;
    /** Policy for sharing applications on this compute instance among users of parent workspace. If Personal, only the creator can access applications on this compute instance. When Shared, any workspace user can access applications on this instance depending on his/her assigned role. */
    applicationSharingPolicy?: ApplicationSharingPolicy;
    /** Specifies policy and settings for SSH access. */
    sshSettings?: ComputeInstanceSshSettings;
    /**
     * Describes all connectivity endpoints available for this ComputeInstance.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly connectivityEndpoints?: ComputeInstanceConnectivityEndpoints;
    /**
     * Describes available applications and their endpoints on this ComputeInstance.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly applications?: ComputeInstanceApplication[];
    /**
     * Describes information on user who created this ComputeInstance.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly createdBy?: ComputeInstanceCreatedBy;
    /**
     * Collection of errors encountered on this ComputeInstance.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly errors?: ErrorResponse[];
    /**
     * The current state of this ComputeInstance.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly state?: ComputeInstanceState;
    /** The Compute Instance Authorization type. Available values are personal (default). */
    computeInstanceAuthorizationType?: ComputeInstanceAuthorizationType;
    /** Settings for a personal compute instance. */
    personalComputeInstanceSettings?: PersonalComputeInstanceSettings;
    /** Details of customized scripts to execute for setting up the cluster. */
    setupScripts?: SetupScripts;
    /**
     * The last operation on ComputeInstance.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly lastOperation?: ComputeInstanceLastOperation;
}

/** Specifies policy and settings for SSH access. */
export declare interface ComputeInstanceSshSettings {
    /** State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on this instance. Enabled - Indicates that the public ssh port is open and accessible according to the VNet/subnet policy if applicable. */
    sshPublicAccess?: SshPublicAccess;
    /**
     * Describes the admin user name.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly adminUserName?: string;
    /**
     * Describes the port for connecting through SSH.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly sshPort?: number;
    /** Specifies the SSH rsa public key file as a string. Use "ssh-keygen -t rsa -b 2048" to generate your SSH key pairs. */
    adminPublicKey?: string;
}

/**
 * Defines values for ComputeInstanceState. \
 * {@link KnownComputeInstanceState} can be used interchangeably with ComputeInstanceState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Creating** \
 * **CreateFailed** \
 * **Deleting** \
 * **Running** \
 * **Restarting** \
 * **JobRunning** \
 * **SettingUp** \
 * **SetupFailed** \
 * **Starting** \
 * **Stopped** \
 * **Stopping** \
 * **UserSettingUp** \
 * **UserSetupFailed** \
 * **Unknown** \
 * **Unusable**
 */
export declare type ComputeInstanceState = string;

/** Optional parameters. */
export declare interface ComputeListKeysOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listKeys operation. */
export declare type ComputeListKeysResponse = ComputeSecretsUnion;

/** Optional parameters. */
export declare interface ComputeListNextOptionalParams extends coreClient.OperationOptions {
    /** Continuation token for pagination. */
    skip?: string;
}

/** Contains response data for the listNext operation. */
export declare type ComputeListNextResponse = PaginatedComputeResourcesList;

/** Optional parameters. */
export declare interface ComputeListNodesNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNodesNext operation. */
export declare type ComputeListNodesNextResponse = AmlComputeNodesInformation;

/** Optional parameters. */
export declare interface ComputeListNodesOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNodes operation. */
export declare type ComputeListNodesResponse = AmlComputeNodesInformation;

/** Optional parameters. */
export declare interface ComputeListOptionalParams extends coreClient.OperationOptions {
    /** Continuation token for pagination. */
    skip?: string;
}

/** Contains response data for the list operation. */
export declare type ComputeListResponse = PaginatedComputeResourcesList;

/** Interface representing a ComputeOperations. */
export declare interface ComputeOperations {
    /**
     * Gets computes in specified workspace.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, workspaceName: string, options?: ComputeListOptionalParams): PagedAsyncIterableIterator<ComputeResource>;
    /**
     * Get the details (e.g IP address, port etc) of all the compute nodes in the compute.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param computeName Name of the Azure Machine Learning compute.
     * @param options The options parameters.
     */
    listNodes(resourceGroupName: string, workspaceName: string, computeName: string, options?: ComputeListNodesOptionalParams): PagedAsyncIterableIterator<AmlComputeNodeInformation>;
    /**
     * Gets compute definition by its name. Any secrets (storage keys, service credentials, etc) are not
     * returned - use 'keys' nested resource to get them.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param computeName Name of the Azure Machine Learning compute.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, workspaceName: string, computeName: string, options?: ComputeGetOptionalParams): Promise<ComputeGetResponse>;
    /**
     * Creates or updates compute. This call will overwrite a compute if it exists. This is a
     * nonrecoverable operation. If your intent is to create a new compute, do a GET first to verify that
     * it does not exist yet.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param computeName Name of the Azure Machine Learning compute.
     * @param parameters Payload with Machine Learning compute definition.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, workspaceName: string, computeName: string, parameters: ComputeResource, options?: ComputeCreateOrUpdateOptionalParams): Promise<PollerLike<PollOperationState<ComputeCreateOrUpdateResponse>, ComputeCreateOrUpdateResponse>>;
    /**
     * Creates or updates compute. This call will overwrite a compute if it exists. This is a
     * nonrecoverable operation. If your intent is to create a new compute, do a GET first to verify that
     * it does not exist yet.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param computeName Name of the Azure Machine Learning compute.
     * @param parameters Payload with Machine Learning compute definition.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, workspaceName: string, computeName: string, parameters: ComputeResource, options?: ComputeCreateOrUpdateOptionalParams): Promise<ComputeCreateOrUpdateResponse>;
    /**
     * Updates properties of a compute. This call will overwrite a compute if it exists. This is a
     * nonrecoverable operation.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param computeName Name of the Azure Machine Learning compute.
     * @param parameters Additional parameters for cluster update.
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, workspaceName: string, computeName: string, parameters: ClusterUpdateParameters, options?: ComputeUpdateOptionalParams): Promise<PollerLike<PollOperationState<ComputeUpdateResponse>, ComputeUpdateResponse>>;
    /**
     * Updates properties of a compute. This call will overwrite a compute if it exists. This is a
     * nonrecoverable operation.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param computeName Name of the Azure Machine Learning compute.
     * @param parameters Additional parameters for cluster update.
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, workspaceName: string, computeName: string, parameters: ClusterUpdateParameters, options?: ComputeUpdateOptionalParams): Promise<ComputeUpdateResponse>;
    /**
     * Deletes specified Machine Learning compute.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param computeName Name of the Azure Machine Learning compute.
     * @param underlyingResourceAction Delete the underlying compute if 'Delete', or detach the underlying
     *                                 compute from workspace if 'Detach'.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, workspaceName: string, computeName: string, underlyingResourceAction: UnderlyingResourceAction, options?: ComputeDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Deletes specified Machine Learning compute.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param computeName Name of the Azure Machine Learning compute.
     * @param underlyingResourceAction Delete the underlying compute if 'Delete', or detach the underlying
     *                                 compute from workspace if 'Detach'.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, workspaceName: string, computeName: string, underlyingResourceAction: UnderlyingResourceAction, options?: ComputeDeleteOptionalParams): Promise<void>;
    /**
     * Gets secrets related to Machine Learning compute (storage keys, service credentials, etc).
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param computeName Name of the Azure Machine Learning compute.
     * @param options The options parameters.
     */
    listKeys(resourceGroupName: string, workspaceName: string, computeName: string, options?: ComputeListKeysOptionalParams): Promise<ComputeListKeysResponse>;
    /**
     * Posts a start action to a compute instance
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param computeName Name of the Azure Machine Learning compute.
     * @param options The options parameters.
     */
    beginStart(resourceGroupName: string, workspaceName: string, computeName: string, options?: ComputeStartOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Posts a start action to a compute instance
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param computeName Name of the Azure Machine Learning compute.
     * @param options The options parameters.
     */
    beginStartAndWait(resourceGroupName: string, workspaceName: string, computeName: string, options?: ComputeStartOptionalParams): Promise<void>;
    /**
     * Posts a stop action to a compute instance
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param computeName Name of the Azure Machine Learning compute.
     * @param options The options parameters.
     */
    beginStop(resourceGroupName: string, workspaceName: string, computeName: string, options?: ComputeStopOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Posts a stop action to a compute instance
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param computeName Name of the Azure Machine Learning compute.
     * @param options The options parameters.
     */
    beginStopAndWait(resourceGroupName: string, workspaceName: string, computeName: string, options?: ComputeStopOptionalParams): Promise<void>;
    /**
     * Posts a restart action to a compute instance
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param computeName Name of the Azure Machine Learning compute.
     * @param options The options parameters.
     */
    beginRestart(resourceGroupName: string, workspaceName: string, computeName: string, options?: ComputeRestartOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Posts a restart action to a compute instance
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param computeName Name of the Azure Machine Learning compute.
     * @param options The options parameters.
     */
    beginRestartAndWait(resourceGroupName: string, workspaceName: string, computeName: string, options?: ComputeRestartOptionalParams): Promise<void>;
}

/** Machine Learning compute object wrapped into ARM resource envelope. */
export declare type ComputeResource = Resource & Components1D3SwueSchemasComputeresourceAllof1 & {
    /** The identity of the resource. */
    identity?: Identity;
    /** Specifies the location of the resource. */
    location?: string;
    /** Contains resource tags defined as key/value pairs. */
    tags?: {
        [propertyName: string]: string;
    };
    /** The sku of the workspace. */
    sku?: Sku;
    /**
     * System data
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
};

/** Optional parameters. */
export declare interface ComputeRestartOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Secrets related to a Machine Learning compute. Might differ for every type of compute. */
export declare interface ComputeSecrets {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    computeType: "AKS" | "VirtualMachine" | "Databricks";
}

export declare type ComputeSecretsUnion = ComputeSecrets | AksComputeSecrets | VirtualMachineSecrets | DatabricksComputeSecrets;

/** Optional parameters. */
export declare interface ComputeStartOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface ComputeStopOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/**
 * Defines values for ComputeType. \
 * {@link KnownComputeType} can be used interchangeably with ComputeType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **AKS** \
 * **Kubernetes** \
 * **AmlCompute** \
 * **ComputeInstance** \
 * **DataFactory** \
 * **VirtualMachine** \
 * **HDInsight** \
 * **Databricks** \
 * **DataLakeAnalytics** \
 * **SynapseSpark**
 */
export declare type ComputeType = string;

export declare type ComputeUnion = Compute | Aks | Kubernetes | AmlCompute | ComputeInstance | VirtualMachine | HDInsight | DataFactory | Databricks | DataLakeAnalytics | SynapseSpark;

/** Optional parameters. */
export declare interface ComputeUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the update operation. */
export declare type ComputeUpdateResponse = ComputeResource;

/** The resource requirements for the container (cpu and memory). */
export declare interface ContainerResourceRequirements {
    /**
     * The minimum amount of CPU cores to be used by the container. More info:
     * https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
     */
    cpu?: number;
    /**
     * The maximum amount of CPU cores allowed to be used by the container. More info:
     * https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
     */
    cpuLimit?: number;
    /**
     * The minimum amount of memory (in GB) to be used by the container. More info:
     * https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
     */
    memoryInGB?: number;
    /**
     * The maximum amount of memory (in GB) allowed to be used by the container. More info:
     * https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
     */
    memoryInGBLimit?: number;
    /** The number of GPU cores in the container. */
    gpu?: number;
    /** The number of FPGA PCIE devices exposed to the container. Must be multiple of 2. */
    fpga?: number;
}

export declare interface CosmosDbSettings {
    /** The throughput of the collections in cosmosdb database */
    collectionsThroughput?: number;
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export declare type CreatedByType = string;

/** A DataFactory compute. */
export declare type Databricks = Compute & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    computeType: "Databricks";
    /** Properties of Databricks */
    properties?: DatabricksProperties;
};

/** Secrets related to a Machine Learning compute based on Databricks. */
export declare type DatabricksComputeSecrets = ComputeSecrets & DatabricksComputeSecretsProperties & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    computeType: "Databricks";
};

/** Properties of Databricks Compute Secrets */
export declare interface DatabricksComputeSecretsProperties {
    /** access token for databricks account. */
    databricksAccessToken?: string;
}

/** Properties of Databricks */
export declare interface DatabricksProperties {
    /** Databricks access token */
    databricksAccessToken?: string;
    /** Workspace Url */
    workspaceUrl?: string;
}

/** A DataFactory compute. */
export declare type DataFactory = Compute & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    computeType: "DataFactory";
};

/** A DataLakeAnalytics compute. */
export declare type DataLakeAnalytics = Compute & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    computeType: "DataLakeAnalytics";
    properties?: DataLakeAnalyticsProperties;
};

export declare interface DataLakeAnalyticsProperties {
    /** DataLake Store Account Name */
    dataLakeStoreAccountName?: string;
}

export declare interface DiagnoseRequestProperties {
    /** Setting for diagnosing user defined routing */
    udr?: {
        [propertyName: string]: Record<string, unknown>;
    };
    /** Setting for diagnosing network security group */
    nsg?: {
        [propertyName: string]: Record<string, unknown>;
    };
    /** Setting for diagnosing resource lock */
    resourceLock?: {
        [propertyName: string]: Record<string, unknown>;
    };
    /** Setting for diagnosing dns resolution */
    dnsResolution?: {
        [propertyName: string]: Record<string, unknown>;
    };
    /** Setting for diagnosing dependent storage account */
    storageAccount?: {
        [propertyName: string]: Record<string, unknown>;
    };
    /** Setting for diagnosing dependent key vault */
    keyVault?: {
        [propertyName: string]: Record<string, unknown>;
    };
    /** Setting for diagnosing dependent container registry */
    containerRegistry?: {
        [propertyName: string]: Record<string, unknown>;
    };
    /** Setting for diagnosing dependent application insights */
    applicationInsights?: {
        [propertyName: string]: Record<string, unknown>;
    };
    /** Setting for diagnosing unclassified category of problems */
    others?: {
        [propertyName: string]: Record<string, unknown>;
    };
}

export declare interface DiagnoseResponseResult {
    value?: DiagnoseResponseResultValue;
}

export declare interface DiagnoseResponseResultValue {
    userDefinedRouteResults?: DiagnoseResult[];
    networkSecurityRuleResults?: DiagnoseResult[];
    resourceLockResults?: DiagnoseResult[];
    dnsResolutionResults?: DiagnoseResult[];
    storageAccountResults?: DiagnoseResult[];
    keyVaultResults?: DiagnoseResult[];
    containerRegistryResults?: DiagnoseResult[];
    applicationInsightsResults?: DiagnoseResult[];
    otherResults?: DiagnoseResult[];
}

/** Result of Diagnose */
export declare interface DiagnoseResult {
    /**
     * Code for workspace setup error
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly code?: string;
    /**
     * Level of workspace setup error
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly level?: DiagnoseResultLevel;
    /**
     * Message of workspace setup error
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly message?: string;
}

/**
 * Defines values for DiagnoseResultLevel. \
 * {@link KnownDiagnoseResultLevel} can be used interchangeably with DiagnoseResultLevel,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Warning** \
 * **Error** \
 * **Information**
 */
export declare type DiagnoseResultLevel = string;

/** Parameters to diagnose a workspace */
export declare interface DiagnoseWorkspaceParameters {
    /** Value of Parameters */
    value?: DiagnoseRequestProperties;
}

export declare interface EncryptionProperty {
    /** Indicates whether or not the encryption is enabled for the workspace. */
    status: EncryptionStatus;
    /** The identity that will be used to access the key vault for encryption at rest. */
    identity?: IdentityForCmk;
    /** Customer Key vault properties. */
    keyVaultProperties: KeyVaultProperties;
}

/**
 * Defines values for EncryptionStatus. \
 * {@link KnownEncryptionStatus} can be used interchangeably with EncryptionStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled** \
 * **Disabled**
 */
export declare type EncryptionStatus = string;

/** The resource management error additional info. */
export declare interface ErrorAdditionalInfo {
    /**
     * The additional info type.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /**
     * The additional info.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly info?: Record<string, unknown>;
}

/** The error detail. */
export declare interface ErrorDetail {
    /**
     * The error code.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly code?: string;
    /**
     * The error message.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly message?: string;
    /**
     * The error target.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly target?: string;
    /**
     * The error details.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly details?: ErrorDetail[];
    /**
     * The error additional info.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export declare interface ErrorResponse {
    /** The error object. */
    error?: ErrorDetail;
}

/** The estimated price info for using a VM of a particular OS type, tier, etc. */
export declare interface EstimatedVMPrice {
    /** The price charged for using the VM. */
    retailPrice: number;
    /** Operating system type used by the VM. */
    osType: VMPriceOSType;
    /** The type of the VM. */
    vmTier: VMTier;
}

/** The estimated price info for using a VM. */
export declare interface EstimatedVMPrices {
    /** Three lettered code specifying the currency of the VM price. Example: USD */
    billingCurrency: BillingCurrency;
    /** The unit of time measurement for the specified VM price. Example: OneHour */
    unitOfMeasure: UnitOfMeasure;
    /** The list of estimated prices for using a VM of a particular OS type, tier, etc. */
    values: EstimatedVMPrice[];
}

export declare interface ExternalFqdnResponse {
    value?: FqdnEndpoints[];
}

export declare interface FqdnEndpoint {
    domainName?: string;
    endpointDetails?: FqdnEndpointDetail[];
}

export declare interface FqdnEndpointDetail {
    port?: number;
}

export declare interface FqdnEndpoints {
    properties?: FqdnEndpointsProperties;
}

export declare interface FqdnEndpointsProperties {
    category?: string;
    endpoints?: FqdnEndpoint[];
}

/** A HDInsight compute. */
export declare type HDInsight = Compute & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    computeType: "HDInsight";
    /** HDInsight compute properties */
    properties?: HDInsightProperties;
};

/** HDInsight compute properties */
export declare interface HDInsightProperties {
    /** Port open for ssh connections on the master node of the cluster. */
    sshPort?: number;
    /** Public IP address of the master node of the cluster. */
    address?: string;
    /** Admin credentials for master node of the cluster */
    administratorAccount?: VirtualMachineSshCredentials;
}

/** Identity for the resource. */
export declare interface Identity {
    /**
     * The principal ID of resource identity.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly principalId?: string;
    /**
     * The tenant ID of resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly tenantId?: string;
    /** The identity type. */
    type?: ResourceIdentityType;
    /** The user assigned identities associated with the resource. */
    userAssignedIdentities?: {
        [propertyName: string]: UserAssignedIdentity;
    };
}

/** Identity that will be used to access key vault for encryption at rest */
export declare interface IdentityForCmk {
    /** The ArmId of the user assigned identity that will be used to access the customer managed key vault */
    userAssignedIdentity?: string;
}

/** Instance type schema. */
export declare interface InstanceTypeSchema {
    /** Node Selector */
    nodeSelector?: {
        [propertyName: string]: string;
    };
    /** Resource requests/limits for this instance type */
    resources?: InstanceTypeSchemaResources;
}

/** Resource requests/limits for this instance type */
export declare interface InstanceTypeSchemaResources {
    /** Resource requests for this instance type */
    requests?: {
        [propertyName: string]: string;
    };
    /** Resource limits for this instance type */
    limits?: {
        [propertyName: string]: string;
    };
}

export declare interface KeyVaultProperties {
    /** The ArmId of the keyVault where the customer owned encryption key is present. */
    keyVaultArmId: string;
    /** Key vault uri to access the encryption key. */
    keyIdentifier: string;
    /** For future use - The client id of the identity which will be used to access key vault. */
    identityClientId?: string;
}

/** Known values of {@link AllocationState} that the service accepts. */
export declare enum KnownAllocationState {
    Steady = "Steady",
    Resizing = "Resizing"
}

/** Known values of {@link ApplicationSharingPolicy} that the service accepts. */
export declare enum KnownApplicationSharingPolicy {
    Personal = "Personal",
    Shared = "Shared"
}

/** Known values of {@link BillingCurrency} that the service accepts. */
export declare enum KnownBillingCurrency {
    USD = "USD"
}

/** Known values of {@link ClusterPurpose} that the service accepts. */
export declare enum KnownClusterPurpose {
    FastProd = "FastProd",
    DenseProd = "DenseProd",
    DevTest = "DevTest"
}

/** Known values of {@link ComputeInstanceAuthorizationType} that the service accepts. */
export declare enum KnownComputeInstanceAuthorizationType {
    Personal = "personal"
}

/** Known values of {@link ComputeInstanceState} that the service accepts. */
export declare enum KnownComputeInstanceState {
    Creating = "Creating",
    CreateFailed = "CreateFailed",
    Deleting = "Deleting",
    Running = "Running",
    Restarting = "Restarting",
    JobRunning = "JobRunning",
    SettingUp = "SettingUp",
    SetupFailed = "SetupFailed",
    Starting = "Starting",
    Stopped = "Stopped",
    Stopping = "Stopping",
    UserSettingUp = "UserSettingUp",
    UserSetupFailed = "UserSetupFailed",
    Unknown = "Unknown",
    Unusable = "Unusable"
}

/** Known values of {@link ComputeType} that the service accepts. */
export declare enum KnownComputeType {
    AKS = "AKS",
    Kubernetes = "Kubernetes",
    AmlCompute = "AmlCompute",
    ComputeInstance = "ComputeInstance",
    DataFactory = "DataFactory",
    VirtualMachine = "VirtualMachine",
    HDInsight = "HDInsight",
    Databricks = "Databricks",
    DataLakeAnalytics = "DataLakeAnalytics",
    SynapseSpark = "SynapseSpark"
}

/** Known values of {@link CreatedByType} that the service accepts. */
export declare enum KnownCreatedByType {
    User = "User",
    Application = "Application",
    ManagedIdentity = "ManagedIdentity",
    Key = "Key"
}

/** Known values of {@link DiagnoseResultLevel} that the service accepts. */
export declare enum KnownDiagnoseResultLevel {
    Warning = "Warning",
    Error = "Error",
    Information = "Information"
}

/** Known values of {@link EncryptionStatus} that the service accepts. */
export declare enum KnownEncryptionStatus {
    Enabled = "Enabled",
    Disabled = "Disabled"
}

/** Known values of {@link LoadBalancerType} that the service accepts. */
export declare enum KnownLoadBalancerType {
    PublicIp = "PublicIp",
    InternalLoadBalancer = "InternalLoadBalancer"
}

/** Known values of {@link NodeState} that the service accepts. */
export declare enum KnownNodeState {
    Idle = "idle",
    Running = "running",
    Preparing = "preparing",
    Unusable = "unusable",
    Leaving = "leaving",
    Preempted = "preempted"
}

/** Known values of {@link OperationName} that the service accepts. */
export declare enum KnownOperationName {
    Create = "Create",
    Start = "Start",
    Stop = "Stop",
    Restart = "Restart",
    Reimage = "Reimage",
    Delete = "Delete"
}

/** Known values of {@link OperationStatus} that the service accepts. */
export declare enum KnownOperationStatus {
    InProgress = "InProgress",
    Succeeded = "Succeeded",
    CreateFailed = "CreateFailed",
    StartFailed = "StartFailed",
    StopFailed = "StopFailed",
    RestartFailed = "RestartFailed",
    ReimageFailed = "ReimageFailed",
    DeleteFailed = "DeleteFailed"
}

/** Known values of {@link OsType} that the service accepts. */
export declare enum KnownOsType {
    Linux = "Linux",
    Windows = "Windows"
}

/** Known values of {@link PrivateEndpointConnectionProvisioningState} that the service accepts. */
export declare enum KnownPrivateEndpointConnectionProvisioningState {
    Succeeded = "Succeeded",
    Creating = "Creating",
    Deleting = "Deleting",
    Failed = "Failed"
}

/** Known values of {@link PrivateEndpointServiceConnectionStatus} that the service accepts. */
export declare enum KnownPrivateEndpointServiceConnectionStatus {
    Pending = "Pending",
    Approved = "Approved",
    Rejected = "Rejected",
    Disconnected = "Disconnected",
    Timeout = "Timeout"
}

/** Known values of {@link ProvisioningState} that the service accepts. */
export declare enum KnownProvisioningState {
    Unknown = "Unknown",
    Updating = "Updating",
    Creating = "Creating",
    Deleting = "Deleting",
    Succeeded = "Succeeded",
    Failed = "Failed",
    Canceled = "Canceled"
}

/** Known values of {@link PublicNetworkAccess} that the service accepts. */
export declare enum KnownPublicNetworkAccess {
    Enabled = "Enabled",
    Disabled = "Disabled"
}

/** Known values of {@link QuotaUnit} that the service accepts. */
export declare enum KnownQuotaUnit {
    Count = "Count"
}

/** Known values of {@link ReasonCode} that the service accepts. */
export declare enum KnownReasonCode {
    NotSpecified = "NotSpecified",
    NotAvailableForRegion = "NotAvailableForRegion",
    NotAvailableForSubscription = "NotAvailableForSubscription"
}

/** Known values of {@link RemoteLoginPortPublicAccess} that the service accepts. */
export declare enum KnownRemoteLoginPortPublicAccess {
    Enabled = "Enabled",
    Disabled = "Disabled",
    NotSpecified = "NotSpecified"
}

/** Known values of {@link SshPublicAccess} that the service accepts. */
export declare enum KnownSshPublicAccess {
    Enabled = "Enabled",
    Disabled = "Disabled"
}

/** Known values of {@link SslConfigurationStatus} that the service accepts. */
export declare enum KnownSslConfigurationStatus {
    Disabled = "Disabled",
    Enabled = "Enabled",
    Auto = "Auto"
}

/** Known values of {@link Status} that the service accepts. */
export declare enum KnownStatus {
    Undefined = "Undefined",
    Success = "Success",
    Failure = "Failure",
    InvalidQuotaBelowClusterMinimum = "InvalidQuotaBelowClusterMinimum",
    InvalidQuotaExceedsSubscriptionLimit = "InvalidQuotaExceedsSubscriptionLimit",
    InvalidVMFamilyName = "InvalidVMFamilyName",
    OperationNotSupportedForSku = "OperationNotSupportedForSku",
    OperationNotEnabledForRegion = "OperationNotEnabledForRegion"
}

/** Known values of {@link UnderlyingResourceAction} that the service accepts. */
export declare enum KnownUnderlyingResourceAction {
    Delete = "Delete",
    Detach = "Detach"
}

/** Known values of {@link UnitOfMeasure} that the service accepts. */
export declare enum KnownUnitOfMeasure {
    OneHour = "OneHour"
}

/** Known values of {@link UsageUnit} that the service accepts. */
export declare enum KnownUsageUnit {
    Count = "Count"
}

/** Known values of {@link ValueFormat} that the service accepts. */
export declare enum KnownValueFormat {
    Json = "JSON"
}

/** Known values of {@link VMPriceOSType} that the service accepts. */
export declare enum KnownVMPriceOSType {
    Linux = "Linux",
    Windows = "Windows"
}

/** Known values of {@link VmPriority} that the service accepts. */
export declare enum KnownVmPriority {
    Dedicated = "Dedicated",
    LowPriority = "LowPriority"
}

/** Known values of {@link VMTier} that the service accepts. */
export declare enum KnownVMTier {
    Standard = "Standard",
    LowPriority = "LowPriority",
    Spot = "Spot"
}

/** A Machine Learning compute based on Kubernetes Compute. */
export declare type Kubernetes = Compute & KubernetesSchema & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    computeType: "Kubernetes";
};

/** Kubernetes properties */
export declare interface KubernetesProperties {
    /** Relay connection string. */
    relayConnectionString?: string;
    /** ServiceBus connection string. */
    serviceBusConnectionString?: string;
    /** Extension principal-id. */
    extensionPrincipalId?: string;
    /** Extension instance release train. */
    extensionInstanceReleaseTrain?: string;
    /** VC name. */
    vcName?: string;
    /** Compute namespace */
    namespace?: string;
    /** Default instance type */
    defaultInstanceType?: string;
    /** Instance Type Schema */
    instanceTypes?: {
        [propertyName: string]: InstanceTypeSchema;
    };
}

/** Kubernetes Compute Schema */
export declare interface KubernetesSchema {
    /** Properties of Kubernetes */
    properties?: KubernetesProperties;
}

/** The List Aml user feature operation response. */
export declare interface ListAmlUserFeatureResult {
    /**
     * The list of AML user facing features.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: AmlUserFeature[];
    /**
     * The URI to fetch the next page of AML user features information. Call ListNext() with this to fetch the next page of AML user features information.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

export declare interface ListNotebookKeysResult {
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly primaryAccessKey?: string;
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly secondaryAccessKey?: string;
}

export declare interface ListStorageAccountKeysResult {
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly userStorageKey?: string;
}

/** The List Usages operation response. */
export declare interface ListUsagesResult {
    /**
     * The list of AML resource usages.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: Usage[];
    /**
     * The URI to fetch the next page of AML resource usage information. Call ListNext() with this to fetch the next page of AML resource usage information.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

export declare interface ListWorkspaceKeysResult {
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly userStorageKey?: string;
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly userStorageResourceId?: string;
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly appInsightsInstrumentationKey?: string;
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly containerRegistryCredentials?: RegistryListCredentialsResult;
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly notebookAccessKeys?: ListNotebookKeysResult;
}

/** The List WorkspaceQuotasByVMFamily operation response. */
export declare interface ListWorkspaceQuotas {
    /**
     * The list of Workspace Quotas by VM Family
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: ResourceQuota[];
    /**
     * The URI to fetch the next page of workspace quota information by VM Family. Call ListNext() with this to fetch the next page of Workspace Quota information.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/**
 * Defines values for LoadBalancerType. \
 * {@link KnownLoadBalancerType} can be used interchangeably with LoadBalancerType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **PublicIp** \
 * **InternalLoadBalancer**
 */
export declare type LoadBalancerType = string;

/**
 * Defines values for NodeState. \
 * {@link KnownNodeState} can be used interchangeably with NodeState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **idle** \
 * **running** \
 * **preparing** \
 * **unusable** \
 * **leaving** \
 * **preempted**
 */
export declare type NodeState = string;

/** Counts of various compute node states on the amlCompute. */
export declare interface NodeStateCounts {
    /**
     * Number of compute nodes in idle state.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly idleNodeCount?: number;
    /**
     * Number of compute nodes which are running jobs.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly runningNodeCount?: number;
    /**
     * Number of compute nodes which are being prepared.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly preparingNodeCount?: number;
    /**
     * Number of compute nodes which are in unusable state.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly unusableNodeCount?: number;
    /**
     * Number of compute nodes which are leaving the amlCompute.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly leavingNodeCount?: number;
    /**
     * Number of compute nodes which are in preempted state.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly preemptedNodeCount?: number;
}

export declare interface NotebookAccessTokenResult {
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly notebookResourceId?: string;
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly hostName?: string;
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly publicDns?: string;
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly accessToken?: string;
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly tokenType?: string;
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly expiresIn?: number;
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly refreshToken?: string;
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly scope?: string;
}

export declare interface NotebookPreparationError {
    errorMessage?: string;
    statusCode?: number;
}

export declare interface NotebookResourceInfo {
    fqdn?: string;
    /** the data plane resourceId that used to initialize notebook component */
    resourceId?: string;
    /** The error that occurs when preparing notebook. */
    notebookPreparationError?: NotebookPreparationError;
}

/** Azure Machine Learning workspace REST API operation */
export declare interface Operation {
    /** Operation name: {provider}/{resource}/{operation} */
    name?: string;
    /** Display name of operation */
    display?: OperationDisplay;
}

/** Display name of operation */
export declare interface OperationDisplay {
    /** The resource provider name: Microsoft.MachineLearningExperimentation */
    provider?: string;
    /** The resource on which the operation is performed. */
    resource?: string;
    /** The operation that users can perform. */
    operation?: string;
    /** The description for the operation. */
    description?: string;
}

/** An array of operations supported by the resource provider. */
export declare interface OperationListResult {
    /** List of AML workspace operations supported by the AML workspace resource provider. */
    value?: Operation[];
}

/**
 * Defines values for OperationName. \
 * {@link KnownOperationName} can be used interchangeably with OperationName,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Create** \
 * **Start** \
 * **Stop** \
 * **Restart** \
 * **Reimage** \
 * **Delete**
 */
export declare type OperationName = string;

/** Interface representing a Operations. */
export declare interface Operations {
    /**
     * Lists all of the available Azure Machine Learning Workspaces REST API operations.
     * @param options The options parameters.
     */
    list(options?: OperationsListOptionalParams): PagedAsyncIterableIterator<Operation>;
}

/** Optional parameters. */
export declare interface OperationsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type OperationsListResponse = OperationListResult;

/**
 * Defines values for OperationStatus. \
 * {@link KnownOperationStatus} can be used interchangeably with OperationStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **InProgress** \
 * **Succeeded** \
 * **CreateFailed** \
 * **StartFailed** \
 * **StopFailed** \
 * **RestartFailed** \
 * **ReimageFailed** \
 * **DeleteFailed**
 */
export declare type OperationStatus = string;

/**
 * Defines values for OsType. \
 * {@link KnownOsType} can be used interchangeably with OsType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Linux** \
 * **Windows**
 */
export declare type OsType = string;

/** Paginated list of Machine Learning compute objects wrapped in ARM resource envelope. */
export declare interface PaginatedComputeResourcesList {
    /** An array of Machine Learning compute objects wrapped in ARM resource envelope. */
    value?: ComputeResource[];
    /** A continuation link (absolute URI) to the next page of results in the list. */
    nextLink?: string;
}

/** Paginated list of Workspace connection objects. */
export declare interface PaginatedWorkspaceConnectionsList {
    /** An array of Workspace connection objects. */
    value?: WorkspaceConnection[];
    /** A continuation link (absolute URI) to the next page of results in the list. */
    nextLink?: string;
}

export declare interface Password {
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly name?: string;
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly value?: string;
}

/** Settings for a personal compute instance. */
export declare interface PersonalComputeInstanceSettings {
    /** A user explicitly assigned to a personal compute instance. */
    assignedUser?: AssignedUser;
}

/** The Private Endpoint resource. */
export declare interface PrivateEndpoint {
    /**
     * The ARM identifier for Private Endpoint
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /**
     * The ARM identifier for Subnet resource that private endpoint links to
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly subnetArmId?: string;
}

/** The Private Endpoint Connection resource. */
export declare type PrivateEndpointConnection = Resource & {
    /** The identity of the resource. */
    identity?: Identity;
    /** Specifies the location of the resource. */
    location?: string;
    /** Contains resource tags defined as key/value pairs. */
    tags?: {
        [propertyName: string]: string;
    };
    /** The sku of the workspace. */
    sku?: Sku;
    /**
     * System data
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
    /** The resource of private end point. */
    privateEndpoint?: PrivateEndpoint;
    /** A collection of information about the state of the connection between service consumer and provider. */
    privateLinkServiceConnectionState?: PrivateLinkServiceConnectionState;
    /**
     * The provisioning state of the private endpoint connection resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: PrivateEndpointConnectionProvisioningState;
};

/** List of private endpoint connection associated with the specified workspace */
export declare interface PrivateEndpointConnectionListResult {
    /** Array of private endpoint connections */
    value?: PrivateEndpointConnection[];
}

/**
 * Defines values for PrivateEndpointConnectionProvisioningState. \
 * {@link KnownPrivateEndpointConnectionProvisioningState} can be used interchangeably with PrivateEndpointConnectionProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded** \
 * **Creating** \
 * **Deleting** \
 * **Failed**
 */
export declare type PrivateEndpointConnectionProvisioningState = string;

/** Interface representing a PrivateEndpointConnections. */
export declare interface PrivateEndpointConnections {
    /**
     * List all the private endpoint connections associated with the workspace.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, workspaceName: string, options?: PrivateEndpointConnectionsListOptionalParams): PagedAsyncIterableIterator<PrivateEndpointConnection>;
    /**
     * Gets the specified private endpoint connection associated with the workspace.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param privateEndpointConnectionName The name of the private endpoint connection associated with the
     *                                      workspace
     * @param options The options parameters.
     */
    get(resourceGroupName: string, workspaceName: string, privateEndpointConnectionName: string, options?: PrivateEndpointConnectionsGetOptionalParams): Promise<PrivateEndpointConnectionsGetResponse>;
    /**
     * Update the state of specified private endpoint connection associated with the workspace.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param privateEndpointConnectionName The name of the private endpoint connection associated with the
     *                                      workspace
     * @param properties The private endpoint connection properties.
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, workspaceName: string, privateEndpointConnectionName: string, properties: PrivateEndpointConnection, options?: PrivateEndpointConnectionsCreateOrUpdateOptionalParams): Promise<PrivateEndpointConnectionsCreateOrUpdateResponse>;
    /**
     * Deletes the specified private endpoint connection associated with the workspace.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param privateEndpointConnectionName The name of the private endpoint connection associated with the
     *                                      workspace
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, workspaceName: string, privateEndpointConnectionName: string, options?: PrivateEndpointConnectionsDeleteOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface PrivateEndpointConnectionsCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the createOrUpdate operation. */
export declare type PrivateEndpointConnectionsCreateOrUpdateResponse = PrivateEndpointConnection;

/** Optional parameters. */
export declare interface PrivateEndpointConnectionsDeleteOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface PrivateEndpointConnectionsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type PrivateEndpointConnectionsGetResponse = PrivateEndpointConnection;

/** Optional parameters. */
export declare interface PrivateEndpointConnectionsListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type PrivateEndpointConnectionsListResponse = PrivateEndpointConnectionListResult;

/**
 * Defines values for PrivateEndpointServiceConnectionStatus. \
 * {@link KnownPrivateEndpointServiceConnectionStatus} can be used interchangeably with PrivateEndpointServiceConnectionStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Pending** \
 * **Approved** \
 * **Rejected** \
 * **Disconnected** \
 * **Timeout**
 */
export declare type PrivateEndpointServiceConnectionStatus = string;

/** A private link resource */
export declare type PrivateLinkResource = Resource & {
    /** The identity of the resource. */
    identity?: Identity;
    /** Specifies the location of the resource. */
    location?: string;
    /** Contains resource tags defined as key/value pairs. */
    tags?: {
        [propertyName: string]: string;
    };
    /** The sku of the workspace. */
    sku?: Sku;
    /**
     * System data
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
    /**
     * The private link resource group id.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly groupId?: string;
    /**
     * The private link resource required member names.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly requiredMembers?: string[];
    /** The private link resource Private link DNS zone name. */
    requiredZoneNames?: string[];
};

/** A list of private link resources */
export declare interface PrivateLinkResourceListResult {
    /** Array of private link resources */
    value?: PrivateLinkResource[];
}

/** Interface representing a PrivateLinkResources. */
export declare interface PrivateLinkResources {
    /**
     * Gets the private link resources that need to be created for a workspace.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, workspaceName: string, options?: PrivateLinkResourcesListOptionalParams): Promise<PrivateLinkResourcesListResponse>;
}

/** Optional parameters. */
export declare interface PrivateLinkResourcesListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type PrivateLinkResourcesListResponse = PrivateLinkResourceListResult;

/** A collection of information about the state of the connection between service consumer and provider. */
export declare interface PrivateLinkServiceConnectionState {
    /** Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service. */
    status?: PrivateEndpointServiceConnectionStatus;
    /** The reason for approval/rejection of the connection. */
    description?: string;
    /** A message indicating if changes on the service provider require any updates on the consumer. */
    actionsRequired?: string;
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **Updating** \
 * **Creating** \
 * **Deleting** \
 * **Succeeded** \
 * **Failed** \
 * **Canceled**
 */
export declare type ProvisioningState = string;

/**
 * Defines values for PublicNetworkAccess. \
 * {@link KnownPublicNetworkAccess} can be used interchangeably with PublicNetworkAccess,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled** \
 * **Disabled**
 */
export declare type PublicNetworkAccess = string;

/** The properties for Quota update or retrieval. */
export declare interface QuotaBaseProperties {
    /** Specifies the resource ID. */
    id?: string;
    /** Specifies the resource type. */
    type?: string;
    /** The maximum permitted quota of the resource. */
    limit?: number;
    /** An enum describing the unit of quota measurement. */
    unit?: QuotaUnit;
}

/** Interface representing a Quotas. */
export declare interface Quotas {
    /**
     * Gets the currently assigned Workspace Quotas based on VMFamily.
     * @param location The location for which resource usage is queried.
     * @param options The options parameters.
     */
    list(location: string, options?: QuotasListOptionalParams): PagedAsyncIterableIterator<ResourceQuota>;
    /**
     * Update quota for each VM family in workspace.
     * @param location The location for update quota is queried.
     * @param parameters Quota update parameters.
     * @param options The options parameters.
     */
    update(location: string, parameters: QuotaUpdateParameters, options?: QuotasUpdateOptionalParams): Promise<QuotasUpdateResponse>;
}

/** Optional parameters. */
export declare interface QuotasListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type QuotasListNextResponse = ListWorkspaceQuotas;

/** Optional parameters. */
export declare interface QuotasListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type QuotasListResponse = ListWorkspaceQuotas;

/** Optional parameters. */
export declare interface QuotasUpdateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the update operation. */
export declare type QuotasUpdateResponse = UpdateWorkspaceQuotasResult;

/**
 * Defines values for QuotaUnit. \
 * {@link KnownQuotaUnit} can be used interchangeably with QuotaUnit,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Count**
 */
export declare type QuotaUnit = string;

/** Quota update parameters. */
export declare interface QuotaUpdateParameters {
    /** The list for update quota. */
    value?: QuotaBaseProperties[];
    /** Region of workspace quota to be updated. */
    location?: string;
}

/**
 * Defines values for ReasonCode. \
 * {@link KnownReasonCode} can be used interchangeably with ReasonCode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **NotSpecified** \
 * **NotAvailableForRegion** \
 * **NotAvailableForSubscription**
 */
export declare type ReasonCode = string;

export declare interface RegistryListCredentialsResult {
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly location?: string;
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly username?: string;
    passwords?: Password[];
}

/**
 * Defines values for RemoteLoginPortPublicAccess. \
 * {@link KnownRemoteLoginPortPublicAccess} can be used interchangeably with RemoteLoginPortPublicAccess,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled** \
 * **Disabled** \
 * **NotSpecified**
 */
export declare type RemoteLoginPortPublicAccess = string;

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export declare interface Resource {
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /**
     * The name of the resource
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
}

/** Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet. */
export declare interface ResourceId {
    /** The ID of the resource */
    id: string;
}

/** Defines values for ResourceIdentityType. */
export declare type ResourceIdentityType = "SystemAssigned" | "SystemAssigned,UserAssigned" | "UserAssigned" | "None";

/** The Resource Name. */
export declare interface ResourceName {
    /**
     * The name of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: string;
    /**
     * The localized name of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly localizedValue?: string;
}

/** The quota assigned to a resource. */
export declare interface ResourceQuota {
    /**
     * Specifies the resource ID.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /**
     * Region of the AML workspace in the id.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly amlWorkspaceLocation?: string;
    /**
     * Specifies the resource type.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /**
     * Name of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: ResourceName;
    /**
     * The maximum permitted quota of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly limit?: number;
    /**
     * An enum describing the unit of quota measurement.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly unit?: QuotaUnit;
}

export declare interface ResourceSkuLocationInfo {
    /**
     * Location of the SKU
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly location?: string;
    /**
     * List of availability zones where the SKU is supported.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly zones?: string[];
    /**
     * Details of capabilities available to a SKU in specific zones.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly zoneDetails?: ResourceSkuZoneDetails[];
}

/** Describes The zonal capabilities of a SKU. */
export declare interface ResourceSkuZoneDetails {
    /**
     * The set of zones that the SKU is available in with the specified capabilities.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string[];
    /**
     * A list of capabilities that are available for the SKU in the specified list of zones.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly capabilities?: SKUCapability[];
}

/** The restriction because of which SKU cannot be used. */
export declare interface Restriction {
    /**
     * The type of restrictions. As of now only possible value for this is location.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /**
     * The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly values?: string[];
    /** The reason for the restriction. */
    reasonCode?: ReasonCode;
}

/** scale settings for AML Compute */
export declare interface ScaleSettings {
    /** Max number of nodes to use */
    maxNodeCount: number;
    /** Min number of nodes to use */
    minNodeCount?: number;
    /** Node Idle Time before scaling down amlCompute. This string needs to be in the RFC Format. */
    nodeIdleTimeBeforeScaleDown?: string;
}

/** Desired scale settings for the amlCompute. */
export declare interface ScaleSettingsInformation {
    /** scale settings for AML Compute */
    scaleSettings?: ScaleSettings;
}

/** Script reference */
export declare interface ScriptReference {
    /** The storage source of the script: inline, workspace. */
    scriptSource?: string;
    /** The location of scripts in the mounted volume. */
    scriptData?: string;
    /** Optional command line arguments passed to the script to run. */
    scriptArguments?: string;
    /** Optional time period passed to timeout command. */
    timeout?: string;
}

/** Customized setup scripts */
export declare interface ScriptsToExecute {
    /** Script that's run every time the machine starts. */
    startupScript?: ScriptReference;
    /** Script that's run only once during provision of the compute. */
    creationScript?: ScriptReference;
}

export declare interface ServiceManagedResourcesSettings {
    /** The settings for the service managed cosmosdb account. */
    cosmosDb?: CosmosDbSettings;
}

/** Service principal credentials. */
export declare interface ServicePrincipalCredentials {
    /** Client Id */
    clientId: string;
    /** Client secret */
    clientSecret: string;
}

/** Details of customized scripts to execute for setting up the cluster. */
export declare interface SetupScripts {
    /** Customized setup scripts */
    scripts?: ScriptsToExecute;
}

export declare interface SharedPrivateLinkResource {
    /** Unique name of the private link. */
    name?: string;
    /** The resource id that private link links to. */
    privateLinkResourceId?: string;
    /** The private link resource group id. */
    groupId?: string;
    /** Request message. */
    requestMessage?: string;
    /** Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service. */
    status?: PrivateEndpointServiceConnectionStatus;
}

/** Sku of the resource */
export declare interface Sku {
    /** Name of the sku */
    name?: string;
    /** Tier of the sku like Basic or Enterprise */
    tier?: string;
}

/** Features/user capabilities associated with the sku */
export declare interface SKUCapability {
    /** Capability/Feature ID */
    name?: string;
    /** Details about the feature/capability */
    value?: string;
}

/** List of skus with features */
export declare interface SkuListResult {
    value?: WorkspaceSku[];
    /** The URI to fetch the next page of Workspace Skus. Call ListNext() with this URI to fetch the next page of Workspace Skus */
    nextLink?: string;
}

/**
 * Defines values for SshPublicAccess. \
 * {@link KnownSshPublicAccess} can be used interchangeably with SshPublicAccess,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled** \
 * **Disabled**
 */
export declare type SshPublicAccess = string;

/** The ssl configuration for scoring */
export declare interface SslConfiguration {
    /** Enable or disable ssl for scoring */
    status?: SslConfigurationStatus;
    /** Cert data */
    cert?: string;
    /** Key data */
    key?: string;
    /** CNAME of the cert */
    cname?: string;
    /** Leaf domain label of public endpoint */
    leafDomainLabel?: string;
    /** Indicates whether to overwrite existing domain label. */
    overwriteExistingDomain?: boolean;
}

/**
 * Defines values for SslConfigurationStatus. \
 * {@link KnownSslConfigurationStatus} can be used interchangeably with SslConfigurationStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Disabled** \
 * **Enabled** \
 * **Auto**
 */
export declare type SslConfigurationStatus = string;

/**
 * Defines values for Status. \
 * {@link KnownStatus} can be used interchangeably with Status,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Undefined** \
 * **Success** \
 * **Failure** \
 * **InvalidQuotaBelowClusterMinimum** \
 * **InvalidQuotaExceedsSubscriptionLimit** \
 * **InvalidVMFamilyName** \
 * **OperationNotSupportedForSku** \
 * **OperationNotEnabledForRegion**
 */
export declare type Status = string;

/** A SynapseSpark compute. */
export declare type SynapseSpark = Compute & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    computeType: "SynapseSpark";
    properties?: SynapseSparkProperties;
};

export declare interface SynapseSparkProperties {
    /** Auto scale properties. */
    autoScaleProperties?: AutoScaleProperties;
    /** Auto pause properties. */
    autoPauseProperties?: AutoPauseProperties;
    /** Spark version. */
    sparkVersion?: string;
    /** The number of compute nodes currently assigned to the compute. */
    nodeCount?: number;
    /** Node size. */
    nodeSize?: string;
    /** Node size family. */
    nodeSizeFamily?: string;
    /** Azure subscription identifier. */
    subscriptionId?: string;
    /** Name of the resource group in which workspace is located. */
    resourceGroup?: string;
    /** Name of Azure Machine Learning workspace. */
    workspaceName?: string;
    /** Pool name. */
    poolName?: string;
}

/** Metadata pertaining to creation and last modification of the resource. */
export declare interface SystemData {
    /** The identity that created the resource. */
    createdBy?: string;
    /** The type of identity that created the resource. */
    createdByType?: CreatedByType;
    /** The timestamp of resource creation (UTC). */
    createdAt?: Date;
    /** The identity that last modified the resource. */
    lastModifiedBy?: string;
    /** The type of identity that last modified the resource. */
    lastModifiedByType?: CreatedByType;
    /** The timestamp of resource last modification (UTC) */
    lastModifiedAt?: Date;
}

/** A system service running on a compute. */
export declare interface SystemService {
    /**
     * The type of this system service.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemServiceType?: string;
    /**
     * Public IP address
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly publicIpAddress?: string;
    /**
     * The version for this type.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly version?: string;
}

/**
 * Defines values for UnderlyingResourceAction. \
 * {@link KnownUnderlyingResourceAction} can be used interchangeably with UnderlyingResourceAction,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Delete** \
 * **Detach**
 */
export declare type UnderlyingResourceAction = string;

/**
 * Defines values for UnitOfMeasure. \
 * {@link KnownUnitOfMeasure} can be used interchangeably with UnitOfMeasure,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **OneHour**
 */
export declare type UnitOfMeasure = string;

/** The properties for update Quota response. */
export declare interface UpdateWorkspaceQuotas {
    /**
     * Specifies the resource ID.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /**
     * Specifies the resource type.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /** The maximum permitted quota of the resource. */
    limit?: number;
    /**
     * An enum describing the unit of quota measurement.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly unit?: QuotaUnit;
    /** Status of update workspace quota. */
    status?: Status;
}

/** The result of update workspace quota. */
export declare interface UpdateWorkspaceQuotasResult {
    /**
     * The list of workspace quota update result.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: UpdateWorkspaceQuotas[];
    /**
     * The URI to fetch the next page of workspace quota update result. Call ListNext() with this to fetch the next page of Workspace Quota update result.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly nextLink?: string;
}

/** Describes AML Resource Usage. */
export declare interface Usage {
    /**
     * Specifies the resource ID.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /**
     * Region of the AML workspace in the id.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly amlWorkspaceLocation?: string;
    /**
     * Specifies the resource type.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /**
     * An enum describing the unit of usage measurement.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly unit?: UsageUnit;
    /**
     * The current usage of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly currentValue?: number;
    /**
     * The maximum permitted usage of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly limit?: number;
    /**
     * The name of the type of usage.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: UsageName;
}

/** The Usage Names. */
export declare interface UsageName {
    /**
     * The name of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly value?: string;
    /**
     * The localized name of the resource.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly localizedValue?: string;
}

/** Interface representing a Usages. */
export declare interface Usages {
    /**
     * Gets the current usage information as well as limits for AML resources for given subscription and
     * location.
     * @param location The location for which resource usage is queried.
     * @param options The options parameters.
     */
    list(location: string, options?: UsagesListOptionalParams): PagedAsyncIterableIterator<Usage>;
}

/** Optional parameters. */
export declare interface UsagesListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type UsagesListNextResponse = ListUsagesResult;

/** Optional parameters. */
export declare interface UsagesListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type UsagesListResponse = ListUsagesResult;

/**
 * Defines values for UsageUnit. \
 * {@link KnownUsageUnit} can be used interchangeably with UsageUnit,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Count**
 */
export declare type UsageUnit = string;

/** Settings for user account that gets created on each on the nodes of a compute. */
export declare interface UserAccountCredentials {
    /** Name of the administrator user account which can be used to SSH to nodes. */
    adminUserName: string;
    /** SSH public key of the administrator user account. */
    adminUserSshPublicKey?: string;
    /** Password of the administrator user account. */
    adminUserPassword?: string;
}

/** User Assigned Identity */
export declare interface UserAssignedIdentity {
    /**
     * The principal ID of the user assigned identity.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly principalId?: string;
    /**
     * The tenant ID of the user assigned identity.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly tenantId?: string;
    /**
     * The clientId(aka appId) of the user assigned identity.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly clientId?: string;
}

/**
 * Defines values for ValueFormat. \
 * {@link KnownValueFormat} can be used interchangeably with ValueFormat,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **JSON**
 */
export declare type ValueFormat = string;

/** A Machine Learning compute based on Azure Virtual Machines. */
export declare type VirtualMachine = Compute & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    computeType: "VirtualMachine";
    properties?: VirtualMachineProperties;
};

/** Virtual Machine image for Windows AML Compute */
export declare interface VirtualMachineImage {
    /** Virtual Machine image path */
    id: string;
}

export declare interface VirtualMachineProperties {
    /** Virtual Machine size */
    virtualMachineSize?: string;
    /** Port open for ssh connections. */
    sshPort?: number;
    /** Public IP address of the virtual machine. */
    address?: string;
    /** Admin credentials for virtual machine */
    administratorAccount?: VirtualMachineSshCredentials;
    /** Indicates whether this compute will be used for running notebooks. */
    isNotebookInstanceCompute?: boolean;
}

/** Secrets related to a Machine Learning compute based on AKS. */
export declare type VirtualMachineSecrets = ComputeSecrets & {
    /** Polymorphic discriminator, which specifies the different types this object can be */
    computeType: "VirtualMachine";
    /** Admin credentials for virtual machine. */
    administratorAccount?: VirtualMachineSshCredentials;
};

/** Describes the properties of a VM size. */
export declare interface VirtualMachineSize {
    /**
     * The name of the virtual machine size.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * The family name of the virtual machine size.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly family?: string;
    /**
     * The number of vCPUs supported by the virtual machine size.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly vCPUs?: number;
    /**
     * The number of gPUs supported by the virtual machine size.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly gpus?: number;
    /**
     * The OS VHD disk size, in MB, allowed by the virtual machine size.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly osVhdSizeMB?: number;
    /**
     * The resource volume size, in MB, allowed by the virtual machine size.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly maxResourceVolumeMB?: number;
    /**
     * The amount of memory, in GB, supported by the virtual machine size.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly memoryGB?: number;
    /**
     * Specifies if the virtual machine size supports low priority VMs.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly lowPriorityCapable?: boolean;
    /**
     * Specifies if the virtual machine size supports premium IO.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly premiumIO?: boolean;
    /** The estimated price information for using a VM. */
    estimatedVMPrices?: EstimatedVMPrices;
    /** Specifies the compute types supported by the virtual machine size. */
    supportedComputeTypes?: string[];
}

/** The List Virtual Machine size operation response. */
export declare interface VirtualMachineSizeListResult {
    /** The list of virtual machine sizes supported by AmlCompute. */
    value?: VirtualMachineSize[];
}

/** Interface representing a VirtualMachineSizes. */
export declare interface VirtualMachineSizes {
    /**
     * Returns supported VM Sizes in a location
     * @param location The location upon which virtual-machine-sizes is queried.
     * @param options The options parameters.
     */
    list(location: string, options?: VirtualMachineSizesListOptionalParams): Promise<VirtualMachineSizesListResponse>;
}

/** Optional parameters. */
export declare interface VirtualMachineSizesListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type VirtualMachineSizesListResponse = VirtualMachineSizeListResult;

/** Admin credentials for virtual machine */
export declare interface VirtualMachineSshCredentials {
    /** Username of admin account */
    username?: string;
    /** Password of admin account */
    password?: string;
    /** Public key data */
    publicKeyData?: string;
    /** Private key data */
    privateKeyData?: string;
}

/**
 * Defines values for VMPriceOSType. \
 * {@link KnownVMPriceOSType} can be used interchangeably with VMPriceOSType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Linux** \
 * **Windows**
 */
export declare type VMPriceOSType = string;

/**
 * Defines values for VmPriority. \
 * {@link KnownVmPriority} can be used interchangeably with VmPriority,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Dedicated** \
 * **LowPriority**
 */
export declare type VmPriority = string;

/**
 * Defines values for VMTier. \
 * {@link KnownVMTier} can be used interchangeably with VMTier,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Standard** \
 * **LowPriority** \
 * **Spot**
 */
export declare type VMTier = string;

/** An object that represents a machine learning workspace. */
export declare type Workspace = Resource & {
    /** The identity of the resource. */
    identity?: Identity;
    /** Specifies the location of the resource. */
    location?: string;
    /** Contains resource tags defined as key/value pairs. */
    tags?: {
        [propertyName: string]: string;
    };
    /** The sku of the workspace. */
    sku?: Sku;
    /**
     * System data
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly systemData?: SystemData;
    /**
     * The immutable id associated with this workspace.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly workspaceId?: string;
    /** The description of this workspace. */
    description?: string;
    /** The friendly name for this workspace. This name in mutable */
    friendlyName?: string;
    /** ARM id of the key vault associated with this workspace. This cannot be changed once the workspace has been created */
    keyVault?: string;
    /** ARM id of the application insights associated with this workspace. This cannot be changed once the workspace has been created */
    applicationInsights?: string;
    /** ARM id of the container registry associated with this workspace. This cannot be changed once the workspace has been created */
    containerRegistry?: string;
    /** ARM id of the storage account associated with this workspace. This cannot be changed once the workspace has been created */
    storageAccount?: string;
    /** Url for the discovery service to identify regional endpoints for machine learning experimentation services */
    discoveryUrl?: string;
    /**
     * The current deployment state of workspace resource. The provisioningState is to indicate states for resource provisioning.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly provisioningState?: ProvisioningState;
    /** The encryption settings of Azure ML workspace. */
    encryption?: EncryptionProperty;
    /** The flag to signal HBI data in the workspace and reduce diagnostic data collected by the service */
    hbiWorkspace?: boolean;
    /**
     * The name of the managed resource group created by workspace RP in customer subscription if the workspace is CMK workspace
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly serviceProvisionedResourceGroup?: string;
    /**
     * Count of private connections in the workspace
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly privateLinkCount?: number;
    /** The compute name for image build */
    imageBuildCompute?: string;
    /** The flag to indicate whether to allow public access when behind VNet. */
    allowPublicAccessWhenBehindVnet?: boolean;
    /** Whether requests from Public Network are allowed. */
    publicNetworkAccess?: PublicNetworkAccess;
    /**
     * The list of private endpoint connections in the workspace.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly privateEndpointConnections?: PrivateEndpointConnection[];
    /** The list of shared private link resources in this workspace. */
    sharedPrivateLinkResources?: SharedPrivateLinkResource[];
    /**
     * The notebook info of Azure ML workspace.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly notebookInfo?: NotebookResourceInfo;
    /** The service managed resource settings. */
    serviceManagedResourcesSettings?: ServiceManagedResourcesSettings;
    /** The user assigned identity resource id that represents the workspace identity. */
    primaryUserAssignedIdentity?: string;
    /**
     * The tenant id associated with this workspace.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly tenantId?: string;
    /**
     * If the storage associated with the workspace has hierarchical namespace(HNS) enabled.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly storageHnsEnabled?: boolean;
    /**
     * The URI associated with this workspace that machine learning flow must point at to set up tracking.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly mlFlowTrackingUri?: string;
};

/** Workspace connection. */
export declare interface WorkspaceConnection {
    /**
     * ResourceId of the workspace connection.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly id?: string;
    /**
     * Friendly name of the workspace connection.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly name?: string;
    /**
     * Resource type of workspace connection.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly type?: string;
    /** Category of the workspace connection. */
    category?: string;
    /** Target of the workspace connection. */
    target?: string;
    /** Authorization type of the workspace connection. */
    authType?: string;
    /** Value details of the workspace connection. */
    value?: string;
    /** format for the workspace connection value */
    valueFormat?: ValueFormat;
}

/** Interface representing a WorkspaceConnections. */
export declare interface WorkspaceConnections {
    /**
     * List all connections under a AML workspace.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, workspaceName: string, options?: WorkspaceConnectionsListOptionalParams): PagedAsyncIterableIterator<WorkspaceConnection>;
    /**
     * Add a new workspace connection.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param connectionName Friendly name of the workspace connection
     * @param parameters The object for creating or updating a new workspace connection
     * @param options The options parameters.
     */
    create(resourceGroupName: string, workspaceName: string, connectionName: string, parameters: WorkspaceConnection, options?: WorkspaceConnectionsCreateOptionalParams): Promise<WorkspaceConnectionsCreateResponse>;
    /**
     * Get the detail of a workspace connection.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param connectionName Friendly name of the workspace connection
     * @param options The options parameters.
     */
    get(resourceGroupName: string, workspaceName: string, connectionName: string, options?: WorkspaceConnectionsGetOptionalParams): Promise<WorkspaceConnectionsGetResponse>;
    /**
     * Delete a workspace connection.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param connectionName Friendly name of the workspace connection
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, workspaceName: string, connectionName: string, options?: WorkspaceConnectionsDeleteOptionalParams): Promise<void>;
}

/** Optional parameters. */
export declare interface WorkspaceConnectionsCreateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the create operation. */
export declare type WorkspaceConnectionsCreateResponse = WorkspaceConnection;

/** Optional parameters. */
export declare interface WorkspaceConnectionsDeleteOptionalParams extends coreClient.OperationOptions {
}

/** Optional parameters. */
export declare interface WorkspaceConnectionsGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type WorkspaceConnectionsGetResponse = WorkspaceConnection;

/** Optional parameters. */
export declare interface WorkspaceConnectionsListOptionalParams extends coreClient.OperationOptions {
    /** Target of the workspace connection. */
    target?: string;
    /** Category of the workspace connection. */
    category?: string;
}

/** Contains response data for the list operation. */
export declare type WorkspaceConnectionsListResponse = PaginatedWorkspaceConnectionsList;

/** Interface representing a WorkspaceFeatures. */
export declare interface WorkspaceFeatures {
    /**
     * Lists all enabled features for a workspace
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, workspaceName: string, options?: WorkspaceFeaturesListOptionalParams): PagedAsyncIterableIterator<AmlUserFeature>;
}

/** Optional parameters. */
export declare interface WorkspaceFeaturesListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type WorkspaceFeaturesListNextResponse = ListAmlUserFeatureResult;

/** Optional parameters. */
export declare interface WorkspaceFeaturesListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type WorkspaceFeaturesListResponse = ListAmlUserFeatureResult;

/** The result of a request to list machine learning workspaces. */
export declare interface WorkspaceListResult {
    /** The list of machine learning workspaces. Since this list may be incomplete, the nextLink field should be used to request the next list of machine learning workspaces. */
    value?: Workspace[];
    /** The URI that can be used to request the next list of machine learning workspaces. */
    nextLink?: string;
}

/** Interface representing a Workspaces. */
export declare interface Workspaces {
    /**
     * Lists all the available machine learning workspaces under the specified resource group.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: WorkspacesListByResourceGroupOptionalParams): PagedAsyncIterableIterator<Workspace>;
    /**
     * Lists all the available machine learning workspaces under the specified subscription.
     * @param options The options parameters.
     */
    listBySubscription(options?: WorkspacesListBySubscriptionOptionalParams): PagedAsyncIterableIterator<Workspace>;
    /**
     * Gets the properties of the specified machine learning workspace.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, workspaceName: string, options?: WorkspacesGetOptionalParams): Promise<WorkspacesGetResponse>;
    /**
     * Creates or updates a workspace with the specified parameters.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param parameters The parameters for creating or updating a machine learning workspace.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, workspaceName: string, parameters: Workspace, options?: WorkspacesCreateOrUpdateOptionalParams): Promise<PollerLike<PollOperationState<WorkspacesCreateOrUpdateResponse>, WorkspacesCreateOrUpdateResponse>>;
    /**
     * Creates or updates a workspace with the specified parameters.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param parameters The parameters for creating or updating a machine learning workspace.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, workspaceName: string, parameters: Workspace, options?: WorkspacesCreateOrUpdateOptionalParams): Promise<WorkspacesCreateOrUpdateResponse>;
    /**
     * Deletes a machine learning workspace.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, workspaceName: string, options?: WorkspacesDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Deletes a machine learning workspace.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, workspaceName: string, options?: WorkspacesDeleteOptionalParams): Promise<void>;
    /**
     * Updates a machine learning workspace with the specified parameters.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param parameters The parameters for updating a machine learning workspace.
     * @param options The options parameters.
     */
    update(resourceGroupName: string, workspaceName: string, parameters: WorkspaceUpdateParameters, options?: WorkspacesUpdateOptionalParams): Promise<WorkspacesUpdateResponse>;
    /**
     * Diagnose workspace setup issue.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param options The options parameters.
     */
    beginDiagnose(resourceGroupName: string, workspaceName: string, options?: WorkspacesDiagnoseOptionalParams): Promise<PollerLike<PollOperationState<WorkspacesDiagnoseResponse>, WorkspacesDiagnoseResponse>>;
    /**
     * Diagnose workspace setup issue.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param options The options parameters.
     */
    beginDiagnoseAndWait(resourceGroupName: string, workspaceName: string, options?: WorkspacesDiagnoseOptionalParams): Promise<WorkspacesDiagnoseResponse>;
    /**
     * Lists all the keys associated with this workspace. This includes keys for the storage account, app
     * insights and password for container registry
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param options The options parameters.
     */
    listKeys(resourceGroupName: string, workspaceName: string, options?: WorkspacesListKeysOptionalParams): Promise<WorkspacesListKeysResponse>;
    /**
     * Resync all the keys associated with this workspace. This includes keys for the storage account, app
     * insights and password for container registry
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param options The options parameters.
     */
    beginResyncKeys(resourceGroupName: string, workspaceName: string, options?: WorkspacesResyncKeysOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Resync all the keys associated with this workspace. This includes keys for the storage account, app
     * insights and password for container registry
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param options The options parameters.
     */
    beginResyncKeysAndWait(resourceGroupName: string, workspaceName: string, options?: WorkspacesResyncKeysOptionalParams): Promise<void>;
    /**
     * return notebook access token and refresh token
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param options The options parameters.
     */
    listNotebookAccessToken(resourceGroupName: string, workspaceName: string, options?: WorkspacesListNotebookAccessTokenOptionalParams): Promise<WorkspacesListNotebookAccessTokenResponse>;
    /**
     * Prepare a notebook.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param options The options parameters.
     */
    beginPrepareNotebook(resourceGroupName: string, workspaceName: string, options?: WorkspacesPrepareNotebookOptionalParams): Promise<PollerLike<PollOperationState<WorkspacesPrepareNotebookResponse>, WorkspacesPrepareNotebookResponse>>;
    /**
     * Prepare a notebook.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param options The options parameters.
     */
    beginPrepareNotebookAndWait(resourceGroupName: string, workspaceName: string, options?: WorkspacesPrepareNotebookOptionalParams): Promise<WorkspacesPrepareNotebookResponse>;
    /**
     * List storage account keys of a workspace.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param options The options parameters.
     */
    listStorageAccountKeys(resourceGroupName: string, workspaceName: string, options?: WorkspacesListStorageAccountKeysOptionalParams): Promise<WorkspacesListStorageAccountKeysResponse>;
    /**
     * List keys of a notebook.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param options The options parameters.
     */
    listNotebookKeys(resourceGroupName: string, workspaceName: string, options?: WorkspacesListNotebookKeysOptionalParams): Promise<WorkspacesListNotebookKeysResponse>;
    /**
     * Called by Client (Portal, CLI, etc) to get a list of all external outbound dependencies (FQDNs)
     * programmatically.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param options The options parameters.
     */
    listOutboundNetworkDependenciesEndpoints(resourceGroupName: string, workspaceName: string, options?: WorkspacesListOutboundNetworkDependenciesEndpointsOptionalParams): Promise<WorkspacesListOutboundNetworkDependenciesEndpointsResponse>;
}

/** Optional parameters. */
export declare interface WorkspacesCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export declare type WorkspacesCreateOrUpdateResponse = Workspace;

/** Optional parameters. */
export declare interface WorkspacesDeleteOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Defines headers for Workspaces_diagnose operation. */
export declare interface WorkspacesDiagnoseHeaders {
    /** URI to poll for asynchronous operation result. */
    location?: string;
    /** Duration the client should wait between requests, in seconds. */
    retryAfter?: number;
}

/** Optional parameters. */
export declare interface WorkspacesDiagnoseOptionalParams extends coreClient.OperationOptions {
    /** The parameter of diagnosing workspace health */
    parameters?: DiagnoseWorkspaceParameters;
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the diagnose operation. */
export declare type WorkspacesDiagnoseResponse = DiagnoseResponseResult;

/** Optional parameters. */
export declare interface WorkspacesGetOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the get operation. */
export declare type WorkspacesGetResponse = Workspace;

/** Describes Workspace Sku details and features */
export declare interface WorkspaceSku {
    /**
     * The set of locations that the SKU is available. This will be supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.).
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly locations?: string[];
    /**
     * A list of locations and availability zones in those locations where the SKU is available.
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly locationInfo?: ResourceSkuLocationInfo[];
    /**
     * Sku Tier like Basic or Enterprise
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly tier?: string;
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly resourceType?: string;
    /** NOTE: This property will not be serialized. It can only be populated by the server. */
    readonly name?: string;
    /**
     * List of features/user capabilities associated with the sku
     * NOTE: This property will not be serialized. It can only be populated by the server.
     */
    readonly capabilities?: SKUCapability[];
    /** The restrictions because of which SKU cannot be used. This is empty if there are no restrictions. */
    restrictions?: Restriction[];
}

/** Interface representing a WorkspaceSkus. */
export declare interface WorkspaceSkus {
    /**
     * Lists all skus with associated features
     * @param options The options parameters.
     */
    list(options?: WorkspaceSkusListOptionalParams): PagedAsyncIterableIterator<WorkspaceSku>;
}

/** Optional parameters. */
export declare interface WorkspaceSkusListNextOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNext operation. */
export declare type WorkspaceSkusListNextResponse = SkuListResult;

/** Optional parameters. */
export declare interface WorkspaceSkusListOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the list operation. */
export declare type WorkspaceSkusListResponse = SkuListResult;

/** Optional parameters. */
export declare interface WorkspacesListByResourceGroupNextOptionalParams extends coreClient.OperationOptions {
    /** Continuation token for pagination. */
    skip?: string;
}

/** Contains response data for the listByResourceGroupNext operation. */
export declare type WorkspacesListByResourceGroupNextResponse = WorkspaceListResult;

/** Optional parameters. */
export declare interface WorkspacesListByResourceGroupOptionalParams extends coreClient.OperationOptions {
    /** Continuation token for pagination. */
    skip?: string;
}

/** Contains response data for the listByResourceGroup operation. */
export declare type WorkspacesListByResourceGroupResponse = WorkspaceListResult;

/** Optional parameters. */
export declare interface WorkspacesListBySubscriptionNextOptionalParams extends coreClient.OperationOptions {
    /** Continuation token for pagination. */
    skip?: string;
}

/** Contains response data for the listBySubscriptionNext operation. */
export declare type WorkspacesListBySubscriptionNextResponse = WorkspaceListResult;

/** Optional parameters. */
export declare interface WorkspacesListBySubscriptionOptionalParams extends coreClient.OperationOptions {
    /** Continuation token for pagination. */
    skip?: string;
}

/** Contains response data for the listBySubscription operation. */
export declare type WorkspacesListBySubscriptionResponse = WorkspaceListResult;

/** Optional parameters. */
export declare interface WorkspacesListKeysOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listKeys operation. */
export declare type WorkspacesListKeysResponse = ListWorkspaceKeysResult;

/** Optional parameters. */
export declare interface WorkspacesListNotebookAccessTokenOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNotebookAccessToken operation. */
export declare type WorkspacesListNotebookAccessTokenResponse = NotebookAccessTokenResult;

/** Optional parameters. */
export declare interface WorkspacesListNotebookKeysOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listNotebookKeys operation. */
export declare type WorkspacesListNotebookKeysResponse = ListNotebookKeysResult;

/** Optional parameters. */
export declare interface WorkspacesListOutboundNetworkDependenciesEndpointsOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listOutboundNetworkDependenciesEndpoints operation. */
export declare type WorkspacesListOutboundNetworkDependenciesEndpointsResponse = ExternalFqdnResponse;

/** Optional parameters. */
export declare interface WorkspacesListStorageAccountKeysOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the listStorageAccountKeys operation. */
export declare type WorkspacesListStorageAccountKeysResponse = ListStorageAccountKeysResult;

/** Optional parameters. */
export declare interface WorkspacesPrepareNotebookOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Contains response data for the prepareNotebook operation. */
export declare type WorkspacesPrepareNotebookResponse = NotebookResourceInfo;

/** Optional parameters. */
export declare interface WorkspacesResyncKeysOptionalParams extends coreClient.OperationOptions {
    /** Delay to wait until next poll, in milliseconds. */
    updateIntervalInMs?: number;
    /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
    resumeFrom?: string;
}

/** Optional parameters. */
export declare interface WorkspacesUpdateOptionalParams extends coreClient.OperationOptions {
}

/** Contains response data for the update operation. */
export declare type WorkspacesUpdateResponse = Workspace;

/** The parameters for updating a machine learning workspace. */
export declare interface WorkspaceUpdateParameters {
    /** The resource tags for the machine learning workspace. */
    tags?: {
        [propertyName: string]: string;
    };
    /** The sku of the workspace. */
    sku?: Sku;
    /** The identity of the resource. */
    identity?: Identity;
    /** The description of this workspace. */
    description?: string;
    /** The friendly name for this workspace. */
    friendlyName?: string;
    /** The compute name for image build */
    imageBuildCompute?: string;
    /** The service managed resource settings. */
    serviceManagedResourcesSettings?: ServiceManagedResourcesSettings;
    /** The user assigned identity resource id that represents the workspace identity. */
    primaryUserAssignedIdentity?: string;
    /** Whether requests from Public Network are allowed. */
    publicNetworkAccess?: PublicNetworkAccess;
}

export { }
