"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  AppAttributesKeys: () => AppAttributesKeys,
  AppType: () => AppType,
  Architecture: () => Architecture,
  AssignInstanceCommand: () => AssignInstanceCommand,
  AssignVolumeCommand: () => AssignVolumeCommand,
  AssociateElasticIpCommand: () => AssociateElasticIpCommand,
  AttachElasticLoadBalancerCommand: () => AttachElasticLoadBalancerCommand,
  AutoScalingType: () => AutoScalingType,
  CloneStackCommand: () => CloneStackCommand,
  CloudWatchLogsEncoding: () => CloudWatchLogsEncoding,
  CloudWatchLogsInitialPosition: () => CloudWatchLogsInitialPosition,
  CloudWatchLogsTimeZone: () => CloudWatchLogsTimeZone,
  CreateAppCommand: () => CreateAppCommand,
  CreateDeploymentCommand: () => CreateDeploymentCommand,
  CreateInstanceCommand: () => CreateInstanceCommand,
  CreateLayerCommand: () => CreateLayerCommand,
  CreateStackCommand: () => CreateStackCommand,
  CreateUserProfileCommand: () => CreateUserProfileCommand,
  DeleteAppCommand: () => DeleteAppCommand,
  DeleteInstanceCommand: () => DeleteInstanceCommand,
  DeleteLayerCommand: () => DeleteLayerCommand,
  DeleteStackCommand: () => DeleteStackCommand,
  DeleteUserProfileCommand: () => DeleteUserProfileCommand,
  DeploymentCommandName: () => DeploymentCommandName,
  DeregisterEcsClusterCommand: () => DeregisterEcsClusterCommand,
  DeregisterElasticIpCommand: () => DeregisterElasticIpCommand,
  DeregisterInstanceCommand: () => DeregisterInstanceCommand,
  DeregisterRdsDbInstanceCommand: () => DeregisterRdsDbInstanceCommand,
  DeregisterVolumeCommand: () => DeregisterVolumeCommand,
  DescribeAgentVersionsCommand: () => DescribeAgentVersionsCommand,
  DescribeAppsCommand: () => DescribeAppsCommand,
  DescribeCommandsCommand: () => DescribeCommandsCommand,
  DescribeDeploymentsCommand: () => DescribeDeploymentsCommand,
  DescribeEcsClustersCommand: () => DescribeEcsClustersCommand,
  DescribeElasticIpsCommand: () => DescribeElasticIpsCommand,
  DescribeElasticLoadBalancersCommand: () => DescribeElasticLoadBalancersCommand,
  DescribeInstancesCommand: () => DescribeInstancesCommand,
  DescribeLayersCommand: () => DescribeLayersCommand,
  DescribeLoadBasedAutoScalingCommand: () => DescribeLoadBasedAutoScalingCommand,
  DescribeMyUserProfileCommand: () => DescribeMyUserProfileCommand,
  DescribeOperatingSystemsCommand: () => DescribeOperatingSystemsCommand,
  DescribePermissionsCommand: () => DescribePermissionsCommand,
  DescribeRaidArraysCommand: () => DescribeRaidArraysCommand,
  DescribeRdsDbInstancesCommand: () => DescribeRdsDbInstancesCommand,
  DescribeServiceErrorsCommand: () => DescribeServiceErrorsCommand,
  DescribeStackProvisioningParametersCommand: () => DescribeStackProvisioningParametersCommand,
  DescribeStackSummaryCommand: () => DescribeStackSummaryCommand,
  DescribeStacksCommand: () => DescribeStacksCommand,
  DescribeTimeBasedAutoScalingCommand: () => DescribeTimeBasedAutoScalingCommand,
  DescribeUserProfilesCommand: () => DescribeUserProfilesCommand,
  DescribeVolumesCommand: () => DescribeVolumesCommand,
  DetachElasticLoadBalancerCommand: () => DetachElasticLoadBalancerCommand,
  DisassociateElasticIpCommand: () => DisassociateElasticIpCommand,
  GetHostnameSuggestionCommand: () => GetHostnameSuggestionCommand,
  GrantAccessCommand: () => GrantAccessCommand,
  LayerAttributesKeys: () => LayerAttributesKeys,
  LayerType: () => LayerType,
  ListTagsCommand: () => ListTagsCommand,
  OpsWorks: () => OpsWorks,
  OpsWorksClient: () => OpsWorksClient,
  OpsWorksServiceException: () => OpsWorksServiceException,
  RebootInstanceCommand: () => RebootInstanceCommand,
  RegisterEcsClusterCommand: () => RegisterEcsClusterCommand,
  RegisterElasticIpCommand: () => RegisterElasticIpCommand,
  RegisterInstanceCommand: () => RegisterInstanceCommand,
  RegisterRdsDbInstanceCommand: () => RegisterRdsDbInstanceCommand,
  RegisterVolumeCommand: () => RegisterVolumeCommand,
  ResourceNotFoundException: () => ResourceNotFoundException,
  RootDeviceType: () => RootDeviceType,
  SetLoadBasedAutoScalingCommand: () => SetLoadBasedAutoScalingCommand,
  SetPermissionCommand: () => SetPermissionCommand,
  SetTimeBasedAutoScalingCommand: () => SetTimeBasedAutoScalingCommand,
  SourceType: () => SourceType,
  StackAttributesKeys: () => StackAttributesKeys,
  StartInstanceCommand: () => StartInstanceCommand,
  StartStackCommand: () => StartStackCommand,
  StopInstanceCommand: () => StopInstanceCommand,
  StopStackCommand: () => StopStackCommand,
  TagResourceCommand: () => TagResourceCommand,
  UnassignInstanceCommand: () => UnassignInstanceCommand,
  UnassignVolumeCommand: () => UnassignVolumeCommand,
  UntagResourceCommand: () => UntagResourceCommand,
  UpdateAppCommand: () => UpdateAppCommand,
  UpdateElasticIpCommand: () => UpdateElasticIpCommand,
  UpdateInstanceCommand: () => UpdateInstanceCommand,
  UpdateLayerCommand: () => UpdateLayerCommand,
  UpdateMyUserProfileCommand: () => UpdateMyUserProfileCommand,
  UpdateRdsDbInstanceCommand: () => UpdateRdsDbInstanceCommand,
  UpdateStackCommand: () => UpdateStackCommand,
  UpdateUserProfileCommand: () => UpdateUserProfileCommand,
  UpdateVolumeCommand: () => UpdateVolumeCommand,
  ValidationException: () => ValidationException,
  VirtualizationType: () => VirtualizationType,
  VolumeType: () => VolumeType,
  __Client: () => import_smithy_client.Client,
  paginateDescribeEcsClusters: () => paginateDescribeEcsClusters,
  waitForAppExists: () => waitForAppExists,
  waitForDeploymentSuccessful: () => waitForDeploymentSuccessful,
  waitForInstanceOnline: () => waitForInstanceOnline,
  waitForInstanceRegistered: () => waitForInstanceRegistered,
  waitForInstanceStopped: () => waitForInstanceStopped,
  waitForInstanceTerminated: () => waitForInstanceTerminated,
  waitUntilAppExists: () => waitUntilAppExists,
  waitUntilDeploymentSuccessful: () => waitUntilDeploymentSuccessful,
  waitUntilInstanceOnline: () => waitUntilInstanceOnline,
  waitUntilInstanceRegistered: () => waitUntilInstanceRegistered,
  waitUntilInstanceStopped: () => waitUntilInstanceStopped,
  waitUntilInstanceTerminated: () => waitUntilInstanceTerminated
});
module.exports = __toCommonJS(src_exports);

// src/OpsWorksClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return {
    ...options,
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "opsworks"
  };
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/OpsWorksClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var asPartial = /* @__PURE__ */ __name((t) => t, "asPartial");
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = {
    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),
    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
  };
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return {
    ...runtimeConfig,
    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
  };
}, "resolveRuntimeExtensions");

// src/OpsWorksClient.ts
var _OpsWorksClient = class _OpsWorksClient extends import_smithy_client.Client {
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_config_resolver.resolveRegionConfig)(_config_1);
    const _config_3 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_2);
    const _config_4 = (0, import_middleware_retry.resolveRetryConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, (configuration == null ? void 0 : configuration.extensions) || []);
    super(_config_8);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),
        identityProviderConfigProvider: this.getIdentityProviderConfigProvider()
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
  getDefaultHttpAuthSchemeParametersProvider() {
    return import_httpAuthSchemeProvider.defaultOpsWorksHttpAuthSchemeParametersProvider;
  }
  getIdentityProviderConfigProvider() {
    return async (config) => new import_core.DefaultIdentityProviderConfig({
      "aws.auth#sigv4": config.credentials
    });
  }
};
__name(_OpsWorksClient, "OpsWorksClient");
var OpsWorksClient = _OpsWorksClient;

// src/OpsWorks.ts


// src/commands/AssignInstanceCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");

var import_types = require("@smithy/types");

// src/protocols/Aws_json1_1.ts
var import_core2 = require("@aws-sdk/core");



// src/models/OpsWorksServiceException.ts

var _OpsWorksServiceException = class _OpsWorksServiceException extends import_smithy_client.ServiceException {
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _OpsWorksServiceException.prototype);
  }
};
__name(_OpsWorksServiceException, "OpsWorksServiceException");
var OpsWorksServiceException = _OpsWorksServiceException;

// src/models/models_0.ts
var SourceType = {
  archive: "archive",
  git: "git",
  s3: "s3",
  svn: "svn"
};
var AppAttributesKeys = {
  AutoBundleOnDeploy: "AutoBundleOnDeploy",
  AwsFlowRubySettings: "AwsFlowRubySettings",
  DocumentRoot: "DocumentRoot",
  RailsEnv: "RailsEnv"
};
var AppType = {
  aws_flow_ruby: "aws-flow-ruby",
  java: "java",
  nodejs: "nodejs",
  other: "other",
  php: "php",
  rails: "rails",
  static: "static"
};
var Architecture = {
  i386: "i386",
  x86_64: "x86_64"
};
var _ResourceNotFoundException = class _ResourceNotFoundException extends OpsWorksServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceNotFoundException",
      $fault: "client",
      ...opts
    });
    this.name = "ResourceNotFoundException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourceNotFoundException.prototype);
  }
};
__name(_ResourceNotFoundException, "ResourceNotFoundException");
var ResourceNotFoundException = _ResourceNotFoundException;
var _ValidationException = class _ValidationException extends OpsWorksServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ValidationException",
      $fault: "client",
      ...opts
    });
    this.name = "ValidationException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ValidationException.prototype);
  }
};
__name(_ValidationException, "ValidationException");
var ValidationException = _ValidationException;
var AutoScalingType = {
  load: "load",
  timer: "timer"
};
var VolumeType = {
  gp2: "gp2",
  io1: "io1",
  standard: "standard"
};
var StackAttributesKeys = {
  Color: "Color"
};
var RootDeviceType = {
  ebs: "ebs",
  instance_store: "instance-store"
};
var CloudWatchLogsEncoding = {
  ascii: "ascii",
  big5: "big5",
  big5hkscs: "big5hkscs",
  cp037: "cp037",
  cp1006: "cp1006",
  cp1026: "cp1026",
  cp1140: "cp1140",
  cp1250: "cp1250",
  cp1251: "cp1251",
  cp1252: "cp1252",
  cp1253: "cp1253",
  cp1254: "cp1254",
  cp1255: "cp1255",
  cp1256: "cp1256",
  cp1257: "cp1257",
  cp1258: "cp1258",
  cp424: "cp424",
  cp437: "cp437",
  cp500: "cp500",
  cp720: "cp720",
  cp737: "cp737",
  cp775: "cp775",
  cp850: "cp850",
  cp852: "cp852",
  cp855: "cp855",
  cp856: "cp856",
  cp857: "cp857",
  cp858: "cp858",
  cp860: "cp860",
  cp861: "cp861",
  cp862: "cp862",
  cp863: "cp863",
  cp864: "cp864",
  cp865: "cp865",
  cp866: "cp866",
  cp869: "cp869",
  cp874: "cp874",
  cp875: "cp875",
  cp932: "cp932",
  cp949: "cp949",
  cp950: "cp950",
  euc_jis_2004: "euc_jis_2004",
  euc_jisx0213: "euc_jisx0213",
  euc_jp: "euc_jp",
  euc_kr: "euc_kr",
  gb18030: "gb18030",
  gb2312: "gb2312",
  gbk: "gbk",
  hz: "hz",
  iso2022_jp: "iso2022_jp",
  iso2022_jp_1: "iso2022_jp_1",
  iso2022_jp_2: "iso2022_jp_2",
  iso2022_jp_2004: "iso2022_jp_2004",
  iso2022_jp_3: "iso2022_jp_3",
  iso2022_jp_ext: "iso2022_jp_ext",
  iso2022_kr: "iso2022_kr",
  iso8859_10: "iso8859_10",
  iso8859_13: "iso8859_13",
  iso8859_14: "iso8859_14",
  iso8859_15: "iso8859_15",
  iso8859_16: "iso8859_16",
  iso8859_2: "iso8859_2",
  iso8859_3: "iso8859_3",
  iso8859_4: "iso8859_4",
  iso8859_5: "iso8859_5",
  iso8859_6: "iso8859_6",
  iso8859_7: "iso8859_7",
  iso8859_8: "iso8859_8",
  iso8859_9: "iso8859_9",
  johab: "johab",
  koi8_r: "koi8_r",
  koi8_u: "koi8_u",
  latin_1: "latin_1",
  mac_cyrillic: "mac_cyrillic",
  mac_greek: "mac_greek",
  mac_iceland: "mac_iceland",
  mac_latin2: "mac_latin2",
  mac_roman: "mac_roman",
  mac_turkish: "mac_turkish",
  ptcp154: "ptcp154",
  shift_jis: "shift_jis",
  shift_jis_2004: "shift_jis_2004",
  shift_jisx0213: "shift_jisx0213",
  utf_16: "utf_16",
  utf_16_be: "utf_16_be",
  utf_16_le: "utf_16_le",
  utf_32: "utf_32",
  utf_32_be: "utf_32_be",
  utf_32_le: "utf_32_le",
  utf_7: "utf_7",
  utf_8: "utf_8",
  utf_8_sig: "utf_8_sig"
};
var CloudWatchLogsInitialPosition = {
  end_of_file: "end_of_file",
  start_of_file: "start_of_file"
};
var CloudWatchLogsTimeZone = {
  LOCAL: "LOCAL",
  UTC: "UTC"
};
var DeploymentCommandName = {
  configure: "configure",
  deploy: "deploy",
  execute_recipes: "execute_recipes",
  install_dependencies: "install_dependencies",
  restart: "restart",
  rollback: "rollback",
  setup: "setup",
  start: "start",
  stop: "stop",
  undeploy: "undeploy",
  update_custom_cookbooks: "update_custom_cookbooks",
  update_dependencies: "update_dependencies"
};
var LayerAttributesKeys = {
  BundlerVersion: "BundlerVersion",
  EcsClusterArn: "EcsClusterArn",
  EnableHaproxyStats: "EnableHaproxyStats",
  GangliaPassword: "GangliaPassword",
  GangliaUrl: "GangliaUrl",
  GangliaUser: "GangliaUser",
  HaproxyHealthCheckMethod: "HaproxyHealthCheckMethod",
  HaproxyHealthCheckUrl: "HaproxyHealthCheckUrl",
  HaproxyStatsPassword: "HaproxyStatsPassword",
  HaproxyStatsUrl: "HaproxyStatsUrl",
  HaproxyStatsUser: "HaproxyStatsUser",
  JavaAppServer: "JavaAppServer",
  JavaAppServerVersion: "JavaAppServerVersion",
  Jvm: "Jvm",
  JvmOptions: "JvmOptions",
  JvmVersion: "JvmVersion",
  ManageBundler: "ManageBundler",
  MemcachedMemory: "MemcachedMemory",
  MysqlRootPassword: "MysqlRootPassword",
  MysqlRootPasswordUbiquitous: "MysqlRootPasswordUbiquitous",
  NodejsVersion: "NodejsVersion",
  PassengerVersion: "PassengerVersion",
  RailsStack: "RailsStack",
  RubyVersion: "RubyVersion",
  RubygemsVersion: "RubygemsVersion"
};
var LayerType = {
  aws_flow_ruby: "aws-flow-ruby",
  custom: "custom",
  db_master: "db-master",
  ecs_cluster: "ecs-cluster",
  java_app: "java-app",
  lb: "lb",
  memcached: "memcached",
  monitoring_master: "monitoring-master",
  nodejs_app: "nodejs-app",
  php_app: "php-app",
  rails_app: "rails-app",
  web: "web"
};
var VirtualizationType = {
  hvm: "hvm",
  paravirtual: "paravirtual"
};

// src/protocols/Aws_json1_1.ts
var se_AssignInstanceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("AssignInstance");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_AssignInstanceCommand");
var se_AssignVolumeCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("AssignVolume");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_AssignVolumeCommand");
var se_AssociateElasticIpCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("AssociateElasticIp");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_AssociateElasticIpCommand");
var se_AttachElasticLoadBalancerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("AttachElasticLoadBalancer");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_AttachElasticLoadBalancerCommand");
var se_CloneStackCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CloneStack");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CloneStackCommand");
var se_CreateAppCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateApp");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateAppCommand");
var se_CreateDeploymentCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateDeployment");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateDeploymentCommand");
var se_CreateInstanceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateInstance");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateInstanceCommand");
var se_CreateLayerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateLayer");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateLayerCommand");
var se_CreateStackCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateStack");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateStackCommand");
var se_CreateUserProfileCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateUserProfile");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateUserProfileCommand");
var se_DeleteAppCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteApp");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteAppCommand");
var se_DeleteInstanceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteInstance");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteInstanceCommand");
var se_DeleteLayerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteLayer");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteLayerCommand");
var se_DeleteStackCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteStack");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteStackCommand");
var se_DeleteUserProfileCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteUserProfile");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteUserProfileCommand");
var se_DeregisterEcsClusterCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeregisterEcsCluster");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeregisterEcsClusterCommand");
var se_DeregisterElasticIpCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeregisterElasticIp");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeregisterElasticIpCommand");
var se_DeregisterInstanceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeregisterInstance");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeregisterInstanceCommand");
var se_DeregisterRdsDbInstanceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeregisterRdsDbInstance");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeregisterRdsDbInstanceCommand");
var se_DeregisterVolumeCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeregisterVolume");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeregisterVolumeCommand");
var se_DescribeAgentVersionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeAgentVersions");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeAgentVersionsCommand");
var se_DescribeAppsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeApps");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeAppsCommand");
var se_DescribeCommandsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeCommands");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeCommandsCommand");
var se_DescribeDeploymentsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeDeployments");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeDeploymentsCommand");
var se_DescribeEcsClustersCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeEcsClusters");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeEcsClustersCommand");
var se_DescribeElasticIpsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeElasticIps");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeElasticIpsCommand");
var se_DescribeElasticLoadBalancersCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeElasticLoadBalancers");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeElasticLoadBalancersCommand");
var se_DescribeInstancesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeInstances");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeInstancesCommand");
var se_DescribeLayersCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeLayers");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeLayersCommand");
var se_DescribeLoadBasedAutoScalingCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeLoadBasedAutoScaling");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeLoadBasedAutoScalingCommand");
var se_DescribeMyUserProfileCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeMyUserProfile");
  const body = "{}";
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeMyUserProfileCommand");
var se_DescribeOperatingSystemsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeOperatingSystems");
  const body = "{}";
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeOperatingSystemsCommand");
var se_DescribePermissionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribePermissions");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribePermissionsCommand");
var se_DescribeRaidArraysCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeRaidArrays");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeRaidArraysCommand");
var se_DescribeRdsDbInstancesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeRdsDbInstances");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeRdsDbInstancesCommand");
var se_DescribeServiceErrorsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeServiceErrors");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeServiceErrorsCommand");
var se_DescribeStackProvisioningParametersCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeStackProvisioningParameters");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeStackProvisioningParametersCommand");
var se_DescribeStacksCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeStacks");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeStacksCommand");
var se_DescribeStackSummaryCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeStackSummary");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeStackSummaryCommand");
var se_DescribeTimeBasedAutoScalingCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeTimeBasedAutoScaling");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeTimeBasedAutoScalingCommand");
var se_DescribeUserProfilesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeUserProfiles");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeUserProfilesCommand");
var se_DescribeVolumesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeVolumes");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeVolumesCommand");
var se_DetachElasticLoadBalancerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DetachElasticLoadBalancer");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DetachElasticLoadBalancerCommand");
var se_DisassociateElasticIpCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DisassociateElasticIp");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DisassociateElasticIpCommand");
var se_GetHostnameSuggestionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetHostnameSuggestion");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetHostnameSuggestionCommand");
var se_GrantAccessCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GrantAccess");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GrantAccessCommand");
var se_ListTagsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListTags");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListTagsCommand");
var se_RebootInstanceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("RebootInstance");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_RebootInstanceCommand");
var se_RegisterEcsClusterCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("RegisterEcsCluster");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_RegisterEcsClusterCommand");
var se_RegisterElasticIpCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("RegisterElasticIp");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_RegisterElasticIpCommand");
var se_RegisterInstanceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("RegisterInstance");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_RegisterInstanceCommand");
var se_RegisterRdsDbInstanceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("RegisterRdsDbInstance");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_RegisterRdsDbInstanceCommand");
var se_RegisterVolumeCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("RegisterVolume");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_RegisterVolumeCommand");
var se_SetLoadBasedAutoScalingCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("SetLoadBasedAutoScaling");
  let body;
  body = JSON.stringify(se_SetLoadBasedAutoScalingRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_SetLoadBasedAutoScalingCommand");
var se_SetPermissionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("SetPermission");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_SetPermissionCommand");
var se_SetTimeBasedAutoScalingCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("SetTimeBasedAutoScaling");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_SetTimeBasedAutoScalingCommand");
var se_StartInstanceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("StartInstance");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_StartInstanceCommand");
var se_StartStackCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("StartStack");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_StartStackCommand");
var se_StopInstanceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("StopInstance");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_StopInstanceCommand");
var se_StopStackCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("StopStack");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_StopStackCommand");
var se_TagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("TagResource");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_TagResourceCommand");
var se_UnassignInstanceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UnassignInstance");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UnassignInstanceCommand");
var se_UnassignVolumeCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UnassignVolume");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UnassignVolumeCommand");
var se_UntagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UntagResource");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UntagResourceCommand");
var se_UpdateAppCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateApp");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateAppCommand");
var se_UpdateElasticIpCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateElasticIp");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateElasticIpCommand");
var se_UpdateInstanceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateInstance");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateInstanceCommand");
var se_UpdateLayerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateLayer");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateLayerCommand");
var se_UpdateMyUserProfileCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateMyUserProfile");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateMyUserProfileCommand");
var se_UpdateRdsDbInstanceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateRdsDbInstance");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateRdsDbInstanceCommand");
var se_UpdateStackCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateStack");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateStackCommand");
var se_UpdateUserProfileCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateUserProfile");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateUserProfileCommand");
var se_UpdateVolumeCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateVolume");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateVolumeCommand");
var de_AssignInstanceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_AssignInstanceCommand");
var de_AssignVolumeCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_AssignVolumeCommand");
var de_AssociateElasticIpCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_AssociateElasticIpCommand");
var de_AttachElasticLoadBalancerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_AttachElasticLoadBalancerCommand");
var de_CloneStackCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CloneStackCommand");
var de_CreateAppCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateAppCommand");
var de_CreateDeploymentCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateDeploymentCommand");
var de_CreateInstanceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateInstanceCommand");
var de_CreateLayerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateLayerCommand");
var de_CreateStackCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateStackCommand");
var de_CreateUserProfileCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateUserProfileCommand");
var de_DeleteAppCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteAppCommand");
var de_DeleteInstanceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteInstanceCommand");
var de_DeleteLayerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteLayerCommand");
var de_DeleteStackCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteStackCommand");
var de_DeleteUserProfileCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteUserProfileCommand");
var de_DeregisterEcsClusterCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeregisterEcsClusterCommand");
var de_DeregisterElasticIpCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeregisterElasticIpCommand");
var de_DeregisterInstanceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeregisterInstanceCommand");
var de_DeregisterRdsDbInstanceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeregisterRdsDbInstanceCommand");
var de_DeregisterVolumeCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeregisterVolumeCommand");
var de_DescribeAgentVersionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeAgentVersionsCommand");
var de_DescribeAppsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeAppsCommand");
var de_DescribeCommandsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeCommandsCommand");
var de_DescribeDeploymentsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeDeploymentsCommand");
var de_DescribeEcsClustersCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeEcsClustersCommand");
var de_DescribeElasticIpsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeElasticIpsCommand");
var de_DescribeElasticLoadBalancersCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeElasticLoadBalancersCommand");
var de_DescribeInstancesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeInstancesCommand");
var de_DescribeLayersCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeLayersCommand");
var de_DescribeLoadBasedAutoScalingCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_DescribeLoadBasedAutoScalingResult(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeLoadBasedAutoScalingCommand");
var de_DescribeMyUserProfileCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeMyUserProfileCommand");
var de_DescribeOperatingSystemsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeOperatingSystemsCommand");
var de_DescribePermissionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribePermissionsCommand");
var de_DescribeRaidArraysCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeRaidArraysCommand");
var de_DescribeRdsDbInstancesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeRdsDbInstancesCommand");
var de_DescribeServiceErrorsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeServiceErrorsCommand");
var de_DescribeStackProvisioningParametersCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeStackProvisioningParametersCommand");
var de_DescribeStacksCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeStacksCommand");
var de_DescribeStackSummaryCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeStackSummaryCommand");
var de_DescribeTimeBasedAutoScalingCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeTimeBasedAutoScalingCommand");
var de_DescribeUserProfilesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeUserProfilesCommand");
var de_DescribeVolumesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeVolumesCommand");
var de_DetachElasticLoadBalancerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DetachElasticLoadBalancerCommand");
var de_DisassociateElasticIpCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DisassociateElasticIpCommand");
var de_GetHostnameSuggestionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetHostnameSuggestionCommand");
var de_GrantAccessCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GrantAccessCommand");
var de_ListTagsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListTagsCommand");
var de_RebootInstanceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_RebootInstanceCommand");
var de_RegisterEcsClusterCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_RegisterEcsClusterCommand");
var de_RegisterElasticIpCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_RegisterElasticIpCommand");
var de_RegisterInstanceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_RegisterInstanceCommand");
var de_RegisterRdsDbInstanceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_RegisterRdsDbInstanceCommand");
var de_RegisterVolumeCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_RegisterVolumeCommand");
var de_SetLoadBasedAutoScalingCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_SetLoadBasedAutoScalingCommand");
var de_SetPermissionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_SetPermissionCommand");
var de_SetTimeBasedAutoScalingCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_SetTimeBasedAutoScalingCommand");
var de_StartInstanceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_StartInstanceCommand");
var de_StartStackCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_StartStackCommand");
var de_StopInstanceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_StopInstanceCommand");
var de_StopStackCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_StopStackCommand");
var de_TagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_TagResourceCommand");
var de_UnassignInstanceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_UnassignInstanceCommand");
var de_UnassignVolumeCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_UnassignVolumeCommand");
var de_UntagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_UntagResourceCommand");
var de_UpdateAppCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_UpdateAppCommand");
var de_UpdateElasticIpCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_UpdateElasticIpCommand");
var de_UpdateInstanceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_UpdateInstanceCommand");
var de_UpdateLayerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_UpdateLayerCommand");
var de_UpdateMyUserProfileCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_UpdateMyUserProfileCommand");
var de_UpdateRdsDbInstanceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_UpdateRdsDbInstanceCommand");
var de_UpdateStackCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_UpdateStackCommand");
var de_UpdateUserProfileCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_UpdateUserProfileCommand");
var de_UpdateVolumeCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_UpdateVolumeCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await (0, import_core2.parseJsonErrorBody)(output.body, context)
  };
  const errorCode = (0, import_core2.loadRestJsonErrorCode)(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFoundException":
    case "com.amazonaws.opsworks#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    case "ValidationException":
    case "com.amazonaws.opsworks#ValidationException":
      throw await de_ValidationExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var de_ResourceNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ResourceNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ResourceNotFoundExceptionRes");
var de_ValidationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ValidationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ValidationExceptionRes");
var se_AutoScalingThresholds = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    Alarms: import_smithy_client._json,
    CpuThreshold: import_smithy_client.serializeFloat,
    IgnoreMetricsTime: [],
    InstanceCount: [],
    LoadThreshold: import_smithy_client.serializeFloat,
    MemoryThreshold: import_smithy_client.serializeFloat,
    ThresholdsWaitTime: []
  });
}, "se_AutoScalingThresholds");
var se_SetLoadBasedAutoScalingRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    DownScaling: (_) => se_AutoScalingThresholds(_, context),
    Enable: [],
    LayerId: [],
    UpScaling: (_) => se_AutoScalingThresholds(_, context)
  });
}, "se_SetLoadBasedAutoScalingRequest");
var de_AutoScalingThresholds = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Alarms: import_smithy_client._json,
    CpuThreshold: import_smithy_client.limitedParseDouble,
    IgnoreMetricsTime: import_smithy_client.expectInt32,
    InstanceCount: import_smithy_client.expectInt32,
    LoadThreshold: import_smithy_client.limitedParseDouble,
    MemoryThreshold: import_smithy_client.limitedParseDouble,
    ThresholdsWaitTime: import_smithy_client.expectInt32
  });
}, "de_AutoScalingThresholds");
var de_DescribeLoadBasedAutoScalingResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    LoadBasedAutoScalingConfigurations: (_) => de_LoadBasedAutoScalingConfigurations(_, context)
  });
}, "de_DescribeLoadBasedAutoScalingResult");
var de_LoadBasedAutoScalingConfiguration = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    DownScaling: (_) => de_AutoScalingThresholds(_, context),
    Enable: import_smithy_client.expectBoolean,
    LayerId: import_smithy_client.expectString,
    UpScaling: (_) => de_AutoScalingThresholds(_, context)
  });
}, "de_LoadBasedAutoScalingConfiguration");
var de_LoadBasedAutoScalingConfigurations = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_LoadBasedAutoScalingConfiguration(entry, context);
  });
  return retVal;
}, "de_LoadBasedAutoScalingConfigurations");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var throwDefaultError = (0, import_smithy_client.withBaseException)(OpsWorksServiceException);
var buildHttpRpcRequest = /* @__PURE__ */ __name(async (context, headers, path, resolvedHostname, body) => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const contents = {
    protocol,
    hostname,
    port,
    method: "POST",
    path: basePath.endsWith("/") ? basePath.slice(0, -1) + path : basePath + path,
    headers
  };
  if (resolvedHostname !== void 0) {
    contents.hostname = resolvedHostname;
  }
  if (body !== void 0) {
    contents.body = body;
  }
  return new import_protocol_http.HttpRequest(contents);
}, "buildHttpRpcRequest");
function sharedHeaders(operation) {
  return {
    "content-type": "application/x-amz-json-1.1",
    "x-amz-target": `OpsWorks_20130218.${operation}`
  };
}
__name(sharedHeaders, "sharedHeaders");

// src/commands/AssignInstanceCommand.ts
var _AssignInstanceCommand = class _AssignInstanceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "AssignInstance", {}).n("OpsWorksClient", "AssignInstanceCommand").f(void 0, void 0).ser(se_AssignInstanceCommand).de(de_AssignInstanceCommand).build() {
};
__name(_AssignInstanceCommand, "AssignInstanceCommand");
var AssignInstanceCommand = _AssignInstanceCommand;

// src/commands/AssignVolumeCommand.ts




var _AssignVolumeCommand = class _AssignVolumeCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "AssignVolume", {}).n("OpsWorksClient", "AssignVolumeCommand").f(void 0, void 0).ser(se_AssignVolumeCommand).de(de_AssignVolumeCommand).build() {
};
__name(_AssignVolumeCommand, "AssignVolumeCommand");
var AssignVolumeCommand = _AssignVolumeCommand;

// src/commands/AssociateElasticIpCommand.ts




var _AssociateElasticIpCommand = class _AssociateElasticIpCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "AssociateElasticIp", {}).n("OpsWorksClient", "AssociateElasticIpCommand").f(void 0, void 0).ser(se_AssociateElasticIpCommand).de(de_AssociateElasticIpCommand).build() {
};
__name(_AssociateElasticIpCommand, "AssociateElasticIpCommand");
var AssociateElasticIpCommand = _AssociateElasticIpCommand;

// src/commands/AttachElasticLoadBalancerCommand.ts




var _AttachElasticLoadBalancerCommand = class _AttachElasticLoadBalancerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "AttachElasticLoadBalancer", {}).n("OpsWorksClient", "AttachElasticLoadBalancerCommand").f(void 0, void 0).ser(se_AttachElasticLoadBalancerCommand).de(de_AttachElasticLoadBalancerCommand).build() {
};
__name(_AttachElasticLoadBalancerCommand, "AttachElasticLoadBalancerCommand");
var AttachElasticLoadBalancerCommand = _AttachElasticLoadBalancerCommand;

// src/commands/CloneStackCommand.ts




var _CloneStackCommand = class _CloneStackCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "CloneStack", {}).n("OpsWorksClient", "CloneStackCommand").f(void 0, void 0).ser(se_CloneStackCommand).de(de_CloneStackCommand).build() {
};
__name(_CloneStackCommand, "CloneStackCommand");
var CloneStackCommand = _CloneStackCommand;

// src/commands/CreateAppCommand.ts




var _CreateAppCommand = class _CreateAppCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "CreateApp", {}).n("OpsWorksClient", "CreateAppCommand").f(void 0, void 0).ser(se_CreateAppCommand).de(de_CreateAppCommand).build() {
};
__name(_CreateAppCommand, "CreateAppCommand");
var CreateAppCommand = _CreateAppCommand;

// src/commands/CreateDeploymentCommand.ts




var _CreateDeploymentCommand = class _CreateDeploymentCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "CreateDeployment", {}).n("OpsWorksClient", "CreateDeploymentCommand").f(void 0, void 0).ser(se_CreateDeploymentCommand).de(de_CreateDeploymentCommand).build() {
};
__name(_CreateDeploymentCommand, "CreateDeploymentCommand");
var CreateDeploymentCommand = _CreateDeploymentCommand;

// src/commands/CreateInstanceCommand.ts




var _CreateInstanceCommand = class _CreateInstanceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "CreateInstance", {}).n("OpsWorksClient", "CreateInstanceCommand").f(void 0, void 0).ser(se_CreateInstanceCommand).de(de_CreateInstanceCommand).build() {
};
__name(_CreateInstanceCommand, "CreateInstanceCommand");
var CreateInstanceCommand = _CreateInstanceCommand;

// src/commands/CreateLayerCommand.ts




var _CreateLayerCommand = class _CreateLayerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "CreateLayer", {}).n("OpsWorksClient", "CreateLayerCommand").f(void 0, void 0).ser(se_CreateLayerCommand).de(de_CreateLayerCommand).build() {
};
__name(_CreateLayerCommand, "CreateLayerCommand");
var CreateLayerCommand = _CreateLayerCommand;

// src/commands/CreateStackCommand.ts




var _CreateStackCommand = class _CreateStackCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "CreateStack", {}).n("OpsWorksClient", "CreateStackCommand").f(void 0, void 0).ser(se_CreateStackCommand).de(de_CreateStackCommand).build() {
};
__name(_CreateStackCommand, "CreateStackCommand");
var CreateStackCommand = _CreateStackCommand;

// src/commands/CreateUserProfileCommand.ts




var _CreateUserProfileCommand = class _CreateUserProfileCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "CreateUserProfile", {}).n("OpsWorksClient", "CreateUserProfileCommand").f(void 0, void 0).ser(se_CreateUserProfileCommand).de(de_CreateUserProfileCommand).build() {
};
__name(_CreateUserProfileCommand, "CreateUserProfileCommand");
var CreateUserProfileCommand = _CreateUserProfileCommand;

// src/commands/DeleteAppCommand.ts




var _DeleteAppCommand = class _DeleteAppCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "DeleteApp", {}).n("OpsWorksClient", "DeleteAppCommand").f(void 0, void 0).ser(se_DeleteAppCommand).de(de_DeleteAppCommand).build() {
};
__name(_DeleteAppCommand, "DeleteAppCommand");
var DeleteAppCommand = _DeleteAppCommand;

// src/commands/DeleteInstanceCommand.ts




var _DeleteInstanceCommand = class _DeleteInstanceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "DeleteInstance", {}).n("OpsWorksClient", "DeleteInstanceCommand").f(void 0, void 0).ser(se_DeleteInstanceCommand).de(de_DeleteInstanceCommand).build() {
};
__name(_DeleteInstanceCommand, "DeleteInstanceCommand");
var DeleteInstanceCommand = _DeleteInstanceCommand;

// src/commands/DeleteLayerCommand.ts




var _DeleteLayerCommand = class _DeleteLayerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "DeleteLayer", {}).n("OpsWorksClient", "DeleteLayerCommand").f(void 0, void 0).ser(se_DeleteLayerCommand).de(de_DeleteLayerCommand).build() {
};
__name(_DeleteLayerCommand, "DeleteLayerCommand");
var DeleteLayerCommand = _DeleteLayerCommand;

// src/commands/DeleteStackCommand.ts




var _DeleteStackCommand = class _DeleteStackCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "DeleteStack", {}).n("OpsWorksClient", "DeleteStackCommand").f(void 0, void 0).ser(se_DeleteStackCommand).de(de_DeleteStackCommand).build() {
};
__name(_DeleteStackCommand, "DeleteStackCommand");
var DeleteStackCommand = _DeleteStackCommand;

// src/commands/DeleteUserProfileCommand.ts




var _DeleteUserProfileCommand = class _DeleteUserProfileCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "DeleteUserProfile", {}).n("OpsWorksClient", "DeleteUserProfileCommand").f(void 0, void 0).ser(se_DeleteUserProfileCommand).de(de_DeleteUserProfileCommand).build() {
};
__name(_DeleteUserProfileCommand, "DeleteUserProfileCommand");
var DeleteUserProfileCommand = _DeleteUserProfileCommand;

// src/commands/DeregisterEcsClusterCommand.ts




var _DeregisterEcsClusterCommand = class _DeregisterEcsClusterCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "DeregisterEcsCluster", {}).n("OpsWorksClient", "DeregisterEcsClusterCommand").f(void 0, void 0).ser(se_DeregisterEcsClusterCommand).de(de_DeregisterEcsClusterCommand).build() {
};
__name(_DeregisterEcsClusterCommand, "DeregisterEcsClusterCommand");
var DeregisterEcsClusterCommand = _DeregisterEcsClusterCommand;

// src/commands/DeregisterElasticIpCommand.ts




var _DeregisterElasticIpCommand = class _DeregisterElasticIpCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "DeregisterElasticIp", {}).n("OpsWorksClient", "DeregisterElasticIpCommand").f(void 0, void 0).ser(se_DeregisterElasticIpCommand).de(de_DeregisterElasticIpCommand).build() {
};
__name(_DeregisterElasticIpCommand, "DeregisterElasticIpCommand");
var DeregisterElasticIpCommand = _DeregisterElasticIpCommand;

// src/commands/DeregisterInstanceCommand.ts




var _DeregisterInstanceCommand = class _DeregisterInstanceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "DeregisterInstance", {}).n("OpsWorksClient", "DeregisterInstanceCommand").f(void 0, void 0).ser(se_DeregisterInstanceCommand).de(de_DeregisterInstanceCommand).build() {
};
__name(_DeregisterInstanceCommand, "DeregisterInstanceCommand");
var DeregisterInstanceCommand = _DeregisterInstanceCommand;

// src/commands/DeregisterRdsDbInstanceCommand.ts




var _DeregisterRdsDbInstanceCommand = class _DeregisterRdsDbInstanceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "DeregisterRdsDbInstance", {}).n("OpsWorksClient", "DeregisterRdsDbInstanceCommand").f(void 0, void 0).ser(se_DeregisterRdsDbInstanceCommand).de(de_DeregisterRdsDbInstanceCommand).build() {
};
__name(_DeregisterRdsDbInstanceCommand, "DeregisterRdsDbInstanceCommand");
var DeregisterRdsDbInstanceCommand = _DeregisterRdsDbInstanceCommand;

// src/commands/DeregisterVolumeCommand.ts




var _DeregisterVolumeCommand = class _DeregisterVolumeCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "DeregisterVolume", {}).n("OpsWorksClient", "DeregisterVolumeCommand").f(void 0, void 0).ser(se_DeregisterVolumeCommand).de(de_DeregisterVolumeCommand).build() {
};
__name(_DeregisterVolumeCommand, "DeregisterVolumeCommand");
var DeregisterVolumeCommand = _DeregisterVolumeCommand;

// src/commands/DescribeAgentVersionsCommand.ts




var _DescribeAgentVersionsCommand = class _DescribeAgentVersionsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "DescribeAgentVersions", {}).n("OpsWorksClient", "DescribeAgentVersionsCommand").f(void 0, void 0).ser(se_DescribeAgentVersionsCommand).de(de_DescribeAgentVersionsCommand).build() {
};
__name(_DescribeAgentVersionsCommand, "DescribeAgentVersionsCommand");
var DescribeAgentVersionsCommand = _DescribeAgentVersionsCommand;

// src/commands/DescribeAppsCommand.ts




var _DescribeAppsCommand = class _DescribeAppsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "DescribeApps", {}).n("OpsWorksClient", "DescribeAppsCommand").f(void 0, void 0).ser(se_DescribeAppsCommand).de(de_DescribeAppsCommand).build() {
};
__name(_DescribeAppsCommand, "DescribeAppsCommand");
var DescribeAppsCommand = _DescribeAppsCommand;

// src/commands/DescribeCommandsCommand.ts




var _DescribeCommandsCommand = class _DescribeCommandsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "DescribeCommands", {}).n("OpsWorksClient", "DescribeCommandsCommand").f(void 0, void 0).ser(se_DescribeCommandsCommand).de(de_DescribeCommandsCommand).build() {
};
__name(_DescribeCommandsCommand, "DescribeCommandsCommand");
var DescribeCommandsCommand = _DescribeCommandsCommand;

// src/commands/DescribeDeploymentsCommand.ts




var _DescribeDeploymentsCommand = class _DescribeDeploymentsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "DescribeDeployments", {}).n("OpsWorksClient", "DescribeDeploymentsCommand").f(void 0, void 0).ser(se_DescribeDeploymentsCommand).de(de_DescribeDeploymentsCommand).build() {
};
__name(_DescribeDeploymentsCommand, "DescribeDeploymentsCommand");
var DescribeDeploymentsCommand = _DescribeDeploymentsCommand;

// src/commands/DescribeEcsClustersCommand.ts




var _DescribeEcsClustersCommand = class _DescribeEcsClustersCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "DescribeEcsClusters", {}).n("OpsWorksClient", "DescribeEcsClustersCommand").f(void 0, void 0).ser(se_DescribeEcsClustersCommand).de(de_DescribeEcsClustersCommand).build() {
};
__name(_DescribeEcsClustersCommand, "DescribeEcsClustersCommand");
var DescribeEcsClustersCommand = _DescribeEcsClustersCommand;

// src/commands/DescribeElasticIpsCommand.ts




var _DescribeElasticIpsCommand = class _DescribeElasticIpsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "DescribeElasticIps", {}).n("OpsWorksClient", "DescribeElasticIpsCommand").f(void 0, void 0).ser(se_DescribeElasticIpsCommand).de(de_DescribeElasticIpsCommand).build() {
};
__name(_DescribeElasticIpsCommand, "DescribeElasticIpsCommand");
var DescribeElasticIpsCommand = _DescribeElasticIpsCommand;

// src/commands/DescribeElasticLoadBalancersCommand.ts




var _DescribeElasticLoadBalancersCommand = class _DescribeElasticLoadBalancersCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "DescribeElasticLoadBalancers", {}).n("OpsWorksClient", "DescribeElasticLoadBalancersCommand").f(void 0, void 0).ser(se_DescribeElasticLoadBalancersCommand).de(de_DescribeElasticLoadBalancersCommand).build() {
};
__name(_DescribeElasticLoadBalancersCommand, "DescribeElasticLoadBalancersCommand");
var DescribeElasticLoadBalancersCommand = _DescribeElasticLoadBalancersCommand;

// src/commands/DescribeInstancesCommand.ts




var _DescribeInstancesCommand = class _DescribeInstancesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "DescribeInstances", {}).n("OpsWorksClient", "DescribeInstancesCommand").f(void 0, void 0).ser(se_DescribeInstancesCommand).de(de_DescribeInstancesCommand).build() {
};
__name(_DescribeInstancesCommand, "DescribeInstancesCommand");
var DescribeInstancesCommand = _DescribeInstancesCommand;

// src/commands/DescribeLayersCommand.ts




var _DescribeLayersCommand = class _DescribeLayersCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "DescribeLayers", {}).n("OpsWorksClient", "DescribeLayersCommand").f(void 0, void 0).ser(se_DescribeLayersCommand).de(de_DescribeLayersCommand).build() {
};
__name(_DescribeLayersCommand, "DescribeLayersCommand");
var DescribeLayersCommand = _DescribeLayersCommand;

// src/commands/DescribeLoadBasedAutoScalingCommand.ts




var _DescribeLoadBasedAutoScalingCommand = class _DescribeLoadBasedAutoScalingCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "DescribeLoadBasedAutoScaling", {}).n("OpsWorksClient", "DescribeLoadBasedAutoScalingCommand").f(void 0, void 0).ser(se_DescribeLoadBasedAutoScalingCommand).de(de_DescribeLoadBasedAutoScalingCommand).build() {
};
__name(_DescribeLoadBasedAutoScalingCommand, "DescribeLoadBasedAutoScalingCommand");
var DescribeLoadBasedAutoScalingCommand = _DescribeLoadBasedAutoScalingCommand;

// src/commands/DescribeMyUserProfileCommand.ts




var _DescribeMyUserProfileCommand = class _DescribeMyUserProfileCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "DescribeMyUserProfile", {}).n("OpsWorksClient", "DescribeMyUserProfileCommand").f(void 0, void 0).ser(se_DescribeMyUserProfileCommand).de(de_DescribeMyUserProfileCommand).build() {
};
__name(_DescribeMyUserProfileCommand, "DescribeMyUserProfileCommand");
var DescribeMyUserProfileCommand = _DescribeMyUserProfileCommand;

// src/commands/DescribeOperatingSystemsCommand.ts




var _DescribeOperatingSystemsCommand = class _DescribeOperatingSystemsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "DescribeOperatingSystems", {}).n("OpsWorksClient", "DescribeOperatingSystemsCommand").f(void 0, void 0).ser(se_DescribeOperatingSystemsCommand).de(de_DescribeOperatingSystemsCommand).build() {
};
__name(_DescribeOperatingSystemsCommand, "DescribeOperatingSystemsCommand");
var DescribeOperatingSystemsCommand = _DescribeOperatingSystemsCommand;

// src/commands/DescribePermissionsCommand.ts




var _DescribePermissionsCommand = class _DescribePermissionsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "DescribePermissions", {}).n("OpsWorksClient", "DescribePermissionsCommand").f(void 0, void 0).ser(se_DescribePermissionsCommand).de(de_DescribePermissionsCommand).build() {
};
__name(_DescribePermissionsCommand, "DescribePermissionsCommand");
var DescribePermissionsCommand = _DescribePermissionsCommand;

// src/commands/DescribeRaidArraysCommand.ts




var _DescribeRaidArraysCommand = class _DescribeRaidArraysCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "DescribeRaidArrays", {}).n("OpsWorksClient", "DescribeRaidArraysCommand").f(void 0, void 0).ser(se_DescribeRaidArraysCommand).de(de_DescribeRaidArraysCommand).build() {
};
__name(_DescribeRaidArraysCommand, "DescribeRaidArraysCommand");
var DescribeRaidArraysCommand = _DescribeRaidArraysCommand;

// src/commands/DescribeRdsDbInstancesCommand.ts




var _DescribeRdsDbInstancesCommand = class _DescribeRdsDbInstancesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "DescribeRdsDbInstances", {}).n("OpsWorksClient", "DescribeRdsDbInstancesCommand").f(void 0, void 0).ser(se_DescribeRdsDbInstancesCommand).de(de_DescribeRdsDbInstancesCommand).build() {
};
__name(_DescribeRdsDbInstancesCommand, "DescribeRdsDbInstancesCommand");
var DescribeRdsDbInstancesCommand = _DescribeRdsDbInstancesCommand;

// src/commands/DescribeServiceErrorsCommand.ts




var _DescribeServiceErrorsCommand = class _DescribeServiceErrorsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "DescribeServiceErrors", {}).n("OpsWorksClient", "DescribeServiceErrorsCommand").f(void 0, void 0).ser(se_DescribeServiceErrorsCommand).de(de_DescribeServiceErrorsCommand).build() {
};
__name(_DescribeServiceErrorsCommand, "DescribeServiceErrorsCommand");
var DescribeServiceErrorsCommand = _DescribeServiceErrorsCommand;

// src/commands/DescribeStackProvisioningParametersCommand.ts




var _DescribeStackProvisioningParametersCommand = class _DescribeStackProvisioningParametersCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "DescribeStackProvisioningParameters", {}).n("OpsWorksClient", "DescribeStackProvisioningParametersCommand").f(void 0, void 0).ser(se_DescribeStackProvisioningParametersCommand).de(de_DescribeStackProvisioningParametersCommand).build() {
};
__name(_DescribeStackProvisioningParametersCommand, "DescribeStackProvisioningParametersCommand");
var DescribeStackProvisioningParametersCommand = _DescribeStackProvisioningParametersCommand;

// src/commands/DescribeStacksCommand.ts




var _DescribeStacksCommand = class _DescribeStacksCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "DescribeStacks", {}).n("OpsWorksClient", "DescribeStacksCommand").f(void 0, void 0).ser(se_DescribeStacksCommand).de(de_DescribeStacksCommand).build() {
};
__name(_DescribeStacksCommand, "DescribeStacksCommand");
var DescribeStacksCommand = _DescribeStacksCommand;

// src/commands/DescribeStackSummaryCommand.ts




var _DescribeStackSummaryCommand = class _DescribeStackSummaryCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "DescribeStackSummary", {}).n("OpsWorksClient", "DescribeStackSummaryCommand").f(void 0, void 0).ser(se_DescribeStackSummaryCommand).de(de_DescribeStackSummaryCommand).build() {
};
__name(_DescribeStackSummaryCommand, "DescribeStackSummaryCommand");
var DescribeStackSummaryCommand = _DescribeStackSummaryCommand;

// src/commands/DescribeTimeBasedAutoScalingCommand.ts




var _DescribeTimeBasedAutoScalingCommand = class _DescribeTimeBasedAutoScalingCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "DescribeTimeBasedAutoScaling", {}).n("OpsWorksClient", "DescribeTimeBasedAutoScalingCommand").f(void 0, void 0).ser(se_DescribeTimeBasedAutoScalingCommand).de(de_DescribeTimeBasedAutoScalingCommand).build() {
};
__name(_DescribeTimeBasedAutoScalingCommand, "DescribeTimeBasedAutoScalingCommand");
var DescribeTimeBasedAutoScalingCommand = _DescribeTimeBasedAutoScalingCommand;

// src/commands/DescribeUserProfilesCommand.ts




var _DescribeUserProfilesCommand = class _DescribeUserProfilesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "DescribeUserProfiles", {}).n("OpsWorksClient", "DescribeUserProfilesCommand").f(void 0, void 0).ser(se_DescribeUserProfilesCommand).de(de_DescribeUserProfilesCommand).build() {
};
__name(_DescribeUserProfilesCommand, "DescribeUserProfilesCommand");
var DescribeUserProfilesCommand = _DescribeUserProfilesCommand;

// src/commands/DescribeVolumesCommand.ts




var _DescribeVolumesCommand = class _DescribeVolumesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "DescribeVolumes", {}).n("OpsWorksClient", "DescribeVolumesCommand").f(void 0, void 0).ser(se_DescribeVolumesCommand).de(de_DescribeVolumesCommand).build() {
};
__name(_DescribeVolumesCommand, "DescribeVolumesCommand");
var DescribeVolumesCommand = _DescribeVolumesCommand;

// src/commands/DetachElasticLoadBalancerCommand.ts




var _DetachElasticLoadBalancerCommand = class _DetachElasticLoadBalancerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "DetachElasticLoadBalancer", {}).n("OpsWorksClient", "DetachElasticLoadBalancerCommand").f(void 0, void 0).ser(se_DetachElasticLoadBalancerCommand).de(de_DetachElasticLoadBalancerCommand).build() {
};
__name(_DetachElasticLoadBalancerCommand, "DetachElasticLoadBalancerCommand");
var DetachElasticLoadBalancerCommand = _DetachElasticLoadBalancerCommand;

// src/commands/DisassociateElasticIpCommand.ts




var _DisassociateElasticIpCommand = class _DisassociateElasticIpCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "DisassociateElasticIp", {}).n("OpsWorksClient", "DisassociateElasticIpCommand").f(void 0, void 0).ser(se_DisassociateElasticIpCommand).de(de_DisassociateElasticIpCommand).build() {
};
__name(_DisassociateElasticIpCommand, "DisassociateElasticIpCommand");
var DisassociateElasticIpCommand = _DisassociateElasticIpCommand;

// src/commands/GetHostnameSuggestionCommand.ts




var _GetHostnameSuggestionCommand = class _GetHostnameSuggestionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "GetHostnameSuggestion", {}).n("OpsWorksClient", "GetHostnameSuggestionCommand").f(void 0, void 0).ser(se_GetHostnameSuggestionCommand).de(de_GetHostnameSuggestionCommand).build() {
};
__name(_GetHostnameSuggestionCommand, "GetHostnameSuggestionCommand");
var GetHostnameSuggestionCommand = _GetHostnameSuggestionCommand;

// src/commands/GrantAccessCommand.ts




var _GrantAccessCommand = class _GrantAccessCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "GrantAccess", {}).n("OpsWorksClient", "GrantAccessCommand").f(void 0, void 0).ser(se_GrantAccessCommand).de(de_GrantAccessCommand).build() {
};
__name(_GrantAccessCommand, "GrantAccessCommand");
var GrantAccessCommand = _GrantAccessCommand;

// src/commands/ListTagsCommand.ts




var _ListTagsCommand = class _ListTagsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "ListTags", {}).n("OpsWorksClient", "ListTagsCommand").f(void 0, void 0).ser(se_ListTagsCommand).de(de_ListTagsCommand).build() {
};
__name(_ListTagsCommand, "ListTagsCommand");
var ListTagsCommand = _ListTagsCommand;

// src/commands/RebootInstanceCommand.ts




var _RebootInstanceCommand = class _RebootInstanceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "RebootInstance", {}).n("OpsWorksClient", "RebootInstanceCommand").f(void 0, void 0).ser(se_RebootInstanceCommand).de(de_RebootInstanceCommand).build() {
};
__name(_RebootInstanceCommand, "RebootInstanceCommand");
var RebootInstanceCommand = _RebootInstanceCommand;

// src/commands/RegisterEcsClusterCommand.ts




var _RegisterEcsClusterCommand = class _RegisterEcsClusterCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "RegisterEcsCluster", {}).n("OpsWorksClient", "RegisterEcsClusterCommand").f(void 0, void 0).ser(se_RegisterEcsClusterCommand).de(de_RegisterEcsClusterCommand).build() {
};
__name(_RegisterEcsClusterCommand, "RegisterEcsClusterCommand");
var RegisterEcsClusterCommand = _RegisterEcsClusterCommand;

// src/commands/RegisterElasticIpCommand.ts




var _RegisterElasticIpCommand = class _RegisterElasticIpCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "RegisterElasticIp", {}).n("OpsWorksClient", "RegisterElasticIpCommand").f(void 0, void 0).ser(se_RegisterElasticIpCommand).de(de_RegisterElasticIpCommand).build() {
};
__name(_RegisterElasticIpCommand, "RegisterElasticIpCommand");
var RegisterElasticIpCommand = _RegisterElasticIpCommand;

// src/commands/RegisterInstanceCommand.ts




var _RegisterInstanceCommand = class _RegisterInstanceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "RegisterInstance", {}).n("OpsWorksClient", "RegisterInstanceCommand").f(void 0, void 0).ser(se_RegisterInstanceCommand).de(de_RegisterInstanceCommand).build() {
};
__name(_RegisterInstanceCommand, "RegisterInstanceCommand");
var RegisterInstanceCommand = _RegisterInstanceCommand;

// src/commands/RegisterRdsDbInstanceCommand.ts




var _RegisterRdsDbInstanceCommand = class _RegisterRdsDbInstanceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "RegisterRdsDbInstance", {}).n("OpsWorksClient", "RegisterRdsDbInstanceCommand").f(void 0, void 0).ser(se_RegisterRdsDbInstanceCommand).de(de_RegisterRdsDbInstanceCommand).build() {
};
__name(_RegisterRdsDbInstanceCommand, "RegisterRdsDbInstanceCommand");
var RegisterRdsDbInstanceCommand = _RegisterRdsDbInstanceCommand;

// src/commands/RegisterVolumeCommand.ts




var _RegisterVolumeCommand = class _RegisterVolumeCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "RegisterVolume", {}).n("OpsWorksClient", "RegisterVolumeCommand").f(void 0, void 0).ser(se_RegisterVolumeCommand).de(de_RegisterVolumeCommand).build() {
};
__name(_RegisterVolumeCommand, "RegisterVolumeCommand");
var RegisterVolumeCommand = _RegisterVolumeCommand;

// src/commands/SetLoadBasedAutoScalingCommand.ts




var _SetLoadBasedAutoScalingCommand = class _SetLoadBasedAutoScalingCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "SetLoadBasedAutoScaling", {}).n("OpsWorksClient", "SetLoadBasedAutoScalingCommand").f(void 0, void 0).ser(se_SetLoadBasedAutoScalingCommand).de(de_SetLoadBasedAutoScalingCommand).build() {
};
__name(_SetLoadBasedAutoScalingCommand, "SetLoadBasedAutoScalingCommand");
var SetLoadBasedAutoScalingCommand = _SetLoadBasedAutoScalingCommand;

// src/commands/SetPermissionCommand.ts




var _SetPermissionCommand = class _SetPermissionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "SetPermission", {}).n("OpsWorksClient", "SetPermissionCommand").f(void 0, void 0).ser(se_SetPermissionCommand).de(de_SetPermissionCommand).build() {
};
__name(_SetPermissionCommand, "SetPermissionCommand");
var SetPermissionCommand = _SetPermissionCommand;

// src/commands/SetTimeBasedAutoScalingCommand.ts




var _SetTimeBasedAutoScalingCommand = class _SetTimeBasedAutoScalingCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "SetTimeBasedAutoScaling", {}).n("OpsWorksClient", "SetTimeBasedAutoScalingCommand").f(void 0, void 0).ser(se_SetTimeBasedAutoScalingCommand).de(de_SetTimeBasedAutoScalingCommand).build() {
};
__name(_SetTimeBasedAutoScalingCommand, "SetTimeBasedAutoScalingCommand");
var SetTimeBasedAutoScalingCommand = _SetTimeBasedAutoScalingCommand;

// src/commands/StartInstanceCommand.ts




var _StartInstanceCommand = class _StartInstanceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "StartInstance", {}).n("OpsWorksClient", "StartInstanceCommand").f(void 0, void 0).ser(se_StartInstanceCommand).de(de_StartInstanceCommand).build() {
};
__name(_StartInstanceCommand, "StartInstanceCommand");
var StartInstanceCommand = _StartInstanceCommand;

// src/commands/StartStackCommand.ts




var _StartStackCommand = class _StartStackCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "StartStack", {}).n("OpsWorksClient", "StartStackCommand").f(void 0, void 0).ser(se_StartStackCommand).de(de_StartStackCommand).build() {
};
__name(_StartStackCommand, "StartStackCommand");
var StartStackCommand = _StartStackCommand;

// src/commands/StopInstanceCommand.ts




var _StopInstanceCommand = class _StopInstanceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "StopInstance", {}).n("OpsWorksClient", "StopInstanceCommand").f(void 0, void 0).ser(se_StopInstanceCommand).de(de_StopInstanceCommand).build() {
};
__name(_StopInstanceCommand, "StopInstanceCommand");
var StopInstanceCommand = _StopInstanceCommand;

// src/commands/StopStackCommand.ts




var _StopStackCommand = class _StopStackCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "StopStack", {}).n("OpsWorksClient", "StopStackCommand").f(void 0, void 0).ser(se_StopStackCommand).de(de_StopStackCommand).build() {
};
__name(_StopStackCommand, "StopStackCommand");
var StopStackCommand = _StopStackCommand;

// src/commands/TagResourceCommand.ts




var _TagResourceCommand = class _TagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "TagResource", {}).n("OpsWorksClient", "TagResourceCommand").f(void 0, void 0).ser(se_TagResourceCommand).de(de_TagResourceCommand).build() {
};
__name(_TagResourceCommand, "TagResourceCommand");
var TagResourceCommand = _TagResourceCommand;

// src/commands/UnassignInstanceCommand.ts




var _UnassignInstanceCommand = class _UnassignInstanceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "UnassignInstance", {}).n("OpsWorksClient", "UnassignInstanceCommand").f(void 0, void 0).ser(se_UnassignInstanceCommand).de(de_UnassignInstanceCommand).build() {
};
__name(_UnassignInstanceCommand, "UnassignInstanceCommand");
var UnassignInstanceCommand = _UnassignInstanceCommand;

// src/commands/UnassignVolumeCommand.ts




var _UnassignVolumeCommand = class _UnassignVolumeCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "UnassignVolume", {}).n("OpsWorksClient", "UnassignVolumeCommand").f(void 0, void 0).ser(se_UnassignVolumeCommand).de(de_UnassignVolumeCommand).build() {
};
__name(_UnassignVolumeCommand, "UnassignVolumeCommand");
var UnassignVolumeCommand = _UnassignVolumeCommand;

// src/commands/UntagResourceCommand.ts




var _UntagResourceCommand = class _UntagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "UntagResource", {}).n("OpsWorksClient", "UntagResourceCommand").f(void 0, void 0).ser(se_UntagResourceCommand).de(de_UntagResourceCommand).build() {
};
__name(_UntagResourceCommand, "UntagResourceCommand");
var UntagResourceCommand = _UntagResourceCommand;

// src/commands/UpdateAppCommand.ts




var _UpdateAppCommand = class _UpdateAppCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "UpdateApp", {}).n("OpsWorksClient", "UpdateAppCommand").f(void 0, void 0).ser(se_UpdateAppCommand).de(de_UpdateAppCommand).build() {
};
__name(_UpdateAppCommand, "UpdateAppCommand");
var UpdateAppCommand = _UpdateAppCommand;

// src/commands/UpdateElasticIpCommand.ts




var _UpdateElasticIpCommand = class _UpdateElasticIpCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "UpdateElasticIp", {}).n("OpsWorksClient", "UpdateElasticIpCommand").f(void 0, void 0).ser(se_UpdateElasticIpCommand).de(de_UpdateElasticIpCommand).build() {
};
__name(_UpdateElasticIpCommand, "UpdateElasticIpCommand");
var UpdateElasticIpCommand = _UpdateElasticIpCommand;

// src/commands/UpdateInstanceCommand.ts




var _UpdateInstanceCommand = class _UpdateInstanceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "UpdateInstance", {}).n("OpsWorksClient", "UpdateInstanceCommand").f(void 0, void 0).ser(se_UpdateInstanceCommand).de(de_UpdateInstanceCommand).build() {
};
__name(_UpdateInstanceCommand, "UpdateInstanceCommand");
var UpdateInstanceCommand = _UpdateInstanceCommand;

// src/commands/UpdateLayerCommand.ts




var _UpdateLayerCommand = class _UpdateLayerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "UpdateLayer", {}).n("OpsWorksClient", "UpdateLayerCommand").f(void 0, void 0).ser(se_UpdateLayerCommand).de(de_UpdateLayerCommand).build() {
};
__name(_UpdateLayerCommand, "UpdateLayerCommand");
var UpdateLayerCommand = _UpdateLayerCommand;

// src/commands/UpdateMyUserProfileCommand.ts




var _UpdateMyUserProfileCommand = class _UpdateMyUserProfileCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "UpdateMyUserProfile", {}).n("OpsWorksClient", "UpdateMyUserProfileCommand").f(void 0, void 0).ser(se_UpdateMyUserProfileCommand).de(de_UpdateMyUserProfileCommand).build() {
};
__name(_UpdateMyUserProfileCommand, "UpdateMyUserProfileCommand");
var UpdateMyUserProfileCommand = _UpdateMyUserProfileCommand;

// src/commands/UpdateRdsDbInstanceCommand.ts




var _UpdateRdsDbInstanceCommand = class _UpdateRdsDbInstanceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "UpdateRdsDbInstance", {}).n("OpsWorksClient", "UpdateRdsDbInstanceCommand").f(void 0, void 0).ser(se_UpdateRdsDbInstanceCommand).de(de_UpdateRdsDbInstanceCommand).build() {
};
__name(_UpdateRdsDbInstanceCommand, "UpdateRdsDbInstanceCommand");
var UpdateRdsDbInstanceCommand = _UpdateRdsDbInstanceCommand;

// src/commands/UpdateStackCommand.ts




var _UpdateStackCommand = class _UpdateStackCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "UpdateStack", {}).n("OpsWorksClient", "UpdateStackCommand").f(void 0, void 0).ser(se_UpdateStackCommand).de(de_UpdateStackCommand).build() {
};
__name(_UpdateStackCommand, "UpdateStackCommand");
var UpdateStackCommand = _UpdateStackCommand;

// src/commands/UpdateUserProfileCommand.ts




var _UpdateUserProfileCommand = class _UpdateUserProfileCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "UpdateUserProfile", {}).n("OpsWorksClient", "UpdateUserProfileCommand").f(void 0, void 0).ser(se_UpdateUserProfileCommand).de(de_UpdateUserProfileCommand).build() {
};
__name(_UpdateUserProfileCommand, "UpdateUserProfileCommand");
var UpdateUserProfileCommand = _UpdateUserProfileCommand;

// src/commands/UpdateVolumeCommand.ts




var _UpdateVolumeCommand = class _UpdateVolumeCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OpsWorks_20130218", "UpdateVolume", {}).n("OpsWorksClient", "UpdateVolumeCommand").f(void 0, void 0).ser(se_UpdateVolumeCommand).de(de_UpdateVolumeCommand).build() {
};
__name(_UpdateVolumeCommand, "UpdateVolumeCommand");
var UpdateVolumeCommand = _UpdateVolumeCommand;

// src/OpsWorks.ts
var commands = {
  AssignInstanceCommand,
  AssignVolumeCommand,
  AssociateElasticIpCommand,
  AttachElasticLoadBalancerCommand,
  CloneStackCommand,
  CreateAppCommand,
  CreateDeploymentCommand,
  CreateInstanceCommand,
  CreateLayerCommand,
  CreateStackCommand,
  CreateUserProfileCommand,
  DeleteAppCommand,
  DeleteInstanceCommand,
  DeleteLayerCommand,
  DeleteStackCommand,
  DeleteUserProfileCommand,
  DeregisterEcsClusterCommand,
  DeregisterElasticIpCommand,
  DeregisterInstanceCommand,
  DeregisterRdsDbInstanceCommand,
  DeregisterVolumeCommand,
  DescribeAgentVersionsCommand,
  DescribeAppsCommand,
  DescribeCommandsCommand,
  DescribeDeploymentsCommand,
  DescribeEcsClustersCommand,
  DescribeElasticIpsCommand,
  DescribeElasticLoadBalancersCommand,
  DescribeInstancesCommand,
  DescribeLayersCommand,
  DescribeLoadBasedAutoScalingCommand,
  DescribeMyUserProfileCommand,
  DescribeOperatingSystemsCommand,
  DescribePermissionsCommand,
  DescribeRaidArraysCommand,
  DescribeRdsDbInstancesCommand,
  DescribeServiceErrorsCommand,
  DescribeStackProvisioningParametersCommand,
  DescribeStacksCommand,
  DescribeStackSummaryCommand,
  DescribeTimeBasedAutoScalingCommand,
  DescribeUserProfilesCommand,
  DescribeVolumesCommand,
  DetachElasticLoadBalancerCommand,
  DisassociateElasticIpCommand,
  GetHostnameSuggestionCommand,
  GrantAccessCommand,
  ListTagsCommand,
  RebootInstanceCommand,
  RegisterEcsClusterCommand,
  RegisterElasticIpCommand,
  RegisterInstanceCommand,
  RegisterRdsDbInstanceCommand,
  RegisterVolumeCommand,
  SetLoadBasedAutoScalingCommand,
  SetPermissionCommand,
  SetTimeBasedAutoScalingCommand,
  StartInstanceCommand,
  StartStackCommand,
  StopInstanceCommand,
  StopStackCommand,
  TagResourceCommand,
  UnassignInstanceCommand,
  UnassignVolumeCommand,
  UntagResourceCommand,
  UpdateAppCommand,
  UpdateElasticIpCommand,
  UpdateInstanceCommand,
  UpdateLayerCommand,
  UpdateMyUserProfileCommand,
  UpdateRdsDbInstanceCommand,
  UpdateStackCommand,
  UpdateUserProfileCommand,
  UpdateVolumeCommand
};
var _OpsWorks = class _OpsWorks extends OpsWorksClient {
};
__name(_OpsWorks, "OpsWorks");
var OpsWorks = _OpsWorks;
(0, import_smithy_client.createAggregatedClient)(commands, OpsWorks);

// src/pagination/DescribeEcsClustersPaginator.ts

var paginateDescribeEcsClusters = (0, import_core.createPaginator)(OpsWorksClient, DescribeEcsClustersCommand, "NextToken", "NextToken", "MaxResults");

// src/waiters/waitForAppExists.ts
var import_util_waiter = require("@smithy/util-waiter");
var checkState = /* @__PURE__ */ __name(async (client, input) => {
  let reason;
  try {
    const result = await client.send(new DescribeAppsCommand(input));
    reason = result;
    return { state: import_util_waiter.WaiterState.SUCCESS, reason };
  } catch (exception) {
    reason = exception;
    return { state: import_util_waiter.WaiterState.FAILURE, reason };
  }
  return { state: import_util_waiter.WaiterState.RETRY, reason };
}, "checkState");
var waitForAppExists = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 1, maxDelay: 120 };
  return (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState);
}, "waitForAppExists");
var waitUntilAppExists = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 1, maxDelay: 120 };
  const result = await (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState);
  return (0, import_util_waiter.checkExceptions)(result);
}, "waitUntilAppExists");

// src/waiters/waitForDeploymentSuccessful.ts

var checkState2 = /* @__PURE__ */ __name(async (client, input) => {
  let reason;
  try {
    const result = await client.send(new DescribeDeploymentsCommand(input));
    reason = result;
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Deployments);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.Status;
        });
        return projection_3;
      }, "returnComparator");
      let allStringEq_5 = returnComparator().length > 0;
      for (const element_4 of returnComparator()) {
        allStringEq_5 = allStringEq_5 && element_4 == "successful";
      }
      if (allStringEq_5) {
        return { state: import_util_waiter.WaiterState.SUCCESS, reason };
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Deployments);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.Status;
        });
        return projection_3;
      }, "returnComparator");
      for (const anyStringEq_4 of returnComparator()) {
        if (anyStringEq_4 == "failed") {
          return { state: import_util_waiter.WaiterState.FAILURE, reason };
        }
      }
    } catch (e) {
    }
  } catch (exception) {
    reason = exception;
  }
  return { state: import_util_waiter.WaiterState.RETRY, reason };
}, "checkState");
var waitForDeploymentSuccessful = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 15, maxDelay: 120 };
  return (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState2);
}, "waitForDeploymentSuccessful");
var waitUntilDeploymentSuccessful = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 15, maxDelay: 120 };
  const result = await (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState2);
  return (0, import_util_waiter.checkExceptions)(result);
}, "waitUntilDeploymentSuccessful");

// src/waiters/waitForInstanceOnline.ts

var checkState3 = /* @__PURE__ */ __name(async (client, input) => {
  let reason;
  try {
    const result = await client.send(new DescribeInstancesCommand(input));
    reason = result;
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Instances);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.Status;
        });
        return projection_3;
      }, "returnComparator");
      let allStringEq_5 = returnComparator().length > 0;
      for (const element_4 of returnComparator()) {
        allStringEq_5 = allStringEq_5 && element_4 == "online";
      }
      if (allStringEq_5) {
        return { state: import_util_waiter.WaiterState.SUCCESS, reason };
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Instances);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.Status;
        });
        return projection_3;
      }, "returnComparator");
      for (const anyStringEq_4 of returnComparator()) {
        if (anyStringEq_4 == "setup_failed") {
          return { state: import_util_waiter.WaiterState.FAILURE, reason };
        }
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Instances);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.Status;
        });
        return projection_3;
      }, "returnComparator");
      for (const anyStringEq_4 of returnComparator()) {
        if (anyStringEq_4 == "shutting_down") {
          return { state: import_util_waiter.WaiterState.FAILURE, reason };
        }
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Instances);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.Status;
        });
        return projection_3;
      }, "returnComparator");
      for (const anyStringEq_4 of returnComparator()) {
        if (anyStringEq_4 == "start_failed") {
          return { state: import_util_waiter.WaiterState.FAILURE, reason };
        }
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Instances);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.Status;
        });
        return projection_3;
      }, "returnComparator");
      for (const anyStringEq_4 of returnComparator()) {
        if (anyStringEq_4 == "stopped") {
          return { state: import_util_waiter.WaiterState.FAILURE, reason };
        }
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Instances);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.Status;
        });
        return projection_3;
      }, "returnComparator");
      for (const anyStringEq_4 of returnComparator()) {
        if (anyStringEq_4 == "stopping") {
          return { state: import_util_waiter.WaiterState.FAILURE, reason };
        }
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Instances);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.Status;
        });
        return projection_3;
      }, "returnComparator");
      for (const anyStringEq_4 of returnComparator()) {
        if (anyStringEq_4 == "terminating") {
          return { state: import_util_waiter.WaiterState.FAILURE, reason };
        }
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Instances);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.Status;
        });
        return projection_3;
      }, "returnComparator");
      for (const anyStringEq_4 of returnComparator()) {
        if (anyStringEq_4 == "terminated") {
          return { state: import_util_waiter.WaiterState.FAILURE, reason };
        }
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Instances);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.Status;
        });
        return projection_3;
      }, "returnComparator");
      for (const anyStringEq_4 of returnComparator()) {
        if (anyStringEq_4 == "stop_failed") {
          return { state: import_util_waiter.WaiterState.FAILURE, reason };
        }
      }
    } catch (e) {
    }
  } catch (exception) {
    reason = exception;
  }
  return { state: import_util_waiter.WaiterState.RETRY, reason };
}, "checkState");
var waitForInstanceOnline = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 15, maxDelay: 120 };
  return (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState3);
}, "waitForInstanceOnline");
var waitUntilInstanceOnline = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 15, maxDelay: 120 };
  const result = await (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState3);
  return (0, import_util_waiter.checkExceptions)(result);
}, "waitUntilInstanceOnline");

// src/waiters/waitForInstanceRegistered.ts

var checkState4 = /* @__PURE__ */ __name(async (client, input) => {
  let reason;
  try {
    const result = await client.send(new DescribeInstancesCommand(input));
    reason = result;
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Instances);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.Status;
        });
        return projection_3;
      }, "returnComparator");
      let allStringEq_5 = returnComparator().length > 0;
      for (const element_4 of returnComparator()) {
        allStringEq_5 = allStringEq_5 && element_4 == "registered";
      }
      if (allStringEq_5) {
        return { state: import_util_waiter.WaiterState.SUCCESS, reason };
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Instances);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.Status;
        });
        return projection_3;
      }, "returnComparator");
      for (const anyStringEq_4 of returnComparator()) {
        if (anyStringEq_4 == "setup_failed") {
          return { state: import_util_waiter.WaiterState.FAILURE, reason };
        }
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Instances);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.Status;
        });
        return projection_3;
      }, "returnComparator");
      for (const anyStringEq_4 of returnComparator()) {
        if (anyStringEq_4 == "shutting_down") {
          return { state: import_util_waiter.WaiterState.FAILURE, reason };
        }
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Instances);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.Status;
        });
        return projection_3;
      }, "returnComparator");
      for (const anyStringEq_4 of returnComparator()) {
        if (anyStringEq_4 == "stopped") {
          return { state: import_util_waiter.WaiterState.FAILURE, reason };
        }
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Instances);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.Status;
        });
        return projection_3;
      }, "returnComparator");
      for (const anyStringEq_4 of returnComparator()) {
        if (anyStringEq_4 == "stopping") {
          return { state: import_util_waiter.WaiterState.FAILURE, reason };
        }
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Instances);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.Status;
        });
        return projection_3;
      }, "returnComparator");
      for (const anyStringEq_4 of returnComparator()) {
        if (anyStringEq_4 == "terminating") {
          return { state: import_util_waiter.WaiterState.FAILURE, reason };
        }
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Instances);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.Status;
        });
        return projection_3;
      }, "returnComparator");
      for (const anyStringEq_4 of returnComparator()) {
        if (anyStringEq_4 == "terminated") {
          return { state: import_util_waiter.WaiterState.FAILURE, reason };
        }
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Instances);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.Status;
        });
        return projection_3;
      }, "returnComparator");
      for (const anyStringEq_4 of returnComparator()) {
        if (anyStringEq_4 == "stop_failed") {
          return { state: import_util_waiter.WaiterState.FAILURE, reason };
        }
      }
    } catch (e) {
    }
  } catch (exception) {
    reason = exception;
  }
  return { state: import_util_waiter.WaiterState.RETRY, reason };
}, "checkState");
var waitForInstanceRegistered = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 15, maxDelay: 120 };
  return (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState4);
}, "waitForInstanceRegistered");
var waitUntilInstanceRegistered = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 15, maxDelay: 120 };
  const result = await (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState4);
  return (0, import_util_waiter.checkExceptions)(result);
}, "waitUntilInstanceRegistered");

// src/waiters/waitForInstanceStopped.ts

var checkState5 = /* @__PURE__ */ __name(async (client, input) => {
  let reason;
  try {
    const result = await client.send(new DescribeInstancesCommand(input));
    reason = result;
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Instances);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.Status;
        });
        return projection_3;
      }, "returnComparator");
      let allStringEq_5 = returnComparator().length > 0;
      for (const element_4 of returnComparator()) {
        allStringEq_5 = allStringEq_5 && element_4 == "stopped";
      }
      if (allStringEq_5) {
        return { state: import_util_waiter.WaiterState.SUCCESS, reason };
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Instances);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.Status;
        });
        return projection_3;
      }, "returnComparator");
      for (const anyStringEq_4 of returnComparator()) {
        if (anyStringEq_4 == "booting") {
          return { state: import_util_waiter.WaiterState.FAILURE, reason };
        }
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Instances);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.Status;
        });
        return projection_3;
      }, "returnComparator");
      for (const anyStringEq_4 of returnComparator()) {
        if (anyStringEq_4 == "pending") {
          return { state: import_util_waiter.WaiterState.FAILURE, reason };
        }
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Instances);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.Status;
        });
        return projection_3;
      }, "returnComparator");
      for (const anyStringEq_4 of returnComparator()) {
        if (anyStringEq_4 == "rebooting") {
          return { state: import_util_waiter.WaiterState.FAILURE, reason };
        }
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Instances);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.Status;
        });
        return projection_3;
      }, "returnComparator");
      for (const anyStringEq_4 of returnComparator()) {
        if (anyStringEq_4 == "requested") {
          return { state: import_util_waiter.WaiterState.FAILURE, reason };
        }
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Instances);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.Status;
        });
        return projection_3;
      }, "returnComparator");
      for (const anyStringEq_4 of returnComparator()) {
        if (anyStringEq_4 == "running_setup") {
          return { state: import_util_waiter.WaiterState.FAILURE, reason };
        }
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Instances);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.Status;
        });
        return projection_3;
      }, "returnComparator");
      for (const anyStringEq_4 of returnComparator()) {
        if (anyStringEq_4 == "setup_failed") {
          return { state: import_util_waiter.WaiterState.FAILURE, reason };
        }
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Instances);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.Status;
        });
        return projection_3;
      }, "returnComparator");
      for (const anyStringEq_4 of returnComparator()) {
        if (anyStringEq_4 == "start_failed") {
          return { state: import_util_waiter.WaiterState.FAILURE, reason };
        }
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Instances);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.Status;
        });
        return projection_3;
      }, "returnComparator");
      for (const anyStringEq_4 of returnComparator()) {
        if (anyStringEq_4 == "stop_failed") {
          return { state: import_util_waiter.WaiterState.FAILURE, reason };
        }
      }
    } catch (e) {
    }
  } catch (exception) {
    reason = exception;
  }
  return { state: import_util_waiter.WaiterState.RETRY, reason };
}, "checkState");
var waitForInstanceStopped = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 15, maxDelay: 120 };
  return (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState5);
}, "waitForInstanceStopped");
var waitUntilInstanceStopped = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 15, maxDelay: 120 };
  const result = await (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState5);
  return (0, import_util_waiter.checkExceptions)(result);
}, "waitUntilInstanceStopped");

// src/waiters/waitForInstanceTerminated.ts

var checkState6 = /* @__PURE__ */ __name(async (client, input) => {
  let reason;
  try {
    const result = await client.send(new DescribeInstancesCommand(input));
    reason = result;
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Instances);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.Status;
        });
        return projection_3;
      }, "returnComparator");
      let allStringEq_5 = returnComparator().length > 0;
      for (const element_4 of returnComparator()) {
        allStringEq_5 = allStringEq_5 && element_4 == "terminated";
      }
      if (allStringEq_5) {
        return { state: import_util_waiter.WaiterState.SUCCESS, reason };
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Instances);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.Status;
        });
        return projection_3;
      }, "returnComparator");
      for (const anyStringEq_4 of returnComparator()) {
        if (anyStringEq_4 == "booting") {
          return { state: import_util_waiter.WaiterState.FAILURE, reason };
        }
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Instances);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.Status;
        });
        return projection_3;
      }, "returnComparator");
      for (const anyStringEq_4 of returnComparator()) {
        if (anyStringEq_4 == "online") {
          return { state: import_util_waiter.WaiterState.FAILURE, reason };
        }
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Instances);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.Status;
        });
        return projection_3;
      }, "returnComparator");
      for (const anyStringEq_4 of returnComparator()) {
        if (anyStringEq_4 == "pending") {
          return { state: import_util_waiter.WaiterState.FAILURE, reason };
        }
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Instances);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.Status;
        });
        return projection_3;
      }, "returnComparator");
      for (const anyStringEq_4 of returnComparator()) {
        if (anyStringEq_4 == "rebooting") {
          return { state: import_util_waiter.WaiterState.FAILURE, reason };
        }
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Instances);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.Status;
        });
        return projection_3;
      }, "returnComparator");
      for (const anyStringEq_4 of returnComparator()) {
        if (anyStringEq_4 == "requested") {
          return { state: import_util_waiter.WaiterState.FAILURE, reason };
        }
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Instances);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.Status;
        });
        return projection_3;
      }, "returnComparator");
      for (const anyStringEq_4 of returnComparator()) {
        if (anyStringEq_4 == "running_setup") {
          return { state: import_util_waiter.WaiterState.FAILURE, reason };
        }
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Instances);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.Status;
        });
        return projection_3;
      }, "returnComparator");
      for (const anyStringEq_4 of returnComparator()) {
        if (anyStringEq_4 == "setup_failed") {
          return { state: import_util_waiter.WaiterState.FAILURE, reason };
        }
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        const flat_1 = [].concat(...result.Instances);
        const projection_3 = flat_1.map((element_2) => {
          return element_2.Status;
        });
        return projection_3;
      }, "returnComparator");
      for (const anyStringEq_4 of returnComparator()) {
        if (anyStringEq_4 == "start_failed") {
          return { state: import_util_waiter.WaiterState.FAILURE, reason };
        }
      }
    } catch (e) {
    }
  } catch (exception) {
    reason = exception;
    if (exception.name && exception.name == "ResourceNotFoundException") {
      return { state: import_util_waiter.WaiterState.SUCCESS, reason };
    }
  }
  return { state: import_util_waiter.WaiterState.RETRY, reason };
}, "checkState");
var waitForInstanceTerminated = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 15, maxDelay: 120 };
  return (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState6);
}, "waitForInstanceTerminated");
var waitUntilInstanceTerminated = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 15, maxDelay: 120 };
  const result = await (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState6);
  return (0, import_util_waiter.checkExceptions)(result);
}, "waitUntilInstanceTerminated");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  OpsWorksServiceException,
  __Client,
  OpsWorksClient,
  OpsWorks,
  $Command,
  AssignInstanceCommand,
  AssignVolumeCommand,
  AssociateElasticIpCommand,
  AttachElasticLoadBalancerCommand,
  CloneStackCommand,
  CreateAppCommand,
  CreateDeploymentCommand,
  CreateInstanceCommand,
  CreateLayerCommand,
  CreateStackCommand,
  CreateUserProfileCommand,
  DeleteAppCommand,
  DeleteInstanceCommand,
  DeleteLayerCommand,
  DeleteStackCommand,
  DeleteUserProfileCommand,
  DeregisterEcsClusterCommand,
  DeregisterElasticIpCommand,
  DeregisterInstanceCommand,
  DeregisterRdsDbInstanceCommand,
  DeregisterVolumeCommand,
  DescribeAgentVersionsCommand,
  DescribeAppsCommand,
  DescribeCommandsCommand,
  DescribeDeploymentsCommand,
  DescribeEcsClustersCommand,
  DescribeElasticIpsCommand,
  DescribeElasticLoadBalancersCommand,
  DescribeInstancesCommand,
  DescribeLayersCommand,
  DescribeLoadBasedAutoScalingCommand,
  DescribeMyUserProfileCommand,
  DescribeOperatingSystemsCommand,
  DescribePermissionsCommand,
  DescribeRaidArraysCommand,
  DescribeRdsDbInstancesCommand,
  DescribeServiceErrorsCommand,
  DescribeStackProvisioningParametersCommand,
  DescribeStackSummaryCommand,
  DescribeStacksCommand,
  DescribeTimeBasedAutoScalingCommand,
  DescribeUserProfilesCommand,
  DescribeVolumesCommand,
  DetachElasticLoadBalancerCommand,
  DisassociateElasticIpCommand,
  GetHostnameSuggestionCommand,
  GrantAccessCommand,
  ListTagsCommand,
  RebootInstanceCommand,
  RegisterEcsClusterCommand,
  RegisterElasticIpCommand,
  RegisterInstanceCommand,
  RegisterRdsDbInstanceCommand,
  RegisterVolumeCommand,
  SetLoadBasedAutoScalingCommand,
  SetPermissionCommand,
  SetTimeBasedAutoScalingCommand,
  StartInstanceCommand,
  StartStackCommand,
  StopInstanceCommand,
  StopStackCommand,
  TagResourceCommand,
  UnassignInstanceCommand,
  UnassignVolumeCommand,
  UntagResourceCommand,
  UpdateAppCommand,
  UpdateElasticIpCommand,
  UpdateInstanceCommand,
  UpdateLayerCommand,
  UpdateMyUserProfileCommand,
  UpdateRdsDbInstanceCommand,
  UpdateStackCommand,
  UpdateUserProfileCommand,
  UpdateVolumeCommand,
  paginateDescribeEcsClusters,
  waitForAppExists,
  waitUntilAppExists,
  waitForDeploymentSuccessful,
  waitUntilDeploymentSuccessful,
  waitForInstanceOnline,
  waitUntilInstanceOnline,
  waitForInstanceRegistered,
  waitUntilInstanceRegistered,
  waitForInstanceStopped,
  waitUntilInstanceStopped,
  waitForInstanceTerminated,
  waitUntilInstanceTerminated,
  SourceType,
  AppAttributesKeys,
  AppType,
  Architecture,
  ResourceNotFoundException,
  ValidationException,
  AutoScalingType,
  VolumeType,
  StackAttributesKeys,
  RootDeviceType,
  CloudWatchLogsEncoding,
  CloudWatchLogsInitialPosition,
  CloudWatchLogsTimeZone,
  DeploymentCommandName,
  LayerAttributesKeys,
  LayerType,
  VirtualizationType
});

