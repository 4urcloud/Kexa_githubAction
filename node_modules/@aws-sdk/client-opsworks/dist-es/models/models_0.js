import { OpsWorksServiceException as __BaseException } from "./OpsWorksServiceException";
export const SourceType = {
    archive: "archive",
    git: "git",
    s3: "s3",
    svn: "svn",
};
export const AppAttributesKeys = {
    AutoBundleOnDeploy: "AutoBundleOnDeploy",
    AwsFlowRubySettings: "AwsFlowRubySettings",
    DocumentRoot: "DocumentRoot",
    RailsEnv: "RailsEnv",
};
export const AppType = {
    aws_flow_ruby: "aws-flow-ruby",
    java: "java",
    nodejs: "nodejs",
    other: "other",
    php: "php",
    rails: "rails",
    static: "static",
};
export const Architecture = {
    i386: "i386",
    x86_64: "x86_64",
};
export class ResourceNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
    }
}
export class ValidationException extends __BaseException {
    constructor(opts) {
        super({
            name: "ValidationException",
            $fault: "client",
            ...opts,
        });
        this.name = "ValidationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ValidationException.prototype);
    }
}
export const AutoScalingType = {
    load: "load",
    timer: "timer",
};
export const VolumeType = {
    gp2: "gp2",
    io1: "io1",
    standard: "standard",
};
export const StackAttributesKeys = {
    Color: "Color",
};
export const RootDeviceType = {
    ebs: "ebs",
    instance_store: "instance-store",
};
export const CloudWatchLogsEncoding = {
    ascii: "ascii",
    big5: "big5",
    big5hkscs: "big5hkscs",
    cp037: "cp037",
    cp1006: "cp1006",
    cp1026: "cp1026",
    cp1140: "cp1140",
    cp1250: "cp1250",
    cp1251: "cp1251",
    cp1252: "cp1252",
    cp1253: "cp1253",
    cp1254: "cp1254",
    cp1255: "cp1255",
    cp1256: "cp1256",
    cp1257: "cp1257",
    cp1258: "cp1258",
    cp424: "cp424",
    cp437: "cp437",
    cp500: "cp500",
    cp720: "cp720",
    cp737: "cp737",
    cp775: "cp775",
    cp850: "cp850",
    cp852: "cp852",
    cp855: "cp855",
    cp856: "cp856",
    cp857: "cp857",
    cp858: "cp858",
    cp860: "cp860",
    cp861: "cp861",
    cp862: "cp862",
    cp863: "cp863",
    cp864: "cp864",
    cp865: "cp865",
    cp866: "cp866",
    cp869: "cp869",
    cp874: "cp874",
    cp875: "cp875",
    cp932: "cp932",
    cp949: "cp949",
    cp950: "cp950",
    euc_jis_2004: "euc_jis_2004",
    euc_jisx0213: "euc_jisx0213",
    euc_jp: "euc_jp",
    euc_kr: "euc_kr",
    gb18030: "gb18030",
    gb2312: "gb2312",
    gbk: "gbk",
    hz: "hz",
    iso2022_jp: "iso2022_jp",
    iso2022_jp_1: "iso2022_jp_1",
    iso2022_jp_2: "iso2022_jp_2",
    iso2022_jp_2004: "iso2022_jp_2004",
    iso2022_jp_3: "iso2022_jp_3",
    iso2022_jp_ext: "iso2022_jp_ext",
    iso2022_kr: "iso2022_kr",
    iso8859_10: "iso8859_10",
    iso8859_13: "iso8859_13",
    iso8859_14: "iso8859_14",
    iso8859_15: "iso8859_15",
    iso8859_16: "iso8859_16",
    iso8859_2: "iso8859_2",
    iso8859_3: "iso8859_3",
    iso8859_4: "iso8859_4",
    iso8859_5: "iso8859_5",
    iso8859_6: "iso8859_6",
    iso8859_7: "iso8859_7",
    iso8859_8: "iso8859_8",
    iso8859_9: "iso8859_9",
    johab: "johab",
    koi8_r: "koi8_r",
    koi8_u: "koi8_u",
    latin_1: "latin_1",
    mac_cyrillic: "mac_cyrillic",
    mac_greek: "mac_greek",
    mac_iceland: "mac_iceland",
    mac_latin2: "mac_latin2",
    mac_roman: "mac_roman",
    mac_turkish: "mac_turkish",
    ptcp154: "ptcp154",
    shift_jis: "shift_jis",
    shift_jis_2004: "shift_jis_2004",
    shift_jisx0213: "shift_jisx0213",
    utf_16: "utf_16",
    utf_16_be: "utf_16_be",
    utf_16_le: "utf_16_le",
    utf_32: "utf_32",
    utf_32_be: "utf_32_be",
    utf_32_le: "utf_32_le",
    utf_7: "utf_7",
    utf_8: "utf_8",
    utf_8_sig: "utf_8_sig",
};
export const CloudWatchLogsInitialPosition = {
    end_of_file: "end_of_file",
    start_of_file: "start_of_file",
};
export const CloudWatchLogsTimeZone = {
    LOCAL: "LOCAL",
    UTC: "UTC",
};
export const DeploymentCommandName = {
    configure: "configure",
    deploy: "deploy",
    execute_recipes: "execute_recipes",
    install_dependencies: "install_dependencies",
    restart: "restart",
    rollback: "rollback",
    setup: "setup",
    start: "start",
    stop: "stop",
    undeploy: "undeploy",
    update_custom_cookbooks: "update_custom_cookbooks",
    update_dependencies: "update_dependencies",
};
export const LayerAttributesKeys = {
    BundlerVersion: "BundlerVersion",
    EcsClusterArn: "EcsClusterArn",
    EnableHaproxyStats: "EnableHaproxyStats",
    GangliaPassword: "GangliaPassword",
    GangliaUrl: "GangliaUrl",
    GangliaUser: "GangliaUser",
    HaproxyHealthCheckMethod: "HaproxyHealthCheckMethod",
    HaproxyHealthCheckUrl: "HaproxyHealthCheckUrl",
    HaproxyStatsPassword: "HaproxyStatsPassword",
    HaproxyStatsUrl: "HaproxyStatsUrl",
    HaproxyStatsUser: "HaproxyStatsUser",
    JavaAppServer: "JavaAppServer",
    JavaAppServerVersion: "JavaAppServerVersion",
    Jvm: "Jvm",
    JvmOptions: "JvmOptions",
    JvmVersion: "JvmVersion",
    ManageBundler: "ManageBundler",
    MemcachedMemory: "MemcachedMemory",
    MysqlRootPassword: "MysqlRootPassword",
    MysqlRootPasswordUbiquitous: "MysqlRootPasswordUbiquitous",
    NodejsVersion: "NodejsVersion",
    PassengerVersion: "PassengerVersion",
    RailsStack: "RailsStack",
    RubyVersion: "RubyVersion",
    RubygemsVersion: "RubygemsVersion",
};
export const LayerType = {
    aws_flow_ruby: "aws-flow-ruby",
    custom: "custom",
    db_master: "db-master",
    ecs_cluster: "ecs-cluster",
    java_app: "java-app",
    lb: "lb",
    memcached: "memcached",
    monitoring_master: "monitoring-master",
    nodejs_app: "nodejs-app",
    php_app: "php-app",
    rails_app: "rails-app",
    web: "web",
};
export const VirtualizationType = {
    hvm: "hvm",
    paravirtual: "paravirtual",
};
