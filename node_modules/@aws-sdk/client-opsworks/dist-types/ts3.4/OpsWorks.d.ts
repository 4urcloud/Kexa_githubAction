import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import {
  AssignInstanceCommandInput,
  AssignInstanceCommandOutput,
} from "./commands/AssignInstanceCommand";
import {
  AssignVolumeCommandInput,
  AssignVolumeCommandOutput,
} from "./commands/AssignVolumeCommand";
import {
  AssociateElasticIpCommandInput,
  AssociateElasticIpCommandOutput,
} from "./commands/AssociateElasticIpCommand";
import {
  AttachElasticLoadBalancerCommandInput,
  AttachElasticLoadBalancerCommandOutput,
} from "./commands/AttachElasticLoadBalancerCommand";
import {
  CloneStackCommandInput,
  CloneStackCommandOutput,
} from "./commands/CloneStackCommand";
import {
  CreateAppCommandInput,
  CreateAppCommandOutput,
} from "./commands/CreateAppCommand";
import {
  CreateDeploymentCommandInput,
  CreateDeploymentCommandOutput,
} from "./commands/CreateDeploymentCommand";
import {
  CreateInstanceCommandInput,
  CreateInstanceCommandOutput,
} from "./commands/CreateInstanceCommand";
import {
  CreateLayerCommandInput,
  CreateLayerCommandOutput,
} from "./commands/CreateLayerCommand";
import {
  CreateStackCommandInput,
  CreateStackCommandOutput,
} from "./commands/CreateStackCommand";
import {
  CreateUserProfileCommandInput,
  CreateUserProfileCommandOutput,
} from "./commands/CreateUserProfileCommand";
import {
  DeleteAppCommandInput,
  DeleteAppCommandOutput,
} from "./commands/DeleteAppCommand";
import {
  DeleteInstanceCommandInput,
  DeleteInstanceCommandOutput,
} from "./commands/DeleteInstanceCommand";
import {
  DeleteLayerCommandInput,
  DeleteLayerCommandOutput,
} from "./commands/DeleteLayerCommand";
import {
  DeleteStackCommandInput,
  DeleteStackCommandOutput,
} from "./commands/DeleteStackCommand";
import {
  DeleteUserProfileCommandInput,
  DeleteUserProfileCommandOutput,
} from "./commands/DeleteUserProfileCommand";
import {
  DeregisterEcsClusterCommandInput,
  DeregisterEcsClusterCommandOutput,
} from "./commands/DeregisterEcsClusterCommand";
import {
  DeregisterElasticIpCommandInput,
  DeregisterElasticIpCommandOutput,
} from "./commands/DeregisterElasticIpCommand";
import {
  DeregisterInstanceCommandInput,
  DeregisterInstanceCommandOutput,
} from "./commands/DeregisterInstanceCommand";
import {
  DeregisterRdsDbInstanceCommandInput,
  DeregisterRdsDbInstanceCommandOutput,
} from "./commands/DeregisterRdsDbInstanceCommand";
import {
  DeregisterVolumeCommandInput,
  DeregisterVolumeCommandOutput,
} from "./commands/DeregisterVolumeCommand";
import {
  DescribeAgentVersionsCommandInput,
  DescribeAgentVersionsCommandOutput,
} from "./commands/DescribeAgentVersionsCommand";
import {
  DescribeAppsCommandInput,
  DescribeAppsCommandOutput,
} from "./commands/DescribeAppsCommand";
import {
  DescribeCommandsCommandInput,
  DescribeCommandsCommandOutput,
} from "./commands/DescribeCommandsCommand";
import {
  DescribeDeploymentsCommandInput,
  DescribeDeploymentsCommandOutput,
} from "./commands/DescribeDeploymentsCommand";
import {
  DescribeEcsClustersCommandInput,
  DescribeEcsClustersCommandOutput,
} from "./commands/DescribeEcsClustersCommand";
import {
  DescribeElasticIpsCommandInput,
  DescribeElasticIpsCommandOutput,
} from "./commands/DescribeElasticIpsCommand";
import {
  DescribeElasticLoadBalancersCommandInput,
  DescribeElasticLoadBalancersCommandOutput,
} from "./commands/DescribeElasticLoadBalancersCommand";
import {
  DescribeInstancesCommandInput,
  DescribeInstancesCommandOutput,
} from "./commands/DescribeInstancesCommand";
import {
  DescribeLayersCommandInput,
  DescribeLayersCommandOutput,
} from "./commands/DescribeLayersCommand";
import {
  DescribeLoadBasedAutoScalingCommandInput,
  DescribeLoadBasedAutoScalingCommandOutput,
} from "./commands/DescribeLoadBasedAutoScalingCommand";
import {
  DescribeMyUserProfileCommandInput,
  DescribeMyUserProfileCommandOutput,
} from "./commands/DescribeMyUserProfileCommand";
import {
  DescribeOperatingSystemsCommandInput,
  DescribeOperatingSystemsCommandOutput,
} from "./commands/DescribeOperatingSystemsCommand";
import {
  DescribePermissionsCommandInput,
  DescribePermissionsCommandOutput,
} from "./commands/DescribePermissionsCommand";
import {
  DescribeRaidArraysCommandInput,
  DescribeRaidArraysCommandOutput,
} from "./commands/DescribeRaidArraysCommand";
import {
  DescribeRdsDbInstancesCommandInput,
  DescribeRdsDbInstancesCommandOutput,
} from "./commands/DescribeRdsDbInstancesCommand";
import {
  DescribeServiceErrorsCommandInput,
  DescribeServiceErrorsCommandOutput,
} from "./commands/DescribeServiceErrorsCommand";
import {
  DescribeStackProvisioningParametersCommandInput,
  DescribeStackProvisioningParametersCommandOutput,
} from "./commands/DescribeStackProvisioningParametersCommand";
import {
  DescribeStacksCommandInput,
  DescribeStacksCommandOutput,
} from "./commands/DescribeStacksCommand";
import {
  DescribeStackSummaryCommandInput,
  DescribeStackSummaryCommandOutput,
} from "./commands/DescribeStackSummaryCommand";
import {
  DescribeTimeBasedAutoScalingCommandInput,
  DescribeTimeBasedAutoScalingCommandOutput,
} from "./commands/DescribeTimeBasedAutoScalingCommand";
import {
  DescribeUserProfilesCommandInput,
  DescribeUserProfilesCommandOutput,
} from "./commands/DescribeUserProfilesCommand";
import {
  DescribeVolumesCommandInput,
  DescribeVolumesCommandOutput,
} from "./commands/DescribeVolumesCommand";
import {
  DetachElasticLoadBalancerCommandInput,
  DetachElasticLoadBalancerCommandOutput,
} from "./commands/DetachElasticLoadBalancerCommand";
import {
  DisassociateElasticIpCommandInput,
  DisassociateElasticIpCommandOutput,
} from "./commands/DisassociateElasticIpCommand";
import {
  GetHostnameSuggestionCommandInput,
  GetHostnameSuggestionCommandOutput,
} from "./commands/GetHostnameSuggestionCommand";
import {
  GrantAccessCommandInput,
  GrantAccessCommandOutput,
} from "./commands/GrantAccessCommand";
import {
  ListTagsCommandInput,
  ListTagsCommandOutput,
} from "./commands/ListTagsCommand";
import {
  RebootInstanceCommandInput,
  RebootInstanceCommandOutput,
} from "./commands/RebootInstanceCommand";
import {
  RegisterEcsClusterCommandInput,
  RegisterEcsClusterCommandOutput,
} from "./commands/RegisterEcsClusterCommand";
import {
  RegisterElasticIpCommandInput,
  RegisterElasticIpCommandOutput,
} from "./commands/RegisterElasticIpCommand";
import {
  RegisterInstanceCommandInput,
  RegisterInstanceCommandOutput,
} from "./commands/RegisterInstanceCommand";
import {
  RegisterRdsDbInstanceCommandInput,
  RegisterRdsDbInstanceCommandOutput,
} from "./commands/RegisterRdsDbInstanceCommand";
import {
  RegisterVolumeCommandInput,
  RegisterVolumeCommandOutput,
} from "./commands/RegisterVolumeCommand";
import {
  SetLoadBasedAutoScalingCommandInput,
  SetLoadBasedAutoScalingCommandOutput,
} from "./commands/SetLoadBasedAutoScalingCommand";
import {
  SetPermissionCommandInput,
  SetPermissionCommandOutput,
} from "./commands/SetPermissionCommand";
import {
  SetTimeBasedAutoScalingCommandInput,
  SetTimeBasedAutoScalingCommandOutput,
} from "./commands/SetTimeBasedAutoScalingCommand";
import {
  StartInstanceCommandInput,
  StartInstanceCommandOutput,
} from "./commands/StartInstanceCommand";
import {
  StartStackCommandInput,
  StartStackCommandOutput,
} from "./commands/StartStackCommand";
import {
  StopInstanceCommandInput,
  StopInstanceCommandOutput,
} from "./commands/StopInstanceCommand";
import {
  StopStackCommandInput,
  StopStackCommandOutput,
} from "./commands/StopStackCommand";
import {
  TagResourceCommandInput,
  TagResourceCommandOutput,
} from "./commands/TagResourceCommand";
import {
  UnassignInstanceCommandInput,
  UnassignInstanceCommandOutput,
} from "./commands/UnassignInstanceCommand";
import {
  UnassignVolumeCommandInput,
  UnassignVolumeCommandOutput,
} from "./commands/UnassignVolumeCommand";
import {
  UntagResourceCommandInput,
  UntagResourceCommandOutput,
} from "./commands/UntagResourceCommand";
import {
  UpdateAppCommandInput,
  UpdateAppCommandOutput,
} from "./commands/UpdateAppCommand";
import {
  UpdateElasticIpCommandInput,
  UpdateElasticIpCommandOutput,
} from "./commands/UpdateElasticIpCommand";
import {
  UpdateInstanceCommandInput,
  UpdateInstanceCommandOutput,
} from "./commands/UpdateInstanceCommand";
import {
  UpdateLayerCommandInput,
  UpdateLayerCommandOutput,
} from "./commands/UpdateLayerCommand";
import {
  UpdateMyUserProfileCommandInput,
  UpdateMyUserProfileCommandOutput,
} from "./commands/UpdateMyUserProfileCommand";
import {
  UpdateRdsDbInstanceCommandInput,
  UpdateRdsDbInstanceCommandOutput,
} from "./commands/UpdateRdsDbInstanceCommand";
import {
  UpdateStackCommandInput,
  UpdateStackCommandOutput,
} from "./commands/UpdateStackCommand";
import {
  UpdateUserProfileCommandInput,
  UpdateUserProfileCommandOutput,
} from "./commands/UpdateUserProfileCommand";
import {
  UpdateVolumeCommandInput,
  UpdateVolumeCommandOutput,
} from "./commands/UpdateVolumeCommand";
import { OpsWorksClient } from "./OpsWorksClient";
export interface OpsWorks {
  assignInstance(
    args: AssignInstanceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AssignInstanceCommandOutput>;
  assignInstance(
    args: AssignInstanceCommandInput,
    cb: (err: any, data?: AssignInstanceCommandOutput) => void
  ): void;
  assignInstance(
    args: AssignInstanceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AssignInstanceCommandOutput) => void
  ): void;
  assignVolume(
    args: AssignVolumeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AssignVolumeCommandOutput>;
  assignVolume(
    args: AssignVolumeCommandInput,
    cb: (err: any, data?: AssignVolumeCommandOutput) => void
  ): void;
  assignVolume(
    args: AssignVolumeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AssignVolumeCommandOutput) => void
  ): void;
  associateElasticIp(
    args: AssociateElasticIpCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AssociateElasticIpCommandOutput>;
  associateElasticIp(
    args: AssociateElasticIpCommandInput,
    cb: (err: any, data?: AssociateElasticIpCommandOutput) => void
  ): void;
  associateElasticIp(
    args: AssociateElasticIpCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AssociateElasticIpCommandOutput) => void
  ): void;
  attachElasticLoadBalancer(
    args: AttachElasticLoadBalancerCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AttachElasticLoadBalancerCommandOutput>;
  attachElasticLoadBalancer(
    args: AttachElasticLoadBalancerCommandInput,
    cb: (err: any, data?: AttachElasticLoadBalancerCommandOutput) => void
  ): void;
  attachElasticLoadBalancer(
    args: AttachElasticLoadBalancerCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AttachElasticLoadBalancerCommandOutput) => void
  ): void;
  cloneStack(
    args: CloneStackCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CloneStackCommandOutput>;
  cloneStack(
    args: CloneStackCommandInput,
    cb: (err: any, data?: CloneStackCommandOutput) => void
  ): void;
  cloneStack(
    args: CloneStackCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CloneStackCommandOutput) => void
  ): void;
  createApp(
    args: CreateAppCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateAppCommandOutput>;
  createApp(
    args: CreateAppCommandInput,
    cb: (err: any, data?: CreateAppCommandOutput) => void
  ): void;
  createApp(
    args: CreateAppCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateAppCommandOutput) => void
  ): void;
  createDeployment(
    args: CreateDeploymentCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateDeploymentCommandOutput>;
  createDeployment(
    args: CreateDeploymentCommandInput,
    cb: (err: any, data?: CreateDeploymentCommandOutput) => void
  ): void;
  createDeployment(
    args: CreateDeploymentCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateDeploymentCommandOutput) => void
  ): void;
  createInstance(
    args: CreateInstanceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateInstanceCommandOutput>;
  createInstance(
    args: CreateInstanceCommandInput,
    cb: (err: any, data?: CreateInstanceCommandOutput) => void
  ): void;
  createInstance(
    args: CreateInstanceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateInstanceCommandOutput) => void
  ): void;
  createLayer(
    args: CreateLayerCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateLayerCommandOutput>;
  createLayer(
    args: CreateLayerCommandInput,
    cb: (err: any, data?: CreateLayerCommandOutput) => void
  ): void;
  createLayer(
    args: CreateLayerCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateLayerCommandOutput) => void
  ): void;
  createStack(
    args: CreateStackCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateStackCommandOutput>;
  createStack(
    args: CreateStackCommandInput,
    cb: (err: any, data?: CreateStackCommandOutput) => void
  ): void;
  createStack(
    args: CreateStackCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateStackCommandOutput) => void
  ): void;
  createUserProfile(
    args: CreateUserProfileCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateUserProfileCommandOutput>;
  createUserProfile(
    args: CreateUserProfileCommandInput,
    cb: (err: any, data?: CreateUserProfileCommandOutput) => void
  ): void;
  createUserProfile(
    args: CreateUserProfileCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateUserProfileCommandOutput) => void
  ): void;
  deleteApp(
    args: DeleteAppCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteAppCommandOutput>;
  deleteApp(
    args: DeleteAppCommandInput,
    cb: (err: any, data?: DeleteAppCommandOutput) => void
  ): void;
  deleteApp(
    args: DeleteAppCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteAppCommandOutput) => void
  ): void;
  deleteInstance(
    args: DeleteInstanceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteInstanceCommandOutput>;
  deleteInstance(
    args: DeleteInstanceCommandInput,
    cb: (err: any, data?: DeleteInstanceCommandOutput) => void
  ): void;
  deleteInstance(
    args: DeleteInstanceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteInstanceCommandOutput) => void
  ): void;
  deleteLayer(
    args: DeleteLayerCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteLayerCommandOutput>;
  deleteLayer(
    args: DeleteLayerCommandInput,
    cb: (err: any, data?: DeleteLayerCommandOutput) => void
  ): void;
  deleteLayer(
    args: DeleteLayerCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteLayerCommandOutput) => void
  ): void;
  deleteStack(
    args: DeleteStackCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteStackCommandOutput>;
  deleteStack(
    args: DeleteStackCommandInput,
    cb: (err: any, data?: DeleteStackCommandOutput) => void
  ): void;
  deleteStack(
    args: DeleteStackCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteStackCommandOutput) => void
  ): void;
  deleteUserProfile(
    args: DeleteUserProfileCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteUserProfileCommandOutput>;
  deleteUserProfile(
    args: DeleteUserProfileCommandInput,
    cb: (err: any, data?: DeleteUserProfileCommandOutput) => void
  ): void;
  deleteUserProfile(
    args: DeleteUserProfileCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteUserProfileCommandOutput) => void
  ): void;
  deregisterEcsCluster(
    args: DeregisterEcsClusterCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeregisterEcsClusterCommandOutput>;
  deregisterEcsCluster(
    args: DeregisterEcsClusterCommandInput,
    cb: (err: any, data?: DeregisterEcsClusterCommandOutput) => void
  ): void;
  deregisterEcsCluster(
    args: DeregisterEcsClusterCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeregisterEcsClusterCommandOutput) => void
  ): void;
  deregisterElasticIp(
    args: DeregisterElasticIpCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeregisterElasticIpCommandOutput>;
  deregisterElasticIp(
    args: DeregisterElasticIpCommandInput,
    cb: (err: any, data?: DeregisterElasticIpCommandOutput) => void
  ): void;
  deregisterElasticIp(
    args: DeregisterElasticIpCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeregisterElasticIpCommandOutput) => void
  ): void;
  deregisterInstance(
    args: DeregisterInstanceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeregisterInstanceCommandOutput>;
  deregisterInstance(
    args: DeregisterInstanceCommandInput,
    cb: (err: any, data?: DeregisterInstanceCommandOutput) => void
  ): void;
  deregisterInstance(
    args: DeregisterInstanceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeregisterInstanceCommandOutput) => void
  ): void;
  deregisterRdsDbInstance(
    args: DeregisterRdsDbInstanceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeregisterRdsDbInstanceCommandOutput>;
  deregisterRdsDbInstance(
    args: DeregisterRdsDbInstanceCommandInput,
    cb: (err: any, data?: DeregisterRdsDbInstanceCommandOutput) => void
  ): void;
  deregisterRdsDbInstance(
    args: DeregisterRdsDbInstanceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeregisterRdsDbInstanceCommandOutput) => void
  ): void;
  deregisterVolume(
    args: DeregisterVolumeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeregisterVolumeCommandOutput>;
  deregisterVolume(
    args: DeregisterVolumeCommandInput,
    cb: (err: any, data?: DeregisterVolumeCommandOutput) => void
  ): void;
  deregisterVolume(
    args: DeregisterVolumeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeregisterVolumeCommandOutput) => void
  ): void;
  describeAgentVersions(
    args: DescribeAgentVersionsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeAgentVersionsCommandOutput>;
  describeAgentVersions(
    args: DescribeAgentVersionsCommandInput,
    cb: (err: any, data?: DescribeAgentVersionsCommandOutput) => void
  ): void;
  describeAgentVersions(
    args: DescribeAgentVersionsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeAgentVersionsCommandOutput) => void
  ): void;
  describeApps(
    args: DescribeAppsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeAppsCommandOutput>;
  describeApps(
    args: DescribeAppsCommandInput,
    cb: (err: any, data?: DescribeAppsCommandOutput) => void
  ): void;
  describeApps(
    args: DescribeAppsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeAppsCommandOutput) => void
  ): void;
  describeCommands(
    args: DescribeCommandsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeCommandsCommandOutput>;
  describeCommands(
    args: DescribeCommandsCommandInput,
    cb: (err: any, data?: DescribeCommandsCommandOutput) => void
  ): void;
  describeCommands(
    args: DescribeCommandsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeCommandsCommandOutput) => void
  ): void;
  describeDeployments(
    args: DescribeDeploymentsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeDeploymentsCommandOutput>;
  describeDeployments(
    args: DescribeDeploymentsCommandInput,
    cb: (err: any, data?: DescribeDeploymentsCommandOutput) => void
  ): void;
  describeDeployments(
    args: DescribeDeploymentsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeDeploymentsCommandOutput) => void
  ): void;
  describeEcsClusters(
    args: DescribeEcsClustersCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeEcsClustersCommandOutput>;
  describeEcsClusters(
    args: DescribeEcsClustersCommandInput,
    cb: (err: any, data?: DescribeEcsClustersCommandOutput) => void
  ): void;
  describeEcsClusters(
    args: DescribeEcsClustersCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeEcsClustersCommandOutput) => void
  ): void;
  describeElasticIps(
    args: DescribeElasticIpsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeElasticIpsCommandOutput>;
  describeElasticIps(
    args: DescribeElasticIpsCommandInput,
    cb: (err: any, data?: DescribeElasticIpsCommandOutput) => void
  ): void;
  describeElasticIps(
    args: DescribeElasticIpsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeElasticIpsCommandOutput) => void
  ): void;
  describeElasticLoadBalancers(
    args: DescribeElasticLoadBalancersCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeElasticLoadBalancersCommandOutput>;
  describeElasticLoadBalancers(
    args: DescribeElasticLoadBalancersCommandInput,
    cb: (err: any, data?: DescribeElasticLoadBalancersCommandOutput) => void
  ): void;
  describeElasticLoadBalancers(
    args: DescribeElasticLoadBalancersCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeElasticLoadBalancersCommandOutput) => void
  ): void;
  describeInstances(
    args: DescribeInstancesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeInstancesCommandOutput>;
  describeInstances(
    args: DescribeInstancesCommandInput,
    cb: (err: any, data?: DescribeInstancesCommandOutput) => void
  ): void;
  describeInstances(
    args: DescribeInstancesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeInstancesCommandOutput) => void
  ): void;
  describeLayers(
    args: DescribeLayersCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeLayersCommandOutput>;
  describeLayers(
    args: DescribeLayersCommandInput,
    cb: (err: any, data?: DescribeLayersCommandOutput) => void
  ): void;
  describeLayers(
    args: DescribeLayersCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeLayersCommandOutput) => void
  ): void;
  describeLoadBasedAutoScaling(
    args: DescribeLoadBasedAutoScalingCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeLoadBasedAutoScalingCommandOutput>;
  describeLoadBasedAutoScaling(
    args: DescribeLoadBasedAutoScalingCommandInput,
    cb: (err: any, data?: DescribeLoadBasedAutoScalingCommandOutput) => void
  ): void;
  describeLoadBasedAutoScaling(
    args: DescribeLoadBasedAutoScalingCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeLoadBasedAutoScalingCommandOutput) => void
  ): void;
  describeMyUserProfile(
    args: DescribeMyUserProfileCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeMyUserProfileCommandOutput>;
  describeMyUserProfile(
    args: DescribeMyUserProfileCommandInput,
    cb: (err: any, data?: DescribeMyUserProfileCommandOutput) => void
  ): void;
  describeMyUserProfile(
    args: DescribeMyUserProfileCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeMyUserProfileCommandOutput) => void
  ): void;
  describeOperatingSystems(
    args: DescribeOperatingSystemsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeOperatingSystemsCommandOutput>;
  describeOperatingSystems(
    args: DescribeOperatingSystemsCommandInput,
    cb: (err: any, data?: DescribeOperatingSystemsCommandOutput) => void
  ): void;
  describeOperatingSystems(
    args: DescribeOperatingSystemsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeOperatingSystemsCommandOutput) => void
  ): void;
  describePermissions(
    args: DescribePermissionsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribePermissionsCommandOutput>;
  describePermissions(
    args: DescribePermissionsCommandInput,
    cb: (err: any, data?: DescribePermissionsCommandOutput) => void
  ): void;
  describePermissions(
    args: DescribePermissionsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribePermissionsCommandOutput) => void
  ): void;
  describeRaidArrays(
    args: DescribeRaidArraysCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeRaidArraysCommandOutput>;
  describeRaidArrays(
    args: DescribeRaidArraysCommandInput,
    cb: (err: any, data?: DescribeRaidArraysCommandOutput) => void
  ): void;
  describeRaidArrays(
    args: DescribeRaidArraysCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeRaidArraysCommandOutput) => void
  ): void;
  describeRdsDbInstances(
    args: DescribeRdsDbInstancesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeRdsDbInstancesCommandOutput>;
  describeRdsDbInstances(
    args: DescribeRdsDbInstancesCommandInput,
    cb: (err: any, data?: DescribeRdsDbInstancesCommandOutput) => void
  ): void;
  describeRdsDbInstances(
    args: DescribeRdsDbInstancesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeRdsDbInstancesCommandOutput) => void
  ): void;
  describeServiceErrors(
    args: DescribeServiceErrorsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeServiceErrorsCommandOutput>;
  describeServiceErrors(
    args: DescribeServiceErrorsCommandInput,
    cb: (err: any, data?: DescribeServiceErrorsCommandOutput) => void
  ): void;
  describeServiceErrors(
    args: DescribeServiceErrorsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeServiceErrorsCommandOutput) => void
  ): void;
  describeStackProvisioningParameters(
    args: DescribeStackProvisioningParametersCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeStackProvisioningParametersCommandOutput>;
  describeStackProvisioningParameters(
    args: DescribeStackProvisioningParametersCommandInput,
    cb: (
      err: any,
      data?: DescribeStackProvisioningParametersCommandOutput
    ) => void
  ): void;
  describeStackProvisioningParameters(
    args: DescribeStackProvisioningParametersCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: DescribeStackProvisioningParametersCommandOutput
    ) => void
  ): void;
  describeStacks(
    args: DescribeStacksCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeStacksCommandOutput>;
  describeStacks(
    args: DescribeStacksCommandInput,
    cb: (err: any, data?: DescribeStacksCommandOutput) => void
  ): void;
  describeStacks(
    args: DescribeStacksCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeStacksCommandOutput) => void
  ): void;
  describeStackSummary(
    args: DescribeStackSummaryCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeStackSummaryCommandOutput>;
  describeStackSummary(
    args: DescribeStackSummaryCommandInput,
    cb: (err: any, data?: DescribeStackSummaryCommandOutput) => void
  ): void;
  describeStackSummary(
    args: DescribeStackSummaryCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeStackSummaryCommandOutput) => void
  ): void;
  describeTimeBasedAutoScaling(
    args: DescribeTimeBasedAutoScalingCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeTimeBasedAutoScalingCommandOutput>;
  describeTimeBasedAutoScaling(
    args: DescribeTimeBasedAutoScalingCommandInput,
    cb: (err: any, data?: DescribeTimeBasedAutoScalingCommandOutput) => void
  ): void;
  describeTimeBasedAutoScaling(
    args: DescribeTimeBasedAutoScalingCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeTimeBasedAutoScalingCommandOutput) => void
  ): void;
  describeUserProfiles(
    args: DescribeUserProfilesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeUserProfilesCommandOutput>;
  describeUserProfiles(
    args: DescribeUserProfilesCommandInput,
    cb: (err: any, data?: DescribeUserProfilesCommandOutput) => void
  ): void;
  describeUserProfiles(
    args: DescribeUserProfilesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeUserProfilesCommandOutput) => void
  ): void;
  describeVolumes(
    args: DescribeVolumesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeVolumesCommandOutput>;
  describeVolumes(
    args: DescribeVolumesCommandInput,
    cb: (err: any, data?: DescribeVolumesCommandOutput) => void
  ): void;
  describeVolumes(
    args: DescribeVolumesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeVolumesCommandOutput) => void
  ): void;
  detachElasticLoadBalancer(
    args: DetachElasticLoadBalancerCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DetachElasticLoadBalancerCommandOutput>;
  detachElasticLoadBalancer(
    args: DetachElasticLoadBalancerCommandInput,
    cb: (err: any, data?: DetachElasticLoadBalancerCommandOutput) => void
  ): void;
  detachElasticLoadBalancer(
    args: DetachElasticLoadBalancerCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DetachElasticLoadBalancerCommandOutput) => void
  ): void;
  disassociateElasticIp(
    args: DisassociateElasticIpCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DisassociateElasticIpCommandOutput>;
  disassociateElasticIp(
    args: DisassociateElasticIpCommandInput,
    cb: (err: any, data?: DisassociateElasticIpCommandOutput) => void
  ): void;
  disassociateElasticIp(
    args: DisassociateElasticIpCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DisassociateElasticIpCommandOutput) => void
  ): void;
  getHostnameSuggestion(
    args: GetHostnameSuggestionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetHostnameSuggestionCommandOutput>;
  getHostnameSuggestion(
    args: GetHostnameSuggestionCommandInput,
    cb: (err: any, data?: GetHostnameSuggestionCommandOutput) => void
  ): void;
  getHostnameSuggestion(
    args: GetHostnameSuggestionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetHostnameSuggestionCommandOutput) => void
  ): void;
  grantAccess(
    args: GrantAccessCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GrantAccessCommandOutput>;
  grantAccess(
    args: GrantAccessCommandInput,
    cb: (err: any, data?: GrantAccessCommandOutput) => void
  ): void;
  grantAccess(
    args: GrantAccessCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GrantAccessCommandOutput) => void
  ): void;
  listTags(
    args: ListTagsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListTagsCommandOutput>;
  listTags(
    args: ListTagsCommandInput,
    cb: (err: any, data?: ListTagsCommandOutput) => void
  ): void;
  listTags(
    args: ListTagsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListTagsCommandOutput) => void
  ): void;
  rebootInstance(
    args: RebootInstanceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<RebootInstanceCommandOutput>;
  rebootInstance(
    args: RebootInstanceCommandInput,
    cb: (err: any, data?: RebootInstanceCommandOutput) => void
  ): void;
  rebootInstance(
    args: RebootInstanceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: RebootInstanceCommandOutput) => void
  ): void;
  registerEcsCluster(
    args: RegisterEcsClusterCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<RegisterEcsClusterCommandOutput>;
  registerEcsCluster(
    args: RegisterEcsClusterCommandInput,
    cb: (err: any, data?: RegisterEcsClusterCommandOutput) => void
  ): void;
  registerEcsCluster(
    args: RegisterEcsClusterCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: RegisterEcsClusterCommandOutput) => void
  ): void;
  registerElasticIp(
    args: RegisterElasticIpCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<RegisterElasticIpCommandOutput>;
  registerElasticIp(
    args: RegisterElasticIpCommandInput,
    cb: (err: any, data?: RegisterElasticIpCommandOutput) => void
  ): void;
  registerElasticIp(
    args: RegisterElasticIpCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: RegisterElasticIpCommandOutput) => void
  ): void;
  registerInstance(
    args: RegisterInstanceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<RegisterInstanceCommandOutput>;
  registerInstance(
    args: RegisterInstanceCommandInput,
    cb: (err: any, data?: RegisterInstanceCommandOutput) => void
  ): void;
  registerInstance(
    args: RegisterInstanceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: RegisterInstanceCommandOutput) => void
  ): void;
  registerRdsDbInstance(
    args: RegisterRdsDbInstanceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<RegisterRdsDbInstanceCommandOutput>;
  registerRdsDbInstance(
    args: RegisterRdsDbInstanceCommandInput,
    cb: (err: any, data?: RegisterRdsDbInstanceCommandOutput) => void
  ): void;
  registerRdsDbInstance(
    args: RegisterRdsDbInstanceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: RegisterRdsDbInstanceCommandOutput) => void
  ): void;
  registerVolume(
    args: RegisterVolumeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<RegisterVolumeCommandOutput>;
  registerVolume(
    args: RegisterVolumeCommandInput,
    cb: (err: any, data?: RegisterVolumeCommandOutput) => void
  ): void;
  registerVolume(
    args: RegisterVolumeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: RegisterVolumeCommandOutput) => void
  ): void;
  setLoadBasedAutoScaling(
    args: SetLoadBasedAutoScalingCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<SetLoadBasedAutoScalingCommandOutput>;
  setLoadBasedAutoScaling(
    args: SetLoadBasedAutoScalingCommandInput,
    cb: (err: any, data?: SetLoadBasedAutoScalingCommandOutput) => void
  ): void;
  setLoadBasedAutoScaling(
    args: SetLoadBasedAutoScalingCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: SetLoadBasedAutoScalingCommandOutput) => void
  ): void;
  setPermission(
    args: SetPermissionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<SetPermissionCommandOutput>;
  setPermission(
    args: SetPermissionCommandInput,
    cb: (err: any, data?: SetPermissionCommandOutput) => void
  ): void;
  setPermission(
    args: SetPermissionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: SetPermissionCommandOutput) => void
  ): void;
  setTimeBasedAutoScaling(
    args: SetTimeBasedAutoScalingCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<SetTimeBasedAutoScalingCommandOutput>;
  setTimeBasedAutoScaling(
    args: SetTimeBasedAutoScalingCommandInput,
    cb: (err: any, data?: SetTimeBasedAutoScalingCommandOutput) => void
  ): void;
  setTimeBasedAutoScaling(
    args: SetTimeBasedAutoScalingCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: SetTimeBasedAutoScalingCommandOutput) => void
  ): void;
  startInstance(
    args: StartInstanceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<StartInstanceCommandOutput>;
  startInstance(
    args: StartInstanceCommandInput,
    cb: (err: any, data?: StartInstanceCommandOutput) => void
  ): void;
  startInstance(
    args: StartInstanceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: StartInstanceCommandOutput) => void
  ): void;
  startStack(
    args: StartStackCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<StartStackCommandOutput>;
  startStack(
    args: StartStackCommandInput,
    cb: (err: any, data?: StartStackCommandOutput) => void
  ): void;
  startStack(
    args: StartStackCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: StartStackCommandOutput) => void
  ): void;
  stopInstance(
    args: StopInstanceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<StopInstanceCommandOutput>;
  stopInstance(
    args: StopInstanceCommandInput,
    cb: (err: any, data?: StopInstanceCommandOutput) => void
  ): void;
  stopInstance(
    args: StopInstanceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: StopInstanceCommandOutput) => void
  ): void;
  stopStack(
    args: StopStackCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<StopStackCommandOutput>;
  stopStack(
    args: StopStackCommandInput,
    cb: (err: any, data?: StopStackCommandOutput) => void
  ): void;
  stopStack(
    args: StopStackCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: StopStackCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<TagResourceCommandOutput>;
  tagResource(
    args: TagResourceCommandInput,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  unassignInstance(
    args: UnassignInstanceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UnassignInstanceCommandOutput>;
  unassignInstance(
    args: UnassignInstanceCommandInput,
    cb: (err: any, data?: UnassignInstanceCommandOutput) => void
  ): void;
  unassignInstance(
    args: UnassignInstanceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UnassignInstanceCommandOutput) => void
  ): void;
  unassignVolume(
    args: UnassignVolumeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UnassignVolumeCommandOutput>;
  unassignVolume(
    args: UnassignVolumeCommandInput,
    cb: (err: any, data?: UnassignVolumeCommandOutput) => void
  ): void;
  unassignVolume(
    args: UnassignVolumeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UnassignVolumeCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UntagResourceCommandOutput>;
  untagResource(
    args: UntagResourceCommandInput,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  updateApp(
    args: UpdateAppCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateAppCommandOutput>;
  updateApp(
    args: UpdateAppCommandInput,
    cb: (err: any, data?: UpdateAppCommandOutput) => void
  ): void;
  updateApp(
    args: UpdateAppCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateAppCommandOutput) => void
  ): void;
  updateElasticIp(
    args: UpdateElasticIpCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateElasticIpCommandOutput>;
  updateElasticIp(
    args: UpdateElasticIpCommandInput,
    cb: (err: any, data?: UpdateElasticIpCommandOutput) => void
  ): void;
  updateElasticIp(
    args: UpdateElasticIpCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateElasticIpCommandOutput) => void
  ): void;
  updateInstance(
    args: UpdateInstanceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateInstanceCommandOutput>;
  updateInstance(
    args: UpdateInstanceCommandInput,
    cb: (err: any, data?: UpdateInstanceCommandOutput) => void
  ): void;
  updateInstance(
    args: UpdateInstanceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateInstanceCommandOutput) => void
  ): void;
  updateLayer(
    args: UpdateLayerCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateLayerCommandOutput>;
  updateLayer(
    args: UpdateLayerCommandInput,
    cb: (err: any, data?: UpdateLayerCommandOutput) => void
  ): void;
  updateLayer(
    args: UpdateLayerCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateLayerCommandOutput) => void
  ): void;
  updateMyUserProfile(
    args: UpdateMyUserProfileCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateMyUserProfileCommandOutput>;
  updateMyUserProfile(
    args: UpdateMyUserProfileCommandInput,
    cb: (err: any, data?: UpdateMyUserProfileCommandOutput) => void
  ): void;
  updateMyUserProfile(
    args: UpdateMyUserProfileCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateMyUserProfileCommandOutput) => void
  ): void;
  updateRdsDbInstance(
    args: UpdateRdsDbInstanceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateRdsDbInstanceCommandOutput>;
  updateRdsDbInstance(
    args: UpdateRdsDbInstanceCommandInput,
    cb: (err: any, data?: UpdateRdsDbInstanceCommandOutput) => void
  ): void;
  updateRdsDbInstance(
    args: UpdateRdsDbInstanceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateRdsDbInstanceCommandOutput) => void
  ): void;
  updateStack(
    args: UpdateStackCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateStackCommandOutput>;
  updateStack(
    args: UpdateStackCommandInput,
    cb: (err: any, data?: UpdateStackCommandOutput) => void
  ): void;
  updateStack(
    args: UpdateStackCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateStackCommandOutput) => void
  ): void;
  updateUserProfile(
    args: UpdateUserProfileCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateUserProfileCommandOutput>;
  updateUserProfile(
    args: UpdateUserProfileCommandInput,
    cb: (err: any, data?: UpdateUserProfileCommandOutput) => void
  ): void;
  updateUserProfile(
    args: UpdateUserProfileCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateUserProfileCommandOutput) => void
  ): void;
  updateVolume(
    args: UpdateVolumeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateVolumeCommandOutput>;
  updateVolume(
    args: UpdateVolumeCommandInput,
    cb: (err: any, data?: UpdateVolumeCommandOutput) => void
  ): void;
  updateVolume(
    args: UpdateVolumeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateVolumeCommandOutput) => void
  ): void;
}
export declare class OpsWorks extends OpsWorksClient implements OpsWorks {}
