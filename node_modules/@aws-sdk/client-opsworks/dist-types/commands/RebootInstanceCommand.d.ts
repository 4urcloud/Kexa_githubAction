import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import { RebootInstanceRequest } from "../models/models_0";
import { OpsWorksClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../OpsWorksClient";
/**
 * @public
 */
export { __MetadataBearer, $Command };
/**
 * @public
 *
 * The input for {@link RebootInstanceCommand}.
 */
export interface RebootInstanceCommandInput extends RebootInstanceRequest {
}
/**
 * @public
 *
 * The output of {@link RebootInstanceCommand}.
 */
export interface RebootInstanceCommandOutput extends __MetadataBearer {
}
declare const RebootInstanceCommand_base: {
    new (input: RebootInstanceCommandInput): import("@smithy/smithy-client").CommandImpl<RebootInstanceCommandInput, RebootInstanceCommandOutput, OpsWorksClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    new (__0_0: RebootInstanceCommandInput): import("@smithy/smithy-client").CommandImpl<RebootInstanceCommandInput, RebootInstanceCommandOutput, OpsWorksClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
/**
 * <p>Reboots a specified instance. For more information, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances-starting.html">Starting,
 *         Stopping, and Rebooting Instances</a>.</p>
 *          <p>
 *             <b>Required Permissions</b>: To use this action, an IAM user must have a Manage permissions
 *       level for the stack, or an attached policy that explicitly grants permissions. For more
 *       information on user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User
 *         Permissions</a>.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { OpsWorksClient, RebootInstanceCommand } from "@aws-sdk/client-opsworks"; // ES Modules import
 * // const { OpsWorksClient, RebootInstanceCommand } = require("@aws-sdk/client-opsworks"); // CommonJS import
 * const client = new OpsWorksClient(config);
 * const input = { // RebootInstanceRequest
 *   InstanceId: "STRING_VALUE", // required
 * };
 * const command = new RebootInstanceCommand(input);
 * const response = await client.send(command);
 * // {};
 *
 * ```
 *
 * @param RebootInstanceCommandInput - {@link RebootInstanceCommandInput}
 * @returns {@link RebootInstanceCommandOutput}
 * @see {@link RebootInstanceCommandInput} for command's `input` shape.
 * @see {@link RebootInstanceCommandOutput} for command's `response` shape.
 * @see {@link OpsWorksClientResolvedConfig | config} for OpsWorksClient's `config` shape.
 *
 * @throws {@link ResourceNotFoundException} (client fault)
 *  <p>Indicates that a resource was not found.</p>
 *
 * @throws {@link ValidationException} (client fault)
 *  <p>Indicates that a request was not valid.</p>
 *
 * @throws {@link OpsWorksServiceException}
 * <p>Base exception class for all service exceptions from OpsWorks service.</p>
 *
 * @public
 */
export declare class RebootInstanceCommand extends RebootInstanceCommand_base {
}
