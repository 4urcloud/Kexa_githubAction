import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import { DescribeOperatingSystemsResponse } from "../models/models_0";
import { OpsWorksClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../OpsWorksClient";
/**
 * @public
 */
export { __MetadataBearer, $Command };
/**
 * @public
 *
 * The input for {@link DescribeOperatingSystemsCommand}.
 */
export interface DescribeOperatingSystemsCommandInput {
}
/**
 * @public
 *
 * The output of {@link DescribeOperatingSystemsCommand}.
 */
export interface DescribeOperatingSystemsCommandOutput extends DescribeOperatingSystemsResponse, __MetadataBearer {
}
declare const DescribeOperatingSystemsCommand_base: {
    new (input: DescribeOperatingSystemsCommandInput): import("@smithy/smithy-client").CommandImpl<DescribeOperatingSystemsCommandInput, DescribeOperatingSystemsCommandOutput, OpsWorksClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    new (...[input]: [] | [DescribeOperatingSystemsCommandInput]): import("@smithy/smithy-client").CommandImpl<DescribeOperatingSystemsCommandInput, DescribeOperatingSystemsCommandOutput, OpsWorksClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
/**
 * <p>Describes the operating systems that are supported by AWS OpsWorks Stacks.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { OpsWorksClient, DescribeOperatingSystemsCommand } from "@aws-sdk/client-opsworks"; // ES Modules import
 * // const { OpsWorksClient, DescribeOperatingSystemsCommand } = require("@aws-sdk/client-opsworks"); // CommonJS import
 * const client = new OpsWorksClient(config);
 * const input = {};
 * const command = new DescribeOperatingSystemsCommand(input);
 * const response = await client.send(command);
 * // { // DescribeOperatingSystemsResponse
 * //   OperatingSystems: [ // OperatingSystems
 * //     { // OperatingSystem
 * //       Name: "STRING_VALUE",
 * //       Id: "STRING_VALUE",
 * //       Type: "STRING_VALUE",
 * //       ConfigurationManagers: [ // OperatingSystemConfigurationManagers
 * //         { // OperatingSystemConfigurationManager
 * //           Name: "STRING_VALUE",
 * //           Version: "STRING_VALUE",
 * //         },
 * //       ],
 * //       ReportedName: "STRING_VALUE",
 * //       ReportedVersion: "STRING_VALUE",
 * //       Supported: true || false,
 * //     },
 * //   ],
 * // };
 *
 * ```
 *
 * @param DescribeOperatingSystemsCommandInput - {@link DescribeOperatingSystemsCommandInput}
 * @returns {@link DescribeOperatingSystemsCommandOutput}
 * @see {@link DescribeOperatingSystemsCommandInput} for command's `input` shape.
 * @see {@link DescribeOperatingSystemsCommandOutput} for command's `response` shape.
 * @see {@link OpsWorksClientResolvedConfig | config} for OpsWorksClient's `config` shape.
 *
 * @throws {@link OpsWorksServiceException}
 * <p>Base exception class for all service exceptions from OpsWorks service.</p>
 *
 * @public
 */
export declare class DescribeOperatingSystemsCommand extends DescribeOperatingSystemsCommand_base {
}
