import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import { DescribeAgentVersionsRequest, DescribeAgentVersionsResult } from "../models/models_0";
import { OpsWorksClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../OpsWorksClient";
/**
 * @public
 */
export { __MetadataBearer, $Command };
/**
 * @public
 *
 * The input for {@link DescribeAgentVersionsCommand}.
 */
export interface DescribeAgentVersionsCommandInput extends DescribeAgentVersionsRequest {
}
/**
 * @public
 *
 * The output of {@link DescribeAgentVersionsCommand}.
 */
export interface DescribeAgentVersionsCommandOutput extends DescribeAgentVersionsResult, __MetadataBearer {
}
declare const DescribeAgentVersionsCommand_base: {
    new (input: DescribeAgentVersionsCommandInput): import("@smithy/smithy-client").CommandImpl<DescribeAgentVersionsCommandInput, DescribeAgentVersionsCommandOutput, OpsWorksClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    new (...[input]: [] | [DescribeAgentVersionsCommandInput]): import("@smithy/smithy-client").CommandImpl<DescribeAgentVersionsCommandInput, DescribeAgentVersionsCommandOutput, OpsWorksClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
/**
 * <p>Describes the available AWS OpsWorks Stacks agent versions. You must specify a stack ID or a
 *     configuration manager. <code>DescribeAgentVersions</code> returns a list of available
 *     agent versions for the specified stack or configuration manager.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { OpsWorksClient, DescribeAgentVersionsCommand } from "@aws-sdk/client-opsworks"; // ES Modules import
 * // const { OpsWorksClient, DescribeAgentVersionsCommand } = require("@aws-sdk/client-opsworks"); // CommonJS import
 * const client = new OpsWorksClient(config);
 * const input = { // DescribeAgentVersionsRequest
 *   StackId: "STRING_VALUE",
 *   ConfigurationManager: { // StackConfigurationManager
 *     Name: "STRING_VALUE",
 *     Version: "STRING_VALUE",
 *   },
 * };
 * const command = new DescribeAgentVersionsCommand(input);
 * const response = await client.send(command);
 * // { // DescribeAgentVersionsResult
 * //   AgentVersions: [ // AgentVersions
 * //     { // AgentVersion
 * //       Version: "STRING_VALUE",
 * //       ConfigurationManager: { // StackConfigurationManager
 * //         Name: "STRING_VALUE",
 * //         Version: "STRING_VALUE",
 * //       },
 * //     },
 * //   ],
 * // };
 *
 * ```
 *
 * @param DescribeAgentVersionsCommandInput - {@link DescribeAgentVersionsCommandInput}
 * @returns {@link DescribeAgentVersionsCommandOutput}
 * @see {@link DescribeAgentVersionsCommandInput} for command's `input` shape.
 * @see {@link DescribeAgentVersionsCommandOutput} for command's `response` shape.
 * @see {@link OpsWorksClientResolvedConfig | config} for OpsWorksClient's `config` shape.
 *
 * @throws {@link ResourceNotFoundException} (client fault)
 *  <p>Indicates that a resource was not found.</p>
 *
 * @throws {@link ValidationException} (client fault)
 *  <p>Indicates that a request was not valid.</p>
 *
 * @throws {@link OpsWorksServiceException}
 * <p>Base exception class for all service exceptions from OpsWorks service.</p>
 *
 * @public
 */
export declare class DescribeAgentVersionsCommand extends DescribeAgentVersionsCommand_base {
}
