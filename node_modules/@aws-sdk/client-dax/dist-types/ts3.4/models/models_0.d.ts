import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { DAXServiceException as __BaseException } from "./DAXServiceException";
export declare class ClusterAlreadyExistsFault extends __BaseException {
  readonly name: "ClusterAlreadyExistsFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ClusterAlreadyExistsFault, __BaseException>
  );
}
export declare class ClusterQuotaForCustomerExceededFault extends __BaseException {
  readonly name: "ClusterQuotaForCustomerExceededFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      ClusterQuotaForCustomerExceededFault,
      __BaseException
    >
  );
}
export declare const ClusterEndpointEncryptionType: {
  readonly NONE: "NONE";
  readonly TLS: "TLS";
};
export type ClusterEndpointEncryptionType =
  (typeof ClusterEndpointEncryptionType)[keyof typeof ClusterEndpointEncryptionType];
export interface SSESpecification {
  Enabled: boolean | undefined;
}
export interface Tag {
  Key?: string;
  Value?: string;
}
export interface CreateClusterRequest {
  ClusterName: string | undefined;
  NodeType: string | undefined;
  Description?: string;
  ReplicationFactor: number | undefined;
  AvailabilityZones?: string[];
  SubnetGroupName?: string;
  SecurityGroupIds?: string[];
  PreferredMaintenanceWindow?: string;
  NotificationTopicArn?: string;
  IamRoleArn: string | undefined;
  ParameterGroupName?: string;
  Tags?: Tag[];
  SSESpecification?: SSESpecification;
  ClusterEndpointEncryptionType?: ClusterEndpointEncryptionType;
}
export interface Endpoint {
  Address?: string;
  Port?: number;
  URL?: string;
}
export interface Node {
  NodeId?: string;
  Endpoint?: Endpoint;
  NodeCreateTime?: Date;
  AvailabilityZone?: string;
  NodeStatus?: string;
  ParameterGroupStatus?: string;
}
export interface NotificationConfiguration {
  TopicArn?: string;
  TopicStatus?: string;
}
export interface ParameterGroupStatus {
  ParameterGroupName?: string;
  ParameterApplyStatus?: string;
  NodeIdsToReboot?: string[];
}
export interface SecurityGroupMembership {
  SecurityGroupIdentifier?: string;
  Status?: string;
}
export declare const SSEStatus: {
  readonly DISABLED: "DISABLED";
  readonly DISABLING: "DISABLING";
  readonly ENABLED: "ENABLED";
  readonly ENABLING: "ENABLING";
};
export type SSEStatus = (typeof SSEStatus)[keyof typeof SSEStatus];
export interface SSEDescription {
  Status?: SSEStatus;
}
export interface Cluster {
  ClusterName?: string;
  Description?: string;
  ClusterArn?: string;
  TotalNodes?: number;
  ActiveNodes?: number;
  NodeType?: string;
  Status?: string;
  ClusterDiscoveryEndpoint?: Endpoint;
  NodeIdsToRemove?: string[];
  Nodes?: Node[];
  PreferredMaintenanceWindow?: string;
  NotificationConfiguration?: NotificationConfiguration;
  SubnetGroup?: string;
  SecurityGroups?: SecurityGroupMembership[];
  IamRoleArn?: string;
  ParameterGroup?: ParameterGroupStatus;
  SSEDescription?: SSEDescription;
  ClusterEndpointEncryptionType?: ClusterEndpointEncryptionType;
}
export interface CreateClusterResponse {
  Cluster?: Cluster;
}
export declare class InsufficientClusterCapacityFault extends __BaseException {
  readonly name: "InsufficientClusterCapacityFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      InsufficientClusterCapacityFault,
      __BaseException
    >
  );
}
export declare class InvalidClusterStateFault extends __BaseException {
  readonly name: "InvalidClusterStateFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidClusterStateFault, __BaseException>
  );
}
export declare class InvalidParameterCombinationException extends __BaseException {
  readonly name: "InvalidParameterCombinationException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      InvalidParameterCombinationException,
      __BaseException
    >
  );
}
export declare class InvalidParameterGroupStateFault extends __BaseException {
  readonly name: "InvalidParameterGroupStateFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      InvalidParameterGroupStateFault,
      __BaseException
    >
  );
}
export declare class InvalidParameterValueException extends __BaseException {
  readonly name: "InvalidParameterValueException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidParameterValueException, __BaseException>
  );
}
export declare class InvalidVPCNetworkStateFault extends __BaseException {
  readonly name: "InvalidVPCNetworkStateFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidVPCNetworkStateFault, __BaseException>
  );
}
export declare class NodeQuotaForClusterExceededFault extends __BaseException {
  readonly name: "NodeQuotaForClusterExceededFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      NodeQuotaForClusterExceededFault,
      __BaseException
    >
  );
}
export declare class NodeQuotaForCustomerExceededFault extends __BaseException {
  readonly name: "NodeQuotaForCustomerExceededFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      NodeQuotaForCustomerExceededFault,
      __BaseException
    >
  );
}
export declare class ParameterGroupNotFoundFault extends __BaseException {
  readonly name: "ParameterGroupNotFoundFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ParameterGroupNotFoundFault, __BaseException>
  );
}
export declare class ServiceLinkedRoleNotFoundFault extends __BaseException {
  readonly name: "ServiceLinkedRoleNotFoundFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ServiceLinkedRoleNotFoundFault, __BaseException>
  );
}
export declare class ServiceQuotaExceededException extends __BaseException {
  readonly name: "ServiceQuotaExceededException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ServiceQuotaExceededException, __BaseException>
  );
}
export declare class SubnetGroupNotFoundFault extends __BaseException {
  readonly name: "SubnetGroupNotFoundFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<SubnetGroupNotFoundFault, __BaseException>
  );
}
export declare class TagQuotaPerResourceExceeded extends __BaseException {
  readonly name: "TagQuotaPerResourceExceeded";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<TagQuotaPerResourceExceeded, __BaseException>
  );
}
export interface CreateParameterGroupRequest {
  ParameterGroupName: string | undefined;
  Description?: string;
}
export interface ParameterGroup {
  ParameterGroupName?: string;
  Description?: string;
}
export interface CreateParameterGroupResponse {
  ParameterGroup?: ParameterGroup;
}
export declare class ParameterGroupAlreadyExistsFault extends __BaseException {
  readonly name: "ParameterGroupAlreadyExistsFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      ParameterGroupAlreadyExistsFault,
      __BaseException
    >
  );
}
export declare class ParameterGroupQuotaExceededFault extends __BaseException {
  readonly name: "ParameterGroupQuotaExceededFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      ParameterGroupQuotaExceededFault,
      __BaseException
    >
  );
}
export interface CreateSubnetGroupRequest {
  SubnetGroupName: string | undefined;
  Description?: string;
  SubnetIds: string[] | undefined;
}
export interface Subnet {
  SubnetIdentifier?: string;
  SubnetAvailabilityZone?: string;
}
export interface SubnetGroup {
  SubnetGroupName?: string;
  Description?: string;
  VpcId?: string;
  Subnets?: Subnet[];
}
export interface CreateSubnetGroupResponse {
  SubnetGroup?: SubnetGroup;
}
export declare class InvalidSubnet extends __BaseException {
  readonly name: "InvalidSubnet";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<InvalidSubnet, __BaseException>);
}
export declare class SubnetGroupAlreadyExistsFault extends __BaseException {
  readonly name: "SubnetGroupAlreadyExistsFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<SubnetGroupAlreadyExistsFault, __BaseException>
  );
}
export declare class SubnetGroupQuotaExceededFault extends __BaseException {
  readonly name: "SubnetGroupQuotaExceededFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<SubnetGroupQuotaExceededFault, __BaseException>
  );
}
export declare class SubnetQuotaExceededFault extends __BaseException {
  readonly name: "SubnetQuotaExceededFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<SubnetQuotaExceededFault, __BaseException>
  );
}
export declare class ClusterNotFoundFault extends __BaseException {
  readonly name: "ClusterNotFoundFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ClusterNotFoundFault, __BaseException>
  );
}
export interface DecreaseReplicationFactorRequest {
  ClusterName: string | undefined;
  NewReplicationFactor: number | undefined;
  AvailabilityZones?: string[];
  NodeIdsToRemove?: string[];
}
export interface DecreaseReplicationFactorResponse {
  Cluster?: Cluster;
}
export declare class NodeNotFoundFault extends __BaseException {
  readonly name: "NodeNotFoundFault";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<NodeNotFoundFault, __BaseException>);
}
export interface DeleteClusterRequest {
  ClusterName: string | undefined;
}
export interface DeleteClusterResponse {
  Cluster?: Cluster;
}
export interface DeleteParameterGroupRequest {
  ParameterGroupName: string | undefined;
}
export interface DeleteParameterGroupResponse {
  DeletionMessage?: string;
}
export interface DeleteSubnetGroupRequest {
  SubnetGroupName: string | undefined;
}
export interface DeleteSubnetGroupResponse {
  DeletionMessage?: string;
}
export declare class SubnetGroupInUseFault extends __BaseException {
  readonly name: "SubnetGroupInUseFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<SubnetGroupInUseFault, __BaseException>
  );
}
export interface DescribeClustersRequest {
  ClusterNames?: string[];
  MaxResults?: number;
  NextToken?: string;
}
export interface DescribeClustersResponse {
  NextToken?: string;
  Clusters?: Cluster[];
}
export interface DescribeDefaultParametersRequest {
  MaxResults?: number;
  NextToken?: string;
}
export declare const ChangeType: {
  readonly IMMEDIATE: "IMMEDIATE";
  readonly REQUIRES_REBOOT: "REQUIRES_REBOOT";
};
export type ChangeType = (typeof ChangeType)[keyof typeof ChangeType];
export declare const IsModifiable: {
  readonly CONDITIONAL: "CONDITIONAL";
  readonly FALSE: "FALSE";
  readonly TRUE: "TRUE";
};
export type IsModifiable = (typeof IsModifiable)[keyof typeof IsModifiable];
export interface NodeTypeSpecificValue {
  NodeType?: string;
  Value?: string;
}
export declare const ParameterType: {
  readonly DEFAULT: "DEFAULT";
  readonly NODE_TYPE_SPECIFIC: "NODE_TYPE_SPECIFIC";
};
export type ParameterType = (typeof ParameterType)[keyof typeof ParameterType];
export interface Parameter {
  ParameterName?: string;
  ParameterType?: ParameterType;
  ParameterValue?: string;
  NodeTypeSpecificValues?: NodeTypeSpecificValue[];
  Description?: string;
  Source?: string;
  DataType?: string;
  AllowedValues?: string;
  IsModifiable?: IsModifiable;
  ChangeType?: ChangeType;
}
export interface DescribeDefaultParametersResponse {
  NextToken?: string;
  Parameters?: Parameter[];
}
export declare const SourceType: {
  readonly CLUSTER: "CLUSTER";
  readonly PARAMETER_GROUP: "PARAMETER_GROUP";
  readonly SUBNET_GROUP: "SUBNET_GROUP";
};
export type SourceType = (typeof SourceType)[keyof typeof SourceType];
export interface DescribeEventsRequest {
  SourceName?: string;
  SourceType?: SourceType;
  StartTime?: Date;
  EndTime?: Date;
  Duration?: number;
  MaxResults?: number;
  NextToken?: string;
}
export interface Event {
  SourceName?: string;
  SourceType?: SourceType;
  Message?: string;
  Date?: Date;
}
export interface DescribeEventsResponse {
  NextToken?: string;
  Events?: Event[];
}
export interface DescribeParameterGroupsRequest {
  ParameterGroupNames?: string[];
  MaxResults?: number;
  NextToken?: string;
}
export interface DescribeParameterGroupsResponse {
  NextToken?: string;
  ParameterGroups?: ParameterGroup[];
}
export interface DescribeParametersRequest {
  ParameterGroupName: string | undefined;
  Source?: string;
  MaxResults?: number;
  NextToken?: string;
}
export interface DescribeParametersResponse {
  NextToken?: string;
  Parameters?: Parameter[];
}
export interface DescribeSubnetGroupsRequest {
  SubnetGroupNames?: string[];
  MaxResults?: number;
  NextToken?: string;
}
export interface DescribeSubnetGroupsResponse {
  NextToken?: string;
  SubnetGroups?: SubnetGroup[];
}
export interface IncreaseReplicationFactorRequest {
  ClusterName: string | undefined;
  NewReplicationFactor: number | undefined;
  AvailabilityZones?: string[];
}
export interface IncreaseReplicationFactorResponse {
  Cluster?: Cluster;
}
export declare class InvalidARNFault extends __BaseException {
  readonly name: "InvalidARNFault";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<InvalidARNFault, __BaseException>);
}
export interface ListTagsRequest {
  ResourceName: string | undefined;
  NextToken?: string;
}
export interface ListTagsResponse {
  Tags?: Tag[];
  NextToken?: string;
}
export interface RebootNodeRequest {
  ClusterName: string | undefined;
  NodeId: string | undefined;
}
export interface RebootNodeResponse {
  Cluster?: Cluster;
}
export interface TagResourceRequest {
  ResourceName: string | undefined;
  Tags: Tag[] | undefined;
}
export interface TagResourceResponse {
  Tags?: Tag[];
}
export declare class TagNotFoundFault extends __BaseException {
  readonly name: "TagNotFoundFault";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<TagNotFoundFault, __BaseException>);
}
export interface UntagResourceRequest {
  ResourceName: string | undefined;
  TagKeys: string[] | undefined;
}
export interface UntagResourceResponse {
  Tags?: Tag[];
}
export interface UpdateClusterRequest {
  ClusterName: string | undefined;
  Description?: string;
  PreferredMaintenanceWindow?: string;
  NotificationTopicArn?: string;
  NotificationTopicStatus?: string;
  ParameterGroupName?: string;
  SecurityGroupIds?: string[];
}
export interface UpdateClusterResponse {
  Cluster?: Cluster;
}
export interface ParameterNameValue {
  ParameterName?: string;
  ParameterValue?: string;
}
export interface UpdateParameterGroupRequest {
  ParameterGroupName: string | undefined;
  ParameterNameValues: ParameterNameValue[] | undefined;
}
export interface UpdateParameterGroupResponse {
  ParameterGroup?: ParameterGroup;
}
export declare class SubnetInUse extends __BaseException {
  readonly name: "SubnetInUse";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<SubnetInUse, __BaseException>);
}
export interface UpdateSubnetGroupRequest {
  SubnetGroupName: string | undefined;
  Description?: string;
  SubnetIds?: string[];
}
export interface UpdateSubnetGroupResponse {
  SubnetGroup?: SubnetGroup;
}
