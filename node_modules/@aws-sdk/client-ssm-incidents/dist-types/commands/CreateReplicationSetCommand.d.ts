import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import { CreateReplicationSetInput, CreateReplicationSetOutput } from "../models/models_0";
import { ServiceInputTypes, ServiceOutputTypes, SSMIncidentsClientResolvedConfig } from "../SSMIncidentsClient";
/**
 * @public
 */
export { __MetadataBearer, $Command };
/**
 * @public
 *
 * The input for {@link CreateReplicationSetCommand}.
 */
export interface CreateReplicationSetCommandInput extends CreateReplicationSetInput {
}
/**
 * @public
 *
 * The output of {@link CreateReplicationSetCommand}.
 */
export interface CreateReplicationSetCommandOutput extends CreateReplicationSetOutput, __MetadataBearer {
}
declare const CreateReplicationSetCommand_base: {
    new (input: CreateReplicationSetCommandInput): import("@smithy/smithy-client").CommandImpl<CreateReplicationSetCommandInput, CreateReplicationSetCommandOutput, SSMIncidentsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    new (__0_0: CreateReplicationSetCommandInput): import("@smithy/smithy-client").CommandImpl<CreateReplicationSetCommandInput, CreateReplicationSetCommandOutput, SSMIncidentsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
/**
 * <p>A replication set replicates and encrypts your data to the provided Regions with the
 *       provided KMS key. </p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { SSMIncidentsClient, CreateReplicationSetCommand } from "@aws-sdk/client-ssm-incidents"; // ES Modules import
 * // const { SSMIncidentsClient, CreateReplicationSetCommand } = require("@aws-sdk/client-ssm-incidents"); // CommonJS import
 * const client = new SSMIncidentsClient(config);
 * const input = { // CreateReplicationSetInput
 *   regions: { // RegionMapInput // required
 *     "<keys>": { // RegionMapInputValue
 *       sseKmsKeyId: "STRING_VALUE",
 *     },
 *   },
 *   clientToken: "STRING_VALUE",
 *   tags: { // TagMap
 *     "<keys>": "STRING_VALUE",
 *   },
 * };
 * const command = new CreateReplicationSetCommand(input);
 * const response = await client.send(command);
 * // { // CreateReplicationSetOutput
 * //   arn: "STRING_VALUE", // required
 * // };
 *
 * ```
 *
 * @param CreateReplicationSetCommandInput - {@link CreateReplicationSetCommandInput}
 * @returns {@link CreateReplicationSetCommandOutput}
 * @see {@link CreateReplicationSetCommandInput} for command's `input` shape.
 * @see {@link CreateReplicationSetCommandOutput} for command's `response` shape.
 * @see {@link SSMIncidentsClientResolvedConfig | config} for SSMIncidentsClient's `config` shape.
 *
 * @throws {@link AccessDeniedException} (client fault)
 *  <p>You don't have sufficient access to perform this operation.</p>
 *
 * @throws {@link ConflictException} (client fault)
 *  <p>Updating or deleting a resource causes an inconsistent state.</p>
 *
 * @throws {@link InternalServerException} (server fault)
 *  <p>The request processing has failed because of an unknown error, exception or
 *       failure.</p>
 *
 * @throws {@link ServiceQuotaExceededException} (client fault)
 *  <p>Request would cause a service quota to be exceeded.</p>
 *
 * @throws {@link ThrottlingException} (client fault)
 *  <p>The request was denied due to request throttling.</p>
 *
 * @throws {@link ValidationException} (client fault)
 *  <p>The input fails to satisfy the constraints specified by an Amazon Web Services
 *       service.</p>
 *
 * @throws {@link SSMIncidentsServiceException}
 * <p>Base exception class for all service exceptions from SSMIncidents service.</p>
 *
 * @public
 */
export declare class CreateReplicationSetCommand extends CreateReplicationSetCommand_base {
}
