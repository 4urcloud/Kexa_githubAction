import { SSMIncidentsServiceException as __BaseException } from "./SSMIncidentsServiceException";
export class AccessDeniedException extends __BaseException {
    constructor(opts) {
        super({
            name: "AccessDeniedException",
            $fault: "client",
            ...opts,
        });
        this.name = "AccessDeniedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, AccessDeniedException.prototype);
    }
}
export const VariableType = {
    INCIDENT_RECORD_ARN: "INCIDENT_RECORD_ARN",
    INVOLVED_RESOURCES: "INVOLVED_RESOURCES",
};
export var DynamicSsmParameterValue;
(function (DynamicSsmParameterValue) {
    DynamicSsmParameterValue.visit = (value, visitor) => {
        if (value.variable !== undefined)
            return visitor.variable(value.variable);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(DynamicSsmParameterValue || (DynamicSsmParameterValue = {}));
export const SsmTargetAccount = {
    IMPACTED_ACCOUNT: "IMPACTED_ACCOUNT",
    RESPONSE_PLAN_OWNER_ACCOUNT: "RESPONSE_PLAN_OWNER_ACCOUNT",
};
export var Action;
(function (Action) {
    Action.visit = (value, visitor) => {
        if (value.ssmAutomation !== undefined)
            return visitor.ssmAutomation(value.ssmAutomation);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(Action || (Action = {}));
export var AttributeValueList;
(function (AttributeValueList) {
    AttributeValueList.visit = (value, visitor) => {
        if (value.stringValues !== undefined)
            return visitor.stringValues(value.stringValues);
        if (value.integerValues !== undefined)
            return visitor.integerValues(value.integerValues);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(AttributeValueList || (AttributeValueList = {}));
export var AutomationExecution;
(function (AutomationExecution) {
    AutomationExecution.visit = (value, visitor) => {
        if (value.ssmExecutionArn !== undefined)
            return visitor.ssmExecutionArn(value.ssmExecutionArn);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(AutomationExecution || (AutomationExecution = {}));
export var FindingDetails;
(function (FindingDetails) {
    FindingDetails.visit = (value, visitor) => {
        if (value.codeDeployDeployment !== undefined)
            return visitor.codeDeployDeployment(value.codeDeployDeployment);
        if (value.cloudFormationStackUpdate !== undefined)
            return visitor.cloudFormationStackUpdate(value.cloudFormationStackUpdate);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(FindingDetails || (FindingDetails = {}));
export class InternalServerException extends __BaseException {
    constructor(opts) {
        super({
            name: "InternalServerException",
            $fault: "server",
            ...opts,
        });
        this.name = "InternalServerException";
        this.$fault = "server";
        Object.setPrototypeOf(this, InternalServerException.prototype);
    }
}
export const ResourceType = {
    INCIDENT_RECORD: "INCIDENT_RECORD",
    REPLICATION_SET: "REPLICATION_SET",
    RESOURCE_POLICY: "RESOURCE_POLICY",
    RESPONSE_PLAN: "RESPONSE_PLAN",
    TIMELINE_EVENT: "TIMELINE_EVENT",
};
export class ResourceNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
        this.resourceIdentifier = opts.resourceIdentifier;
        this.resourceType = opts.resourceType;
    }
}
export const ServiceCode = {
    SSM_INCIDENTS: "ssm-incidents",
};
export class ThrottlingException extends __BaseException {
    constructor(opts) {
        super({
            name: "ThrottlingException",
            $fault: "client",
            ...opts,
        });
        this.name = "ThrottlingException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ThrottlingException.prototype);
        this.serviceCode = opts.serviceCode;
        this.quotaCode = opts.quotaCode;
    }
}
export class ValidationException extends __BaseException {
    constructor(opts) {
        super({
            name: "ValidationException",
            $fault: "client",
            ...opts,
        });
        this.name = "ValidationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ValidationException.prototype);
    }
}
export var ChatChannel;
(function (ChatChannel) {
    ChatChannel.visit = (value, visitor) => {
        if (value.empty !== undefined)
            return visitor.empty(value.empty);
        if (value.chatbotSns !== undefined)
            return visitor.chatbotSns(value.chatbotSns);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(ChatChannel || (ChatChannel = {}));
export var Condition;
(function (Condition) {
    Condition.visit = (value, visitor) => {
        if (value.before !== undefined)
            return visitor.before(value.before);
        if (value.after !== undefined)
            return visitor.after(value.after);
        if (value.equals !== undefined)
            return visitor.equals(value.equals);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(Condition || (Condition = {}));
export class ConflictException extends __BaseException {
    constructor(opts) {
        super({
            name: "ConflictException",
            $fault: "client",
            ...opts,
        });
        this.name = "ConflictException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ConflictException.prototype);
        this.resourceIdentifier = opts.resourceIdentifier;
        this.resourceType = opts.resourceType;
        this.retryAfter = opts.retryAfter;
    }
}
export class ServiceQuotaExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "ServiceQuotaExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "ServiceQuotaExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ServiceQuotaExceededException.prototype);
        this.resourceIdentifier = opts.resourceIdentifier;
        this.resourceType = opts.resourceType;
        this.serviceCode = opts.serviceCode;
        this.quotaCode = opts.quotaCode;
    }
}
export var NotificationTargetItem;
(function (NotificationTargetItem) {
    NotificationTargetItem.visit = (value, visitor) => {
        if (value.snsTopicArn !== undefined)
            return visitor.snsTopicArn(value.snsTopicArn);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(NotificationTargetItem || (NotificationTargetItem = {}));
export var Integration;
(function (Integration) {
    Integration.visit = (value, visitor) => {
        if (value.pagerDutyConfiguration !== undefined)
            return visitor.pagerDutyConfiguration(value.pagerDutyConfiguration);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(Integration || (Integration = {}));
export var EventReference;
(function (EventReference) {
    EventReference.visit = (value, visitor) => {
        if (value.resource !== undefined)
            return visitor.resource(value.resource);
        if (value.relatedItemId !== undefined)
            return visitor.relatedItemId(value.relatedItemId);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(EventReference || (EventReference = {}));
export const IncidentRecordStatus = {
    OPEN: "OPEN",
    RESOLVED: "RESOLVED",
};
export const RegionStatus = {
    ACTIVE: "ACTIVE",
    CREATING: "CREATING",
    DELETING: "DELETING",
    FAILED: "FAILED",
};
export const ReplicationSetStatus = {
    ACTIVE: "ACTIVE",
    CREATING: "CREATING",
    DELETING: "DELETING",
    FAILED: "FAILED",
    UPDATING: "UPDATING",
};
export const ItemType = {
    ANALYSIS: "ANALYSIS",
    ATTACHMENT: "ATTACHMENT",
    AUTOMATION: "AUTOMATION",
    INCIDENT: "INCIDENT",
    INVOLVED_RESOURCE: "INVOLVED_RESOURCE",
    METRIC: "METRIC",
    OTHER: "OTHER",
    PARENT: "PARENT",
    TASK: "TASK",
};
export var ItemValue;
(function (ItemValue) {
    ItemValue.visit = (value, visitor) => {
        if (value.arn !== undefined)
            return visitor.arn(value.arn);
        if (value.url !== undefined)
            return visitor.url(value.url);
        if (value.metricDefinition !== undefined)
            return visitor.metricDefinition(value.metricDefinition);
        if (value.pagerDutyIncidentDetail !== undefined)
            return visitor.pagerDutyIncidentDetail(value.pagerDutyIncidentDetail);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(ItemValue || (ItemValue = {}));
export const TimelineEventSort = {
    EVENT_TIME: "EVENT_TIME",
};
export const SortOrder = {
    ASCENDING: "ASCENDING",
    DESCENDING: "DESCENDING",
};
export var RelatedItemsUpdate;
(function (RelatedItemsUpdate) {
    RelatedItemsUpdate.visit = (value, visitor) => {
        if (value.itemToAdd !== undefined)
            return visitor.itemToAdd(value.itemToAdd);
        if (value.itemToRemove !== undefined)
            return visitor.itemToRemove(value.itemToRemove);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(RelatedItemsUpdate || (RelatedItemsUpdate = {}));
export var UpdateReplicationSetAction;
(function (UpdateReplicationSetAction) {
    UpdateReplicationSetAction.visit = (value, visitor) => {
        if (value.addRegionAction !== undefined)
            return visitor.addRegionAction(value.addRegionAction);
        if (value.deleteRegionAction !== undefined)
            return visitor.deleteRegionAction(value.deleteRegionAction);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(UpdateReplicationSetAction || (UpdateReplicationSetAction = {}));
