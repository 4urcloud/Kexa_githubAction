import { SENSITIVE_STRING } from "@smithy/smithy-client";
import { AccountServiceException as __BaseException } from "./AccountServiceException";
export class AccessDeniedException extends __BaseException {
    constructor(opts) {
        super({
            name: "AccessDeniedException",
            $fault: "client",
            ...opts,
        });
        this.name = "AccessDeniedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, AccessDeniedException.prototype);
    }
}
export const AlternateContactType = {
    BILLING: "BILLING",
    OPERATIONS: "OPERATIONS",
    SECURITY: "SECURITY",
};
export class InternalServerException extends __BaseException {
    constructor(opts) {
        super({
            name: "InternalServerException",
            $fault: "server",
            ...opts,
        });
        this.name = "InternalServerException";
        this.$fault = "server";
        this.$retryable = {};
        Object.setPrototypeOf(this, InternalServerException.prototype);
    }
}
export class ResourceNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
    }
}
export class TooManyRequestsException extends __BaseException {
    constructor(opts) {
        super({
            name: "TooManyRequestsException",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyRequestsException";
        this.$fault = "client";
        this.$retryable = {
            throttling: true,
        };
        Object.setPrototypeOf(this, TooManyRequestsException.prototype);
    }
}
export const ValidationExceptionReason = {
    FIELD_VALIDATION_FAILED: "fieldValidationFailed",
    INVALID_REGION_OPT_TARGET: "invalidRegionOptTarget",
};
export class ValidationException extends __BaseException {
    constructor(opts) {
        super({
            name: "ValidationException",
            $fault: "client",
            ...opts,
        });
        this.name = "ValidationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ValidationException.prototype);
        this.reason = opts.reason;
        this.fieldList = opts.fieldList;
    }
}
export class ConflictException extends __BaseException {
    constructor(opts) {
        super({
            name: "ConflictException",
            $fault: "client",
            ...opts,
        });
        this.name = "ConflictException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ConflictException.prototype);
    }
}
export const RegionOptStatus = {
    DISABLED: "DISABLED",
    DISABLING: "DISABLING",
    ENABLED: "ENABLED",
    ENABLED_BY_DEFAULT: "ENABLED_BY_DEFAULT",
    ENABLING: "ENABLING",
};
export const ValidationExceptionFieldFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.message && { message: SENSITIVE_STRING }),
});
export const AlternateContactFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Name && { Name: SENSITIVE_STRING }),
    ...(obj.Title && { Title: SENSITIVE_STRING }),
    ...(obj.EmailAddress && { EmailAddress: SENSITIVE_STRING }),
    ...(obj.PhoneNumber && { PhoneNumber: SENSITIVE_STRING }),
});
export const GetAlternateContactResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.AlternateContact && { AlternateContact: AlternateContactFilterSensitiveLog(obj.AlternateContact) }),
});
export const PutAlternateContactRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Name && { Name: SENSITIVE_STRING }),
    ...(obj.Title && { Title: SENSITIVE_STRING }),
    ...(obj.EmailAddress && { EmailAddress: SENSITIVE_STRING }),
    ...(obj.PhoneNumber && { PhoneNumber: SENSITIVE_STRING }),
});
export const ContactInformationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.FullName && { FullName: SENSITIVE_STRING }),
    ...(obj.AddressLine1 && { AddressLine1: SENSITIVE_STRING }),
    ...(obj.AddressLine2 && { AddressLine2: SENSITIVE_STRING }),
    ...(obj.AddressLine3 && { AddressLine3: SENSITIVE_STRING }),
    ...(obj.City && { City: SENSITIVE_STRING }),
    ...(obj.StateOrRegion && { StateOrRegion: SENSITIVE_STRING }),
    ...(obj.DistrictOrCounty && { DistrictOrCounty: SENSITIVE_STRING }),
    ...(obj.PostalCode && { PostalCode: SENSITIVE_STRING }),
    ...(obj.CountryCode && { CountryCode: SENSITIVE_STRING }),
    ...(obj.PhoneNumber && { PhoneNumber: SENSITIVE_STRING }),
    ...(obj.CompanyName && { CompanyName: SENSITIVE_STRING }),
    ...(obj.WebsiteUrl && { WebsiteUrl: SENSITIVE_STRING }),
});
export const GetContactInformationResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ContactInformation && { ContactInformation: ContactInformationFilterSensitiveLog(obj.ContactInformation) }),
});
export const PutContactInformationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ContactInformation && { ContactInformation: ContactInformationFilterSensitiveLog(obj.ContactInformation) }),
});
