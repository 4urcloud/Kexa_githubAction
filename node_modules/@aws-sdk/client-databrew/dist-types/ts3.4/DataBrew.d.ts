import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import {
  BatchDeleteRecipeVersionCommandInput,
  BatchDeleteRecipeVersionCommandOutput,
} from "./commands/BatchDeleteRecipeVersionCommand";
import {
  CreateDatasetCommandInput,
  CreateDatasetCommandOutput,
} from "./commands/CreateDatasetCommand";
import {
  CreateProfileJobCommandInput,
  CreateProfileJobCommandOutput,
} from "./commands/CreateProfileJobCommand";
import {
  CreateProjectCommandInput,
  CreateProjectCommandOutput,
} from "./commands/CreateProjectCommand";
import {
  CreateRecipeCommandInput,
  CreateRecipeCommandOutput,
} from "./commands/CreateRecipeCommand";
import {
  CreateRecipeJobCommandInput,
  CreateRecipeJobCommandOutput,
} from "./commands/CreateRecipeJobCommand";
import {
  CreateRulesetCommandInput,
  CreateRulesetCommandOutput,
} from "./commands/CreateRulesetCommand";
import {
  CreateScheduleCommandInput,
  CreateScheduleCommandOutput,
} from "./commands/CreateScheduleCommand";
import {
  DeleteDatasetCommandInput,
  DeleteDatasetCommandOutput,
} from "./commands/DeleteDatasetCommand";
import {
  DeleteJobCommandInput,
  DeleteJobCommandOutput,
} from "./commands/DeleteJobCommand";
import {
  DeleteProjectCommandInput,
  DeleteProjectCommandOutput,
} from "./commands/DeleteProjectCommand";
import {
  DeleteRecipeVersionCommandInput,
  DeleteRecipeVersionCommandOutput,
} from "./commands/DeleteRecipeVersionCommand";
import {
  DeleteRulesetCommandInput,
  DeleteRulesetCommandOutput,
} from "./commands/DeleteRulesetCommand";
import {
  DeleteScheduleCommandInput,
  DeleteScheduleCommandOutput,
} from "./commands/DeleteScheduleCommand";
import {
  DescribeDatasetCommandInput,
  DescribeDatasetCommandOutput,
} from "./commands/DescribeDatasetCommand";
import {
  DescribeJobCommandInput,
  DescribeJobCommandOutput,
} from "./commands/DescribeJobCommand";
import {
  DescribeJobRunCommandInput,
  DescribeJobRunCommandOutput,
} from "./commands/DescribeJobRunCommand";
import {
  DescribeProjectCommandInput,
  DescribeProjectCommandOutput,
} from "./commands/DescribeProjectCommand";
import {
  DescribeRecipeCommandInput,
  DescribeRecipeCommandOutput,
} from "./commands/DescribeRecipeCommand";
import {
  DescribeRulesetCommandInput,
  DescribeRulesetCommandOutput,
} from "./commands/DescribeRulesetCommand";
import {
  DescribeScheduleCommandInput,
  DescribeScheduleCommandOutput,
} from "./commands/DescribeScheduleCommand";
import {
  ListDatasetsCommandInput,
  ListDatasetsCommandOutput,
} from "./commands/ListDatasetsCommand";
import {
  ListJobRunsCommandInput,
  ListJobRunsCommandOutput,
} from "./commands/ListJobRunsCommand";
import {
  ListJobsCommandInput,
  ListJobsCommandOutput,
} from "./commands/ListJobsCommand";
import {
  ListProjectsCommandInput,
  ListProjectsCommandOutput,
} from "./commands/ListProjectsCommand";
import {
  ListRecipesCommandInput,
  ListRecipesCommandOutput,
} from "./commands/ListRecipesCommand";
import {
  ListRecipeVersionsCommandInput,
  ListRecipeVersionsCommandOutput,
} from "./commands/ListRecipeVersionsCommand";
import {
  ListRulesetsCommandInput,
  ListRulesetsCommandOutput,
} from "./commands/ListRulesetsCommand";
import {
  ListSchedulesCommandInput,
  ListSchedulesCommandOutput,
} from "./commands/ListSchedulesCommand";
import {
  ListTagsForResourceCommandInput,
  ListTagsForResourceCommandOutput,
} from "./commands/ListTagsForResourceCommand";
import {
  PublishRecipeCommandInput,
  PublishRecipeCommandOutput,
} from "./commands/PublishRecipeCommand";
import {
  SendProjectSessionActionCommandInput,
  SendProjectSessionActionCommandOutput,
} from "./commands/SendProjectSessionActionCommand";
import {
  StartJobRunCommandInput,
  StartJobRunCommandOutput,
} from "./commands/StartJobRunCommand";
import {
  StartProjectSessionCommandInput,
  StartProjectSessionCommandOutput,
} from "./commands/StartProjectSessionCommand";
import {
  StopJobRunCommandInput,
  StopJobRunCommandOutput,
} from "./commands/StopJobRunCommand";
import {
  TagResourceCommandInput,
  TagResourceCommandOutput,
} from "./commands/TagResourceCommand";
import {
  UntagResourceCommandInput,
  UntagResourceCommandOutput,
} from "./commands/UntagResourceCommand";
import {
  UpdateDatasetCommandInput,
  UpdateDatasetCommandOutput,
} from "./commands/UpdateDatasetCommand";
import {
  UpdateProfileJobCommandInput,
  UpdateProfileJobCommandOutput,
} from "./commands/UpdateProfileJobCommand";
import {
  UpdateProjectCommandInput,
  UpdateProjectCommandOutput,
} from "./commands/UpdateProjectCommand";
import {
  UpdateRecipeCommandInput,
  UpdateRecipeCommandOutput,
} from "./commands/UpdateRecipeCommand";
import {
  UpdateRecipeJobCommandInput,
  UpdateRecipeJobCommandOutput,
} from "./commands/UpdateRecipeJobCommand";
import {
  UpdateRulesetCommandInput,
  UpdateRulesetCommandOutput,
} from "./commands/UpdateRulesetCommand";
import {
  UpdateScheduleCommandInput,
  UpdateScheduleCommandOutput,
} from "./commands/UpdateScheduleCommand";
import { DataBrewClient } from "./DataBrewClient";
export interface DataBrew {
  batchDeleteRecipeVersion(
    args: BatchDeleteRecipeVersionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<BatchDeleteRecipeVersionCommandOutput>;
  batchDeleteRecipeVersion(
    args: BatchDeleteRecipeVersionCommandInput,
    cb: (err: any, data?: BatchDeleteRecipeVersionCommandOutput) => void
  ): void;
  batchDeleteRecipeVersion(
    args: BatchDeleteRecipeVersionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: BatchDeleteRecipeVersionCommandOutput) => void
  ): void;
  createDataset(
    args: CreateDatasetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateDatasetCommandOutput>;
  createDataset(
    args: CreateDatasetCommandInput,
    cb: (err: any, data?: CreateDatasetCommandOutput) => void
  ): void;
  createDataset(
    args: CreateDatasetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateDatasetCommandOutput) => void
  ): void;
  createProfileJob(
    args: CreateProfileJobCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateProfileJobCommandOutput>;
  createProfileJob(
    args: CreateProfileJobCommandInput,
    cb: (err: any, data?: CreateProfileJobCommandOutput) => void
  ): void;
  createProfileJob(
    args: CreateProfileJobCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateProfileJobCommandOutput) => void
  ): void;
  createProject(
    args: CreateProjectCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateProjectCommandOutput>;
  createProject(
    args: CreateProjectCommandInput,
    cb: (err: any, data?: CreateProjectCommandOutput) => void
  ): void;
  createProject(
    args: CreateProjectCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateProjectCommandOutput) => void
  ): void;
  createRecipe(
    args: CreateRecipeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateRecipeCommandOutput>;
  createRecipe(
    args: CreateRecipeCommandInput,
    cb: (err: any, data?: CreateRecipeCommandOutput) => void
  ): void;
  createRecipe(
    args: CreateRecipeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateRecipeCommandOutput) => void
  ): void;
  createRecipeJob(
    args: CreateRecipeJobCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateRecipeJobCommandOutput>;
  createRecipeJob(
    args: CreateRecipeJobCommandInput,
    cb: (err: any, data?: CreateRecipeJobCommandOutput) => void
  ): void;
  createRecipeJob(
    args: CreateRecipeJobCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateRecipeJobCommandOutput) => void
  ): void;
  createRuleset(
    args: CreateRulesetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateRulesetCommandOutput>;
  createRuleset(
    args: CreateRulesetCommandInput,
    cb: (err: any, data?: CreateRulesetCommandOutput) => void
  ): void;
  createRuleset(
    args: CreateRulesetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateRulesetCommandOutput) => void
  ): void;
  createSchedule(
    args: CreateScheduleCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateScheduleCommandOutput>;
  createSchedule(
    args: CreateScheduleCommandInput,
    cb: (err: any, data?: CreateScheduleCommandOutput) => void
  ): void;
  createSchedule(
    args: CreateScheduleCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateScheduleCommandOutput) => void
  ): void;
  deleteDataset(
    args: DeleteDatasetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteDatasetCommandOutput>;
  deleteDataset(
    args: DeleteDatasetCommandInput,
    cb: (err: any, data?: DeleteDatasetCommandOutput) => void
  ): void;
  deleteDataset(
    args: DeleteDatasetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteDatasetCommandOutput) => void
  ): void;
  deleteJob(
    args: DeleteJobCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteJobCommandOutput>;
  deleteJob(
    args: DeleteJobCommandInput,
    cb: (err: any, data?: DeleteJobCommandOutput) => void
  ): void;
  deleteJob(
    args: DeleteJobCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteJobCommandOutput) => void
  ): void;
  deleteProject(
    args: DeleteProjectCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteProjectCommandOutput>;
  deleteProject(
    args: DeleteProjectCommandInput,
    cb: (err: any, data?: DeleteProjectCommandOutput) => void
  ): void;
  deleteProject(
    args: DeleteProjectCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteProjectCommandOutput) => void
  ): void;
  deleteRecipeVersion(
    args: DeleteRecipeVersionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteRecipeVersionCommandOutput>;
  deleteRecipeVersion(
    args: DeleteRecipeVersionCommandInput,
    cb: (err: any, data?: DeleteRecipeVersionCommandOutput) => void
  ): void;
  deleteRecipeVersion(
    args: DeleteRecipeVersionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteRecipeVersionCommandOutput) => void
  ): void;
  deleteRuleset(
    args: DeleteRulesetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteRulesetCommandOutput>;
  deleteRuleset(
    args: DeleteRulesetCommandInput,
    cb: (err: any, data?: DeleteRulesetCommandOutput) => void
  ): void;
  deleteRuleset(
    args: DeleteRulesetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteRulesetCommandOutput) => void
  ): void;
  deleteSchedule(
    args: DeleteScheduleCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteScheduleCommandOutput>;
  deleteSchedule(
    args: DeleteScheduleCommandInput,
    cb: (err: any, data?: DeleteScheduleCommandOutput) => void
  ): void;
  deleteSchedule(
    args: DeleteScheduleCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteScheduleCommandOutput) => void
  ): void;
  describeDataset(
    args: DescribeDatasetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeDatasetCommandOutput>;
  describeDataset(
    args: DescribeDatasetCommandInput,
    cb: (err: any, data?: DescribeDatasetCommandOutput) => void
  ): void;
  describeDataset(
    args: DescribeDatasetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeDatasetCommandOutput) => void
  ): void;
  describeJob(
    args: DescribeJobCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeJobCommandOutput>;
  describeJob(
    args: DescribeJobCommandInput,
    cb: (err: any, data?: DescribeJobCommandOutput) => void
  ): void;
  describeJob(
    args: DescribeJobCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeJobCommandOutput) => void
  ): void;
  describeJobRun(
    args: DescribeJobRunCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeJobRunCommandOutput>;
  describeJobRun(
    args: DescribeJobRunCommandInput,
    cb: (err: any, data?: DescribeJobRunCommandOutput) => void
  ): void;
  describeJobRun(
    args: DescribeJobRunCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeJobRunCommandOutput) => void
  ): void;
  describeProject(
    args: DescribeProjectCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeProjectCommandOutput>;
  describeProject(
    args: DescribeProjectCommandInput,
    cb: (err: any, data?: DescribeProjectCommandOutput) => void
  ): void;
  describeProject(
    args: DescribeProjectCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeProjectCommandOutput) => void
  ): void;
  describeRecipe(
    args: DescribeRecipeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeRecipeCommandOutput>;
  describeRecipe(
    args: DescribeRecipeCommandInput,
    cb: (err: any, data?: DescribeRecipeCommandOutput) => void
  ): void;
  describeRecipe(
    args: DescribeRecipeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeRecipeCommandOutput) => void
  ): void;
  describeRuleset(
    args: DescribeRulesetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeRulesetCommandOutput>;
  describeRuleset(
    args: DescribeRulesetCommandInput,
    cb: (err: any, data?: DescribeRulesetCommandOutput) => void
  ): void;
  describeRuleset(
    args: DescribeRulesetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeRulesetCommandOutput) => void
  ): void;
  describeSchedule(
    args: DescribeScheduleCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeScheduleCommandOutput>;
  describeSchedule(
    args: DescribeScheduleCommandInput,
    cb: (err: any, data?: DescribeScheduleCommandOutput) => void
  ): void;
  describeSchedule(
    args: DescribeScheduleCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeScheduleCommandOutput) => void
  ): void;
  listDatasets(
    args: ListDatasetsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListDatasetsCommandOutput>;
  listDatasets(
    args: ListDatasetsCommandInput,
    cb: (err: any, data?: ListDatasetsCommandOutput) => void
  ): void;
  listDatasets(
    args: ListDatasetsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListDatasetsCommandOutput) => void
  ): void;
  listJobRuns(
    args: ListJobRunsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListJobRunsCommandOutput>;
  listJobRuns(
    args: ListJobRunsCommandInput,
    cb: (err: any, data?: ListJobRunsCommandOutput) => void
  ): void;
  listJobRuns(
    args: ListJobRunsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListJobRunsCommandOutput) => void
  ): void;
  listJobs(
    args: ListJobsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListJobsCommandOutput>;
  listJobs(
    args: ListJobsCommandInput,
    cb: (err: any, data?: ListJobsCommandOutput) => void
  ): void;
  listJobs(
    args: ListJobsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListJobsCommandOutput) => void
  ): void;
  listProjects(
    args: ListProjectsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListProjectsCommandOutput>;
  listProjects(
    args: ListProjectsCommandInput,
    cb: (err: any, data?: ListProjectsCommandOutput) => void
  ): void;
  listProjects(
    args: ListProjectsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListProjectsCommandOutput) => void
  ): void;
  listRecipes(
    args: ListRecipesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListRecipesCommandOutput>;
  listRecipes(
    args: ListRecipesCommandInput,
    cb: (err: any, data?: ListRecipesCommandOutput) => void
  ): void;
  listRecipes(
    args: ListRecipesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListRecipesCommandOutput) => void
  ): void;
  listRecipeVersions(
    args: ListRecipeVersionsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListRecipeVersionsCommandOutput>;
  listRecipeVersions(
    args: ListRecipeVersionsCommandInput,
    cb: (err: any, data?: ListRecipeVersionsCommandOutput) => void
  ): void;
  listRecipeVersions(
    args: ListRecipeVersionsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListRecipeVersionsCommandOutput) => void
  ): void;
  listRulesets(
    args: ListRulesetsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListRulesetsCommandOutput>;
  listRulesets(
    args: ListRulesetsCommandInput,
    cb: (err: any, data?: ListRulesetsCommandOutput) => void
  ): void;
  listRulesets(
    args: ListRulesetsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListRulesetsCommandOutput) => void
  ): void;
  listSchedules(
    args: ListSchedulesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListSchedulesCommandOutput>;
  listSchedules(
    args: ListSchedulesCommandInput,
    cb: (err: any, data?: ListSchedulesCommandOutput) => void
  ): void;
  listSchedules(
    args: ListSchedulesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListSchedulesCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListTagsForResourceCommandOutput>;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  publishRecipe(
    args: PublishRecipeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PublishRecipeCommandOutput>;
  publishRecipe(
    args: PublishRecipeCommandInput,
    cb: (err: any, data?: PublishRecipeCommandOutput) => void
  ): void;
  publishRecipe(
    args: PublishRecipeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: PublishRecipeCommandOutput) => void
  ): void;
  sendProjectSessionAction(
    args: SendProjectSessionActionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<SendProjectSessionActionCommandOutput>;
  sendProjectSessionAction(
    args: SendProjectSessionActionCommandInput,
    cb: (err: any, data?: SendProjectSessionActionCommandOutput) => void
  ): void;
  sendProjectSessionAction(
    args: SendProjectSessionActionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: SendProjectSessionActionCommandOutput) => void
  ): void;
  startJobRun(
    args: StartJobRunCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<StartJobRunCommandOutput>;
  startJobRun(
    args: StartJobRunCommandInput,
    cb: (err: any, data?: StartJobRunCommandOutput) => void
  ): void;
  startJobRun(
    args: StartJobRunCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: StartJobRunCommandOutput) => void
  ): void;
  startProjectSession(
    args: StartProjectSessionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<StartProjectSessionCommandOutput>;
  startProjectSession(
    args: StartProjectSessionCommandInput,
    cb: (err: any, data?: StartProjectSessionCommandOutput) => void
  ): void;
  startProjectSession(
    args: StartProjectSessionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: StartProjectSessionCommandOutput) => void
  ): void;
  stopJobRun(
    args: StopJobRunCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<StopJobRunCommandOutput>;
  stopJobRun(
    args: StopJobRunCommandInput,
    cb: (err: any, data?: StopJobRunCommandOutput) => void
  ): void;
  stopJobRun(
    args: StopJobRunCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: StopJobRunCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<TagResourceCommandOutput>;
  tagResource(
    args: TagResourceCommandInput,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UntagResourceCommandOutput>;
  untagResource(
    args: UntagResourceCommandInput,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  updateDataset(
    args: UpdateDatasetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateDatasetCommandOutput>;
  updateDataset(
    args: UpdateDatasetCommandInput,
    cb: (err: any, data?: UpdateDatasetCommandOutput) => void
  ): void;
  updateDataset(
    args: UpdateDatasetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateDatasetCommandOutput) => void
  ): void;
  updateProfileJob(
    args: UpdateProfileJobCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateProfileJobCommandOutput>;
  updateProfileJob(
    args: UpdateProfileJobCommandInput,
    cb: (err: any, data?: UpdateProfileJobCommandOutput) => void
  ): void;
  updateProfileJob(
    args: UpdateProfileJobCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateProfileJobCommandOutput) => void
  ): void;
  updateProject(
    args: UpdateProjectCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateProjectCommandOutput>;
  updateProject(
    args: UpdateProjectCommandInput,
    cb: (err: any, data?: UpdateProjectCommandOutput) => void
  ): void;
  updateProject(
    args: UpdateProjectCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateProjectCommandOutput) => void
  ): void;
  updateRecipe(
    args: UpdateRecipeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateRecipeCommandOutput>;
  updateRecipe(
    args: UpdateRecipeCommandInput,
    cb: (err: any, data?: UpdateRecipeCommandOutput) => void
  ): void;
  updateRecipe(
    args: UpdateRecipeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateRecipeCommandOutput) => void
  ): void;
  updateRecipeJob(
    args: UpdateRecipeJobCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateRecipeJobCommandOutput>;
  updateRecipeJob(
    args: UpdateRecipeJobCommandInput,
    cb: (err: any, data?: UpdateRecipeJobCommandOutput) => void
  ): void;
  updateRecipeJob(
    args: UpdateRecipeJobCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateRecipeJobCommandOutput) => void
  ): void;
  updateRuleset(
    args: UpdateRulesetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateRulesetCommandOutput>;
  updateRuleset(
    args: UpdateRulesetCommandInput,
    cb: (err: any, data?: UpdateRulesetCommandOutput) => void
  ): void;
  updateRuleset(
    args: UpdateRulesetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateRulesetCommandOutput) => void
  ): void;
  updateSchedule(
    args: UpdateScheduleCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateScheduleCommandOutput>;
  updateSchedule(
    args: UpdateScheduleCommandInput,
    cb: (err: any, data?: UpdateScheduleCommandOutput) => void
  ): void;
  updateSchedule(
    args: UpdateScheduleCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateScheduleCommandOutput) => void
  ): void;
}
export declare class DataBrew extends DataBrewClient implements DataBrew {}
