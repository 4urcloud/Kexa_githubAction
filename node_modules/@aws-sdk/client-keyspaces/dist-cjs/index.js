"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  AccessDeniedException: () => AccessDeniedException,
  ClientSideTimestampsStatus: () => ClientSideTimestampsStatus,
  ConflictException: () => ConflictException,
  CreateKeyspaceCommand: () => CreateKeyspaceCommand,
  CreateTableCommand: () => CreateTableCommand,
  DeleteKeyspaceCommand: () => DeleteKeyspaceCommand,
  DeleteTableCommand: () => DeleteTableCommand,
  EncryptionType: () => EncryptionType,
  GetKeyspaceCommand: () => GetKeyspaceCommand,
  GetTableAutoScalingSettingsCommand: () => GetTableAutoScalingSettingsCommand,
  GetTableCommand: () => GetTableCommand,
  InternalServerException: () => InternalServerException,
  Keyspaces: () => Keyspaces,
  KeyspacesClient: () => KeyspacesClient,
  KeyspacesServiceException: () => KeyspacesServiceException,
  ListKeyspacesCommand: () => ListKeyspacesCommand,
  ListTablesCommand: () => ListTablesCommand,
  ListTagsForResourceCommand: () => ListTagsForResourceCommand,
  PointInTimeRecoveryStatus: () => PointInTimeRecoveryStatus,
  ResourceNotFoundException: () => ResourceNotFoundException,
  RestoreTableCommand: () => RestoreTableCommand,
  Rs: () => Rs,
  ServiceQuotaExceededException: () => ServiceQuotaExceededException,
  SortOrder: () => SortOrder,
  TableStatus: () => TableStatus,
  TagResourceCommand: () => TagResourceCommand,
  ThroughputMode: () => ThroughputMode,
  TimeToLiveStatus: () => TimeToLiveStatus,
  UntagResourceCommand: () => UntagResourceCommand,
  UpdateTableCommand: () => UpdateTableCommand,
  ValidationException: () => ValidationException,
  __Client: () => import_smithy_client.Client,
  paginateListKeyspaces: () => paginateListKeyspaces,
  paginateListTables: () => paginateListTables,
  paginateListTagsForResource: () => paginateListTagsForResource
});
module.exports = __toCommonJS(src_exports);

// src/KeyspacesClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return {
    ...options,
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "cassandra"
  };
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/KeyspacesClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var asPartial = /* @__PURE__ */ __name((t) => t, "asPartial");
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = {
    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),
    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
  };
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return {
    ...runtimeConfig,
    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
  };
}, "resolveRuntimeExtensions");

// src/KeyspacesClient.ts
var _KeyspacesClient = class _KeyspacesClient extends import_smithy_client.Client {
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_config_resolver.resolveRegionConfig)(_config_1);
    const _config_3 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_2);
    const _config_4 = (0, import_middleware_retry.resolveRetryConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, (configuration == null ? void 0 : configuration.extensions) || []);
    super(_config_8);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),
        identityProviderConfigProvider: this.getIdentityProviderConfigProvider()
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
  getDefaultHttpAuthSchemeParametersProvider() {
    return import_httpAuthSchemeProvider.defaultKeyspacesHttpAuthSchemeParametersProvider;
  }
  getIdentityProviderConfigProvider() {
    return async (config) => new import_core.DefaultIdentityProviderConfig({
      "aws.auth#sigv4": config.credentials
    });
  }
};
__name(_KeyspacesClient, "KeyspacesClient");
var KeyspacesClient = _KeyspacesClient;

// src/Keyspaces.ts


// src/commands/CreateKeyspaceCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");

var import_types = require("@smithy/types");

// src/protocols/Aws_json1_0.ts
var import_core2 = require("@aws-sdk/core");



// src/models/KeyspacesServiceException.ts

var _KeyspacesServiceException = class _KeyspacesServiceException extends import_smithy_client.ServiceException {
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _KeyspacesServiceException.prototype);
  }
};
__name(_KeyspacesServiceException, "KeyspacesServiceException");
var KeyspacesServiceException = _KeyspacesServiceException;

// src/models/models_0.ts
var _AccessDeniedException = class _AccessDeniedException extends KeyspacesServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "AccessDeniedException",
      $fault: "client",
      ...opts
    });
    this.name = "AccessDeniedException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _AccessDeniedException.prototype);
  }
};
__name(_AccessDeniedException, "AccessDeniedException");
var AccessDeniedException = _AccessDeniedException;
var ThroughputMode = {
  PAY_PER_REQUEST: "PAY_PER_REQUEST",
  PROVISIONED: "PROVISIONED"
};
var ClientSideTimestampsStatus = {
  ENABLED: "ENABLED"
};
var SortOrder = {
  ASC: "ASC",
  DESC: "DESC"
};
var _ConflictException = class _ConflictException extends KeyspacesServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ConflictException",
      $fault: "client",
      ...opts
    });
    this.name = "ConflictException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ConflictException.prototype);
  }
};
__name(_ConflictException, "ConflictException");
var ConflictException = _ConflictException;
var Rs = {
  MULTI_REGION: "MULTI_REGION",
  SINGLE_REGION: "SINGLE_REGION"
};
var _InternalServerException = class _InternalServerException extends KeyspacesServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InternalServerException",
      $fault: "server",
      ...opts
    });
    this.name = "InternalServerException";
    this.$fault = "server";
    Object.setPrototypeOf(this, _InternalServerException.prototype);
  }
};
__name(_InternalServerException, "InternalServerException");
var InternalServerException = _InternalServerException;
var _ServiceQuotaExceededException = class _ServiceQuotaExceededException extends KeyspacesServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ServiceQuotaExceededException",
      $fault: "client",
      ...opts
    });
    this.name = "ServiceQuotaExceededException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ServiceQuotaExceededException.prototype);
  }
};
__name(_ServiceQuotaExceededException, "ServiceQuotaExceededException");
var ServiceQuotaExceededException = _ServiceQuotaExceededException;
var _ValidationException = class _ValidationException extends KeyspacesServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ValidationException",
      $fault: "client",
      ...opts
    });
    this.name = "ValidationException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ValidationException.prototype);
  }
};
__name(_ValidationException, "ValidationException");
var ValidationException = _ValidationException;
var EncryptionType = {
  AWS_OWNED_KMS_KEY: "AWS_OWNED_KMS_KEY",
  CUSTOMER_MANAGED_KMS_KEY: "CUSTOMER_MANAGED_KMS_KEY"
};
var PointInTimeRecoveryStatus = {
  DISABLED: "DISABLED",
  ENABLED: "ENABLED"
};
var TimeToLiveStatus = {
  ENABLED: "ENABLED"
};
var _ResourceNotFoundException = class _ResourceNotFoundException extends KeyspacesServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceNotFoundException",
      $fault: "client",
      ...opts
    });
    this.name = "ResourceNotFoundException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourceNotFoundException.prototype);
    this.resourceArn = opts.resourceArn;
  }
};
__name(_ResourceNotFoundException, "ResourceNotFoundException");
var ResourceNotFoundException = _ResourceNotFoundException;
var TableStatus = {
  ACTIVE: "ACTIVE",
  CREATING: "CREATING",
  DELETED: "DELETED",
  DELETING: "DELETING",
  INACCESSIBLE_ENCRYPTION_CREDENTIALS: "INACCESSIBLE_ENCRYPTION_CREDENTIALS",
  RESTORING: "RESTORING",
  UPDATING: "UPDATING"
};

// src/protocols/Aws_json1_0.ts
var se_CreateKeyspaceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateKeyspace");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateKeyspaceCommand");
var se_CreateTableCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateTable");
  let body;
  body = JSON.stringify(se_CreateTableRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateTableCommand");
var se_DeleteKeyspaceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteKeyspace");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteKeyspaceCommand");
var se_DeleteTableCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteTable");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteTableCommand");
var se_GetKeyspaceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetKeyspace");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetKeyspaceCommand");
var se_GetTableCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetTable");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetTableCommand");
var se_GetTableAutoScalingSettingsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetTableAutoScalingSettings");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetTableAutoScalingSettingsCommand");
var se_ListKeyspacesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListKeyspaces");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListKeyspacesCommand");
var se_ListTablesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListTables");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListTablesCommand");
var se_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListTagsForResource");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListTagsForResourceCommand");
var se_RestoreTableCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("RestoreTable");
  let body;
  body = JSON.stringify(se_RestoreTableRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_RestoreTableCommand");
var se_TagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("TagResource");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_TagResourceCommand");
var se_UntagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UntagResource");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UntagResourceCommand");
var se_UpdateTableCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateTable");
  let body;
  body = JSON.stringify(se_UpdateTableRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateTableCommand");
var de_CreateKeyspaceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateKeyspaceCommand");
var de_CreateTableCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateTableCommand");
var de_DeleteKeyspaceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeleteKeyspaceCommand");
var de_DeleteTableCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeleteTableCommand");
var de_GetKeyspaceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetKeyspaceCommand");
var de_GetTableCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_GetTableResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetTableCommand");
var de_GetTableAutoScalingSettingsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_GetTableAutoScalingSettingsResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetTableAutoScalingSettingsCommand");
var de_ListKeyspacesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListKeyspacesCommand");
var de_ListTablesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListTablesCommand");
var de_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListTagsForResourceCommand");
var de_RestoreTableCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_RestoreTableCommand");
var de_TagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_TagResourceCommand");
var de_UntagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UntagResourceCommand");
var de_UpdateTableCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateTableCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await (0, import_core2.parseJsonErrorBody)(output.body, context)
  };
  const errorCode = (0, import_core2.loadRestJsonErrorCode)(output, parsedOutput.body);
  switch (errorCode) {
    case "AccessDeniedException":
    case "com.amazonaws.keyspaces#AccessDeniedException":
      throw await de_AccessDeniedExceptionRes(parsedOutput, context);
    case "ConflictException":
    case "com.amazonaws.keyspaces#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    case "InternalServerException":
    case "com.amazonaws.keyspaces#InternalServerException":
      throw await de_InternalServerExceptionRes(parsedOutput, context);
    case "ServiceQuotaExceededException":
    case "com.amazonaws.keyspaces#ServiceQuotaExceededException":
      throw await de_ServiceQuotaExceededExceptionRes(parsedOutput, context);
    case "ValidationException":
    case "com.amazonaws.keyspaces#ValidationException":
      throw await de_ValidationExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.keyspaces#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var de_AccessDeniedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new AccessDeniedException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_AccessDeniedExceptionRes");
var de_ConflictExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ConflictException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ConflictExceptionRes");
var de_InternalServerExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new InternalServerException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InternalServerExceptionRes");
var de_ResourceNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ResourceNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ResourceNotFoundExceptionRes");
var de_ServiceQuotaExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ServiceQuotaExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ServiceQuotaExceededExceptionRes");
var de_ValidationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ValidationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ValidationExceptionRes");
var se_AutoScalingPolicy = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    targetTrackingScalingPolicyConfiguration: (_) => se_TargetTrackingScalingPolicyConfiguration(_, context)
  });
}, "se_AutoScalingPolicy");
var se_AutoScalingSettings = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    autoScalingDisabled: [],
    maximumUnits: [],
    minimumUnits: [],
    scalingPolicy: (_) => se_AutoScalingPolicy(_, context)
  });
}, "se_AutoScalingSettings");
var se_AutoScalingSpecification = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    readCapacityAutoScaling: (_) => se_AutoScalingSettings(_, context),
    writeCapacityAutoScaling: (_) => se_AutoScalingSettings(_, context)
  });
}, "se_AutoScalingSpecification");
var se_CreateTableRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    autoScalingSpecification: (_) => se_AutoScalingSpecification(_, context),
    capacitySpecification: import_smithy_client._json,
    clientSideTimestamps: import_smithy_client._json,
    comment: import_smithy_client._json,
    defaultTimeToLive: [],
    encryptionSpecification: import_smithy_client._json,
    keyspaceName: [],
    pointInTimeRecovery: import_smithy_client._json,
    replicaSpecifications: (_) => se_ReplicaSpecificationList(_, context),
    schemaDefinition: import_smithy_client._json,
    tableName: [],
    tags: import_smithy_client._json,
    ttl: import_smithy_client._json
  });
}, "se_CreateTableRequest");
var se_ReplicaSpecification = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    readCapacityAutoScaling: (_) => se_AutoScalingSettings(_, context),
    readCapacityUnits: [],
    region: []
  });
}, "se_ReplicaSpecification");
var se_ReplicaSpecificationList = /* @__PURE__ */ __name((input, context) => {
  return input.filter((e) => e != null).map((entry) => {
    return se_ReplicaSpecification(entry, context);
  });
}, "se_ReplicaSpecificationList");
var se_RestoreTableRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    autoScalingSpecification: (_) => se_AutoScalingSpecification(_, context),
    capacitySpecificationOverride: import_smithy_client._json,
    encryptionSpecificationOverride: import_smithy_client._json,
    pointInTimeRecoveryOverride: import_smithy_client._json,
    replicaSpecifications: (_) => se_ReplicaSpecificationList(_, context),
    restoreTimestamp: (_) => Math.round(_.getTime() / 1e3),
    sourceKeyspaceName: [],
    sourceTableName: [],
    tagsOverride: import_smithy_client._json,
    targetKeyspaceName: [],
    targetTableName: []
  });
}, "se_RestoreTableRequest");
var se_TargetTrackingScalingPolicyConfiguration = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    disableScaleIn: [],
    scaleInCooldown: [],
    scaleOutCooldown: [],
    targetValue: import_smithy_client.serializeFloat
  });
}, "se_TargetTrackingScalingPolicyConfiguration");
var se_UpdateTableRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    addColumns: import_smithy_client._json,
    autoScalingSpecification: (_) => se_AutoScalingSpecification(_, context),
    capacitySpecification: import_smithy_client._json,
    clientSideTimestamps: import_smithy_client._json,
    defaultTimeToLive: [],
    encryptionSpecification: import_smithy_client._json,
    keyspaceName: [],
    pointInTimeRecovery: import_smithy_client._json,
    replicaSpecifications: (_) => se_ReplicaSpecificationList(_, context),
    tableName: [],
    ttl: import_smithy_client._json
  });
}, "se_UpdateTableRequest");
var de_AutoScalingPolicy = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    targetTrackingScalingPolicyConfiguration: (_) => de_TargetTrackingScalingPolicyConfiguration(_, context)
  });
}, "de_AutoScalingPolicy");
var de_AutoScalingSettings = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    autoScalingDisabled: import_smithy_client.expectBoolean,
    maximumUnits: import_smithy_client.expectLong,
    minimumUnits: import_smithy_client.expectLong,
    scalingPolicy: (_) => de_AutoScalingPolicy(_, context)
  });
}, "de_AutoScalingSettings");
var de_AutoScalingSpecification = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    readCapacityAutoScaling: (_) => de_AutoScalingSettings(_, context),
    writeCapacityAutoScaling: (_) => de_AutoScalingSettings(_, context)
  });
}, "de_AutoScalingSpecification");
var de_CapacitySpecificationSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    lastUpdateToPayPerRequestTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    readCapacityUnits: import_smithy_client.expectLong,
    throughputMode: import_smithy_client.expectString,
    writeCapacityUnits: import_smithy_client.expectLong
  });
}, "de_CapacitySpecificationSummary");
var de_GetTableAutoScalingSettingsResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    autoScalingSpecification: (_) => de_AutoScalingSpecification(_, context),
    keyspaceName: import_smithy_client.expectString,
    replicaSpecifications: (_) => de_ReplicaAutoScalingSpecificationList(_, context),
    resourceArn: import_smithy_client.expectString,
    tableName: import_smithy_client.expectString
  });
}, "de_GetTableAutoScalingSettingsResponse");
var de_GetTableResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    capacitySpecification: (_) => de_CapacitySpecificationSummary(_, context),
    clientSideTimestamps: import_smithy_client._json,
    comment: import_smithy_client._json,
    creationTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    defaultTimeToLive: import_smithy_client.expectInt32,
    encryptionSpecification: import_smithy_client._json,
    keyspaceName: import_smithy_client.expectString,
    pointInTimeRecovery: (_) => de_PointInTimeRecoverySummary(_, context),
    replicaSpecifications: (_) => de_ReplicaSpecificationSummaryList(_, context),
    resourceArn: import_smithy_client.expectString,
    schemaDefinition: import_smithy_client._json,
    status: import_smithy_client.expectString,
    tableName: import_smithy_client.expectString,
    ttl: import_smithy_client._json
  });
}, "de_GetTableResponse");
var de_PointInTimeRecoverySummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    earliestRestorableTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    status: import_smithy_client.expectString
  });
}, "de_PointInTimeRecoverySummary");
var de_ReplicaAutoScalingSpecification = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    autoScalingSpecification: (_) => de_AutoScalingSpecification(_, context),
    region: import_smithy_client.expectString
  });
}, "de_ReplicaAutoScalingSpecification");
var de_ReplicaAutoScalingSpecificationList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ReplicaAutoScalingSpecification(entry, context);
  });
  return retVal;
}, "de_ReplicaAutoScalingSpecificationList");
var de_ReplicaSpecificationSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    capacitySpecification: (_) => de_CapacitySpecificationSummary(_, context),
    region: import_smithy_client.expectString,
    status: import_smithy_client.expectString
  });
}, "de_ReplicaSpecificationSummary");
var de_ReplicaSpecificationSummaryList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ReplicaSpecificationSummary(entry, context);
  });
  return retVal;
}, "de_ReplicaSpecificationSummaryList");
var de_TargetTrackingScalingPolicyConfiguration = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    disableScaleIn: import_smithy_client.expectBoolean,
    scaleInCooldown: import_smithy_client.expectInt32,
    scaleOutCooldown: import_smithy_client.expectInt32,
    targetValue: import_smithy_client.limitedParseDouble
  });
}, "de_TargetTrackingScalingPolicyConfiguration");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var throwDefaultError = (0, import_smithy_client.withBaseException)(KeyspacesServiceException);
var buildHttpRpcRequest = /* @__PURE__ */ __name(async (context, headers, path, resolvedHostname, body) => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const contents = {
    protocol,
    hostname,
    port,
    method: "POST",
    path: basePath.endsWith("/") ? basePath.slice(0, -1) + path : basePath + path,
    headers
  };
  if (resolvedHostname !== void 0) {
    contents.hostname = resolvedHostname;
  }
  if (body !== void 0) {
    contents.body = body;
  }
  return new import_protocol_http.HttpRequest(contents);
}, "buildHttpRpcRequest");
function sharedHeaders(operation) {
  return {
    "content-type": "application/x-amz-json-1.0",
    "x-amz-target": `KeyspacesService.${operation}`
  };
}
__name(sharedHeaders, "sharedHeaders");

// src/commands/CreateKeyspaceCommand.ts
var _CreateKeyspaceCommand = class _CreateKeyspaceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("KeyspacesService", "CreateKeyspace", {}).n("KeyspacesClient", "CreateKeyspaceCommand").f(void 0, void 0).ser(se_CreateKeyspaceCommand).de(de_CreateKeyspaceCommand).build() {
};
__name(_CreateKeyspaceCommand, "CreateKeyspaceCommand");
var CreateKeyspaceCommand = _CreateKeyspaceCommand;

// src/commands/CreateTableCommand.ts




var _CreateTableCommand = class _CreateTableCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("KeyspacesService", "CreateTable", {}).n("KeyspacesClient", "CreateTableCommand").f(void 0, void 0).ser(se_CreateTableCommand).de(de_CreateTableCommand).build() {
};
__name(_CreateTableCommand, "CreateTableCommand");
var CreateTableCommand = _CreateTableCommand;

// src/commands/DeleteKeyspaceCommand.ts




var _DeleteKeyspaceCommand = class _DeleteKeyspaceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("KeyspacesService", "DeleteKeyspace", {}).n("KeyspacesClient", "DeleteKeyspaceCommand").f(void 0, void 0).ser(se_DeleteKeyspaceCommand).de(de_DeleteKeyspaceCommand).build() {
};
__name(_DeleteKeyspaceCommand, "DeleteKeyspaceCommand");
var DeleteKeyspaceCommand = _DeleteKeyspaceCommand;

// src/commands/DeleteTableCommand.ts




var _DeleteTableCommand = class _DeleteTableCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("KeyspacesService", "DeleteTable", {}).n("KeyspacesClient", "DeleteTableCommand").f(void 0, void 0).ser(se_DeleteTableCommand).de(de_DeleteTableCommand).build() {
};
__name(_DeleteTableCommand, "DeleteTableCommand");
var DeleteTableCommand = _DeleteTableCommand;

// src/commands/GetKeyspaceCommand.ts




var _GetKeyspaceCommand = class _GetKeyspaceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("KeyspacesService", "GetKeyspace", {}).n("KeyspacesClient", "GetKeyspaceCommand").f(void 0, void 0).ser(se_GetKeyspaceCommand).de(de_GetKeyspaceCommand).build() {
};
__name(_GetKeyspaceCommand, "GetKeyspaceCommand");
var GetKeyspaceCommand = _GetKeyspaceCommand;

// src/commands/GetTableAutoScalingSettingsCommand.ts




var _GetTableAutoScalingSettingsCommand = class _GetTableAutoScalingSettingsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("KeyspacesService", "GetTableAutoScalingSettings", {}).n("KeyspacesClient", "GetTableAutoScalingSettingsCommand").f(void 0, void 0).ser(se_GetTableAutoScalingSettingsCommand).de(de_GetTableAutoScalingSettingsCommand).build() {
};
__name(_GetTableAutoScalingSettingsCommand, "GetTableAutoScalingSettingsCommand");
var GetTableAutoScalingSettingsCommand = _GetTableAutoScalingSettingsCommand;

// src/commands/GetTableCommand.ts




var _GetTableCommand = class _GetTableCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("KeyspacesService", "GetTable", {}).n("KeyspacesClient", "GetTableCommand").f(void 0, void 0).ser(se_GetTableCommand).de(de_GetTableCommand).build() {
};
__name(_GetTableCommand, "GetTableCommand");
var GetTableCommand = _GetTableCommand;

// src/commands/ListKeyspacesCommand.ts




var _ListKeyspacesCommand = class _ListKeyspacesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("KeyspacesService", "ListKeyspaces", {}).n("KeyspacesClient", "ListKeyspacesCommand").f(void 0, void 0).ser(se_ListKeyspacesCommand).de(de_ListKeyspacesCommand).build() {
};
__name(_ListKeyspacesCommand, "ListKeyspacesCommand");
var ListKeyspacesCommand = _ListKeyspacesCommand;

// src/commands/ListTablesCommand.ts




var _ListTablesCommand = class _ListTablesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("KeyspacesService", "ListTables", {}).n("KeyspacesClient", "ListTablesCommand").f(void 0, void 0).ser(se_ListTablesCommand).de(de_ListTablesCommand).build() {
};
__name(_ListTablesCommand, "ListTablesCommand");
var ListTablesCommand = _ListTablesCommand;

// src/commands/ListTagsForResourceCommand.ts




var _ListTagsForResourceCommand = class _ListTagsForResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("KeyspacesService", "ListTagsForResource", {}).n("KeyspacesClient", "ListTagsForResourceCommand").f(void 0, void 0).ser(se_ListTagsForResourceCommand).de(de_ListTagsForResourceCommand).build() {
};
__name(_ListTagsForResourceCommand, "ListTagsForResourceCommand");
var ListTagsForResourceCommand = _ListTagsForResourceCommand;

// src/commands/RestoreTableCommand.ts




var _RestoreTableCommand = class _RestoreTableCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("KeyspacesService", "RestoreTable", {}).n("KeyspacesClient", "RestoreTableCommand").f(void 0, void 0).ser(se_RestoreTableCommand).de(de_RestoreTableCommand).build() {
};
__name(_RestoreTableCommand, "RestoreTableCommand");
var RestoreTableCommand = _RestoreTableCommand;

// src/commands/TagResourceCommand.ts




var _TagResourceCommand = class _TagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("KeyspacesService", "TagResource", {}).n("KeyspacesClient", "TagResourceCommand").f(void 0, void 0).ser(se_TagResourceCommand).de(de_TagResourceCommand).build() {
};
__name(_TagResourceCommand, "TagResourceCommand");
var TagResourceCommand = _TagResourceCommand;

// src/commands/UntagResourceCommand.ts




var _UntagResourceCommand = class _UntagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("KeyspacesService", "UntagResource", {}).n("KeyspacesClient", "UntagResourceCommand").f(void 0, void 0).ser(se_UntagResourceCommand).de(de_UntagResourceCommand).build() {
};
__name(_UntagResourceCommand, "UntagResourceCommand");
var UntagResourceCommand = _UntagResourceCommand;

// src/commands/UpdateTableCommand.ts




var _UpdateTableCommand = class _UpdateTableCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("KeyspacesService", "UpdateTable", {}).n("KeyspacesClient", "UpdateTableCommand").f(void 0, void 0).ser(se_UpdateTableCommand).de(de_UpdateTableCommand).build() {
};
__name(_UpdateTableCommand, "UpdateTableCommand");
var UpdateTableCommand = _UpdateTableCommand;

// src/Keyspaces.ts
var commands = {
  CreateKeyspaceCommand,
  CreateTableCommand,
  DeleteKeyspaceCommand,
  DeleteTableCommand,
  GetKeyspaceCommand,
  GetTableCommand,
  GetTableAutoScalingSettingsCommand,
  ListKeyspacesCommand,
  ListTablesCommand,
  ListTagsForResourceCommand,
  RestoreTableCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateTableCommand
};
var _Keyspaces = class _Keyspaces extends KeyspacesClient {
};
__name(_Keyspaces, "Keyspaces");
var Keyspaces = _Keyspaces;
(0, import_smithy_client.createAggregatedClient)(commands, Keyspaces);

// src/pagination/ListKeyspacesPaginator.ts

var paginateListKeyspaces = (0, import_core.createPaginator)(KeyspacesClient, ListKeyspacesCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListTablesPaginator.ts

var paginateListTables = (0, import_core.createPaginator)(KeyspacesClient, ListTablesCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListTagsForResourcePaginator.ts

var paginateListTagsForResource = (0, import_core.createPaginator)(KeyspacesClient, ListTagsForResourceCommand, "nextToken", "nextToken", "maxResults");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  KeyspacesServiceException,
  __Client,
  KeyspacesClient,
  Keyspaces,
  $Command,
  CreateKeyspaceCommand,
  CreateTableCommand,
  DeleteKeyspaceCommand,
  DeleteTableCommand,
  GetKeyspaceCommand,
  GetTableAutoScalingSettingsCommand,
  GetTableCommand,
  ListKeyspacesCommand,
  ListTablesCommand,
  ListTagsForResourceCommand,
  RestoreTableCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateTableCommand,
  paginateListKeyspaces,
  paginateListTables,
  paginateListTagsForResource,
  AccessDeniedException,
  ThroughputMode,
  ClientSideTimestampsStatus,
  SortOrder,
  ConflictException,
  Rs,
  InternalServerException,
  ServiceQuotaExceededException,
  ValidationException,
  EncryptionType,
  PointInTimeRecoveryStatus,
  TimeToLiveStatus,
  ResourceNotFoundException,
  TableStatus
});

