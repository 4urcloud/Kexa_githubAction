import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import { ApplicationCostProfilerClient } from "./ApplicationCostProfilerClient";
import {
  DeleteReportDefinitionCommandInput,
  DeleteReportDefinitionCommandOutput,
} from "./commands/DeleteReportDefinitionCommand";
import {
  GetReportDefinitionCommandInput,
  GetReportDefinitionCommandOutput,
} from "./commands/GetReportDefinitionCommand";
import {
  ImportApplicationUsageCommandInput,
  ImportApplicationUsageCommandOutput,
} from "./commands/ImportApplicationUsageCommand";
import {
  ListReportDefinitionsCommandInput,
  ListReportDefinitionsCommandOutput,
} from "./commands/ListReportDefinitionsCommand";
import {
  PutReportDefinitionCommandInput,
  PutReportDefinitionCommandOutput,
} from "./commands/PutReportDefinitionCommand";
import {
  UpdateReportDefinitionCommandInput,
  UpdateReportDefinitionCommandOutput,
} from "./commands/UpdateReportDefinitionCommand";
export interface ApplicationCostProfiler {
  deleteReportDefinition(
    args: DeleteReportDefinitionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteReportDefinitionCommandOutput>;
  deleteReportDefinition(
    args: DeleteReportDefinitionCommandInput,
    cb: (err: any, data?: DeleteReportDefinitionCommandOutput) => void
  ): void;
  deleteReportDefinition(
    args: DeleteReportDefinitionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteReportDefinitionCommandOutput) => void
  ): void;
  getReportDefinition(
    args: GetReportDefinitionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetReportDefinitionCommandOutput>;
  getReportDefinition(
    args: GetReportDefinitionCommandInput,
    cb: (err: any, data?: GetReportDefinitionCommandOutput) => void
  ): void;
  getReportDefinition(
    args: GetReportDefinitionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetReportDefinitionCommandOutput) => void
  ): void;
  importApplicationUsage(
    args: ImportApplicationUsageCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ImportApplicationUsageCommandOutput>;
  importApplicationUsage(
    args: ImportApplicationUsageCommandInput,
    cb: (err: any, data?: ImportApplicationUsageCommandOutput) => void
  ): void;
  importApplicationUsage(
    args: ImportApplicationUsageCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ImportApplicationUsageCommandOutput) => void
  ): void;
  listReportDefinitions(
    args: ListReportDefinitionsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListReportDefinitionsCommandOutput>;
  listReportDefinitions(
    args: ListReportDefinitionsCommandInput,
    cb: (err: any, data?: ListReportDefinitionsCommandOutput) => void
  ): void;
  listReportDefinitions(
    args: ListReportDefinitionsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListReportDefinitionsCommandOutput) => void
  ): void;
  putReportDefinition(
    args: PutReportDefinitionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PutReportDefinitionCommandOutput>;
  putReportDefinition(
    args: PutReportDefinitionCommandInput,
    cb: (err: any, data?: PutReportDefinitionCommandOutput) => void
  ): void;
  putReportDefinition(
    args: PutReportDefinitionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: PutReportDefinitionCommandOutput) => void
  ): void;
  updateReportDefinition(
    args: UpdateReportDefinitionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateReportDefinitionCommandOutput>;
  updateReportDefinition(
    args: UpdateReportDefinitionCommandInput,
    cb: (err: any, data?: UpdateReportDefinitionCommandOutput) => void
  ): void;
  updateReportDefinition(
    args: UpdateReportDefinitionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateReportDefinitionCommandOutput) => void
  ): void;
}
export declare class ApplicationCostProfiler
  extends ApplicationCostProfilerClient
  implements ApplicationCostProfiler {}
