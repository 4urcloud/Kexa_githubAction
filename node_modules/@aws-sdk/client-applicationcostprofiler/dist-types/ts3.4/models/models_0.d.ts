import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { ApplicationCostProfilerServiceException as __BaseException } from "./ApplicationCostProfilerServiceException";
export declare class AccessDeniedException extends __BaseException {
  readonly name: "AccessDeniedException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<AccessDeniedException, __BaseException>
  );
}
export interface DeleteReportDefinitionRequest {
  reportId: string | undefined;
}
export interface DeleteReportDefinitionResult {
  reportId?: string;
}
export declare class InternalServerException extends __BaseException {
  readonly name: "InternalServerException";
  readonly $fault: "server";
  constructor(
    opts: __ExceptionOptionType<InternalServerException, __BaseException>
  );
}
export declare class ThrottlingException extends __BaseException {
  readonly name: "ThrottlingException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ThrottlingException, __BaseException>
  );
}
export declare class ValidationException extends __BaseException {
  readonly name: "ValidationException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ValidationException, __BaseException>
  );
}
export interface GetReportDefinitionRequest {
  reportId: string | undefined;
}
export interface S3Location {
  bucket: string | undefined;
  prefix: string | undefined;
}
export declare const Format: {
  readonly CSV: "CSV";
  readonly PARQUET: "PARQUET";
};
export type Format = (typeof Format)[keyof typeof Format];
export declare const ReportFrequency: {
  readonly ALL: "ALL";
  readonly DAILY: "DAILY";
  readonly MONTHLY: "MONTHLY";
};
export type ReportFrequency =
  (typeof ReportFrequency)[keyof typeof ReportFrequency];
export interface GetReportDefinitionResult {
  reportId: string | undefined;
  reportDescription: string | undefined;
  reportFrequency: ReportFrequency | undefined;
  format: Format | undefined;
  destinationS3Location: S3Location | undefined;
  createdAt: Date | undefined;
  lastUpdated: Date | undefined;
}
export declare const S3BucketRegion: {
  readonly AF_SOUTH_1: "af-south-1";
  readonly AP_EAST_1: "ap-east-1";
  readonly EU_SOUTH_1: "eu-south-1";
  readonly ME_SOUTH_1: "me-south-1";
};
export type S3BucketRegion =
  (typeof S3BucketRegion)[keyof typeof S3BucketRegion];
export interface SourceS3Location {
  bucket: string | undefined;
  key: string | undefined;
  region?: S3BucketRegion;
}
export interface ImportApplicationUsageRequest {
  sourceS3Location: SourceS3Location | undefined;
}
export interface ImportApplicationUsageResult {
  importId: string | undefined;
}
export interface ListReportDefinitionsRequest {
  nextToken?: string;
  maxResults?: number;
}
export interface ReportDefinition {
  reportId?: string;
  reportDescription?: string;
  reportFrequency?: ReportFrequency;
  format?: Format;
  destinationS3Location?: S3Location;
  createdAt?: Date;
  lastUpdatedAt?: Date;
}
export interface ListReportDefinitionsResult {
  reportDefinitions?: ReportDefinition[];
  nextToken?: string;
}
export interface PutReportDefinitionRequest {
  reportId: string | undefined;
  reportDescription: string | undefined;
  reportFrequency: ReportFrequency | undefined;
  format: Format | undefined;
  destinationS3Location: S3Location | undefined;
}
export interface PutReportDefinitionResult {
  reportId?: string;
}
export declare class ServiceQuotaExceededException extends __BaseException {
  readonly name: "ServiceQuotaExceededException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ServiceQuotaExceededException, __BaseException>
  );
}
export interface UpdateReportDefinitionRequest {
  reportId: string | undefined;
  reportDescription: string | undefined;
  reportFrequency: ReportFrequency | undefined;
  format: Format | undefined;
  destinationS3Location: S3Location | undefined;
}
export interface UpdateReportDefinitionResult {
  reportId?: string;
}
