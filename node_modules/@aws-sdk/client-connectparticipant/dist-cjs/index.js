"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  AccessDeniedException: () => AccessDeniedException,
  ArtifactStatus: () => ArtifactStatus,
  ChatItemType: () => ChatItemType,
  CompleteAttachmentUploadCommand: () => CompleteAttachmentUploadCommand,
  ConflictException: () => ConflictException,
  ConnectParticipant: () => ConnectParticipant,
  ConnectParticipantClient: () => ConnectParticipantClient,
  ConnectParticipantServiceException: () => ConnectParticipantServiceException,
  ConnectionType: () => ConnectionType,
  CreateParticipantConnectionCommand: () => CreateParticipantConnectionCommand,
  DescribeViewCommand: () => DescribeViewCommand,
  DescribeViewResponseFilterSensitiveLog: () => DescribeViewResponseFilterSensitiveLog,
  DisconnectParticipantCommand: () => DisconnectParticipantCommand,
  GetAttachmentCommand: () => GetAttachmentCommand,
  GetTranscriptCommand: () => GetTranscriptCommand,
  InternalServerException: () => InternalServerException,
  ParticipantRole: () => ParticipantRole,
  ResourceNotFoundException: () => ResourceNotFoundException,
  ResourceType: () => ResourceType,
  ScanDirection: () => ScanDirection,
  SendEventCommand: () => SendEventCommand,
  SendMessageCommand: () => SendMessageCommand,
  ServiceQuotaExceededException: () => ServiceQuotaExceededException,
  SortKey: () => SortKey,
  StartAttachmentUploadCommand: () => StartAttachmentUploadCommand,
  ThrottlingException: () => ThrottlingException,
  ValidationException: () => ValidationException,
  ViewContentFilterSensitiveLog: () => ViewContentFilterSensitiveLog,
  ViewFilterSensitiveLog: () => ViewFilterSensitiveLog,
  __Client: () => import_smithy_client.Client,
  paginateGetTranscript: () => paginateGetTranscript
});
module.exports = __toCommonJS(src_exports);

// src/ConnectParticipantClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return {
    ...options,
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "execute-api"
  };
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/ConnectParticipantClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var asPartial = /* @__PURE__ */ __name((t) => t, "asPartial");
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = {
    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),
    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
  };
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return {
    ...runtimeConfig,
    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
  };
}, "resolveRuntimeExtensions");

// src/ConnectParticipantClient.ts
var _ConnectParticipantClient = class _ConnectParticipantClient extends import_smithy_client.Client {
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_config_resolver.resolveRegionConfig)(_config_1);
    const _config_3 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_2);
    const _config_4 = (0, import_middleware_retry.resolveRetryConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, (configuration == null ? void 0 : configuration.extensions) || []);
    super(_config_8);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_retry.getOmitRetryHeadersPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),
        identityProviderConfigProvider: this.getIdentityProviderConfigProvider()
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
  getDefaultHttpAuthSchemeParametersProvider() {
    return import_httpAuthSchemeProvider.defaultConnectParticipantHttpAuthSchemeParametersProvider;
  }
  getIdentityProviderConfigProvider() {
    return async (config) => new import_core.DefaultIdentityProviderConfig({
      "aws.auth#sigv4": config.credentials
    });
  }
};
__name(_ConnectParticipantClient, "ConnectParticipantClient");
var ConnectParticipantClient = _ConnectParticipantClient;

// src/ConnectParticipant.ts


// src/commands/CompleteAttachmentUploadCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");

var import_types = require("@smithy/types");

// src/protocols/Aws_restJson1.ts
var import_core2 = require("@aws-sdk/core");


var import_uuid = require("uuid");

// src/models/ConnectParticipantServiceException.ts

var _ConnectParticipantServiceException = class _ConnectParticipantServiceException extends import_smithy_client.ServiceException {
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _ConnectParticipantServiceException.prototype);
  }
};
__name(_ConnectParticipantServiceException, "ConnectParticipantServiceException");
var ConnectParticipantServiceException = _ConnectParticipantServiceException;

// src/models/models_0.ts

var _AccessDeniedException = class _AccessDeniedException extends ConnectParticipantServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "AccessDeniedException",
      $fault: "client",
      ...opts
    });
    this.name = "AccessDeniedException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _AccessDeniedException.prototype);
    this.Message = opts.Message;
  }
};
__name(_AccessDeniedException, "AccessDeniedException");
var AccessDeniedException = _AccessDeniedException;
var _ConflictException = class _ConflictException extends ConnectParticipantServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ConflictException",
      $fault: "client",
      ...opts
    });
    this.name = "ConflictException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ConflictException.prototype);
    this.Message = opts.Message;
  }
};
__name(_ConflictException, "ConflictException");
var ConflictException = _ConflictException;
var _InternalServerException = class _InternalServerException extends ConnectParticipantServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InternalServerException",
      $fault: "server",
      ...opts
    });
    this.name = "InternalServerException";
    this.$fault = "server";
    Object.setPrototypeOf(this, _InternalServerException.prototype);
    this.Message = opts.Message;
  }
};
__name(_InternalServerException, "InternalServerException");
var InternalServerException = _InternalServerException;
var _ServiceQuotaExceededException = class _ServiceQuotaExceededException extends ConnectParticipantServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ServiceQuotaExceededException",
      $fault: "client",
      ...opts
    });
    this.name = "ServiceQuotaExceededException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ServiceQuotaExceededException.prototype);
    this.Message = opts.Message;
  }
};
__name(_ServiceQuotaExceededException, "ServiceQuotaExceededException");
var ServiceQuotaExceededException = _ServiceQuotaExceededException;
var _ThrottlingException = class _ThrottlingException extends ConnectParticipantServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ThrottlingException",
      $fault: "client",
      ...opts
    });
    this.name = "ThrottlingException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ThrottlingException.prototype);
    this.Message = opts.Message;
  }
};
__name(_ThrottlingException, "ThrottlingException");
var ThrottlingException = _ThrottlingException;
var _ValidationException = class _ValidationException extends ConnectParticipantServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ValidationException",
      $fault: "client",
      ...opts
    });
    this.name = "ValidationException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ValidationException.prototype);
    this.Message = opts.Message;
  }
};
__name(_ValidationException, "ValidationException");
var ValidationException = _ValidationException;
var ConnectionType = {
  CONNECTION_CREDENTIALS: "CONNECTION_CREDENTIALS",
  WEBSOCKET: "WEBSOCKET"
};
var ResourceType = {
  CONTACT: "CONTACT",
  CONTACT_FLOW: "CONTACT_FLOW",
  HIERARCHY_GROUP: "HIERARCHY_GROUP",
  HIERARCHY_LEVEL: "HIERARCHY_LEVEL",
  INSTANCE: "INSTANCE",
  PARTICIPANT: "PARTICIPANT",
  PHONE_NUMBER: "PHONE_NUMBER",
  USER: "USER"
};
var _ResourceNotFoundException = class _ResourceNotFoundException extends ConnectParticipantServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceNotFoundException",
      $fault: "client",
      ...opts
    });
    this.name = "ResourceNotFoundException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourceNotFoundException.prototype);
    this.Message = opts.Message;
    this.ResourceId = opts.ResourceId;
    this.ResourceType = opts.ResourceType;
  }
};
__name(_ResourceNotFoundException, "ResourceNotFoundException");
var ResourceNotFoundException = _ResourceNotFoundException;
var ScanDirection = {
  BACKWARD: "BACKWARD",
  FORWARD: "FORWARD"
};
var SortKey = {
  ASCENDING: "ASCENDING",
  DESCENDING: "DESCENDING"
};
var ArtifactStatus = {
  APPROVED: "APPROVED",
  IN_PROGRESS: "IN_PROGRESS",
  REJECTED: "REJECTED"
};
var ParticipantRole = {
  AGENT: "AGENT",
  CUSTOMER: "CUSTOMER",
  CUSTOM_BOT: "CUSTOM_BOT",
  SUPERVISOR: "SUPERVISOR",
  SYSTEM: "SYSTEM"
};
var ChatItemType = {
  ATTACHMENT: "ATTACHMENT",
  CHAT_ENDED: "CHAT_ENDED",
  CONNECTION_ACK: "CONNECTION_ACK",
  EVENT: "EVENT",
  MESSAGE: "MESSAGE",
  MESSAGE_DELIVERED: "MESSAGE_DELIVERED",
  MESSAGE_READ: "MESSAGE_READ",
  PARTICIPANT_JOINED: "PARTICIPANT_JOINED",
  PARTICIPANT_LEFT: "PARTICIPANT_LEFT",
  TRANSFER_FAILED: "TRANSFER_FAILED",
  TRANSFER_SUCCEEDED: "TRANSFER_SUCCEEDED",
  TYPING: "TYPING"
};
var ViewContentFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.InputSchema && { InputSchema: import_smithy_client.SENSITIVE_STRING },
  ...obj.Template && { Template: import_smithy_client.SENSITIVE_STRING },
  ...obj.Actions && { Actions: import_smithy_client.SENSITIVE_STRING }
}), "ViewContentFilterSensitiveLog");
var ViewFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Name && { Name: import_smithy_client.SENSITIVE_STRING },
  ...obj.Content && { Content: ViewContentFilterSensitiveLog(obj.Content) }
}), "ViewFilterSensitiveLog");
var DescribeViewResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.View && { View: ViewFilterSensitiveLog(obj.View) }
}), "DescribeViewResponseFilterSensitiveLog");

// src/protocols/Aws_restJson1.ts
var se_CompleteAttachmentUploadCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = (0, import_smithy_client.map)({}, isSerializableHeaderValue, {
    "content-type": "application/json",
    [_xab]: input[_CT]
  });
  b.bp("/participant/complete-attachment-upload");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      AttachmentIds: (_) => (0, import_smithy_client._json)(_),
      ClientToken: [true, (_) => _ ?? (0, import_uuid.v4)()]
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CompleteAttachmentUploadCommand");
var se_CreateParticipantConnectionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = (0, import_smithy_client.map)({}, isSerializableHeaderValue, {
    "content-type": "application/json",
    [_xab]: input[_PT]
  });
  b.bp("/participant/connection");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ConnectParticipant: [],
      Type: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateParticipantConnectionCommand");
var se_DescribeViewCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = (0, import_smithy_client.map)({}, isSerializableHeaderValue, {
    [_xab]: input[_CT]
  });
  b.bp("/participant/views/{ViewToken}");
  b.p("ViewToken", () => input.ViewToken, "{ViewToken}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeViewCommand");
var se_DisconnectParticipantCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = (0, import_smithy_client.map)({}, isSerializableHeaderValue, {
    "content-type": "application/json",
    [_xab]: input[_CT]
  });
  b.bp("/participant/disconnect");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ClientToken: [true, (_) => _ ?? (0, import_uuid.v4)()]
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DisconnectParticipantCommand");
var se_GetAttachmentCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = (0, import_smithy_client.map)({}, isSerializableHeaderValue, {
    "content-type": "application/json",
    [_xab]: input[_CT]
  });
  b.bp("/participant/attachment");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      AttachmentId: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_GetAttachmentCommand");
var se_GetTranscriptCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = (0, import_smithy_client.map)({}, isSerializableHeaderValue, {
    "content-type": "application/json",
    [_xab]: input[_CT]
  });
  b.bp("/participant/transcript");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ContactId: [],
      MaxResults: [],
      NextToken: [],
      ScanDirection: [],
      SortOrder: [],
      StartPosition: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_GetTranscriptCommand");
var se_SendEventCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = (0, import_smithy_client.map)({}, isSerializableHeaderValue, {
    "content-type": "application/json",
    [_xab]: input[_CT]
  });
  b.bp("/participant/event");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ClientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      Content: [],
      ContentType: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_SendEventCommand");
var se_SendMessageCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = (0, import_smithy_client.map)({}, isSerializableHeaderValue, {
    "content-type": "application/json",
    [_xab]: input[_CT]
  });
  b.bp("/participant/message");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ClientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      Content: [],
      ContentType: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_SendMessageCommand");
var se_StartAttachmentUploadCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = (0, import_smithy_client.map)({}, isSerializableHeaderValue, {
    "content-type": "application/json",
    [_xab]: input[_CT]
  });
  b.bp("/participant/start-attachment-upload");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      AttachmentName: [],
      AttachmentSizeInBytes: [],
      ClientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      ContentType: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_StartAttachmentUploadCommand");
var de_CompleteAttachmentUploadCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_CompleteAttachmentUploadCommand");
var de_CreateParticipantConnectionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ConnectionCredentials: import_smithy_client._json,
    Websocket: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateParticipantConnectionCommand");
var de_DescribeViewCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    View: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeViewCommand");
var de_DisconnectParticipantCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DisconnectParticipantCommand");
var de_GetAttachmentCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Url: import_smithy_client.expectString,
    UrlExpiry: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetAttachmentCommand");
var de_GetTranscriptCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    InitialContactId: import_smithy_client.expectString,
    NextToken: import_smithy_client.expectString,
    Transcript: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetTranscriptCommand");
var de_SendEventCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    AbsoluteTime: import_smithy_client.expectString,
    Id: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_SendEventCommand");
var de_SendMessageCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    AbsoluteTime: import_smithy_client.expectString,
    Id: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_SendMessageCommand");
var de_StartAttachmentUploadCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    AttachmentId: import_smithy_client.expectString,
    UploadMetadata: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_StartAttachmentUploadCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await (0, import_core2.parseJsonErrorBody)(output.body, context)
  };
  const errorCode = (0, import_core2.loadRestJsonErrorCode)(output, parsedOutput.body);
  switch (errorCode) {
    case "AccessDeniedException":
    case "com.amazonaws.connectparticipant#AccessDeniedException":
      throw await de_AccessDeniedExceptionRes(parsedOutput, context);
    case "ConflictException":
    case "com.amazonaws.connectparticipant#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    case "InternalServerException":
    case "com.amazonaws.connectparticipant#InternalServerException":
      throw await de_InternalServerExceptionRes(parsedOutput, context);
    case "ServiceQuotaExceededException":
    case "com.amazonaws.connectparticipant#ServiceQuotaExceededException":
      throw await de_ServiceQuotaExceededExceptionRes(parsedOutput, context);
    case "ThrottlingException":
    case "com.amazonaws.connectparticipant#ThrottlingException":
      throw await de_ThrottlingExceptionRes(parsedOutput, context);
    case "ValidationException":
    case "com.amazonaws.connectparticipant#ValidationException":
      throw await de_ValidationExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.connectparticipant#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var throwDefaultError = (0, import_smithy_client.withBaseException)(ConnectParticipantServiceException);
var de_AccessDeniedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new AccessDeniedException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_AccessDeniedExceptionRes");
var de_ConflictExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ConflictException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ConflictExceptionRes");
var de_InternalServerExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new InternalServerException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_InternalServerExceptionRes");
var de_ResourceNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString,
    ResourceId: import_smithy_client.expectString,
    ResourceType: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ResourceNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ResourceNotFoundExceptionRes");
var de_ServiceQuotaExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ServiceQuotaExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ServiceQuotaExceededExceptionRes");
var de_ThrottlingExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ThrottlingException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ThrottlingExceptionRes");
var de_ValidationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ValidationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ValidationExceptionRes");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var isSerializableHeaderValue = /* @__PURE__ */ __name((value) => value !== void 0 && value !== null && value !== "" && (!Object.getOwnPropertyNames(value).includes("length") || value.length != 0) && (!Object.getOwnPropertyNames(value).includes("size") || value.size != 0), "isSerializableHeaderValue");
var _CT = "ConnectionToken";
var _PT = "ParticipantToken";
var _xab = "x-amz-bearer";

// src/commands/CompleteAttachmentUploadCommand.ts
var _CompleteAttachmentUploadCommand = class _CompleteAttachmentUploadCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonConnectParticipantServiceLambda", "CompleteAttachmentUpload", {}).n("ConnectParticipantClient", "CompleteAttachmentUploadCommand").f(void 0, void 0).ser(se_CompleteAttachmentUploadCommand).de(de_CompleteAttachmentUploadCommand).build() {
};
__name(_CompleteAttachmentUploadCommand, "CompleteAttachmentUploadCommand");
var CompleteAttachmentUploadCommand = _CompleteAttachmentUploadCommand;

// src/commands/CreateParticipantConnectionCommand.ts




var _CreateParticipantConnectionCommand = class _CreateParticipantConnectionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonConnectParticipantServiceLambda", "CreateParticipantConnection", {}).n("ConnectParticipantClient", "CreateParticipantConnectionCommand").f(void 0, void 0).ser(se_CreateParticipantConnectionCommand).de(de_CreateParticipantConnectionCommand).build() {
};
__name(_CreateParticipantConnectionCommand, "CreateParticipantConnectionCommand");
var CreateParticipantConnectionCommand = _CreateParticipantConnectionCommand;

// src/commands/DescribeViewCommand.ts




var _DescribeViewCommand = class _DescribeViewCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonConnectParticipantServiceLambda", "DescribeView", {}).n("ConnectParticipantClient", "DescribeViewCommand").f(void 0, DescribeViewResponseFilterSensitiveLog).ser(se_DescribeViewCommand).de(de_DescribeViewCommand).build() {
};
__name(_DescribeViewCommand, "DescribeViewCommand");
var DescribeViewCommand = _DescribeViewCommand;

// src/commands/DisconnectParticipantCommand.ts




var _DisconnectParticipantCommand = class _DisconnectParticipantCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonConnectParticipantServiceLambda", "DisconnectParticipant", {}).n("ConnectParticipantClient", "DisconnectParticipantCommand").f(void 0, void 0).ser(se_DisconnectParticipantCommand).de(de_DisconnectParticipantCommand).build() {
};
__name(_DisconnectParticipantCommand, "DisconnectParticipantCommand");
var DisconnectParticipantCommand = _DisconnectParticipantCommand;

// src/commands/GetAttachmentCommand.ts




var _GetAttachmentCommand = class _GetAttachmentCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonConnectParticipantServiceLambda", "GetAttachment", {}).n("ConnectParticipantClient", "GetAttachmentCommand").f(void 0, void 0).ser(se_GetAttachmentCommand).de(de_GetAttachmentCommand).build() {
};
__name(_GetAttachmentCommand, "GetAttachmentCommand");
var GetAttachmentCommand = _GetAttachmentCommand;

// src/commands/GetTranscriptCommand.ts




var _GetTranscriptCommand = class _GetTranscriptCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonConnectParticipantServiceLambda", "GetTranscript", {}).n("ConnectParticipantClient", "GetTranscriptCommand").f(void 0, void 0).ser(se_GetTranscriptCommand).de(de_GetTranscriptCommand).build() {
};
__name(_GetTranscriptCommand, "GetTranscriptCommand");
var GetTranscriptCommand = _GetTranscriptCommand;

// src/commands/SendEventCommand.ts




var _SendEventCommand = class _SendEventCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonConnectParticipantServiceLambda", "SendEvent", {}).n("ConnectParticipantClient", "SendEventCommand").f(void 0, void 0).ser(se_SendEventCommand).de(de_SendEventCommand).build() {
};
__name(_SendEventCommand, "SendEventCommand");
var SendEventCommand = _SendEventCommand;

// src/commands/SendMessageCommand.ts




var _SendMessageCommand = class _SendMessageCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonConnectParticipantServiceLambda", "SendMessage", {}).n("ConnectParticipantClient", "SendMessageCommand").f(void 0, void 0).ser(se_SendMessageCommand).de(de_SendMessageCommand).build() {
};
__name(_SendMessageCommand, "SendMessageCommand");
var SendMessageCommand = _SendMessageCommand;

// src/commands/StartAttachmentUploadCommand.ts




var _StartAttachmentUploadCommand = class _StartAttachmentUploadCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonConnectParticipantServiceLambda", "StartAttachmentUpload", {}).n("ConnectParticipantClient", "StartAttachmentUploadCommand").f(void 0, void 0).ser(se_StartAttachmentUploadCommand).de(de_StartAttachmentUploadCommand).build() {
};
__name(_StartAttachmentUploadCommand, "StartAttachmentUploadCommand");
var StartAttachmentUploadCommand = _StartAttachmentUploadCommand;

// src/ConnectParticipant.ts
var commands = {
  CompleteAttachmentUploadCommand,
  CreateParticipantConnectionCommand,
  DescribeViewCommand,
  DisconnectParticipantCommand,
  GetAttachmentCommand,
  GetTranscriptCommand,
  SendEventCommand,
  SendMessageCommand,
  StartAttachmentUploadCommand
};
var _ConnectParticipant = class _ConnectParticipant extends ConnectParticipantClient {
};
__name(_ConnectParticipant, "ConnectParticipant");
var ConnectParticipant = _ConnectParticipant;
(0, import_smithy_client.createAggregatedClient)(commands, ConnectParticipant);

// src/pagination/GetTranscriptPaginator.ts

var paginateGetTranscript = (0, import_core.createPaginator)(ConnectParticipantClient, GetTranscriptCommand, "NextToken", "NextToken", "MaxResults");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  ConnectParticipantServiceException,
  __Client,
  ConnectParticipantClient,
  ConnectParticipant,
  $Command,
  CompleteAttachmentUploadCommand,
  CreateParticipantConnectionCommand,
  DescribeViewCommand,
  DisconnectParticipantCommand,
  GetAttachmentCommand,
  GetTranscriptCommand,
  SendEventCommand,
  SendMessageCommand,
  StartAttachmentUploadCommand,
  paginateGetTranscript,
  AccessDeniedException,
  ConflictException,
  InternalServerException,
  ServiceQuotaExceededException,
  ThrottlingException,
  ValidationException,
  ConnectionType,
  ResourceType,
  ResourceNotFoundException,
  ScanDirection,
  SortKey,
  ArtifactStatus,
  ParticipantRole,
  ChatItemType,
  ViewContentFilterSensitiveLog,
  ViewFilterSensitiveLog,
  DescribeViewResponseFilterSensitiveLog
});

