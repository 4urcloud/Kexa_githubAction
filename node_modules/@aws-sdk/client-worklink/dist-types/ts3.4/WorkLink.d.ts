import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import {
  AssociateDomainCommandInput,
  AssociateDomainCommandOutput,
} from "./commands/AssociateDomainCommand";
import {
  AssociateWebsiteAuthorizationProviderCommandInput,
  AssociateWebsiteAuthorizationProviderCommandOutput,
} from "./commands/AssociateWebsiteAuthorizationProviderCommand";
import {
  AssociateWebsiteCertificateAuthorityCommandInput,
  AssociateWebsiteCertificateAuthorityCommandOutput,
} from "./commands/AssociateWebsiteCertificateAuthorityCommand";
import {
  CreateFleetCommandInput,
  CreateFleetCommandOutput,
} from "./commands/CreateFleetCommand";
import {
  DeleteFleetCommandInput,
  DeleteFleetCommandOutput,
} from "./commands/DeleteFleetCommand";
import {
  DescribeAuditStreamConfigurationCommandInput,
  DescribeAuditStreamConfigurationCommandOutput,
} from "./commands/DescribeAuditStreamConfigurationCommand";
import {
  DescribeCompanyNetworkConfigurationCommandInput,
  DescribeCompanyNetworkConfigurationCommandOutput,
} from "./commands/DescribeCompanyNetworkConfigurationCommand";
import {
  DescribeDeviceCommandInput,
  DescribeDeviceCommandOutput,
} from "./commands/DescribeDeviceCommand";
import {
  DescribeDevicePolicyConfigurationCommandInput,
  DescribeDevicePolicyConfigurationCommandOutput,
} from "./commands/DescribeDevicePolicyConfigurationCommand";
import {
  DescribeDomainCommandInput,
  DescribeDomainCommandOutput,
} from "./commands/DescribeDomainCommand";
import {
  DescribeFleetMetadataCommandInput,
  DescribeFleetMetadataCommandOutput,
} from "./commands/DescribeFleetMetadataCommand";
import {
  DescribeIdentityProviderConfigurationCommandInput,
  DescribeIdentityProviderConfigurationCommandOutput,
} from "./commands/DescribeIdentityProviderConfigurationCommand";
import {
  DescribeWebsiteCertificateAuthorityCommandInput,
  DescribeWebsiteCertificateAuthorityCommandOutput,
} from "./commands/DescribeWebsiteCertificateAuthorityCommand";
import {
  DisassociateDomainCommandInput,
  DisassociateDomainCommandOutput,
} from "./commands/DisassociateDomainCommand";
import {
  DisassociateWebsiteAuthorizationProviderCommandInput,
  DisassociateWebsiteAuthorizationProviderCommandOutput,
} from "./commands/DisassociateWebsiteAuthorizationProviderCommand";
import {
  DisassociateWebsiteCertificateAuthorityCommandInput,
  DisassociateWebsiteCertificateAuthorityCommandOutput,
} from "./commands/DisassociateWebsiteCertificateAuthorityCommand";
import {
  ListDevicesCommandInput,
  ListDevicesCommandOutput,
} from "./commands/ListDevicesCommand";
import {
  ListDomainsCommandInput,
  ListDomainsCommandOutput,
} from "./commands/ListDomainsCommand";
import {
  ListFleetsCommandInput,
  ListFleetsCommandOutput,
} from "./commands/ListFleetsCommand";
import {
  ListTagsForResourceCommandInput,
  ListTagsForResourceCommandOutput,
} from "./commands/ListTagsForResourceCommand";
import {
  ListWebsiteAuthorizationProvidersCommandInput,
  ListWebsiteAuthorizationProvidersCommandOutput,
} from "./commands/ListWebsiteAuthorizationProvidersCommand";
import {
  ListWebsiteCertificateAuthoritiesCommandInput,
  ListWebsiteCertificateAuthoritiesCommandOutput,
} from "./commands/ListWebsiteCertificateAuthoritiesCommand";
import {
  RestoreDomainAccessCommandInput,
  RestoreDomainAccessCommandOutput,
} from "./commands/RestoreDomainAccessCommand";
import {
  RevokeDomainAccessCommandInput,
  RevokeDomainAccessCommandOutput,
} from "./commands/RevokeDomainAccessCommand";
import {
  SignOutUserCommandInput,
  SignOutUserCommandOutput,
} from "./commands/SignOutUserCommand";
import {
  TagResourceCommandInput,
  TagResourceCommandOutput,
} from "./commands/TagResourceCommand";
import {
  UntagResourceCommandInput,
  UntagResourceCommandOutput,
} from "./commands/UntagResourceCommand";
import {
  UpdateAuditStreamConfigurationCommandInput,
  UpdateAuditStreamConfigurationCommandOutput,
} from "./commands/UpdateAuditStreamConfigurationCommand";
import {
  UpdateCompanyNetworkConfigurationCommandInput,
  UpdateCompanyNetworkConfigurationCommandOutput,
} from "./commands/UpdateCompanyNetworkConfigurationCommand";
import {
  UpdateDevicePolicyConfigurationCommandInput,
  UpdateDevicePolicyConfigurationCommandOutput,
} from "./commands/UpdateDevicePolicyConfigurationCommand";
import {
  UpdateDomainMetadataCommandInput,
  UpdateDomainMetadataCommandOutput,
} from "./commands/UpdateDomainMetadataCommand";
import {
  UpdateFleetMetadataCommandInput,
  UpdateFleetMetadataCommandOutput,
} from "./commands/UpdateFleetMetadataCommand";
import {
  UpdateIdentityProviderConfigurationCommandInput,
  UpdateIdentityProviderConfigurationCommandOutput,
} from "./commands/UpdateIdentityProviderConfigurationCommand";
import { WorkLinkClient } from "./WorkLinkClient";
export interface WorkLink {
  associateDomain(
    args: AssociateDomainCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AssociateDomainCommandOutput>;
  associateDomain(
    args: AssociateDomainCommandInput,
    cb: (err: any, data?: AssociateDomainCommandOutput) => void
  ): void;
  associateDomain(
    args: AssociateDomainCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AssociateDomainCommandOutput) => void
  ): void;
  associateWebsiteAuthorizationProvider(
    args: AssociateWebsiteAuthorizationProviderCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AssociateWebsiteAuthorizationProviderCommandOutput>;
  associateWebsiteAuthorizationProvider(
    args: AssociateWebsiteAuthorizationProviderCommandInput,
    cb: (
      err: any,
      data?: AssociateWebsiteAuthorizationProviderCommandOutput
    ) => void
  ): void;
  associateWebsiteAuthorizationProvider(
    args: AssociateWebsiteAuthorizationProviderCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: AssociateWebsiteAuthorizationProviderCommandOutput
    ) => void
  ): void;
  associateWebsiteCertificateAuthority(
    args: AssociateWebsiteCertificateAuthorityCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AssociateWebsiteCertificateAuthorityCommandOutput>;
  associateWebsiteCertificateAuthority(
    args: AssociateWebsiteCertificateAuthorityCommandInput,
    cb: (
      err: any,
      data?: AssociateWebsiteCertificateAuthorityCommandOutput
    ) => void
  ): void;
  associateWebsiteCertificateAuthority(
    args: AssociateWebsiteCertificateAuthorityCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: AssociateWebsiteCertificateAuthorityCommandOutput
    ) => void
  ): void;
  createFleet(
    args: CreateFleetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateFleetCommandOutput>;
  createFleet(
    args: CreateFleetCommandInput,
    cb: (err: any, data?: CreateFleetCommandOutput) => void
  ): void;
  createFleet(
    args: CreateFleetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateFleetCommandOutput) => void
  ): void;
  deleteFleet(
    args: DeleteFleetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteFleetCommandOutput>;
  deleteFleet(
    args: DeleteFleetCommandInput,
    cb: (err: any, data?: DeleteFleetCommandOutput) => void
  ): void;
  deleteFleet(
    args: DeleteFleetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteFleetCommandOutput) => void
  ): void;
  describeAuditStreamConfiguration(
    args: DescribeAuditStreamConfigurationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeAuditStreamConfigurationCommandOutput>;
  describeAuditStreamConfiguration(
    args: DescribeAuditStreamConfigurationCommandInput,
    cb: (err: any, data?: DescribeAuditStreamConfigurationCommandOutput) => void
  ): void;
  describeAuditStreamConfiguration(
    args: DescribeAuditStreamConfigurationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeAuditStreamConfigurationCommandOutput) => void
  ): void;
  describeCompanyNetworkConfiguration(
    args: DescribeCompanyNetworkConfigurationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeCompanyNetworkConfigurationCommandOutput>;
  describeCompanyNetworkConfiguration(
    args: DescribeCompanyNetworkConfigurationCommandInput,
    cb: (
      err: any,
      data?: DescribeCompanyNetworkConfigurationCommandOutput
    ) => void
  ): void;
  describeCompanyNetworkConfiguration(
    args: DescribeCompanyNetworkConfigurationCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: DescribeCompanyNetworkConfigurationCommandOutput
    ) => void
  ): void;
  describeDevice(
    args: DescribeDeviceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeDeviceCommandOutput>;
  describeDevice(
    args: DescribeDeviceCommandInput,
    cb: (err: any, data?: DescribeDeviceCommandOutput) => void
  ): void;
  describeDevice(
    args: DescribeDeviceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeDeviceCommandOutput) => void
  ): void;
  describeDevicePolicyConfiguration(
    args: DescribeDevicePolicyConfigurationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeDevicePolicyConfigurationCommandOutput>;
  describeDevicePolicyConfiguration(
    args: DescribeDevicePolicyConfigurationCommandInput,
    cb: (
      err: any,
      data?: DescribeDevicePolicyConfigurationCommandOutput
    ) => void
  ): void;
  describeDevicePolicyConfiguration(
    args: DescribeDevicePolicyConfigurationCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: DescribeDevicePolicyConfigurationCommandOutput
    ) => void
  ): void;
  describeDomain(
    args: DescribeDomainCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeDomainCommandOutput>;
  describeDomain(
    args: DescribeDomainCommandInput,
    cb: (err: any, data?: DescribeDomainCommandOutput) => void
  ): void;
  describeDomain(
    args: DescribeDomainCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeDomainCommandOutput) => void
  ): void;
  describeFleetMetadata(
    args: DescribeFleetMetadataCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeFleetMetadataCommandOutput>;
  describeFleetMetadata(
    args: DescribeFleetMetadataCommandInput,
    cb: (err: any, data?: DescribeFleetMetadataCommandOutput) => void
  ): void;
  describeFleetMetadata(
    args: DescribeFleetMetadataCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeFleetMetadataCommandOutput) => void
  ): void;
  describeIdentityProviderConfiguration(
    args: DescribeIdentityProviderConfigurationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeIdentityProviderConfigurationCommandOutput>;
  describeIdentityProviderConfiguration(
    args: DescribeIdentityProviderConfigurationCommandInput,
    cb: (
      err: any,
      data?: DescribeIdentityProviderConfigurationCommandOutput
    ) => void
  ): void;
  describeIdentityProviderConfiguration(
    args: DescribeIdentityProviderConfigurationCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: DescribeIdentityProviderConfigurationCommandOutput
    ) => void
  ): void;
  describeWebsiteCertificateAuthority(
    args: DescribeWebsiteCertificateAuthorityCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeWebsiteCertificateAuthorityCommandOutput>;
  describeWebsiteCertificateAuthority(
    args: DescribeWebsiteCertificateAuthorityCommandInput,
    cb: (
      err: any,
      data?: DescribeWebsiteCertificateAuthorityCommandOutput
    ) => void
  ): void;
  describeWebsiteCertificateAuthority(
    args: DescribeWebsiteCertificateAuthorityCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: DescribeWebsiteCertificateAuthorityCommandOutput
    ) => void
  ): void;
  disassociateDomain(
    args: DisassociateDomainCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DisassociateDomainCommandOutput>;
  disassociateDomain(
    args: DisassociateDomainCommandInput,
    cb: (err: any, data?: DisassociateDomainCommandOutput) => void
  ): void;
  disassociateDomain(
    args: DisassociateDomainCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DisassociateDomainCommandOutput) => void
  ): void;
  disassociateWebsiteAuthorizationProvider(
    args: DisassociateWebsiteAuthorizationProviderCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DisassociateWebsiteAuthorizationProviderCommandOutput>;
  disassociateWebsiteAuthorizationProvider(
    args: DisassociateWebsiteAuthorizationProviderCommandInput,
    cb: (
      err: any,
      data?: DisassociateWebsiteAuthorizationProviderCommandOutput
    ) => void
  ): void;
  disassociateWebsiteAuthorizationProvider(
    args: DisassociateWebsiteAuthorizationProviderCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: DisassociateWebsiteAuthorizationProviderCommandOutput
    ) => void
  ): void;
  disassociateWebsiteCertificateAuthority(
    args: DisassociateWebsiteCertificateAuthorityCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DisassociateWebsiteCertificateAuthorityCommandOutput>;
  disassociateWebsiteCertificateAuthority(
    args: DisassociateWebsiteCertificateAuthorityCommandInput,
    cb: (
      err: any,
      data?: DisassociateWebsiteCertificateAuthorityCommandOutput
    ) => void
  ): void;
  disassociateWebsiteCertificateAuthority(
    args: DisassociateWebsiteCertificateAuthorityCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: DisassociateWebsiteCertificateAuthorityCommandOutput
    ) => void
  ): void;
  listDevices(
    args: ListDevicesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListDevicesCommandOutput>;
  listDevices(
    args: ListDevicesCommandInput,
    cb: (err: any, data?: ListDevicesCommandOutput) => void
  ): void;
  listDevices(
    args: ListDevicesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListDevicesCommandOutput) => void
  ): void;
  listDomains(
    args: ListDomainsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListDomainsCommandOutput>;
  listDomains(
    args: ListDomainsCommandInput,
    cb: (err: any, data?: ListDomainsCommandOutput) => void
  ): void;
  listDomains(
    args: ListDomainsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListDomainsCommandOutput) => void
  ): void;
  listFleets(
    args: ListFleetsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListFleetsCommandOutput>;
  listFleets(
    args: ListFleetsCommandInput,
    cb: (err: any, data?: ListFleetsCommandOutput) => void
  ): void;
  listFleets(
    args: ListFleetsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListFleetsCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListTagsForResourceCommandOutput>;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  listWebsiteAuthorizationProviders(
    args: ListWebsiteAuthorizationProvidersCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListWebsiteAuthorizationProvidersCommandOutput>;
  listWebsiteAuthorizationProviders(
    args: ListWebsiteAuthorizationProvidersCommandInput,
    cb: (
      err: any,
      data?: ListWebsiteAuthorizationProvidersCommandOutput
    ) => void
  ): void;
  listWebsiteAuthorizationProviders(
    args: ListWebsiteAuthorizationProvidersCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: ListWebsiteAuthorizationProvidersCommandOutput
    ) => void
  ): void;
  listWebsiteCertificateAuthorities(
    args: ListWebsiteCertificateAuthoritiesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListWebsiteCertificateAuthoritiesCommandOutput>;
  listWebsiteCertificateAuthorities(
    args: ListWebsiteCertificateAuthoritiesCommandInput,
    cb: (
      err: any,
      data?: ListWebsiteCertificateAuthoritiesCommandOutput
    ) => void
  ): void;
  listWebsiteCertificateAuthorities(
    args: ListWebsiteCertificateAuthoritiesCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: ListWebsiteCertificateAuthoritiesCommandOutput
    ) => void
  ): void;
  restoreDomainAccess(
    args: RestoreDomainAccessCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<RestoreDomainAccessCommandOutput>;
  restoreDomainAccess(
    args: RestoreDomainAccessCommandInput,
    cb: (err: any, data?: RestoreDomainAccessCommandOutput) => void
  ): void;
  restoreDomainAccess(
    args: RestoreDomainAccessCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: RestoreDomainAccessCommandOutput) => void
  ): void;
  revokeDomainAccess(
    args: RevokeDomainAccessCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<RevokeDomainAccessCommandOutput>;
  revokeDomainAccess(
    args: RevokeDomainAccessCommandInput,
    cb: (err: any, data?: RevokeDomainAccessCommandOutput) => void
  ): void;
  revokeDomainAccess(
    args: RevokeDomainAccessCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: RevokeDomainAccessCommandOutput) => void
  ): void;
  signOutUser(
    args: SignOutUserCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<SignOutUserCommandOutput>;
  signOutUser(
    args: SignOutUserCommandInput,
    cb: (err: any, data?: SignOutUserCommandOutput) => void
  ): void;
  signOutUser(
    args: SignOutUserCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: SignOutUserCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<TagResourceCommandOutput>;
  tagResource(
    args: TagResourceCommandInput,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UntagResourceCommandOutput>;
  untagResource(
    args: UntagResourceCommandInput,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  updateAuditStreamConfiguration(
    args: UpdateAuditStreamConfigurationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateAuditStreamConfigurationCommandOutput>;
  updateAuditStreamConfiguration(
    args: UpdateAuditStreamConfigurationCommandInput,
    cb: (err: any, data?: UpdateAuditStreamConfigurationCommandOutput) => void
  ): void;
  updateAuditStreamConfiguration(
    args: UpdateAuditStreamConfigurationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateAuditStreamConfigurationCommandOutput) => void
  ): void;
  updateCompanyNetworkConfiguration(
    args: UpdateCompanyNetworkConfigurationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateCompanyNetworkConfigurationCommandOutput>;
  updateCompanyNetworkConfiguration(
    args: UpdateCompanyNetworkConfigurationCommandInput,
    cb: (
      err: any,
      data?: UpdateCompanyNetworkConfigurationCommandOutput
    ) => void
  ): void;
  updateCompanyNetworkConfiguration(
    args: UpdateCompanyNetworkConfigurationCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: UpdateCompanyNetworkConfigurationCommandOutput
    ) => void
  ): void;
  updateDevicePolicyConfiguration(
    args: UpdateDevicePolicyConfigurationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateDevicePolicyConfigurationCommandOutput>;
  updateDevicePolicyConfiguration(
    args: UpdateDevicePolicyConfigurationCommandInput,
    cb: (err: any, data?: UpdateDevicePolicyConfigurationCommandOutput) => void
  ): void;
  updateDevicePolicyConfiguration(
    args: UpdateDevicePolicyConfigurationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateDevicePolicyConfigurationCommandOutput) => void
  ): void;
  updateDomainMetadata(
    args: UpdateDomainMetadataCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateDomainMetadataCommandOutput>;
  updateDomainMetadata(
    args: UpdateDomainMetadataCommandInput,
    cb: (err: any, data?: UpdateDomainMetadataCommandOutput) => void
  ): void;
  updateDomainMetadata(
    args: UpdateDomainMetadataCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateDomainMetadataCommandOutput) => void
  ): void;
  updateFleetMetadata(
    args: UpdateFleetMetadataCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateFleetMetadataCommandOutput>;
  updateFleetMetadata(
    args: UpdateFleetMetadataCommandInput,
    cb: (err: any, data?: UpdateFleetMetadataCommandOutput) => void
  ): void;
  updateFleetMetadata(
    args: UpdateFleetMetadataCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateFleetMetadataCommandOutput) => void
  ): void;
  updateIdentityProviderConfiguration(
    args: UpdateIdentityProviderConfigurationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateIdentityProviderConfigurationCommandOutput>;
  updateIdentityProviderConfiguration(
    args: UpdateIdentityProviderConfigurationCommandInput,
    cb: (
      err: any,
      data?: UpdateIdentityProviderConfigurationCommandOutput
    ) => void
  ): void;
  updateIdentityProviderConfiguration(
    args: UpdateIdentityProviderConfigurationCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: UpdateIdentityProviderConfigurationCommandOutput
    ) => void
  ): void;
}
export declare class WorkLink extends WorkLinkClient implements WorkLink {}
