import {
  HostHeaderInputConfig,
  HostHeaderResolvedConfig,
} from "@aws-sdk/middleware-host-header";
import {
  UserAgentInputConfig,
  UserAgentResolvedConfig,
} from "@aws-sdk/middleware-user-agent";
import {
  RegionInputConfig,
  RegionResolvedConfig,
} from "@smithy/config-resolver";
import {
  EndpointInputConfig,
  EndpointResolvedConfig,
} from "@smithy/middleware-endpoint";
import {
  RetryInputConfig,
  RetryResolvedConfig,
} from "@smithy/middleware-retry";
import { HttpHandlerUserInput as __HttpHandlerUserInput } from "@smithy/protocol-http";
import {
  Client as __Client,
  DefaultsMode as __DefaultsMode,
  SmithyConfiguration as __SmithyConfiguration,
  SmithyResolvedConfiguration as __SmithyResolvedConfiguration,
} from "@smithy/smithy-client";
import {
  AwsCredentialIdentityProvider,
  BodyLengthCalculator as __BodyLengthCalculator,
  CheckOptionalClientConfig as __CheckOptionalClientConfig,
  ChecksumConstructor as __ChecksumConstructor,
  Decoder as __Decoder,
  Encoder as __Encoder,
  HashConstructor as __HashConstructor,
  HttpHandlerOptions as __HttpHandlerOptions,
  Logger as __Logger,
  Provider as __Provider,
  Provider,
  StreamCollector as __StreamCollector,
  UrlParser as __UrlParser,
  UserAgent as __UserAgent,
} from "@smithy/types";
import {
  HttpAuthSchemeInputConfig,
  HttpAuthSchemeResolvedConfig,
} from "./auth/httpAuthSchemeProvider";
import {
  AssociateDomainCommandInput,
  AssociateDomainCommandOutput,
} from "./commands/AssociateDomainCommand";
import {
  AssociateWebsiteAuthorizationProviderCommandInput,
  AssociateWebsiteAuthorizationProviderCommandOutput,
} from "./commands/AssociateWebsiteAuthorizationProviderCommand";
import {
  AssociateWebsiteCertificateAuthorityCommandInput,
  AssociateWebsiteCertificateAuthorityCommandOutput,
} from "./commands/AssociateWebsiteCertificateAuthorityCommand";
import {
  CreateFleetCommandInput,
  CreateFleetCommandOutput,
} from "./commands/CreateFleetCommand";
import {
  DeleteFleetCommandInput,
  DeleteFleetCommandOutput,
} from "./commands/DeleteFleetCommand";
import {
  DescribeAuditStreamConfigurationCommandInput,
  DescribeAuditStreamConfigurationCommandOutput,
} from "./commands/DescribeAuditStreamConfigurationCommand";
import {
  DescribeCompanyNetworkConfigurationCommandInput,
  DescribeCompanyNetworkConfigurationCommandOutput,
} from "./commands/DescribeCompanyNetworkConfigurationCommand";
import {
  DescribeDeviceCommandInput,
  DescribeDeviceCommandOutput,
} from "./commands/DescribeDeviceCommand";
import {
  DescribeDevicePolicyConfigurationCommandInput,
  DescribeDevicePolicyConfigurationCommandOutput,
} from "./commands/DescribeDevicePolicyConfigurationCommand";
import {
  DescribeDomainCommandInput,
  DescribeDomainCommandOutput,
} from "./commands/DescribeDomainCommand";
import {
  DescribeFleetMetadataCommandInput,
  DescribeFleetMetadataCommandOutput,
} from "./commands/DescribeFleetMetadataCommand";
import {
  DescribeIdentityProviderConfigurationCommandInput,
  DescribeIdentityProviderConfigurationCommandOutput,
} from "./commands/DescribeIdentityProviderConfigurationCommand";
import {
  DescribeWebsiteCertificateAuthorityCommandInput,
  DescribeWebsiteCertificateAuthorityCommandOutput,
} from "./commands/DescribeWebsiteCertificateAuthorityCommand";
import {
  DisassociateDomainCommandInput,
  DisassociateDomainCommandOutput,
} from "./commands/DisassociateDomainCommand";
import {
  DisassociateWebsiteAuthorizationProviderCommandInput,
  DisassociateWebsiteAuthorizationProviderCommandOutput,
} from "./commands/DisassociateWebsiteAuthorizationProviderCommand";
import {
  DisassociateWebsiteCertificateAuthorityCommandInput,
  DisassociateWebsiteCertificateAuthorityCommandOutput,
} from "./commands/DisassociateWebsiteCertificateAuthorityCommand";
import {
  ListDevicesCommandInput,
  ListDevicesCommandOutput,
} from "./commands/ListDevicesCommand";
import {
  ListDomainsCommandInput,
  ListDomainsCommandOutput,
} from "./commands/ListDomainsCommand";
import {
  ListFleetsCommandInput,
  ListFleetsCommandOutput,
} from "./commands/ListFleetsCommand";
import {
  ListTagsForResourceCommandInput,
  ListTagsForResourceCommandOutput,
} from "./commands/ListTagsForResourceCommand";
import {
  ListWebsiteAuthorizationProvidersCommandInput,
  ListWebsiteAuthorizationProvidersCommandOutput,
} from "./commands/ListWebsiteAuthorizationProvidersCommand";
import {
  ListWebsiteCertificateAuthoritiesCommandInput,
  ListWebsiteCertificateAuthoritiesCommandOutput,
} from "./commands/ListWebsiteCertificateAuthoritiesCommand";
import {
  RestoreDomainAccessCommandInput,
  RestoreDomainAccessCommandOutput,
} from "./commands/RestoreDomainAccessCommand";
import {
  RevokeDomainAccessCommandInput,
  RevokeDomainAccessCommandOutput,
} from "./commands/RevokeDomainAccessCommand";
import {
  SignOutUserCommandInput,
  SignOutUserCommandOutput,
} from "./commands/SignOutUserCommand";
import {
  TagResourceCommandInput,
  TagResourceCommandOutput,
} from "./commands/TagResourceCommand";
import {
  UntagResourceCommandInput,
  UntagResourceCommandOutput,
} from "./commands/UntagResourceCommand";
import {
  UpdateAuditStreamConfigurationCommandInput,
  UpdateAuditStreamConfigurationCommandOutput,
} from "./commands/UpdateAuditStreamConfigurationCommand";
import {
  UpdateCompanyNetworkConfigurationCommandInput,
  UpdateCompanyNetworkConfigurationCommandOutput,
} from "./commands/UpdateCompanyNetworkConfigurationCommand";
import {
  UpdateDevicePolicyConfigurationCommandInput,
  UpdateDevicePolicyConfigurationCommandOutput,
} from "./commands/UpdateDevicePolicyConfigurationCommand";
import {
  UpdateDomainMetadataCommandInput,
  UpdateDomainMetadataCommandOutput,
} from "./commands/UpdateDomainMetadataCommand";
import {
  UpdateFleetMetadataCommandInput,
  UpdateFleetMetadataCommandOutput,
} from "./commands/UpdateFleetMetadataCommand";
import {
  UpdateIdentityProviderConfigurationCommandInput,
  UpdateIdentityProviderConfigurationCommandOutput,
} from "./commands/UpdateIdentityProviderConfigurationCommand";
import {
  ClientInputEndpointParameters,
  ClientResolvedEndpointParameters,
  EndpointParameters,
} from "./endpoint/EndpointParameters";
import { RuntimeExtension, RuntimeExtensionsConfig } from "./runtimeExtensions";
export { __Client };
export type ServiceInputTypes =
  | AssociateDomainCommandInput
  | AssociateWebsiteAuthorizationProviderCommandInput
  | AssociateWebsiteCertificateAuthorityCommandInput
  | CreateFleetCommandInput
  | DeleteFleetCommandInput
  | DescribeAuditStreamConfigurationCommandInput
  | DescribeCompanyNetworkConfigurationCommandInput
  | DescribeDeviceCommandInput
  | DescribeDevicePolicyConfigurationCommandInput
  | DescribeDomainCommandInput
  | DescribeFleetMetadataCommandInput
  | DescribeIdentityProviderConfigurationCommandInput
  | DescribeWebsiteCertificateAuthorityCommandInput
  | DisassociateDomainCommandInput
  | DisassociateWebsiteAuthorizationProviderCommandInput
  | DisassociateWebsiteCertificateAuthorityCommandInput
  | ListDevicesCommandInput
  | ListDomainsCommandInput
  | ListFleetsCommandInput
  | ListTagsForResourceCommandInput
  | ListWebsiteAuthorizationProvidersCommandInput
  | ListWebsiteCertificateAuthoritiesCommandInput
  | RestoreDomainAccessCommandInput
  | RevokeDomainAccessCommandInput
  | SignOutUserCommandInput
  | TagResourceCommandInput
  | UntagResourceCommandInput
  | UpdateAuditStreamConfigurationCommandInput
  | UpdateCompanyNetworkConfigurationCommandInput
  | UpdateDevicePolicyConfigurationCommandInput
  | UpdateDomainMetadataCommandInput
  | UpdateFleetMetadataCommandInput
  | UpdateIdentityProviderConfigurationCommandInput;
export type ServiceOutputTypes =
  | AssociateDomainCommandOutput
  | AssociateWebsiteAuthorizationProviderCommandOutput
  | AssociateWebsiteCertificateAuthorityCommandOutput
  | CreateFleetCommandOutput
  | DeleteFleetCommandOutput
  | DescribeAuditStreamConfigurationCommandOutput
  | DescribeCompanyNetworkConfigurationCommandOutput
  | DescribeDeviceCommandOutput
  | DescribeDevicePolicyConfigurationCommandOutput
  | DescribeDomainCommandOutput
  | DescribeFleetMetadataCommandOutput
  | DescribeIdentityProviderConfigurationCommandOutput
  | DescribeWebsiteCertificateAuthorityCommandOutput
  | DisassociateDomainCommandOutput
  | DisassociateWebsiteAuthorizationProviderCommandOutput
  | DisassociateWebsiteCertificateAuthorityCommandOutput
  | ListDevicesCommandOutput
  | ListDomainsCommandOutput
  | ListFleetsCommandOutput
  | ListTagsForResourceCommandOutput
  | ListWebsiteAuthorizationProvidersCommandOutput
  | ListWebsiteCertificateAuthoritiesCommandOutput
  | RestoreDomainAccessCommandOutput
  | RevokeDomainAccessCommandOutput
  | SignOutUserCommandOutput
  | TagResourceCommandOutput
  | UntagResourceCommandOutput
  | UpdateAuditStreamConfigurationCommandOutput
  | UpdateCompanyNetworkConfigurationCommandOutput
  | UpdateDevicePolicyConfigurationCommandOutput
  | UpdateDomainMetadataCommandOutput
  | UpdateFleetMetadataCommandOutput
  | UpdateIdentityProviderConfigurationCommandOutput;
export interface ClientDefaults
  extends Partial<__SmithyConfiguration<__HttpHandlerOptions>> {
  requestHandler?: __HttpHandlerUserInput;
  sha256?: __ChecksumConstructor | __HashConstructor;
  urlParser?: __UrlParser;
  bodyLengthChecker?: __BodyLengthCalculator;
  streamCollector?: __StreamCollector;
  base64Decoder?: __Decoder;
  base64Encoder?: __Encoder;
  utf8Decoder?: __Decoder;
  utf8Encoder?: __Encoder;
  runtime?: string;
  disableHostPrefix?: boolean;
  serviceId?: string;
  useDualstackEndpoint?: boolean | __Provider<boolean>;
  useFipsEndpoint?: boolean | __Provider<boolean>;
  defaultUserAgentProvider?: Provider<__UserAgent>;
  region?: string | __Provider<string>;
  credentialDefaultProvider?: (input: any) => AwsCredentialIdentityProvider;
  maxAttempts?: number | __Provider<number>;
  retryMode?: string | __Provider<string>;
  logger?: __Logger;
  extensions?: RuntimeExtension[];
  defaultsMode?: __DefaultsMode | __Provider<__DefaultsMode>;
}
export type WorkLinkClientConfigType = Partial<
  __SmithyConfiguration<__HttpHandlerOptions>
> &
  ClientDefaults &
  RegionInputConfig &
  EndpointInputConfig<EndpointParameters> &
  RetryInputConfig &
  HostHeaderInputConfig &
  UserAgentInputConfig &
  HttpAuthSchemeInputConfig &
  ClientInputEndpointParameters;
export interface WorkLinkClientConfig extends WorkLinkClientConfigType {}
export type WorkLinkClientResolvedConfigType =
  __SmithyResolvedConfiguration<__HttpHandlerOptions> &
    Required<ClientDefaults> &
    RuntimeExtensionsConfig &
    RegionResolvedConfig &
    EndpointResolvedConfig<EndpointParameters> &
    RetryResolvedConfig &
    HostHeaderResolvedConfig &
    UserAgentResolvedConfig &
    HttpAuthSchemeResolvedConfig &
    ClientResolvedEndpointParameters;
export interface WorkLinkClientResolvedConfig
  extends WorkLinkClientResolvedConfigType {}
export declare class WorkLinkClient extends __Client<
  __HttpHandlerOptions,
  ServiceInputTypes,
  ServiceOutputTypes,
  WorkLinkClientResolvedConfig
> {
  readonly config: WorkLinkClientResolvedConfig;
  constructor(
    ...[configuration]: __CheckOptionalClientConfig<WorkLinkClientConfig>
  );
  destroy(): void;
  private getDefaultHttpAuthSchemeParametersProvider;
  private getIdentityProviderConfigProvider;
}
