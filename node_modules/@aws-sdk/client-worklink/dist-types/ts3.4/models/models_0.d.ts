import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { WorkLinkServiceException as __BaseException } from "./WorkLinkServiceException";
export interface AssociateDomainRequest {
  FleetArn: string | undefined;
  DomainName: string | undefined;
  DisplayName?: string;
  AcmCertificateArn: string | undefined;
}
export interface AssociateDomainResponse {}
export declare class InternalServerErrorException extends __BaseException {
  readonly name: "InternalServerErrorException";
  readonly $fault: "server";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<InternalServerErrorException, __BaseException>
  );
}
export declare class InvalidRequestException extends __BaseException {
  readonly name: "InvalidRequestException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<InvalidRequestException, __BaseException>
  );
}
export declare class ResourceAlreadyExistsException extends __BaseException {
  readonly name: "ResourceAlreadyExistsException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ResourceAlreadyExistsException, __BaseException>
  );
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export declare class TooManyRequestsException extends __BaseException {
  readonly name: "TooManyRequestsException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<TooManyRequestsException, __BaseException>
  );
}
export declare class UnauthorizedException extends __BaseException {
  readonly name: "UnauthorizedException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<UnauthorizedException, __BaseException>
  );
}
export declare const AuthorizationProviderType: {
  readonly SAML: "SAML";
};
export type AuthorizationProviderType =
  (typeof AuthorizationProviderType)[keyof typeof AuthorizationProviderType];
export interface AssociateWebsiteAuthorizationProviderRequest {
  FleetArn: string | undefined;
  AuthorizationProviderType: AuthorizationProviderType | undefined;
  DomainName?: string;
}
export interface AssociateWebsiteAuthorizationProviderResponse {
  AuthorizationProviderId?: string;
}
export interface AssociateWebsiteCertificateAuthorityRequest {
  FleetArn: string | undefined;
  Certificate: string | undefined;
  DisplayName?: string;
}
export interface AssociateWebsiteCertificateAuthorityResponse {
  WebsiteCaId?: string;
}
export interface CreateFleetRequest {
  FleetName: string | undefined;
  DisplayName?: string;
  OptimizeForEndUserLocation?: boolean;
  Tags?: Record<string, string>;
}
export interface CreateFleetResponse {
  FleetArn?: string;
}
export interface DeleteFleetRequest {
  FleetArn: string | undefined;
}
export interface DeleteFleetResponse {}
export interface DescribeAuditStreamConfigurationRequest {
  FleetArn: string | undefined;
}
export interface DescribeAuditStreamConfigurationResponse {
  AuditStreamArn?: string;
}
export interface DescribeCompanyNetworkConfigurationRequest {
  FleetArn: string | undefined;
}
export interface DescribeCompanyNetworkConfigurationResponse {
  VpcId?: string;
  SubnetIds?: string[];
  SecurityGroupIds?: string[];
}
export interface DescribeDeviceRequest {
  FleetArn: string | undefined;
  DeviceId: string | undefined;
}
export declare const DeviceStatus: {
  readonly ACTIVE: "ACTIVE";
  readonly SIGNED_OUT: "SIGNED_OUT";
};
export type DeviceStatus = (typeof DeviceStatus)[keyof typeof DeviceStatus];
export interface DescribeDeviceResponse {
  Status?: DeviceStatus;
  Model?: string;
  Manufacturer?: string;
  OperatingSystem?: string;
  OperatingSystemVersion?: string;
  PatchLevel?: string;
  FirstAccessedTime?: Date;
  LastAccessedTime?: Date;
  Username?: string;
}
export interface DescribeDevicePolicyConfigurationRequest {
  FleetArn: string | undefined;
}
export interface DescribeDevicePolicyConfigurationResponse {
  DeviceCaCertificate?: string;
}
export interface DescribeDomainRequest {
  FleetArn: string | undefined;
  DomainName: string | undefined;
}
export declare const DomainStatus: {
  readonly ACTIVE: "ACTIVE";
  readonly ASSOCIATING: "ASSOCIATING";
  readonly DISASSOCIATED: "DISASSOCIATED";
  readonly DISASSOCIATING: "DISASSOCIATING";
  readonly FAILED_TO_ASSOCIATE: "FAILED_TO_ASSOCIATE";
  readonly FAILED_TO_DISASSOCIATE: "FAILED_TO_DISASSOCIATE";
  readonly INACTIVE: "INACTIVE";
  readonly PENDING_VALIDATION: "PENDING_VALIDATION";
};
export type DomainStatus = (typeof DomainStatus)[keyof typeof DomainStatus];
export interface DescribeDomainResponse {
  DomainName?: string;
  DisplayName?: string;
  CreatedTime?: Date;
  DomainStatus?: DomainStatus;
  AcmCertificateArn?: string;
}
export interface DescribeFleetMetadataRequest {
  FleetArn: string | undefined;
}
export declare const FleetStatus: {
  readonly ACTIVE: "ACTIVE";
  readonly CREATING: "CREATING";
  readonly DELETED: "DELETED";
  readonly DELETING: "DELETING";
  readonly FAILED_TO_CREATE: "FAILED_TO_CREATE";
  readonly FAILED_TO_DELETE: "FAILED_TO_DELETE";
};
export type FleetStatus = (typeof FleetStatus)[keyof typeof FleetStatus];
export interface DescribeFleetMetadataResponse {
  CreatedTime?: Date;
  LastUpdatedTime?: Date;
  FleetName?: string;
  DisplayName?: string;
  OptimizeForEndUserLocation?: boolean;
  CompanyCode?: string;
  FleetStatus?: FleetStatus;
  Tags?: Record<string, string>;
}
export interface DescribeIdentityProviderConfigurationRequest {
  FleetArn: string | undefined;
}
export declare const IdentityProviderType: {
  readonly SAML: "SAML";
};
export type IdentityProviderType =
  (typeof IdentityProviderType)[keyof typeof IdentityProviderType];
export interface DescribeIdentityProviderConfigurationResponse {
  IdentityProviderType?: IdentityProviderType;
  ServiceProviderSamlMetadata?: string;
  IdentityProviderSamlMetadata?: string;
}
export interface DescribeWebsiteCertificateAuthorityRequest {
  FleetArn: string | undefined;
  WebsiteCaId: string | undefined;
}
export interface DescribeWebsiteCertificateAuthorityResponse {
  Certificate?: string;
  CreatedTime?: Date;
  DisplayName?: string;
}
export interface DeviceSummary {
  DeviceId?: string;
  DeviceStatus?: DeviceStatus;
}
export interface DisassociateDomainRequest {
  FleetArn: string | undefined;
  DomainName: string | undefined;
}
export interface DisassociateDomainResponse {}
export interface DisassociateWebsiteAuthorizationProviderRequest {
  FleetArn: string | undefined;
  AuthorizationProviderId: string | undefined;
}
export interface DisassociateWebsiteAuthorizationProviderResponse {}
export interface DisassociateWebsiteCertificateAuthorityRequest {
  FleetArn: string | undefined;
  WebsiteCaId: string | undefined;
}
export interface DisassociateWebsiteCertificateAuthorityResponse {}
export interface DomainSummary {
  DomainName: string | undefined;
  DisplayName?: string;
  CreatedTime: Date | undefined;
  DomainStatus: DomainStatus | undefined;
}
export interface FleetSummary {
  FleetArn?: string;
  CreatedTime?: Date;
  LastUpdatedTime?: Date;
  FleetName?: string;
  DisplayName?: string;
  CompanyCode?: string;
  FleetStatus?: FleetStatus;
  Tags?: Record<string, string>;
}
export interface ListDevicesRequest {
  FleetArn: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListDevicesResponse {
  Devices?: DeviceSummary[];
  NextToken?: string;
}
export interface ListDomainsRequest {
  FleetArn: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListDomainsResponse {
  Domains?: DomainSummary[];
  NextToken?: string;
}
export interface ListFleetsRequest {
  NextToken?: string;
  MaxResults?: number;
}
export interface ListFleetsResponse {
  FleetSummaryList?: FleetSummary[];
  NextToken?: string;
}
export interface ListTagsForResourceRequest {
  ResourceArn: string | undefined;
}
export interface ListTagsForResourceResponse {
  Tags?: Record<string, string>;
}
export interface ListWebsiteAuthorizationProvidersRequest {
  FleetArn: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface WebsiteAuthorizationProviderSummary {
  AuthorizationProviderId?: string;
  AuthorizationProviderType: AuthorizationProviderType | undefined;
  DomainName?: string;
  CreatedTime?: Date;
}
export interface ListWebsiteAuthorizationProvidersResponse {
  WebsiteAuthorizationProviders?: WebsiteAuthorizationProviderSummary[];
  NextToken?: string;
}
export interface ListWebsiteCertificateAuthoritiesRequest {
  FleetArn: string | undefined;
  MaxResults?: number;
  NextToken?: string;
}
export interface WebsiteCaSummary {
  WebsiteCaId?: string;
  CreatedTime?: Date;
  DisplayName?: string;
}
export interface ListWebsiteCertificateAuthoritiesResponse {
  WebsiteCertificateAuthorities?: WebsiteCaSummary[];
  NextToken?: string;
}
export interface RestoreDomainAccessRequest {
  FleetArn: string | undefined;
  DomainName: string | undefined;
}
export interface RestoreDomainAccessResponse {}
export interface RevokeDomainAccessRequest {
  FleetArn: string | undefined;
  DomainName: string | undefined;
}
export interface RevokeDomainAccessResponse {}
export interface SignOutUserRequest {
  FleetArn: string | undefined;
  Username: string | undefined;
}
export interface SignOutUserResponse {}
export interface TagResourceRequest {
  ResourceArn: string | undefined;
  Tags: Record<string, string> | undefined;
}
export interface TagResourceResponse {}
export interface UntagResourceRequest {
  ResourceArn: string | undefined;
  TagKeys: string[] | undefined;
}
export interface UntagResourceResponse {}
export interface UpdateAuditStreamConfigurationRequest {
  FleetArn: string | undefined;
  AuditStreamArn?: string;
}
export interface UpdateAuditStreamConfigurationResponse {}
export interface UpdateCompanyNetworkConfigurationRequest {
  FleetArn: string | undefined;
  VpcId: string | undefined;
  SubnetIds: string[] | undefined;
  SecurityGroupIds: string[] | undefined;
}
export interface UpdateCompanyNetworkConfigurationResponse {}
export interface UpdateDevicePolicyConfigurationRequest {
  FleetArn: string | undefined;
  DeviceCaCertificate?: string;
}
export interface UpdateDevicePolicyConfigurationResponse {}
export interface UpdateDomainMetadataRequest {
  FleetArn: string | undefined;
  DomainName: string | undefined;
  DisplayName?: string;
}
export interface UpdateDomainMetadataResponse {}
export interface UpdateFleetMetadataRequest {
  FleetArn: string | undefined;
  DisplayName?: string;
  OptimizeForEndUserLocation?: boolean;
}
export interface UpdateFleetMetadataResponse {}
export interface UpdateIdentityProviderConfigurationRequest {
  FleetArn: string | undefined;
  IdentityProviderType: IdentityProviderType | undefined;
  IdentityProviderSamlMetadata?: string;
}
export interface UpdateIdentityProviderConfigurationResponse {}
