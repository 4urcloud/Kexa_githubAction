import { WorkLinkServiceException as __BaseException } from "./WorkLinkServiceException";
export class InternalServerErrorException extends __BaseException {
    constructor(opts) {
        super({
            name: "InternalServerErrorException",
            $fault: "server",
            ...opts,
        });
        this.name = "InternalServerErrorException";
        this.$fault = "server";
        Object.setPrototypeOf(this, InternalServerErrorException.prototype);
        this.Message = opts.Message;
    }
}
export class InvalidRequestException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidRequestException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidRequestException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidRequestException.prototype);
        this.Message = opts.Message;
    }
}
export class ResourceAlreadyExistsException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceAlreadyExistsException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceAlreadyExistsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceAlreadyExistsException.prototype);
        this.Message = opts.Message;
    }
}
export class ResourceNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
        this.Message = opts.Message;
    }
}
export class TooManyRequestsException extends __BaseException {
    constructor(opts) {
        super({
            name: "TooManyRequestsException",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyRequestsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyRequestsException.prototype);
        this.Message = opts.Message;
    }
}
export class UnauthorizedException extends __BaseException {
    constructor(opts) {
        super({
            name: "UnauthorizedException",
            $fault: "client",
            ...opts,
        });
        this.name = "UnauthorizedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, UnauthorizedException.prototype);
        this.Message = opts.Message;
    }
}
export const AuthorizationProviderType = {
    SAML: "SAML",
};
export const DeviceStatus = {
    ACTIVE: "ACTIVE",
    SIGNED_OUT: "SIGNED_OUT",
};
export const DomainStatus = {
    ACTIVE: "ACTIVE",
    ASSOCIATING: "ASSOCIATING",
    DISASSOCIATED: "DISASSOCIATED",
    DISASSOCIATING: "DISASSOCIATING",
    FAILED_TO_ASSOCIATE: "FAILED_TO_ASSOCIATE",
    FAILED_TO_DISASSOCIATE: "FAILED_TO_DISASSOCIATE",
    INACTIVE: "INACTIVE",
    PENDING_VALIDATION: "PENDING_VALIDATION",
};
export const FleetStatus = {
    ACTIVE: "ACTIVE",
    CREATING: "CREATING",
    DELETED: "DELETED",
    DELETING: "DELETING",
    FAILED_TO_CREATE: "FAILED_TO_CREATE",
    FAILED_TO_DELETE: "FAILED_TO_DELETE",
};
export const IdentityProviderType = {
    SAML: "SAML",
};
