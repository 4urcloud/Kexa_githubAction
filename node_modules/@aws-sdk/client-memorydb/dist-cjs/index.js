"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  ACLAlreadyExistsFault: () => ACLAlreadyExistsFault,
  ACLNotFoundFault: () => ACLNotFoundFault,
  ACLQuotaExceededFault: () => ACLQuotaExceededFault,
  APICallRateForCustomerExceededFault: () => APICallRateForCustomerExceededFault,
  AZStatus: () => AZStatus,
  AuthenticationType: () => AuthenticationType,
  BatchUpdateClusterCommand: () => BatchUpdateClusterCommand,
  ClusterAlreadyExistsFault: () => ClusterAlreadyExistsFault,
  ClusterNotFoundFault: () => ClusterNotFoundFault,
  ClusterQuotaForCustomerExceededFault: () => ClusterQuotaForCustomerExceededFault,
  CopySnapshotCommand: () => CopySnapshotCommand,
  CreateACLCommand: () => CreateACLCommand,
  CreateClusterCommand: () => CreateClusterCommand,
  CreateParameterGroupCommand: () => CreateParameterGroupCommand,
  CreateSnapshotCommand: () => CreateSnapshotCommand,
  CreateSubnetGroupCommand: () => CreateSubnetGroupCommand,
  CreateUserCommand: () => CreateUserCommand,
  DataTieringStatus: () => DataTieringStatus,
  DefaultUserRequired: () => DefaultUserRequired,
  DeleteACLCommand: () => DeleteACLCommand,
  DeleteClusterCommand: () => DeleteClusterCommand,
  DeleteParameterGroupCommand: () => DeleteParameterGroupCommand,
  DeleteSnapshotCommand: () => DeleteSnapshotCommand,
  DeleteSubnetGroupCommand: () => DeleteSubnetGroupCommand,
  DeleteUserCommand: () => DeleteUserCommand,
  DescribeACLsCommand: () => DescribeACLsCommand,
  DescribeClustersCommand: () => DescribeClustersCommand,
  DescribeEngineVersionsCommand: () => DescribeEngineVersionsCommand,
  DescribeEventsCommand: () => DescribeEventsCommand,
  DescribeParameterGroupsCommand: () => DescribeParameterGroupsCommand,
  DescribeParametersCommand: () => DescribeParametersCommand,
  DescribeReservedNodesCommand: () => DescribeReservedNodesCommand,
  DescribeReservedNodesOfferingsCommand: () => DescribeReservedNodesOfferingsCommand,
  DescribeServiceUpdatesCommand: () => DescribeServiceUpdatesCommand,
  DescribeSnapshotsCommand: () => DescribeSnapshotsCommand,
  DescribeSubnetGroupsCommand: () => DescribeSubnetGroupsCommand,
  DescribeUsersCommand: () => DescribeUsersCommand,
  DuplicateUserNameFault: () => DuplicateUserNameFault,
  FailoverShardCommand: () => FailoverShardCommand,
  InputAuthenticationType: () => InputAuthenticationType,
  InsufficientClusterCapacityFault: () => InsufficientClusterCapacityFault,
  InvalidACLStateFault: () => InvalidACLStateFault,
  InvalidARNFault: () => InvalidARNFault,
  InvalidClusterStateFault: () => InvalidClusterStateFault,
  InvalidCredentialsException: () => InvalidCredentialsException,
  InvalidKMSKeyFault: () => InvalidKMSKeyFault,
  InvalidNodeStateFault: () => InvalidNodeStateFault,
  InvalidParameterCombinationException: () => InvalidParameterCombinationException,
  InvalidParameterGroupStateFault: () => InvalidParameterGroupStateFault,
  InvalidParameterValueException: () => InvalidParameterValueException,
  InvalidSnapshotStateFault: () => InvalidSnapshotStateFault,
  InvalidSubnet: () => InvalidSubnet,
  InvalidUserStateFault: () => InvalidUserStateFault,
  InvalidVPCNetworkStateFault: () => InvalidVPCNetworkStateFault,
  ListAllowedNodeTypeUpdatesCommand: () => ListAllowedNodeTypeUpdatesCommand,
  ListTagsCommand: () => ListTagsCommand,
  MemoryDB: () => MemoryDB,
  MemoryDBClient: () => MemoryDBClient,
  MemoryDBServiceException: () => MemoryDBServiceException,
  NoOperationFault: () => NoOperationFault,
  NodeQuotaForClusterExceededFault: () => NodeQuotaForClusterExceededFault,
  NodeQuotaForCustomerExceededFault: () => NodeQuotaForCustomerExceededFault,
  ParameterGroupAlreadyExistsFault: () => ParameterGroupAlreadyExistsFault,
  ParameterGroupNotFoundFault: () => ParameterGroupNotFoundFault,
  ParameterGroupQuotaExceededFault: () => ParameterGroupQuotaExceededFault,
  PurchaseReservedNodesOfferingCommand: () => PurchaseReservedNodesOfferingCommand,
  ReservedNodeAlreadyExistsFault: () => ReservedNodeAlreadyExistsFault,
  ReservedNodeNotFoundFault: () => ReservedNodeNotFoundFault,
  ReservedNodeQuotaExceededFault: () => ReservedNodeQuotaExceededFault,
  ReservedNodesOfferingNotFoundFault: () => ReservedNodesOfferingNotFoundFault,
  ResetParameterGroupCommand: () => ResetParameterGroupCommand,
  ServiceLinkedRoleNotFoundFault: () => ServiceLinkedRoleNotFoundFault,
  ServiceUpdateNotFoundFault: () => ServiceUpdateNotFoundFault,
  ServiceUpdateStatus: () => ServiceUpdateStatus,
  ServiceUpdateType: () => ServiceUpdateType,
  ShardNotFoundFault: () => ShardNotFoundFault,
  ShardsPerClusterQuotaExceededFault: () => ShardsPerClusterQuotaExceededFault,
  SnapshotAlreadyExistsFault: () => SnapshotAlreadyExistsFault,
  SnapshotNotFoundFault: () => SnapshotNotFoundFault,
  SnapshotQuotaExceededFault: () => SnapshotQuotaExceededFault,
  SourceType: () => SourceType,
  SubnetGroupAlreadyExistsFault: () => SubnetGroupAlreadyExistsFault,
  SubnetGroupInUseFault: () => SubnetGroupInUseFault,
  SubnetGroupNotFoundFault: () => SubnetGroupNotFoundFault,
  SubnetGroupQuotaExceededFault: () => SubnetGroupQuotaExceededFault,
  SubnetInUse: () => SubnetInUse,
  SubnetNotAllowedFault: () => SubnetNotAllowedFault,
  SubnetQuotaExceededFault: () => SubnetQuotaExceededFault,
  TagNotFoundFault: () => TagNotFoundFault,
  TagQuotaPerResourceExceeded: () => TagQuotaPerResourceExceeded,
  TagResourceCommand: () => TagResourceCommand,
  TestFailoverNotAvailableFault: () => TestFailoverNotAvailableFault,
  UntagResourceCommand: () => UntagResourceCommand,
  UpdateACLCommand: () => UpdateACLCommand,
  UpdateClusterCommand: () => UpdateClusterCommand,
  UpdateParameterGroupCommand: () => UpdateParameterGroupCommand,
  UpdateSubnetGroupCommand: () => UpdateSubnetGroupCommand,
  UpdateUserCommand: () => UpdateUserCommand,
  UserAlreadyExistsFault: () => UserAlreadyExistsFault,
  UserNotFoundFault: () => UserNotFoundFault,
  UserQuotaExceededFault: () => UserQuotaExceededFault,
  __Client: () => import_smithy_client.Client,
  paginateDescribeACLs: () => paginateDescribeACLs,
  paginateDescribeClusters: () => paginateDescribeClusters,
  paginateDescribeEngineVersions: () => paginateDescribeEngineVersions,
  paginateDescribeEvents: () => paginateDescribeEvents,
  paginateDescribeParameterGroups: () => paginateDescribeParameterGroups,
  paginateDescribeParameters: () => paginateDescribeParameters,
  paginateDescribeReservedNodes: () => paginateDescribeReservedNodes,
  paginateDescribeReservedNodesOfferings: () => paginateDescribeReservedNodesOfferings,
  paginateDescribeServiceUpdates: () => paginateDescribeServiceUpdates,
  paginateDescribeSnapshots: () => paginateDescribeSnapshots,
  paginateDescribeSubnetGroups: () => paginateDescribeSubnetGroups,
  paginateDescribeUsers: () => paginateDescribeUsers
});
module.exports = __toCommonJS(src_exports);

// src/MemoryDBClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return {
    ...options,
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "memorydb"
  };
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/MemoryDBClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var asPartial = /* @__PURE__ */ __name((t) => t, "asPartial");
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = {
    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),
    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
  };
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return {
    ...runtimeConfig,
    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
  };
}, "resolveRuntimeExtensions");

// src/MemoryDBClient.ts
var _MemoryDBClient = class _MemoryDBClient extends import_smithy_client.Client {
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_config_resolver.resolveRegionConfig)(_config_1);
    const _config_3 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_2);
    const _config_4 = (0, import_middleware_retry.resolveRetryConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, (configuration == null ? void 0 : configuration.extensions) || []);
    super(_config_8);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),
        identityProviderConfigProvider: this.getIdentityProviderConfigProvider()
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
  getDefaultHttpAuthSchemeParametersProvider() {
    return import_httpAuthSchemeProvider.defaultMemoryDBHttpAuthSchemeParametersProvider;
  }
  getIdentityProviderConfigProvider() {
    return async (config) => new import_core.DefaultIdentityProviderConfig({
      "aws.auth#sigv4": config.credentials
    });
  }
};
__name(_MemoryDBClient, "MemoryDBClient");
var MemoryDBClient = _MemoryDBClient;

// src/MemoryDB.ts


// src/commands/BatchUpdateClusterCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");

var import_types = require("@smithy/types");

// src/protocols/Aws_json1_1.ts



// src/models/MemoryDBServiceException.ts

var _MemoryDBServiceException = class _MemoryDBServiceException extends import_smithy_client.ServiceException {
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _MemoryDBServiceException.prototype);
  }
};
__name(_MemoryDBServiceException, "MemoryDBServiceException");
var MemoryDBServiceException = _MemoryDBServiceException;

// src/models/models_0.ts
var _ACLAlreadyExistsFault = class _ACLAlreadyExistsFault extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ACLAlreadyExistsFault",
      $fault: "client",
      ...opts
    });
    this.name = "ACLAlreadyExistsFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ACLAlreadyExistsFault.prototype);
  }
};
__name(_ACLAlreadyExistsFault, "ACLAlreadyExistsFault");
var ACLAlreadyExistsFault = _ACLAlreadyExistsFault;
var _ACLNotFoundFault = class _ACLNotFoundFault extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ACLNotFoundFault",
      $fault: "client",
      ...opts
    });
    this.name = "ACLNotFoundFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ACLNotFoundFault.prototype);
  }
};
__name(_ACLNotFoundFault, "ACLNotFoundFault");
var ACLNotFoundFault = _ACLNotFoundFault;
var _ACLQuotaExceededFault = class _ACLQuotaExceededFault extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ACLQuotaExceededFault",
      $fault: "client",
      ...opts
    });
    this.name = "ACLQuotaExceededFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ACLQuotaExceededFault.prototype);
  }
};
__name(_ACLQuotaExceededFault, "ACLQuotaExceededFault");
var ACLQuotaExceededFault = _ACLQuotaExceededFault;
var AZStatus = {
  MultiAZ: "multiaz",
  SingleAZ: "singleaz"
};
var DataTieringStatus = {
  FALSE: "false",
  TRUE: "true"
};
var ServiceUpdateStatus = {
  COMPLETE: "complete",
  IN_PROGRESS: "in-progress",
  NOT_APPLIED: "available",
  SCHEDULED: "scheduled"
};
var _InvalidParameterValueException = class _InvalidParameterValueException extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidParameterValueException",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidParameterValueException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidParameterValueException.prototype);
  }
};
__name(_InvalidParameterValueException, "InvalidParameterValueException");
var InvalidParameterValueException = _InvalidParameterValueException;
var _ServiceUpdateNotFoundFault = class _ServiceUpdateNotFoundFault extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ServiceUpdateNotFoundFault",
      $fault: "client",
      ...opts
    });
    this.name = "ServiceUpdateNotFoundFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ServiceUpdateNotFoundFault.prototype);
  }
};
__name(_ServiceUpdateNotFoundFault, "ServiceUpdateNotFoundFault");
var ServiceUpdateNotFoundFault = _ServiceUpdateNotFoundFault;
var _InvalidParameterCombinationException = class _InvalidParameterCombinationException extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidParameterCombinationException",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidParameterCombinationException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidParameterCombinationException.prototype);
  }
};
__name(_InvalidParameterCombinationException, "InvalidParameterCombinationException");
var InvalidParameterCombinationException = _InvalidParameterCombinationException;
var _InvalidSnapshotStateFault = class _InvalidSnapshotStateFault extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidSnapshotStateFault",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidSnapshotStateFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidSnapshotStateFault.prototype);
  }
};
__name(_InvalidSnapshotStateFault, "InvalidSnapshotStateFault");
var InvalidSnapshotStateFault = _InvalidSnapshotStateFault;
var _ServiceLinkedRoleNotFoundFault = class _ServiceLinkedRoleNotFoundFault extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ServiceLinkedRoleNotFoundFault",
      $fault: "client",
      ...opts
    });
    this.name = "ServiceLinkedRoleNotFoundFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ServiceLinkedRoleNotFoundFault.prototype);
  }
};
__name(_ServiceLinkedRoleNotFoundFault, "ServiceLinkedRoleNotFoundFault");
var ServiceLinkedRoleNotFoundFault = _ServiceLinkedRoleNotFoundFault;
var _SnapshotAlreadyExistsFault = class _SnapshotAlreadyExistsFault extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "SnapshotAlreadyExistsFault",
      $fault: "client",
      ...opts
    });
    this.name = "SnapshotAlreadyExistsFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _SnapshotAlreadyExistsFault.prototype);
  }
};
__name(_SnapshotAlreadyExistsFault, "SnapshotAlreadyExistsFault");
var SnapshotAlreadyExistsFault = _SnapshotAlreadyExistsFault;
var _SnapshotNotFoundFault = class _SnapshotNotFoundFault extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "SnapshotNotFoundFault",
      $fault: "client",
      ...opts
    });
    this.name = "SnapshotNotFoundFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _SnapshotNotFoundFault.prototype);
  }
};
__name(_SnapshotNotFoundFault, "SnapshotNotFoundFault");
var SnapshotNotFoundFault = _SnapshotNotFoundFault;
var _SnapshotQuotaExceededFault = class _SnapshotQuotaExceededFault extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "SnapshotQuotaExceededFault",
      $fault: "client",
      ...opts
    });
    this.name = "SnapshotQuotaExceededFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _SnapshotQuotaExceededFault.prototype);
  }
};
__name(_SnapshotQuotaExceededFault, "SnapshotQuotaExceededFault");
var SnapshotQuotaExceededFault = _SnapshotQuotaExceededFault;
var _TagQuotaPerResourceExceeded = class _TagQuotaPerResourceExceeded extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "TagQuotaPerResourceExceeded",
      $fault: "client",
      ...opts
    });
    this.name = "TagQuotaPerResourceExceeded";
    this.$fault = "client";
    Object.setPrototypeOf(this, _TagQuotaPerResourceExceeded.prototype);
  }
};
__name(_TagQuotaPerResourceExceeded, "TagQuotaPerResourceExceeded");
var TagQuotaPerResourceExceeded = _TagQuotaPerResourceExceeded;
var _DefaultUserRequired = class _DefaultUserRequired extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "DefaultUserRequired",
      $fault: "client",
      ...opts
    });
    this.name = "DefaultUserRequired";
    this.$fault = "client";
    Object.setPrototypeOf(this, _DefaultUserRequired.prototype);
  }
};
__name(_DefaultUserRequired, "DefaultUserRequired");
var DefaultUserRequired = _DefaultUserRequired;
var _DuplicateUserNameFault = class _DuplicateUserNameFault extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "DuplicateUserNameFault",
      $fault: "client",
      ...opts
    });
    this.name = "DuplicateUserNameFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _DuplicateUserNameFault.prototype);
  }
};
__name(_DuplicateUserNameFault, "DuplicateUserNameFault");
var DuplicateUserNameFault = _DuplicateUserNameFault;
var _UserNotFoundFault = class _UserNotFoundFault extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "UserNotFoundFault",
      $fault: "client",
      ...opts
    });
    this.name = "UserNotFoundFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _UserNotFoundFault.prototype);
  }
};
__name(_UserNotFoundFault, "UserNotFoundFault");
var UserNotFoundFault = _UserNotFoundFault;
var _ClusterAlreadyExistsFault = class _ClusterAlreadyExistsFault extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ClusterAlreadyExistsFault",
      $fault: "client",
      ...opts
    });
    this.name = "ClusterAlreadyExistsFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ClusterAlreadyExistsFault.prototype);
  }
};
__name(_ClusterAlreadyExistsFault, "ClusterAlreadyExistsFault");
var ClusterAlreadyExistsFault = _ClusterAlreadyExistsFault;
var _ClusterQuotaForCustomerExceededFault = class _ClusterQuotaForCustomerExceededFault extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ClusterQuotaForCustomerExceededFault",
      $fault: "client",
      ...opts
    });
    this.name = "ClusterQuotaForCustomerExceededFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ClusterQuotaForCustomerExceededFault.prototype);
  }
};
__name(_ClusterQuotaForCustomerExceededFault, "ClusterQuotaForCustomerExceededFault");
var ClusterQuotaForCustomerExceededFault = _ClusterQuotaForCustomerExceededFault;
var _InsufficientClusterCapacityFault = class _InsufficientClusterCapacityFault extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InsufficientClusterCapacityFault",
      $fault: "client",
      ...opts
    });
    this.name = "InsufficientClusterCapacityFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InsufficientClusterCapacityFault.prototype);
  }
};
__name(_InsufficientClusterCapacityFault, "InsufficientClusterCapacityFault");
var InsufficientClusterCapacityFault = _InsufficientClusterCapacityFault;
var _InvalidACLStateFault = class _InvalidACLStateFault extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidACLStateFault",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidACLStateFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidACLStateFault.prototype);
  }
};
__name(_InvalidACLStateFault, "InvalidACLStateFault");
var InvalidACLStateFault = _InvalidACLStateFault;
var _InvalidCredentialsException = class _InvalidCredentialsException extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidCredentialsException",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidCredentialsException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidCredentialsException.prototype);
  }
};
__name(_InvalidCredentialsException, "InvalidCredentialsException");
var InvalidCredentialsException = _InvalidCredentialsException;
var _InvalidVPCNetworkStateFault = class _InvalidVPCNetworkStateFault extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidVPCNetworkStateFault",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidVPCNetworkStateFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidVPCNetworkStateFault.prototype);
  }
};
__name(_InvalidVPCNetworkStateFault, "InvalidVPCNetworkStateFault");
var InvalidVPCNetworkStateFault = _InvalidVPCNetworkStateFault;
var _NodeQuotaForClusterExceededFault = class _NodeQuotaForClusterExceededFault extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "NodeQuotaForClusterExceededFault",
      $fault: "client",
      ...opts
    });
    this.name = "NodeQuotaForClusterExceededFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _NodeQuotaForClusterExceededFault.prototype);
  }
};
__name(_NodeQuotaForClusterExceededFault, "NodeQuotaForClusterExceededFault");
var NodeQuotaForClusterExceededFault = _NodeQuotaForClusterExceededFault;
var _NodeQuotaForCustomerExceededFault = class _NodeQuotaForCustomerExceededFault extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "NodeQuotaForCustomerExceededFault",
      $fault: "client",
      ...opts
    });
    this.name = "NodeQuotaForCustomerExceededFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _NodeQuotaForCustomerExceededFault.prototype);
  }
};
__name(_NodeQuotaForCustomerExceededFault, "NodeQuotaForCustomerExceededFault");
var NodeQuotaForCustomerExceededFault = _NodeQuotaForCustomerExceededFault;
var _ParameterGroupNotFoundFault = class _ParameterGroupNotFoundFault extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ParameterGroupNotFoundFault",
      $fault: "client",
      ...opts
    });
    this.name = "ParameterGroupNotFoundFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ParameterGroupNotFoundFault.prototype);
  }
};
__name(_ParameterGroupNotFoundFault, "ParameterGroupNotFoundFault");
var ParameterGroupNotFoundFault = _ParameterGroupNotFoundFault;
var _ShardsPerClusterQuotaExceededFault = class _ShardsPerClusterQuotaExceededFault extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ShardsPerClusterQuotaExceededFault",
      $fault: "client",
      ...opts
    });
    this.name = "ShardsPerClusterQuotaExceededFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ShardsPerClusterQuotaExceededFault.prototype);
  }
};
__name(_ShardsPerClusterQuotaExceededFault, "ShardsPerClusterQuotaExceededFault");
var ShardsPerClusterQuotaExceededFault = _ShardsPerClusterQuotaExceededFault;
var _SubnetGroupNotFoundFault = class _SubnetGroupNotFoundFault extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "SubnetGroupNotFoundFault",
      $fault: "client",
      ...opts
    });
    this.name = "SubnetGroupNotFoundFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _SubnetGroupNotFoundFault.prototype);
  }
};
__name(_SubnetGroupNotFoundFault, "SubnetGroupNotFoundFault");
var SubnetGroupNotFoundFault = _SubnetGroupNotFoundFault;
var _InvalidParameterGroupStateFault = class _InvalidParameterGroupStateFault extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidParameterGroupStateFault",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidParameterGroupStateFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidParameterGroupStateFault.prototype);
  }
};
__name(_InvalidParameterGroupStateFault, "InvalidParameterGroupStateFault");
var InvalidParameterGroupStateFault = _InvalidParameterGroupStateFault;
var _ParameterGroupAlreadyExistsFault = class _ParameterGroupAlreadyExistsFault extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ParameterGroupAlreadyExistsFault",
      $fault: "client",
      ...opts
    });
    this.name = "ParameterGroupAlreadyExistsFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ParameterGroupAlreadyExistsFault.prototype);
  }
};
__name(_ParameterGroupAlreadyExistsFault, "ParameterGroupAlreadyExistsFault");
var ParameterGroupAlreadyExistsFault = _ParameterGroupAlreadyExistsFault;
var _ParameterGroupQuotaExceededFault = class _ParameterGroupQuotaExceededFault extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ParameterGroupQuotaExceededFault",
      $fault: "client",
      ...opts
    });
    this.name = "ParameterGroupQuotaExceededFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ParameterGroupQuotaExceededFault.prototype);
  }
};
__name(_ParameterGroupQuotaExceededFault, "ParameterGroupQuotaExceededFault");
var ParameterGroupQuotaExceededFault = _ParameterGroupQuotaExceededFault;
var _ClusterNotFoundFault = class _ClusterNotFoundFault extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ClusterNotFoundFault",
      $fault: "client",
      ...opts
    });
    this.name = "ClusterNotFoundFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ClusterNotFoundFault.prototype);
  }
};
__name(_ClusterNotFoundFault, "ClusterNotFoundFault");
var ClusterNotFoundFault = _ClusterNotFoundFault;
var _InvalidClusterStateFault = class _InvalidClusterStateFault extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidClusterStateFault",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidClusterStateFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidClusterStateFault.prototype);
  }
};
__name(_InvalidClusterStateFault, "InvalidClusterStateFault");
var InvalidClusterStateFault = _InvalidClusterStateFault;
var _InvalidSubnet = class _InvalidSubnet extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidSubnet",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidSubnet";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidSubnet.prototype);
  }
};
__name(_InvalidSubnet, "InvalidSubnet");
var InvalidSubnet = _InvalidSubnet;
var _SubnetGroupAlreadyExistsFault = class _SubnetGroupAlreadyExistsFault extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "SubnetGroupAlreadyExistsFault",
      $fault: "client",
      ...opts
    });
    this.name = "SubnetGroupAlreadyExistsFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _SubnetGroupAlreadyExistsFault.prototype);
  }
};
__name(_SubnetGroupAlreadyExistsFault, "SubnetGroupAlreadyExistsFault");
var SubnetGroupAlreadyExistsFault = _SubnetGroupAlreadyExistsFault;
var _SubnetGroupQuotaExceededFault = class _SubnetGroupQuotaExceededFault extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "SubnetGroupQuotaExceededFault",
      $fault: "client",
      ...opts
    });
    this.name = "SubnetGroupQuotaExceededFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _SubnetGroupQuotaExceededFault.prototype);
  }
};
__name(_SubnetGroupQuotaExceededFault, "SubnetGroupQuotaExceededFault");
var SubnetGroupQuotaExceededFault = _SubnetGroupQuotaExceededFault;
var _SubnetNotAllowedFault = class _SubnetNotAllowedFault extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "SubnetNotAllowedFault",
      $fault: "client",
      ...opts
    });
    this.name = "SubnetNotAllowedFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _SubnetNotAllowedFault.prototype);
  }
};
__name(_SubnetNotAllowedFault, "SubnetNotAllowedFault");
var SubnetNotAllowedFault = _SubnetNotAllowedFault;
var _SubnetQuotaExceededFault = class _SubnetQuotaExceededFault extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "SubnetQuotaExceededFault",
      $fault: "client",
      ...opts
    });
    this.name = "SubnetQuotaExceededFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _SubnetQuotaExceededFault.prototype);
  }
};
__name(_SubnetQuotaExceededFault, "SubnetQuotaExceededFault");
var SubnetQuotaExceededFault = _SubnetQuotaExceededFault;
var InputAuthenticationType = {
  IAM: "iam",
  PASSWORD: "password"
};
var AuthenticationType = {
  IAM: "iam",
  NO_PASSWORD: "no-password",
  PASSWORD: "password"
};
var _UserAlreadyExistsFault = class _UserAlreadyExistsFault extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "UserAlreadyExistsFault",
      $fault: "client",
      ...opts
    });
    this.name = "UserAlreadyExistsFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _UserAlreadyExistsFault.prototype);
  }
};
__name(_UserAlreadyExistsFault, "UserAlreadyExistsFault");
var UserAlreadyExistsFault = _UserAlreadyExistsFault;
var _UserQuotaExceededFault = class _UserQuotaExceededFault extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "UserQuotaExceededFault",
      $fault: "client",
      ...opts
    });
    this.name = "UserQuotaExceededFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _UserQuotaExceededFault.prototype);
  }
};
__name(_UserQuotaExceededFault, "UserQuotaExceededFault");
var UserQuotaExceededFault = _UserQuotaExceededFault;
var _SubnetGroupInUseFault = class _SubnetGroupInUseFault extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "SubnetGroupInUseFault",
      $fault: "client",
      ...opts
    });
    this.name = "SubnetGroupInUseFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _SubnetGroupInUseFault.prototype);
  }
};
__name(_SubnetGroupInUseFault, "SubnetGroupInUseFault");
var SubnetGroupInUseFault = _SubnetGroupInUseFault;
var _InvalidUserStateFault = class _InvalidUserStateFault extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidUserStateFault",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidUserStateFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidUserStateFault.prototype);
  }
};
__name(_InvalidUserStateFault, "InvalidUserStateFault");
var InvalidUserStateFault = _InvalidUserStateFault;
var SourceType = {
  acl: "acl",
  cluster: "cluster",
  node: "node",
  parameter_group: "parameter-group",
  subnet_group: "subnet-group",
  user: "user"
};
var _ReservedNodeNotFoundFault = class _ReservedNodeNotFoundFault extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ReservedNodeNotFoundFault",
      $fault: "client",
      ...opts
    });
    this.name = "ReservedNodeNotFoundFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ReservedNodeNotFoundFault.prototype);
  }
};
__name(_ReservedNodeNotFoundFault, "ReservedNodeNotFoundFault");
var ReservedNodeNotFoundFault = _ReservedNodeNotFoundFault;
var _ReservedNodesOfferingNotFoundFault = class _ReservedNodesOfferingNotFoundFault extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ReservedNodesOfferingNotFoundFault",
      $fault: "client",
      ...opts
    });
    this.name = "ReservedNodesOfferingNotFoundFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ReservedNodesOfferingNotFoundFault.prototype);
  }
};
__name(_ReservedNodesOfferingNotFoundFault, "ReservedNodesOfferingNotFoundFault");
var ReservedNodesOfferingNotFoundFault = _ReservedNodesOfferingNotFoundFault;
var ServiceUpdateType = {
  SECURITY_UPDATE: "security-update"
};
var _APICallRateForCustomerExceededFault = class _APICallRateForCustomerExceededFault extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "APICallRateForCustomerExceededFault",
      $fault: "client",
      ...opts
    });
    this.name = "APICallRateForCustomerExceededFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _APICallRateForCustomerExceededFault.prototype);
  }
};
__name(_APICallRateForCustomerExceededFault, "APICallRateForCustomerExceededFault");
var APICallRateForCustomerExceededFault = _APICallRateForCustomerExceededFault;
var _InvalidKMSKeyFault = class _InvalidKMSKeyFault extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidKMSKeyFault",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidKMSKeyFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidKMSKeyFault.prototype);
  }
};
__name(_InvalidKMSKeyFault, "InvalidKMSKeyFault");
var InvalidKMSKeyFault = _InvalidKMSKeyFault;
var _ShardNotFoundFault = class _ShardNotFoundFault extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ShardNotFoundFault",
      $fault: "client",
      ...opts
    });
    this.name = "ShardNotFoundFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ShardNotFoundFault.prototype);
  }
};
__name(_ShardNotFoundFault, "ShardNotFoundFault");
var ShardNotFoundFault = _ShardNotFoundFault;
var _TestFailoverNotAvailableFault = class _TestFailoverNotAvailableFault extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "TestFailoverNotAvailableFault",
      $fault: "client",
      ...opts
    });
    this.name = "TestFailoverNotAvailableFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _TestFailoverNotAvailableFault.prototype);
  }
};
__name(_TestFailoverNotAvailableFault, "TestFailoverNotAvailableFault");
var TestFailoverNotAvailableFault = _TestFailoverNotAvailableFault;
var _InvalidARNFault = class _InvalidARNFault extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidARNFault",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidARNFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidARNFault.prototype);
  }
};
__name(_InvalidARNFault, "InvalidARNFault");
var InvalidARNFault = _InvalidARNFault;
var _ReservedNodeAlreadyExistsFault = class _ReservedNodeAlreadyExistsFault extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ReservedNodeAlreadyExistsFault",
      $fault: "client",
      ...opts
    });
    this.name = "ReservedNodeAlreadyExistsFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ReservedNodeAlreadyExistsFault.prototype);
  }
};
__name(_ReservedNodeAlreadyExistsFault, "ReservedNodeAlreadyExistsFault");
var ReservedNodeAlreadyExistsFault = _ReservedNodeAlreadyExistsFault;
var _ReservedNodeQuotaExceededFault = class _ReservedNodeQuotaExceededFault extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ReservedNodeQuotaExceededFault",
      $fault: "client",
      ...opts
    });
    this.name = "ReservedNodeQuotaExceededFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ReservedNodeQuotaExceededFault.prototype);
  }
};
__name(_ReservedNodeQuotaExceededFault, "ReservedNodeQuotaExceededFault");
var ReservedNodeQuotaExceededFault = _ReservedNodeQuotaExceededFault;
var _TagNotFoundFault = class _TagNotFoundFault extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "TagNotFoundFault",
      $fault: "client",
      ...opts
    });
    this.name = "TagNotFoundFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _TagNotFoundFault.prototype);
  }
};
__name(_TagNotFoundFault, "TagNotFoundFault");
var TagNotFoundFault = _TagNotFoundFault;
var _InvalidNodeStateFault = class _InvalidNodeStateFault extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidNodeStateFault",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidNodeStateFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidNodeStateFault.prototype);
  }
};
__name(_InvalidNodeStateFault, "InvalidNodeStateFault");
var InvalidNodeStateFault = _InvalidNodeStateFault;
var _NoOperationFault = class _NoOperationFault extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "NoOperationFault",
      $fault: "client",
      ...opts
    });
    this.name = "NoOperationFault";
    this.$fault = "client";
    Object.setPrototypeOf(this, _NoOperationFault.prototype);
  }
};
__name(_NoOperationFault, "NoOperationFault");
var NoOperationFault = _NoOperationFault;
var _SubnetInUse = class _SubnetInUse extends MemoryDBServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "SubnetInUse",
      $fault: "client",
      ...opts
    });
    this.name = "SubnetInUse";
    this.$fault = "client";
    Object.setPrototypeOf(this, _SubnetInUse.prototype);
  }
};
__name(_SubnetInUse, "SubnetInUse");
var SubnetInUse = _SubnetInUse;

// src/protocols/Aws_json1_1.ts
var se_BatchUpdateClusterCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("BatchUpdateCluster");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_BatchUpdateClusterCommand");
var se_CopySnapshotCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CopySnapshot");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CopySnapshotCommand");
var se_CreateACLCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateACL");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateACLCommand");
var se_CreateClusterCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateCluster");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateClusterCommand");
var se_CreateParameterGroupCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateParameterGroup");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateParameterGroupCommand");
var se_CreateSnapshotCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateSnapshot");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateSnapshotCommand");
var se_CreateSubnetGroupCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateSubnetGroup");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateSubnetGroupCommand");
var se_CreateUserCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateUser");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateUserCommand");
var se_DeleteACLCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteACL");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteACLCommand");
var se_DeleteClusterCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteCluster");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteClusterCommand");
var se_DeleteParameterGroupCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteParameterGroup");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteParameterGroupCommand");
var se_DeleteSnapshotCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteSnapshot");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteSnapshotCommand");
var se_DeleteSubnetGroupCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteSubnetGroup");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteSubnetGroupCommand");
var se_DeleteUserCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteUser");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteUserCommand");
var se_DescribeACLsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeACLs");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeACLsCommand");
var se_DescribeClustersCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeClusters");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeClustersCommand");
var se_DescribeEngineVersionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeEngineVersions");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeEngineVersionsCommand");
var se_DescribeEventsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeEvents");
  let body;
  body = JSON.stringify(se_DescribeEventsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeEventsCommand");
var se_DescribeParameterGroupsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeParameterGroups");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeParameterGroupsCommand");
var se_DescribeParametersCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeParameters");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeParametersCommand");
var se_DescribeReservedNodesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeReservedNodes");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeReservedNodesCommand");
var se_DescribeReservedNodesOfferingsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeReservedNodesOfferings");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeReservedNodesOfferingsCommand");
var se_DescribeServiceUpdatesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeServiceUpdates");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeServiceUpdatesCommand");
var se_DescribeSnapshotsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeSnapshots");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeSnapshotsCommand");
var se_DescribeSubnetGroupsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeSubnetGroups");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeSubnetGroupsCommand");
var se_DescribeUsersCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeUsers");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeUsersCommand");
var se_FailoverShardCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("FailoverShard");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_FailoverShardCommand");
var se_ListAllowedNodeTypeUpdatesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListAllowedNodeTypeUpdates");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListAllowedNodeTypeUpdatesCommand");
var se_ListTagsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListTags");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListTagsCommand");
var se_PurchaseReservedNodesOfferingCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("PurchaseReservedNodesOffering");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_PurchaseReservedNodesOfferingCommand");
var se_ResetParameterGroupCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ResetParameterGroup");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ResetParameterGroupCommand");
var se_TagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("TagResource");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_TagResourceCommand");
var se_UntagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UntagResource");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UntagResourceCommand");
var se_UpdateACLCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateACL");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateACLCommand");
var se_UpdateClusterCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateCluster");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateClusterCommand");
var se_UpdateParameterGroupCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateParameterGroup");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateParameterGroupCommand");
var se_UpdateSubnetGroupCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateSubnetGroup");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateSubnetGroupCommand");
var se_UpdateUserCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateUser");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateUserCommand");
var de_BatchUpdateClusterCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_BatchUpdateClusterResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_BatchUpdateClusterCommand");
var de_CopySnapshotCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_CopySnapshotResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CopySnapshotCommand");
var de_CreateACLCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateACLCommand");
var de_CreateClusterCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_CreateClusterResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateClusterCommand");
var de_CreateParameterGroupCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateParameterGroupCommand");
var de_CreateSnapshotCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_CreateSnapshotResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateSnapshotCommand");
var de_CreateSubnetGroupCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateSubnetGroupCommand");
var de_CreateUserCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateUserCommand");
var de_DeleteACLCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeleteACLCommand");
var de_DeleteClusterCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DeleteClusterResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeleteClusterCommand");
var de_DeleteParameterGroupCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeleteParameterGroupCommand");
var de_DeleteSnapshotCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DeleteSnapshotResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeleteSnapshotCommand");
var de_DeleteSubnetGroupCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeleteSubnetGroupCommand");
var de_DeleteUserCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeleteUserCommand");
var de_DescribeACLsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeACLsCommand");
var de_DescribeClustersCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DescribeClustersResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeClustersCommand");
var de_DescribeEngineVersionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeEngineVersionsCommand");
var de_DescribeEventsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DescribeEventsResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeEventsCommand");
var de_DescribeParameterGroupsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeParameterGroupsCommand");
var de_DescribeParametersCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeParametersCommand");
var de_DescribeReservedNodesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DescribeReservedNodesResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeReservedNodesCommand");
var de_DescribeReservedNodesOfferingsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DescribeReservedNodesOfferingsResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeReservedNodesOfferingsCommand");
var de_DescribeServiceUpdatesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DescribeServiceUpdatesResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeServiceUpdatesCommand");
var de_DescribeSnapshotsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_DescribeSnapshotsResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeSnapshotsCommand");
var de_DescribeSubnetGroupsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeSubnetGroupsCommand");
var de_DescribeUsersCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeUsersCommand");
var de_FailoverShardCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_FailoverShardResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_FailoverShardCommand");
var de_ListAllowedNodeTypeUpdatesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListAllowedNodeTypeUpdatesCommand");
var de_ListTagsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListTagsCommand");
var de_PurchaseReservedNodesOfferingCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_PurchaseReservedNodesOfferingResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_PurchaseReservedNodesOfferingCommand");
var de_ResetParameterGroupCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ResetParameterGroupCommand");
var de_TagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_TagResourceCommand");
var de_UntagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UntagResourceCommand");
var de_UpdateACLCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateACLCommand");
var de_UpdateClusterCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = de_UpdateClusterResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateClusterCommand");
var de_UpdateParameterGroupCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateParameterGroupCommand");
var de_UpdateSubnetGroupCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateSubnetGroupCommand");
var de_UpdateUserCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await parseBody(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateUserCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await parseErrorBody(output.body, context)
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InvalidParameterValueException":
    case "com.amazonaws.memorydb#InvalidParameterValueException":
      throw await de_InvalidParameterValueExceptionRes(parsedOutput, context);
    case "ServiceUpdateNotFoundFault":
    case "com.amazonaws.memorydb#ServiceUpdateNotFoundFault":
      throw await de_ServiceUpdateNotFoundFaultRes(parsedOutput, context);
    case "InvalidParameterCombinationException":
    case "com.amazonaws.memorydb#InvalidParameterCombinationException":
      throw await de_InvalidParameterCombinationExceptionRes(parsedOutput, context);
    case "InvalidSnapshotStateFault":
    case "com.amazonaws.memorydb#InvalidSnapshotStateFault":
      throw await de_InvalidSnapshotStateFaultRes(parsedOutput, context);
    case "ServiceLinkedRoleNotFoundFault":
    case "com.amazonaws.memorydb#ServiceLinkedRoleNotFoundFault":
      throw await de_ServiceLinkedRoleNotFoundFaultRes(parsedOutput, context);
    case "SnapshotAlreadyExistsFault":
    case "com.amazonaws.memorydb#SnapshotAlreadyExistsFault":
      throw await de_SnapshotAlreadyExistsFaultRes(parsedOutput, context);
    case "SnapshotNotFoundFault":
    case "com.amazonaws.memorydb#SnapshotNotFoundFault":
      throw await de_SnapshotNotFoundFaultRes(parsedOutput, context);
    case "SnapshotQuotaExceededFault":
    case "com.amazonaws.memorydb#SnapshotQuotaExceededFault":
      throw await de_SnapshotQuotaExceededFaultRes(parsedOutput, context);
    case "TagQuotaPerResourceExceeded":
    case "com.amazonaws.memorydb#TagQuotaPerResourceExceeded":
      throw await de_TagQuotaPerResourceExceededRes(parsedOutput, context);
    case "ACLAlreadyExistsFault":
    case "com.amazonaws.memorydb#ACLAlreadyExistsFault":
      throw await de_ACLAlreadyExistsFaultRes(parsedOutput, context);
    case "ACLQuotaExceededFault":
    case "com.amazonaws.memorydb#ACLQuotaExceededFault":
      throw await de_ACLQuotaExceededFaultRes(parsedOutput, context);
    case "DefaultUserRequired":
    case "com.amazonaws.memorydb#DefaultUserRequired":
      throw await de_DefaultUserRequiredRes(parsedOutput, context);
    case "DuplicateUserNameFault":
    case "com.amazonaws.memorydb#DuplicateUserNameFault":
      throw await de_DuplicateUserNameFaultRes(parsedOutput, context);
    case "UserNotFoundFault":
    case "com.amazonaws.memorydb#UserNotFoundFault":
      throw await de_UserNotFoundFaultRes(parsedOutput, context);
    case "ACLNotFoundFault":
    case "com.amazonaws.memorydb#ACLNotFoundFault":
      throw await de_ACLNotFoundFaultRes(parsedOutput, context);
    case "ClusterAlreadyExistsFault":
    case "com.amazonaws.memorydb#ClusterAlreadyExistsFault":
      throw await de_ClusterAlreadyExistsFaultRes(parsedOutput, context);
    case "ClusterQuotaForCustomerExceededFault":
    case "com.amazonaws.memorydb#ClusterQuotaForCustomerExceededFault":
      throw await de_ClusterQuotaForCustomerExceededFaultRes(parsedOutput, context);
    case "InsufficientClusterCapacityFault":
    case "com.amazonaws.memorydb#InsufficientClusterCapacityFault":
      throw await de_InsufficientClusterCapacityFaultRes(parsedOutput, context);
    case "InvalidACLStateFault":
    case "com.amazonaws.memorydb#InvalidACLStateFault":
      throw await de_InvalidACLStateFaultRes(parsedOutput, context);
    case "InvalidCredentialsException":
    case "com.amazonaws.memorydb#InvalidCredentialsException":
      throw await de_InvalidCredentialsExceptionRes(parsedOutput, context);
    case "InvalidVPCNetworkStateFault":
    case "com.amazonaws.memorydb#InvalidVPCNetworkStateFault":
      throw await de_InvalidVPCNetworkStateFaultRes(parsedOutput, context);
    case "NodeQuotaForClusterExceededFault":
    case "com.amazonaws.memorydb#NodeQuotaForClusterExceededFault":
      throw await de_NodeQuotaForClusterExceededFaultRes(parsedOutput, context);
    case "NodeQuotaForCustomerExceededFault":
    case "com.amazonaws.memorydb#NodeQuotaForCustomerExceededFault":
      throw await de_NodeQuotaForCustomerExceededFaultRes(parsedOutput, context);
    case "ParameterGroupNotFoundFault":
    case "com.amazonaws.memorydb#ParameterGroupNotFoundFault":
      throw await de_ParameterGroupNotFoundFaultRes(parsedOutput, context);
    case "ShardsPerClusterQuotaExceededFault":
    case "com.amazonaws.memorydb#ShardsPerClusterQuotaExceededFault":
      throw await de_ShardsPerClusterQuotaExceededFaultRes(parsedOutput, context);
    case "SubnetGroupNotFoundFault":
    case "com.amazonaws.memorydb#SubnetGroupNotFoundFault":
      throw await de_SubnetGroupNotFoundFaultRes(parsedOutput, context);
    case "InvalidParameterGroupStateFault":
    case "com.amazonaws.memorydb#InvalidParameterGroupStateFault":
      throw await de_InvalidParameterGroupStateFaultRes(parsedOutput, context);
    case "ParameterGroupAlreadyExistsFault":
    case "com.amazonaws.memorydb#ParameterGroupAlreadyExistsFault":
      throw await de_ParameterGroupAlreadyExistsFaultRes(parsedOutput, context);
    case "ParameterGroupQuotaExceededFault":
    case "com.amazonaws.memorydb#ParameterGroupQuotaExceededFault":
      throw await de_ParameterGroupQuotaExceededFaultRes(parsedOutput, context);
    case "ClusterNotFoundFault":
    case "com.amazonaws.memorydb#ClusterNotFoundFault":
      throw await de_ClusterNotFoundFaultRes(parsedOutput, context);
    case "InvalidClusterStateFault":
    case "com.amazonaws.memorydb#InvalidClusterStateFault":
      throw await de_InvalidClusterStateFaultRes(parsedOutput, context);
    case "InvalidSubnet":
    case "com.amazonaws.memorydb#InvalidSubnet":
      throw await de_InvalidSubnetRes(parsedOutput, context);
    case "SubnetGroupAlreadyExistsFault":
    case "com.amazonaws.memorydb#SubnetGroupAlreadyExistsFault":
      throw await de_SubnetGroupAlreadyExistsFaultRes(parsedOutput, context);
    case "SubnetGroupQuotaExceededFault":
    case "com.amazonaws.memorydb#SubnetGroupQuotaExceededFault":
      throw await de_SubnetGroupQuotaExceededFaultRes(parsedOutput, context);
    case "SubnetNotAllowedFault":
    case "com.amazonaws.memorydb#SubnetNotAllowedFault":
      throw await de_SubnetNotAllowedFaultRes(parsedOutput, context);
    case "SubnetQuotaExceededFault":
    case "com.amazonaws.memorydb#SubnetQuotaExceededFault":
      throw await de_SubnetQuotaExceededFaultRes(parsedOutput, context);
    case "UserAlreadyExistsFault":
    case "com.amazonaws.memorydb#UserAlreadyExistsFault":
      throw await de_UserAlreadyExistsFaultRes(parsedOutput, context);
    case "UserQuotaExceededFault":
    case "com.amazonaws.memorydb#UserQuotaExceededFault":
      throw await de_UserQuotaExceededFaultRes(parsedOutput, context);
    case "SubnetGroupInUseFault":
    case "com.amazonaws.memorydb#SubnetGroupInUseFault":
      throw await de_SubnetGroupInUseFaultRes(parsedOutput, context);
    case "InvalidUserStateFault":
    case "com.amazonaws.memorydb#InvalidUserStateFault":
      throw await de_InvalidUserStateFaultRes(parsedOutput, context);
    case "ReservedNodeNotFoundFault":
    case "com.amazonaws.memorydb#ReservedNodeNotFoundFault":
      throw await de_ReservedNodeNotFoundFaultRes(parsedOutput, context);
    case "ReservedNodesOfferingNotFoundFault":
    case "com.amazonaws.memorydb#ReservedNodesOfferingNotFoundFault":
      throw await de_ReservedNodesOfferingNotFoundFaultRes(parsedOutput, context);
    case "APICallRateForCustomerExceededFault":
    case "com.amazonaws.memorydb#APICallRateForCustomerExceededFault":
      throw await de_APICallRateForCustomerExceededFaultRes(parsedOutput, context);
    case "InvalidKMSKeyFault":
    case "com.amazonaws.memorydb#InvalidKMSKeyFault":
      throw await de_InvalidKMSKeyFaultRes(parsedOutput, context);
    case "ShardNotFoundFault":
    case "com.amazonaws.memorydb#ShardNotFoundFault":
      throw await de_ShardNotFoundFaultRes(parsedOutput, context);
    case "TestFailoverNotAvailableFault":
    case "com.amazonaws.memorydb#TestFailoverNotAvailableFault":
      throw await de_TestFailoverNotAvailableFaultRes(parsedOutput, context);
    case "InvalidARNFault":
    case "com.amazonaws.memorydb#InvalidARNFault":
      throw await de_InvalidARNFaultRes(parsedOutput, context);
    case "ReservedNodeAlreadyExistsFault":
    case "com.amazonaws.memorydb#ReservedNodeAlreadyExistsFault":
      throw await de_ReservedNodeAlreadyExistsFaultRes(parsedOutput, context);
    case "ReservedNodeQuotaExceededFault":
    case "com.amazonaws.memorydb#ReservedNodeQuotaExceededFault":
      throw await de_ReservedNodeQuotaExceededFaultRes(parsedOutput, context);
    case "TagNotFoundFault":
    case "com.amazonaws.memorydb#TagNotFoundFault":
      throw await de_TagNotFoundFaultRes(parsedOutput, context);
    case "InvalidNodeStateFault":
    case "com.amazonaws.memorydb#InvalidNodeStateFault":
      throw await de_InvalidNodeStateFaultRes(parsedOutput, context);
    case "NoOperationFault":
    case "com.amazonaws.memorydb#NoOperationFault":
      throw await de_NoOperationFaultRes(parsedOutput, context);
    case "SubnetInUse":
    case "com.amazonaws.memorydb#SubnetInUse":
      throw await de_SubnetInUseRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var de_ACLAlreadyExistsFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ACLAlreadyExistsFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ACLAlreadyExistsFaultRes");
var de_ACLNotFoundFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ACLNotFoundFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ACLNotFoundFaultRes");
var de_ACLQuotaExceededFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ACLQuotaExceededFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ACLQuotaExceededFaultRes");
var de_APICallRateForCustomerExceededFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new APICallRateForCustomerExceededFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_APICallRateForCustomerExceededFaultRes");
var de_ClusterAlreadyExistsFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ClusterAlreadyExistsFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ClusterAlreadyExistsFaultRes");
var de_ClusterNotFoundFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ClusterNotFoundFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ClusterNotFoundFaultRes");
var de_ClusterQuotaForCustomerExceededFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ClusterQuotaForCustomerExceededFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ClusterQuotaForCustomerExceededFaultRes");
var de_DefaultUserRequiredRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new DefaultUserRequired({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_DefaultUserRequiredRes");
var de_DuplicateUserNameFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new DuplicateUserNameFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_DuplicateUserNameFaultRes");
var de_InsufficientClusterCapacityFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new InsufficientClusterCapacityFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InsufficientClusterCapacityFaultRes");
var de_InvalidACLStateFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new InvalidACLStateFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidACLStateFaultRes");
var de_InvalidARNFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new InvalidARNFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidARNFaultRes");
var de_InvalidClusterStateFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new InvalidClusterStateFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidClusterStateFaultRes");
var de_InvalidCredentialsExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new InvalidCredentialsException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidCredentialsExceptionRes");
var de_InvalidKMSKeyFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new InvalidKMSKeyFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidKMSKeyFaultRes");
var de_InvalidNodeStateFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new InvalidNodeStateFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidNodeStateFaultRes");
var de_InvalidParameterCombinationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new InvalidParameterCombinationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidParameterCombinationExceptionRes");
var de_InvalidParameterGroupStateFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new InvalidParameterGroupStateFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidParameterGroupStateFaultRes");
var de_InvalidParameterValueExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new InvalidParameterValueException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidParameterValueExceptionRes");
var de_InvalidSnapshotStateFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new InvalidSnapshotStateFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidSnapshotStateFaultRes");
var de_InvalidSubnetRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new InvalidSubnet({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidSubnetRes");
var de_InvalidUserStateFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new InvalidUserStateFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidUserStateFaultRes");
var de_InvalidVPCNetworkStateFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new InvalidVPCNetworkStateFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidVPCNetworkStateFaultRes");
var de_NodeQuotaForClusterExceededFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new NodeQuotaForClusterExceededFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_NodeQuotaForClusterExceededFaultRes");
var de_NodeQuotaForCustomerExceededFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new NodeQuotaForCustomerExceededFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_NodeQuotaForCustomerExceededFaultRes");
var de_NoOperationFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new NoOperationFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_NoOperationFaultRes");
var de_ParameterGroupAlreadyExistsFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ParameterGroupAlreadyExistsFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ParameterGroupAlreadyExistsFaultRes");
var de_ParameterGroupNotFoundFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ParameterGroupNotFoundFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ParameterGroupNotFoundFaultRes");
var de_ParameterGroupQuotaExceededFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ParameterGroupQuotaExceededFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ParameterGroupQuotaExceededFaultRes");
var de_ReservedNodeAlreadyExistsFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ReservedNodeAlreadyExistsFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ReservedNodeAlreadyExistsFaultRes");
var de_ReservedNodeNotFoundFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ReservedNodeNotFoundFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ReservedNodeNotFoundFaultRes");
var de_ReservedNodeQuotaExceededFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ReservedNodeQuotaExceededFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ReservedNodeQuotaExceededFaultRes");
var de_ReservedNodesOfferingNotFoundFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ReservedNodesOfferingNotFoundFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ReservedNodesOfferingNotFoundFaultRes");
var de_ServiceLinkedRoleNotFoundFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ServiceLinkedRoleNotFoundFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ServiceLinkedRoleNotFoundFaultRes");
var de_ServiceUpdateNotFoundFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ServiceUpdateNotFoundFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ServiceUpdateNotFoundFaultRes");
var de_ShardNotFoundFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ShardNotFoundFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ShardNotFoundFaultRes");
var de_ShardsPerClusterQuotaExceededFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ShardsPerClusterQuotaExceededFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ShardsPerClusterQuotaExceededFaultRes");
var de_SnapshotAlreadyExistsFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new SnapshotAlreadyExistsFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_SnapshotAlreadyExistsFaultRes");
var de_SnapshotNotFoundFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new SnapshotNotFoundFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_SnapshotNotFoundFaultRes");
var de_SnapshotQuotaExceededFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new SnapshotQuotaExceededFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_SnapshotQuotaExceededFaultRes");
var de_SubnetGroupAlreadyExistsFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new SubnetGroupAlreadyExistsFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_SubnetGroupAlreadyExistsFaultRes");
var de_SubnetGroupInUseFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new SubnetGroupInUseFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_SubnetGroupInUseFaultRes");
var de_SubnetGroupNotFoundFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new SubnetGroupNotFoundFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_SubnetGroupNotFoundFaultRes");
var de_SubnetGroupQuotaExceededFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new SubnetGroupQuotaExceededFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_SubnetGroupQuotaExceededFaultRes");
var de_SubnetInUseRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new SubnetInUse({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_SubnetInUseRes");
var de_SubnetNotAllowedFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new SubnetNotAllowedFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_SubnetNotAllowedFaultRes");
var de_SubnetQuotaExceededFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new SubnetQuotaExceededFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_SubnetQuotaExceededFaultRes");
var de_TagNotFoundFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new TagNotFoundFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_TagNotFoundFaultRes");
var de_TagQuotaPerResourceExceededRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new TagQuotaPerResourceExceeded({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_TagQuotaPerResourceExceededRes");
var de_TestFailoverNotAvailableFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new TestFailoverNotAvailableFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_TestFailoverNotAvailableFaultRes");
var de_UserAlreadyExistsFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new UserAlreadyExistsFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_UserAlreadyExistsFaultRes");
var de_UserNotFoundFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new UserNotFoundFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_UserNotFoundFaultRes");
var de_UserQuotaExceededFaultRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new UserQuotaExceededFault({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_UserQuotaExceededFaultRes");
var se_DescribeEventsRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    Duration: [],
    EndTime: (_) => Math.round(_.getTime() / 1e3),
    MaxResults: [],
    NextToken: [],
    SourceName: [],
    SourceType: [],
    StartTime: (_) => Math.round(_.getTime() / 1e3)
  });
}, "se_DescribeEventsRequest");
var de_BatchUpdateClusterResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ProcessedClusters: (_) => de_ClusterList(_, context),
    UnprocessedClusters: import_smithy_client._json
  });
}, "de_BatchUpdateClusterResponse");
var de_Cluster = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ACLName: import_smithy_client.expectString,
    ARN: import_smithy_client.expectString,
    AutoMinorVersionUpgrade: import_smithy_client.expectBoolean,
    AvailabilityMode: import_smithy_client.expectString,
    ClusterEndpoint: import_smithy_client._json,
    DataTiering: import_smithy_client.expectString,
    Description: import_smithy_client.expectString,
    EnginePatchVersion: import_smithy_client.expectString,
    EngineVersion: import_smithy_client.expectString,
    KmsKeyId: import_smithy_client.expectString,
    MaintenanceWindow: import_smithy_client.expectString,
    Name: import_smithy_client.expectString,
    NodeType: import_smithy_client.expectString,
    NumberOfShards: import_smithy_client.expectInt32,
    ParameterGroupName: import_smithy_client.expectString,
    ParameterGroupStatus: import_smithy_client.expectString,
    PendingUpdates: (_) => de_ClusterPendingUpdates(_, context),
    SecurityGroups: import_smithy_client._json,
    Shards: (_) => de_ShardList(_, context),
    SnapshotRetentionLimit: import_smithy_client.expectInt32,
    SnapshotWindow: import_smithy_client.expectString,
    SnsTopicArn: import_smithy_client.expectString,
    SnsTopicStatus: import_smithy_client.expectString,
    Status: import_smithy_client.expectString,
    SubnetGroupName: import_smithy_client.expectString,
    TLSEnabled: import_smithy_client.expectBoolean
  });
}, "de_Cluster");
var de_ClusterConfiguration = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Description: import_smithy_client.expectString,
    EngineVersion: import_smithy_client.expectString,
    MaintenanceWindow: import_smithy_client.expectString,
    Name: import_smithy_client.expectString,
    NodeType: import_smithy_client.expectString,
    NumShards: import_smithy_client.expectInt32,
    ParameterGroupName: import_smithy_client.expectString,
    Port: import_smithy_client.expectInt32,
    Shards: (_) => de_ShardDetails(_, context),
    SnapshotRetentionLimit: import_smithy_client.expectInt32,
    SnapshotWindow: import_smithy_client.expectString,
    SubnetGroupName: import_smithy_client.expectString,
    TopicArn: import_smithy_client.expectString,
    VpcId: import_smithy_client.expectString
  });
}, "de_ClusterConfiguration");
var de_ClusterList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Cluster(entry, context);
  });
  return retVal;
}, "de_ClusterList");
var de_ClusterPendingUpdates = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ACLs: import_smithy_client._json,
    Resharding: (_) => de_ReshardingStatus(_, context),
    ServiceUpdates: import_smithy_client._json
  });
}, "de_ClusterPendingUpdates");
var de_CopySnapshotResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Snapshot: (_) => de_Snapshot(_, context)
  });
}, "de_CopySnapshotResponse");
var de_CreateClusterResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Cluster: (_) => de_Cluster(_, context)
  });
}, "de_CreateClusterResponse");
var de_CreateSnapshotResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Snapshot: (_) => de_Snapshot(_, context)
  });
}, "de_CreateSnapshotResponse");
var de_DeleteClusterResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Cluster: (_) => de_Cluster(_, context)
  });
}, "de_DeleteClusterResponse");
var de_DeleteSnapshotResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Snapshot: (_) => de_Snapshot(_, context)
  });
}, "de_DeleteSnapshotResponse");
var de_DescribeClustersResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Clusters: (_) => de_ClusterList(_, context),
    NextToken: import_smithy_client.expectString
  });
}, "de_DescribeClustersResponse");
var de_DescribeEventsResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Events: (_) => de_EventList(_, context),
    NextToken: import_smithy_client.expectString
  });
}, "de_DescribeEventsResponse");
var de_DescribeReservedNodesOfferingsResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    NextToken: import_smithy_client.expectString,
    ReservedNodesOfferings: (_) => de_ReservedNodesOfferingList(_, context)
  });
}, "de_DescribeReservedNodesOfferingsResponse");
var de_DescribeReservedNodesResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    NextToken: import_smithy_client.expectString,
    ReservedNodes: (_) => de_ReservedNodeList(_, context)
  });
}, "de_DescribeReservedNodesResponse");
var de_DescribeServiceUpdatesResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    NextToken: import_smithy_client.expectString,
    ServiceUpdates: (_) => de_ServiceUpdateList(_, context)
  });
}, "de_DescribeServiceUpdatesResponse");
var de_DescribeSnapshotsResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    NextToken: import_smithy_client.expectString,
    Snapshots: (_) => de_SnapshotList(_, context)
  });
}, "de_DescribeSnapshotsResponse");
var de_Event = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Date: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Message: import_smithy_client.expectString,
    SourceName: import_smithy_client.expectString,
    SourceType: import_smithy_client.expectString
  });
}, "de_Event");
var de_EventList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Event(entry, context);
  });
  return retVal;
}, "de_EventList");
var de_FailoverShardResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Cluster: (_) => de_Cluster(_, context)
  });
}, "de_FailoverShardResponse");
var de_Node = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    AvailabilityZone: import_smithy_client.expectString,
    CreateTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Endpoint: import_smithy_client._json,
    Name: import_smithy_client.expectString,
    Status: import_smithy_client.expectString
  });
}, "de_Node");
var de_NodeList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Node(entry, context);
  });
  return retVal;
}, "de_NodeList");
var de_PurchaseReservedNodesOfferingResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ReservedNode: (_) => de_ReservedNode(_, context)
  });
}, "de_PurchaseReservedNodesOfferingResponse");
var de_RecurringCharge = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    RecurringChargeAmount: import_smithy_client.limitedParseDouble,
    RecurringChargeFrequency: import_smithy_client.expectString
  });
}, "de_RecurringCharge");
var de_RecurringChargeList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_RecurringCharge(entry, context);
  });
  return retVal;
}, "de_RecurringChargeList");
var de_ReservedNode = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ARN: import_smithy_client.expectString,
    Duration: import_smithy_client.expectInt32,
    FixedPrice: import_smithy_client.limitedParseDouble,
    NodeCount: import_smithy_client.expectInt32,
    NodeType: import_smithy_client.expectString,
    OfferingType: import_smithy_client.expectString,
    RecurringCharges: (_) => de_RecurringChargeList(_, context),
    ReservationId: import_smithy_client.expectString,
    ReservedNodesOfferingId: import_smithy_client.expectString,
    StartTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    State: import_smithy_client.expectString
  });
}, "de_ReservedNode");
var de_ReservedNodeList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ReservedNode(entry, context);
  });
  return retVal;
}, "de_ReservedNodeList");
var de_ReservedNodesOffering = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Duration: import_smithy_client.expectInt32,
    FixedPrice: import_smithy_client.limitedParseDouble,
    NodeType: import_smithy_client.expectString,
    OfferingType: import_smithy_client.expectString,
    RecurringCharges: (_) => de_RecurringChargeList(_, context),
    ReservedNodesOfferingId: import_smithy_client.expectString
  });
}, "de_ReservedNodesOffering");
var de_ReservedNodesOfferingList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ReservedNodesOffering(entry, context);
  });
  return retVal;
}, "de_ReservedNodesOfferingList");
var de_ReshardingStatus = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    SlotMigration: (_) => de_SlotMigration(_, context)
  });
}, "de_ReshardingStatus");
var de_ServiceUpdate = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    AutoUpdateStartDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    ClusterName: import_smithy_client.expectString,
    Description: import_smithy_client.expectString,
    NodesUpdated: import_smithy_client.expectString,
    ReleaseDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    ServiceUpdateName: import_smithy_client.expectString,
    Status: import_smithy_client.expectString,
    Type: import_smithy_client.expectString
  });
}, "de_ServiceUpdate");
var de_ServiceUpdateList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ServiceUpdate(entry, context);
  });
  return retVal;
}, "de_ServiceUpdateList");
var de_Shard = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Name: import_smithy_client.expectString,
    Nodes: (_) => de_NodeList(_, context),
    NumberOfNodes: import_smithy_client.expectInt32,
    Slots: import_smithy_client.expectString,
    Status: import_smithy_client.expectString
  });
}, "de_Shard");
var de_ShardDetail = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Configuration: import_smithy_client._json,
    Name: import_smithy_client.expectString,
    Size: import_smithy_client.expectString,
    SnapshotCreationTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_)))
  });
}, "de_ShardDetail");
var de_ShardDetails = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ShardDetail(entry, context);
  });
  return retVal;
}, "de_ShardDetails");
var de_ShardList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Shard(entry, context);
  });
  return retVal;
}, "de_ShardList");
var de_SlotMigration = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ProgressPercentage: import_smithy_client.limitedParseDouble
  });
}, "de_SlotMigration");
var de_Snapshot = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ARN: import_smithy_client.expectString,
    ClusterConfiguration: (_) => de_ClusterConfiguration(_, context),
    DataTiering: import_smithy_client.expectString,
    KmsKeyId: import_smithy_client.expectString,
    Name: import_smithy_client.expectString,
    Source: import_smithy_client.expectString,
    Status: import_smithy_client.expectString
  });
}, "de_Snapshot");
var de_SnapshotList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Snapshot(entry, context);
  });
  return retVal;
}, "de_SnapshotList");
var de_UpdateClusterResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Cluster: (_) => de_Cluster(_, context)
  });
}, "de_UpdateClusterResponse");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var collectBodyString = /* @__PURE__ */ __name((streamBody, context) => (0, import_smithy_client.collectBody)(streamBody, context).then((body) => context.utf8Encoder(body)), "collectBodyString");
var throwDefaultError = (0, import_smithy_client.withBaseException)(MemoryDBServiceException);
var buildHttpRpcRequest = /* @__PURE__ */ __name(async (context, headers, path, resolvedHostname, body) => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const contents = {
    protocol,
    hostname,
    port,
    method: "POST",
    path: basePath.endsWith("/") ? basePath.slice(0, -1) + path : basePath + path,
    headers
  };
  if (resolvedHostname !== void 0) {
    contents.hostname = resolvedHostname;
  }
  if (body !== void 0) {
    contents.body = body;
  }
  return new import_protocol_http.HttpRequest(contents);
}, "buildHttpRpcRequest");
function sharedHeaders(operation) {
  return {
    "content-type": "application/x-amz-json-1.1",
    "x-amz-target": `AmazonMemoryDB.${operation}`
  };
}
__name(sharedHeaders, "sharedHeaders");
var parseBody = /* @__PURE__ */ __name((streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {
  if (encoded.length) {
    return JSON.parse(encoded);
  }
  return {};
}), "parseBody");
var parseErrorBody = /* @__PURE__ */ __name(async (errorBody, context) => {
  const value = await parseBody(errorBody, context);
  value.message = value.message ?? value.Message;
  return value;
}, "parseErrorBody");
var loadRestJsonErrorCode = /* @__PURE__ */ __name((output, data) => {
  const findKey = /* @__PURE__ */ __name((object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase()), "findKey");
  const sanitizeErrorCode = /* @__PURE__ */ __name((rawValue) => {
    let cleanValue = rawValue;
    if (typeof cleanValue === "number") {
      cleanValue = cleanValue.toString();
    }
    if (cleanValue.indexOf(",") >= 0) {
      cleanValue = cleanValue.split(",")[0];
    }
    if (cleanValue.indexOf(":") >= 0) {
      cleanValue = cleanValue.split(":")[0];
    }
    if (cleanValue.indexOf("#") >= 0) {
      cleanValue = cleanValue.split("#")[1];
    }
    return cleanValue;
  }, "sanitizeErrorCode");
  const headerKey = findKey(output.headers, "x-amzn-errortype");
  if (headerKey !== void 0) {
    return sanitizeErrorCode(output.headers[headerKey]);
  }
  if (data.code !== void 0) {
    return sanitizeErrorCode(data.code);
  }
  if (data["__type"] !== void 0) {
    return sanitizeErrorCode(data["__type"]);
  }
}, "loadRestJsonErrorCode");

// src/commands/BatchUpdateClusterCommand.ts
var _BatchUpdateClusterCommand = class _BatchUpdateClusterCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonMemoryDB", "BatchUpdateCluster", {}).n("MemoryDBClient", "BatchUpdateClusterCommand").f(void 0, void 0).ser(se_BatchUpdateClusterCommand).de(de_BatchUpdateClusterCommand).build() {
};
__name(_BatchUpdateClusterCommand, "BatchUpdateClusterCommand");
var BatchUpdateClusterCommand = _BatchUpdateClusterCommand;

// src/commands/CopySnapshotCommand.ts




var _CopySnapshotCommand = class _CopySnapshotCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonMemoryDB", "CopySnapshot", {}).n("MemoryDBClient", "CopySnapshotCommand").f(void 0, void 0).ser(se_CopySnapshotCommand).de(de_CopySnapshotCommand).build() {
};
__name(_CopySnapshotCommand, "CopySnapshotCommand");
var CopySnapshotCommand = _CopySnapshotCommand;

// src/commands/CreateACLCommand.ts




var _CreateACLCommand = class _CreateACLCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonMemoryDB", "CreateACL", {}).n("MemoryDBClient", "CreateACLCommand").f(void 0, void 0).ser(se_CreateACLCommand).de(de_CreateACLCommand).build() {
};
__name(_CreateACLCommand, "CreateACLCommand");
var CreateACLCommand = _CreateACLCommand;

// src/commands/CreateClusterCommand.ts




var _CreateClusterCommand = class _CreateClusterCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonMemoryDB", "CreateCluster", {}).n("MemoryDBClient", "CreateClusterCommand").f(void 0, void 0).ser(se_CreateClusterCommand).de(de_CreateClusterCommand).build() {
};
__name(_CreateClusterCommand, "CreateClusterCommand");
var CreateClusterCommand = _CreateClusterCommand;

// src/commands/CreateParameterGroupCommand.ts




var _CreateParameterGroupCommand = class _CreateParameterGroupCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonMemoryDB", "CreateParameterGroup", {}).n("MemoryDBClient", "CreateParameterGroupCommand").f(void 0, void 0).ser(se_CreateParameterGroupCommand).de(de_CreateParameterGroupCommand).build() {
};
__name(_CreateParameterGroupCommand, "CreateParameterGroupCommand");
var CreateParameterGroupCommand = _CreateParameterGroupCommand;

// src/commands/CreateSnapshotCommand.ts




var _CreateSnapshotCommand = class _CreateSnapshotCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonMemoryDB", "CreateSnapshot", {}).n("MemoryDBClient", "CreateSnapshotCommand").f(void 0, void 0).ser(se_CreateSnapshotCommand).de(de_CreateSnapshotCommand).build() {
};
__name(_CreateSnapshotCommand, "CreateSnapshotCommand");
var CreateSnapshotCommand = _CreateSnapshotCommand;

// src/commands/CreateSubnetGroupCommand.ts




var _CreateSubnetGroupCommand = class _CreateSubnetGroupCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonMemoryDB", "CreateSubnetGroup", {}).n("MemoryDBClient", "CreateSubnetGroupCommand").f(void 0, void 0).ser(se_CreateSubnetGroupCommand).de(de_CreateSubnetGroupCommand).build() {
};
__name(_CreateSubnetGroupCommand, "CreateSubnetGroupCommand");
var CreateSubnetGroupCommand = _CreateSubnetGroupCommand;

// src/commands/CreateUserCommand.ts




var _CreateUserCommand = class _CreateUserCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonMemoryDB", "CreateUser", {}).n("MemoryDBClient", "CreateUserCommand").f(void 0, void 0).ser(se_CreateUserCommand).de(de_CreateUserCommand).build() {
};
__name(_CreateUserCommand, "CreateUserCommand");
var CreateUserCommand = _CreateUserCommand;

// src/commands/DeleteACLCommand.ts




var _DeleteACLCommand = class _DeleteACLCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonMemoryDB", "DeleteACL", {}).n("MemoryDBClient", "DeleteACLCommand").f(void 0, void 0).ser(se_DeleteACLCommand).de(de_DeleteACLCommand).build() {
};
__name(_DeleteACLCommand, "DeleteACLCommand");
var DeleteACLCommand = _DeleteACLCommand;

// src/commands/DeleteClusterCommand.ts




var _DeleteClusterCommand = class _DeleteClusterCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonMemoryDB", "DeleteCluster", {}).n("MemoryDBClient", "DeleteClusterCommand").f(void 0, void 0).ser(se_DeleteClusterCommand).de(de_DeleteClusterCommand).build() {
};
__name(_DeleteClusterCommand, "DeleteClusterCommand");
var DeleteClusterCommand = _DeleteClusterCommand;

// src/commands/DeleteParameterGroupCommand.ts




var _DeleteParameterGroupCommand = class _DeleteParameterGroupCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonMemoryDB", "DeleteParameterGroup", {}).n("MemoryDBClient", "DeleteParameterGroupCommand").f(void 0, void 0).ser(se_DeleteParameterGroupCommand).de(de_DeleteParameterGroupCommand).build() {
};
__name(_DeleteParameterGroupCommand, "DeleteParameterGroupCommand");
var DeleteParameterGroupCommand = _DeleteParameterGroupCommand;

// src/commands/DeleteSnapshotCommand.ts




var _DeleteSnapshotCommand = class _DeleteSnapshotCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonMemoryDB", "DeleteSnapshot", {}).n("MemoryDBClient", "DeleteSnapshotCommand").f(void 0, void 0).ser(se_DeleteSnapshotCommand).de(de_DeleteSnapshotCommand).build() {
};
__name(_DeleteSnapshotCommand, "DeleteSnapshotCommand");
var DeleteSnapshotCommand = _DeleteSnapshotCommand;

// src/commands/DeleteSubnetGroupCommand.ts




var _DeleteSubnetGroupCommand = class _DeleteSubnetGroupCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonMemoryDB", "DeleteSubnetGroup", {}).n("MemoryDBClient", "DeleteSubnetGroupCommand").f(void 0, void 0).ser(se_DeleteSubnetGroupCommand).de(de_DeleteSubnetGroupCommand).build() {
};
__name(_DeleteSubnetGroupCommand, "DeleteSubnetGroupCommand");
var DeleteSubnetGroupCommand = _DeleteSubnetGroupCommand;

// src/commands/DeleteUserCommand.ts




var _DeleteUserCommand = class _DeleteUserCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonMemoryDB", "DeleteUser", {}).n("MemoryDBClient", "DeleteUserCommand").f(void 0, void 0).ser(se_DeleteUserCommand).de(de_DeleteUserCommand).build() {
};
__name(_DeleteUserCommand, "DeleteUserCommand");
var DeleteUserCommand = _DeleteUserCommand;

// src/commands/DescribeACLsCommand.ts




var _DescribeACLsCommand = class _DescribeACLsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonMemoryDB", "DescribeACLs", {}).n("MemoryDBClient", "DescribeACLsCommand").f(void 0, void 0).ser(se_DescribeACLsCommand).de(de_DescribeACLsCommand).build() {
};
__name(_DescribeACLsCommand, "DescribeACLsCommand");
var DescribeACLsCommand = _DescribeACLsCommand;

// src/commands/DescribeClustersCommand.ts




var _DescribeClustersCommand = class _DescribeClustersCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonMemoryDB", "DescribeClusters", {}).n("MemoryDBClient", "DescribeClustersCommand").f(void 0, void 0).ser(se_DescribeClustersCommand).de(de_DescribeClustersCommand).build() {
};
__name(_DescribeClustersCommand, "DescribeClustersCommand");
var DescribeClustersCommand = _DescribeClustersCommand;

// src/commands/DescribeEngineVersionsCommand.ts




var _DescribeEngineVersionsCommand = class _DescribeEngineVersionsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonMemoryDB", "DescribeEngineVersions", {}).n("MemoryDBClient", "DescribeEngineVersionsCommand").f(void 0, void 0).ser(se_DescribeEngineVersionsCommand).de(de_DescribeEngineVersionsCommand).build() {
};
__name(_DescribeEngineVersionsCommand, "DescribeEngineVersionsCommand");
var DescribeEngineVersionsCommand = _DescribeEngineVersionsCommand;

// src/commands/DescribeEventsCommand.ts




var _DescribeEventsCommand = class _DescribeEventsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonMemoryDB", "DescribeEvents", {}).n("MemoryDBClient", "DescribeEventsCommand").f(void 0, void 0).ser(se_DescribeEventsCommand).de(de_DescribeEventsCommand).build() {
};
__name(_DescribeEventsCommand, "DescribeEventsCommand");
var DescribeEventsCommand = _DescribeEventsCommand;

// src/commands/DescribeParameterGroupsCommand.ts




var _DescribeParameterGroupsCommand = class _DescribeParameterGroupsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonMemoryDB", "DescribeParameterGroups", {}).n("MemoryDBClient", "DescribeParameterGroupsCommand").f(void 0, void 0).ser(se_DescribeParameterGroupsCommand).de(de_DescribeParameterGroupsCommand).build() {
};
__name(_DescribeParameterGroupsCommand, "DescribeParameterGroupsCommand");
var DescribeParameterGroupsCommand = _DescribeParameterGroupsCommand;

// src/commands/DescribeParametersCommand.ts




var _DescribeParametersCommand = class _DescribeParametersCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonMemoryDB", "DescribeParameters", {}).n("MemoryDBClient", "DescribeParametersCommand").f(void 0, void 0).ser(se_DescribeParametersCommand).de(de_DescribeParametersCommand).build() {
};
__name(_DescribeParametersCommand, "DescribeParametersCommand");
var DescribeParametersCommand = _DescribeParametersCommand;

// src/commands/DescribeReservedNodesCommand.ts




var _DescribeReservedNodesCommand = class _DescribeReservedNodesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonMemoryDB", "DescribeReservedNodes", {}).n("MemoryDBClient", "DescribeReservedNodesCommand").f(void 0, void 0).ser(se_DescribeReservedNodesCommand).de(de_DescribeReservedNodesCommand).build() {
};
__name(_DescribeReservedNodesCommand, "DescribeReservedNodesCommand");
var DescribeReservedNodesCommand = _DescribeReservedNodesCommand;

// src/commands/DescribeReservedNodesOfferingsCommand.ts




var _DescribeReservedNodesOfferingsCommand = class _DescribeReservedNodesOfferingsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonMemoryDB", "DescribeReservedNodesOfferings", {}).n("MemoryDBClient", "DescribeReservedNodesOfferingsCommand").f(void 0, void 0).ser(se_DescribeReservedNodesOfferingsCommand).de(de_DescribeReservedNodesOfferingsCommand).build() {
};
__name(_DescribeReservedNodesOfferingsCommand, "DescribeReservedNodesOfferingsCommand");
var DescribeReservedNodesOfferingsCommand = _DescribeReservedNodesOfferingsCommand;

// src/commands/DescribeServiceUpdatesCommand.ts




var _DescribeServiceUpdatesCommand = class _DescribeServiceUpdatesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonMemoryDB", "DescribeServiceUpdates", {}).n("MemoryDBClient", "DescribeServiceUpdatesCommand").f(void 0, void 0).ser(se_DescribeServiceUpdatesCommand).de(de_DescribeServiceUpdatesCommand).build() {
};
__name(_DescribeServiceUpdatesCommand, "DescribeServiceUpdatesCommand");
var DescribeServiceUpdatesCommand = _DescribeServiceUpdatesCommand;

// src/commands/DescribeSnapshotsCommand.ts




var _DescribeSnapshotsCommand = class _DescribeSnapshotsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonMemoryDB", "DescribeSnapshots", {}).n("MemoryDBClient", "DescribeSnapshotsCommand").f(void 0, void 0).ser(se_DescribeSnapshotsCommand).de(de_DescribeSnapshotsCommand).build() {
};
__name(_DescribeSnapshotsCommand, "DescribeSnapshotsCommand");
var DescribeSnapshotsCommand = _DescribeSnapshotsCommand;

// src/commands/DescribeSubnetGroupsCommand.ts




var _DescribeSubnetGroupsCommand = class _DescribeSubnetGroupsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonMemoryDB", "DescribeSubnetGroups", {}).n("MemoryDBClient", "DescribeSubnetGroupsCommand").f(void 0, void 0).ser(se_DescribeSubnetGroupsCommand).de(de_DescribeSubnetGroupsCommand).build() {
};
__name(_DescribeSubnetGroupsCommand, "DescribeSubnetGroupsCommand");
var DescribeSubnetGroupsCommand = _DescribeSubnetGroupsCommand;

// src/commands/DescribeUsersCommand.ts




var _DescribeUsersCommand = class _DescribeUsersCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonMemoryDB", "DescribeUsers", {}).n("MemoryDBClient", "DescribeUsersCommand").f(void 0, void 0).ser(se_DescribeUsersCommand).de(de_DescribeUsersCommand).build() {
};
__name(_DescribeUsersCommand, "DescribeUsersCommand");
var DescribeUsersCommand = _DescribeUsersCommand;

// src/commands/FailoverShardCommand.ts




var _FailoverShardCommand = class _FailoverShardCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonMemoryDB", "FailoverShard", {}).n("MemoryDBClient", "FailoverShardCommand").f(void 0, void 0).ser(se_FailoverShardCommand).de(de_FailoverShardCommand).build() {
};
__name(_FailoverShardCommand, "FailoverShardCommand");
var FailoverShardCommand = _FailoverShardCommand;

// src/commands/ListAllowedNodeTypeUpdatesCommand.ts




var _ListAllowedNodeTypeUpdatesCommand = class _ListAllowedNodeTypeUpdatesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonMemoryDB", "ListAllowedNodeTypeUpdates", {}).n("MemoryDBClient", "ListAllowedNodeTypeUpdatesCommand").f(void 0, void 0).ser(se_ListAllowedNodeTypeUpdatesCommand).de(de_ListAllowedNodeTypeUpdatesCommand).build() {
};
__name(_ListAllowedNodeTypeUpdatesCommand, "ListAllowedNodeTypeUpdatesCommand");
var ListAllowedNodeTypeUpdatesCommand = _ListAllowedNodeTypeUpdatesCommand;

// src/commands/ListTagsCommand.ts




var _ListTagsCommand = class _ListTagsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonMemoryDB", "ListTags", {}).n("MemoryDBClient", "ListTagsCommand").f(void 0, void 0).ser(se_ListTagsCommand).de(de_ListTagsCommand).build() {
};
__name(_ListTagsCommand, "ListTagsCommand");
var ListTagsCommand = _ListTagsCommand;

// src/commands/PurchaseReservedNodesOfferingCommand.ts




var _PurchaseReservedNodesOfferingCommand = class _PurchaseReservedNodesOfferingCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonMemoryDB", "PurchaseReservedNodesOffering", {}).n("MemoryDBClient", "PurchaseReservedNodesOfferingCommand").f(void 0, void 0).ser(se_PurchaseReservedNodesOfferingCommand).de(de_PurchaseReservedNodesOfferingCommand).build() {
};
__name(_PurchaseReservedNodesOfferingCommand, "PurchaseReservedNodesOfferingCommand");
var PurchaseReservedNodesOfferingCommand = _PurchaseReservedNodesOfferingCommand;

// src/commands/ResetParameterGroupCommand.ts




var _ResetParameterGroupCommand = class _ResetParameterGroupCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonMemoryDB", "ResetParameterGroup", {}).n("MemoryDBClient", "ResetParameterGroupCommand").f(void 0, void 0).ser(se_ResetParameterGroupCommand).de(de_ResetParameterGroupCommand).build() {
};
__name(_ResetParameterGroupCommand, "ResetParameterGroupCommand");
var ResetParameterGroupCommand = _ResetParameterGroupCommand;

// src/commands/TagResourceCommand.ts




var _TagResourceCommand = class _TagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonMemoryDB", "TagResource", {}).n("MemoryDBClient", "TagResourceCommand").f(void 0, void 0).ser(se_TagResourceCommand).de(de_TagResourceCommand).build() {
};
__name(_TagResourceCommand, "TagResourceCommand");
var TagResourceCommand = _TagResourceCommand;

// src/commands/UntagResourceCommand.ts




var _UntagResourceCommand = class _UntagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonMemoryDB", "UntagResource", {}).n("MemoryDBClient", "UntagResourceCommand").f(void 0, void 0).ser(se_UntagResourceCommand).de(de_UntagResourceCommand).build() {
};
__name(_UntagResourceCommand, "UntagResourceCommand");
var UntagResourceCommand = _UntagResourceCommand;

// src/commands/UpdateACLCommand.ts




var _UpdateACLCommand = class _UpdateACLCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonMemoryDB", "UpdateACL", {}).n("MemoryDBClient", "UpdateACLCommand").f(void 0, void 0).ser(se_UpdateACLCommand).de(de_UpdateACLCommand).build() {
};
__name(_UpdateACLCommand, "UpdateACLCommand");
var UpdateACLCommand = _UpdateACLCommand;

// src/commands/UpdateClusterCommand.ts




var _UpdateClusterCommand = class _UpdateClusterCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonMemoryDB", "UpdateCluster", {}).n("MemoryDBClient", "UpdateClusterCommand").f(void 0, void 0).ser(se_UpdateClusterCommand).de(de_UpdateClusterCommand).build() {
};
__name(_UpdateClusterCommand, "UpdateClusterCommand");
var UpdateClusterCommand = _UpdateClusterCommand;

// src/commands/UpdateParameterGroupCommand.ts




var _UpdateParameterGroupCommand = class _UpdateParameterGroupCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonMemoryDB", "UpdateParameterGroup", {}).n("MemoryDBClient", "UpdateParameterGroupCommand").f(void 0, void 0).ser(se_UpdateParameterGroupCommand).de(de_UpdateParameterGroupCommand).build() {
};
__name(_UpdateParameterGroupCommand, "UpdateParameterGroupCommand");
var UpdateParameterGroupCommand = _UpdateParameterGroupCommand;

// src/commands/UpdateSubnetGroupCommand.ts




var _UpdateSubnetGroupCommand = class _UpdateSubnetGroupCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonMemoryDB", "UpdateSubnetGroup", {}).n("MemoryDBClient", "UpdateSubnetGroupCommand").f(void 0, void 0).ser(se_UpdateSubnetGroupCommand).de(de_UpdateSubnetGroupCommand).build() {
};
__name(_UpdateSubnetGroupCommand, "UpdateSubnetGroupCommand");
var UpdateSubnetGroupCommand = _UpdateSubnetGroupCommand;

// src/commands/UpdateUserCommand.ts




var _UpdateUserCommand = class _UpdateUserCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonMemoryDB", "UpdateUser", {}).n("MemoryDBClient", "UpdateUserCommand").f(void 0, void 0).ser(se_UpdateUserCommand).de(de_UpdateUserCommand).build() {
};
__name(_UpdateUserCommand, "UpdateUserCommand");
var UpdateUserCommand = _UpdateUserCommand;

// src/MemoryDB.ts
var commands = {
  BatchUpdateClusterCommand,
  CopySnapshotCommand,
  CreateACLCommand,
  CreateClusterCommand,
  CreateParameterGroupCommand,
  CreateSnapshotCommand,
  CreateSubnetGroupCommand,
  CreateUserCommand,
  DeleteACLCommand,
  DeleteClusterCommand,
  DeleteParameterGroupCommand,
  DeleteSnapshotCommand,
  DeleteSubnetGroupCommand,
  DeleteUserCommand,
  DescribeACLsCommand,
  DescribeClustersCommand,
  DescribeEngineVersionsCommand,
  DescribeEventsCommand,
  DescribeParameterGroupsCommand,
  DescribeParametersCommand,
  DescribeReservedNodesCommand,
  DescribeReservedNodesOfferingsCommand,
  DescribeServiceUpdatesCommand,
  DescribeSnapshotsCommand,
  DescribeSubnetGroupsCommand,
  DescribeUsersCommand,
  FailoverShardCommand,
  ListAllowedNodeTypeUpdatesCommand,
  ListTagsCommand,
  PurchaseReservedNodesOfferingCommand,
  ResetParameterGroupCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateACLCommand,
  UpdateClusterCommand,
  UpdateParameterGroupCommand,
  UpdateSubnetGroupCommand,
  UpdateUserCommand
};
var _MemoryDB = class _MemoryDB extends MemoryDBClient {
};
__name(_MemoryDB, "MemoryDB");
var MemoryDB = _MemoryDB;
(0, import_smithy_client.createAggregatedClient)(commands, MemoryDB);

// src/pagination/DescribeACLsPaginator.ts

var paginateDescribeACLs = (0, import_core.createPaginator)(MemoryDBClient, DescribeACLsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/DescribeClustersPaginator.ts

var paginateDescribeClusters = (0, import_core.createPaginator)(MemoryDBClient, DescribeClustersCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/DescribeEngineVersionsPaginator.ts

var paginateDescribeEngineVersions = (0, import_core.createPaginator)(MemoryDBClient, DescribeEngineVersionsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/DescribeEventsPaginator.ts

var paginateDescribeEvents = (0, import_core.createPaginator)(MemoryDBClient, DescribeEventsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/DescribeParameterGroupsPaginator.ts

var paginateDescribeParameterGroups = (0, import_core.createPaginator)(MemoryDBClient, DescribeParameterGroupsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/DescribeParametersPaginator.ts

var paginateDescribeParameters = (0, import_core.createPaginator)(MemoryDBClient, DescribeParametersCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/DescribeReservedNodesOfferingsPaginator.ts

var paginateDescribeReservedNodesOfferings = (0, import_core.createPaginator)(MemoryDBClient, DescribeReservedNodesOfferingsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/DescribeReservedNodesPaginator.ts

var paginateDescribeReservedNodes = (0, import_core.createPaginator)(MemoryDBClient, DescribeReservedNodesCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/DescribeServiceUpdatesPaginator.ts

var paginateDescribeServiceUpdates = (0, import_core.createPaginator)(MemoryDBClient, DescribeServiceUpdatesCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/DescribeSnapshotsPaginator.ts

var paginateDescribeSnapshots = (0, import_core.createPaginator)(MemoryDBClient, DescribeSnapshotsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/DescribeSubnetGroupsPaginator.ts

var paginateDescribeSubnetGroups = (0, import_core.createPaginator)(MemoryDBClient, DescribeSubnetGroupsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/DescribeUsersPaginator.ts

var paginateDescribeUsers = (0, import_core.createPaginator)(MemoryDBClient, DescribeUsersCommand, "NextToken", "NextToken", "MaxResults");

// src/index.ts
var import_util_endpoints = require("@aws-sdk/util-endpoints");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  MemoryDBServiceException,
  __Client,
  MemoryDBClient,
  MemoryDB,
  $Command,
  BatchUpdateClusterCommand,
  CopySnapshotCommand,
  CreateACLCommand,
  CreateClusterCommand,
  CreateParameterGroupCommand,
  CreateSnapshotCommand,
  CreateSubnetGroupCommand,
  CreateUserCommand,
  DeleteACLCommand,
  DeleteClusterCommand,
  DeleteParameterGroupCommand,
  DeleteSnapshotCommand,
  DeleteSubnetGroupCommand,
  DeleteUserCommand,
  DescribeACLsCommand,
  DescribeClustersCommand,
  DescribeEngineVersionsCommand,
  DescribeEventsCommand,
  DescribeParameterGroupsCommand,
  DescribeParametersCommand,
  DescribeReservedNodesCommand,
  DescribeReservedNodesOfferingsCommand,
  DescribeServiceUpdatesCommand,
  DescribeSnapshotsCommand,
  DescribeSubnetGroupsCommand,
  DescribeUsersCommand,
  FailoverShardCommand,
  ListAllowedNodeTypeUpdatesCommand,
  ListTagsCommand,
  PurchaseReservedNodesOfferingCommand,
  ResetParameterGroupCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateACLCommand,
  UpdateClusterCommand,
  UpdateParameterGroupCommand,
  UpdateSubnetGroupCommand,
  UpdateUserCommand,
  paginateDescribeACLs,
  paginateDescribeClusters,
  paginateDescribeEngineVersions,
  paginateDescribeEvents,
  paginateDescribeParameterGroups,
  paginateDescribeParameters,
  paginateDescribeReservedNodesOfferings,
  paginateDescribeReservedNodes,
  paginateDescribeServiceUpdates,
  paginateDescribeSnapshots,
  paginateDescribeSubnetGroups,
  paginateDescribeUsers,
  ACLAlreadyExistsFault,
  ACLNotFoundFault,
  ACLQuotaExceededFault,
  AZStatus,
  DataTieringStatus,
  ServiceUpdateStatus,
  InvalidParameterValueException,
  ServiceUpdateNotFoundFault,
  InvalidParameterCombinationException,
  InvalidSnapshotStateFault,
  ServiceLinkedRoleNotFoundFault,
  SnapshotAlreadyExistsFault,
  SnapshotNotFoundFault,
  SnapshotQuotaExceededFault,
  TagQuotaPerResourceExceeded,
  DefaultUserRequired,
  DuplicateUserNameFault,
  UserNotFoundFault,
  ClusterAlreadyExistsFault,
  ClusterQuotaForCustomerExceededFault,
  InsufficientClusterCapacityFault,
  InvalidACLStateFault,
  InvalidCredentialsException,
  InvalidVPCNetworkStateFault,
  NodeQuotaForClusterExceededFault,
  NodeQuotaForCustomerExceededFault,
  ParameterGroupNotFoundFault,
  ShardsPerClusterQuotaExceededFault,
  SubnetGroupNotFoundFault,
  InvalidParameterGroupStateFault,
  ParameterGroupAlreadyExistsFault,
  ParameterGroupQuotaExceededFault,
  ClusterNotFoundFault,
  InvalidClusterStateFault,
  InvalidSubnet,
  SubnetGroupAlreadyExistsFault,
  SubnetGroupQuotaExceededFault,
  SubnetNotAllowedFault,
  SubnetQuotaExceededFault,
  InputAuthenticationType,
  AuthenticationType,
  UserAlreadyExistsFault,
  UserQuotaExceededFault,
  SubnetGroupInUseFault,
  InvalidUserStateFault,
  SourceType,
  ReservedNodeNotFoundFault,
  ReservedNodesOfferingNotFoundFault,
  ServiceUpdateType,
  APICallRateForCustomerExceededFault,
  InvalidKMSKeyFault,
  ShardNotFoundFault,
  TestFailoverNotAvailableFault,
  InvalidARNFault,
  ReservedNodeAlreadyExistsFault,
  ReservedNodeQuotaExceededFault,
  TagNotFoundFault,
  InvalidNodeStateFault,
  NoOperationFault,
  SubnetInUse
});

