import { MemoryDBServiceException as __BaseException } from "./MemoryDBServiceException";
export class ACLAlreadyExistsFault extends __BaseException {
    constructor(opts) {
        super({
            name: "ACLAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ACLAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ACLAlreadyExistsFault.prototype);
    }
}
export class ACLNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "ACLNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ACLNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ACLNotFoundFault.prototype);
    }
}
export class ACLQuotaExceededFault extends __BaseException {
    constructor(opts) {
        super({
            name: "ACLQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ACLQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ACLQuotaExceededFault.prototype);
    }
}
export const AZStatus = {
    MultiAZ: "multiaz",
    SingleAZ: "singleaz",
};
export const DataTieringStatus = {
    FALSE: "false",
    TRUE: "true",
};
export const ServiceUpdateStatus = {
    COMPLETE: "complete",
    IN_PROGRESS: "in-progress",
    NOT_APPLIED: "available",
    SCHEDULED: "scheduled",
};
export class InvalidParameterValueException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidParameterValueException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidParameterValueException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidParameterValueException.prototype);
    }
}
export class ServiceUpdateNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "ServiceUpdateNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ServiceUpdateNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ServiceUpdateNotFoundFault.prototype);
    }
}
export class InvalidParameterCombinationException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidParameterCombinationException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidParameterCombinationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidParameterCombinationException.prototype);
    }
}
export class InvalidSnapshotStateFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidSnapshotStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidSnapshotStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidSnapshotStateFault.prototype);
    }
}
export class ServiceLinkedRoleNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "ServiceLinkedRoleNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ServiceLinkedRoleNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ServiceLinkedRoleNotFoundFault.prototype);
    }
}
export class SnapshotAlreadyExistsFault extends __BaseException {
    constructor(opts) {
        super({
            name: "SnapshotAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SnapshotAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SnapshotAlreadyExistsFault.prototype);
    }
}
export class SnapshotNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "SnapshotNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SnapshotNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SnapshotNotFoundFault.prototype);
    }
}
export class SnapshotQuotaExceededFault extends __BaseException {
    constructor(opts) {
        super({
            name: "SnapshotQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SnapshotQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SnapshotQuotaExceededFault.prototype);
    }
}
export class TagQuotaPerResourceExceeded extends __BaseException {
    constructor(opts) {
        super({
            name: "TagQuotaPerResourceExceeded",
            $fault: "client",
            ...opts,
        });
        this.name = "TagQuotaPerResourceExceeded";
        this.$fault = "client";
        Object.setPrototypeOf(this, TagQuotaPerResourceExceeded.prototype);
    }
}
export class DefaultUserRequired extends __BaseException {
    constructor(opts) {
        super({
            name: "DefaultUserRequired",
            $fault: "client",
            ...opts,
        });
        this.name = "DefaultUserRequired";
        this.$fault = "client";
        Object.setPrototypeOf(this, DefaultUserRequired.prototype);
    }
}
export class DuplicateUserNameFault extends __BaseException {
    constructor(opts) {
        super({
            name: "DuplicateUserNameFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DuplicateUserNameFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DuplicateUserNameFault.prototype);
    }
}
export class UserNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "UserNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "UserNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, UserNotFoundFault.prototype);
    }
}
export class ClusterAlreadyExistsFault extends __BaseException {
    constructor(opts) {
        super({
            name: "ClusterAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ClusterAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ClusterAlreadyExistsFault.prototype);
    }
}
export class ClusterQuotaForCustomerExceededFault extends __BaseException {
    constructor(opts) {
        super({
            name: "ClusterQuotaForCustomerExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ClusterQuotaForCustomerExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ClusterQuotaForCustomerExceededFault.prototype);
    }
}
export class InsufficientClusterCapacityFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InsufficientClusterCapacityFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InsufficientClusterCapacityFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InsufficientClusterCapacityFault.prototype);
    }
}
export class InvalidACLStateFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidACLStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidACLStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidACLStateFault.prototype);
    }
}
export class InvalidCredentialsException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidCredentialsException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidCredentialsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidCredentialsException.prototype);
    }
}
export class InvalidVPCNetworkStateFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidVPCNetworkStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidVPCNetworkStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidVPCNetworkStateFault.prototype);
    }
}
export class NodeQuotaForClusterExceededFault extends __BaseException {
    constructor(opts) {
        super({
            name: "NodeQuotaForClusterExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "NodeQuotaForClusterExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, NodeQuotaForClusterExceededFault.prototype);
    }
}
export class NodeQuotaForCustomerExceededFault extends __BaseException {
    constructor(opts) {
        super({
            name: "NodeQuotaForCustomerExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "NodeQuotaForCustomerExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, NodeQuotaForCustomerExceededFault.prototype);
    }
}
export class ParameterGroupNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "ParameterGroupNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ParameterGroupNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ParameterGroupNotFoundFault.prototype);
    }
}
export class ShardsPerClusterQuotaExceededFault extends __BaseException {
    constructor(opts) {
        super({
            name: "ShardsPerClusterQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ShardsPerClusterQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ShardsPerClusterQuotaExceededFault.prototype);
    }
}
export class SubnetGroupNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "SubnetGroupNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SubnetGroupNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SubnetGroupNotFoundFault.prototype);
    }
}
export class InvalidParameterGroupStateFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidParameterGroupStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidParameterGroupStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidParameterGroupStateFault.prototype);
    }
}
export class ParameterGroupAlreadyExistsFault extends __BaseException {
    constructor(opts) {
        super({
            name: "ParameterGroupAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ParameterGroupAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ParameterGroupAlreadyExistsFault.prototype);
    }
}
export class ParameterGroupQuotaExceededFault extends __BaseException {
    constructor(opts) {
        super({
            name: "ParameterGroupQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ParameterGroupQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ParameterGroupQuotaExceededFault.prototype);
    }
}
export class ClusterNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "ClusterNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ClusterNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ClusterNotFoundFault.prototype);
    }
}
export class InvalidClusterStateFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidClusterStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidClusterStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidClusterStateFault.prototype);
    }
}
export class InvalidSubnet extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidSubnet",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidSubnet";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidSubnet.prototype);
    }
}
export class SubnetGroupAlreadyExistsFault extends __BaseException {
    constructor(opts) {
        super({
            name: "SubnetGroupAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SubnetGroupAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SubnetGroupAlreadyExistsFault.prototype);
    }
}
export class SubnetGroupQuotaExceededFault extends __BaseException {
    constructor(opts) {
        super({
            name: "SubnetGroupQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SubnetGroupQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SubnetGroupQuotaExceededFault.prototype);
    }
}
export class SubnetNotAllowedFault extends __BaseException {
    constructor(opts) {
        super({
            name: "SubnetNotAllowedFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SubnetNotAllowedFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SubnetNotAllowedFault.prototype);
    }
}
export class SubnetQuotaExceededFault extends __BaseException {
    constructor(opts) {
        super({
            name: "SubnetQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SubnetQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SubnetQuotaExceededFault.prototype);
    }
}
export const InputAuthenticationType = {
    IAM: "iam",
    PASSWORD: "password",
};
export const AuthenticationType = {
    IAM: "iam",
    NO_PASSWORD: "no-password",
    PASSWORD: "password",
};
export class UserAlreadyExistsFault extends __BaseException {
    constructor(opts) {
        super({
            name: "UserAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "UserAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, UserAlreadyExistsFault.prototype);
    }
}
export class UserQuotaExceededFault extends __BaseException {
    constructor(opts) {
        super({
            name: "UserQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "UserQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, UserQuotaExceededFault.prototype);
    }
}
export class SubnetGroupInUseFault extends __BaseException {
    constructor(opts) {
        super({
            name: "SubnetGroupInUseFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SubnetGroupInUseFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SubnetGroupInUseFault.prototype);
    }
}
export class InvalidUserStateFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidUserStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidUserStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidUserStateFault.prototype);
    }
}
export const SourceType = {
    acl: "acl",
    cluster: "cluster",
    node: "node",
    parameter_group: "parameter-group",
    subnet_group: "subnet-group",
    user: "user",
};
export class ReservedNodeNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "ReservedNodeNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ReservedNodeNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ReservedNodeNotFoundFault.prototype);
    }
}
export class ReservedNodesOfferingNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "ReservedNodesOfferingNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ReservedNodesOfferingNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ReservedNodesOfferingNotFoundFault.prototype);
    }
}
export const ServiceUpdateType = {
    SECURITY_UPDATE: "security-update",
};
export class APICallRateForCustomerExceededFault extends __BaseException {
    constructor(opts) {
        super({
            name: "APICallRateForCustomerExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "APICallRateForCustomerExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, APICallRateForCustomerExceededFault.prototype);
    }
}
export class InvalidKMSKeyFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidKMSKeyFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidKMSKeyFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidKMSKeyFault.prototype);
    }
}
export class ShardNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "ShardNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ShardNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ShardNotFoundFault.prototype);
    }
}
export class TestFailoverNotAvailableFault extends __BaseException {
    constructor(opts) {
        super({
            name: "TestFailoverNotAvailableFault",
            $fault: "client",
            ...opts,
        });
        this.name = "TestFailoverNotAvailableFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, TestFailoverNotAvailableFault.prototype);
    }
}
export class InvalidARNFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidARNFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidARNFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidARNFault.prototype);
    }
}
export class ReservedNodeAlreadyExistsFault extends __BaseException {
    constructor(opts) {
        super({
            name: "ReservedNodeAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ReservedNodeAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ReservedNodeAlreadyExistsFault.prototype);
    }
}
export class ReservedNodeQuotaExceededFault extends __BaseException {
    constructor(opts) {
        super({
            name: "ReservedNodeQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ReservedNodeQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ReservedNodeQuotaExceededFault.prototype);
    }
}
export class TagNotFoundFault extends __BaseException {
    constructor(opts) {
        super({
            name: "TagNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "TagNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, TagNotFoundFault.prototype);
    }
}
export class InvalidNodeStateFault extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidNodeStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidNodeStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidNodeStateFault.prototype);
    }
}
export class NoOperationFault extends __BaseException {
    constructor(opts) {
        super({
            name: "NoOperationFault",
            $fault: "client",
            ...opts,
        });
        this.name = "NoOperationFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, NoOperationFault.prototype);
    }
}
export class SubnetInUse extends __BaseException {
    constructor(opts) {
        super({
            name: "SubnetInUse",
            $fault: "client",
            ...opts,
        });
        this.name = "SubnetInUse";
        this.$fault = "client";
        Object.setPrototypeOf(this, SubnetInUse.prototype);
    }
}
