import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import { CreatePerformanceAnalysisReportRequest, CreatePerformanceAnalysisReportResponse } from "../models/models_0";
import { PIClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../PIClient";
/**
 * @public
 */
export { __MetadataBearer, $Command };
/**
 * @public
 *
 * The input for {@link CreatePerformanceAnalysisReportCommand}.
 */
export interface CreatePerformanceAnalysisReportCommandInput extends CreatePerformanceAnalysisReportRequest {
}
/**
 * @public
 *
 * The output of {@link CreatePerformanceAnalysisReportCommand}.
 */
export interface CreatePerformanceAnalysisReportCommandOutput extends CreatePerformanceAnalysisReportResponse, __MetadataBearer {
}
declare const CreatePerformanceAnalysisReportCommand_base: {
    new (input: CreatePerformanceAnalysisReportCommandInput): import("@smithy/smithy-client").CommandImpl<CreatePerformanceAnalysisReportCommandInput, CreatePerformanceAnalysisReportCommandOutput, PIClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    new (__0_0: CreatePerformanceAnalysisReportCommandInput): import("@smithy/smithy-client").CommandImpl<CreatePerformanceAnalysisReportCommandInput, CreatePerformanceAnalysisReportCommandOutput, PIClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
/**
 * <p>Creates a new performance analysis report for a specific time period for the
 *             DB instance.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { PIClient, CreatePerformanceAnalysisReportCommand } from "@aws-sdk/client-pi"; // ES Modules import
 * // const { PIClient, CreatePerformanceAnalysisReportCommand } = require("@aws-sdk/client-pi"); // CommonJS import
 * const client = new PIClient(config);
 * const input = { // CreatePerformanceAnalysisReportRequest
 *   ServiceType: "RDS" || "DOCDB", // required
 *   Identifier: "STRING_VALUE", // required
 *   StartTime: new Date("TIMESTAMP"), // required
 *   EndTime: new Date("TIMESTAMP"), // required
 *   Tags: [ // TagList
 *     { // Tag
 *       Key: "STRING_VALUE", // required
 *       Value: "STRING_VALUE", // required
 *     },
 *   ],
 * };
 * const command = new CreatePerformanceAnalysisReportCommand(input);
 * const response = await client.send(command);
 * // { // CreatePerformanceAnalysisReportResponse
 * //   AnalysisReportId: "STRING_VALUE",
 * // };
 *
 * ```
 *
 * @param CreatePerformanceAnalysisReportCommandInput - {@link CreatePerformanceAnalysisReportCommandInput}
 * @returns {@link CreatePerformanceAnalysisReportCommandOutput}
 * @see {@link CreatePerformanceAnalysisReportCommandInput} for command's `input` shape.
 * @see {@link CreatePerformanceAnalysisReportCommandOutput} for command's `response` shape.
 * @see {@link PIClientResolvedConfig | config} for PIClient's `config` shape.
 *
 * @throws {@link InternalServiceError} (server fault)
 *  <p>The request failed due to an unknown error.</p>
 *
 * @throws {@link InvalidArgumentException} (client fault)
 *  <p>One of the arguments provided is invalid for this request.</p>
 *
 * @throws {@link NotAuthorizedException} (client fault)
 *  <p>The user is not authorized to perform this request.</p>
 *
 * @throws {@link PIServiceException}
 * <p>Base exception class for all service exceptions from PI service.</p>
 *
 * @public
 */
export declare class CreatePerformanceAnalysisReportCommand extends CreatePerformanceAnalysisReportCommand_base {
}
