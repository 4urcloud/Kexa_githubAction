import { SENSITIVE_STRING } from "@smithy/smithy-client";
import { PIServiceException as __BaseException } from "./PIServiceException";
export const AcceptLanguage = {
    EN_US: "EN_US",
};
export const ContextType = {
    CAUSAL: "CAUSAL",
    CONTEXTUAL: "CONTEXTUAL",
};
export const Severity = {
    HIGH: "HIGH",
    LOW: "LOW",
    MEDIUM: "MEDIUM",
};
export const ServiceType = {
    DOCDB: "DOCDB",
    RDS: "RDS",
};
export const AnalysisStatus = {
    FAILED: "FAILED",
    RUNNING: "RUNNING",
    SUCCEEDED: "SUCCEEDED",
};
export class InternalServiceError extends __BaseException {
    constructor(opts) {
        super({
            name: "InternalServiceError",
            $fault: "server",
            ...opts,
        });
        this.name = "InternalServiceError";
        this.$fault = "server";
        Object.setPrototypeOf(this, InternalServiceError.prototype);
        this.Message = opts.Message;
    }
}
export class InvalidArgumentException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidArgumentException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidArgumentException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidArgumentException.prototype);
        this.Message = opts.Message;
    }
}
export class NotAuthorizedException extends __BaseException {
    constructor(opts) {
        super({
            name: "NotAuthorizedException",
            $fault: "client",
            ...opts,
        });
        this.name = "NotAuthorizedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, NotAuthorizedException.prototype);
        this.Message = opts.Message;
    }
}
export const DetailStatus = {
    AVAILABLE: "AVAILABLE",
    PROCESSING: "PROCESSING",
    UNAVAILABLE: "UNAVAILABLE",
};
export const FeatureStatus = {
    DISABLED: "DISABLED",
    DISABLED_PENDING_REBOOT: "DISABLED_PENDING_REBOOT",
    ENABLED: "ENABLED",
    ENABLED_PENDING_REBOOT: "ENABLED_PENDING_REBOOT",
    UNKNOWN: "UNKNOWN",
    UNSUPPORTED: "UNSUPPORTED",
};
export const TextFormat = {
    MARKDOWN: "MARKDOWN",
    PLAIN_TEXT: "PLAIN_TEXT",
};
export const PeriodAlignment = {
    END_TIME: "END_TIME",
    START_TIME: "START_TIME",
};
export const RecommendationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.RecommendationDescription && { RecommendationDescription: SENSITIVE_STRING }),
});
export const InsightFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.SupportingInsights && {
        SupportingInsights: obj.SupportingInsights.map((item) => InsightFilterSensitiveLog(item)),
    }),
    ...(obj.Description && { Description: SENSITIVE_STRING }),
    ...(obj.Recommendations && {
        Recommendations: obj.Recommendations.map((item) => RecommendationFilterSensitiveLog(item)),
    }),
});
export const AnalysisReportFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Insights && { Insights: obj.Insights.map((item) => InsightFilterSensitiveLog(item)) }),
});
export const GetPerformanceAnalysisReportResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.AnalysisReport && { AnalysisReport: AnalysisReportFilterSensitiveLog(obj.AnalysisReport) }),
});
