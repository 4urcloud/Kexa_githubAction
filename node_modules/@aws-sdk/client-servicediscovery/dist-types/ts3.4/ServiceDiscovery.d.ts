import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import {
  CreateHttpNamespaceCommandInput,
  CreateHttpNamespaceCommandOutput,
} from "./commands/CreateHttpNamespaceCommand";
import {
  CreatePrivateDnsNamespaceCommandInput,
  CreatePrivateDnsNamespaceCommandOutput,
} from "./commands/CreatePrivateDnsNamespaceCommand";
import {
  CreatePublicDnsNamespaceCommandInput,
  CreatePublicDnsNamespaceCommandOutput,
} from "./commands/CreatePublicDnsNamespaceCommand";
import {
  CreateServiceCommandInput,
  CreateServiceCommandOutput,
} from "./commands/CreateServiceCommand";
import {
  DeleteNamespaceCommandInput,
  DeleteNamespaceCommandOutput,
} from "./commands/DeleteNamespaceCommand";
import {
  DeleteServiceCommandInput,
  DeleteServiceCommandOutput,
} from "./commands/DeleteServiceCommand";
import {
  DeregisterInstanceCommandInput,
  DeregisterInstanceCommandOutput,
} from "./commands/DeregisterInstanceCommand";
import {
  DiscoverInstancesCommandInput,
  DiscoverInstancesCommandOutput,
} from "./commands/DiscoverInstancesCommand";
import {
  DiscoverInstancesRevisionCommandInput,
  DiscoverInstancesRevisionCommandOutput,
} from "./commands/DiscoverInstancesRevisionCommand";
import {
  GetInstanceCommandInput,
  GetInstanceCommandOutput,
} from "./commands/GetInstanceCommand";
import {
  GetInstancesHealthStatusCommandInput,
  GetInstancesHealthStatusCommandOutput,
} from "./commands/GetInstancesHealthStatusCommand";
import {
  GetNamespaceCommandInput,
  GetNamespaceCommandOutput,
} from "./commands/GetNamespaceCommand";
import {
  GetOperationCommandInput,
  GetOperationCommandOutput,
} from "./commands/GetOperationCommand";
import {
  GetServiceCommandInput,
  GetServiceCommandOutput,
} from "./commands/GetServiceCommand";
import {
  ListInstancesCommandInput,
  ListInstancesCommandOutput,
} from "./commands/ListInstancesCommand";
import {
  ListNamespacesCommandInput,
  ListNamespacesCommandOutput,
} from "./commands/ListNamespacesCommand";
import {
  ListOperationsCommandInput,
  ListOperationsCommandOutput,
} from "./commands/ListOperationsCommand";
import {
  ListServicesCommandInput,
  ListServicesCommandOutput,
} from "./commands/ListServicesCommand";
import {
  ListTagsForResourceCommandInput,
  ListTagsForResourceCommandOutput,
} from "./commands/ListTagsForResourceCommand";
import {
  RegisterInstanceCommandInput,
  RegisterInstanceCommandOutput,
} from "./commands/RegisterInstanceCommand";
import {
  TagResourceCommandInput,
  TagResourceCommandOutput,
} from "./commands/TagResourceCommand";
import {
  UntagResourceCommandInput,
  UntagResourceCommandOutput,
} from "./commands/UntagResourceCommand";
import {
  UpdateHttpNamespaceCommandInput,
  UpdateHttpNamespaceCommandOutput,
} from "./commands/UpdateHttpNamespaceCommand";
import {
  UpdateInstanceCustomHealthStatusCommandInput,
  UpdateInstanceCustomHealthStatusCommandOutput,
} from "./commands/UpdateInstanceCustomHealthStatusCommand";
import {
  UpdatePrivateDnsNamespaceCommandInput,
  UpdatePrivateDnsNamespaceCommandOutput,
} from "./commands/UpdatePrivateDnsNamespaceCommand";
import {
  UpdatePublicDnsNamespaceCommandInput,
  UpdatePublicDnsNamespaceCommandOutput,
} from "./commands/UpdatePublicDnsNamespaceCommand";
import {
  UpdateServiceCommandInput,
  UpdateServiceCommandOutput,
} from "./commands/UpdateServiceCommand";
import { ServiceDiscoveryClient } from "./ServiceDiscoveryClient";
export interface ServiceDiscovery {
  createHttpNamespace(
    args: CreateHttpNamespaceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateHttpNamespaceCommandOutput>;
  createHttpNamespace(
    args: CreateHttpNamespaceCommandInput,
    cb: (err: any, data?: CreateHttpNamespaceCommandOutput) => void
  ): void;
  createHttpNamespace(
    args: CreateHttpNamespaceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateHttpNamespaceCommandOutput) => void
  ): void;
  createPrivateDnsNamespace(
    args: CreatePrivateDnsNamespaceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreatePrivateDnsNamespaceCommandOutput>;
  createPrivateDnsNamespace(
    args: CreatePrivateDnsNamespaceCommandInput,
    cb: (err: any, data?: CreatePrivateDnsNamespaceCommandOutput) => void
  ): void;
  createPrivateDnsNamespace(
    args: CreatePrivateDnsNamespaceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreatePrivateDnsNamespaceCommandOutput) => void
  ): void;
  createPublicDnsNamespace(
    args: CreatePublicDnsNamespaceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreatePublicDnsNamespaceCommandOutput>;
  createPublicDnsNamespace(
    args: CreatePublicDnsNamespaceCommandInput,
    cb: (err: any, data?: CreatePublicDnsNamespaceCommandOutput) => void
  ): void;
  createPublicDnsNamespace(
    args: CreatePublicDnsNamespaceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreatePublicDnsNamespaceCommandOutput) => void
  ): void;
  createService(
    args: CreateServiceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateServiceCommandOutput>;
  createService(
    args: CreateServiceCommandInput,
    cb: (err: any, data?: CreateServiceCommandOutput) => void
  ): void;
  createService(
    args: CreateServiceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateServiceCommandOutput) => void
  ): void;
  deleteNamespace(
    args: DeleteNamespaceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteNamespaceCommandOutput>;
  deleteNamespace(
    args: DeleteNamespaceCommandInput,
    cb: (err: any, data?: DeleteNamespaceCommandOutput) => void
  ): void;
  deleteNamespace(
    args: DeleteNamespaceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteNamespaceCommandOutput) => void
  ): void;
  deleteService(
    args: DeleteServiceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteServiceCommandOutput>;
  deleteService(
    args: DeleteServiceCommandInput,
    cb: (err: any, data?: DeleteServiceCommandOutput) => void
  ): void;
  deleteService(
    args: DeleteServiceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteServiceCommandOutput) => void
  ): void;
  deregisterInstance(
    args: DeregisterInstanceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeregisterInstanceCommandOutput>;
  deregisterInstance(
    args: DeregisterInstanceCommandInput,
    cb: (err: any, data?: DeregisterInstanceCommandOutput) => void
  ): void;
  deregisterInstance(
    args: DeregisterInstanceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeregisterInstanceCommandOutput) => void
  ): void;
  discoverInstances(
    args: DiscoverInstancesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DiscoverInstancesCommandOutput>;
  discoverInstances(
    args: DiscoverInstancesCommandInput,
    cb: (err: any, data?: DiscoverInstancesCommandOutput) => void
  ): void;
  discoverInstances(
    args: DiscoverInstancesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DiscoverInstancesCommandOutput) => void
  ): void;
  discoverInstancesRevision(
    args: DiscoverInstancesRevisionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DiscoverInstancesRevisionCommandOutput>;
  discoverInstancesRevision(
    args: DiscoverInstancesRevisionCommandInput,
    cb: (err: any, data?: DiscoverInstancesRevisionCommandOutput) => void
  ): void;
  discoverInstancesRevision(
    args: DiscoverInstancesRevisionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DiscoverInstancesRevisionCommandOutput) => void
  ): void;
  getInstance(
    args: GetInstanceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetInstanceCommandOutput>;
  getInstance(
    args: GetInstanceCommandInput,
    cb: (err: any, data?: GetInstanceCommandOutput) => void
  ): void;
  getInstance(
    args: GetInstanceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetInstanceCommandOutput) => void
  ): void;
  getInstancesHealthStatus(
    args: GetInstancesHealthStatusCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetInstancesHealthStatusCommandOutput>;
  getInstancesHealthStatus(
    args: GetInstancesHealthStatusCommandInput,
    cb: (err: any, data?: GetInstancesHealthStatusCommandOutput) => void
  ): void;
  getInstancesHealthStatus(
    args: GetInstancesHealthStatusCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetInstancesHealthStatusCommandOutput) => void
  ): void;
  getNamespace(
    args: GetNamespaceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetNamespaceCommandOutput>;
  getNamespace(
    args: GetNamespaceCommandInput,
    cb: (err: any, data?: GetNamespaceCommandOutput) => void
  ): void;
  getNamespace(
    args: GetNamespaceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetNamespaceCommandOutput) => void
  ): void;
  getOperation(
    args: GetOperationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetOperationCommandOutput>;
  getOperation(
    args: GetOperationCommandInput,
    cb: (err: any, data?: GetOperationCommandOutput) => void
  ): void;
  getOperation(
    args: GetOperationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetOperationCommandOutput) => void
  ): void;
  getService(
    args: GetServiceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetServiceCommandOutput>;
  getService(
    args: GetServiceCommandInput,
    cb: (err: any, data?: GetServiceCommandOutput) => void
  ): void;
  getService(
    args: GetServiceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetServiceCommandOutput) => void
  ): void;
  listInstances(
    args: ListInstancesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListInstancesCommandOutput>;
  listInstances(
    args: ListInstancesCommandInput,
    cb: (err: any, data?: ListInstancesCommandOutput) => void
  ): void;
  listInstances(
    args: ListInstancesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListInstancesCommandOutput) => void
  ): void;
  listNamespaces(
    args: ListNamespacesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListNamespacesCommandOutput>;
  listNamespaces(
    args: ListNamespacesCommandInput,
    cb: (err: any, data?: ListNamespacesCommandOutput) => void
  ): void;
  listNamespaces(
    args: ListNamespacesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListNamespacesCommandOutput) => void
  ): void;
  listOperations(
    args: ListOperationsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListOperationsCommandOutput>;
  listOperations(
    args: ListOperationsCommandInput,
    cb: (err: any, data?: ListOperationsCommandOutput) => void
  ): void;
  listOperations(
    args: ListOperationsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListOperationsCommandOutput) => void
  ): void;
  listServices(
    args: ListServicesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListServicesCommandOutput>;
  listServices(
    args: ListServicesCommandInput,
    cb: (err: any, data?: ListServicesCommandOutput) => void
  ): void;
  listServices(
    args: ListServicesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListServicesCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListTagsForResourceCommandOutput>;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  registerInstance(
    args: RegisterInstanceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<RegisterInstanceCommandOutput>;
  registerInstance(
    args: RegisterInstanceCommandInput,
    cb: (err: any, data?: RegisterInstanceCommandOutput) => void
  ): void;
  registerInstance(
    args: RegisterInstanceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: RegisterInstanceCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<TagResourceCommandOutput>;
  tagResource(
    args: TagResourceCommandInput,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UntagResourceCommandOutput>;
  untagResource(
    args: UntagResourceCommandInput,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  updateHttpNamespace(
    args: UpdateHttpNamespaceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateHttpNamespaceCommandOutput>;
  updateHttpNamespace(
    args: UpdateHttpNamespaceCommandInput,
    cb: (err: any, data?: UpdateHttpNamespaceCommandOutput) => void
  ): void;
  updateHttpNamespace(
    args: UpdateHttpNamespaceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateHttpNamespaceCommandOutput) => void
  ): void;
  updateInstanceCustomHealthStatus(
    args: UpdateInstanceCustomHealthStatusCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateInstanceCustomHealthStatusCommandOutput>;
  updateInstanceCustomHealthStatus(
    args: UpdateInstanceCustomHealthStatusCommandInput,
    cb: (err: any, data?: UpdateInstanceCustomHealthStatusCommandOutput) => void
  ): void;
  updateInstanceCustomHealthStatus(
    args: UpdateInstanceCustomHealthStatusCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateInstanceCustomHealthStatusCommandOutput) => void
  ): void;
  updatePrivateDnsNamespace(
    args: UpdatePrivateDnsNamespaceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdatePrivateDnsNamespaceCommandOutput>;
  updatePrivateDnsNamespace(
    args: UpdatePrivateDnsNamespaceCommandInput,
    cb: (err: any, data?: UpdatePrivateDnsNamespaceCommandOutput) => void
  ): void;
  updatePrivateDnsNamespace(
    args: UpdatePrivateDnsNamespaceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdatePrivateDnsNamespaceCommandOutput) => void
  ): void;
  updatePublicDnsNamespace(
    args: UpdatePublicDnsNamespaceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdatePublicDnsNamespaceCommandOutput>;
  updatePublicDnsNamespace(
    args: UpdatePublicDnsNamespaceCommandInput,
    cb: (err: any, data?: UpdatePublicDnsNamespaceCommandOutput) => void
  ): void;
  updatePublicDnsNamespace(
    args: UpdatePublicDnsNamespaceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdatePublicDnsNamespaceCommandOutput) => void
  ): void;
  updateService(
    args: UpdateServiceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateServiceCommandOutput>;
  updateService(
    args: UpdateServiceCommandInput,
    cb: (err: any, data?: UpdateServiceCommandOutput) => void
  ): void;
  updateService(
    args: UpdateServiceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateServiceCommandOutput) => void
  ): void;
}
export declare class ServiceDiscovery
  extends ServiceDiscoveryClient
  implements ServiceDiscovery {}
