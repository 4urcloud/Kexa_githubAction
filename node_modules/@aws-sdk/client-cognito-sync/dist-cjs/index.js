"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  AlreadyStreamedException: () => AlreadyStreamedException,
  BulkPublishCommand: () => BulkPublishCommand,
  BulkPublishStatus: () => BulkPublishStatus,
  CognitoSync: () => CognitoSync,
  CognitoSyncClient: () => CognitoSyncClient,
  CognitoSyncServiceException: () => CognitoSyncServiceException,
  ConcurrentModificationException: () => ConcurrentModificationException,
  DeleteDatasetCommand: () => DeleteDatasetCommand,
  DescribeDatasetCommand: () => DescribeDatasetCommand,
  DescribeIdentityPoolUsageCommand: () => DescribeIdentityPoolUsageCommand,
  DescribeIdentityUsageCommand: () => DescribeIdentityUsageCommand,
  DuplicateRequestException: () => DuplicateRequestException,
  GetBulkPublishDetailsCommand: () => GetBulkPublishDetailsCommand,
  GetCognitoEventsCommand: () => GetCognitoEventsCommand,
  GetIdentityPoolConfigurationCommand: () => GetIdentityPoolConfigurationCommand,
  InternalErrorException: () => InternalErrorException,
  InvalidConfigurationException: () => InvalidConfigurationException,
  InvalidLambdaFunctionOutputException: () => InvalidLambdaFunctionOutputException,
  InvalidParameterException: () => InvalidParameterException,
  LambdaThrottledException: () => LambdaThrottledException,
  LimitExceededException: () => LimitExceededException,
  ListDatasetsCommand: () => ListDatasetsCommand,
  ListIdentityPoolUsageCommand: () => ListIdentityPoolUsageCommand,
  ListRecordsCommand: () => ListRecordsCommand,
  NotAuthorizedException: () => NotAuthorizedException,
  Operation: () => Operation,
  Platform: () => Platform,
  RegisterDeviceCommand: () => RegisterDeviceCommand,
  ResourceConflictException: () => ResourceConflictException,
  ResourceNotFoundException: () => ResourceNotFoundException,
  SetCognitoEventsCommand: () => SetCognitoEventsCommand,
  SetIdentityPoolConfigurationCommand: () => SetIdentityPoolConfigurationCommand,
  StreamingStatus: () => StreamingStatus,
  SubscribeToDatasetCommand: () => SubscribeToDatasetCommand,
  TooManyRequestsException: () => TooManyRequestsException,
  UnsubscribeFromDatasetCommand: () => UnsubscribeFromDatasetCommand,
  UpdateRecordsCommand: () => UpdateRecordsCommand,
  __Client: () => import_smithy_client.Client
});
module.exports = __toCommonJS(src_exports);

// src/CognitoSyncClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return {
    ...options,
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "cognito-sync"
  };
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/CognitoSyncClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var asPartial = /* @__PURE__ */ __name((t) => t, "asPartial");
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = {
    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),
    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
  };
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return {
    ...runtimeConfig,
    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
  };
}, "resolveRuntimeExtensions");

// src/CognitoSyncClient.ts
var _CognitoSyncClient = class _CognitoSyncClient extends import_smithy_client.Client {
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_config_resolver.resolveRegionConfig)(_config_1);
    const _config_3 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_2);
    const _config_4 = (0, import_middleware_retry.resolveRetryConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, (configuration == null ? void 0 : configuration.extensions) || []);
    super(_config_8);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),
        identityProviderConfigProvider: this.getIdentityProviderConfigProvider()
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
  getDefaultHttpAuthSchemeParametersProvider() {
    return import_httpAuthSchemeProvider.defaultCognitoSyncHttpAuthSchemeParametersProvider;
  }
  getIdentityProviderConfigProvider() {
    return async (config) => new import_core.DefaultIdentityProviderConfig({
      "aws.auth#sigv4": config.credentials
    });
  }
};
__name(_CognitoSyncClient, "CognitoSyncClient");
var CognitoSyncClient = _CognitoSyncClient;

// src/CognitoSync.ts


// src/commands/BulkPublishCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");

var import_types = require("@smithy/types");

// src/protocols/Aws_restJson1.ts



// src/models/CognitoSyncServiceException.ts

var _CognitoSyncServiceException = class _CognitoSyncServiceException extends import_smithy_client.ServiceException {
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _CognitoSyncServiceException.prototype);
  }
};
__name(_CognitoSyncServiceException, "CognitoSyncServiceException");
var CognitoSyncServiceException = _CognitoSyncServiceException;

// src/models/models_0.ts
var _AlreadyStreamedException = class _AlreadyStreamedException extends CognitoSyncServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "AlreadyStreamedException",
      $fault: "client",
      ...opts
    });
    this.name = "AlreadyStreamedException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _AlreadyStreamedException.prototype);
  }
};
__name(_AlreadyStreamedException, "AlreadyStreamedException");
var AlreadyStreamedException = _AlreadyStreamedException;
var _DuplicateRequestException = class _DuplicateRequestException extends CognitoSyncServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "DuplicateRequestException",
      $fault: "client",
      ...opts
    });
    this.name = "DuplicateRequestException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _DuplicateRequestException.prototype);
  }
};
__name(_DuplicateRequestException, "DuplicateRequestException");
var DuplicateRequestException = _DuplicateRequestException;
var _InternalErrorException = class _InternalErrorException extends CognitoSyncServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InternalErrorException",
      $fault: "server",
      ...opts
    });
    this.name = "InternalErrorException";
    this.$fault = "server";
    Object.setPrototypeOf(this, _InternalErrorException.prototype);
  }
};
__name(_InternalErrorException, "InternalErrorException");
var InternalErrorException = _InternalErrorException;
var _InvalidParameterException = class _InvalidParameterException extends CognitoSyncServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidParameterException",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidParameterException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidParameterException.prototype);
  }
};
__name(_InvalidParameterException, "InvalidParameterException");
var InvalidParameterException = _InvalidParameterException;
var _NotAuthorizedException = class _NotAuthorizedException extends CognitoSyncServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "NotAuthorizedException",
      $fault: "client",
      ...opts
    });
    this.name = "NotAuthorizedException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _NotAuthorizedException.prototype);
  }
};
__name(_NotAuthorizedException, "NotAuthorizedException");
var NotAuthorizedException = _NotAuthorizedException;
var _ResourceNotFoundException = class _ResourceNotFoundException extends CognitoSyncServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceNotFoundException",
      $fault: "client",
      ...opts
    });
    this.name = "ResourceNotFoundException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourceNotFoundException.prototype);
  }
};
__name(_ResourceNotFoundException, "ResourceNotFoundException");
var ResourceNotFoundException = _ResourceNotFoundException;
var _ResourceConflictException = class _ResourceConflictException extends CognitoSyncServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceConflictException",
      $fault: "client",
      ...opts
    });
    this.name = "ResourceConflictException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourceConflictException.prototype);
  }
};
__name(_ResourceConflictException, "ResourceConflictException");
var ResourceConflictException = _ResourceConflictException;
var _TooManyRequestsException = class _TooManyRequestsException extends CognitoSyncServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "TooManyRequestsException",
      $fault: "client",
      ...opts
    });
    this.name = "TooManyRequestsException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _TooManyRequestsException.prototype);
  }
};
__name(_TooManyRequestsException, "TooManyRequestsException");
var TooManyRequestsException = _TooManyRequestsException;
var BulkPublishStatus = {
  FAILED: "FAILED",
  IN_PROGRESS: "IN_PROGRESS",
  NOT_STARTED: "NOT_STARTED",
  SUCCEEDED: "SUCCEEDED"
};
var StreamingStatus = {
  DISABLED: "DISABLED",
  ENABLED: "ENABLED"
};
var _InvalidConfigurationException = class _InvalidConfigurationException extends CognitoSyncServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidConfigurationException",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidConfigurationException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidConfigurationException.prototype);
  }
};
__name(_InvalidConfigurationException, "InvalidConfigurationException");
var InvalidConfigurationException = _InvalidConfigurationException;
var Platform = {
  ADM: "ADM",
  APNS: "APNS",
  APNS_SANDBOX: "APNS_SANDBOX",
  GCM: "GCM"
};
var _ConcurrentModificationException = class _ConcurrentModificationException extends CognitoSyncServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ConcurrentModificationException",
      $fault: "client",
      ...opts
    });
    this.name = "ConcurrentModificationException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ConcurrentModificationException.prototype);
  }
};
__name(_ConcurrentModificationException, "ConcurrentModificationException");
var ConcurrentModificationException = _ConcurrentModificationException;
var _InvalidLambdaFunctionOutputException = class _InvalidLambdaFunctionOutputException extends CognitoSyncServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidLambdaFunctionOutputException",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidLambdaFunctionOutputException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidLambdaFunctionOutputException.prototype);
  }
};
__name(_InvalidLambdaFunctionOutputException, "InvalidLambdaFunctionOutputException");
var InvalidLambdaFunctionOutputException = _InvalidLambdaFunctionOutputException;
var _LambdaThrottledException = class _LambdaThrottledException extends CognitoSyncServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "LambdaThrottledException",
      $fault: "client",
      ...opts
    });
    this.name = "LambdaThrottledException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _LambdaThrottledException.prototype);
  }
};
__name(_LambdaThrottledException, "LambdaThrottledException");
var LambdaThrottledException = _LambdaThrottledException;
var _LimitExceededException = class _LimitExceededException extends CognitoSyncServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "LimitExceededException",
      $fault: "client",
      ...opts
    });
    this.name = "LimitExceededException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _LimitExceededException.prototype);
  }
};
__name(_LimitExceededException, "LimitExceededException");
var LimitExceededException = _LimitExceededException;
var Operation = {
  remove: "remove",
  replace: "replace"
};

// src/protocols/Aws_restJson1.ts
var se_BulkPublishCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/identitypools/{IdentityPoolId}/bulkpublish");
  b.p("IdentityPoolId", () => input.IdentityPoolId, "{IdentityPoolId}", false);
  let body;
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_BulkPublishCommand");
var se_DeleteDatasetCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/identitypools/{IdentityPoolId}/identities/{IdentityId}/datasets/{DatasetName}");
  b.p("IdentityPoolId", () => input.IdentityPoolId, "{IdentityPoolId}", false);
  b.p("IdentityId", () => input.IdentityId, "{IdentityId}", false);
  b.p("DatasetName", () => input.DatasetName, "{DatasetName}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteDatasetCommand");
var se_DescribeDatasetCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/identitypools/{IdentityPoolId}/identities/{IdentityId}/datasets/{DatasetName}");
  b.p("IdentityPoolId", () => input.IdentityPoolId, "{IdentityPoolId}", false);
  b.p("IdentityId", () => input.IdentityId, "{IdentityId}", false);
  b.p("DatasetName", () => input.DatasetName, "{DatasetName}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeDatasetCommand");
var se_DescribeIdentityPoolUsageCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/identitypools/{IdentityPoolId}");
  b.p("IdentityPoolId", () => input.IdentityPoolId, "{IdentityPoolId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeIdentityPoolUsageCommand");
var se_DescribeIdentityUsageCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/identitypools/{IdentityPoolId}/identities/{IdentityId}");
  b.p("IdentityPoolId", () => input.IdentityPoolId, "{IdentityPoolId}", false);
  b.p("IdentityId", () => input.IdentityId, "{IdentityId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeIdentityUsageCommand");
var se_GetBulkPublishDetailsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/identitypools/{IdentityPoolId}/getBulkPublishDetails");
  b.p("IdentityPoolId", () => input.IdentityPoolId, "{IdentityPoolId}", false);
  let body;
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_GetBulkPublishDetailsCommand");
var se_GetCognitoEventsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/identitypools/{IdentityPoolId}/events");
  b.p("IdentityPoolId", () => input.IdentityPoolId, "{IdentityPoolId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetCognitoEventsCommand");
var se_GetIdentityPoolConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/identitypools/{IdentityPoolId}/configuration");
  b.p("IdentityPoolId", () => input.IdentityPoolId, "{IdentityPoolId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetIdentityPoolConfigurationCommand");
var se_ListDatasetsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/identitypools/{IdentityPoolId}/identities/{IdentityId}/datasets");
  b.p("IdentityPoolId", () => input.IdentityPoolId, "{IdentityPoolId}", false);
  b.p("IdentityId", () => input.IdentityId, "{IdentityId}", false);
  const query = (0, import_smithy_client.map)({
    [_nT]: [, input[_NT]],
    [_mR]: [() => input.MaxResults !== void 0, () => input[_MR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListDatasetsCommand");
var se_ListIdentityPoolUsageCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/identitypools");
  const query = (0, import_smithy_client.map)({
    [_nT]: [, input[_NT]],
    [_mR]: [() => input.MaxResults !== void 0, () => input[_MR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListIdentityPoolUsageCommand");
var se_ListRecordsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/identitypools/{IdentityPoolId}/identities/{IdentityId}/datasets/{DatasetName}/records");
  b.p("IdentityPoolId", () => input.IdentityPoolId, "{IdentityPoolId}", false);
  b.p("IdentityId", () => input.IdentityId, "{IdentityId}", false);
  b.p("DatasetName", () => input.DatasetName, "{DatasetName}", false);
  const query = (0, import_smithy_client.map)({
    [_lSC]: [() => input.LastSyncCount !== void 0, () => input[_LSC].toString()],
    [_nT]: [, input[_NT]],
    [_mR]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_sST]: [, input[_SST]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListRecordsCommand");
var se_RegisterDeviceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/identitypools/{IdentityPoolId}/identity/{IdentityId}/device");
  b.p("IdentityPoolId", () => input.IdentityPoolId, "{IdentityPoolId}", false);
  b.p("IdentityId", () => input.IdentityId, "{IdentityId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Platform: [],
      Token: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_RegisterDeviceCommand");
var se_SetCognitoEventsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/identitypools/{IdentityPoolId}/events");
  b.p("IdentityPoolId", () => input.IdentityPoolId, "{IdentityPoolId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Events: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_SetCognitoEventsCommand");
var se_SetIdentityPoolConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/identitypools/{IdentityPoolId}/configuration");
  b.p("IdentityPoolId", () => input.IdentityPoolId, "{IdentityPoolId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      CognitoStreams: (_) => (0, import_smithy_client._json)(_),
      PushSync: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_SetIdentityPoolConfigurationCommand");
var se_SubscribeToDatasetCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/identitypools/{IdentityPoolId}/identities/{IdentityId}/datasets/{DatasetName}/subscriptions/{DeviceId}");
  b.p("IdentityPoolId", () => input.IdentityPoolId, "{IdentityPoolId}", false);
  b.p("IdentityId", () => input.IdentityId, "{IdentityId}", false);
  b.p("DatasetName", () => input.DatasetName, "{DatasetName}", false);
  b.p("DeviceId", () => input.DeviceId, "{DeviceId}", false);
  let body;
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_SubscribeToDatasetCommand");
var se_UnsubscribeFromDatasetCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/identitypools/{IdentityPoolId}/identities/{IdentityId}/datasets/{DatasetName}/subscriptions/{DeviceId}");
  b.p("IdentityPoolId", () => input.IdentityPoolId, "{IdentityPoolId}", false);
  b.p("IdentityId", () => input.IdentityId, "{IdentityId}", false);
  b.p("DatasetName", () => input.DatasetName, "{DatasetName}", false);
  b.p("DeviceId", () => input.DeviceId, "{DeviceId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_UnsubscribeFromDatasetCommand");
var se_UpdateRecordsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = (0, import_smithy_client.map)({}, isSerializableHeaderValue, {
    "content-type": "application/json",
    [_xacc]: input[_CC]
  });
  b.bp("/identitypools/{IdentityPoolId}/identities/{IdentityId}/datasets/{DatasetName}");
  b.p("IdentityPoolId", () => input.IdentityPoolId, "{IdentityPoolId}", false);
  b.p("IdentityId", () => input.IdentityId, "{IdentityId}", false);
  b.p("DatasetName", () => input.DatasetName, "{DatasetName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      DeviceId: [],
      RecordPatches: (_) => se_RecordPatchList(_, context),
      SyncSessionToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateRecordsCommand");
var de_BulkPublishCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    IdentityPoolId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_BulkPublishCommand");
var de_DeleteDatasetCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Dataset: (_) => de_Dataset(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DeleteDatasetCommand");
var de_DescribeDatasetCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Dataset: (_) => de_Dataset(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeDatasetCommand");
var de_DescribeIdentityPoolUsageCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    IdentityPoolUsage: (_) => de_IdentityPoolUsage(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeIdentityPoolUsageCommand");
var de_DescribeIdentityUsageCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    IdentityUsage: (_) => de_IdentityUsage(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeIdentityUsageCommand");
var de_GetBulkPublishDetailsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    BulkPublishCompleteTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    BulkPublishStartTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    BulkPublishStatus: import_smithy_client.expectString,
    FailureMessage: import_smithy_client.expectString,
    IdentityPoolId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetBulkPublishDetailsCommand");
var de_GetCognitoEventsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Events: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetCognitoEventsCommand");
var de_GetIdentityPoolConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    CognitoStreams: import_smithy_client._json,
    IdentityPoolId: import_smithy_client.expectString,
    PushSync: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetIdentityPoolConfigurationCommand");
var de_ListDatasetsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Count: import_smithy_client.expectInt32,
    Datasets: (_) => de_DatasetList(_, context),
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListDatasetsCommand");
var de_ListIdentityPoolUsageCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Count: import_smithy_client.expectInt32,
    IdentityPoolUsages: (_) => de_IdentityPoolUsageList(_, context),
    MaxResults: import_smithy_client.expectInt32,
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListIdentityPoolUsageCommand");
var de_ListRecordsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Count: import_smithy_client.expectInt32,
    DatasetDeletedAfterRequestedSyncCount: import_smithy_client.expectBoolean,
    DatasetExists: import_smithy_client.expectBoolean,
    DatasetSyncCount: import_smithy_client.expectLong,
    LastModifiedBy: import_smithy_client.expectString,
    MergedDatasetNames: import_smithy_client._json,
    NextToken: import_smithy_client.expectString,
    Records: (_) => de_RecordList(_, context),
    SyncSessionToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListRecordsCommand");
var de_RegisterDeviceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    DeviceId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_RegisterDeviceCommand");
var de_SetCognitoEventsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_SetCognitoEventsCommand");
var de_SetIdentityPoolConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    CognitoStreams: import_smithy_client._json,
    IdentityPoolId: import_smithy_client.expectString,
    PushSync: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_SetIdentityPoolConfigurationCommand");
var de_SubscribeToDatasetCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_SubscribeToDatasetCommand");
var de_UnsubscribeFromDatasetCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UnsubscribeFromDatasetCommand");
var de_UpdateRecordsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Records: (_) => de_RecordList(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateRecordsCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await parseErrorBody(output.body, context)
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "AlreadyStreamedException":
    case "com.amazonaws.cognitosync#AlreadyStreamedException":
      throw await de_AlreadyStreamedExceptionRes(parsedOutput, context);
    case "DuplicateRequestException":
    case "com.amazonaws.cognitosync#DuplicateRequestException":
      throw await de_DuplicateRequestExceptionRes(parsedOutput, context);
    case "InternalErrorException":
    case "com.amazonaws.cognitosync#InternalErrorException":
      throw await de_InternalErrorExceptionRes(parsedOutput, context);
    case "InvalidParameterException":
    case "com.amazonaws.cognitosync#InvalidParameterException":
      throw await de_InvalidParameterExceptionRes(parsedOutput, context);
    case "NotAuthorizedException":
    case "com.amazonaws.cognitosync#NotAuthorizedException":
      throw await de_NotAuthorizedExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.cognitosync#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    case "ResourceConflictException":
    case "com.amazonaws.cognitosync#ResourceConflictException":
      throw await de_ResourceConflictExceptionRes(parsedOutput, context);
    case "TooManyRequestsException":
    case "com.amazonaws.cognitosync#TooManyRequestsException":
      throw await de_TooManyRequestsExceptionRes(parsedOutput, context);
    case "InvalidConfigurationException":
    case "com.amazonaws.cognitosync#InvalidConfigurationException":
      throw await de_InvalidConfigurationExceptionRes(parsedOutput, context);
    case "ConcurrentModificationException":
    case "com.amazonaws.cognitosync#ConcurrentModificationException":
      throw await de_ConcurrentModificationExceptionRes(parsedOutput, context);
    case "InvalidLambdaFunctionOutputException":
    case "com.amazonaws.cognitosync#InvalidLambdaFunctionOutputException":
      throw await de_InvalidLambdaFunctionOutputExceptionRes(parsedOutput, context);
    case "LambdaThrottledException":
    case "com.amazonaws.cognitosync#LambdaThrottledException":
      throw await de_LambdaThrottledExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.cognitosync#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var throwDefaultError = (0, import_smithy_client.withBaseException)(CognitoSyncServiceException);
var de_AlreadyStreamedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new AlreadyStreamedException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_AlreadyStreamedExceptionRes");
var de_ConcurrentModificationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ConcurrentModificationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ConcurrentModificationExceptionRes");
var de_DuplicateRequestExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new DuplicateRequestException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_DuplicateRequestExceptionRes");
var de_InternalErrorExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new InternalErrorException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_InternalErrorExceptionRes");
var de_InvalidConfigurationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new InvalidConfigurationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_InvalidConfigurationExceptionRes");
var de_InvalidLambdaFunctionOutputExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new InvalidLambdaFunctionOutputException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_InvalidLambdaFunctionOutputExceptionRes");
var de_InvalidParameterExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new InvalidParameterException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_InvalidParameterExceptionRes");
var de_LambdaThrottledExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new LambdaThrottledException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_LambdaThrottledExceptionRes");
var de_LimitExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new LimitExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_LimitExceededExceptionRes");
var de_NotAuthorizedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new NotAuthorizedException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_NotAuthorizedExceptionRes");
var de_ResourceConflictExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ResourceConflictException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ResourceConflictExceptionRes");
var de_ResourceNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ResourceNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ResourceNotFoundExceptionRes");
var de_TooManyRequestsExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new TooManyRequestsException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_TooManyRequestsExceptionRes");
var se_RecordPatch = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    DeviceLastModifiedDate: (_) => Math.round(_.getTime() / 1e3),
    Key: [],
    Op: [],
    SyncCount: [],
    Value: []
  });
}, "se_RecordPatch");
var se_RecordPatchList = /* @__PURE__ */ __name((input, context) => {
  return input.filter((e) => e != null).map((entry) => {
    return se_RecordPatch(entry, context);
  });
}, "se_RecordPatchList");
var de_Dataset = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CreationDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    DataStorage: import_smithy_client.expectLong,
    DatasetName: import_smithy_client.expectString,
    IdentityId: import_smithy_client.expectString,
    LastModifiedBy: import_smithy_client.expectString,
    LastModifiedDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    NumRecords: import_smithy_client.expectLong
  });
}, "de_Dataset");
var de_DatasetList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Dataset(entry, context);
  });
  return retVal;
}, "de_DatasetList");
var de_IdentityPoolUsage = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    DataStorage: import_smithy_client.expectLong,
    IdentityPoolId: import_smithy_client.expectString,
    LastModifiedDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    SyncSessionsCount: import_smithy_client.expectLong
  });
}, "de_IdentityPoolUsage");
var de_IdentityPoolUsageList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_IdentityPoolUsage(entry, context);
  });
  return retVal;
}, "de_IdentityPoolUsageList");
var de_IdentityUsage = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    DataStorage: import_smithy_client.expectLong,
    DatasetCount: import_smithy_client.expectInt32,
    IdentityId: import_smithy_client.expectString,
    IdentityPoolId: import_smithy_client.expectString,
    LastModifiedDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_)))
  });
}, "de_IdentityUsage");
var de__Record = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    DeviceLastModifiedDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Key: import_smithy_client.expectString,
    LastModifiedBy: import_smithy_client.expectString,
    LastModifiedDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    SyncCount: import_smithy_client.expectLong,
    Value: import_smithy_client.expectString
  });
}, "de__Record");
var de_RecordList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de__Record(entry, context);
  });
  return retVal;
}, "de_RecordList");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var collectBodyString = /* @__PURE__ */ __name((streamBody, context) => (0, import_smithy_client.collectBody)(streamBody, context).then((body) => context.utf8Encoder(body)), "collectBodyString");
var isSerializableHeaderValue = /* @__PURE__ */ __name((value) => value !== void 0 && value !== null && value !== "" && (!Object.getOwnPropertyNames(value).includes("length") || value.length != 0) && (!Object.getOwnPropertyNames(value).includes("size") || value.size != 0), "isSerializableHeaderValue");
var _CC = "ClientContext";
var _LSC = "LastSyncCount";
var _MR = "MaxResults";
var _NT = "NextToken";
var _SST = "SyncSessionToken";
var _lSC = "lastSyncCount";
var _mR = "maxResults";
var _nT = "nextToken";
var _sST = "syncSessionToken";
var _xacc = "x-amz-client-context";
var parseBody = /* @__PURE__ */ __name((streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {
  if (encoded.length) {
    return JSON.parse(encoded);
  }
  return {};
}), "parseBody");
var parseErrorBody = /* @__PURE__ */ __name(async (errorBody, context) => {
  const value = await parseBody(errorBody, context);
  value.message = value.message ?? value.Message;
  return value;
}, "parseErrorBody");
var loadRestJsonErrorCode = /* @__PURE__ */ __name((output, data) => {
  const findKey = /* @__PURE__ */ __name((object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase()), "findKey");
  const sanitizeErrorCode = /* @__PURE__ */ __name((rawValue) => {
    let cleanValue = rawValue;
    if (typeof cleanValue === "number") {
      cleanValue = cleanValue.toString();
    }
    if (cleanValue.indexOf(",") >= 0) {
      cleanValue = cleanValue.split(",")[0];
    }
    if (cleanValue.indexOf(":") >= 0) {
      cleanValue = cleanValue.split(":")[0];
    }
    if (cleanValue.indexOf("#") >= 0) {
      cleanValue = cleanValue.split("#")[1];
    }
    return cleanValue;
  }, "sanitizeErrorCode");
  const headerKey = findKey(output.headers, "x-amzn-errortype");
  if (headerKey !== void 0) {
    return sanitizeErrorCode(output.headers[headerKey]);
  }
  if (data.code !== void 0) {
    return sanitizeErrorCode(data.code);
  }
  if (data["__type"] !== void 0) {
    return sanitizeErrorCode(data["__type"]);
  }
}, "loadRestJsonErrorCode");

// src/commands/BulkPublishCommand.ts
var _BulkPublishCommand = class _BulkPublishCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSCognitoSyncService", "BulkPublish", {}).n("CognitoSyncClient", "BulkPublishCommand").f(void 0, void 0).ser(se_BulkPublishCommand).de(de_BulkPublishCommand).build() {
};
__name(_BulkPublishCommand, "BulkPublishCommand");
var BulkPublishCommand = _BulkPublishCommand;

// src/commands/DeleteDatasetCommand.ts




var _DeleteDatasetCommand = class _DeleteDatasetCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSCognitoSyncService", "DeleteDataset", {}).n("CognitoSyncClient", "DeleteDatasetCommand").f(void 0, void 0).ser(se_DeleteDatasetCommand).de(de_DeleteDatasetCommand).build() {
};
__name(_DeleteDatasetCommand, "DeleteDatasetCommand");
var DeleteDatasetCommand = _DeleteDatasetCommand;

// src/commands/DescribeDatasetCommand.ts




var _DescribeDatasetCommand = class _DescribeDatasetCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSCognitoSyncService", "DescribeDataset", {}).n("CognitoSyncClient", "DescribeDatasetCommand").f(void 0, void 0).ser(se_DescribeDatasetCommand).de(de_DescribeDatasetCommand).build() {
};
__name(_DescribeDatasetCommand, "DescribeDatasetCommand");
var DescribeDatasetCommand = _DescribeDatasetCommand;

// src/commands/DescribeIdentityPoolUsageCommand.ts




var _DescribeIdentityPoolUsageCommand = class _DescribeIdentityPoolUsageCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSCognitoSyncService", "DescribeIdentityPoolUsage", {}).n("CognitoSyncClient", "DescribeIdentityPoolUsageCommand").f(void 0, void 0).ser(se_DescribeIdentityPoolUsageCommand).de(de_DescribeIdentityPoolUsageCommand).build() {
};
__name(_DescribeIdentityPoolUsageCommand, "DescribeIdentityPoolUsageCommand");
var DescribeIdentityPoolUsageCommand = _DescribeIdentityPoolUsageCommand;

// src/commands/DescribeIdentityUsageCommand.ts




var _DescribeIdentityUsageCommand = class _DescribeIdentityUsageCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSCognitoSyncService", "DescribeIdentityUsage", {}).n("CognitoSyncClient", "DescribeIdentityUsageCommand").f(void 0, void 0).ser(se_DescribeIdentityUsageCommand).de(de_DescribeIdentityUsageCommand).build() {
};
__name(_DescribeIdentityUsageCommand, "DescribeIdentityUsageCommand");
var DescribeIdentityUsageCommand = _DescribeIdentityUsageCommand;

// src/commands/GetBulkPublishDetailsCommand.ts




var _GetBulkPublishDetailsCommand = class _GetBulkPublishDetailsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSCognitoSyncService", "GetBulkPublishDetails", {}).n("CognitoSyncClient", "GetBulkPublishDetailsCommand").f(void 0, void 0).ser(se_GetBulkPublishDetailsCommand).de(de_GetBulkPublishDetailsCommand).build() {
};
__name(_GetBulkPublishDetailsCommand, "GetBulkPublishDetailsCommand");
var GetBulkPublishDetailsCommand = _GetBulkPublishDetailsCommand;

// src/commands/GetCognitoEventsCommand.ts




var _GetCognitoEventsCommand = class _GetCognitoEventsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSCognitoSyncService", "GetCognitoEvents", {}).n("CognitoSyncClient", "GetCognitoEventsCommand").f(void 0, void 0).ser(se_GetCognitoEventsCommand).de(de_GetCognitoEventsCommand).build() {
};
__name(_GetCognitoEventsCommand, "GetCognitoEventsCommand");
var GetCognitoEventsCommand = _GetCognitoEventsCommand;

// src/commands/GetIdentityPoolConfigurationCommand.ts




var _GetIdentityPoolConfigurationCommand = class _GetIdentityPoolConfigurationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSCognitoSyncService", "GetIdentityPoolConfiguration", {}).n("CognitoSyncClient", "GetIdentityPoolConfigurationCommand").f(void 0, void 0).ser(se_GetIdentityPoolConfigurationCommand).de(de_GetIdentityPoolConfigurationCommand).build() {
};
__name(_GetIdentityPoolConfigurationCommand, "GetIdentityPoolConfigurationCommand");
var GetIdentityPoolConfigurationCommand = _GetIdentityPoolConfigurationCommand;

// src/commands/ListDatasetsCommand.ts




var _ListDatasetsCommand = class _ListDatasetsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSCognitoSyncService", "ListDatasets", {}).n("CognitoSyncClient", "ListDatasetsCommand").f(void 0, void 0).ser(se_ListDatasetsCommand).de(de_ListDatasetsCommand).build() {
};
__name(_ListDatasetsCommand, "ListDatasetsCommand");
var ListDatasetsCommand = _ListDatasetsCommand;

// src/commands/ListIdentityPoolUsageCommand.ts




var _ListIdentityPoolUsageCommand = class _ListIdentityPoolUsageCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSCognitoSyncService", "ListIdentityPoolUsage", {}).n("CognitoSyncClient", "ListIdentityPoolUsageCommand").f(void 0, void 0).ser(se_ListIdentityPoolUsageCommand).de(de_ListIdentityPoolUsageCommand).build() {
};
__name(_ListIdentityPoolUsageCommand, "ListIdentityPoolUsageCommand");
var ListIdentityPoolUsageCommand = _ListIdentityPoolUsageCommand;

// src/commands/ListRecordsCommand.ts




var _ListRecordsCommand = class _ListRecordsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSCognitoSyncService", "ListRecords", {}).n("CognitoSyncClient", "ListRecordsCommand").f(void 0, void 0).ser(se_ListRecordsCommand).de(de_ListRecordsCommand).build() {
};
__name(_ListRecordsCommand, "ListRecordsCommand");
var ListRecordsCommand = _ListRecordsCommand;

// src/commands/RegisterDeviceCommand.ts




var _RegisterDeviceCommand = class _RegisterDeviceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSCognitoSyncService", "RegisterDevice", {}).n("CognitoSyncClient", "RegisterDeviceCommand").f(void 0, void 0).ser(se_RegisterDeviceCommand).de(de_RegisterDeviceCommand).build() {
};
__name(_RegisterDeviceCommand, "RegisterDeviceCommand");
var RegisterDeviceCommand = _RegisterDeviceCommand;

// src/commands/SetCognitoEventsCommand.ts




var _SetCognitoEventsCommand = class _SetCognitoEventsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSCognitoSyncService", "SetCognitoEvents", {}).n("CognitoSyncClient", "SetCognitoEventsCommand").f(void 0, void 0).ser(se_SetCognitoEventsCommand).de(de_SetCognitoEventsCommand).build() {
};
__name(_SetCognitoEventsCommand, "SetCognitoEventsCommand");
var SetCognitoEventsCommand = _SetCognitoEventsCommand;

// src/commands/SetIdentityPoolConfigurationCommand.ts




var _SetIdentityPoolConfigurationCommand = class _SetIdentityPoolConfigurationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSCognitoSyncService", "SetIdentityPoolConfiguration", {}).n("CognitoSyncClient", "SetIdentityPoolConfigurationCommand").f(void 0, void 0).ser(se_SetIdentityPoolConfigurationCommand).de(de_SetIdentityPoolConfigurationCommand).build() {
};
__name(_SetIdentityPoolConfigurationCommand, "SetIdentityPoolConfigurationCommand");
var SetIdentityPoolConfigurationCommand = _SetIdentityPoolConfigurationCommand;

// src/commands/SubscribeToDatasetCommand.ts




var _SubscribeToDatasetCommand = class _SubscribeToDatasetCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSCognitoSyncService", "SubscribeToDataset", {}).n("CognitoSyncClient", "SubscribeToDatasetCommand").f(void 0, void 0).ser(se_SubscribeToDatasetCommand).de(de_SubscribeToDatasetCommand).build() {
};
__name(_SubscribeToDatasetCommand, "SubscribeToDatasetCommand");
var SubscribeToDatasetCommand = _SubscribeToDatasetCommand;

// src/commands/UnsubscribeFromDatasetCommand.ts




var _UnsubscribeFromDatasetCommand = class _UnsubscribeFromDatasetCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSCognitoSyncService", "UnsubscribeFromDataset", {}).n("CognitoSyncClient", "UnsubscribeFromDatasetCommand").f(void 0, void 0).ser(se_UnsubscribeFromDatasetCommand).de(de_UnsubscribeFromDatasetCommand).build() {
};
__name(_UnsubscribeFromDatasetCommand, "UnsubscribeFromDatasetCommand");
var UnsubscribeFromDatasetCommand = _UnsubscribeFromDatasetCommand;

// src/commands/UpdateRecordsCommand.ts




var _UpdateRecordsCommand = class _UpdateRecordsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSCognitoSyncService", "UpdateRecords", {}).n("CognitoSyncClient", "UpdateRecordsCommand").f(void 0, void 0).ser(se_UpdateRecordsCommand).de(de_UpdateRecordsCommand).build() {
};
__name(_UpdateRecordsCommand, "UpdateRecordsCommand");
var UpdateRecordsCommand = _UpdateRecordsCommand;

// src/CognitoSync.ts
var commands = {
  BulkPublishCommand,
  DeleteDatasetCommand,
  DescribeDatasetCommand,
  DescribeIdentityPoolUsageCommand,
  DescribeIdentityUsageCommand,
  GetBulkPublishDetailsCommand,
  GetCognitoEventsCommand,
  GetIdentityPoolConfigurationCommand,
  ListDatasetsCommand,
  ListIdentityPoolUsageCommand,
  ListRecordsCommand,
  RegisterDeviceCommand,
  SetCognitoEventsCommand,
  SetIdentityPoolConfigurationCommand,
  SubscribeToDatasetCommand,
  UnsubscribeFromDatasetCommand,
  UpdateRecordsCommand
};
var _CognitoSync = class _CognitoSync extends CognitoSyncClient {
};
__name(_CognitoSync, "CognitoSync");
var CognitoSync = _CognitoSync;
(0, import_smithy_client.createAggregatedClient)(commands, CognitoSync);

// src/index.ts
var import_util_endpoints = require("@aws-sdk/util-endpoints");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  CognitoSyncServiceException,
  __Client,
  CognitoSyncClient,
  CognitoSync,
  $Command,
  BulkPublishCommand,
  DeleteDatasetCommand,
  DescribeDatasetCommand,
  DescribeIdentityPoolUsageCommand,
  DescribeIdentityUsageCommand,
  GetBulkPublishDetailsCommand,
  GetCognitoEventsCommand,
  GetIdentityPoolConfigurationCommand,
  ListDatasetsCommand,
  ListIdentityPoolUsageCommand,
  ListRecordsCommand,
  RegisterDeviceCommand,
  SetCognitoEventsCommand,
  SetIdentityPoolConfigurationCommand,
  SubscribeToDatasetCommand,
  UnsubscribeFromDatasetCommand,
  UpdateRecordsCommand,
  AlreadyStreamedException,
  DuplicateRequestException,
  InternalErrorException,
  InvalidParameterException,
  NotAuthorizedException,
  ResourceNotFoundException,
  ResourceConflictException,
  TooManyRequestsException,
  BulkPublishStatus,
  StreamingStatus,
  InvalidConfigurationException,
  Platform,
  ConcurrentModificationException,
  InvalidLambdaFunctionOutputException,
  LambdaThrottledException,
  LimitExceededException,
  Operation
});

