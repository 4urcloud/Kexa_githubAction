import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { AppRunnerServiceException as __BaseException } from "./AppRunnerServiceException";
export interface AssociateCustomDomainRequest {
  ServiceArn: string | undefined;
  DomainName: string | undefined;
  EnableWWWSubdomain?: boolean;
}
export declare const CertificateValidationRecordStatus: {
  readonly FAILED: "FAILED";
  readonly PENDING_VALIDATION: "PENDING_VALIDATION";
  readonly SUCCESS: "SUCCESS";
};
export type CertificateValidationRecordStatus =
  (typeof CertificateValidationRecordStatus)[keyof typeof CertificateValidationRecordStatus];
export interface CertificateValidationRecord {
  Name?: string;
  Type?: string;
  Value?: string;
  Status?: CertificateValidationRecordStatus;
}
export declare const CustomDomainAssociationStatus: {
  readonly ACTIVE: "ACTIVE";
  readonly BINDING_CERTIFICATE: "BINDING_CERTIFICATE";
  readonly CREATE_FAILED: "CREATE_FAILED";
  readonly CREATING: "CREATING";
  readonly DELETE_FAILED: "DELETE_FAILED";
  readonly DELETING: "DELETING";
  readonly PENDING_CERTIFICATE_DNS_VALIDATION: "PENDING_CERTIFICATE_DNS_VALIDATION";
};
export type CustomDomainAssociationStatus =
  (typeof CustomDomainAssociationStatus)[keyof typeof CustomDomainAssociationStatus];
export interface CustomDomain {
  DomainName: string | undefined;
  EnableWWWSubdomain: boolean | undefined;
  CertificateValidationRecords?: CertificateValidationRecord[];
  Status: CustomDomainAssociationStatus | undefined;
}
export interface VpcDNSTarget {
  VpcIngressConnectionArn?: string;
  VpcId?: string;
  DomainName?: string;
}
export interface AssociateCustomDomainResponse {
  DNSTarget: string | undefined;
  ServiceArn: string | undefined;
  CustomDomain: CustomDomain | undefined;
  VpcDNSTargets: VpcDNSTarget[] | undefined;
}
export declare class InternalServiceErrorException extends __BaseException {
  readonly name: "InternalServiceErrorException";
  readonly $fault: "server";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<InternalServiceErrorException, __BaseException>
  );
}
export declare class InvalidRequestException extends __BaseException {
  readonly name: "InvalidRequestException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<InvalidRequestException, __BaseException>
  );
}
export declare class InvalidStateException extends __BaseException {
  readonly name: "InvalidStateException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<InvalidStateException, __BaseException>
  );
}
export interface Tag {
  Key?: string;
  Value?: string;
}
export interface CreateAutoScalingConfigurationRequest {
  AutoScalingConfigurationName: string | undefined;
  MaxConcurrency?: number;
  MinSize?: number;
  MaxSize?: number;
  Tags?: Tag[];
}
export declare const AutoScalingConfigurationStatus: {
  readonly ACTIVE: "ACTIVE";
  readonly INACTIVE: "INACTIVE";
};
export type AutoScalingConfigurationStatus =
  (typeof AutoScalingConfigurationStatus)[keyof typeof AutoScalingConfigurationStatus];
export interface AutoScalingConfiguration {
  AutoScalingConfigurationArn?: string;
  AutoScalingConfigurationName?: string;
  AutoScalingConfigurationRevision?: number;
  Latest?: boolean;
  Status?: AutoScalingConfigurationStatus;
  MaxConcurrency?: number;
  MinSize?: number;
  MaxSize?: number;
  CreatedAt?: Date;
  DeletedAt?: Date;
  HasAssociatedService?: boolean;
  IsDefault?: boolean;
}
export interface CreateAutoScalingConfigurationResponse {
  AutoScalingConfiguration: AutoScalingConfiguration | undefined;
}
export declare class ServiceQuotaExceededException extends __BaseException {
  readonly name: "ServiceQuotaExceededException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ServiceQuotaExceededException, __BaseException>
  );
}
export declare const ProviderType: {
  readonly BITBUCKET: "BITBUCKET";
  readonly GITHUB: "GITHUB";
};
export type ProviderType = (typeof ProviderType)[keyof typeof ProviderType];
export interface CreateConnectionRequest {
  ConnectionName: string | undefined;
  ProviderType: ProviderType | undefined;
  Tags?: Tag[];
}
export declare const ConnectionStatus: {
  readonly AVAILABLE: "AVAILABLE";
  readonly DELETED: "DELETED";
  readonly ERROR: "ERROR";
  readonly PENDING_HANDSHAKE: "PENDING_HANDSHAKE";
};
export type ConnectionStatus =
  (typeof ConnectionStatus)[keyof typeof ConnectionStatus];
export interface Connection {
  ConnectionName?: string;
  ConnectionArn?: string;
  ProviderType?: ProviderType;
  Status?: ConnectionStatus;
  CreatedAt?: Date;
}
export interface CreateConnectionResponse {
  Connection: Connection | undefined;
}
export declare const TracingVendor: {
  readonly AWSXRAY: "AWSXRAY";
};
export type TracingVendor = (typeof TracingVendor)[keyof typeof TracingVendor];
export interface TraceConfiguration {
  Vendor: TracingVendor | undefined;
}
export interface CreateObservabilityConfigurationRequest {
  ObservabilityConfigurationName: string | undefined;
  TraceConfiguration?: TraceConfiguration;
  Tags?: Tag[];
}
export declare const ObservabilityConfigurationStatus: {
  readonly ACTIVE: "ACTIVE";
  readonly INACTIVE: "INACTIVE";
};
export type ObservabilityConfigurationStatus =
  (typeof ObservabilityConfigurationStatus)[keyof typeof ObservabilityConfigurationStatus];
export interface ObservabilityConfiguration {
  ObservabilityConfigurationArn?: string;
  ObservabilityConfigurationName?: string;
  TraceConfiguration?: TraceConfiguration;
  ObservabilityConfigurationRevision?: number;
  Latest?: boolean;
  Status?: ObservabilityConfigurationStatus;
  CreatedAt?: Date;
  DeletedAt?: Date;
}
export interface CreateObservabilityConfigurationResponse {
  ObservabilityConfiguration: ObservabilityConfiguration | undefined;
}
export interface EncryptionConfiguration {
  KmsKey: string | undefined;
}
export declare const HealthCheckProtocol: {
  readonly HTTP: "HTTP";
  readonly TCP: "TCP";
};
export type HealthCheckProtocol =
  (typeof HealthCheckProtocol)[keyof typeof HealthCheckProtocol];
export interface HealthCheckConfiguration {
  Protocol?: HealthCheckProtocol;
  Path?: string;
  Interval?: number;
  Timeout?: number;
  HealthyThreshold?: number;
  UnhealthyThreshold?: number;
}
export interface InstanceConfiguration {
  Cpu?: string;
  Memory?: string;
  InstanceRoleArn?: string;
}
export declare const EgressType: {
  readonly DEFAULT: "DEFAULT";
  readonly VPC: "VPC";
};
export type EgressType = (typeof EgressType)[keyof typeof EgressType];
export interface EgressConfiguration {
  EgressType?: EgressType;
  VpcConnectorArn?: string;
}
export interface IngressConfiguration {
  IsPubliclyAccessible?: boolean;
}
export declare const IpAddressType: {
  readonly DUAL_STACK: "DUAL_STACK";
  readonly IPV4: "IPV4";
};
export type IpAddressType = (typeof IpAddressType)[keyof typeof IpAddressType];
export interface NetworkConfiguration {
  EgressConfiguration?: EgressConfiguration;
  IngressConfiguration?: IngressConfiguration;
  IpAddressType?: IpAddressType;
}
export interface ServiceObservabilityConfiguration {
  ObservabilityEnabled: boolean | undefined;
  ObservabilityConfigurationArn?: string;
}
export interface AuthenticationConfiguration {
  ConnectionArn?: string;
  AccessRoleArn?: string;
}
export declare const Runtime: {
  readonly CORRETTO_11: "CORRETTO_11";
  readonly CORRETTO_8: "CORRETTO_8";
  readonly DOTNET_6: "DOTNET_6";
  readonly GO_1: "GO_1";
  readonly NODEJS_12: "NODEJS_12";
  readonly NODEJS_14: "NODEJS_14";
  readonly NODEJS_16: "NODEJS_16";
  readonly NODEJS_18: "NODEJS_18";
  readonly PHP_81: "PHP_81";
  readonly PYTHON_3: "PYTHON_3";
  readonly PYTHON_311: "PYTHON_311";
  readonly RUBY_31: "RUBY_31";
};
export type Runtime = (typeof Runtime)[keyof typeof Runtime];
export interface CodeConfigurationValues {
  Runtime: Runtime | undefined;
  BuildCommand?: string;
  StartCommand?: string;
  Port?: string;
  RuntimeEnvironmentVariables?: Record<string, string>;
  RuntimeEnvironmentSecrets?: Record<string, string>;
}
export declare const ConfigurationSource: {
  readonly API: "API";
  readonly REPOSITORY: "REPOSITORY";
};
export type ConfigurationSource =
  (typeof ConfigurationSource)[keyof typeof ConfigurationSource];
export interface CodeConfiguration {
  ConfigurationSource: ConfigurationSource | undefined;
  CodeConfigurationValues?: CodeConfigurationValues;
}
export declare const SourceCodeVersionType: {
  readonly BRANCH: "BRANCH";
};
export type SourceCodeVersionType =
  (typeof SourceCodeVersionType)[keyof typeof SourceCodeVersionType];
export interface SourceCodeVersion {
  Type: SourceCodeVersionType | undefined;
  Value: string | undefined;
}
export interface CodeRepository {
  RepositoryUrl: string | undefined;
  SourceCodeVersion: SourceCodeVersion | undefined;
  CodeConfiguration?: CodeConfiguration;
  SourceDirectory?: string;
}
export interface ImageConfiguration {
  RuntimeEnvironmentVariables?: Record<string, string>;
  StartCommand?: string;
  Port?: string;
  RuntimeEnvironmentSecrets?: Record<string, string>;
}
export declare const ImageRepositoryType: {
  readonly ECR: "ECR";
  readonly ECR_PUBLIC: "ECR_PUBLIC";
};
export type ImageRepositoryType =
  (typeof ImageRepositoryType)[keyof typeof ImageRepositoryType];
export interface ImageRepository {
  ImageIdentifier: string | undefined;
  ImageConfiguration?: ImageConfiguration;
  ImageRepositoryType: ImageRepositoryType | undefined;
}
export interface SourceConfiguration {
  CodeRepository?: CodeRepository;
  ImageRepository?: ImageRepository;
  AutoDeploymentsEnabled?: boolean;
  AuthenticationConfiguration?: AuthenticationConfiguration;
}
export interface CreateServiceRequest {
  ServiceName: string | undefined;
  SourceConfiguration: SourceConfiguration | undefined;
  InstanceConfiguration?: InstanceConfiguration;
  Tags?: Tag[];
  EncryptionConfiguration?: EncryptionConfiguration;
  HealthCheckConfiguration?: HealthCheckConfiguration;
  AutoScalingConfigurationArn?: string;
  NetworkConfiguration?: NetworkConfiguration;
  ObservabilityConfiguration?: ServiceObservabilityConfiguration;
}
export interface AutoScalingConfigurationSummary {
  AutoScalingConfigurationArn?: string;
  AutoScalingConfigurationName?: string;
  AutoScalingConfigurationRevision?: number;
  Status?: AutoScalingConfigurationStatus;
  CreatedAt?: Date;
  HasAssociatedService?: boolean;
  IsDefault?: boolean;
}
export declare const ServiceStatus: {
  readonly CREATE_FAILED: "CREATE_FAILED";
  readonly DELETED: "DELETED";
  readonly DELETE_FAILED: "DELETE_FAILED";
  readonly OPERATION_IN_PROGRESS: "OPERATION_IN_PROGRESS";
  readonly PAUSED: "PAUSED";
  readonly RUNNING: "RUNNING";
};
export type ServiceStatus = (typeof ServiceStatus)[keyof typeof ServiceStatus];
export interface Service {
  ServiceName: string | undefined;
  ServiceId: string | undefined;
  ServiceArn: string | undefined;
  ServiceUrl?: string;
  CreatedAt: Date | undefined;
  UpdatedAt: Date | undefined;
  DeletedAt?: Date;
  Status: ServiceStatus | undefined;
  SourceConfiguration: SourceConfiguration | undefined;
  InstanceConfiguration: InstanceConfiguration | undefined;
  EncryptionConfiguration?: EncryptionConfiguration;
  HealthCheckConfiguration?: HealthCheckConfiguration;
  AutoScalingConfigurationSummary: AutoScalingConfigurationSummary | undefined;
  NetworkConfiguration: NetworkConfiguration | undefined;
  ObservabilityConfiguration?: ServiceObservabilityConfiguration;
}
export interface CreateServiceResponse {
  Service: Service | undefined;
  OperationId: string | undefined;
}
export interface CreateVpcConnectorRequest {
  VpcConnectorName: string | undefined;
  Subnets: string[] | undefined;
  SecurityGroups?: string[];
  Tags?: Tag[];
}
export declare const VpcConnectorStatus: {
  readonly ACTIVE: "ACTIVE";
  readonly INACTIVE: "INACTIVE";
};
export type VpcConnectorStatus =
  (typeof VpcConnectorStatus)[keyof typeof VpcConnectorStatus];
export interface VpcConnector {
  VpcConnectorName?: string;
  VpcConnectorArn?: string;
  VpcConnectorRevision?: number;
  Subnets?: string[];
  SecurityGroups?: string[];
  Status?: VpcConnectorStatus;
  CreatedAt?: Date;
  DeletedAt?: Date;
}
export interface CreateVpcConnectorResponse {
  VpcConnector: VpcConnector | undefined;
}
export interface IngressVpcConfiguration {
  VpcId?: string;
  VpcEndpointId?: string;
}
export interface CreateVpcIngressConnectionRequest {
  ServiceArn: string | undefined;
  VpcIngressConnectionName: string | undefined;
  IngressVpcConfiguration: IngressVpcConfiguration | undefined;
  Tags?: Tag[];
}
export declare const VpcIngressConnectionStatus: {
  readonly AVAILABLE: "AVAILABLE";
  readonly DELETED: "DELETED";
  readonly FAILED_CREATION: "FAILED_CREATION";
  readonly FAILED_DELETION: "FAILED_DELETION";
  readonly FAILED_UPDATE: "FAILED_UPDATE";
  readonly PENDING_CREATION: "PENDING_CREATION";
  readonly PENDING_DELETION: "PENDING_DELETION";
  readonly PENDING_UPDATE: "PENDING_UPDATE";
};
export type VpcIngressConnectionStatus =
  (typeof VpcIngressConnectionStatus)[keyof typeof VpcIngressConnectionStatus];
export interface VpcIngressConnection {
  VpcIngressConnectionArn?: string;
  VpcIngressConnectionName?: string;
  ServiceArn?: string;
  Status?: VpcIngressConnectionStatus;
  AccountId?: string;
  DomainName?: string;
  IngressVpcConfiguration?: IngressVpcConfiguration;
  CreatedAt?: Date;
  DeletedAt?: Date;
}
export interface CreateVpcIngressConnectionResponse {
  VpcIngressConnection: VpcIngressConnection | undefined;
}
export interface DeleteAutoScalingConfigurationRequest {
  AutoScalingConfigurationArn: string | undefined;
  DeleteAllRevisions?: boolean;
}
export interface DeleteAutoScalingConfigurationResponse {
  AutoScalingConfiguration: AutoScalingConfiguration | undefined;
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export interface DeleteConnectionRequest {
  ConnectionArn: string | undefined;
}
export interface DeleteConnectionResponse {
  Connection?: Connection;
}
export interface DeleteObservabilityConfigurationRequest {
  ObservabilityConfigurationArn: string | undefined;
}
export interface DeleteObservabilityConfigurationResponse {
  ObservabilityConfiguration: ObservabilityConfiguration | undefined;
}
export interface DeleteServiceRequest {
  ServiceArn: string | undefined;
}
export interface DeleteServiceResponse {
  Service: Service | undefined;
  OperationId: string | undefined;
}
export interface DeleteVpcConnectorRequest {
  VpcConnectorArn: string | undefined;
}
export interface DeleteVpcConnectorResponse {
  VpcConnector: VpcConnector | undefined;
}
export interface DeleteVpcIngressConnectionRequest {
  VpcIngressConnectionArn: string | undefined;
}
export interface DeleteVpcIngressConnectionResponse {
  VpcIngressConnection: VpcIngressConnection | undefined;
}
export interface DescribeAutoScalingConfigurationRequest {
  AutoScalingConfigurationArn: string | undefined;
}
export interface DescribeAutoScalingConfigurationResponse {
  AutoScalingConfiguration: AutoScalingConfiguration | undefined;
}
export interface DescribeCustomDomainsRequest {
  ServiceArn: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface DescribeCustomDomainsResponse {
  DNSTarget: string | undefined;
  ServiceArn: string | undefined;
  CustomDomains: CustomDomain[] | undefined;
  VpcDNSTargets: VpcDNSTarget[] | undefined;
  NextToken?: string;
}
export interface DescribeObservabilityConfigurationRequest {
  ObservabilityConfigurationArn: string | undefined;
}
export interface DescribeObservabilityConfigurationResponse {
  ObservabilityConfiguration: ObservabilityConfiguration | undefined;
}
export interface DescribeServiceRequest {
  ServiceArn: string | undefined;
}
export interface DescribeServiceResponse {
  Service: Service | undefined;
}
export interface DescribeVpcConnectorRequest {
  VpcConnectorArn: string | undefined;
}
export interface DescribeVpcConnectorResponse {
  VpcConnector: VpcConnector | undefined;
}
export interface DescribeVpcIngressConnectionRequest {
  VpcIngressConnectionArn: string | undefined;
}
export interface DescribeVpcIngressConnectionResponse {
  VpcIngressConnection: VpcIngressConnection | undefined;
}
export interface DisassociateCustomDomainRequest {
  ServiceArn: string | undefined;
  DomainName: string | undefined;
}
export interface DisassociateCustomDomainResponse {
  DNSTarget: string | undefined;
  ServiceArn: string | undefined;
  CustomDomain: CustomDomain | undefined;
  VpcDNSTargets: VpcDNSTarget[] | undefined;
}
export interface ListAutoScalingConfigurationsRequest {
  AutoScalingConfigurationName?: string;
  LatestOnly?: boolean;
  MaxResults?: number;
  NextToken?: string;
}
export interface ListAutoScalingConfigurationsResponse {
  AutoScalingConfigurationSummaryList:
    | AutoScalingConfigurationSummary[]
    | undefined;
  NextToken?: string;
}
export interface ListConnectionsRequest {
  ConnectionName?: string;
  MaxResults?: number;
  NextToken?: string;
}
export interface ConnectionSummary {
  ConnectionName?: string;
  ConnectionArn?: string;
  ProviderType?: ProviderType;
  Status?: ConnectionStatus;
  CreatedAt?: Date;
}
export interface ListConnectionsResponse {
  ConnectionSummaryList: ConnectionSummary[] | undefined;
  NextToken?: string;
}
export interface ListObservabilityConfigurationsRequest {
  ObservabilityConfigurationName?: string;
  LatestOnly?: boolean;
  MaxResults?: number;
  NextToken?: string;
}
export interface ObservabilityConfigurationSummary {
  ObservabilityConfigurationArn?: string;
  ObservabilityConfigurationName?: string;
  ObservabilityConfigurationRevision?: number;
}
export interface ListObservabilityConfigurationsResponse {
  ObservabilityConfigurationSummaryList:
    | ObservabilityConfigurationSummary[]
    | undefined;
  NextToken?: string;
}
export interface ListOperationsRequest {
  ServiceArn: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export declare const OperationStatus: {
  readonly FAILED: "FAILED";
  readonly IN_PROGRESS: "IN_PROGRESS";
  readonly PENDING: "PENDING";
  readonly ROLLBACK_FAILED: "ROLLBACK_FAILED";
  readonly ROLLBACK_IN_PROGRESS: "ROLLBACK_IN_PROGRESS";
  readonly ROLLBACK_SUCCEEDED: "ROLLBACK_SUCCEEDED";
  readonly SUCCEEDED: "SUCCEEDED";
};
export type OperationStatus =
  (typeof OperationStatus)[keyof typeof OperationStatus];
export declare const OperationType: {
  readonly CREATE_SERVICE: "CREATE_SERVICE";
  readonly DELETE_SERVICE: "DELETE_SERVICE";
  readonly PAUSE_SERVICE: "PAUSE_SERVICE";
  readonly RESUME_SERVICE: "RESUME_SERVICE";
  readonly START_DEPLOYMENT: "START_DEPLOYMENT";
  readonly UPDATE_SERVICE: "UPDATE_SERVICE";
};
export type OperationType = (typeof OperationType)[keyof typeof OperationType];
export interface OperationSummary {
  Id?: string;
  Type?: OperationType;
  Status?: OperationStatus;
  TargetArn?: string;
  StartedAt?: Date;
  EndedAt?: Date;
  UpdatedAt?: Date;
}
export interface ListOperationsResponse {
  OperationSummaryList?: OperationSummary[];
  NextToken?: string;
}
export interface ListServicesRequest {
  NextToken?: string;
  MaxResults?: number;
}
export interface ServiceSummary {
  ServiceName?: string;
  ServiceId?: string;
  ServiceArn?: string;
  ServiceUrl?: string;
  CreatedAt?: Date;
  UpdatedAt?: Date;
  Status?: ServiceStatus;
}
export interface ListServicesResponse {
  ServiceSummaryList: ServiceSummary[] | undefined;
  NextToken?: string;
}
export interface ListServicesForAutoScalingConfigurationRequest {
  AutoScalingConfigurationArn: string | undefined;
  MaxResults?: number;
  NextToken?: string;
}
export interface ListServicesForAutoScalingConfigurationResponse {
  ServiceArnList: string[] | undefined;
  NextToken?: string;
}
export interface ListTagsForResourceRequest {
  ResourceArn: string | undefined;
}
export interface ListTagsForResourceResponse {
  Tags?: Tag[];
}
export interface ListVpcConnectorsRequest {
  MaxResults?: number;
  NextToken?: string;
}
export interface ListVpcConnectorsResponse {
  VpcConnectors: VpcConnector[] | undefined;
  NextToken?: string;
}
export interface ListVpcIngressConnectionsFilter {
  ServiceArn?: string;
  VpcEndpointId?: string;
}
export interface ListVpcIngressConnectionsRequest {
  Filter?: ListVpcIngressConnectionsFilter;
  MaxResults?: number;
  NextToken?: string;
}
export interface VpcIngressConnectionSummary {
  VpcIngressConnectionArn?: string;
  ServiceArn?: string;
}
export interface ListVpcIngressConnectionsResponse {
  VpcIngressConnectionSummaryList: VpcIngressConnectionSummary[] | undefined;
  NextToken?: string;
}
export interface PauseServiceRequest {
  ServiceArn: string | undefined;
}
export interface PauseServiceResponse {
  Service: Service | undefined;
  OperationId?: string;
}
export interface ResumeServiceRequest {
  ServiceArn: string | undefined;
}
export interface ResumeServiceResponse {
  Service: Service | undefined;
  OperationId?: string;
}
export interface StartDeploymentRequest {
  ServiceArn: string | undefined;
}
export interface StartDeploymentResponse {
  OperationId: string | undefined;
}
export interface TagResourceRequest {
  ResourceArn: string | undefined;
  Tags: Tag[] | undefined;
}
export interface TagResourceResponse {}
export interface UntagResourceRequest {
  ResourceArn: string | undefined;
  TagKeys: string[] | undefined;
}
export interface UntagResourceResponse {}
export interface UpdateDefaultAutoScalingConfigurationRequest {
  AutoScalingConfigurationArn: string | undefined;
}
export interface UpdateDefaultAutoScalingConfigurationResponse {
  AutoScalingConfiguration: AutoScalingConfiguration | undefined;
}
export interface UpdateServiceRequest {
  ServiceArn: string | undefined;
  SourceConfiguration?: SourceConfiguration;
  InstanceConfiguration?: InstanceConfiguration;
  AutoScalingConfigurationArn?: string;
  HealthCheckConfiguration?: HealthCheckConfiguration;
  NetworkConfiguration?: NetworkConfiguration;
  ObservabilityConfiguration?: ServiceObservabilityConfiguration;
}
export interface UpdateServiceResponse {
  Service: Service | undefined;
  OperationId: string | undefined;
}
export interface UpdateVpcIngressConnectionRequest {
  VpcIngressConnectionArn: string | undefined;
  IngressVpcConfiguration: IngressVpcConfiguration | undefined;
}
export interface UpdateVpcIngressConnectionResponse {
  VpcIngressConnection: VpcIngressConnection | undefined;
}
export declare const CodeConfigurationValuesFilterSensitiveLog: (
  obj: CodeConfigurationValues
) => any;
export declare const CodeConfigurationFilterSensitiveLog: (
  obj: CodeConfiguration
) => any;
export declare const CodeRepositoryFilterSensitiveLog: (
  obj: CodeRepository
) => any;
export declare const ImageConfigurationFilterSensitiveLog: (
  obj: ImageConfiguration
) => any;
export declare const ImageRepositoryFilterSensitiveLog: (
  obj: ImageRepository
) => any;
export declare const SourceConfigurationFilterSensitiveLog: (
  obj: SourceConfiguration
) => any;
export declare const CreateServiceRequestFilterSensitiveLog: (
  obj: CreateServiceRequest
) => any;
export declare const ServiceFilterSensitiveLog: (obj: Service) => any;
export declare const CreateServiceResponseFilterSensitiveLog: (
  obj: CreateServiceResponse
) => any;
export declare const DeleteServiceResponseFilterSensitiveLog: (
  obj: DeleteServiceResponse
) => any;
export declare const DescribeServiceResponseFilterSensitiveLog: (
  obj: DescribeServiceResponse
) => any;
export declare const PauseServiceResponseFilterSensitiveLog: (
  obj: PauseServiceResponse
) => any;
export declare const ResumeServiceResponseFilterSensitiveLog: (
  obj: ResumeServiceResponse
) => any;
export declare const UpdateServiceRequestFilterSensitiveLog: (
  obj: UpdateServiceRequest
) => any;
export declare const UpdateServiceResponseFilterSensitiveLog: (
  obj: UpdateServiceResponse
) => any;
