"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  BadRequestException: () => BadRequestException,
  Capability: () => Capability,
  ConflictException: () => ConflictException,
  CreateApplicationCommand: () => CreateApplicationCommand,
  CreateApplicationVersionCommand: () => CreateApplicationVersionCommand,
  CreateCloudFormationChangeSetCommand: () => CreateCloudFormationChangeSetCommand,
  CreateCloudFormationTemplateCommand: () => CreateCloudFormationTemplateCommand,
  DeleteApplicationCommand: () => DeleteApplicationCommand,
  ForbiddenException: () => ForbiddenException,
  GetApplicationCommand: () => GetApplicationCommand,
  GetApplicationPolicyCommand: () => GetApplicationPolicyCommand,
  GetCloudFormationTemplateCommand: () => GetCloudFormationTemplateCommand,
  InternalServerErrorException: () => InternalServerErrorException,
  ListApplicationDependenciesCommand: () => ListApplicationDependenciesCommand,
  ListApplicationVersionsCommand: () => ListApplicationVersionsCommand,
  ListApplicationsCommand: () => ListApplicationsCommand,
  NotFoundException: () => NotFoundException,
  PutApplicationPolicyCommand: () => PutApplicationPolicyCommand,
  ServerlessApplicationRepository: () => ServerlessApplicationRepository,
  ServerlessApplicationRepositoryClient: () => ServerlessApplicationRepositoryClient,
  ServerlessApplicationRepositoryServiceException: () => ServerlessApplicationRepositoryServiceException,
  Status: () => Status,
  TooManyRequestsException: () => TooManyRequestsException,
  UnshareApplicationCommand: () => UnshareApplicationCommand,
  UpdateApplicationCommand: () => UpdateApplicationCommand,
  __Client: () => import_smithy_client.Client,
  paginateListApplicationDependencies: () => paginateListApplicationDependencies,
  paginateListApplicationVersions: () => paginateListApplicationVersions,
  paginateListApplications: () => paginateListApplications
});
module.exports = __toCommonJS(src_exports);

// src/ServerlessApplicationRepositoryClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return {
    ...options,
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "serverlessrepo"
  };
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/ServerlessApplicationRepositoryClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var asPartial = /* @__PURE__ */ __name((t) => t, "asPartial");
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = {
    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),
    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
  };
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return {
    ...runtimeConfig,
    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
  };
}, "resolveRuntimeExtensions");

// src/ServerlessApplicationRepositoryClient.ts
var _ServerlessApplicationRepositoryClient = class _ServerlessApplicationRepositoryClient extends import_smithy_client.Client {
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_config_resolver.resolveRegionConfig)(_config_1);
    const _config_3 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_2);
    const _config_4 = (0, import_middleware_retry.resolveRetryConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, (configuration == null ? void 0 : configuration.extensions) || []);
    super(_config_8);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),
        identityProviderConfigProvider: this.getIdentityProviderConfigProvider()
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
  getDefaultHttpAuthSchemeParametersProvider() {
    return import_httpAuthSchemeProvider.defaultServerlessApplicationRepositoryHttpAuthSchemeParametersProvider;
  }
  getIdentityProviderConfigProvider() {
    return async (config) => new import_core.DefaultIdentityProviderConfig({
      "aws.auth#sigv4": config.credentials
    });
  }
};
__name(_ServerlessApplicationRepositoryClient, "ServerlessApplicationRepositoryClient");
var ServerlessApplicationRepositoryClient = _ServerlessApplicationRepositoryClient;

// src/ServerlessApplicationRepository.ts


// src/commands/CreateApplicationCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");

var import_types = require("@smithy/types");

// src/protocols/Aws_restJson1.ts
var import_core2 = require("@aws-sdk/core");



// src/models/ServerlessApplicationRepositoryServiceException.ts

var _ServerlessApplicationRepositoryServiceException = class _ServerlessApplicationRepositoryServiceException extends import_smithy_client.ServiceException {
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _ServerlessApplicationRepositoryServiceException.prototype);
  }
};
__name(_ServerlessApplicationRepositoryServiceException, "ServerlessApplicationRepositoryServiceException");
var ServerlessApplicationRepositoryServiceException = _ServerlessApplicationRepositoryServiceException;

// src/models/models_0.ts
var Capability = {
  CAPABILITY_AUTO_EXPAND: "CAPABILITY_AUTO_EXPAND",
  CAPABILITY_IAM: "CAPABILITY_IAM",
  CAPABILITY_NAMED_IAM: "CAPABILITY_NAMED_IAM",
  CAPABILITY_RESOURCE_POLICY: "CAPABILITY_RESOURCE_POLICY"
};
var _BadRequestException = class _BadRequestException extends ServerlessApplicationRepositoryServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "BadRequestException",
      $fault: "client",
      ...opts
    });
    this.name = "BadRequestException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _BadRequestException.prototype);
    this.ErrorCode = opts.ErrorCode;
    this.Message = opts.Message;
  }
};
__name(_BadRequestException, "BadRequestException");
var BadRequestException = _BadRequestException;
var _ConflictException = class _ConflictException extends ServerlessApplicationRepositoryServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ConflictException",
      $fault: "client",
      ...opts
    });
    this.name = "ConflictException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ConflictException.prototype);
    this.ErrorCode = opts.ErrorCode;
    this.Message = opts.Message;
  }
};
__name(_ConflictException, "ConflictException");
var ConflictException = _ConflictException;
var _ForbiddenException = class _ForbiddenException extends ServerlessApplicationRepositoryServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ForbiddenException",
      $fault: "client",
      ...opts
    });
    this.name = "ForbiddenException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ForbiddenException.prototype);
    this.ErrorCode = opts.ErrorCode;
    this.Message = opts.Message;
  }
};
__name(_ForbiddenException, "ForbiddenException");
var ForbiddenException = _ForbiddenException;
var _InternalServerErrorException = class _InternalServerErrorException extends ServerlessApplicationRepositoryServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InternalServerErrorException",
      $fault: "server",
      ...opts
    });
    this.name = "InternalServerErrorException";
    this.$fault = "server";
    Object.setPrototypeOf(this, _InternalServerErrorException.prototype);
    this.ErrorCode = opts.ErrorCode;
    this.Message = opts.Message;
  }
};
__name(_InternalServerErrorException, "InternalServerErrorException");
var InternalServerErrorException = _InternalServerErrorException;
var _TooManyRequestsException = class _TooManyRequestsException extends ServerlessApplicationRepositoryServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "TooManyRequestsException",
      $fault: "client",
      ...opts
    });
    this.name = "TooManyRequestsException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _TooManyRequestsException.prototype);
    this.ErrorCode = opts.ErrorCode;
    this.Message = opts.Message;
  }
};
__name(_TooManyRequestsException, "TooManyRequestsException");
var TooManyRequestsException = _TooManyRequestsException;
var Status = {
  ACTIVE: "ACTIVE",
  EXPIRED: "EXPIRED",
  PREPARING: "PREPARING"
};
var _NotFoundException = class _NotFoundException extends ServerlessApplicationRepositoryServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "NotFoundException",
      $fault: "client",
      ...opts
    });
    this.name = "NotFoundException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _NotFoundException.prototype);
    this.ErrorCode = opts.ErrorCode;
    this.Message = opts.Message;
  }
};
__name(_NotFoundException, "NotFoundException");
var NotFoundException = _NotFoundException;

// src/protocols/Aws_restJson1.ts
var se_CreateApplicationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/applications");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      author: [, , `Author`],
      description: [, , `Description`],
      homePageUrl: [, , `HomePageUrl`],
      labels: [, (_) => (0, import_smithy_client._json)(_), `Labels`],
      licenseBody: [, , `LicenseBody`],
      licenseUrl: [, , `LicenseUrl`],
      name: [, , `Name`],
      readmeBody: [, , `ReadmeBody`],
      readmeUrl: [, , `ReadmeUrl`],
      semanticVersion: [, , `SemanticVersion`],
      sourceCodeArchiveUrl: [, , `SourceCodeArchiveUrl`],
      sourceCodeUrl: [, , `SourceCodeUrl`],
      spdxLicenseId: [, , `SpdxLicenseId`],
      templateBody: [, , `TemplateBody`],
      templateUrl: [, , `TemplateUrl`]
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateApplicationCommand");
var se_CreateApplicationVersionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/applications/{ApplicationId}/versions/{SemanticVersion}");
  b.p("ApplicationId", () => input.ApplicationId, "{ApplicationId}", false);
  b.p("SemanticVersion", () => input.SemanticVersion, "{SemanticVersion}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      sourceCodeArchiveUrl: [, , `SourceCodeArchiveUrl`],
      sourceCodeUrl: [, , `SourceCodeUrl`],
      templateBody: [, , `TemplateBody`],
      templateUrl: [, , `TemplateUrl`]
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_CreateApplicationVersionCommand");
var se_CreateCloudFormationChangeSetCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/applications/{ApplicationId}/changesets");
  b.p("ApplicationId", () => input.ApplicationId, "{ApplicationId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      capabilities: [, (_) => (0, import_smithy_client._json)(_), `Capabilities`],
      changeSetName: [, , `ChangeSetName`],
      clientToken: [, , `ClientToken`],
      description: [, , `Description`],
      notificationArns: [, (_) => (0, import_smithy_client._json)(_), `NotificationArns`],
      parameterOverrides: [, (_) => se___listOfParameterValue(_, context), `ParameterOverrides`],
      resourceTypes: [, (_) => (0, import_smithy_client._json)(_), `ResourceTypes`],
      rollbackConfiguration: [, (_) => se_RollbackConfiguration(_, context), `RollbackConfiguration`],
      semanticVersion: [, , `SemanticVersion`],
      stackName: [, , `StackName`],
      tags: [, (_) => se___listOfTag(_, context), `Tags`],
      templateId: [, , `TemplateId`]
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateCloudFormationChangeSetCommand");
var se_CreateCloudFormationTemplateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/applications/{ApplicationId}/templates");
  b.p("ApplicationId", () => input.ApplicationId, "{ApplicationId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      semanticVersion: [, , `SemanticVersion`]
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateCloudFormationTemplateCommand");
var se_DeleteApplicationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{ApplicationId}");
  b.p("ApplicationId", () => input.ApplicationId, "{ApplicationId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteApplicationCommand");
var se_GetApplicationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{ApplicationId}");
  b.p("ApplicationId", () => input.ApplicationId, "{ApplicationId}", false);
  const query = (0, import_smithy_client.map)({
    [_sV]: [, input[_SV]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetApplicationCommand");
var se_GetApplicationPolicyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{ApplicationId}/policy");
  b.p("ApplicationId", () => input.ApplicationId, "{ApplicationId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetApplicationPolicyCommand");
var se_GetCloudFormationTemplateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{ApplicationId}/templates/{TemplateId}");
  b.p("ApplicationId", () => input.ApplicationId, "{ApplicationId}", false);
  b.p("TemplateId", () => input.TemplateId, "{TemplateId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetCloudFormationTemplateCommand");
var se_ListApplicationDependenciesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{ApplicationId}/dependencies");
  b.p("ApplicationId", () => input.ApplicationId, "{ApplicationId}", false);
  const query = (0, import_smithy_client.map)({
    [_mI]: [() => input.MaxItems !== void 0, () => input[_MI].toString()],
    [_nT]: [, input[_NT]],
    [_sV]: [, input[_SV]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListApplicationDependenciesCommand");
var se_ListApplicationsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications");
  const query = (0, import_smithy_client.map)({
    [_mI]: [() => input.MaxItems !== void 0, () => input[_MI].toString()],
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListApplicationsCommand");
var se_ListApplicationVersionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{ApplicationId}/versions");
  b.p("ApplicationId", () => input.ApplicationId, "{ApplicationId}", false);
  const query = (0, import_smithy_client.map)({
    [_mI]: [() => input.MaxItems !== void 0, () => input[_MI].toString()],
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListApplicationVersionsCommand");
var se_PutApplicationPolicyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/applications/{ApplicationId}/policy");
  b.p("ApplicationId", () => input.ApplicationId, "{ApplicationId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      statements: [, (_) => se___listOfApplicationPolicyStatement(_, context), `Statements`]
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_PutApplicationPolicyCommand");
var se_UnshareApplicationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/applications/{ApplicationId}/unshare");
  b.p("ApplicationId", () => input.ApplicationId, "{ApplicationId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      organizationId: [, , `OrganizationId`]
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UnshareApplicationCommand");
var se_UpdateApplicationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/applications/{ApplicationId}");
  b.p("ApplicationId", () => input.ApplicationId, "{ApplicationId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      author: [, , `Author`],
      description: [, , `Description`],
      homePageUrl: [, , `HomePageUrl`],
      labels: [, (_) => (0, import_smithy_client._json)(_), `Labels`],
      readmeBody: [, , `ReadmeBody`],
      readmeUrl: [, , `ReadmeUrl`]
    })
  );
  b.m("PATCH").h(headers).b(body);
  return b.build();
}, "se_UpdateApplicationCommand");
var de_CreateApplicationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ApplicationId: [, import_smithy_client.expectString, `applicationId`],
    Author: [, import_smithy_client.expectString, `author`],
    CreationTime: [, import_smithy_client.expectString, `creationTime`],
    Description: [, import_smithy_client.expectString, `description`],
    HomePageUrl: [, import_smithy_client.expectString, `homePageUrl`],
    IsVerifiedAuthor: [, import_smithy_client.expectBoolean, `isVerifiedAuthor`],
    Labels: [, import_smithy_client._json, `labels`],
    LicenseUrl: [, import_smithy_client.expectString, `licenseUrl`],
    Name: [, import_smithy_client.expectString, `name`],
    ReadmeUrl: [, import_smithy_client.expectString, `readmeUrl`],
    SpdxLicenseId: [, import_smithy_client.expectString, `spdxLicenseId`],
    VerifiedAuthorUrl: [, import_smithy_client.expectString, `verifiedAuthorUrl`],
    Version: [, (_) => de_Version(_, context), `version`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateApplicationCommand");
var de_CreateApplicationVersionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ApplicationId: [, import_smithy_client.expectString, `applicationId`],
    CreationTime: [, import_smithy_client.expectString, `creationTime`],
    ParameterDefinitions: [, (_) => de___listOfParameterDefinition(_, context), `parameterDefinitions`],
    RequiredCapabilities: [, import_smithy_client._json, `requiredCapabilities`],
    ResourcesSupported: [, import_smithy_client.expectBoolean, `resourcesSupported`],
    SemanticVersion: [, import_smithy_client.expectString, `semanticVersion`],
    SourceCodeArchiveUrl: [, import_smithy_client.expectString, `sourceCodeArchiveUrl`],
    SourceCodeUrl: [, import_smithy_client.expectString, `sourceCodeUrl`],
    TemplateUrl: [, import_smithy_client.expectString, `templateUrl`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateApplicationVersionCommand");
var de_CreateCloudFormationChangeSetCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ApplicationId: [, import_smithy_client.expectString, `applicationId`],
    ChangeSetId: [, import_smithy_client.expectString, `changeSetId`],
    SemanticVersion: [, import_smithy_client.expectString, `semanticVersion`],
    StackId: [, import_smithy_client.expectString, `stackId`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateCloudFormationChangeSetCommand");
var de_CreateCloudFormationTemplateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ApplicationId: [, import_smithy_client.expectString, `applicationId`],
    CreationTime: [, import_smithy_client.expectString, `creationTime`],
    ExpirationTime: [, import_smithy_client.expectString, `expirationTime`],
    SemanticVersion: [, import_smithy_client.expectString, `semanticVersion`],
    Status: [, import_smithy_client.expectString, `status`],
    TemplateId: [, import_smithy_client.expectString, `templateId`],
    TemplateUrl: [, import_smithy_client.expectString, `templateUrl`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateCloudFormationTemplateCommand");
var de_DeleteApplicationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteApplicationCommand");
var de_GetApplicationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ApplicationId: [, import_smithy_client.expectString, `applicationId`],
    Author: [, import_smithy_client.expectString, `author`],
    CreationTime: [, import_smithy_client.expectString, `creationTime`],
    Description: [, import_smithy_client.expectString, `description`],
    HomePageUrl: [, import_smithy_client.expectString, `homePageUrl`],
    IsVerifiedAuthor: [, import_smithy_client.expectBoolean, `isVerifiedAuthor`],
    Labels: [, import_smithy_client._json, `labels`],
    LicenseUrl: [, import_smithy_client.expectString, `licenseUrl`],
    Name: [, import_smithy_client.expectString, `name`],
    ReadmeUrl: [, import_smithy_client.expectString, `readmeUrl`],
    SpdxLicenseId: [, import_smithy_client.expectString, `spdxLicenseId`],
    VerifiedAuthorUrl: [, import_smithy_client.expectString, `verifiedAuthorUrl`],
    Version: [, (_) => de_Version(_, context), `version`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetApplicationCommand");
var de_GetApplicationPolicyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Statements: [, (_) => de___listOfApplicationPolicyStatement(_, context), `statements`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetApplicationPolicyCommand");
var de_GetCloudFormationTemplateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ApplicationId: [, import_smithy_client.expectString, `applicationId`],
    CreationTime: [, import_smithy_client.expectString, `creationTime`],
    ExpirationTime: [, import_smithy_client.expectString, `expirationTime`],
    SemanticVersion: [, import_smithy_client.expectString, `semanticVersion`],
    Status: [, import_smithy_client.expectString, `status`],
    TemplateId: [, import_smithy_client.expectString, `templateId`],
    TemplateUrl: [, import_smithy_client.expectString, `templateUrl`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetCloudFormationTemplateCommand");
var de_ListApplicationDependenciesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Dependencies: [, (_) => de___listOfApplicationDependencySummary(_, context), `dependencies`],
    NextToken: [, import_smithy_client.expectString, `nextToken`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListApplicationDependenciesCommand");
var de_ListApplicationsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Applications: [, (_) => de___listOfApplicationSummary(_, context), `applications`],
    NextToken: [, import_smithy_client.expectString, `nextToken`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListApplicationsCommand");
var de_ListApplicationVersionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    NextToken: [, import_smithy_client.expectString, `nextToken`],
    Versions: [, (_) => de___listOfVersionSummary(_, context), `versions`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListApplicationVersionsCommand");
var de_PutApplicationPolicyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Statements: [, (_) => de___listOfApplicationPolicyStatement(_, context), `statements`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_PutApplicationPolicyCommand");
var de_UnshareApplicationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UnshareApplicationCommand");
var de_UpdateApplicationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ApplicationId: [, import_smithy_client.expectString, `applicationId`],
    Author: [, import_smithy_client.expectString, `author`],
    CreationTime: [, import_smithy_client.expectString, `creationTime`],
    Description: [, import_smithy_client.expectString, `description`],
    HomePageUrl: [, import_smithy_client.expectString, `homePageUrl`],
    IsVerifiedAuthor: [, import_smithy_client.expectBoolean, `isVerifiedAuthor`],
    Labels: [, import_smithy_client._json, `labels`],
    LicenseUrl: [, import_smithy_client.expectString, `licenseUrl`],
    Name: [, import_smithy_client.expectString, `name`],
    ReadmeUrl: [, import_smithy_client.expectString, `readmeUrl`],
    SpdxLicenseId: [, import_smithy_client.expectString, `spdxLicenseId`],
    VerifiedAuthorUrl: [, import_smithy_client.expectString, `verifiedAuthorUrl`],
    Version: [, (_) => de_Version(_, context), `version`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateApplicationCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await (0, import_core2.parseJsonErrorBody)(output.body, context)
  };
  const errorCode = (0, import_core2.loadRestJsonErrorCode)(output, parsedOutput.body);
  switch (errorCode) {
    case "BadRequestException":
    case "com.amazonaws.serverlessapplicationrepository#BadRequestException":
      throw await de_BadRequestExceptionRes(parsedOutput, context);
    case "ConflictException":
    case "com.amazonaws.serverlessapplicationrepository#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    case "ForbiddenException":
    case "com.amazonaws.serverlessapplicationrepository#ForbiddenException":
      throw await de_ForbiddenExceptionRes(parsedOutput, context);
    case "InternalServerErrorException":
    case "com.amazonaws.serverlessapplicationrepository#InternalServerErrorException":
      throw await de_InternalServerErrorExceptionRes(parsedOutput, context);
    case "TooManyRequestsException":
    case "com.amazonaws.serverlessapplicationrepository#TooManyRequestsException":
      throw await de_TooManyRequestsExceptionRes(parsedOutput, context);
    case "NotFoundException":
    case "com.amazonaws.serverlessapplicationrepository#NotFoundException":
      throw await de_NotFoundExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var throwDefaultError = (0, import_smithy_client.withBaseException)(ServerlessApplicationRepositoryServiceException);
var de_BadRequestExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    ErrorCode: [, import_smithy_client.expectString, `errorCode`],
    Message: [, import_smithy_client.expectString, `message`]
  });
  Object.assign(contents, doc);
  const exception = new BadRequestException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_BadRequestExceptionRes");
var de_ConflictExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    ErrorCode: [, import_smithy_client.expectString, `errorCode`],
    Message: [, import_smithy_client.expectString, `message`]
  });
  Object.assign(contents, doc);
  const exception = new ConflictException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ConflictExceptionRes");
var de_ForbiddenExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    ErrorCode: [, import_smithy_client.expectString, `errorCode`],
    Message: [, import_smithy_client.expectString, `message`]
  });
  Object.assign(contents, doc);
  const exception = new ForbiddenException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ForbiddenExceptionRes");
var de_InternalServerErrorExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    ErrorCode: [, import_smithy_client.expectString, `errorCode`],
    Message: [, import_smithy_client.expectString, `message`]
  });
  Object.assign(contents, doc);
  const exception = new InternalServerErrorException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_InternalServerErrorExceptionRes");
var de_NotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    ErrorCode: [, import_smithy_client.expectString, `errorCode`],
    Message: [, import_smithy_client.expectString, `message`]
  });
  Object.assign(contents, doc);
  const exception = new NotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_NotFoundExceptionRes");
var de_TooManyRequestsExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    ErrorCode: [, import_smithy_client.expectString, `errorCode`],
    Message: [, import_smithy_client.expectString, `message`]
  });
  Object.assign(contents, doc);
  const exception = new TooManyRequestsException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_TooManyRequestsExceptionRes");
var se___listOfApplicationPolicyStatement = /* @__PURE__ */ __name((input, context) => {
  return input.filter((e) => e != null).map((entry) => {
    return se_ApplicationPolicyStatement(entry, context);
  });
}, "se___listOfApplicationPolicyStatement");
var se___listOfParameterValue = /* @__PURE__ */ __name((input, context) => {
  return input.filter((e) => e != null).map((entry) => {
    return se_ParameterValue(entry, context);
  });
}, "se___listOfParameterValue");
var se___listOfRollbackTrigger = /* @__PURE__ */ __name((input, context) => {
  return input.filter((e) => e != null).map((entry) => {
    return se_RollbackTrigger(entry, context);
  });
}, "se___listOfRollbackTrigger");
var se___listOfTag = /* @__PURE__ */ __name((input, context) => {
  return input.filter((e) => e != null).map((entry) => {
    return se_Tag(entry, context);
  });
}, "se___listOfTag");
var se_ApplicationPolicyStatement = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    actions: [, import_smithy_client._json, `Actions`],
    principalOrgIDs: [, import_smithy_client._json, `PrincipalOrgIDs`],
    principals: [, import_smithy_client._json, `Principals`],
    statementId: [, , `StatementId`]
  });
}, "se_ApplicationPolicyStatement");
var se_ParameterValue = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    name: [, , `Name`],
    value: [, , `Value`]
  });
}, "se_ParameterValue");
var se_RollbackConfiguration = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    monitoringTimeInMinutes: [, , `MonitoringTimeInMinutes`],
    rollbackTriggers: [, (_) => se___listOfRollbackTrigger(_, context), `RollbackTriggers`]
  });
}, "se_RollbackConfiguration");
var se_RollbackTrigger = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    arn: [, , `Arn`],
    type: [, , `Type`]
  });
}, "se_RollbackTrigger");
var se_Tag = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    key: [, , `Key`],
    value: [, , `Value`]
  });
}, "se_Tag");
var de___listOfApplicationDependencySummary = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ApplicationDependencySummary(entry, context);
  });
  return retVal;
}, "de___listOfApplicationDependencySummary");
var de___listOfApplicationPolicyStatement = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ApplicationPolicyStatement(entry, context);
  });
  return retVal;
}, "de___listOfApplicationPolicyStatement");
var de___listOfApplicationSummary = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ApplicationSummary(entry, context);
  });
  return retVal;
}, "de___listOfApplicationSummary");
var de___listOfParameterDefinition = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ParameterDefinition(entry, context);
  });
  return retVal;
}, "de___listOfParameterDefinition");
var de___listOfVersionSummary = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_VersionSummary(entry, context);
  });
  return retVal;
}, "de___listOfVersionSummary");
var de_ApplicationDependencySummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ApplicationId: [, import_smithy_client.expectString, `applicationId`],
    SemanticVersion: [, import_smithy_client.expectString, `semanticVersion`]
  });
}, "de_ApplicationDependencySummary");
var de_ApplicationPolicyStatement = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Actions: [, import_smithy_client._json, `actions`],
    PrincipalOrgIDs: [, import_smithy_client._json, `principalOrgIDs`],
    Principals: [, import_smithy_client._json, `principals`],
    StatementId: [, import_smithy_client.expectString, `statementId`]
  });
}, "de_ApplicationPolicyStatement");
var de_ApplicationSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ApplicationId: [, import_smithy_client.expectString, `applicationId`],
    Author: [, import_smithy_client.expectString, `author`],
    CreationTime: [, import_smithy_client.expectString, `creationTime`],
    Description: [, import_smithy_client.expectString, `description`],
    HomePageUrl: [, import_smithy_client.expectString, `homePageUrl`],
    Labels: [, import_smithy_client._json, `labels`],
    Name: [, import_smithy_client.expectString, `name`],
    SpdxLicenseId: [, import_smithy_client.expectString, `spdxLicenseId`]
  });
}, "de_ApplicationSummary");
var de_ParameterDefinition = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    AllowedPattern: [, import_smithy_client.expectString, `allowedPattern`],
    AllowedValues: [, import_smithy_client._json, `allowedValues`],
    ConstraintDescription: [, import_smithy_client.expectString, `constraintDescription`],
    DefaultValue: [, import_smithy_client.expectString, `defaultValue`],
    Description: [, import_smithy_client.expectString, `description`],
    MaxLength: [, import_smithy_client.expectInt32, `maxLength`],
    MaxValue: [, import_smithy_client.expectInt32, `maxValue`],
    MinLength: [, import_smithy_client.expectInt32, `minLength`],
    MinValue: [, import_smithy_client.expectInt32, `minValue`],
    Name: [, import_smithy_client.expectString, `name`],
    NoEcho: [, import_smithy_client.expectBoolean, `noEcho`],
    ReferencedByResources: [, import_smithy_client._json, `referencedByResources`],
    Type: [, import_smithy_client.expectString, `type`]
  });
}, "de_ParameterDefinition");
var de_Version = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ApplicationId: [, import_smithy_client.expectString, `applicationId`],
    CreationTime: [, import_smithy_client.expectString, `creationTime`],
    ParameterDefinitions: [, (_) => de___listOfParameterDefinition(_, context), `parameterDefinitions`],
    RequiredCapabilities: [, import_smithy_client._json, `requiredCapabilities`],
    ResourcesSupported: [, import_smithy_client.expectBoolean, `resourcesSupported`],
    SemanticVersion: [, import_smithy_client.expectString, `semanticVersion`],
    SourceCodeArchiveUrl: [, import_smithy_client.expectString, `sourceCodeArchiveUrl`],
    SourceCodeUrl: [, import_smithy_client.expectString, `sourceCodeUrl`],
    TemplateUrl: [, import_smithy_client.expectString, `templateUrl`]
  });
}, "de_Version");
var de_VersionSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ApplicationId: [, import_smithy_client.expectString, `applicationId`],
    CreationTime: [, import_smithy_client.expectString, `creationTime`],
    SemanticVersion: [, import_smithy_client.expectString, `semanticVersion`],
    SourceCodeUrl: [, import_smithy_client.expectString, `sourceCodeUrl`]
  });
}, "de_VersionSummary");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var _MI = "MaxItems";
var _NT = "NextToken";
var _SV = "SemanticVersion";
var _mI = "maxItems";
var _nT = "nextToken";
var _sV = "semanticVersion";

// src/commands/CreateApplicationCommand.ts
var _CreateApplicationCommand = class _CreateApplicationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ServerlessApplicationRepository", "CreateApplication", {}).n("ServerlessApplicationRepositoryClient", "CreateApplicationCommand").f(void 0, void 0).ser(se_CreateApplicationCommand).de(de_CreateApplicationCommand).build() {
};
__name(_CreateApplicationCommand, "CreateApplicationCommand");
var CreateApplicationCommand = _CreateApplicationCommand;

// src/commands/CreateApplicationVersionCommand.ts




var _CreateApplicationVersionCommand = class _CreateApplicationVersionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ServerlessApplicationRepository", "CreateApplicationVersion", {}).n("ServerlessApplicationRepositoryClient", "CreateApplicationVersionCommand").f(void 0, void 0).ser(se_CreateApplicationVersionCommand).de(de_CreateApplicationVersionCommand).build() {
};
__name(_CreateApplicationVersionCommand, "CreateApplicationVersionCommand");
var CreateApplicationVersionCommand = _CreateApplicationVersionCommand;

// src/commands/CreateCloudFormationChangeSetCommand.ts




var _CreateCloudFormationChangeSetCommand = class _CreateCloudFormationChangeSetCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ServerlessApplicationRepository", "CreateCloudFormationChangeSet", {}).n("ServerlessApplicationRepositoryClient", "CreateCloudFormationChangeSetCommand").f(void 0, void 0).ser(se_CreateCloudFormationChangeSetCommand).de(de_CreateCloudFormationChangeSetCommand).build() {
};
__name(_CreateCloudFormationChangeSetCommand, "CreateCloudFormationChangeSetCommand");
var CreateCloudFormationChangeSetCommand = _CreateCloudFormationChangeSetCommand;

// src/commands/CreateCloudFormationTemplateCommand.ts




var _CreateCloudFormationTemplateCommand = class _CreateCloudFormationTemplateCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ServerlessApplicationRepository", "CreateCloudFormationTemplate", {}).n("ServerlessApplicationRepositoryClient", "CreateCloudFormationTemplateCommand").f(void 0, void 0).ser(se_CreateCloudFormationTemplateCommand).de(de_CreateCloudFormationTemplateCommand).build() {
};
__name(_CreateCloudFormationTemplateCommand, "CreateCloudFormationTemplateCommand");
var CreateCloudFormationTemplateCommand = _CreateCloudFormationTemplateCommand;

// src/commands/DeleteApplicationCommand.ts




var _DeleteApplicationCommand = class _DeleteApplicationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ServerlessApplicationRepository", "DeleteApplication", {}).n("ServerlessApplicationRepositoryClient", "DeleteApplicationCommand").f(void 0, void 0).ser(se_DeleteApplicationCommand).de(de_DeleteApplicationCommand).build() {
};
__name(_DeleteApplicationCommand, "DeleteApplicationCommand");
var DeleteApplicationCommand = _DeleteApplicationCommand;

// src/commands/GetApplicationCommand.ts




var _GetApplicationCommand = class _GetApplicationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ServerlessApplicationRepository", "GetApplication", {}).n("ServerlessApplicationRepositoryClient", "GetApplicationCommand").f(void 0, void 0).ser(se_GetApplicationCommand).de(de_GetApplicationCommand).build() {
};
__name(_GetApplicationCommand, "GetApplicationCommand");
var GetApplicationCommand = _GetApplicationCommand;

// src/commands/GetApplicationPolicyCommand.ts




var _GetApplicationPolicyCommand = class _GetApplicationPolicyCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ServerlessApplicationRepository", "GetApplicationPolicy", {}).n("ServerlessApplicationRepositoryClient", "GetApplicationPolicyCommand").f(void 0, void 0).ser(se_GetApplicationPolicyCommand).de(de_GetApplicationPolicyCommand).build() {
};
__name(_GetApplicationPolicyCommand, "GetApplicationPolicyCommand");
var GetApplicationPolicyCommand = _GetApplicationPolicyCommand;

// src/commands/GetCloudFormationTemplateCommand.ts




var _GetCloudFormationTemplateCommand = class _GetCloudFormationTemplateCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ServerlessApplicationRepository", "GetCloudFormationTemplate", {}).n("ServerlessApplicationRepositoryClient", "GetCloudFormationTemplateCommand").f(void 0, void 0).ser(se_GetCloudFormationTemplateCommand).de(de_GetCloudFormationTemplateCommand).build() {
};
__name(_GetCloudFormationTemplateCommand, "GetCloudFormationTemplateCommand");
var GetCloudFormationTemplateCommand = _GetCloudFormationTemplateCommand;

// src/commands/ListApplicationDependenciesCommand.ts




var _ListApplicationDependenciesCommand = class _ListApplicationDependenciesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ServerlessApplicationRepository", "ListApplicationDependencies", {}).n("ServerlessApplicationRepositoryClient", "ListApplicationDependenciesCommand").f(void 0, void 0).ser(se_ListApplicationDependenciesCommand).de(de_ListApplicationDependenciesCommand).build() {
};
__name(_ListApplicationDependenciesCommand, "ListApplicationDependenciesCommand");
var ListApplicationDependenciesCommand = _ListApplicationDependenciesCommand;

// src/commands/ListApplicationsCommand.ts




var _ListApplicationsCommand = class _ListApplicationsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ServerlessApplicationRepository", "ListApplications", {}).n("ServerlessApplicationRepositoryClient", "ListApplicationsCommand").f(void 0, void 0).ser(se_ListApplicationsCommand).de(de_ListApplicationsCommand).build() {
};
__name(_ListApplicationsCommand, "ListApplicationsCommand");
var ListApplicationsCommand = _ListApplicationsCommand;

// src/commands/ListApplicationVersionsCommand.ts




var _ListApplicationVersionsCommand = class _ListApplicationVersionsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ServerlessApplicationRepository", "ListApplicationVersions", {}).n("ServerlessApplicationRepositoryClient", "ListApplicationVersionsCommand").f(void 0, void 0).ser(se_ListApplicationVersionsCommand).de(de_ListApplicationVersionsCommand).build() {
};
__name(_ListApplicationVersionsCommand, "ListApplicationVersionsCommand");
var ListApplicationVersionsCommand = _ListApplicationVersionsCommand;

// src/commands/PutApplicationPolicyCommand.ts




var _PutApplicationPolicyCommand = class _PutApplicationPolicyCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ServerlessApplicationRepository", "PutApplicationPolicy", {}).n("ServerlessApplicationRepositoryClient", "PutApplicationPolicyCommand").f(void 0, void 0).ser(se_PutApplicationPolicyCommand).de(de_PutApplicationPolicyCommand).build() {
};
__name(_PutApplicationPolicyCommand, "PutApplicationPolicyCommand");
var PutApplicationPolicyCommand = _PutApplicationPolicyCommand;

// src/commands/UnshareApplicationCommand.ts




var _UnshareApplicationCommand = class _UnshareApplicationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ServerlessApplicationRepository", "UnshareApplication", {}).n("ServerlessApplicationRepositoryClient", "UnshareApplicationCommand").f(void 0, void 0).ser(se_UnshareApplicationCommand).de(de_UnshareApplicationCommand).build() {
};
__name(_UnshareApplicationCommand, "UnshareApplicationCommand");
var UnshareApplicationCommand = _UnshareApplicationCommand;

// src/commands/UpdateApplicationCommand.ts




var _UpdateApplicationCommand = class _UpdateApplicationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ServerlessApplicationRepository", "UpdateApplication", {}).n("ServerlessApplicationRepositoryClient", "UpdateApplicationCommand").f(void 0, void 0).ser(se_UpdateApplicationCommand).de(de_UpdateApplicationCommand).build() {
};
__name(_UpdateApplicationCommand, "UpdateApplicationCommand");
var UpdateApplicationCommand = _UpdateApplicationCommand;

// src/ServerlessApplicationRepository.ts
var commands = {
  CreateApplicationCommand,
  CreateApplicationVersionCommand,
  CreateCloudFormationChangeSetCommand,
  CreateCloudFormationTemplateCommand,
  DeleteApplicationCommand,
  GetApplicationCommand,
  GetApplicationPolicyCommand,
  GetCloudFormationTemplateCommand,
  ListApplicationDependenciesCommand,
  ListApplicationsCommand,
  ListApplicationVersionsCommand,
  PutApplicationPolicyCommand,
  UnshareApplicationCommand,
  UpdateApplicationCommand
};
var _ServerlessApplicationRepository = class _ServerlessApplicationRepository extends ServerlessApplicationRepositoryClient {
};
__name(_ServerlessApplicationRepository, "ServerlessApplicationRepository");
var ServerlessApplicationRepository = _ServerlessApplicationRepository;
(0, import_smithy_client.createAggregatedClient)(commands, ServerlessApplicationRepository);

// src/pagination/ListApplicationDependenciesPaginator.ts

var paginateListApplicationDependencies = (0, import_core.createPaginator)(ServerlessApplicationRepositoryClient, ListApplicationDependenciesCommand, "NextToken", "NextToken", "MaxItems");

// src/pagination/ListApplicationVersionsPaginator.ts

var paginateListApplicationVersions = (0, import_core.createPaginator)(ServerlessApplicationRepositoryClient, ListApplicationVersionsCommand, "NextToken", "NextToken", "MaxItems");

// src/pagination/ListApplicationsPaginator.ts

var paginateListApplications = (0, import_core.createPaginator)(ServerlessApplicationRepositoryClient, ListApplicationsCommand, "NextToken", "NextToken", "MaxItems");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  ServerlessApplicationRepositoryServiceException,
  __Client,
  ServerlessApplicationRepositoryClient,
  ServerlessApplicationRepository,
  $Command,
  CreateApplicationCommand,
  CreateApplicationVersionCommand,
  CreateCloudFormationChangeSetCommand,
  CreateCloudFormationTemplateCommand,
  DeleteApplicationCommand,
  GetApplicationCommand,
  GetApplicationPolicyCommand,
  GetCloudFormationTemplateCommand,
  ListApplicationDependenciesCommand,
  ListApplicationVersionsCommand,
  ListApplicationsCommand,
  PutApplicationPolicyCommand,
  UnshareApplicationCommand,
  UpdateApplicationCommand,
  paginateListApplicationDependencies,
  paginateListApplicationVersions,
  paginateListApplications,
  Capability,
  BadRequestException,
  ConflictException,
  ForbiddenException,
  InternalServerErrorException,
  TooManyRequestsException,
  Status,
  NotFoundException
});

