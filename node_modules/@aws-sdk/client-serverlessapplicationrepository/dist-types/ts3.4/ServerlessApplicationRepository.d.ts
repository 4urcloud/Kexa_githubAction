import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import {
  CreateApplicationCommandInput,
  CreateApplicationCommandOutput,
} from "./commands/CreateApplicationCommand";
import {
  CreateApplicationVersionCommandInput,
  CreateApplicationVersionCommandOutput,
} from "./commands/CreateApplicationVersionCommand";
import {
  CreateCloudFormationChangeSetCommandInput,
  CreateCloudFormationChangeSetCommandOutput,
} from "./commands/CreateCloudFormationChangeSetCommand";
import {
  CreateCloudFormationTemplateCommandInput,
  CreateCloudFormationTemplateCommandOutput,
} from "./commands/CreateCloudFormationTemplateCommand";
import {
  DeleteApplicationCommandInput,
  DeleteApplicationCommandOutput,
} from "./commands/DeleteApplicationCommand";
import {
  GetApplicationCommandInput,
  GetApplicationCommandOutput,
} from "./commands/GetApplicationCommand";
import {
  GetApplicationPolicyCommandInput,
  GetApplicationPolicyCommandOutput,
} from "./commands/GetApplicationPolicyCommand";
import {
  GetCloudFormationTemplateCommandInput,
  GetCloudFormationTemplateCommandOutput,
} from "./commands/GetCloudFormationTemplateCommand";
import {
  ListApplicationDependenciesCommandInput,
  ListApplicationDependenciesCommandOutput,
} from "./commands/ListApplicationDependenciesCommand";
import {
  ListApplicationsCommandInput,
  ListApplicationsCommandOutput,
} from "./commands/ListApplicationsCommand";
import {
  ListApplicationVersionsCommandInput,
  ListApplicationVersionsCommandOutput,
} from "./commands/ListApplicationVersionsCommand";
import {
  PutApplicationPolicyCommandInput,
  PutApplicationPolicyCommandOutput,
} from "./commands/PutApplicationPolicyCommand";
import {
  UnshareApplicationCommandInput,
  UnshareApplicationCommandOutput,
} from "./commands/UnshareApplicationCommand";
import {
  UpdateApplicationCommandInput,
  UpdateApplicationCommandOutput,
} from "./commands/UpdateApplicationCommand";
import { ServerlessApplicationRepositoryClient } from "./ServerlessApplicationRepositoryClient";
export interface ServerlessApplicationRepository {
  createApplication(
    args: CreateApplicationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateApplicationCommandOutput>;
  createApplication(
    args: CreateApplicationCommandInput,
    cb: (err: any, data?: CreateApplicationCommandOutput) => void
  ): void;
  createApplication(
    args: CreateApplicationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateApplicationCommandOutput) => void
  ): void;
  createApplicationVersion(
    args: CreateApplicationVersionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateApplicationVersionCommandOutput>;
  createApplicationVersion(
    args: CreateApplicationVersionCommandInput,
    cb: (err: any, data?: CreateApplicationVersionCommandOutput) => void
  ): void;
  createApplicationVersion(
    args: CreateApplicationVersionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateApplicationVersionCommandOutput) => void
  ): void;
  createCloudFormationChangeSet(
    args: CreateCloudFormationChangeSetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateCloudFormationChangeSetCommandOutput>;
  createCloudFormationChangeSet(
    args: CreateCloudFormationChangeSetCommandInput,
    cb: (err: any, data?: CreateCloudFormationChangeSetCommandOutput) => void
  ): void;
  createCloudFormationChangeSet(
    args: CreateCloudFormationChangeSetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateCloudFormationChangeSetCommandOutput) => void
  ): void;
  createCloudFormationTemplate(
    args: CreateCloudFormationTemplateCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateCloudFormationTemplateCommandOutput>;
  createCloudFormationTemplate(
    args: CreateCloudFormationTemplateCommandInput,
    cb: (err: any, data?: CreateCloudFormationTemplateCommandOutput) => void
  ): void;
  createCloudFormationTemplate(
    args: CreateCloudFormationTemplateCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateCloudFormationTemplateCommandOutput) => void
  ): void;
  deleteApplication(
    args: DeleteApplicationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteApplicationCommandOutput>;
  deleteApplication(
    args: DeleteApplicationCommandInput,
    cb: (err: any, data?: DeleteApplicationCommandOutput) => void
  ): void;
  deleteApplication(
    args: DeleteApplicationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteApplicationCommandOutput) => void
  ): void;
  getApplication(
    args: GetApplicationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetApplicationCommandOutput>;
  getApplication(
    args: GetApplicationCommandInput,
    cb: (err: any, data?: GetApplicationCommandOutput) => void
  ): void;
  getApplication(
    args: GetApplicationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetApplicationCommandOutput) => void
  ): void;
  getApplicationPolicy(
    args: GetApplicationPolicyCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetApplicationPolicyCommandOutput>;
  getApplicationPolicy(
    args: GetApplicationPolicyCommandInput,
    cb: (err: any, data?: GetApplicationPolicyCommandOutput) => void
  ): void;
  getApplicationPolicy(
    args: GetApplicationPolicyCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetApplicationPolicyCommandOutput) => void
  ): void;
  getCloudFormationTemplate(
    args: GetCloudFormationTemplateCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetCloudFormationTemplateCommandOutput>;
  getCloudFormationTemplate(
    args: GetCloudFormationTemplateCommandInput,
    cb: (err: any, data?: GetCloudFormationTemplateCommandOutput) => void
  ): void;
  getCloudFormationTemplate(
    args: GetCloudFormationTemplateCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetCloudFormationTemplateCommandOutput) => void
  ): void;
  listApplicationDependencies(
    args: ListApplicationDependenciesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListApplicationDependenciesCommandOutput>;
  listApplicationDependencies(
    args: ListApplicationDependenciesCommandInput,
    cb: (err: any, data?: ListApplicationDependenciesCommandOutput) => void
  ): void;
  listApplicationDependencies(
    args: ListApplicationDependenciesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListApplicationDependenciesCommandOutput) => void
  ): void;
  listApplications(
    args: ListApplicationsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListApplicationsCommandOutput>;
  listApplications(
    args: ListApplicationsCommandInput,
    cb: (err: any, data?: ListApplicationsCommandOutput) => void
  ): void;
  listApplications(
    args: ListApplicationsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListApplicationsCommandOutput) => void
  ): void;
  listApplicationVersions(
    args: ListApplicationVersionsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListApplicationVersionsCommandOutput>;
  listApplicationVersions(
    args: ListApplicationVersionsCommandInput,
    cb: (err: any, data?: ListApplicationVersionsCommandOutput) => void
  ): void;
  listApplicationVersions(
    args: ListApplicationVersionsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListApplicationVersionsCommandOutput) => void
  ): void;
  putApplicationPolicy(
    args: PutApplicationPolicyCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PutApplicationPolicyCommandOutput>;
  putApplicationPolicy(
    args: PutApplicationPolicyCommandInput,
    cb: (err: any, data?: PutApplicationPolicyCommandOutput) => void
  ): void;
  putApplicationPolicy(
    args: PutApplicationPolicyCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: PutApplicationPolicyCommandOutput) => void
  ): void;
  unshareApplication(
    args: UnshareApplicationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UnshareApplicationCommandOutput>;
  unshareApplication(
    args: UnshareApplicationCommandInput,
    cb: (err: any, data?: UnshareApplicationCommandOutput) => void
  ): void;
  unshareApplication(
    args: UnshareApplicationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UnshareApplicationCommandOutput) => void
  ): void;
  updateApplication(
    args: UpdateApplicationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateApplicationCommandOutput>;
  updateApplication(
    args: UpdateApplicationCommandInput,
    cb: (err: any, data?: UpdateApplicationCommandOutput) => void
  ): void;
  updateApplication(
    args: UpdateApplicationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateApplicationCommandOutput) => void
  ): void;
}
export declare class ServerlessApplicationRepository
  extends ServerlessApplicationRepositoryClient
  implements ServerlessApplicationRepository {}
