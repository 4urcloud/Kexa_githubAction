import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { ServerlessApplicationRepositoryServiceException as __BaseException } from "./ServerlessApplicationRepositoryServiceException";
export interface ApplicationDependencySummary {
  ApplicationId: string | undefined;
  SemanticVersion: string | undefined;
}
export interface ApplicationPolicyStatement {
  Actions: string[] | undefined;
  PrincipalOrgIDs?: string[];
  Principals: string[] | undefined;
  StatementId?: string;
}
export interface ApplicationSummary {
  ApplicationId: string | undefined;
  Author: string | undefined;
  CreationTime?: string;
  Description: string | undefined;
  HomePageUrl?: string;
  Labels?: string[];
  Name: string | undefined;
  SpdxLicenseId?: string;
}
export declare const Capability: {
  readonly CAPABILITY_AUTO_EXPAND: "CAPABILITY_AUTO_EXPAND";
  readonly CAPABILITY_IAM: "CAPABILITY_IAM";
  readonly CAPABILITY_NAMED_IAM: "CAPABILITY_NAMED_IAM";
  readonly CAPABILITY_RESOURCE_POLICY: "CAPABILITY_RESOURCE_POLICY";
};
export type Capability = (typeof Capability)[keyof typeof Capability];
export interface ParameterDefinition {
  AllowedPattern?: string;
  AllowedValues?: string[];
  ConstraintDescription?: string;
  DefaultValue?: string;
  Description?: string;
  MaxLength?: number;
  MaxValue?: number;
  MinLength?: number;
  MinValue?: number;
  Name: string | undefined;
  NoEcho?: boolean;
  ReferencedByResources: string[] | undefined;
  Type?: string;
}
export interface ParameterValue {
  Name: string | undefined;
  Value: string | undefined;
}
export interface RollbackTrigger {
  Arn: string | undefined;
  Type: string | undefined;
}
export interface Tag {
  Key: string | undefined;
  Value: string | undefined;
}
export interface VersionSummary {
  ApplicationId: string | undefined;
  CreationTime: string | undefined;
  SemanticVersion: string | undefined;
  SourceCodeUrl?: string;
}
export declare class BadRequestException extends __BaseException {
  readonly name: "BadRequestException";
  readonly $fault: "client";
  ErrorCode?: string;
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<BadRequestException, __BaseException>
  );
}
export declare class ConflictException extends __BaseException {
  readonly name: "ConflictException";
  readonly $fault: "client";
  ErrorCode?: string;
  Message?: string;
  constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
}
export interface CreateApplicationRequest {
  Author: string | undefined;
  Description: string | undefined;
  HomePageUrl?: string;
  Labels?: string[];
  LicenseBody?: string;
  LicenseUrl?: string;
  Name: string | undefined;
  ReadmeBody?: string;
  ReadmeUrl?: string;
  SemanticVersion?: string;
  SourceCodeArchiveUrl?: string;
  SourceCodeUrl?: string;
  SpdxLicenseId?: string;
  TemplateBody?: string;
  TemplateUrl?: string;
}
export interface Version {
  ApplicationId: string | undefined;
  CreationTime: string | undefined;
  ParameterDefinitions: ParameterDefinition[] | undefined;
  RequiredCapabilities: Capability[] | undefined;
  ResourcesSupported: boolean | undefined;
  SemanticVersion: string | undefined;
  SourceCodeArchiveUrl?: string;
  SourceCodeUrl?: string;
  TemplateUrl: string | undefined;
}
export interface CreateApplicationResponse {
  ApplicationId?: string;
  Author?: string;
  CreationTime?: string;
  Description?: string;
  HomePageUrl?: string;
  IsVerifiedAuthor?: boolean;
  Labels?: string[];
  LicenseUrl?: string;
  Name?: string;
  ReadmeUrl?: string;
  SpdxLicenseId?: string;
  VerifiedAuthorUrl?: string;
  Version?: Version;
}
export declare class ForbiddenException extends __BaseException {
  readonly name: "ForbiddenException";
  readonly $fault: "client";
  ErrorCode?: string;
  Message?: string;
  constructor(opts: __ExceptionOptionType<ForbiddenException, __BaseException>);
}
export declare class InternalServerErrorException extends __BaseException {
  readonly name: "InternalServerErrorException";
  readonly $fault: "server";
  ErrorCode?: string;
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<InternalServerErrorException, __BaseException>
  );
}
export declare class TooManyRequestsException extends __BaseException {
  readonly name: "TooManyRequestsException";
  readonly $fault: "client";
  ErrorCode?: string;
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<TooManyRequestsException, __BaseException>
  );
}
export interface CreateApplicationVersionRequest {
  ApplicationId: string | undefined;
  SemanticVersion: string | undefined;
  SourceCodeArchiveUrl?: string;
  SourceCodeUrl?: string;
  TemplateBody?: string;
  TemplateUrl?: string;
}
export interface CreateApplicationVersionResponse {
  ApplicationId?: string;
  CreationTime?: string;
  ParameterDefinitions?: ParameterDefinition[];
  RequiredCapabilities?: Capability[];
  ResourcesSupported?: boolean;
  SemanticVersion?: string;
  SourceCodeArchiveUrl?: string;
  SourceCodeUrl?: string;
  TemplateUrl?: string;
}
export interface RollbackConfiguration {
  MonitoringTimeInMinutes?: number;
  RollbackTriggers?: RollbackTrigger[];
}
export interface CreateCloudFormationChangeSetRequest {
  ApplicationId: string | undefined;
  Capabilities?: string[];
  ChangeSetName?: string;
  ClientToken?: string;
  Description?: string;
  NotificationArns?: string[];
  ParameterOverrides?: ParameterValue[];
  ResourceTypes?: string[];
  RollbackConfiguration?: RollbackConfiguration;
  SemanticVersion?: string;
  StackName: string | undefined;
  Tags?: Tag[];
  TemplateId?: string;
}
export interface CreateCloudFormationChangeSetResponse {
  ApplicationId?: string;
  ChangeSetId?: string;
  SemanticVersion?: string;
  StackId?: string;
}
export interface CreateCloudFormationTemplateRequest {
  ApplicationId: string | undefined;
  SemanticVersion?: string;
}
export declare const Status: {
  readonly ACTIVE: "ACTIVE";
  readonly EXPIRED: "EXPIRED";
  readonly PREPARING: "PREPARING";
};
export type Status = (typeof Status)[keyof typeof Status];
export interface CreateCloudFormationTemplateResponse {
  ApplicationId?: string;
  CreationTime?: string;
  ExpirationTime?: string;
  SemanticVersion?: string;
  Status?: Status;
  TemplateId?: string;
  TemplateUrl?: string;
}
export declare class NotFoundException extends __BaseException {
  readonly name: "NotFoundException";
  readonly $fault: "client";
  ErrorCode?: string;
  Message?: string;
  constructor(opts: __ExceptionOptionType<NotFoundException, __BaseException>);
}
export interface DeleteApplicationRequest {
  ApplicationId: string | undefined;
}
export interface GetApplicationRequest {
  ApplicationId: string | undefined;
  SemanticVersion?: string;
}
export interface GetApplicationResponse {
  ApplicationId?: string;
  Author?: string;
  CreationTime?: string;
  Description?: string;
  HomePageUrl?: string;
  IsVerifiedAuthor?: boolean;
  Labels?: string[];
  LicenseUrl?: string;
  Name?: string;
  ReadmeUrl?: string;
  SpdxLicenseId?: string;
  VerifiedAuthorUrl?: string;
  Version?: Version;
}
export interface GetApplicationPolicyRequest {
  ApplicationId: string | undefined;
}
export interface GetApplicationPolicyResponse {
  Statements?: ApplicationPolicyStatement[];
}
export interface GetCloudFormationTemplateRequest {
  ApplicationId: string | undefined;
  TemplateId: string | undefined;
}
export interface GetCloudFormationTemplateResponse {
  ApplicationId?: string;
  CreationTime?: string;
  ExpirationTime?: string;
  SemanticVersion?: string;
  Status?: Status;
  TemplateId?: string;
  TemplateUrl?: string;
}
export interface ListApplicationDependenciesRequest {
  ApplicationId: string | undefined;
  MaxItems?: number;
  NextToken?: string;
  SemanticVersion?: string;
}
export interface ListApplicationDependenciesResponse {
  Dependencies?: ApplicationDependencySummary[];
  NextToken?: string;
}
export interface ListApplicationsRequest {
  MaxItems?: number;
  NextToken?: string;
}
export interface ListApplicationsResponse {
  Applications?: ApplicationSummary[];
  NextToken?: string;
}
export interface ListApplicationVersionsRequest {
  ApplicationId: string | undefined;
  MaxItems?: number;
  NextToken?: string;
}
export interface ListApplicationVersionsResponse {
  NextToken?: string;
  Versions?: VersionSummary[];
}
export interface PutApplicationPolicyRequest {
  ApplicationId: string | undefined;
  Statements: ApplicationPolicyStatement[] | undefined;
}
export interface PutApplicationPolicyResponse {
  Statements?: ApplicationPolicyStatement[];
}
export interface UnshareApplicationRequest {
  ApplicationId: string | undefined;
  OrganizationId: string | undefined;
}
export interface UpdateApplicationRequest {
  ApplicationId: string | undefined;
  Author?: string;
  Description?: string;
  HomePageUrl?: string;
  Labels?: string[];
  ReadmeBody?: string;
  ReadmeUrl?: string;
}
export interface UpdateApplicationResponse {
  ApplicationId?: string;
  Author?: string;
  CreationTime?: string;
  Description?: string;
  HomePageUrl?: string;
  IsVerifiedAuthor?: boolean;
  Labels?: string[];
  LicenseUrl?: string;
  Name?: string;
  ReadmeUrl?: string;
  SpdxLicenseId?: string;
  VerifiedAuthorUrl?: string;
  Version?: Version;
}
