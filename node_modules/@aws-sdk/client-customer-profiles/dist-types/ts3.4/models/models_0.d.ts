import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { CustomerProfilesServiceException as __BaseException } from "./CustomerProfilesServiceException";
export declare class AccessDeniedException extends __BaseException {
  readonly name: "AccessDeniedException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<AccessDeniedException, __BaseException>
  );
}
export interface AdditionalSearchKey {
  KeyName: string | undefined;
  Values: string[] | undefined;
}
export interface AddProfileKeyRequest {
  ProfileId: string | undefined;
  KeyName: string | undefined;
  Values: string[] | undefined;
  DomainName: string | undefined;
}
export interface AddProfileKeyResponse {
  KeyName?: string;
  Values?: string[];
}
export declare class BadRequestException extends __BaseException {
  readonly name: "BadRequestException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<BadRequestException, __BaseException>
  );
}
export declare class InternalServerException extends __BaseException {
  readonly name: "InternalServerException";
  readonly $fault: "server";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<InternalServerException, __BaseException>
  );
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export declare class ThrottlingException extends __BaseException {
  readonly name: "ThrottlingException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ThrottlingException, __BaseException>
  );
}
export interface Address {
  Address1?: string;
  Address2?: string;
  Address3?: string;
  Address4?: string;
  City?: string;
  County?: string;
  State?: string;
  Province?: string;
  Country?: string;
  PostalCode?: string;
}
export interface Batch {
  StartTime: Date | undefined;
  EndTime: Date | undefined;
}
export declare const SourceConnectorType: {
  readonly MARKETO: "Marketo";
  readonly S3: "S3";
  readonly SALESFORCE: "Salesforce";
  readonly SERVICENOW: "Servicenow";
  readonly ZENDESK: "Zendesk";
};
export type SourceConnectorType =
  (typeof SourceConnectorType)[keyof typeof SourceConnectorType];
export interface IncrementalPullConfig {
  DatetimeTypeFieldName?: string;
}
export interface MarketoSourceProperties {
  Object: string | undefined;
}
export interface S3SourceProperties {
  BucketName: string | undefined;
  BucketPrefix?: string;
}
export interface SalesforceSourceProperties {
  Object: string | undefined;
  EnableDynamicFieldUpdate?: boolean;
  IncludeDeletedRecords?: boolean;
}
export interface ServiceNowSourceProperties {
  Object: string | undefined;
}
export interface ZendeskSourceProperties {
  Object: string | undefined;
}
export interface SourceConnectorProperties {
  Marketo?: MarketoSourceProperties;
  S3?: S3SourceProperties;
  Salesforce?: SalesforceSourceProperties;
  ServiceNow?: ServiceNowSourceProperties;
  Zendesk?: ZendeskSourceProperties;
}
export interface SourceFlowConfig {
  ConnectorProfileName?: string;
  ConnectorType: SourceConnectorType | undefined;
  IncrementalPullConfig?: IncrementalPullConfig;
  SourceConnectorProperties: SourceConnectorProperties | undefined;
}
export declare const MarketoConnectorOperator: {
  readonly ADDITION: "ADDITION";
  readonly BETWEEN: "BETWEEN";
  readonly DIVISION: "DIVISION";
  readonly GREATER_THAN: "GREATER_THAN";
  readonly LESS_THAN: "LESS_THAN";
  readonly MASK_ALL: "MASK_ALL";
  readonly MASK_FIRST_N: "MASK_FIRST_N";
  readonly MASK_LAST_N: "MASK_LAST_N";
  readonly MULTIPLICATION: "MULTIPLICATION";
  readonly NO_OP: "NO_OP";
  readonly PROJECTION: "PROJECTION";
  readonly SUBTRACTION: "SUBTRACTION";
  readonly VALIDATE_NON_NEGATIVE: "VALIDATE_NON_NEGATIVE";
  readonly VALIDATE_NON_NULL: "VALIDATE_NON_NULL";
  readonly VALIDATE_NON_ZERO: "VALIDATE_NON_ZERO";
  readonly VALIDATE_NUMERIC: "VALIDATE_NUMERIC";
};
export type MarketoConnectorOperator =
  (typeof MarketoConnectorOperator)[keyof typeof MarketoConnectorOperator];
export declare const S3ConnectorOperator: {
  readonly ADDITION: "ADDITION";
  readonly BETWEEN: "BETWEEN";
  readonly DIVISION: "DIVISION";
  readonly EQUAL_TO: "EQUAL_TO";
  readonly GREATER_THAN: "GREATER_THAN";
  readonly GREATER_THAN_OR_EQUAL_TO: "GREATER_THAN_OR_EQUAL_TO";
  readonly LESS_THAN: "LESS_THAN";
  readonly LESS_THAN_OR_EQUAL_TO: "LESS_THAN_OR_EQUAL_TO";
  readonly MASK_ALL: "MASK_ALL";
  readonly MASK_FIRST_N: "MASK_FIRST_N";
  readonly MASK_LAST_N: "MASK_LAST_N";
  readonly MULTIPLICATION: "MULTIPLICATION";
  readonly NOT_EQUAL_TO: "NOT_EQUAL_TO";
  readonly NO_OP: "NO_OP";
  readonly PROJECTION: "PROJECTION";
  readonly SUBTRACTION: "SUBTRACTION";
  readonly VALIDATE_NON_NEGATIVE: "VALIDATE_NON_NEGATIVE";
  readonly VALIDATE_NON_NULL: "VALIDATE_NON_NULL";
  readonly VALIDATE_NON_ZERO: "VALIDATE_NON_ZERO";
  readonly VALIDATE_NUMERIC: "VALIDATE_NUMERIC";
};
export type S3ConnectorOperator =
  (typeof S3ConnectorOperator)[keyof typeof S3ConnectorOperator];
export declare const SalesforceConnectorOperator: {
  readonly ADDITION: "ADDITION";
  readonly BETWEEN: "BETWEEN";
  readonly CONTAINS: "CONTAINS";
  readonly DIVISION: "DIVISION";
  readonly EQUAL_TO: "EQUAL_TO";
  readonly GREATER_THAN: "GREATER_THAN";
  readonly GREATER_THAN_OR_EQUAL_TO: "GREATER_THAN_OR_EQUAL_TO";
  readonly LESS_THAN: "LESS_THAN";
  readonly LESS_THAN_OR_EQUAL_TO: "LESS_THAN_OR_EQUAL_TO";
  readonly MASK_ALL: "MASK_ALL";
  readonly MASK_FIRST_N: "MASK_FIRST_N";
  readonly MASK_LAST_N: "MASK_LAST_N";
  readonly MULTIPLICATION: "MULTIPLICATION";
  readonly NOT_EQUAL_TO: "NOT_EQUAL_TO";
  readonly NO_OP: "NO_OP";
  readonly PROJECTION: "PROJECTION";
  readonly SUBTRACTION: "SUBTRACTION";
  readonly VALIDATE_NON_NEGATIVE: "VALIDATE_NON_NEGATIVE";
  readonly VALIDATE_NON_NULL: "VALIDATE_NON_NULL";
  readonly VALIDATE_NON_ZERO: "VALIDATE_NON_ZERO";
  readonly VALIDATE_NUMERIC: "VALIDATE_NUMERIC";
};
export type SalesforceConnectorOperator =
  (typeof SalesforceConnectorOperator)[keyof typeof SalesforceConnectorOperator];
export declare const ServiceNowConnectorOperator: {
  readonly ADDITION: "ADDITION";
  readonly BETWEEN: "BETWEEN";
  readonly CONTAINS: "CONTAINS";
  readonly DIVISION: "DIVISION";
  readonly EQUAL_TO: "EQUAL_TO";
  readonly GREATER_THAN: "GREATER_THAN";
  readonly GREATER_THAN_OR_EQUAL_TO: "GREATER_THAN_OR_EQUAL_TO";
  readonly LESS_THAN: "LESS_THAN";
  readonly LESS_THAN_OR_EQUAL_TO: "LESS_THAN_OR_EQUAL_TO";
  readonly MASK_ALL: "MASK_ALL";
  readonly MASK_FIRST_N: "MASK_FIRST_N";
  readonly MASK_LAST_N: "MASK_LAST_N";
  readonly MULTIPLICATION: "MULTIPLICATION";
  readonly NOT_EQUAL_TO: "NOT_EQUAL_TO";
  readonly NO_OP: "NO_OP";
  readonly PROJECTION: "PROJECTION";
  readonly SUBTRACTION: "SUBTRACTION";
  readonly VALIDATE_NON_NEGATIVE: "VALIDATE_NON_NEGATIVE";
  readonly VALIDATE_NON_NULL: "VALIDATE_NON_NULL";
  readonly VALIDATE_NON_ZERO: "VALIDATE_NON_ZERO";
  readonly VALIDATE_NUMERIC: "VALIDATE_NUMERIC";
};
export type ServiceNowConnectorOperator =
  (typeof ServiceNowConnectorOperator)[keyof typeof ServiceNowConnectorOperator];
export declare const ZendeskConnectorOperator: {
  readonly ADDITION: "ADDITION";
  readonly DIVISION: "DIVISION";
  readonly GREATER_THAN: "GREATER_THAN";
  readonly MASK_ALL: "MASK_ALL";
  readonly MASK_FIRST_N: "MASK_FIRST_N";
  readonly MASK_LAST_N: "MASK_LAST_N";
  readonly MULTIPLICATION: "MULTIPLICATION";
  readonly NO_OP: "NO_OP";
  readonly PROJECTION: "PROJECTION";
  readonly SUBTRACTION: "SUBTRACTION";
  readonly VALIDATE_NON_NEGATIVE: "VALIDATE_NON_NEGATIVE";
  readonly VALIDATE_NON_NULL: "VALIDATE_NON_NULL";
  readonly VALIDATE_NON_ZERO: "VALIDATE_NON_ZERO";
  readonly VALIDATE_NUMERIC: "VALIDATE_NUMERIC";
};
export type ZendeskConnectorOperator =
  (typeof ZendeskConnectorOperator)[keyof typeof ZendeskConnectorOperator];
export interface ConnectorOperator {
  Marketo?: MarketoConnectorOperator;
  S3?: S3ConnectorOperator;
  Salesforce?: SalesforceConnectorOperator;
  ServiceNow?: ServiceNowConnectorOperator;
  Zendesk?: ZendeskConnectorOperator;
}
export declare const OperatorPropertiesKeys: {
  readonly CONCAT_FORMAT: "CONCAT_FORMAT";
  readonly DATA_TYPE: "DATA_TYPE";
  readonly DESTINATION_DATA_TYPE: "DESTINATION_DATA_TYPE";
  readonly LOWER_BOUND: "LOWER_BOUND";
  readonly MASK_LENGTH: "MASK_LENGTH";
  readonly MASK_VALUE: "MASK_VALUE";
  readonly MATH_OPERATION_FIELDS_ORDER: "MATH_OPERATION_FIELDS_ORDER";
  readonly SOURCE_DATA_TYPE: "SOURCE_DATA_TYPE";
  readonly SUBFIELD_CATEGORY_MAP: "SUBFIELD_CATEGORY_MAP";
  readonly TRUNCATE_LENGTH: "TRUNCATE_LENGTH";
  readonly UPPER_BOUND: "UPPER_BOUND";
  readonly VALIDATION_ACTION: "VALIDATION_ACTION";
  readonly VALUE: "VALUE";
  readonly VALUES: "VALUES";
};
export type OperatorPropertiesKeys =
  (typeof OperatorPropertiesKeys)[keyof typeof OperatorPropertiesKeys];
export declare const TaskType: {
  readonly ARITHMETIC: "Arithmetic";
  readonly FILTER: "Filter";
  readonly MAP: "Map";
  readonly MASK: "Mask";
  readonly MERGE: "Merge";
  readonly TRUNCATE: "Truncate";
  readonly VALIDATE: "Validate";
};
export type TaskType = (typeof TaskType)[keyof typeof TaskType];
export interface Task {
  ConnectorOperator?: ConnectorOperator;
  DestinationField?: string;
  SourceFields: string[] | undefined;
  TaskProperties?: Partial<Record<OperatorPropertiesKeys, string>>;
  TaskType: TaskType | undefined;
}
export declare const DataPullMode: {
  readonly COMPLETE: "Complete";
  readonly INCREMENTAL: "Incremental";
};
export type DataPullMode = (typeof DataPullMode)[keyof typeof DataPullMode];
export interface ScheduledTriggerProperties {
  ScheduleExpression: string | undefined;
  DataPullMode?: DataPullMode;
  ScheduleStartTime?: Date;
  ScheduleEndTime?: Date;
  Timezone?: string;
  ScheduleOffset?: number;
  FirstExecutionFrom?: Date;
}
export interface TriggerProperties {
  Scheduled?: ScheduledTriggerProperties;
}
export declare const TriggerType: {
  readonly EVENT: "Event";
  readonly ONDEMAND: "OnDemand";
  readonly SCHEDULED: "Scheduled";
};
export type TriggerType = (typeof TriggerType)[keyof typeof TriggerType];
export interface TriggerConfig {
  TriggerType: TriggerType | undefined;
  TriggerProperties?: TriggerProperties;
}
export interface FlowDefinition {
  Description?: string;
  FlowName: string | undefined;
  KmsArn: string | undefined;
  SourceFlowConfig: SourceFlowConfig | undefined;
  Tasks: Task[] | undefined;
  TriggerConfig: TriggerConfig | undefined;
}
export interface AppflowIntegration {
  FlowDefinition: FlowDefinition | undefined;
  Batches?: Batch[];
}
export interface AppflowIntegrationWorkflowAttributes {
  SourceConnectorType: SourceConnectorType | undefined;
  ConnectorProfileName: string | undefined;
  RoleArn?: string;
}
export interface AppflowIntegrationWorkflowMetrics {
  RecordsProcessed: number | undefined;
  StepsCompleted: number | undefined;
  TotalSteps: number | undefined;
}
export declare const Status: {
  readonly CANCELLED: "CANCELLED";
  readonly COMPLETE: "COMPLETE";
  readonly FAILED: "FAILED";
  readonly IN_PROGRESS: "IN_PROGRESS";
  readonly NOT_STARTED: "NOT_STARTED";
  readonly RETRY: "RETRY";
  readonly SPLIT: "SPLIT";
};
export type Status = (typeof Status)[keyof typeof Status];
export interface AppflowIntegrationWorkflowStep {
  FlowName: string | undefined;
  Status: Status | undefined;
  ExecutionMessage: string | undefined;
  RecordsProcessed: number | undefined;
  BatchRecordsStartTime: string | undefined;
  BatchRecordsEndTime: string | undefined;
  CreatedAt: Date | undefined;
  LastUpdatedAt: Date | undefined;
}
export interface AttributeItem {
  Name: string | undefined;
}
export interface AttributeDetails {
  Attributes: AttributeItem[] | undefined;
  Expression: string | undefined;
}
export declare const AttributeMatchingModel: {
  readonly MANY_TO_MANY: "MANY_TO_MANY";
  readonly ONE_TO_ONE: "ONE_TO_ONE";
};
export type AttributeMatchingModel =
  (typeof AttributeMatchingModel)[keyof typeof AttributeMatchingModel];
export interface AttributeTypesSelector {
  AttributeMatchingModel: AttributeMatchingModel | undefined;
  Address?: string[];
  PhoneNumber?: string[];
  EmailAddress?: string[];
}
export declare const ConflictResolvingModel: {
  readonly RECENCY: "RECENCY";
  readonly SOURCE: "SOURCE";
};
export type ConflictResolvingModel =
  (typeof ConflictResolvingModel)[keyof typeof ConflictResolvingModel];
export interface ConflictResolution {
  ConflictResolvingModel: ConflictResolvingModel | undefined;
  SourceName?: string;
}
export interface Consolidation {
  MatchingAttributesList: string[][] | undefined;
}
export interface AutoMerging {
  Enabled: boolean | undefined;
  Consolidation?: Consolidation;
  ConflictResolution?: ConflictResolution;
  MinAllowedConfidenceScoreForMerging?: number;
}
export interface ListCalculatedAttributeDefinitionItem {
  CalculatedAttributeName?: string;
  DisplayName?: string;
  Description?: string;
  CreatedAt?: Date;
  LastUpdatedAt?: Date;
  Tags?: Record<string, string>;
}
export interface ListCalculatedAttributeForProfileItem {
  CalculatedAttributeName?: string;
  DisplayName?: string;
  IsDataPartial?: string;
  Value?: string;
}
export declare const Unit: {
  readonly DAYS: "DAYS";
};
export type Unit = (typeof Unit)[keyof typeof Unit];
export interface Range {
  Value: number | undefined;
  Unit: Unit | undefined;
}
export declare const Operator: {
  readonly EQUAL_TO: "EQUAL_TO";
  readonly GREATER_THAN: "GREATER_THAN";
  readonly LESS_THAN: "LESS_THAN";
  readonly NOT_EQUAL_TO: "NOT_EQUAL_TO";
};
export type Operator = (typeof Operator)[keyof typeof Operator];
export interface Threshold {
  Value: string | undefined;
  Operator: Operator | undefined;
}
export interface Conditions {
  Range?: Range;
  ObjectCount?: number;
  Threshold?: Threshold;
}
export declare const Statistic: {
  readonly AVERAGE: "AVERAGE";
  readonly COUNT: "COUNT";
  readonly FIRST_OCCURRENCE: "FIRST_OCCURRENCE";
  readonly LAST_OCCURRENCE: "LAST_OCCURRENCE";
  readonly MAXIMUM: "MAXIMUM";
  readonly MAX_OCCURRENCE: "MAX_OCCURRENCE";
  readonly MINIMUM: "MINIMUM";
  readonly SUM: "SUM";
};
export type Statistic = (typeof Statistic)[keyof typeof Statistic];
export interface CreateCalculatedAttributeDefinitionRequest {
  DomainName: string | undefined;
  CalculatedAttributeName: string | undefined;
  DisplayName?: string;
  Description?: string;
  AttributeDetails: AttributeDetails | undefined;
  Conditions?: Conditions;
  Statistic: Statistic | undefined;
  Tags?: Record<string, string>;
}
export interface CreateCalculatedAttributeDefinitionResponse {
  CalculatedAttributeName?: string;
  DisplayName?: string;
  Description?: string;
  AttributeDetails?: AttributeDetails;
  Conditions?: Conditions;
  Statistic?: Statistic;
  CreatedAt?: Date;
  LastUpdatedAt?: Date;
  Tags?: Record<string, string>;
}
export interface S3ExportingConfig {
  S3BucketName: string | undefined;
  S3KeyName?: string;
}
export interface ExportingConfig {
  S3Exporting?: S3ExportingConfig;
}
export declare const JobScheduleDayOfTheWeek: {
  readonly FRIDAY: "FRIDAY";
  readonly MONDAY: "MONDAY";
  readonly SATURDAY: "SATURDAY";
  readonly SUNDAY: "SUNDAY";
  readonly THURSDAY: "THURSDAY";
  readonly TUESDAY: "TUESDAY";
  readonly WEDNESDAY: "WEDNESDAY";
};
export type JobScheduleDayOfTheWeek =
  (typeof JobScheduleDayOfTheWeek)[keyof typeof JobScheduleDayOfTheWeek];
export interface JobSchedule {
  DayOfTheWeek: JobScheduleDayOfTheWeek | undefined;
  Time: string | undefined;
}
export interface MatchingRequest {
  Enabled: boolean | undefined;
  JobSchedule?: JobSchedule;
  AutoMerging?: AutoMerging;
  ExportingConfig?: ExportingConfig;
}
export interface MatchingRule {
  Rule: string[] | undefined;
}
export interface RuleBasedMatchingRequest {
  Enabled: boolean | undefined;
  MatchingRules?: MatchingRule[];
  MaxAllowedRuleLevelForMerging?: number;
  MaxAllowedRuleLevelForMatching?: number;
  AttributeTypesSelector?: AttributeTypesSelector;
  ConflictResolution?: ConflictResolution;
  ExportingConfig?: ExportingConfig;
}
export interface CreateDomainRequest {
  DomainName: string | undefined;
  DefaultExpirationDays: number | undefined;
  DefaultEncryptionKey?: string;
  DeadLetterQueueUrl?: string;
  Matching?: MatchingRequest;
  RuleBasedMatching?: RuleBasedMatchingRequest;
  Tags?: Record<string, string>;
}
export interface MatchingResponse {
  Enabled?: boolean;
  JobSchedule?: JobSchedule;
  AutoMerging?: AutoMerging;
  ExportingConfig?: ExportingConfig;
}
export declare const RuleBasedMatchingStatus: {
  readonly ACTIVE: "ACTIVE";
  readonly IN_PROGRESS: "IN_PROGRESS";
  readonly PENDING: "PENDING";
};
export type RuleBasedMatchingStatus =
  (typeof RuleBasedMatchingStatus)[keyof typeof RuleBasedMatchingStatus];
export interface RuleBasedMatchingResponse {
  Enabled?: boolean;
  MatchingRules?: MatchingRule[];
  Status?: RuleBasedMatchingStatus;
  MaxAllowedRuleLevelForMerging?: number;
  MaxAllowedRuleLevelForMatching?: number;
  AttributeTypesSelector?: AttributeTypesSelector;
  ConflictResolution?: ConflictResolution;
  ExportingConfig?: ExportingConfig;
}
export interface CreateDomainResponse {
  DomainName: string | undefined;
  DefaultExpirationDays: number | undefined;
  DefaultEncryptionKey?: string;
  DeadLetterQueueUrl?: string;
  Matching?: MatchingResponse;
  RuleBasedMatching?: RuleBasedMatchingResponse;
  CreatedAt: Date | undefined;
  LastUpdatedAt: Date | undefined;
  Tags?: Record<string, string>;
}
export interface CreateEventStreamRequest {
  DomainName: string | undefined;
  Uri: string | undefined;
  EventStreamName: string | undefined;
  Tags?: Record<string, string>;
}
export interface CreateEventStreamResponse {
  EventStreamArn: string | undefined;
  Tags?: Record<string, string>;
}
export interface IntegrationConfig {
  AppflowIntegration?: AppflowIntegration;
}
export declare const WorkflowType: {
  readonly APPFLOW_INTEGRATION: "APPFLOW_INTEGRATION";
};
export type WorkflowType = (typeof WorkflowType)[keyof typeof WorkflowType];
export interface CreateIntegrationWorkflowRequest {
  DomainName: string | undefined;
  WorkflowType: WorkflowType | undefined;
  IntegrationConfig: IntegrationConfig | undefined;
  ObjectTypeName: string | undefined;
  RoleArn: string | undefined;
  Tags?: Record<string, string>;
}
export interface CreateIntegrationWorkflowResponse {
  WorkflowId: string | undefined;
  Message: string | undefined;
}
export declare const Gender: {
  readonly FEMALE: "FEMALE";
  readonly MALE: "MALE";
  readonly UNSPECIFIED: "UNSPECIFIED";
};
export type Gender = (typeof Gender)[keyof typeof Gender];
export declare const PartyType: {
  readonly BUSINESS: "BUSINESS";
  readonly INDIVIDUAL: "INDIVIDUAL";
  readonly OTHER: "OTHER";
};
export type PartyType = (typeof PartyType)[keyof typeof PartyType];
export interface CreateProfileRequest {
  DomainName: string | undefined;
  AccountNumber?: string;
  AdditionalInformation?: string;
  PartyType?: PartyType;
  BusinessName?: string;
  FirstName?: string;
  MiddleName?: string;
  LastName?: string;
  BirthDate?: string;
  Gender?: Gender;
  PhoneNumber?: string;
  MobilePhoneNumber?: string;
  HomePhoneNumber?: string;
  BusinessPhoneNumber?: string;
  EmailAddress?: string;
  PersonalEmailAddress?: string;
  BusinessEmailAddress?: string;
  Address?: Address;
  ShippingAddress?: Address;
  MailingAddress?: Address;
  BillingAddress?: Address;
  Attributes?: Record<string, string>;
  PartyTypeString?: string;
  GenderString?: string;
}
export interface CreateProfileResponse {
  ProfileId: string | undefined;
}
export interface DeleteCalculatedAttributeDefinitionRequest {
  DomainName: string | undefined;
  CalculatedAttributeName: string | undefined;
}
export interface DeleteCalculatedAttributeDefinitionResponse {}
export interface DeleteDomainRequest {
  DomainName: string | undefined;
}
export interface DeleteDomainResponse {
  Message: string | undefined;
}
export interface DeleteEventStreamRequest {
  DomainName: string | undefined;
  EventStreamName: string | undefined;
}
export interface DeleteEventStreamResponse {}
export interface DeleteIntegrationRequest {
  DomainName: string | undefined;
  Uri: string | undefined;
}
export interface DeleteIntegrationResponse {
  Message: string | undefined;
}
export interface DeleteProfileRequest {
  ProfileId: string | undefined;
  DomainName: string | undefined;
}
export interface DeleteProfileResponse {
  Message?: string;
}
export interface DeleteProfileKeyRequest {
  ProfileId: string | undefined;
  KeyName: string | undefined;
  Values: string[] | undefined;
  DomainName: string | undefined;
}
export interface DeleteProfileKeyResponse {
  Message?: string;
}
export interface DeleteProfileObjectRequest {
  ProfileId: string | undefined;
  ProfileObjectUniqueKey: string | undefined;
  ObjectTypeName: string | undefined;
  DomainName: string | undefined;
}
export interface DeleteProfileObjectResponse {
  Message?: string;
}
export interface DeleteProfileObjectTypeRequest {
  DomainName: string | undefined;
  ObjectTypeName: string | undefined;
}
export interface DeleteProfileObjectTypeResponse {
  Message: string | undefined;
}
export interface DeleteWorkflowRequest {
  DomainName: string | undefined;
  WorkflowId: string | undefined;
}
export interface DeleteWorkflowResponse {}
export interface DetectProfileObjectTypeRequest {
  Objects: string[] | undefined;
  DomainName: string | undefined;
}
export declare const FieldContentType: {
  readonly EMAIL_ADDRESS: "EMAIL_ADDRESS";
  readonly NAME: "NAME";
  readonly NUMBER: "NUMBER";
  readonly PHONE_NUMBER: "PHONE_NUMBER";
  readonly STRING: "STRING";
};
export type FieldContentType =
  (typeof FieldContentType)[keyof typeof FieldContentType];
export interface ObjectTypeField {
  Source?: string;
  Target?: string;
  ContentType?: FieldContentType;
}
export declare const StandardIdentifier: {
  readonly ASSET: "ASSET";
  readonly CASE: "CASE";
  readonly LOOKUP_ONLY: "LOOKUP_ONLY";
  readonly NEW_ONLY: "NEW_ONLY";
  readonly ORDER: "ORDER";
  readonly PROFILE: "PROFILE";
  readonly SECONDARY: "SECONDARY";
  readonly UNIQUE: "UNIQUE";
};
export type StandardIdentifier =
  (typeof StandardIdentifier)[keyof typeof StandardIdentifier];
export interface ObjectTypeKey {
  StandardIdentifiers?: StandardIdentifier[];
  FieldNames?: string[];
}
export interface DetectedProfileObjectType {
  SourceLastUpdatedTimestampFormat?: string;
  Fields?: Record<string, ObjectTypeField>;
  Keys?: Record<string, ObjectTypeKey[]>;
}
export interface DetectProfileObjectTypeResponse {
  DetectedProfileObjectTypes?: DetectedProfileObjectType[];
}
export interface GetAutoMergingPreviewRequest {
  DomainName: string | undefined;
  Consolidation: Consolidation | undefined;
  ConflictResolution: ConflictResolution | undefined;
  MinAllowedConfidenceScoreForMerging?: number;
}
export interface GetAutoMergingPreviewResponse {
  DomainName: string | undefined;
  NumberOfMatchesInSample?: number;
  NumberOfProfilesInSample?: number;
  NumberOfProfilesWillBeMerged?: number;
}
export interface GetCalculatedAttributeDefinitionRequest {
  DomainName: string | undefined;
  CalculatedAttributeName: string | undefined;
}
export interface GetCalculatedAttributeDefinitionResponse {
  CalculatedAttributeName?: string;
  DisplayName?: string;
  Description?: string;
  CreatedAt?: Date;
  LastUpdatedAt?: Date;
  Statistic?: Statistic;
  Conditions?: Conditions;
  AttributeDetails?: AttributeDetails;
  Tags?: Record<string, string>;
}
export interface GetCalculatedAttributeForProfileRequest {
  DomainName: string | undefined;
  ProfileId: string | undefined;
  CalculatedAttributeName: string | undefined;
}
export interface GetCalculatedAttributeForProfileResponse {
  CalculatedAttributeName?: string;
  DisplayName?: string;
  IsDataPartial?: string;
  Value?: string;
}
export interface GetDomainRequest {
  DomainName: string | undefined;
}
export interface DomainStats {
  ProfileCount?: number;
  MeteringProfileCount?: number;
  ObjectCount?: number;
  TotalSize?: number;
}
export interface GetDomainResponse {
  DomainName: string | undefined;
  DefaultExpirationDays?: number;
  DefaultEncryptionKey?: string;
  DeadLetterQueueUrl?: string;
  Stats?: DomainStats;
  Matching?: MatchingResponse;
  RuleBasedMatching?: RuleBasedMatchingResponse;
  CreatedAt: Date | undefined;
  LastUpdatedAt: Date | undefined;
  Tags?: Record<string, string>;
}
export interface GetEventStreamRequest {
  DomainName: string | undefined;
  EventStreamName: string | undefined;
}
export declare const EventStreamDestinationStatus: {
  readonly HEALTHY: "HEALTHY";
  readonly UNHEALTHY: "UNHEALTHY";
};
export type EventStreamDestinationStatus =
  (typeof EventStreamDestinationStatus)[keyof typeof EventStreamDestinationStatus];
export interface EventStreamDestinationDetails {
  Uri: string | undefined;
  Status: EventStreamDestinationStatus | undefined;
  UnhealthySince?: Date;
  Message?: string;
}
export declare const EventStreamState: {
  readonly RUNNING: "RUNNING";
  readonly STOPPED: "STOPPED";
};
export type EventStreamState =
  (typeof EventStreamState)[keyof typeof EventStreamState];
export interface GetEventStreamResponse {
  DomainName: string | undefined;
  EventStreamArn: string | undefined;
  CreatedAt: Date | undefined;
  State: EventStreamState | undefined;
  StoppedSince?: Date;
  DestinationDetails: EventStreamDestinationDetails | undefined;
  Tags?: Record<string, string>;
}
export interface GetIdentityResolutionJobRequest {
  DomainName: string | undefined;
  JobId: string | undefined;
}
export interface S3ExportingLocation {
  S3BucketName?: string;
  S3KeyName?: string;
}
export interface ExportingLocation {
  S3Exporting?: S3ExportingLocation;
}
export interface JobStats {
  NumberOfProfilesReviewed?: number;
  NumberOfMatchesFound?: number;
  NumberOfMergesDone?: number;
}
export declare const IdentityResolutionJobStatus: {
  readonly COMPLETED: "COMPLETED";
  readonly FAILED: "FAILED";
  readonly FIND_MATCHING: "FIND_MATCHING";
  readonly MERGING: "MERGING";
  readonly PARTIAL_SUCCESS: "PARTIAL_SUCCESS";
  readonly PENDING: "PENDING";
  readonly PREPROCESSING: "PREPROCESSING";
};
export type IdentityResolutionJobStatus =
  (typeof IdentityResolutionJobStatus)[keyof typeof IdentityResolutionJobStatus];
export interface GetIdentityResolutionJobResponse {
  DomainName?: string;
  JobId?: string;
  Status?: IdentityResolutionJobStatus;
  Message?: string;
  JobStartTime?: Date;
  JobEndTime?: Date;
  LastUpdatedAt?: Date;
  JobExpirationTime?: Date;
  AutoMerging?: AutoMerging;
  ExportingLocation?: ExportingLocation;
  JobStats?: JobStats;
}
export interface GetIntegrationRequest {
  DomainName: string | undefined;
  Uri: string | undefined;
}
export interface GetIntegrationResponse {
  DomainName: string | undefined;
  Uri: string | undefined;
  ObjectTypeName?: string;
  CreatedAt: Date | undefined;
  LastUpdatedAt: Date | undefined;
  Tags?: Record<string, string>;
  ObjectTypeNames?: Record<string, string>;
  WorkflowId?: string;
  IsUnstructured?: boolean;
}
export interface GetMatchesRequest {
  NextToken?: string;
  MaxResults?: number;
  DomainName: string | undefined;
}
export interface MatchItem {
  MatchId?: string;
  ProfileIds?: string[];
  ConfidenceScore?: number;
}
export interface GetMatchesResponse {
  NextToken?: string;
  MatchGenerationDate?: Date;
  PotentialMatches?: number;
  Matches?: MatchItem[];
}
export interface GetProfileObjectTypeRequest {
  DomainName: string | undefined;
  ObjectTypeName: string | undefined;
}
export interface GetProfileObjectTypeResponse {
  ObjectTypeName: string | undefined;
  Description: string | undefined;
  TemplateId?: string;
  ExpirationDays?: number;
  EncryptionKey?: string;
  AllowProfileCreation?: boolean;
  SourceLastUpdatedTimestampFormat?: string;
  Fields?: Record<string, ObjectTypeField>;
  Keys?: Record<string, ObjectTypeKey[]>;
  CreatedAt?: Date;
  LastUpdatedAt?: Date;
  Tags?: Record<string, string>;
}
export interface GetProfileObjectTypeTemplateRequest {
  TemplateId: string | undefined;
}
export interface GetProfileObjectTypeTemplateResponse {
  TemplateId?: string;
  SourceName?: string;
  SourceObject?: string;
  AllowProfileCreation?: boolean;
  SourceLastUpdatedTimestampFormat?: string;
  Fields?: Record<string, ObjectTypeField>;
  Keys?: Record<string, ObjectTypeKey[]>;
}
export declare const MatchType: {
  readonly ML_BASED_MATCHING: "ML_BASED_MATCHING";
  readonly RULE_BASED_MATCHING: "RULE_BASED_MATCHING";
};
export type MatchType = (typeof MatchType)[keyof typeof MatchType];
export interface GetSimilarProfilesRequest {
  NextToken?: string;
  MaxResults?: number;
  DomainName: string | undefined;
  MatchType: MatchType | undefined;
  SearchKey: string | undefined;
  SearchValue: string | undefined;
}
export interface GetSimilarProfilesResponse {
  ProfileIds?: string[];
  MatchId?: string;
  MatchType?: MatchType;
  RuleLevel?: number;
  ConfidenceScore?: number;
  NextToken?: string;
}
export interface GetWorkflowRequest {
  DomainName: string | undefined;
  WorkflowId: string | undefined;
}
export interface WorkflowAttributes {
  AppflowIntegration?: AppflowIntegrationWorkflowAttributes;
}
export interface WorkflowMetrics {
  AppflowIntegration?: AppflowIntegrationWorkflowMetrics;
}
export interface GetWorkflowResponse {
  WorkflowId?: string;
  WorkflowType?: WorkflowType;
  Status?: Status;
  ErrorDescription?: string;
  StartDate?: Date;
  LastUpdatedAt?: Date;
  Attributes?: WorkflowAttributes;
  Metrics?: WorkflowMetrics;
}
export interface GetWorkflowStepsRequest {
  DomainName: string | undefined;
  WorkflowId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface WorkflowStepItem {
  AppflowIntegration?: AppflowIntegrationWorkflowStep;
}
export interface GetWorkflowStepsResponse {
  WorkflowId?: string;
  WorkflowType?: WorkflowType;
  Items?: WorkflowStepItem[];
  NextToken?: string;
}
export interface ListAccountIntegrationsRequest {
  Uri: string | undefined;
  NextToken?: string;
  MaxResults?: number;
  IncludeHidden?: boolean;
}
export interface ListIntegrationItem {
  DomainName: string | undefined;
  Uri: string | undefined;
  ObjectTypeName?: string;
  CreatedAt: Date | undefined;
  LastUpdatedAt: Date | undefined;
  Tags?: Record<string, string>;
  ObjectTypeNames?: Record<string, string>;
  WorkflowId?: string;
  IsUnstructured?: boolean;
}
export interface ListAccountIntegrationsResponse {
  Items?: ListIntegrationItem[];
  NextToken?: string;
}
export interface ListCalculatedAttributeDefinitionsRequest {
  DomainName: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListCalculatedAttributeDefinitionsResponse {
  Items?: ListCalculatedAttributeDefinitionItem[];
  NextToken?: string;
}
export interface ListCalculatedAttributesForProfileRequest {
  NextToken?: string;
  MaxResults?: number;
  DomainName: string | undefined;
  ProfileId: string | undefined;
}
export interface ListCalculatedAttributesForProfileResponse {
  Items?: ListCalculatedAttributeForProfileItem[];
  NextToken?: string;
}
export interface ListDomainsRequest {
  NextToken?: string;
  MaxResults?: number;
}
export interface ListDomainItem {
  DomainName: string | undefined;
  CreatedAt: Date | undefined;
  LastUpdatedAt: Date | undefined;
  Tags?: Record<string, string>;
}
export interface ListDomainsResponse {
  Items?: ListDomainItem[];
  NextToken?: string;
}
export interface ListEventStreamsRequest {
  DomainName: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface DestinationSummary {
  Uri: string | undefined;
  Status: EventStreamDestinationStatus | undefined;
  UnhealthySince?: Date;
}
export interface EventStreamSummary {
  DomainName: string | undefined;
  EventStreamName: string | undefined;
  EventStreamArn: string | undefined;
  State: EventStreamState | undefined;
  StoppedSince?: Date;
  DestinationSummary?: DestinationSummary;
  Tags?: Record<string, string>;
}
export interface ListEventStreamsResponse {
  Items?: EventStreamSummary[];
  NextToken?: string;
}
export interface ListIdentityResolutionJobsRequest {
  DomainName: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface IdentityResolutionJob {
  DomainName?: string;
  JobId?: string;
  Status?: IdentityResolutionJobStatus;
  JobStartTime?: Date;
  JobEndTime?: Date;
  JobStats?: JobStats;
  ExportingLocation?: ExportingLocation;
  Message?: string;
}
export interface ListIdentityResolutionJobsResponse {
  IdentityResolutionJobsList?: IdentityResolutionJob[];
  NextToken?: string;
}
export interface ListIntegrationsRequest {
  DomainName: string | undefined;
  NextToken?: string;
  MaxResults?: number;
  IncludeHidden?: boolean;
}
export interface ListIntegrationsResponse {
  Items?: ListIntegrationItem[];
  NextToken?: string;
}
export interface ObjectFilter {
  KeyName: string | undefined;
  Values: string[] | undefined;
}
export interface ListProfileObjectsRequest {
  NextToken?: string;
  MaxResults?: number;
  DomainName: string | undefined;
  ObjectTypeName: string | undefined;
  ProfileId: string | undefined;
  ObjectFilter?: ObjectFilter;
}
export interface ListProfileObjectsItem {
  ObjectTypeName?: string;
  ProfileObjectUniqueKey?: string;
  Object?: string;
}
export interface ListProfileObjectsResponse {
  Items?: ListProfileObjectsItem[];
  NextToken?: string;
}
export interface ListProfileObjectTypesRequest {
  DomainName: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListProfileObjectTypeItem {
  ObjectTypeName: string | undefined;
  Description: string | undefined;
  CreatedAt?: Date;
  LastUpdatedAt?: Date;
  Tags?: Record<string, string>;
}
export interface ListProfileObjectTypesResponse {
  Items?: ListProfileObjectTypeItem[];
  NextToken?: string;
}
export interface ListProfileObjectTypeTemplatesRequest {
  NextToken?: string;
  MaxResults?: number;
}
export interface ListProfileObjectTypeTemplateItem {
  TemplateId?: string;
  SourceName?: string;
  SourceObject?: string;
}
export interface ListProfileObjectTypeTemplatesResponse {
  Items?: ListProfileObjectTypeTemplateItem[];
  NextToken?: string;
}
export interface ListRuleBasedMatchesRequest {
  NextToken?: string;
  MaxResults?: number;
  DomainName: string | undefined;
}
export interface ListRuleBasedMatchesResponse {
  MatchIds?: string[];
  NextToken?: string;
}
export interface ListTagsForResourceRequest {
  resourceArn: string | undefined;
}
export interface ListTagsForResourceResponse {
  tags?: Record<string, string>;
}
export interface ListWorkflowsRequest {
  DomainName: string | undefined;
  WorkflowType?: WorkflowType;
  Status?: Status;
  QueryStartDate?: Date;
  QueryEndDate?: Date;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListWorkflowsItem {
  WorkflowType: WorkflowType | undefined;
  WorkflowId: string | undefined;
  Status: Status | undefined;
  StatusDescription: string | undefined;
  CreatedAt: Date | undefined;
  LastUpdatedAt: Date | undefined;
}
export interface ListWorkflowsResponse {
  Items?: ListWorkflowsItem[];
  NextToken?: string;
}
export interface FieldSourceProfileIds {
  AccountNumber?: string;
  AdditionalInformation?: string;
  PartyType?: string;
  BusinessName?: string;
  FirstName?: string;
  MiddleName?: string;
  LastName?: string;
  BirthDate?: string;
  Gender?: string;
  PhoneNumber?: string;
  MobilePhoneNumber?: string;
  HomePhoneNumber?: string;
  BusinessPhoneNumber?: string;
  EmailAddress?: string;
  PersonalEmailAddress?: string;
  BusinessEmailAddress?: string;
  Address?: string;
  ShippingAddress?: string;
  MailingAddress?: string;
  BillingAddress?: string;
  Attributes?: Record<string, string>;
}
export interface MergeProfilesRequest {
  DomainName: string | undefined;
  MainProfileId: string | undefined;
  ProfileIdsToBeMerged: string[] | undefined;
  FieldSourceProfileIds?: FieldSourceProfileIds;
}
export interface MergeProfilesResponse {
  Message?: string;
}
export interface PutIntegrationRequest {
  DomainName: string | undefined;
  Uri?: string;
  ObjectTypeName?: string;
  Tags?: Record<string, string>;
  FlowDefinition?: FlowDefinition;
  ObjectTypeNames?: Record<string, string>;
}
export interface PutIntegrationResponse {
  DomainName: string | undefined;
  Uri: string | undefined;
  ObjectTypeName?: string;
  CreatedAt: Date | undefined;
  LastUpdatedAt: Date | undefined;
  Tags?: Record<string, string>;
  ObjectTypeNames?: Record<string, string>;
  WorkflowId?: string;
  IsUnstructured?: boolean;
}
export interface PutProfileObjectRequest {
  ObjectTypeName: string | undefined;
  Object: string | undefined;
  DomainName: string | undefined;
}
export interface PutProfileObjectResponse {
  ProfileObjectUniqueKey?: string;
}
export interface PutProfileObjectTypeRequest {
  DomainName: string | undefined;
  ObjectTypeName: string | undefined;
  Description: string | undefined;
  TemplateId?: string;
  ExpirationDays?: number;
  EncryptionKey?: string;
  AllowProfileCreation?: boolean;
  SourceLastUpdatedTimestampFormat?: string;
  Fields?: Record<string, ObjectTypeField>;
  Keys?: Record<string, ObjectTypeKey[]>;
  Tags?: Record<string, string>;
}
export interface PutProfileObjectTypeResponse {
  ObjectTypeName: string | undefined;
  Description: string | undefined;
  TemplateId?: string;
  ExpirationDays?: number;
  EncryptionKey?: string;
  AllowProfileCreation?: boolean;
  SourceLastUpdatedTimestampFormat?: string;
  Fields?: Record<string, ObjectTypeField>;
  Keys?: Record<string, ObjectTypeKey[]>;
  CreatedAt?: Date;
  LastUpdatedAt?: Date;
  Tags?: Record<string, string>;
}
export declare const LogicalOperator: {
  readonly AND: "AND";
  readonly OR: "OR";
};
export type LogicalOperator =
  (typeof LogicalOperator)[keyof typeof LogicalOperator];
export interface SearchProfilesRequest {
  NextToken?: string;
  MaxResults?: number;
  DomainName: string | undefined;
  KeyName: string | undefined;
  Values: string[] | undefined;
  AdditionalSearchKeys?: AdditionalSearchKey[];
  LogicalOperator?: LogicalOperator;
}
export interface FoundByKeyValue {
  KeyName?: string;
  Values?: string[];
}
export interface Profile {
  ProfileId?: string;
  AccountNumber?: string;
  AdditionalInformation?: string;
  PartyType?: PartyType;
  BusinessName?: string;
  FirstName?: string;
  MiddleName?: string;
  LastName?: string;
  BirthDate?: string;
  Gender?: Gender;
  PhoneNumber?: string;
  MobilePhoneNumber?: string;
  HomePhoneNumber?: string;
  BusinessPhoneNumber?: string;
  EmailAddress?: string;
  PersonalEmailAddress?: string;
  BusinessEmailAddress?: string;
  Address?: Address;
  ShippingAddress?: Address;
  MailingAddress?: Address;
  BillingAddress?: Address;
  Attributes?: Record<string, string>;
  FoundByItems?: FoundByKeyValue[];
  PartyTypeString?: string;
  GenderString?: string;
}
export interface SearchProfilesResponse {
  Items?: Profile[];
  NextToken?: string;
}
export interface TagResourceRequest {
  resourceArn: string | undefined;
  tags: Record<string, string> | undefined;
}
export interface TagResourceResponse {}
export interface UntagResourceRequest {
  resourceArn: string | undefined;
  tagKeys: string[] | undefined;
}
export interface UntagResourceResponse {}
export interface UpdateCalculatedAttributeDefinitionRequest {
  DomainName: string | undefined;
  CalculatedAttributeName: string | undefined;
  DisplayName?: string;
  Description?: string;
  Conditions?: Conditions;
}
export interface UpdateCalculatedAttributeDefinitionResponse {
  CalculatedAttributeName?: string;
  DisplayName?: string;
  Description?: string;
  CreatedAt?: Date;
  LastUpdatedAt?: Date;
  Statistic?: Statistic;
  Conditions?: Conditions;
  AttributeDetails?: AttributeDetails;
  Tags?: Record<string, string>;
}
export interface UpdateDomainRequest {
  DomainName: string | undefined;
  DefaultExpirationDays?: number;
  DefaultEncryptionKey?: string;
  DeadLetterQueueUrl?: string;
  Matching?: MatchingRequest;
  RuleBasedMatching?: RuleBasedMatchingRequest;
  Tags?: Record<string, string>;
}
export interface UpdateDomainResponse {
  DomainName: string | undefined;
  DefaultExpirationDays?: number;
  DefaultEncryptionKey?: string;
  DeadLetterQueueUrl?: string;
  Matching?: MatchingResponse;
  RuleBasedMatching?: RuleBasedMatchingResponse;
  CreatedAt: Date | undefined;
  LastUpdatedAt: Date | undefined;
  Tags?: Record<string, string>;
}
export interface UpdateAddress {
  Address1?: string;
  Address2?: string;
  Address3?: string;
  Address4?: string;
  City?: string;
  County?: string;
  State?: string;
  Province?: string;
  Country?: string;
  PostalCode?: string;
}
export interface UpdateProfileRequest {
  DomainName: string | undefined;
  ProfileId: string | undefined;
  AdditionalInformation?: string;
  AccountNumber?: string;
  PartyType?: PartyType;
  BusinessName?: string;
  FirstName?: string;
  MiddleName?: string;
  LastName?: string;
  BirthDate?: string;
  Gender?: Gender;
  PhoneNumber?: string;
  MobilePhoneNumber?: string;
  HomePhoneNumber?: string;
  BusinessPhoneNumber?: string;
  EmailAddress?: string;
  PersonalEmailAddress?: string;
  BusinessEmailAddress?: string;
  Address?: UpdateAddress;
  ShippingAddress?: UpdateAddress;
  MailingAddress?: UpdateAddress;
  BillingAddress?: UpdateAddress;
  Attributes?: Record<string, string>;
  PartyTypeString?: string;
  GenderString?: string;
}
export interface UpdateProfileResponse {
  ProfileId: string | undefined;
}
export declare const AddressFilterSensitiveLog: (obj: Address) => any;
export declare const FlowDefinitionFilterSensitiveLog: (
  obj: FlowDefinition
) => any;
export declare const AppflowIntegrationFilterSensitiveLog: (
  obj: AppflowIntegration
) => any;
export declare const AttributeDetailsFilterSensitiveLog: (
  obj: AttributeDetails
) => any;
export declare const ListCalculatedAttributeDefinitionItemFilterSensitiveLog: (
  obj: ListCalculatedAttributeDefinitionItem
) => any;
export declare const ConditionsFilterSensitiveLog: (obj: Conditions) => any;
export declare const CreateCalculatedAttributeDefinitionRequestFilterSensitiveLog: (
  obj: CreateCalculatedAttributeDefinitionRequest
) => any;
export declare const CreateCalculatedAttributeDefinitionResponseFilterSensitiveLog: (
  obj: CreateCalculatedAttributeDefinitionResponse
) => any;
export declare const IntegrationConfigFilterSensitiveLog: (
  obj: IntegrationConfig
) => any;
export declare const CreateIntegrationWorkflowRequestFilterSensitiveLog: (
  obj: CreateIntegrationWorkflowRequest
) => any;
export declare const CreateProfileRequestFilterSensitiveLog: (
  obj: CreateProfileRequest
) => any;
export declare const DetectProfileObjectTypeRequestFilterSensitiveLog: (
  obj: DetectProfileObjectTypeRequest
) => any;
export declare const DetectedProfileObjectTypeFilterSensitiveLog: (
  obj: DetectedProfileObjectType
) => any;
export declare const DetectProfileObjectTypeResponseFilterSensitiveLog: (
  obj: DetectProfileObjectTypeResponse
) => any;
export declare const GetCalculatedAttributeDefinitionResponseFilterSensitiveLog: (
  obj: GetCalculatedAttributeDefinitionResponse
) => any;
export declare const GetProfileObjectTypeResponseFilterSensitiveLog: (
  obj: GetProfileObjectTypeResponse
) => any;
export declare const GetProfileObjectTypeTemplateResponseFilterSensitiveLog: (
  obj: GetProfileObjectTypeTemplateResponse
) => any;
export declare const ListCalculatedAttributeDefinitionsResponseFilterSensitiveLog: (
  obj: ListCalculatedAttributeDefinitionsResponse
) => any;
export declare const ListProfileObjectsItemFilterSensitiveLog: (
  obj: ListProfileObjectsItem
) => any;
export declare const ListProfileObjectsResponseFilterSensitiveLog: (
  obj: ListProfileObjectsResponse
) => any;
export declare const ListProfileObjectTypesResponseFilterSensitiveLog: (
  obj: ListProfileObjectTypesResponse
) => any;
export declare const PutIntegrationRequestFilterSensitiveLog: (
  obj: PutIntegrationRequest
) => any;
export declare const PutProfileObjectRequestFilterSensitiveLog: (
  obj: PutProfileObjectRequest
) => any;
export declare const PutProfileObjectTypeRequestFilterSensitiveLog: (
  obj: PutProfileObjectTypeRequest
) => any;
export declare const PutProfileObjectTypeResponseFilterSensitiveLog: (
  obj: PutProfileObjectTypeResponse
) => any;
export declare const ProfileFilterSensitiveLog: (obj: Profile) => any;
export declare const SearchProfilesResponseFilterSensitiveLog: (
  obj: SearchProfilesResponse
) => any;
export declare const UpdateCalculatedAttributeDefinitionRequestFilterSensitiveLog: (
  obj: UpdateCalculatedAttributeDefinitionRequest
) => any;
export declare const UpdateCalculatedAttributeDefinitionResponseFilterSensitiveLog: (
  obj: UpdateCalculatedAttributeDefinitionResponse
) => any;
export declare const UpdateAddressFilterSensitiveLog: (
  obj: UpdateAddress
) => any;
export declare const UpdateProfileRequestFilterSensitiveLog: (
  obj: UpdateProfileRequest
) => any;
