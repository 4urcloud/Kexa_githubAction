import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import { ListConfigurationsRequest, ListConfigurationsResponse } from "../models/models_0";
import { MqClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../MqClient";
/**
 * @public
 */
export { __MetadataBearer, $Command };
/**
 * @public
 *
 * The input for {@link ListConfigurationsCommand}.
 */
export interface ListConfigurationsCommandInput extends ListConfigurationsRequest {
}
/**
 * @public
 *
 * The output of {@link ListConfigurationsCommand}.
 */
export interface ListConfigurationsCommandOutput extends ListConfigurationsResponse, __MetadataBearer {
}
declare const ListConfigurationsCommand_base: {
    new (input: ListConfigurationsCommandInput): import("@smithy/smithy-client").CommandImpl<ListConfigurationsCommandInput, ListConfigurationsCommandOutput, MqClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    new (...[input]: [] | [ListConfigurationsCommandInput]): import("@smithy/smithy-client").CommandImpl<ListConfigurationsCommandInput, ListConfigurationsCommandOutput, MqClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
/**
 * <p>Returns a list of all configurations.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { MqClient, ListConfigurationsCommand } from "@aws-sdk/client-mq"; // ES Modules import
 * // const { MqClient, ListConfigurationsCommand } = require("@aws-sdk/client-mq"); // CommonJS import
 * const client = new MqClient(config);
 * const input = { // ListConfigurationsRequest
 *   MaxResults: Number("int"),
 *   NextToken: "STRING_VALUE",
 * };
 * const command = new ListConfigurationsCommand(input);
 * const response = await client.send(command);
 * // { // ListConfigurationsResponse
 * //   Configurations: [ // __listOfConfiguration
 * //     { // Configuration
 * //       Arn: "STRING_VALUE", // required
 * //       AuthenticationStrategy: "SIMPLE" || "LDAP", // required
 * //       Created: new Date("TIMESTAMP"), // required
 * //       Description: "STRING_VALUE", // required
 * //       EngineType: "ACTIVEMQ" || "RABBITMQ", // required
 * //       EngineVersion: "STRING_VALUE", // required
 * //       Id: "STRING_VALUE", // required
 * //       LatestRevision: { // ConfigurationRevision
 * //         Created: new Date("TIMESTAMP"), // required
 * //         Description: "STRING_VALUE",
 * //         Revision: Number("int"), // required
 * //       },
 * //       Name: "STRING_VALUE", // required
 * //       Tags: { // __mapOf__string
 * //         "<keys>": "STRING_VALUE",
 * //       },
 * //     },
 * //   ],
 * //   MaxResults: Number("int"),
 * //   NextToken: "STRING_VALUE",
 * // };
 *
 * ```
 *
 * @param ListConfigurationsCommandInput - {@link ListConfigurationsCommandInput}
 * @returns {@link ListConfigurationsCommandOutput}
 * @see {@link ListConfigurationsCommandInput} for command's `input` shape.
 * @see {@link ListConfigurationsCommandOutput} for command's `response` shape.
 * @see {@link MqClientResolvedConfig | config} for MqClient's `config` shape.
 *
 * @throws {@link BadRequestException} (client fault)
 *  <p>Returns information about an error.</p>
 *
 * @throws {@link ForbiddenException} (client fault)
 *  <p>Returns information about an error.</p>
 *
 * @throws {@link InternalServerErrorException} (server fault)
 *  <p>Returns information about an error.</p>
 *
 * @throws {@link MqServiceException}
 * <p>Base exception class for all service exceptions from Mq service.</p>
 *
 * @public
 */
export declare class ListConfigurationsCommand extends ListConfigurationsCommand_base {
}
