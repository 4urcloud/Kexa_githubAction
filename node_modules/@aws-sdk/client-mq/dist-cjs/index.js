"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  AuthenticationStrategy: () => AuthenticationStrategy,
  BadRequestException: () => BadRequestException,
  BrokerState: () => BrokerState,
  BrokerStorageType: () => BrokerStorageType,
  ChangeType: () => ChangeType,
  ConflictException: () => ConflictException,
  CreateBrokerCommand: () => CreateBrokerCommand,
  CreateConfigurationCommand: () => CreateConfigurationCommand,
  CreateTagsCommand: () => CreateTagsCommand,
  CreateUserCommand: () => CreateUserCommand,
  DataReplicationMode: () => DataReplicationMode,
  DayOfWeek: () => DayOfWeek,
  DeleteBrokerCommand: () => DeleteBrokerCommand,
  DeleteTagsCommand: () => DeleteTagsCommand,
  DeleteUserCommand: () => DeleteUserCommand,
  DeploymentMode: () => DeploymentMode,
  DescribeBrokerCommand: () => DescribeBrokerCommand,
  DescribeBrokerEngineTypesCommand: () => DescribeBrokerEngineTypesCommand,
  DescribeBrokerInstanceOptionsCommand: () => DescribeBrokerInstanceOptionsCommand,
  DescribeConfigurationCommand: () => DescribeConfigurationCommand,
  DescribeConfigurationRevisionCommand: () => DescribeConfigurationRevisionCommand,
  DescribeUserCommand: () => DescribeUserCommand,
  EngineType: () => EngineType,
  ForbiddenException: () => ForbiddenException,
  InternalServerErrorException: () => InternalServerErrorException,
  ListBrokersCommand: () => ListBrokersCommand,
  ListConfigurationRevisionsCommand: () => ListConfigurationRevisionsCommand,
  ListConfigurationsCommand: () => ListConfigurationsCommand,
  ListTagsCommand: () => ListTagsCommand,
  ListUsersCommand: () => ListUsersCommand,
  Mq: () => Mq,
  MqClient: () => MqClient,
  MqServiceException: () => MqServiceException,
  NotFoundException: () => NotFoundException,
  PromoteCommand: () => PromoteCommand,
  PromoteMode: () => PromoteMode,
  RebootBrokerCommand: () => RebootBrokerCommand,
  SanitizationWarningReason: () => SanitizationWarningReason,
  UnauthorizedException: () => UnauthorizedException,
  UpdateBrokerCommand: () => UpdateBrokerCommand,
  UpdateConfigurationCommand: () => UpdateConfigurationCommand,
  UpdateUserCommand: () => UpdateUserCommand,
  __Client: () => import_smithy_client.Client,
  paginateListBrokers: () => paginateListBrokers
});
module.exports = __toCommonJS(src_exports);

// src/MqClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return {
    ...options,
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "mq"
  };
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/MqClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var asPartial = /* @__PURE__ */ __name((t) => t, "asPartial");
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = {
    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),
    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
  };
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return {
    ...runtimeConfig,
    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
  };
}, "resolveRuntimeExtensions");

// src/MqClient.ts
var _MqClient = class _MqClient extends import_smithy_client.Client {
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_config_resolver.resolveRegionConfig)(_config_1);
    const _config_3 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_2);
    const _config_4 = (0, import_middleware_retry.resolveRetryConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, (configuration == null ? void 0 : configuration.extensions) || []);
    super(_config_8);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),
        identityProviderConfigProvider: this.getIdentityProviderConfigProvider()
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
  getDefaultHttpAuthSchemeParametersProvider() {
    return import_httpAuthSchemeProvider.defaultMqHttpAuthSchemeParametersProvider;
  }
  getIdentityProviderConfigProvider() {
    return async (config) => new import_core.DefaultIdentityProviderConfig({
      "aws.auth#sigv4": config.credentials
    });
  }
};
__name(_MqClient, "MqClient");
var MqClient = _MqClient;

// src/Mq.ts


// src/commands/CreateBrokerCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");

var import_types = require("@smithy/types");

// src/protocols/Aws_restJson1.ts


var import_uuid = require("uuid");

// src/models/MqServiceException.ts

var _MqServiceException = class _MqServiceException extends import_smithy_client.ServiceException {
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _MqServiceException.prototype);
  }
};
__name(_MqServiceException, "MqServiceException");
var MqServiceException = _MqServiceException;

// src/models/models_0.ts
var EngineType = {
  ACTIVEMQ: "ACTIVEMQ",
  RABBITMQ: "RABBITMQ"
};
var BrokerStorageType = {
  EBS: "EBS",
  EFS: "EFS"
};
var DeploymentMode = {
  ACTIVE_STANDBY_MULTI_AZ: "ACTIVE_STANDBY_MULTI_AZ",
  CLUSTER_MULTI_AZ: "CLUSTER_MULTI_AZ",
  SINGLE_INSTANCE: "SINGLE_INSTANCE"
};
var BrokerState = {
  CREATION_FAILED: "CREATION_FAILED",
  CREATION_IN_PROGRESS: "CREATION_IN_PROGRESS",
  CRITICAL_ACTION_REQUIRED: "CRITICAL_ACTION_REQUIRED",
  DELETION_IN_PROGRESS: "DELETION_IN_PROGRESS",
  REBOOT_IN_PROGRESS: "REBOOT_IN_PROGRESS",
  REPLICA: "REPLICA",
  RUNNING: "RUNNING"
};
var AuthenticationStrategy = {
  LDAP: "LDAP",
  SIMPLE: "SIMPLE"
};
var SanitizationWarningReason = {
  DISALLOWED_ATTRIBUTE_REMOVED: "DISALLOWED_ATTRIBUTE_REMOVED",
  DISALLOWED_ELEMENT_REMOVED: "DISALLOWED_ELEMENT_REMOVED",
  INVALID_ATTRIBUTE_VALUE_REMOVED: "INVALID_ATTRIBUTE_VALUE_REMOVED"
};
var ChangeType = {
  CREATE: "CREATE",
  DELETE: "DELETE",
  UPDATE: "UPDATE"
};
var _BadRequestException = class _BadRequestException extends MqServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "BadRequestException",
      $fault: "client",
      ...opts
    });
    this.name = "BadRequestException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _BadRequestException.prototype);
    this.ErrorAttribute = opts.ErrorAttribute;
    this.Message = opts.Message;
  }
};
__name(_BadRequestException, "BadRequestException");
var BadRequestException = _BadRequestException;
var _ConflictException = class _ConflictException extends MqServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ConflictException",
      $fault: "client",
      ...opts
    });
    this.name = "ConflictException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ConflictException.prototype);
    this.ErrorAttribute = opts.ErrorAttribute;
    this.Message = opts.Message;
  }
};
__name(_ConflictException, "ConflictException");
var ConflictException = _ConflictException;
var DataReplicationMode = {
  CRDR: "CRDR",
  NONE: "NONE"
};
var DayOfWeek = {
  FRIDAY: "FRIDAY",
  MONDAY: "MONDAY",
  SATURDAY: "SATURDAY",
  SUNDAY: "SUNDAY",
  THURSDAY: "THURSDAY",
  TUESDAY: "TUESDAY",
  WEDNESDAY: "WEDNESDAY"
};
var _ForbiddenException = class _ForbiddenException extends MqServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ForbiddenException",
      $fault: "client",
      ...opts
    });
    this.name = "ForbiddenException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ForbiddenException.prototype);
    this.ErrorAttribute = opts.ErrorAttribute;
    this.Message = opts.Message;
  }
};
__name(_ForbiddenException, "ForbiddenException");
var ForbiddenException = _ForbiddenException;
var _InternalServerErrorException = class _InternalServerErrorException extends MqServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InternalServerErrorException",
      $fault: "server",
      ...opts
    });
    this.name = "InternalServerErrorException";
    this.$fault = "server";
    Object.setPrototypeOf(this, _InternalServerErrorException.prototype);
    this.ErrorAttribute = opts.ErrorAttribute;
    this.Message = opts.Message;
  }
};
__name(_InternalServerErrorException, "InternalServerErrorException");
var InternalServerErrorException = _InternalServerErrorException;
var _UnauthorizedException = class _UnauthorizedException extends MqServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "UnauthorizedException",
      $fault: "client",
      ...opts
    });
    this.name = "UnauthorizedException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _UnauthorizedException.prototype);
    this.ErrorAttribute = opts.ErrorAttribute;
    this.Message = opts.Message;
  }
};
__name(_UnauthorizedException, "UnauthorizedException");
var UnauthorizedException = _UnauthorizedException;
var _NotFoundException = class _NotFoundException extends MqServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "NotFoundException",
      $fault: "client",
      ...opts
    });
    this.name = "NotFoundException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _NotFoundException.prototype);
    this.ErrorAttribute = opts.ErrorAttribute;
    this.Message = opts.Message;
  }
};
__name(_NotFoundException, "NotFoundException");
var NotFoundException = _NotFoundException;
var PromoteMode = {
  FAILOVER: "FAILOVER",
  SWITCHOVER: "SWITCHOVER"
};

// src/protocols/Aws_restJson1.ts
var se_CreateBrokerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v1/brokers");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      authenticationStrategy: [, , `AuthenticationStrategy`],
      autoMinorVersionUpgrade: [, , `AutoMinorVersionUpgrade`],
      brokerName: [, , `BrokerName`],
      configuration: [, (_) => se_ConfigurationId(_, context), `Configuration`],
      creatorRequestId: [true, (_) => _ ?? (0, import_uuid.v4)(), `CreatorRequestId`],
      dataReplicationMode: [, , `DataReplicationMode`],
      dataReplicationPrimaryBrokerArn: [, , `DataReplicationPrimaryBrokerArn`],
      deploymentMode: [, , `DeploymentMode`],
      encryptionOptions: [, (_) => se_EncryptionOptions(_, context), `EncryptionOptions`],
      engineType: [, , `EngineType`],
      engineVersion: [, , `EngineVersion`],
      hostInstanceType: [, , `HostInstanceType`],
      ldapServerMetadata: [, (_) => se_LdapServerMetadataInput(_, context), `LdapServerMetadata`],
      logs: [, (_) => se_Logs(_, context), `Logs`],
      maintenanceWindowStartTime: [, (_) => se_WeeklyStartTime(_, context), `MaintenanceWindowStartTime`],
      publiclyAccessible: [, , `PubliclyAccessible`],
      securityGroups: [, (_) => (0, import_smithy_client._json)(_), `SecurityGroups`],
      storageType: [, , `StorageType`],
      subnetIds: [, (_) => (0, import_smithy_client._json)(_), `SubnetIds`],
      tags: [, (_) => (0, import_smithy_client._json)(_), `Tags`],
      users: [, (_) => se___listOfUser(_, context), `Users`]
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateBrokerCommand");
var se_CreateConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v1/configurations");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      authenticationStrategy: [, , `AuthenticationStrategy`],
      engineType: [, , `EngineType`],
      engineVersion: [, , `EngineVersion`],
      name: [, , `Name`],
      tags: [, (_) => (0, import_smithy_client._json)(_), `Tags`]
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateConfigurationCommand");
var se_CreateTagsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v1/tags/{ResourceArn}");
  b.p("ResourceArn", () => input.ResourceArn, "{ResourceArn}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      tags: [, (_) => (0, import_smithy_client._json)(_), `Tags`]
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateTagsCommand");
var se_CreateUserCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v1/brokers/{BrokerId}/users/{Username}");
  b.p("BrokerId", () => input.BrokerId, "{BrokerId}", false);
  b.p("Username", () => input.Username, "{Username}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      consoleAccess: [, , `ConsoleAccess`],
      groups: [, (_) => (0, import_smithy_client._json)(_), `Groups`],
      password: [, , `Password`],
      replicationUser: [, , `ReplicationUser`]
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateUserCommand");
var se_DeleteBrokerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/brokers/{BrokerId}");
  b.p("BrokerId", () => input.BrokerId, "{BrokerId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteBrokerCommand");
var se_DeleteTagsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/tags/{ResourceArn}");
  b.p("ResourceArn", () => input.ResourceArn, "{ResourceArn}", false);
  const query = (0, import_smithy_client.map)({
    [_tK]: [
      (0, import_smithy_client.expectNonNull)(input.TagKeys, `TagKeys`) != null,
      () => (input[_TK] || []).map((_entry) => _entry)
    ]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_DeleteTagsCommand");
var se_DeleteUserCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/brokers/{BrokerId}/users/{Username}");
  b.p("BrokerId", () => input.BrokerId, "{BrokerId}", false);
  b.p("Username", () => input.Username, "{Username}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteUserCommand");
var se_DescribeBrokerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/brokers/{BrokerId}");
  b.p("BrokerId", () => input.BrokerId, "{BrokerId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeBrokerCommand");
var se_DescribeBrokerEngineTypesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/broker-engine-types");
  const query = (0, import_smithy_client.map)({
    [_eT]: [, input[_ET]],
    [_mR]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_DescribeBrokerEngineTypesCommand");
var se_DescribeBrokerInstanceOptionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/broker-instance-options");
  const query = (0, import_smithy_client.map)({
    [_eT]: [, input[_ET]],
    [_hIT]: [, input[_HIT]],
    [_mR]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_nT]: [, input[_NT]],
    [_sT]: [, input[_ST]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_DescribeBrokerInstanceOptionsCommand");
var se_DescribeConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/configurations/{ConfigurationId}");
  b.p("ConfigurationId", () => input.ConfigurationId, "{ConfigurationId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeConfigurationCommand");
var se_DescribeConfigurationRevisionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/configurations/{ConfigurationId}/revisions/{ConfigurationRevision}");
  b.p("ConfigurationId", () => input.ConfigurationId, "{ConfigurationId}", false);
  b.p("ConfigurationRevision", () => input.ConfigurationRevision, "{ConfigurationRevision}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeConfigurationRevisionCommand");
var se_DescribeUserCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/brokers/{BrokerId}/users/{Username}");
  b.p("BrokerId", () => input.BrokerId, "{BrokerId}", false);
  b.p("Username", () => input.Username, "{Username}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeUserCommand");
var se_ListBrokersCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/brokers");
  const query = (0, import_smithy_client.map)({
    [_mR]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListBrokersCommand");
var se_ListConfigurationRevisionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/configurations/{ConfigurationId}/revisions");
  b.p("ConfigurationId", () => input.ConfigurationId, "{ConfigurationId}", false);
  const query = (0, import_smithy_client.map)({
    [_mR]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListConfigurationRevisionsCommand");
var se_ListConfigurationsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/configurations");
  const query = (0, import_smithy_client.map)({
    [_mR]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListConfigurationsCommand");
var se_ListTagsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/tags/{ResourceArn}");
  b.p("ResourceArn", () => input.ResourceArn, "{ResourceArn}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_ListTagsCommand");
var se_ListUsersCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/brokers/{BrokerId}/users");
  b.p("BrokerId", () => input.BrokerId, "{BrokerId}", false);
  const query = (0, import_smithy_client.map)({
    [_mR]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListUsersCommand");
var se_PromoteCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v1/brokers/{BrokerId}/promote");
  b.p("BrokerId", () => input.BrokerId, "{BrokerId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      mode: [, , `Mode`]
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_PromoteCommand");
var se_RebootBrokerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/brokers/{BrokerId}/reboot");
  b.p("BrokerId", () => input.BrokerId, "{BrokerId}", false);
  let body;
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_RebootBrokerCommand");
var se_UpdateBrokerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v1/brokers/{BrokerId}");
  b.p("BrokerId", () => input.BrokerId, "{BrokerId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      authenticationStrategy: [, , `AuthenticationStrategy`],
      autoMinorVersionUpgrade: [, , `AutoMinorVersionUpgrade`],
      configuration: [, (_) => se_ConfigurationId(_, context), `Configuration`],
      dataReplicationMode: [, , `DataReplicationMode`],
      engineVersion: [, , `EngineVersion`],
      hostInstanceType: [, , `HostInstanceType`],
      ldapServerMetadata: [, (_) => se_LdapServerMetadataInput(_, context), `LdapServerMetadata`],
      logs: [, (_) => se_Logs(_, context), `Logs`],
      maintenanceWindowStartTime: [, (_) => se_WeeklyStartTime(_, context), `MaintenanceWindowStartTime`],
      securityGroups: [, (_) => (0, import_smithy_client._json)(_), `SecurityGroups`]
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdateBrokerCommand");
var se_UpdateConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v1/configurations/{ConfigurationId}");
  b.p("ConfigurationId", () => input.ConfigurationId, "{ConfigurationId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      data: [, , `Data`],
      description: [, , `Description`]
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdateConfigurationCommand");
var se_UpdateUserCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v1/brokers/{BrokerId}/users/{Username}");
  b.p("BrokerId", () => input.BrokerId, "{BrokerId}", false);
  b.p("Username", () => input.Username, "{Username}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      consoleAccess: [, , `ConsoleAccess`],
      groups: [, (_) => (0, import_smithy_client._json)(_), `Groups`],
      password: [, , `Password`],
      replicationUser: [, , `ReplicationUser`]
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdateUserCommand");
var de_CreateBrokerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    BrokerArn: [, import_smithy_client.expectString, `brokerArn`],
    BrokerId: [, import_smithy_client.expectString, `brokerId`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateBrokerCommand");
var de_CreateConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Arn: [, import_smithy_client.expectString, `arn`],
    AuthenticationStrategy: [, import_smithy_client.expectString, `authenticationStrategy`],
    Created: [, (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), `created`],
    Id: [, import_smithy_client.expectString, `id`],
    LatestRevision: [, (_) => de_ConfigurationRevision(_, context), `latestRevision`],
    Name: [, import_smithy_client.expectString, `name`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateConfigurationCommand");
var de_CreateTagsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_CreateTagsCommand");
var de_CreateUserCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_CreateUserCommand");
var de_DeleteBrokerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    BrokerId: [, import_smithy_client.expectString, `brokerId`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DeleteBrokerCommand");
var de_DeleteTagsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteTagsCommand");
var de_DeleteUserCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteUserCommand");
var de_DescribeBrokerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ActionsRequired: [, (_) => de___listOfActionRequired(_, context), `actionsRequired`],
    AuthenticationStrategy: [, import_smithy_client.expectString, `authenticationStrategy`],
    AutoMinorVersionUpgrade: [, import_smithy_client.expectBoolean, `autoMinorVersionUpgrade`],
    BrokerArn: [, import_smithy_client.expectString, `brokerArn`],
    BrokerId: [, import_smithy_client.expectString, `brokerId`],
    BrokerInstances: [, (_) => de___listOfBrokerInstance(_, context), `brokerInstances`],
    BrokerName: [, import_smithy_client.expectString, `brokerName`],
    BrokerState: [, import_smithy_client.expectString, `brokerState`],
    Configurations: [, (_) => de_Configurations(_, context), `configurations`],
    Created: [, (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), `created`],
    DataReplicationMetadata: [, (_) => de_DataReplicationMetadataOutput(_, context), `dataReplicationMetadata`],
    DataReplicationMode: [, import_smithy_client.expectString, `dataReplicationMode`],
    DeploymentMode: [, import_smithy_client.expectString, `deploymentMode`],
    EncryptionOptions: [, (_) => de_EncryptionOptions(_, context), `encryptionOptions`],
    EngineType: [, import_smithy_client.expectString, `engineType`],
    EngineVersion: [, import_smithy_client.expectString, `engineVersion`],
    HostInstanceType: [, import_smithy_client.expectString, `hostInstanceType`],
    LdapServerMetadata: [, (_) => de_LdapServerMetadataOutput(_, context), `ldapServerMetadata`],
    Logs: [, (_) => de_LogsSummary(_, context), `logs`],
    MaintenanceWindowStartTime: [, (_) => de_WeeklyStartTime(_, context), `maintenanceWindowStartTime`],
    PendingAuthenticationStrategy: [, import_smithy_client.expectString, `pendingAuthenticationStrategy`],
    PendingDataReplicationMetadata: [
      ,
      (_) => de_DataReplicationMetadataOutput(_, context),
      `pendingDataReplicationMetadata`
    ],
    PendingDataReplicationMode: [, import_smithy_client.expectString, `pendingDataReplicationMode`],
    PendingEngineVersion: [, import_smithy_client.expectString, `pendingEngineVersion`],
    PendingHostInstanceType: [, import_smithy_client.expectString, `pendingHostInstanceType`],
    PendingLdapServerMetadata: [, (_) => de_LdapServerMetadataOutput(_, context), `pendingLdapServerMetadata`],
    PendingSecurityGroups: [, import_smithy_client._json, `pendingSecurityGroups`],
    PubliclyAccessible: [, import_smithy_client.expectBoolean, `publiclyAccessible`],
    SecurityGroups: [, import_smithy_client._json, `securityGroups`],
    StorageType: [, import_smithy_client.expectString, `storageType`],
    SubnetIds: [, import_smithy_client._json, `subnetIds`],
    Tags: [, import_smithy_client._json, `tags`],
    Users: [, (_) => de___listOfUserSummary(_, context), `users`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeBrokerCommand");
var de_DescribeBrokerEngineTypesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    BrokerEngineTypes: [, (_) => de___listOfBrokerEngineType(_, context), `brokerEngineTypes`],
    MaxResults: [, import_smithy_client.expectInt32, `maxResults`],
    NextToken: [, import_smithy_client.expectString, `nextToken`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeBrokerEngineTypesCommand");
var de_DescribeBrokerInstanceOptionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    BrokerInstanceOptions: [, (_) => de___listOfBrokerInstanceOption(_, context), `brokerInstanceOptions`],
    MaxResults: [, import_smithy_client.expectInt32, `maxResults`],
    NextToken: [, import_smithy_client.expectString, `nextToken`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeBrokerInstanceOptionsCommand");
var de_DescribeConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Arn: [, import_smithy_client.expectString, `arn`],
    AuthenticationStrategy: [, import_smithy_client.expectString, `authenticationStrategy`],
    Created: [, (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), `created`],
    Description: [, import_smithy_client.expectString, `description`],
    EngineType: [, import_smithy_client.expectString, `engineType`],
    EngineVersion: [, import_smithy_client.expectString, `engineVersion`],
    Id: [, import_smithy_client.expectString, `id`],
    LatestRevision: [, (_) => de_ConfigurationRevision(_, context), `latestRevision`],
    Name: [, import_smithy_client.expectString, `name`],
    Tags: [, import_smithy_client._json, `tags`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeConfigurationCommand");
var de_DescribeConfigurationRevisionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ConfigurationId: [, import_smithy_client.expectString, `configurationId`],
    Created: [, (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), `created`],
    Data: [, import_smithy_client.expectString, `data`],
    Description: [, import_smithy_client.expectString, `description`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeConfigurationRevisionCommand");
var de_DescribeUserCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    BrokerId: [, import_smithy_client.expectString, `brokerId`],
    ConsoleAccess: [, import_smithy_client.expectBoolean, `consoleAccess`],
    Groups: [, import_smithy_client._json, `groups`],
    Pending: [, (_) => de_UserPendingChanges(_, context), `pending`],
    ReplicationUser: [, import_smithy_client.expectBoolean, `replicationUser`],
    Username: [, import_smithy_client.expectString, `username`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeUserCommand");
var de_ListBrokersCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    BrokerSummaries: [, (_) => de___listOfBrokerSummary(_, context), `brokerSummaries`],
    NextToken: [, import_smithy_client.expectString, `nextToken`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListBrokersCommand");
var de_ListConfigurationRevisionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ConfigurationId: [, import_smithy_client.expectString, `configurationId`],
    MaxResults: [, import_smithy_client.expectInt32, `maxResults`],
    NextToken: [, import_smithy_client.expectString, `nextToken`],
    Revisions: [, (_) => de___listOfConfigurationRevision(_, context), `revisions`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListConfigurationRevisionsCommand");
var de_ListConfigurationsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Configurations: [, (_) => de___listOfConfiguration(_, context), `configurations`],
    MaxResults: [, import_smithy_client.expectInt32, `maxResults`],
    NextToken: [, import_smithy_client.expectString, `nextToken`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListConfigurationsCommand");
var de_ListTagsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Tags: [, import_smithy_client._json, `tags`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListTagsCommand");
var de_ListUsersCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    BrokerId: [, import_smithy_client.expectString, `brokerId`],
    MaxResults: [, import_smithy_client.expectInt32, `maxResults`],
    NextToken: [, import_smithy_client.expectString, `nextToken`],
    Users: [, (_) => de___listOfUserSummary(_, context), `users`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListUsersCommand");
var de_PromoteCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    BrokerId: [, import_smithy_client.expectString, `brokerId`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_PromoteCommand");
var de_RebootBrokerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_RebootBrokerCommand");
var de_UpdateBrokerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    AuthenticationStrategy: [, import_smithy_client.expectString, `authenticationStrategy`],
    AutoMinorVersionUpgrade: [, import_smithy_client.expectBoolean, `autoMinorVersionUpgrade`],
    BrokerId: [, import_smithy_client.expectString, `brokerId`],
    Configuration: [, (_) => de_ConfigurationId(_, context), `configuration`],
    DataReplicationMetadata: [, (_) => de_DataReplicationMetadataOutput(_, context), `dataReplicationMetadata`],
    DataReplicationMode: [, import_smithy_client.expectString, `dataReplicationMode`],
    EngineVersion: [, import_smithy_client.expectString, `engineVersion`],
    HostInstanceType: [, import_smithy_client.expectString, `hostInstanceType`],
    LdapServerMetadata: [, (_) => de_LdapServerMetadataOutput(_, context), `ldapServerMetadata`],
    Logs: [, (_) => de_Logs(_, context), `logs`],
    MaintenanceWindowStartTime: [, (_) => de_WeeklyStartTime(_, context), `maintenanceWindowStartTime`],
    PendingDataReplicationMetadata: [
      ,
      (_) => de_DataReplicationMetadataOutput(_, context),
      `pendingDataReplicationMetadata`
    ],
    PendingDataReplicationMode: [, import_smithy_client.expectString, `pendingDataReplicationMode`],
    SecurityGroups: [, import_smithy_client._json, `securityGroups`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateBrokerCommand");
var de_UpdateConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Arn: [, import_smithy_client.expectString, `arn`],
    Created: [, (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), `created`],
    Id: [, import_smithy_client.expectString, `id`],
    LatestRevision: [, (_) => de_ConfigurationRevision(_, context), `latestRevision`],
    Name: [, import_smithy_client.expectString, `name`],
    Warnings: [, (_) => de___listOfSanitizationWarning(_, context), `warnings`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateConfigurationCommand");
var de_UpdateUserCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UpdateUserCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await parseErrorBody(output.body, context)
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "BadRequestException":
    case "com.amazonaws.mq#BadRequestException":
      throw await de_BadRequestExceptionRes(parsedOutput, context);
    case "ConflictException":
    case "com.amazonaws.mq#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    case "ForbiddenException":
    case "com.amazonaws.mq#ForbiddenException":
      throw await de_ForbiddenExceptionRes(parsedOutput, context);
    case "InternalServerErrorException":
    case "com.amazonaws.mq#InternalServerErrorException":
      throw await de_InternalServerErrorExceptionRes(parsedOutput, context);
    case "UnauthorizedException":
    case "com.amazonaws.mq#UnauthorizedException":
      throw await de_UnauthorizedExceptionRes(parsedOutput, context);
    case "NotFoundException":
    case "com.amazonaws.mq#NotFoundException":
      throw await de_NotFoundExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var throwDefaultError = (0, import_smithy_client.withBaseException)(MqServiceException);
var de_BadRequestExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    ErrorAttribute: [, import_smithy_client.expectString, `errorAttribute`],
    Message: [, import_smithy_client.expectString, `message`]
  });
  Object.assign(contents, doc);
  const exception = new BadRequestException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_BadRequestExceptionRes");
var de_ConflictExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    ErrorAttribute: [, import_smithy_client.expectString, `errorAttribute`],
    Message: [, import_smithy_client.expectString, `message`]
  });
  Object.assign(contents, doc);
  const exception = new ConflictException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ConflictExceptionRes");
var de_ForbiddenExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    ErrorAttribute: [, import_smithy_client.expectString, `errorAttribute`],
    Message: [, import_smithy_client.expectString, `message`]
  });
  Object.assign(contents, doc);
  const exception = new ForbiddenException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ForbiddenExceptionRes");
var de_InternalServerErrorExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    ErrorAttribute: [, import_smithy_client.expectString, `errorAttribute`],
    Message: [, import_smithy_client.expectString, `message`]
  });
  Object.assign(contents, doc);
  const exception = new InternalServerErrorException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_InternalServerErrorExceptionRes");
var de_NotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    ErrorAttribute: [, import_smithy_client.expectString, `errorAttribute`],
    Message: [, import_smithy_client.expectString, `message`]
  });
  Object.assign(contents, doc);
  const exception = new NotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_NotFoundExceptionRes");
var de_UnauthorizedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    ErrorAttribute: [, import_smithy_client.expectString, `errorAttribute`],
    Message: [, import_smithy_client.expectString, `message`]
  });
  Object.assign(contents, doc);
  const exception = new UnauthorizedException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_UnauthorizedExceptionRes");
var se___listOfUser = /* @__PURE__ */ __name((input, context) => {
  return input.filter((e) => e != null).map((entry) => {
    return se_User(entry, context);
  });
}, "se___listOfUser");
var se_ConfigurationId = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    id: [, , `Id`],
    revision: [, , `Revision`]
  });
}, "se_ConfigurationId");
var se_EncryptionOptions = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    kmsKeyId: [, , `KmsKeyId`],
    useAwsOwnedKey: [, , `UseAwsOwnedKey`]
  });
}, "se_EncryptionOptions");
var se_LdapServerMetadataInput = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    hosts: [, import_smithy_client._json, `Hosts`],
    roleBase: [, , `RoleBase`],
    roleName: [, , `RoleName`],
    roleSearchMatching: [, , `RoleSearchMatching`],
    roleSearchSubtree: [, , `RoleSearchSubtree`],
    serviceAccountPassword: [, , `ServiceAccountPassword`],
    serviceAccountUsername: [, , `ServiceAccountUsername`],
    userBase: [, , `UserBase`],
    userRoleName: [, , `UserRoleName`],
    userSearchMatching: [, , `UserSearchMatching`],
    userSearchSubtree: [, , `UserSearchSubtree`]
  });
}, "se_LdapServerMetadataInput");
var se_Logs = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    audit: [, , `Audit`],
    general: [, , `General`]
  });
}, "se_Logs");
var se_User = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    consoleAccess: [, , `ConsoleAccess`],
    groups: [, import_smithy_client._json, `Groups`],
    password: [, , `Password`],
    replicationUser: [, , `ReplicationUser`],
    username: [, , `Username`]
  });
}, "se_User");
var se_WeeklyStartTime = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    dayOfWeek: [, , `DayOfWeek`],
    timeOfDay: [, , `TimeOfDay`],
    timeZone: [, , `TimeZone`]
  });
}, "se_WeeklyStartTime");
var de___listOfActionRequired = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ActionRequired(entry, context);
  });
  return retVal;
}, "de___listOfActionRequired");
var de___listOfAvailabilityZone = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_AvailabilityZone(entry, context);
  });
  return retVal;
}, "de___listOfAvailabilityZone");
var de___listOfBrokerEngineType = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_BrokerEngineType(entry, context);
  });
  return retVal;
}, "de___listOfBrokerEngineType");
var de___listOfBrokerInstance = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_BrokerInstance(entry, context);
  });
  return retVal;
}, "de___listOfBrokerInstance");
var de___listOfBrokerInstanceOption = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_BrokerInstanceOption(entry, context);
  });
  return retVal;
}, "de___listOfBrokerInstanceOption");
var de___listOfBrokerSummary = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_BrokerSummary(entry, context);
  });
  return retVal;
}, "de___listOfBrokerSummary");
var de___listOfConfiguration = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Configuration(entry, context);
  });
  return retVal;
}, "de___listOfConfiguration");
var de___listOfConfigurationId = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ConfigurationId(entry, context);
  });
  return retVal;
}, "de___listOfConfigurationId");
var de___listOfConfigurationRevision = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ConfigurationRevision(entry, context);
  });
  return retVal;
}, "de___listOfConfigurationRevision");
var de___listOfEngineVersion = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_EngineVersion(entry, context);
  });
  return retVal;
}, "de___listOfEngineVersion");
var de___listOfSanitizationWarning = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_SanitizationWarning(entry, context);
  });
  return retVal;
}, "de___listOfSanitizationWarning");
var de___listOfUserSummary = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_UserSummary(entry, context);
  });
  return retVal;
}, "de___listOfUserSummary");
var de_ActionRequired = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ActionRequiredCode: [, import_smithy_client.expectString, `actionRequiredCode`],
    ActionRequiredInfo: [, import_smithy_client.expectString, `actionRequiredInfo`]
  });
}, "de_ActionRequired");
var de_AvailabilityZone = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Name: [, import_smithy_client.expectString, `name`]
  });
}, "de_AvailabilityZone");
var de_BrokerEngineType = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    EngineType: [, import_smithy_client.expectString, `engineType`],
    EngineVersions: [, (_) => de___listOfEngineVersion(_, context), `engineVersions`]
  });
}, "de_BrokerEngineType");
var de_BrokerInstance = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ConsoleURL: [, import_smithy_client.expectString, `consoleURL`],
    Endpoints: [, import_smithy_client._json, `endpoints`],
    IpAddress: [, import_smithy_client.expectString, `ipAddress`]
  });
}, "de_BrokerInstance");
var de_BrokerInstanceOption = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    AvailabilityZones: [, (_) => de___listOfAvailabilityZone(_, context), `availabilityZones`],
    EngineType: [, import_smithy_client.expectString, `engineType`],
    HostInstanceType: [, import_smithy_client.expectString, `hostInstanceType`],
    StorageType: [, import_smithy_client.expectString, `storageType`],
    SupportedDeploymentModes: [, import_smithy_client._json, `supportedDeploymentModes`],
    SupportedEngineVersions: [, import_smithy_client._json, `supportedEngineVersions`]
  });
}, "de_BrokerInstanceOption");
var de_BrokerSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    BrokerArn: [, import_smithy_client.expectString, `brokerArn`],
    BrokerId: [, import_smithy_client.expectString, `brokerId`],
    BrokerName: [, import_smithy_client.expectString, `brokerName`],
    BrokerState: [, import_smithy_client.expectString, `brokerState`],
    Created: [, (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), `created`],
    DeploymentMode: [, import_smithy_client.expectString, `deploymentMode`],
    EngineType: [, import_smithy_client.expectString, `engineType`],
    HostInstanceType: [, import_smithy_client.expectString, `hostInstanceType`]
  });
}, "de_BrokerSummary");
var de_Configuration = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Arn: [, import_smithy_client.expectString, `arn`],
    AuthenticationStrategy: [, import_smithy_client.expectString, `authenticationStrategy`],
    Created: [, (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), `created`],
    Description: [, import_smithy_client.expectString, `description`],
    EngineType: [, import_smithy_client.expectString, `engineType`],
    EngineVersion: [, import_smithy_client.expectString, `engineVersion`],
    Id: [, import_smithy_client.expectString, `id`],
    LatestRevision: [, (_) => de_ConfigurationRevision(_, context), `latestRevision`],
    Name: [, import_smithy_client.expectString, `name`],
    Tags: [, import_smithy_client._json, `tags`]
  });
}, "de_Configuration");
var de_ConfigurationId = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Id: [, import_smithy_client.expectString, `id`],
    Revision: [, import_smithy_client.expectInt32, `revision`]
  });
}, "de_ConfigurationId");
var de_ConfigurationRevision = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Created: [, (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), `created`],
    Description: [, import_smithy_client.expectString, `description`],
    Revision: [, import_smithy_client.expectInt32, `revision`]
  });
}, "de_ConfigurationRevision");
var de_Configurations = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Current: [, (_) => de_ConfigurationId(_, context), `current`],
    History: [, (_) => de___listOfConfigurationId(_, context), `history`],
    Pending: [, (_) => de_ConfigurationId(_, context), `pending`]
  });
}, "de_Configurations");
var de_DataReplicationCounterpart = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    BrokerId: [, import_smithy_client.expectString, `brokerId`],
    Region: [, import_smithy_client.expectString, `region`]
  });
}, "de_DataReplicationCounterpart");
var de_DataReplicationMetadataOutput = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    DataReplicationCounterpart: [, (_) => de_DataReplicationCounterpart(_, context), `dataReplicationCounterpart`],
    DataReplicationRole: [, import_smithy_client.expectString, `dataReplicationRole`]
  });
}, "de_DataReplicationMetadataOutput");
var de_EncryptionOptions = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    KmsKeyId: [, import_smithy_client.expectString, `kmsKeyId`],
    UseAwsOwnedKey: [, import_smithy_client.expectBoolean, `useAwsOwnedKey`]
  });
}, "de_EncryptionOptions");
var de_EngineVersion = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Name: [, import_smithy_client.expectString, `name`]
  });
}, "de_EngineVersion");
var de_LdapServerMetadataOutput = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Hosts: [, import_smithy_client._json, `hosts`],
    RoleBase: [, import_smithy_client.expectString, `roleBase`],
    RoleName: [, import_smithy_client.expectString, `roleName`],
    RoleSearchMatching: [, import_smithy_client.expectString, `roleSearchMatching`],
    RoleSearchSubtree: [, import_smithy_client.expectBoolean, `roleSearchSubtree`],
    ServiceAccountUsername: [, import_smithy_client.expectString, `serviceAccountUsername`],
    UserBase: [, import_smithy_client.expectString, `userBase`],
    UserRoleName: [, import_smithy_client.expectString, `userRoleName`],
    UserSearchMatching: [, import_smithy_client.expectString, `userSearchMatching`],
    UserSearchSubtree: [, import_smithy_client.expectBoolean, `userSearchSubtree`]
  });
}, "de_LdapServerMetadataOutput");
var de_Logs = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Audit: [, import_smithy_client.expectBoolean, `audit`],
    General: [, import_smithy_client.expectBoolean, `general`]
  });
}, "de_Logs");
var de_LogsSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Audit: [, import_smithy_client.expectBoolean, `audit`],
    AuditLogGroup: [, import_smithy_client.expectString, `auditLogGroup`],
    General: [, import_smithy_client.expectBoolean, `general`],
    GeneralLogGroup: [, import_smithy_client.expectString, `generalLogGroup`],
    Pending: [, (_) => de_PendingLogs(_, context), `pending`]
  });
}, "de_LogsSummary");
var de_PendingLogs = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Audit: [, import_smithy_client.expectBoolean, `audit`],
    General: [, import_smithy_client.expectBoolean, `general`]
  });
}, "de_PendingLogs");
var de_SanitizationWarning = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    AttributeName: [, import_smithy_client.expectString, `attributeName`],
    ElementName: [, import_smithy_client.expectString, `elementName`],
    Reason: [, import_smithy_client.expectString, `reason`]
  });
}, "de_SanitizationWarning");
var de_UserPendingChanges = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ConsoleAccess: [, import_smithy_client.expectBoolean, `consoleAccess`],
    Groups: [, import_smithy_client._json, `groups`],
    PendingChange: [, import_smithy_client.expectString, `pendingChange`]
  });
}, "de_UserPendingChanges");
var de_UserSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    PendingChange: [, import_smithy_client.expectString, `pendingChange`],
    Username: [, import_smithy_client.expectString, `username`]
  });
}, "de_UserSummary");
var de_WeeklyStartTime = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    DayOfWeek: [, import_smithy_client.expectString, `dayOfWeek`],
    TimeOfDay: [, import_smithy_client.expectString, `timeOfDay`],
    TimeZone: [, import_smithy_client.expectString, `timeZone`]
  });
}, "de_WeeklyStartTime");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var collectBodyString = /* @__PURE__ */ __name((streamBody, context) => (0, import_smithy_client.collectBody)(streamBody, context).then((body) => context.utf8Encoder(body)), "collectBodyString");
var _ET = "EngineType";
var _HIT = "HostInstanceType";
var _MR = "MaxResults";
var _NT = "NextToken";
var _ST = "StorageType";
var _TK = "TagKeys";
var _eT = "engineType";
var _hIT = "hostInstanceType";
var _mR = "maxResults";
var _nT = "nextToken";
var _sT = "storageType";
var _tK = "tagKeys";
var parseBody = /* @__PURE__ */ __name((streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {
  if (encoded.length) {
    return JSON.parse(encoded);
  }
  return {};
}), "parseBody");
var parseErrorBody = /* @__PURE__ */ __name(async (errorBody, context) => {
  const value = await parseBody(errorBody, context);
  value.message = value.message ?? value.Message;
  return value;
}, "parseErrorBody");
var loadRestJsonErrorCode = /* @__PURE__ */ __name((output, data) => {
  const findKey = /* @__PURE__ */ __name((object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase()), "findKey");
  const sanitizeErrorCode = /* @__PURE__ */ __name((rawValue) => {
    let cleanValue = rawValue;
    if (typeof cleanValue === "number") {
      cleanValue = cleanValue.toString();
    }
    if (cleanValue.indexOf(",") >= 0) {
      cleanValue = cleanValue.split(",")[0];
    }
    if (cleanValue.indexOf(":") >= 0) {
      cleanValue = cleanValue.split(":")[0];
    }
    if (cleanValue.indexOf("#") >= 0) {
      cleanValue = cleanValue.split("#")[1];
    }
    return cleanValue;
  }, "sanitizeErrorCode");
  const headerKey = findKey(output.headers, "x-amzn-errortype");
  if (headerKey !== void 0) {
    return sanitizeErrorCode(output.headers[headerKey]);
  }
  if (data.code !== void 0) {
    return sanitizeErrorCode(data.code);
  }
  if (data["__type"] !== void 0) {
    return sanitizeErrorCode(data["__type"]);
  }
}, "loadRestJsonErrorCode");

// src/commands/CreateBrokerCommand.ts
var _CreateBrokerCommand = class _CreateBrokerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("mq", "CreateBroker", {}).n("MqClient", "CreateBrokerCommand").f(void 0, void 0).ser(se_CreateBrokerCommand).de(de_CreateBrokerCommand).build() {
};
__name(_CreateBrokerCommand, "CreateBrokerCommand");
var CreateBrokerCommand = _CreateBrokerCommand;

// src/commands/CreateConfigurationCommand.ts




var _CreateConfigurationCommand = class _CreateConfigurationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("mq", "CreateConfiguration", {}).n("MqClient", "CreateConfigurationCommand").f(void 0, void 0).ser(se_CreateConfigurationCommand).de(de_CreateConfigurationCommand).build() {
};
__name(_CreateConfigurationCommand, "CreateConfigurationCommand");
var CreateConfigurationCommand = _CreateConfigurationCommand;

// src/commands/CreateTagsCommand.ts




var _CreateTagsCommand = class _CreateTagsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("mq", "CreateTags", {}).n("MqClient", "CreateTagsCommand").f(void 0, void 0).ser(se_CreateTagsCommand).de(de_CreateTagsCommand).build() {
};
__name(_CreateTagsCommand, "CreateTagsCommand");
var CreateTagsCommand = _CreateTagsCommand;

// src/commands/CreateUserCommand.ts




var _CreateUserCommand = class _CreateUserCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("mq", "CreateUser", {}).n("MqClient", "CreateUserCommand").f(void 0, void 0).ser(se_CreateUserCommand).de(de_CreateUserCommand).build() {
};
__name(_CreateUserCommand, "CreateUserCommand");
var CreateUserCommand = _CreateUserCommand;

// src/commands/DeleteBrokerCommand.ts




var _DeleteBrokerCommand = class _DeleteBrokerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("mq", "DeleteBroker", {}).n("MqClient", "DeleteBrokerCommand").f(void 0, void 0).ser(se_DeleteBrokerCommand).de(de_DeleteBrokerCommand).build() {
};
__name(_DeleteBrokerCommand, "DeleteBrokerCommand");
var DeleteBrokerCommand = _DeleteBrokerCommand;

// src/commands/DeleteTagsCommand.ts




var _DeleteTagsCommand = class _DeleteTagsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("mq", "DeleteTags", {}).n("MqClient", "DeleteTagsCommand").f(void 0, void 0).ser(se_DeleteTagsCommand).de(de_DeleteTagsCommand).build() {
};
__name(_DeleteTagsCommand, "DeleteTagsCommand");
var DeleteTagsCommand = _DeleteTagsCommand;

// src/commands/DeleteUserCommand.ts




var _DeleteUserCommand = class _DeleteUserCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("mq", "DeleteUser", {}).n("MqClient", "DeleteUserCommand").f(void 0, void 0).ser(se_DeleteUserCommand).de(de_DeleteUserCommand).build() {
};
__name(_DeleteUserCommand, "DeleteUserCommand");
var DeleteUserCommand = _DeleteUserCommand;

// src/commands/DescribeBrokerCommand.ts




var _DescribeBrokerCommand = class _DescribeBrokerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("mq", "DescribeBroker", {}).n("MqClient", "DescribeBrokerCommand").f(void 0, void 0).ser(se_DescribeBrokerCommand).de(de_DescribeBrokerCommand).build() {
};
__name(_DescribeBrokerCommand, "DescribeBrokerCommand");
var DescribeBrokerCommand = _DescribeBrokerCommand;

// src/commands/DescribeBrokerEngineTypesCommand.ts




var _DescribeBrokerEngineTypesCommand = class _DescribeBrokerEngineTypesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("mq", "DescribeBrokerEngineTypes", {}).n("MqClient", "DescribeBrokerEngineTypesCommand").f(void 0, void 0).ser(se_DescribeBrokerEngineTypesCommand).de(de_DescribeBrokerEngineTypesCommand).build() {
};
__name(_DescribeBrokerEngineTypesCommand, "DescribeBrokerEngineTypesCommand");
var DescribeBrokerEngineTypesCommand = _DescribeBrokerEngineTypesCommand;

// src/commands/DescribeBrokerInstanceOptionsCommand.ts




var _DescribeBrokerInstanceOptionsCommand = class _DescribeBrokerInstanceOptionsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("mq", "DescribeBrokerInstanceOptions", {}).n("MqClient", "DescribeBrokerInstanceOptionsCommand").f(void 0, void 0).ser(se_DescribeBrokerInstanceOptionsCommand).de(de_DescribeBrokerInstanceOptionsCommand).build() {
};
__name(_DescribeBrokerInstanceOptionsCommand, "DescribeBrokerInstanceOptionsCommand");
var DescribeBrokerInstanceOptionsCommand = _DescribeBrokerInstanceOptionsCommand;

// src/commands/DescribeConfigurationCommand.ts




var _DescribeConfigurationCommand = class _DescribeConfigurationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("mq", "DescribeConfiguration", {}).n("MqClient", "DescribeConfigurationCommand").f(void 0, void 0).ser(se_DescribeConfigurationCommand).de(de_DescribeConfigurationCommand).build() {
};
__name(_DescribeConfigurationCommand, "DescribeConfigurationCommand");
var DescribeConfigurationCommand = _DescribeConfigurationCommand;

// src/commands/DescribeConfigurationRevisionCommand.ts




var _DescribeConfigurationRevisionCommand = class _DescribeConfigurationRevisionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("mq", "DescribeConfigurationRevision", {}).n("MqClient", "DescribeConfigurationRevisionCommand").f(void 0, void 0).ser(se_DescribeConfigurationRevisionCommand).de(de_DescribeConfigurationRevisionCommand).build() {
};
__name(_DescribeConfigurationRevisionCommand, "DescribeConfigurationRevisionCommand");
var DescribeConfigurationRevisionCommand = _DescribeConfigurationRevisionCommand;

// src/commands/DescribeUserCommand.ts




var _DescribeUserCommand = class _DescribeUserCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("mq", "DescribeUser", {}).n("MqClient", "DescribeUserCommand").f(void 0, void 0).ser(se_DescribeUserCommand).de(de_DescribeUserCommand).build() {
};
__name(_DescribeUserCommand, "DescribeUserCommand");
var DescribeUserCommand = _DescribeUserCommand;

// src/commands/ListBrokersCommand.ts




var _ListBrokersCommand = class _ListBrokersCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("mq", "ListBrokers", {}).n("MqClient", "ListBrokersCommand").f(void 0, void 0).ser(se_ListBrokersCommand).de(de_ListBrokersCommand).build() {
};
__name(_ListBrokersCommand, "ListBrokersCommand");
var ListBrokersCommand = _ListBrokersCommand;

// src/commands/ListConfigurationRevisionsCommand.ts




var _ListConfigurationRevisionsCommand = class _ListConfigurationRevisionsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("mq", "ListConfigurationRevisions", {}).n("MqClient", "ListConfigurationRevisionsCommand").f(void 0, void 0).ser(se_ListConfigurationRevisionsCommand).de(de_ListConfigurationRevisionsCommand).build() {
};
__name(_ListConfigurationRevisionsCommand, "ListConfigurationRevisionsCommand");
var ListConfigurationRevisionsCommand = _ListConfigurationRevisionsCommand;

// src/commands/ListConfigurationsCommand.ts




var _ListConfigurationsCommand = class _ListConfigurationsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("mq", "ListConfigurations", {}).n("MqClient", "ListConfigurationsCommand").f(void 0, void 0).ser(se_ListConfigurationsCommand).de(de_ListConfigurationsCommand).build() {
};
__name(_ListConfigurationsCommand, "ListConfigurationsCommand");
var ListConfigurationsCommand = _ListConfigurationsCommand;

// src/commands/ListTagsCommand.ts




var _ListTagsCommand = class _ListTagsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("mq", "ListTags", {}).n("MqClient", "ListTagsCommand").f(void 0, void 0).ser(se_ListTagsCommand).de(de_ListTagsCommand).build() {
};
__name(_ListTagsCommand, "ListTagsCommand");
var ListTagsCommand = _ListTagsCommand;

// src/commands/ListUsersCommand.ts




var _ListUsersCommand = class _ListUsersCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("mq", "ListUsers", {}).n("MqClient", "ListUsersCommand").f(void 0, void 0).ser(se_ListUsersCommand).de(de_ListUsersCommand).build() {
};
__name(_ListUsersCommand, "ListUsersCommand");
var ListUsersCommand = _ListUsersCommand;

// src/commands/PromoteCommand.ts




var _PromoteCommand = class _PromoteCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("mq", "Promote", {}).n("MqClient", "PromoteCommand").f(void 0, void 0).ser(se_PromoteCommand).de(de_PromoteCommand).build() {
};
__name(_PromoteCommand, "PromoteCommand");
var PromoteCommand = _PromoteCommand;

// src/commands/RebootBrokerCommand.ts




var _RebootBrokerCommand = class _RebootBrokerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("mq", "RebootBroker", {}).n("MqClient", "RebootBrokerCommand").f(void 0, void 0).ser(se_RebootBrokerCommand).de(de_RebootBrokerCommand).build() {
};
__name(_RebootBrokerCommand, "RebootBrokerCommand");
var RebootBrokerCommand = _RebootBrokerCommand;

// src/commands/UpdateBrokerCommand.ts




var _UpdateBrokerCommand = class _UpdateBrokerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("mq", "UpdateBroker", {}).n("MqClient", "UpdateBrokerCommand").f(void 0, void 0).ser(se_UpdateBrokerCommand).de(de_UpdateBrokerCommand).build() {
};
__name(_UpdateBrokerCommand, "UpdateBrokerCommand");
var UpdateBrokerCommand = _UpdateBrokerCommand;

// src/commands/UpdateConfigurationCommand.ts




var _UpdateConfigurationCommand = class _UpdateConfigurationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("mq", "UpdateConfiguration", {}).n("MqClient", "UpdateConfigurationCommand").f(void 0, void 0).ser(se_UpdateConfigurationCommand).de(de_UpdateConfigurationCommand).build() {
};
__name(_UpdateConfigurationCommand, "UpdateConfigurationCommand");
var UpdateConfigurationCommand = _UpdateConfigurationCommand;

// src/commands/UpdateUserCommand.ts




var _UpdateUserCommand = class _UpdateUserCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("mq", "UpdateUser", {}).n("MqClient", "UpdateUserCommand").f(void 0, void 0).ser(se_UpdateUserCommand).de(de_UpdateUserCommand).build() {
};
__name(_UpdateUserCommand, "UpdateUserCommand");
var UpdateUserCommand = _UpdateUserCommand;

// src/Mq.ts
var commands = {
  CreateBrokerCommand,
  CreateConfigurationCommand,
  CreateTagsCommand,
  CreateUserCommand,
  DeleteBrokerCommand,
  DeleteTagsCommand,
  DeleteUserCommand,
  DescribeBrokerCommand,
  DescribeBrokerEngineTypesCommand,
  DescribeBrokerInstanceOptionsCommand,
  DescribeConfigurationCommand,
  DescribeConfigurationRevisionCommand,
  DescribeUserCommand,
  ListBrokersCommand,
  ListConfigurationRevisionsCommand,
  ListConfigurationsCommand,
  ListTagsCommand,
  ListUsersCommand,
  PromoteCommand,
  RebootBrokerCommand,
  UpdateBrokerCommand,
  UpdateConfigurationCommand,
  UpdateUserCommand
};
var _Mq = class _Mq extends MqClient {
};
__name(_Mq, "Mq");
var Mq = _Mq;
(0, import_smithy_client.createAggregatedClient)(commands, Mq);

// src/pagination/ListBrokersPaginator.ts

var paginateListBrokers = (0, import_core.createPaginator)(MqClient, ListBrokersCommand, "NextToken", "NextToken", "MaxResults");

// src/index.ts
var import_util_endpoints = require("@aws-sdk/util-endpoints");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  MqServiceException,
  __Client,
  MqClient,
  Mq,
  $Command,
  CreateBrokerCommand,
  CreateConfigurationCommand,
  CreateTagsCommand,
  CreateUserCommand,
  DeleteBrokerCommand,
  DeleteTagsCommand,
  DeleteUserCommand,
  DescribeBrokerCommand,
  DescribeBrokerEngineTypesCommand,
  DescribeBrokerInstanceOptionsCommand,
  DescribeConfigurationCommand,
  DescribeConfigurationRevisionCommand,
  DescribeUserCommand,
  ListBrokersCommand,
  ListConfigurationRevisionsCommand,
  ListConfigurationsCommand,
  ListTagsCommand,
  ListUsersCommand,
  PromoteCommand,
  RebootBrokerCommand,
  UpdateBrokerCommand,
  UpdateConfigurationCommand,
  UpdateUserCommand,
  paginateListBrokers,
  EngineType,
  BrokerStorageType,
  DeploymentMode,
  BrokerState,
  AuthenticationStrategy,
  SanitizationWarningReason,
  ChangeType,
  BadRequestException,
  ConflictException,
  DataReplicationMode,
  DayOfWeek,
  ForbiddenException,
  InternalServerErrorException,
  UnauthorizedException,
  NotFoundException,
  PromoteMode
});

