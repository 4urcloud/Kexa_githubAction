import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import { DescribeConnectClientAddInsRequest, DescribeConnectClientAddInsResult } from "../models/models_0";
import { ServiceInputTypes, ServiceOutputTypes, WorkSpacesClientResolvedConfig } from "../WorkSpacesClient";
/**
 * @public
 */
export { __MetadataBearer, $Command };
/**
 * @public
 *
 * The input for {@link DescribeConnectClientAddInsCommand}.
 */
export interface DescribeConnectClientAddInsCommandInput extends DescribeConnectClientAddInsRequest {
}
/**
 * @public
 *
 * The output of {@link DescribeConnectClientAddInsCommand}.
 */
export interface DescribeConnectClientAddInsCommandOutput extends DescribeConnectClientAddInsResult, __MetadataBearer {
}
declare const DescribeConnectClientAddInsCommand_base: {
    new (input: DescribeConnectClientAddInsCommandInput): import("@smithy/smithy-client").CommandImpl<DescribeConnectClientAddInsCommandInput, DescribeConnectClientAddInsCommandOutput, WorkSpacesClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    new (__0_0: DescribeConnectClientAddInsCommandInput): import("@smithy/smithy-client").CommandImpl<DescribeConnectClientAddInsCommandInput, DescribeConnectClientAddInsCommandOutput, WorkSpacesClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
/**
 * <p>Retrieves a list of Amazon Connect client add-ins that have been created.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { WorkSpacesClient, DescribeConnectClientAddInsCommand } from "@aws-sdk/client-workspaces"; // ES Modules import
 * // const { WorkSpacesClient, DescribeConnectClientAddInsCommand } = require("@aws-sdk/client-workspaces"); // CommonJS import
 * const client = new WorkSpacesClient(config);
 * const input = { // DescribeConnectClientAddInsRequest
 *   ResourceId: "STRING_VALUE", // required
 *   NextToken: "STRING_VALUE",
 *   MaxResults: Number("int"),
 * };
 * const command = new DescribeConnectClientAddInsCommand(input);
 * const response = await client.send(command);
 * // { // DescribeConnectClientAddInsResult
 * //   AddIns: [ // ConnectClientAddInList
 * //     { // ConnectClientAddIn
 * //       AddInId: "STRING_VALUE",
 * //       ResourceId: "STRING_VALUE",
 * //       Name: "STRING_VALUE",
 * //       URL: "STRING_VALUE",
 * //     },
 * //   ],
 * //   NextToken: "STRING_VALUE",
 * // };
 *
 * ```
 *
 * @param DescribeConnectClientAddInsCommandInput - {@link DescribeConnectClientAddInsCommandInput}
 * @returns {@link DescribeConnectClientAddInsCommandOutput}
 * @see {@link DescribeConnectClientAddInsCommandInput} for command's `input` shape.
 * @see {@link DescribeConnectClientAddInsCommandOutput} for command's `response` shape.
 * @see {@link WorkSpacesClientResolvedConfig | config} for WorkSpacesClient's `config` shape.
 *
 * @throws {@link AccessDeniedException} (client fault)
 *  <p>The user is not authorized to access a resource.</p>
 *
 * @throws {@link InvalidParameterValuesException} (client fault)
 *  <p>One or more parameter values are not valid.</p>
 *
 * @throws {@link ResourceNotFoundException} (client fault)
 *  <p>The resource could not be found.</p>
 *
 * @throws {@link WorkSpacesServiceException}
 * <p>Base exception class for all service exceptions from WorkSpaces service.</p>
 *
 * @public
 */
export declare class DescribeConnectClientAddInsCommand extends DescribeConnectClientAddInsCommand_base {
}
