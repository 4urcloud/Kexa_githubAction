import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { ElasticInferenceServiceException as __BaseException } from "./ElasticInferenceServiceException";
export interface MemoryInfo {
  sizeInMiB?: number;
}
export interface KeyValuePair {
  key?: string;
  value?: number;
}
export interface AcceleratorType {
  acceleratorTypeName?: string;
  memoryInfo?: MemoryInfo;
  throughputInfo?: KeyValuePair[];
}
export declare const LocationType: {
  readonly availability_zone: "availability-zone";
  readonly availability_zone_id: "availability-zone-id";
  readonly region: "region";
};
export type LocationType = (typeof LocationType)[keyof typeof LocationType];
export interface AcceleratorTypeOffering {
  acceleratorType?: string;
  locationType?: LocationType;
  location?: string;
}
export declare class BadRequestException extends __BaseException {
  readonly name: "BadRequestException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<BadRequestException, __BaseException>
  );
}
export interface DescribeAcceleratorOfferingsRequest {
  locationType: LocationType | undefined;
  acceleratorTypes?: string[];
}
export interface DescribeAcceleratorOfferingsResponse {
  acceleratorTypeOfferings?: AcceleratorTypeOffering[];
}
export declare class InternalServerException extends __BaseException {
  readonly name: "InternalServerException";
  readonly $fault: "server";
  constructor(
    opts: __ExceptionOptionType<InternalServerException, __BaseException>
  );
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export interface Filter {
  name?: string;
  values?: string[];
}
export interface DescribeAcceleratorsRequest {
  acceleratorIds?: string[];
  filters?: Filter[];
  maxResults?: number;
  nextToken?: string;
}
export interface ElasticInferenceAcceleratorHealth {
  status?: string;
}
export interface ElasticInferenceAccelerator {
  acceleratorHealth?: ElasticInferenceAcceleratorHealth;
  acceleratorType?: string;
  acceleratorId?: string;
  availabilityZone?: string;
  attachedResource?: string;
}
export interface DescribeAcceleratorsResponse {
  acceleratorSet?: ElasticInferenceAccelerator[];
  nextToken?: string;
}
export interface DescribeAcceleratorTypesRequest {}
export interface DescribeAcceleratorTypesResponse {
  acceleratorTypes?: AcceleratorType[];
}
export interface ListTagsForResourceRequest {
  resourceArn: string | undefined;
}
export interface ListTagsForResourceResult {
  tags?: Record<string, string>;
}
export interface TagResourceRequest {
  resourceArn: string | undefined;
  tags: Record<string, string> | undefined;
}
export interface TagResourceResult {}
export interface UntagResourceRequest {
  resourceArn: string | undefined;
  tagKeys: string[] | undefined;
}
export interface UntagResourceResult {}
