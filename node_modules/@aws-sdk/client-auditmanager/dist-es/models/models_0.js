import { SENSITIVE_STRING } from "@smithy/smithy-client";
import { AuditManagerServiceException as __BaseException } from "./AuditManagerServiceException";
export class AccessDeniedException extends __BaseException {
    constructor(opts) {
        super({
            name: "AccessDeniedException",
            $fault: "client",
            ...opts,
        });
        this.name = "AccessDeniedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, AccessDeniedException.prototype);
    }
}
export const AccountStatus = {
    ACTIVE: "ACTIVE",
    INACTIVE: "INACTIVE",
    PENDING_ACTIVATION: "PENDING_ACTIVATION",
};
export const ActionEnum = {
    ACTIVE: "ACTIVE",
    CREATE: "CREATE",
    DELETE: "DELETE",
    IMPORT_EVIDENCE: "IMPORT_EVIDENCE",
    INACTIVE: "INACTIVE",
    REVIEWED: "REVIEWED",
    UNDER_REVIEW: "UNDER_REVIEW",
    UPDATE_METADATA: "UPDATE_METADATA",
};
export const ControlResponse = {
    AUTOMATE: "AUTOMATE",
    DEFER: "DEFER",
    IGNORE: "IGNORE",
    MANUAL: "MANUAL",
};
export const ControlStatus = {
    INACTIVE: "INACTIVE",
    REVIEWED: "REVIEWED",
    UNDER_REVIEW: "UNDER_REVIEW",
};
export const RoleType = {
    PROCESS_OWNER: "PROCESS_OWNER",
    RESOURCE_OWNER: "RESOURCE_OWNER",
};
export const DelegationStatus = {
    COMPLETE: "COMPLETE",
    IN_PROGRESS: "IN_PROGRESS",
    UNDER_REVIEW: "UNDER_REVIEW",
};
export const ControlSetStatus = {
    ACTIVE: "ACTIVE",
    REVIEWED: "REVIEWED",
    UNDER_REVIEW: "UNDER_REVIEW",
};
export const AssessmentReportDestinationType = {
    S3: "S3",
};
export const AssessmentStatus = {
    ACTIVE: "ACTIVE",
    INACTIVE: "INACTIVE",
};
export const FrameworkType = {
    CUSTOM: "Custom",
    STANDARD: "Standard",
};
export const ShareRequestStatus = {
    ACTIVE: "ACTIVE",
    DECLINED: "DECLINED",
    EXPIRED: "EXPIRED",
    EXPIRING: "EXPIRING",
    FAILED: "FAILED",
    REPLICATING: "REPLICATING",
    REVOKED: "REVOKED",
    SHARED: "SHARED",
};
export const AssessmentReportStatus = {
    COMPLETE: "COMPLETE",
    FAILED: "FAILED",
    IN_PROGRESS: "IN_PROGRESS",
};
export class InternalServerException extends __BaseException {
    constructor(opts) {
        super({
            name: "InternalServerException",
            $fault: "server",
            ...opts,
        });
        this.name = "InternalServerException";
        this.$fault = "server";
        Object.setPrototypeOf(this, InternalServerException.prototype);
    }
}
export class ResourceNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
        this.resourceId = opts.resourceId;
        this.resourceType = opts.resourceType;
    }
}
export const ValidationExceptionReason = {
    CANNOT_PARSE: "cannotParse",
    FIELD_VALIDATION_FAILED: "fieldValidationFailed",
    OTHER: "other",
    UNKNOWN_OPERATION: "unknownOperation",
};
export class ValidationException extends __BaseException {
    constructor(opts) {
        super({
            name: "ValidationException",
            $fault: "client",
            ...opts,
        });
        this.name = "ValidationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ValidationException.prototype);
        this.reason = opts.reason;
        this.fields = opts.fields;
    }
}
export class ThrottlingException extends __BaseException {
    constructor(opts) {
        super({
            name: "ThrottlingException",
            $fault: "client",
            ...opts,
        });
        this.name = "ThrottlingException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ThrottlingException.prototype);
    }
}
export class ServiceQuotaExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "ServiceQuotaExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "ServiceQuotaExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ServiceQuotaExceededException.prototype);
    }
}
export const SourceFrequency = {
    DAILY: "DAILY",
    MONTHLY: "MONTHLY",
    WEEKLY: "WEEKLY",
};
export const KeywordInputType = {
    INPUT_TEXT: "INPUT_TEXT",
    SELECT_FROM_LIST: "SELECT_FROM_LIST",
    UPLOAD_FILE: "UPLOAD_FILE",
};
export const SourceSetUpOption = {
    PROCEDURAL_CONTROLS_MAPPING: "Procedural_Controls_Mapping",
    SYSTEM_CONTROLS_MAPPING: "System_Controls_Mapping",
};
export const SourceType = {
    AWS_API_CALL: "AWS_API_Call",
    AWS_CLOUDTRAIL: "AWS_Cloudtrail",
    AWS_CONFIG: "AWS_Config",
    AWS_SECURITY_HUB: "AWS_Security_Hub",
    MANUAL: "MANUAL",
};
export const ControlType = {
    CUSTOM: "Custom",
    STANDARD: "Standard",
};
export const ShareRequestType = {
    RECEIVED: "RECEIVED",
    SENT: "SENT",
};
export const ObjectTypeEnum = {
    ASSESSMENT: "ASSESSMENT",
    ASSESSMENT_REPORT: "ASSESSMENT_REPORT",
    CONTROL: "CONTROL",
    CONTROL_SET: "CONTROL_SET",
    DELEGATION: "DELEGATION",
};
export const SettingAttribute = {
    ALL: "ALL",
    DEFAULT_ASSESSMENT_REPORTS_DESTINATION: "DEFAULT_ASSESSMENT_REPORTS_DESTINATION",
    DEFAULT_EXPORT_DESTINATION: "DEFAULT_EXPORT_DESTINATION",
    DEFAULT_PROCESS_OWNERS: "DEFAULT_PROCESS_OWNERS",
    DEREGISTRATION_POLICY: "DEREGISTRATION_POLICY",
    EVIDENCE_FINDER_ENABLEMENT: "EVIDENCE_FINDER_ENABLEMENT",
    IS_AWS_ORG_ENABLED: "IS_AWS_ORG_ENABLED",
    SNS_TOPIC: "SNS_TOPIC",
};
export const ExportDestinationType = {
    S3: "S3",
};
export const DeleteResources = {
    ALL: "ALL",
    DEFAULT: "DEFAULT",
};
export const EvidenceFinderBackfillStatus = {
    COMPLETED: "COMPLETED",
    IN_PROGRESS: "IN_PROGRESS",
    NOT_STARTED: "NOT_STARTED",
};
export const EvidenceFinderEnablementStatus = {
    DISABLED: "DISABLED",
    DISABLE_IN_PROGRESS: "DISABLE_IN_PROGRESS",
    ENABLED: "ENABLED",
    ENABLE_IN_PROGRESS: "ENABLE_IN_PROGRESS",
};
export const ShareRequestAction = {
    ACCEPT: "ACCEPT",
    DECLINE: "DECLINE",
    REVOKE: "REVOKE",
};
export const AWSAccountFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.emailAddress && { emailAddress: SENSITIVE_STRING }),
});
export const ControlCommentFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.authorName && { authorName: SENSITIVE_STRING }),
    ...(obj.commentBody && { commentBody: SENSITIVE_STRING }),
});
export const AssessmentControlFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.comments && { comments: obj.comments.map((item) => ControlCommentFilterSensitiveLog(item)) }),
});
export const DelegationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.assessmentName && { assessmentName: SENSITIVE_STRING }),
    ...(obj.comment && { comment: SENSITIVE_STRING }),
    ...(obj.createdBy && { createdBy: SENSITIVE_STRING }),
});
export const AssessmentControlSetFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.roles && { roles: SENSITIVE_STRING }),
    ...(obj.delegations && { delegations: SENSITIVE_STRING }),
});
export const FrameworkMetadataFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.name && { name: SENSITIVE_STRING }),
    ...(obj.complianceType && { complianceType: SENSITIVE_STRING }),
});
export const AssessmentFrameworkFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.metadata && { metadata: FrameworkMetadataFilterSensitiveLog(obj.metadata) }),
    ...(obj.controlSets && { controlSets: obj.controlSets.map((item) => AssessmentControlSetFilterSensitiveLog(item)) }),
});
export const AssessmentReportsDestinationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ScopeFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.awsAccounts && { awsAccounts: SENSITIVE_STRING }),
});
export const AssessmentMetadataFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.name && { name: SENSITIVE_STRING }),
    ...(obj.description && { description: SENSITIVE_STRING }),
    ...(obj.complianceType && { complianceType: SENSITIVE_STRING }),
    ...(obj.assessmentReportsDestination && { assessmentReportsDestination: SENSITIVE_STRING }),
    ...(obj.scope && { scope: SENSITIVE_STRING }),
    ...(obj.roles && { roles: SENSITIVE_STRING }),
    ...(obj.delegations && { delegations: SENSITIVE_STRING }),
});
export const AssessmentFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.awsAccount && { awsAccount: AWSAccountFilterSensitiveLog(obj.awsAccount) }),
    ...(obj.metadata && { metadata: AssessmentMetadataFilterSensitiveLog(obj.metadata) }),
    ...(obj.framework && { framework: SENSITIVE_STRING }),
});
export const AssessmentFrameworkMetadataFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.complianceType && { complianceType: SENSITIVE_STRING }),
});
export const AssessmentFrameworkShareRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.complianceType && { complianceType: SENSITIVE_STRING }),
});
export const AssessmentMetadataItemFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.name && { name: SENSITIVE_STRING }),
    ...(obj.complianceType && { complianceType: SENSITIVE_STRING }),
    ...(obj.roles && { roles: SENSITIVE_STRING }),
    ...(obj.delegations && { delegations: SENSITIVE_STRING }),
});
export const AssessmentReportFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.description && { description: SENSITIVE_STRING }),
    ...(obj.assessmentName && { assessmentName: SENSITIVE_STRING }),
    ...(obj.author && { author: SENSITIVE_STRING }),
});
export const AssessmentReportMetadataFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.description && { description: SENSITIVE_STRING }),
    ...(obj.assessmentName && { assessmentName: SENSITIVE_STRING }),
    ...(obj.author && { author: SENSITIVE_STRING }),
});
export const CreateDelegationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.comment && { comment: SENSITIVE_STRING }),
});
export const BatchCreateDelegationByAssessmentRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.createDelegationRequests && { createDelegationRequests: SENSITIVE_STRING }),
});
export const BatchCreateDelegationByAssessmentErrorFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.createDelegationRequest && {
        createDelegationRequest: CreateDelegationRequestFilterSensitiveLog(obj.createDelegationRequest),
    }),
});
export const BatchCreateDelegationByAssessmentResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.delegations && { delegations: SENSITIVE_STRING }),
    ...(obj.errors && { errors: SENSITIVE_STRING }),
});
export const BatchDeleteDelegationByAssessmentResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.errors && { errors: SENSITIVE_STRING }),
});
export const ManualEvidenceFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.textResponse && { textResponse: SENSITIVE_STRING }),
    ...(obj.evidenceFileName && { evidenceFileName: SENSITIVE_STRING }),
});
export const BatchImportEvidenceToAssessmentControlRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.manualEvidence && {
        manualEvidence: obj.manualEvidence.map((item) => ManualEvidenceFilterSensitiveLog(item)),
    }),
});
export const BatchImportEvidenceToAssessmentControlErrorFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.manualEvidence && { manualEvidence: ManualEvidenceFilterSensitiveLog(obj.manualEvidence) }),
});
export const BatchImportEvidenceToAssessmentControlResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.errors && {
        errors: obj.errors.map((item) => BatchImportEvidenceToAssessmentControlErrorFilterSensitiveLog(item)),
    }),
});
export const CreateAssessmentRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.name && { name: SENSITIVE_STRING }),
    ...(obj.description && { description: SENSITIVE_STRING }),
    ...(obj.assessmentReportsDestination && { assessmentReportsDestination: SENSITIVE_STRING }),
    ...(obj.scope && { scope: SENSITIVE_STRING }),
    ...(obj.roles && { roles: SENSITIVE_STRING }),
});
export const CreateAssessmentResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.assessment && { assessment: AssessmentFilterSensitiveLog(obj.assessment) }),
});
export const CreateAssessmentFrameworkRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.complianceType && { complianceType: SENSITIVE_STRING }),
});
export const ControlMappingSourceFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.troubleshootingText && { troubleshootingText: SENSITIVE_STRING }),
});
export const ControlFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.testingInformation && { testingInformation: SENSITIVE_STRING }),
    ...(obj.actionPlanTitle && { actionPlanTitle: SENSITIVE_STRING }),
    ...(obj.actionPlanInstructions && { actionPlanInstructions: SENSITIVE_STRING }),
    ...(obj.controlMappingSources && {
        controlMappingSources: obj.controlMappingSources.map((item) => ControlMappingSourceFilterSensitiveLog(item)),
    }),
    ...(obj.createdBy && { createdBy: SENSITIVE_STRING }),
    ...(obj.lastUpdatedBy && { lastUpdatedBy: SENSITIVE_STRING }),
});
export const ControlSetFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.controls && { controls: obj.controls.map((item) => ControlFilterSensitiveLog(item)) }),
});
export const FrameworkFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.complianceType && { complianceType: SENSITIVE_STRING }),
    ...(obj.controlSets && { controlSets: SENSITIVE_STRING }),
    ...(obj.createdBy && { createdBy: SENSITIVE_STRING }),
    ...(obj.lastUpdatedBy && { lastUpdatedBy: SENSITIVE_STRING }),
});
export const CreateAssessmentFrameworkResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.framework && { framework: FrameworkFilterSensitiveLog(obj.framework) }),
});
export const CreateAssessmentReportRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.description && { description: SENSITIVE_STRING }),
});
export const CreateAssessmentReportResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.assessmentReport && { assessmentReport: AssessmentReportFilterSensitiveLog(obj.assessmentReport) }),
});
export const CreateControlMappingSourceFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.troubleshootingText && { troubleshootingText: SENSITIVE_STRING }),
});
export const CreateControlRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.testingInformation && { testingInformation: SENSITIVE_STRING }),
    ...(obj.actionPlanTitle && { actionPlanTitle: SENSITIVE_STRING }),
    ...(obj.actionPlanInstructions && { actionPlanInstructions: SENSITIVE_STRING }),
    ...(obj.controlMappingSources && {
        controlMappingSources: obj.controlMappingSources.map((item) => CreateControlMappingSourceFilterSensitiveLog(item)),
    }),
});
export const CreateControlResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.control && { control: ControlFilterSensitiveLog(obj.control) }),
});
export const GetAssessmentResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.assessment && { assessment: AssessmentFilterSensitiveLog(obj.assessment) }),
});
export const GetAssessmentFrameworkResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.framework && { framework: FrameworkFilterSensitiveLog(obj.framework) }),
});
export const GetControlResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.control && { control: ControlFilterSensitiveLog(obj.control) }),
});
export const DelegationMetadataFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.assessmentName && { assessmentName: SENSITIVE_STRING }),
});
export const GetDelegationsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.delegations && { delegations: obj.delegations.map((item) => DelegationMetadataFilterSensitiveLog(item)) }),
});
export const GetEvidenceFileUploadUrlRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.fileName && { fileName: SENSITIVE_STRING }),
});
export const GetEvidenceFileUploadUrlResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SettingsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.snsTopic && { snsTopic: SENSITIVE_STRING }),
    ...(obj.defaultAssessmentReportsDestination && { defaultAssessmentReportsDestination: SENSITIVE_STRING }),
    ...(obj.defaultProcessOwners && { defaultProcessOwners: SENSITIVE_STRING }),
});
export const GetSettingsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.settings && { settings: SettingsFilterSensitiveLog(obj.settings) }),
});
export const ListAssessmentFrameworksResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.frameworkMetadataList && {
        frameworkMetadataList: obj.frameworkMetadataList.map((item) => AssessmentFrameworkMetadataFilterSensitiveLog(item)),
    }),
});
export const ListAssessmentFrameworkShareRequestsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.assessmentFrameworkShareRequests && {
        assessmentFrameworkShareRequests: obj.assessmentFrameworkShareRequests.map((item) => AssessmentFrameworkShareRequestFilterSensitiveLog(item)),
    }),
});
export const ListAssessmentReportsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.assessmentReports && {
        assessmentReports: obj.assessmentReports.map((item) => AssessmentReportMetadataFilterSensitiveLog(item)),
    }),
});
export const ListAssessmentsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.assessmentMetadata && {
        assessmentMetadata: obj.assessmentMetadata.map((item) => AssessmentMetadataItemFilterSensitiveLog(item)),
    }),
});
export const NotificationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.assessmentName && { assessmentName: SENSITIVE_STRING }),
});
export const ListNotificationsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.notifications && { notifications: obj.notifications.map((item) => NotificationFilterSensitiveLog(item)) }),
});
export const StartAssessmentFrameworkShareResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.assessmentFrameworkShareRequest && {
        assessmentFrameworkShareRequest: AssessmentFrameworkShareRequestFilterSensitiveLog(obj.assessmentFrameworkShareRequest),
    }),
});
export const UpdateAssessmentRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.assessmentName && { assessmentName: SENSITIVE_STRING }),
    ...(obj.assessmentDescription && { assessmentDescription: SENSITIVE_STRING }),
    ...(obj.scope && { scope: SENSITIVE_STRING }),
    ...(obj.assessmentReportsDestination && { assessmentReportsDestination: SENSITIVE_STRING }),
    ...(obj.roles && { roles: SENSITIVE_STRING }),
});
export const UpdateAssessmentResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.assessment && { assessment: AssessmentFilterSensitiveLog(obj.assessment) }),
});
export const UpdateAssessmentControlRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.commentBody && { commentBody: SENSITIVE_STRING }),
});
export const UpdateAssessmentControlResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.control && { control: AssessmentControlFilterSensitiveLog(obj.control) }),
});
export const UpdateAssessmentControlSetStatusRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.comment && { comment: SENSITIVE_STRING }),
});
export const UpdateAssessmentControlSetStatusResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.controlSet && { controlSet: AssessmentControlSetFilterSensitiveLog(obj.controlSet) }),
});
export const UpdateAssessmentFrameworkRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.complianceType && { complianceType: SENSITIVE_STRING }),
});
export const UpdateAssessmentFrameworkResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.framework && { framework: FrameworkFilterSensitiveLog(obj.framework) }),
});
export const UpdateAssessmentFrameworkShareResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.assessmentFrameworkShareRequest && {
        assessmentFrameworkShareRequest: AssessmentFrameworkShareRequestFilterSensitiveLog(obj.assessmentFrameworkShareRequest),
    }),
});
export const UpdateAssessmentStatusResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.assessment && { assessment: AssessmentFilterSensitiveLog(obj.assessment) }),
});
export const UpdateControlRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.testingInformation && { testingInformation: SENSITIVE_STRING }),
    ...(obj.actionPlanTitle && { actionPlanTitle: SENSITIVE_STRING }),
    ...(obj.actionPlanInstructions && { actionPlanInstructions: SENSITIVE_STRING }),
    ...(obj.controlMappingSources && {
        controlMappingSources: obj.controlMappingSources.map((item) => ControlMappingSourceFilterSensitiveLog(item)),
    }),
});
export const UpdateControlResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.control && { control: ControlFilterSensitiveLog(obj.control) }),
});
export const UpdateSettingsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.defaultAssessmentReportsDestination && { defaultAssessmentReportsDestination: SENSITIVE_STRING }),
    ...(obj.defaultProcessOwners && { defaultProcessOwners: SENSITIVE_STRING }),
});
export const UpdateSettingsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.settings && { settings: SettingsFilterSensitiveLog(obj.settings) }),
});
