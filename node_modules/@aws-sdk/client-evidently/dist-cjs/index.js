"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  AccessDeniedException: () => AccessDeniedException,
  BatchEvaluateFeatureCommand: () => BatchEvaluateFeatureCommand,
  ChangeDirectionEnum: () => ChangeDirectionEnum,
  ConflictException: () => ConflictException,
  CreateExperimentCommand: () => CreateExperimentCommand,
  CreateFeatureCommand: () => CreateFeatureCommand,
  CreateLaunchCommand: () => CreateLaunchCommand,
  CreateProjectCommand: () => CreateProjectCommand,
  CreateSegmentCommand: () => CreateSegmentCommand,
  DeleteExperimentCommand: () => DeleteExperimentCommand,
  DeleteFeatureCommand: () => DeleteFeatureCommand,
  DeleteLaunchCommand: () => DeleteLaunchCommand,
  DeleteProjectCommand: () => DeleteProjectCommand,
  DeleteSegmentCommand: () => DeleteSegmentCommand,
  EvaluateFeatureCommand: () => EvaluateFeatureCommand,
  EventType: () => EventType,
  Evidently: () => Evidently,
  EvidentlyClient: () => EvidentlyClient,
  EvidentlyServiceException: () => EvidentlyServiceException,
  ExperimentBaseStat: () => ExperimentBaseStat,
  ExperimentReportName: () => ExperimentReportName,
  ExperimentResultRequestType: () => ExperimentResultRequestType,
  ExperimentResultResponseType: () => ExperimentResultResponseType,
  ExperimentStatus: () => ExperimentStatus,
  ExperimentStopDesiredState: () => ExperimentStopDesiredState,
  ExperimentType: () => ExperimentType,
  FeatureEvaluationStrategy: () => FeatureEvaluationStrategy,
  FeatureStatus: () => FeatureStatus,
  GetExperimentCommand: () => GetExperimentCommand,
  GetExperimentResultsCommand: () => GetExperimentResultsCommand,
  GetFeatureCommand: () => GetFeatureCommand,
  GetLaunchCommand: () => GetLaunchCommand,
  GetProjectCommand: () => GetProjectCommand,
  GetSegmentCommand: () => GetSegmentCommand,
  InternalServerException: () => InternalServerException,
  LaunchStatus: () => LaunchStatus,
  LaunchStopDesiredState: () => LaunchStopDesiredState,
  LaunchType: () => LaunchType,
  ListExperimentsCommand: () => ListExperimentsCommand,
  ListFeaturesCommand: () => ListFeaturesCommand,
  ListLaunchesCommand: () => ListLaunchesCommand,
  ListProjectsCommand: () => ListProjectsCommand,
  ListSegmentReferencesCommand: () => ListSegmentReferencesCommand,
  ListSegmentsCommand: () => ListSegmentsCommand,
  ListTagsForResourceCommand: () => ListTagsForResourceCommand,
  ProjectStatus: () => ProjectStatus,
  PutProjectEventsCommand: () => PutProjectEventsCommand,
  ResourceNotFoundException: () => ResourceNotFoundException,
  SegmentReferenceResourceType: () => SegmentReferenceResourceType,
  ServiceQuotaExceededException: () => ServiceQuotaExceededException,
  ServiceUnavailableException: () => ServiceUnavailableException,
  StartExperimentCommand: () => StartExperimentCommand,
  StartLaunchCommand: () => StartLaunchCommand,
  StopExperimentCommand: () => StopExperimentCommand,
  StopLaunchCommand: () => StopLaunchCommand,
  TagResourceCommand: () => TagResourceCommand,
  TestSegmentPatternCommand: () => TestSegmentPatternCommand,
  ThrottlingException: () => ThrottlingException,
  UntagResourceCommand: () => UntagResourceCommand,
  UpdateExperimentCommand: () => UpdateExperimentCommand,
  UpdateFeatureCommand: () => UpdateFeatureCommand,
  UpdateLaunchCommand: () => UpdateLaunchCommand,
  UpdateProjectCommand: () => UpdateProjectCommand,
  UpdateProjectDataDeliveryCommand: () => UpdateProjectDataDeliveryCommand,
  ValidationException: () => ValidationException,
  ValidationExceptionReason: () => ValidationExceptionReason,
  VariableValue: () => VariableValue,
  VariationValueType: () => VariationValueType,
  __Client: () => import_smithy_client.Client,
  paginateListExperiments: () => paginateListExperiments,
  paginateListFeatures: () => paginateListFeatures,
  paginateListLaunches: () => paginateListLaunches,
  paginateListProjects: () => paginateListProjects,
  paginateListSegmentReferences: () => paginateListSegmentReferences,
  paginateListSegments: () => paginateListSegments
});
module.exports = __toCommonJS(src_exports);

// src/EvidentlyClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return {
    ...options,
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "evidently"
  };
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/EvidentlyClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var asPartial = /* @__PURE__ */ __name((t) => t, "asPartial");
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = {
    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),
    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
  };
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return {
    ...runtimeConfig,
    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
  };
}, "resolveRuntimeExtensions");

// src/EvidentlyClient.ts
var _EvidentlyClient = class _EvidentlyClient extends import_smithy_client.Client {
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_config_resolver.resolveRegionConfig)(_config_1);
    const _config_3 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_2);
    const _config_4 = (0, import_middleware_retry.resolveRetryConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, (configuration == null ? void 0 : configuration.extensions) || []);
    super(_config_8);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),
        identityProviderConfigProvider: this.getIdentityProviderConfigProvider()
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
  getDefaultHttpAuthSchemeParametersProvider() {
    return import_httpAuthSchemeProvider.defaultEvidentlyHttpAuthSchemeParametersProvider;
  }
  getIdentityProviderConfigProvider() {
    return async (config) => new import_core.DefaultIdentityProviderConfig({
      "aws.auth#sigv4": config.credentials
    });
  }
};
__name(_EvidentlyClient, "EvidentlyClient");
var EvidentlyClient = _EvidentlyClient;

// src/Evidently.ts


// src/commands/BatchEvaluateFeatureCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");

var import_types = require("@smithy/types");

// src/protocols/Aws_restJson1.ts
var import_core2 = require("@aws-sdk/core");




// src/models/EvidentlyServiceException.ts

var _EvidentlyServiceException = class _EvidentlyServiceException extends import_smithy_client.ServiceException {
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _EvidentlyServiceException.prototype);
  }
};
__name(_EvidentlyServiceException, "EvidentlyServiceException");
var EvidentlyServiceException = _EvidentlyServiceException;

// src/models/models_0.ts
var _AccessDeniedException = class _AccessDeniedException extends EvidentlyServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "AccessDeniedException",
      $fault: "client",
      ...opts
    });
    this.name = "AccessDeniedException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _AccessDeniedException.prototype);
  }
};
__name(_AccessDeniedException, "AccessDeniedException");
var AccessDeniedException = _AccessDeniedException;
var VariableValue;
((VariableValue2) => {
  VariableValue2.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.boolValue !== void 0)
      return visitor.boolValue(value.boolValue);
    if (value.stringValue !== void 0)
      return visitor.stringValue(value.stringValue);
    if (value.longValue !== void 0)
      return visitor.longValue(value.longValue);
    if (value.doubleValue !== void 0)
      return visitor.doubleValue(value.doubleValue);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(VariableValue || (VariableValue = {}));
var _ResourceNotFoundException = class _ResourceNotFoundException extends EvidentlyServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceNotFoundException",
      $fault: "client",
      ...opts
    });
    this.name = "ResourceNotFoundException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourceNotFoundException.prototype);
    this.resourceId = opts.resourceId;
    this.resourceType = opts.resourceType;
  }
};
__name(_ResourceNotFoundException, "ResourceNotFoundException");
var ResourceNotFoundException = _ResourceNotFoundException;
var _ThrottlingException = class _ThrottlingException extends EvidentlyServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ThrottlingException",
      $fault: "client",
      ...opts
    });
    this.name = "ThrottlingException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ThrottlingException.prototype);
    this.serviceCode = opts.serviceCode;
    this.quotaCode = opts.quotaCode;
  }
};
__name(_ThrottlingException, "ThrottlingException");
var ThrottlingException = _ThrottlingException;
var ValidationExceptionReason = {
  CANNOT_PARSE: "cannotParse",
  FIELD_VALIDATION_FAILED: "fieldValidationFailed",
  OTHER: "other",
  UNKNOWN_OPERATION: "unknownOperation"
};
var _ValidationException = class _ValidationException extends EvidentlyServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ValidationException",
      $fault: "client",
      ...opts
    });
    this.name = "ValidationException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ValidationException.prototype);
    this.reason = opts.reason;
    this.fieldList = opts.fieldList;
  }
};
__name(_ValidationException, "ValidationException");
var ValidationException = _ValidationException;
var ChangeDirectionEnum = {
  DECREASE: "DECREASE",
  INCREASE: "INCREASE"
};
var _ConflictException = class _ConflictException extends EvidentlyServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ConflictException",
      $fault: "client",
      ...opts
    });
    this.name = "ConflictException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ConflictException.prototype);
    this.resourceId = opts.resourceId;
    this.resourceType = opts.resourceType;
  }
};
__name(_ConflictException, "ConflictException");
var ConflictException = _ConflictException;
var ExperimentStatus = {
  CANCELLED: "CANCELLED",
  COMPLETED: "COMPLETED",
  CREATED: "CREATED",
  RUNNING: "RUNNING",
  UPDATING: "UPDATING"
};
var ExperimentType = {
  ONLINE_AB_EXPERIMENT: "aws.evidently.onlineab"
};
var _ServiceQuotaExceededException = class _ServiceQuotaExceededException extends EvidentlyServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ServiceQuotaExceededException",
      $fault: "client",
      ...opts
    });
    this.name = "ServiceQuotaExceededException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ServiceQuotaExceededException.prototype);
    this.resourceId = opts.resourceId;
    this.resourceType = opts.resourceType;
    this.serviceCode = opts.serviceCode;
    this.quotaCode = opts.quotaCode;
  }
};
__name(_ServiceQuotaExceededException, "ServiceQuotaExceededException");
var ServiceQuotaExceededException = _ServiceQuotaExceededException;
var FeatureEvaluationStrategy = {
  ALL_RULES: "ALL_RULES",
  DEFAULT_VARIATION: "DEFAULT_VARIATION"
};
var FeatureStatus = {
  AVAILABLE: "AVAILABLE",
  UPDATING: "UPDATING"
};
var VariationValueType = {
  BOOLEAN: "BOOLEAN",
  DOUBLE: "DOUBLE",
  LONG: "LONG",
  STRING: "STRING"
};
var LaunchStatus = {
  CANCELLED: "CANCELLED",
  COMPLETED: "COMPLETED",
  CREATED: "CREATED",
  RUNNING: "RUNNING",
  UPDATING: "UPDATING"
};
var LaunchType = {
  SCHEDULED_SPLITS_LAUNCH: "aws.evidently.splits"
};
var ProjectStatus = {
  AVAILABLE: "AVAILABLE",
  UPDATING: "UPDATING"
};
var _InternalServerException = class _InternalServerException extends EvidentlyServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InternalServerException",
      $fault: "server",
      ...opts
    });
    this.name = "InternalServerException";
    this.$fault = "server";
    Object.setPrototypeOf(this, _InternalServerException.prototype);
  }
};
__name(_InternalServerException, "InternalServerException");
var InternalServerException = _InternalServerException;
var _ServiceUnavailableException = class _ServiceUnavailableException extends EvidentlyServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ServiceUnavailableException",
      $fault: "server",
      ...opts
    });
    this.name = "ServiceUnavailableException";
    this.$fault = "server";
    Object.setPrototypeOf(this, _ServiceUnavailableException.prototype);
  }
};
__name(_ServiceUnavailableException, "ServiceUnavailableException");
var ServiceUnavailableException = _ServiceUnavailableException;
var EventType = {
  CUSTOM: "aws.evidently.custom",
  EVALUATION: "aws.evidently.evaluation"
};
var ExperimentBaseStat = {
  MEAN: "Mean"
};
var ExperimentReportName = {
  BAYESIAN_INFERENCE: "BayesianInference"
};
var ExperimentResultRequestType = {
  BASE_STAT: "BaseStat",
  CONFIDENCE_INTERVAL: "ConfidenceInterval",
  P_VALUE: "PValue",
  TREATMENT_EFFECT: "TreatmentEffect"
};
var ExperimentResultResponseType = {
  CONFIDENCE_INTERVAL_LOWERBOUND: "ConfidenceIntervalLowerBound",
  CONFIDENCE_INTERVAL_UPPERBOUND: "ConfidenceIntervalUpperBound",
  MEAN: "Mean",
  P_VALUE: "PValue",
  TREATMENT_EFFECT: "TreatmentEffect"
};
var ExperimentStopDesiredState = {
  CANCELLED: "CANCELLED",
  COMPLETED: "COMPLETED"
};
var LaunchStopDesiredState = {
  CANCELLED: "CANCELLED",
  COMPLETED: "COMPLETED"
};
var SegmentReferenceResourceType = {
  EXPERIMENT: "EXPERIMENT",
  LAUNCH: "LAUNCH"
};

// src/protocols/Aws_restJson1.ts
var se_BatchEvaluateFeatureCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/projects/{project}/evaluations");
  b.p("project", () => input.project, "{project}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      requests: (_) => se_EvaluationRequestsList(_, context)
    })
  );
  let { hostname: resolvedHostname } = await context.endpoint();
  if (context.disableHostPrefix !== true) {
    resolvedHostname = "dataplane." + resolvedHostname;
    if (!(0, import_protocol_http.isValidHostname)(resolvedHostname)) {
      throw new Error("ValidationError: prefixed hostname must be hostname compatible.");
    }
  }
  b.hn(resolvedHostname);
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_BatchEvaluateFeatureCommand");
var se_CreateExperimentCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/projects/{project}/experiments");
  b.p("project", () => input.project, "{project}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      description: [],
      metricGoals: (_) => se_MetricGoalConfigList(_, context),
      name: [],
      onlineAbConfig: (_) => (0, import_smithy_client._json)(_),
      randomizationSalt: [],
      samplingRate: [],
      segment: [],
      tags: (_) => (0, import_smithy_client._json)(_),
      treatments: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateExperimentCommand");
var se_CreateFeatureCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/projects/{project}/features");
  b.p("project", () => input.project, "{project}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      defaultVariation: [],
      description: [],
      entityOverrides: (_) => (0, import_smithy_client._json)(_),
      evaluationStrategy: [],
      name: [],
      tags: (_) => (0, import_smithy_client._json)(_),
      variations: (_) => se_VariationConfigsList(_, context)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateFeatureCommand");
var se_CreateLaunchCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/projects/{project}/launches");
  b.p("project", () => input.project, "{project}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      description: [],
      groups: (_) => (0, import_smithy_client._json)(_),
      metricMonitors: (_) => se_MetricMonitorConfigList(_, context),
      name: [],
      randomizationSalt: [],
      scheduledSplitsConfig: (_) => se_ScheduledSplitsLaunchConfig(_, context),
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateLaunchCommand");
var se_CreateProjectCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/projects");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      appConfigResource: (_) => (0, import_smithy_client._json)(_),
      dataDelivery: (_) => (0, import_smithy_client._json)(_),
      description: [],
      name: [],
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateProjectCommand");
var se_CreateSegmentCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/segments");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      description: [],
      name: [],
      pattern: (_) => import_smithy_client.LazyJsonString.fromObject(_),
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateSegmentCommand");
var se_DeleteExperimentCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/projects/{project}/experiments/{experiment}");
  b.p("project", () => input.project, "{project}", false);
  b.p("experiment", () => input.experiment, "{experiment}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteExperimentCommand");
var se_DeleteFeatureCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/projects/{project}/features/{feature}");
  b.p("project", () => input.project, "{project}", false);
  b.p("feature", () => input.feature, "{feature}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteFeatureCommand");
var se_DeleteLaunchCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/projects/{project}/launches/{launch}");
  b.p("project", () => input.project, "{project}", false);
  b.p("launch", () => input.launch, "{launch}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteLaunchCommand");
var se_DeleteProjectCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/projects/{project}");
  b.p("project", () => input.project, "{project}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteProjectCommand");
var se_DeleteSegmentCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/segments/{segment}");
  b.p("segment", () => input.segment, "{segment}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteSegmentCommand");
var se_EvaluateFeatureCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/projects/{project}/evaluations/{feature}");
  b.p("project", () => input.project, "{project}", false);
  b.p("feature", () => input.feature, "{feature}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      entityId: [],
      evaluationContext: (_) => import_smithy_client.LazyJsonString.fromObject(_)
    })
  );
  let { hostname: resolvedHostname } = await context.endpoint();
  if (context.disableHostPrefix !== true) {
    resolvedHostname = "dataplane." + resolvedHostname;
    if (!(0, import_protocol_http.isValidHostname)(resolvedHostname)) {
      throw new Error("ValidationError: prefixed hostname must be hostname compatible.");
    }
  }
  b.hn(resolvedHostname);
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_EvaluateFeatureCommand");
var se_GetExperimentCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/projects/{project}/experiments/{experiment}");
  b.p("project", () => input.project, "{project}", false);
  b.p("experiment", () => input.experiment, "{experiment}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetExperimentCommand");
var se_GetExperimentResultsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/projects/{project}/experiments/{experiment}/results");
  b.p("project", () => input.project, "{project}", false);
  b.p("experiment", () => input.experiment, "{experiment}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      baseStat: [],
      endTime: (_) => Math.round(_.getTime() / 1e3),
      metricNames: (_) => (0, import_smithy_client._json)(_),
      period: [],
      reportNames: (_) => (0, import_smithy_client._json)(_),
      resultStats: (_) => (0, import_smithy_client._json)(_),
      startTime: (_) => Math.round(_.getTime() / 1e3),
      treatmentNames: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_GetExperimentResultsCommand");
var se_GetFeatureCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/projects/{project}/features/{feature}");
  b.p("project", () => input.project, "{project}", false);
  b.p("feature", () => input.feature, "{feature}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetFeatureCommand");
var se_GetLaunchCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/projects/{project}/launches/{launch}");
  b.p("project", () => input.project, "{project}", false);
  b.p("launch", () => input.launch, "{launch}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetLaunchCommand");
var se_GetProjectCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/projects/{project}");
  b.p("project", () => input.project, "{project}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetProjectCommand");
var se_GetSegmentCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/segments/{segment}");
  b.p("segment", () => input.segment, "{segment}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetSegmentCommand");
var se_ListExperimentsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/projects/{project}/experiments");
  b.p("project", () => input.project, "{project}", false);
  const query = (0, import_smithy_client.map)({
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()],
    [_nT]: [, input[_nT]],
    [_s]: [, input[_s]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListExperimentsCommand");
var se_ListFeaturesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/projects/{project}/features");
  b.p("project", () => input.project, "{project}", false);
  const query = (0, import_smithy_client.map)({
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()],
    [_nT]: [, input[_nT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListFeaturesCommand");
var se_ListLaunchesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/projects/{project}/launches");
  b.p("project", () => input.project, "{project}", false);
  const query = (0, import_smithy_client.map)({
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()],
    [_nT]: [, input[_nT]],
    [_s]: [, input[_s]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListLaunchesCommand");
var se_ListProjectsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/projects");
  const query = (0, import_smithy_client.map)({
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()],
    [_nT]: [, input[_nT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListProjectsCommand");
var se_ListSegmentReferencesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/segments/{segment}/references");
  b.p("segment", () => input.segment, "{segment}", false);
  const query = (0, import_smithy_client.map)({
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()],
    [_nT]: [, input[_nT]],
    [_t]: [, (0, import_smithy_client.expectNonNull)(input[_t], `type`)]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListSegmentReferencesCommand");
var se_ListSegmentsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/segments");
  const query = (0, import_smithy_client.map)({
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()],
    [_nT]: [, input[_nT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListSegmentsCommand");
var se_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_ListTagsForResourceCommand");
var se_PutProjectEventsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/events/projects/{project}");
  b.p("project", () => input.project, "{project}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      events: (_) => se_EventList(_, context)
    })
  );
  let { hostname: resolvedHostname } = await context.endpoint();
  if (context.disableHostPrefix !== true) {
    resolvedHostname = "dataplane." + resolvedHostname;
    if (!(0, import_protocol_http.isValidHostname)(resolvedHostname)) {
      throw new Error("ValidationError: prefixed hostname must be hostname compatible.");
    }
  }
  b.hn(resolvedHostname);
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_PutProjectEventsCommand");
var se_StartExperimentCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/projects/{project}/experiments/{experiment}/start");
  b.p("project", () => input.project, "{project}", false);
  b.p("experiment", () => input.experiment, "{experiment}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      analysisCompleteTime: (_) => Math.round(_.getTime() / 1e3)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_StartExperimentCommand");
var se_StartLaunchCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/projects/{project}/launches/{launch}/start");
  b.p("project", () => input.project, "{project}", false);
  b.p("launch", () => input.launch, "{launch}", false);
  let body;
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_StartLaunchCommand");
var se_StopExperimentCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/projects/{project}/experiments/{experiment}/cancel");
  b.p("project", () => input.project, "{project}", false);
  b.p("experiment", () => input.experiment, "{experiment}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      desiredState: [],
      reason: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_StopExperimentCommand");
var se_StopLaunchCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/projects/{project}/launches/{launch}/cancel");
  b.p("project", () => input.project, "{project}", false);
  b.p("launch", () => input.launch, "{launch}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      desiredState: [],
      reason: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_StopLaunchCommand");
var se_TagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_TagResourceCommand");
var se_TestSegmentPatternCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/test-segment-pattern");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      pattern: (_) => import_smithy_client.LazyJsonString.fromObject(_),
      payload: (_) => import_smithy_client.LazyJsonString.fromObject(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_TestSegmentPatternCommand");
var se_UntagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  const query = (0, import_smithy_client.map)({
    [_tK]: [
      (0, import_smithy_client.expectNonNull)(input.tagKeys, `tagKeys`) != null,
      () => (input[_tK] || []).map((_entry) => _entry)
    ]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_UntagResourceCommand");
var se_UpdateExperimentCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/projects/{project}/experiments/{experiment}");
  b.p("project", () => input.project, "{project}", false);
  b.p("experiment", () => input.experiment, "{experiment}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      description: [],
      metricGoals: (_) => se_MetricGoalConfigList(_, context),
      onlineAbConfig: (_) => (0, import_smithy_client._json)(_),
      randomizationSalt: [],
      removeSegment: [],
      samplingRate: [],
      segment: [],
      treatments: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("PATCH").h(headers).b(body);
  return b.build();
}, "se_UpdateExperimentCommand");
var se_UpdateFeatureCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/projects/{project}/features/{feature}");
  b.p("project", () => input.project, "{project}", false);
  b.p("feature", () => input.feature, "{feature}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      addOrUpdateVariations: (_) => se_VariationConfigsList(_, context),
      defaultVariation: [],
      description: [],
      entityOverrides: (_) => (0, import_smithy_client._json)(_),
      evaluationStrategy: [],
      removeVariations: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("PATCH").h(headers).b(body);
  return b.build();
}, "se_UpdateFeatureCommand");
var se_UpdateLaunchCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/projects/{project}/launches/{launch}");
  b.p("project", () => input.project, "{project}", false);
  b.p("launch", () => input.launch, "{launch}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      description: [],
      groups: (_) => (0, import_smithy_client._json)(_),
      metricMonitors: (_) => se_MetricMonitorConfigList(_, context),
      randomizationSalt: [],
      scheduledSplitsConfig: (_) => se_ScheduledSplitsLaunchConfig(_, context)
    })
  );
  b.m("PATCH").h(headers).b(body);
  return b.build();
}, "se_UpdateLaunchCommand");
var se_UpdateProjectCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/projects/{project}");
  b.p("project", () => input.project, "{project}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      appConfigResource: (_) => (0, import_smithy_client._json)(_),
      description: []
    })
  );
  b.m("PATCH").h(headers).b(body);
  return b.build();
}, "se_UpdateProjectCommand");
var se_UpdateProjectDataDeliveryCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/projects/{project}/data-delivery");
  b.p("project", () => input.project, "{project}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      cloudWatchLogs: (_) => (0, import_smithy_client._json)(_),
      s3Destination: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("PATCH").h(headers).b(body);
  return b.build();
}, "se_UpdateProjectDataDeliveryCommand");
var de_BatchEvaluateFeatureCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    results: (_) => de_EvaluationResultsList(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_BatchEvaluateFeatureCommand");
var de_CreateExperimentCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    experiment: (_) => de_Experiment(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateExperimentCommand");
var de_CreateFeatureCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    feature: (_) => de_Feature(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateFeatureCommand");
var de_CreateLaunchCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    launch: (_) => de_Launch(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateLaunchCommand");
var de_CreateProjectCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    project: (_) => de_Project(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateProjectCommand");
var de_CreateSegmentCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    segment: (_) => de_Segment(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateSegmentCommand");
var de_DeleteExperimentCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteExperimentCommand");
var de_DeleteFeatureCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteFeatureCommand");
var de_DeleteLaunchCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteLaunchCommand");
var de_DeleteProjectCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteProjectCommand");
var de_DeleteSegmentCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteSegmentCommand");
var de_EvaluateFeatureCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    details: (_) => new import_smithy_client.LazyJsonString(_),
    reason: import_smithy_client.expectString,
    value: (_) => de_VariableValue((0, import_core2.awsExpectUnion)(_), context),
    variation: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_EvaluateFeatureCommand");
var de_GetExperimentCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    experiment: (_) => de_Experiment(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetExperimentCommand");
var de_GetExperimentResultsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    details: import_smithy_client.expectString,
    reports: (_) => de_ExperimentReportList(_, context),
    resultsData: (_) => de_ExperimentResultsDataList(_, context),
    timestamps: (_) => de_TimestampList(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetExperimentResultsCommand");
var de_GetFeatureCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    feature: (_) => de_Feature(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetFeatureCommand");
var de_GetLaunchCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    launch: (_) => de_Launch(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetLaunchCommand");
var de_GetProjectCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    project: (_) => de_Project(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetProjectCommand");
var de_GetSegmentCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    segment: (_) => de_Segment(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetSegmentCommand");
var de_ListExperimentsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    experiments: (_) => de_ExperimentList(_, context),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListExperimentsCommand");
var de_ListFeaturesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    features: (_) => de_FeatureSummariesList(_, context),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListFeaturesCommand");
var de_ListLaunchesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    launches: (_) => de_LaunchesList(_, context),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListLaunchesCommand");
var de_ListProjectsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    nextToken: import_smithy_client.expectString,
    projects: (_) => de_ProjectSummariesList(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListProjectsCommand");
var de_ListSegmentReferencesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    nextToken: import_smithy_client.expectString,
    referencedBy: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListSegmentReferencesCommand");
var de_ListSegmentsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    nextToken: import_smithy_client.expectString,
    segments: (_) => de_SegmentList(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListSegmentsCommand");
var de_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListTagsForResourceCommand");
var de_PutProjectEventsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    eventResults: import_smithy_client._json,
    failedEventCount: import_smithy_client.expectInt32
  });
  Object.assign(contents, doc);
  return contents;
}, "de_PutProjectEventsCommand");
var de_StartExperimentCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    startedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_)))
  });
  Object.assign(contents, doc);
  return contents;
}, "de_StartExperimentCommand");
var de_StartLaunchCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    launch: (_) => de_Launch(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_StartLaunchCommand");
var de_StopExperimentCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    endedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_)))
  });
  Object.assign(contents, doc);
  return contents;
}, "de_StopExperimentCommand");
var de_StopLaunchCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    endedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_)))
  });
  Object.assign(contents, doc);
  return contents;
}, "de_StopLaunchCommand");
var de_TagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_TagResourceCommand");
var de_TestSegmentPatternCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    match: import_smithy_client.expectBoolean
  });
  Object.assign(contents, doc);
  return contents;
}, "de_TestSegmentPatternCommand");
var de_UntagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UntagResourceCommand");
var de_UpdateExperimentCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    experiment: (_) => de_Experiment(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateExperimentCommand");
var de_UpdateFeatureCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    feature: (_) => de_Feature(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateFeatureCommand");
var de_UpdateLaunchCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    launch: (_) => de_Launch(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateLaunchCommand");
var de_UpdateProjectCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    project: (_) => de_Project(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateProjectCommand");
var de_UpdateProjectDataDeliveryCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    project: (_) => de_Project(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateProjectDataDeliveryCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await (0, import_core2.parseJsonErrorBody)(output.body, context)
  };
  const errorCode = (0, import_core2.loadRestJsonErrorCode)(output, parsedOutput.body);
  switch (errorCode) {
    case "AccessDeniedException":
    case "com.amazonaws.evidently#AccessDeniedException":
      throw await de_AccessDeniedExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.evidently#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    case "ThrottlingException":
    case "com.amazonaws.evidently#ThrottlingException":
      throw await de_ThrottlingExceptionRes(parsedOutput, context);
    case "ValidationException":
    case "com.amazonaws.evidently#ValidationException":
      throw await de_ValidationExceptionRes(parsedOutput, context);
    case "ConflictException":
    case "com.amazonaws.evidently#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    case "ServiceQuotaExceededException":
    case "com.amazonaws.evidently#ServiceQuotaExceededException":
      throw await de_ServiceQuotaExceededExceptionRes(parsedOutput, context);
    case "InternalServerException":
    case "com.amazonaws.evidently#InternalServerException":
      throw await de_InternalServerExceptionRes(parsedOutput, context);
    case "ServiceUnavailableException":
    case "com.amazonaws.evidently#ServiceUnavailableException":
      throw await de_ServiceUnavailableExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var throwDefaultError = (0, import_smithy_client.withBaseException)(EvidentlyServiceException);
var de_AccessDeniedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new AccessDeniedException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_AccessDeniedExceptionRes");
var de_ConflictExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString,
    resourceId: import_smithy_client.expectString,
    resourceType: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ConflictException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ConflictExceptionRes");
var de_InternalServerExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new InternalServerException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_InternalServerExceptionRes");
var de_ResourceNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString,
    resourceId: import_smithy_client.expectString,
    resourceType: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ResourceNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ResourceNotFoundExceptionRes");
var de_ServiceQuotaExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString,
    quotaCode: import_smithy_client.expectString,
    resourceId: import_smithy_client.expectString,
    resourceType: import_smithy_client.expectString,
    serviceCode: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ServiceQuotaExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ServiceQuotaExceededExceptionRes");
var de_ServiceUnavailableExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ServiceUnavailableException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ServiceUnavailableExceptionRes");
var de_ThrottlingExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString,
    quotaCode: import_smithy_client.expectString,
    serviceCode: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ThrottlingException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ThrottlingExceptionRes");
var de_ValidationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    fieldList: import_smithy_client._json,
    message: import_smithy_client.expectString,
    reason: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ValidationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ValidationExceptionRes");
var se_EvaluationRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    entityId: [],
    evaluationContext: import_smithy_client.LazyJsonString.fromObject,
    feature: []
  });
}, "se_EvaluationRequest");
var se_EvaluationRequestsList = /* @__PURE__ */ __name((input, context) => {
  return input.filter((e) => e != null).map((entry) => {
    return se_EvaluationRequest(entry, context);
  });
}, "se_EvaluationRequestsList");
var se_Event = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    data: import_smithy_client.LazyJsonString.fromObject,
    timestamp: (_) => Math.round(_.getTime() / 1e3),
    type: []
  });
}, "se_Event");
var se_EventList = /* @__PURE__ */ __name((input, context) => {
  return input.filter((e) => e != null).map((entry) => {
    return se_Event(entry, context);
  });
}, "se_EventList");
var se_MetricDefinitionConfig = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    entityIdKey: [],
    eventPattern: import_smithy_client.LazyJsonString.fromObject,
    name: [],
    unitLabel: [],
    valueKey: []
  });
}, "se_MetricDefinitionConfig");
var se_MetricGoalConfig = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    desiredChange: [],
    metricDefinition: (_) => se_MetricDefinitionConfig(_, context)
  });
}, "se_MetricGoalConfig");
var se_MetricGoalConfigList = /* @__PURE__ */ __name((input, context) => {
  return input.filter((e) => e != null).map((entry) => {
    return se_MetricGoalConfig(entry, context);
  });
}, "se_MetricGoalConfigList");
var se_MetricMonitorConfig = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    metricDefinition: (_) => se_MetricDefinitionConfig(_, context)
  });
}, "se_MetricMonitorConfig");
var se_MetricMonitorConfigList = /* @__PURE__ */ __name((input, context) => {
  return input.filter((e) => e != null).map((entry) => {
    return se_MetricMonitorConfig(entry, context);
  });
}, "se_MetricMonitorConfigList");
var se_ScheduledSplitConfig = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    groupWeights: import_smithy_client._json,
    segmentOverrides: import_smithy_client._json,
    startTime: (_) => Math.round(_.getTime() / 1e3)
  });
}, "se_ScheduledSplitConfig");
var se_ScheduledSplitConfigList = /* @__PURE__ */ __name((input, context) => {
  return input.filter((e) => e != null).map((entry) => {
    return se_ScheduledSplitConfig(entry, context);
  });
}, "se_ScheduledSplitConfigList");
var se_ScheduledSplitsLaunchConfig = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    steps: (_) => se_ScheduledSplitConfigList(_, context)
  });
}, "se_ScheduledSplitsLaunchConfig");
var se_VariableValue = /* @__PURE__ */ __name((input, context) => {
  return VariableValue.visit(input, {
    boolValue: (value) => ({ boolValue: value }),
    doubleValue: (value) => ({ doubleValue: (0, import_smithy_client.serializeFloat)(value) }),
    longValue: (value) => ({ longValue: value }),
    stringValue: (value) => ({ stringValue: value }),
    _: (name, value) => ({ name: value })
  });
}, "se_VariableValue");
var se_VariationConfig = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    name: [],
    value: (_) => se_VariableValue(_, context)
  });
}, "se_VariationConfig");
var se_VariationConfigsList = /* @__PURE__ */ __name((input, context) => {
  return input.filter((e) => e != null).map((entry) => {
    return se_VariationConfig(entry, context);
  });
}, "se_VariationConfigsList");
var de_DoubleValueList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return (0, import_smithy_client.limitedParseDouble)(entry);
  });
  return retVal;
}, "de_DoubleValueList");
var de_EvaluationResult = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    details: (_) => new import_smithy_client.LazyJsonString(_),
    entityId: import_smithy_client.expectString,
    feature: import_smithy_client.expectString,
    project: import_smithy_client.expectString,
    reason: import_smithy_client.expectString,
    value: (_) => de_VariableValue((0, import_core2.awsExpectUnion)(_), context),
    variation: import_smithy_client.expectString
  });
}, "de_EvaluationResult");
var de_EvaluationResultsList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_EvaluationResult(entry, context);
  });
  return retVal;
}, "de_EvaluationResultsList");
var de_Experiment = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    createdTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    description: import_smithy_client.expectString,
    execution: (_) => de_ExperimentExecution(_, context),
    lastUpdatedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    metricGoals: (_) => de_MetricGoalsList(_, context),
    name: import_smithy_client.expectString,
    onlineAbDefinition: import_smithy_client._json,
    project: import_smithy_client.expectString,
    randomizationSalt: import_smithy_client.expectString,
    samplingRate: import_smithy_client.expectLong,
    schedule: (_) => de_ExperimentSchedule(_, context),
    segment: import_smithy_client.expectString,
    status: import_smithy_client.expectString,
    statusReason: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    treatments: import_smithy_client._json,
    type: import_smithy_client.expectString
  });
}, "de_Experiment");
var de_ExperimentExecution = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    endedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    startedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_)))
  });
}, "de_ExperimentExecution");
var de_ExperimentList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Experiment(entry, context);
  });
  return retVal;
}, "de_ExperimentList");
var de_ExperimentReport = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    content: (_) => new import_smithy_client.LazyJsonString(_),
    metricName: import_smithy_client.expectString,
    reportName: import_smithy_client.expectString,
    treatmentName: import_smithy_client.expectString
  });
}, "de_ExperimentReport");
var de_ExperimentReportList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ExperimentReport(entry, context);
  });
  return retVal;
}, "de_ExperimentReportList");
var de_ExperimentResultsData = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    metricName: import_smithy_client.expectString,
    resultStat: import_smithy_client.expectString,
    treatmentName: import_smithy_client.expectString,
    values: (_) => de_DoubleValueList(_, context)
  });
}, "de_ExperimentResultsData");
var de_ExperimentResultsDataList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ExperimentResultsData(entry, context);
  });
  return retVal;
}, "de_ExperimentResultsDataList");
var de_ExperimentSchedule = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    analysisCompleteTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_)))
  });
}, "de_ExperimentSchedule");
var de_Feature = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    createdTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    defaultVariation: import_smithy_client.expectString,
    description: import_smithy_client.expectString,
    entityOverrides: import_smithy_client._json,
    evaluationRules: import_smithy_client._json,
    evaluationStrategy: import_smithy_client.expectString,
    lastUpdatedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    name: import_smithy_client.expectString,
    project: import_smithy_client.expectString,
    status: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    valueType: import_smithy_client.expectString,
    variations: (_) => de_VariationsList(_, context)
  });
}, "de_Feature");
var de_FeatureSummariesList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_FeatureSummary(entry, context);
  });
  return retVal;
}, "de_FeatureSummariesList");
var de_FeatureSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    createdTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    defaultVariation: import_smithy_client.expectString,
    evaluationRules: import_smithy_client._json,
    evaluationStrategy: import_smithy_client.expectString,
    lastUpdatedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    name: import_smithy_client.expectString,
    project: import_smithy_client.expectString,
    status: import_smithy_client.expectString,
    tags: import_smithy_client._json
  });
}, "de_FeatureSummary");
var de_Launch = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    createdTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    description: import_smithy_client.expectString,
    execution: (_) => de_LaunchExecution(_, context),
    groups: import_smithy_client._json,
    lastUpdatedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    metricMonitors: (_) => de_MetricMonitorList(_, context),
    name: import_smithy_client.expectString,
    project: import_smithy_client.expectString,
    randomizationSalt: import_smithy_client.expectString,
    scheduledSplitsDefinition: (_) => de_ScheduledSplitsLaunchDefinition(_, context),
    status: import_smithy_client.expectString,
    statusReason: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    type: import_smithy_client.expectString
  });
}, "de_Launch");
var de_LaunchesList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Launch(entry, context);
  });
  return retVal;
}, "de_LaunchesList");
var de_LaunchExecution = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    endedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    startedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_)))
  });
}, "de_LaunchExecution");
var de_MetricDefinition = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    entityIdKey: import_smithy_client.expectString,
    eventPattern: (_) => new import_smithy_client.LazyJsonString(_),
    name: import_smithy_client.expectString,
    unitLabel: import_smithy_client.expectString,
    valueKey: import_smithy_client.expectString
  });
}, "de_MetricDefinition");
var de_MetricGoal = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    desiredChange: import_smithy_client.expectString,
    metricDefinition: (_) => de_MetricDefinition(_, context)
  });
}, "de_MetricGoal");
var de_MetricGoalsList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_MetricGoal(entry, context);
  });
  return retVal;
}, "de_MetricGoalsList");
var de_MetricMonitor = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    metricDefinition: (_) => de_MetricDefinition(_, context)
  });
}, "de_MetricMonitor");
var de_MetricMonitorList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_MetricMonitor(entry, context);
  });
  return retVal;
}, "de_MetricMonitorList");
var de_Project = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    activeExperimentCount: import_smithy_client.expectLong,
    activeLaunchCount: import_smithy_client.expectLong,
    appConfigResource: import_smithy_client._json,
    arn: import_smithy_client.expectString,
    createdTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    dataDelivery: import_smithy_client._json,
    description: import_smithy_client.expectString,
    experimentCount: import_smithy_client.expectLong,
    featureCount: import_smithy_client.expectLong,
    lastUpdatedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    launchCount: import_smithy_client.expectLong,
    name: import_smithy_client.expectString,
    status: import_smithy_client.expectString,
    tags: import_smithy_client._json
  });
}, "de_Project");
var de_ProjectSummariesList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ProjectSummary(entry, context);
  });
  return retVal;
}, "de_ProjectSummariesList");
var de_ProjectSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    activeExperimentCount: import_smithy_client.expectLong,
    activeLaunchCount: import_smithy_client.expectLong,
    arn: import_smithy_client.expectString,
    createdTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    description: import_smithy_client.expectString,
    experimentCount: import_smithy_client.expectLong,
    featureCount: import_smithy_client.expectLong,
    lastUpdatedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    launchCount: import_smithy_client.expectLong,
    name: import_smithy_client.expectString,
    status: import_smithy_client.expectString,
    tags: import_smithy_client._json
  });
}, "de_ProjectSummary");
var de_ScheduledSplit = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    groupWeights: import_smithy_client._json,
    segmentOverrides: import_smithy_client._json,
    startTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_)))
  });
}, "de_ScheduledSplit");
var de_ScheduledSplitsLaunchDefinition = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    steps: (_) => de_ScheduledStepList(_, context)
  });
}, "de_ScheduledSplitsLaunchDefinition");
var de_ScheduledStepList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ScheduledSplit(entry, context);
  });
  return retVal;
}, "de_ScheduledStepList");
var de_Segment = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    createdTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    description: import_smithy_client.expectString,
    experimentCount: import_smithy_client.expectLong,
    lastUpdatedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    launchCount: import_smithy_client.expectLong,
    name: import_smithy_client.expectString,
    pattern: (_) => new import_smithy_client.LazyJsonString(_),
    tags: import_smithy_client._json
  });
}, "de_Segment");
var de_SegmentList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Segment(entry, context);
  });
  return retVal;
}, "de_SegmentList");
var de_TimestampList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(entry)));
  });
  return retVal;
}, "de_TimestampList");
var de_VariableValue = /* @__PURE__ */ __name((output, context) => {
  if ((0, import_smithy_client.expectBoolean)(output.boolValue) !== void 0) {
    return { boolValue: (0, import_smithy_client.expectBoolean)(output.boolValue) };
  }
  if ((0, import_smithy_client.limitedParseDouble)(output.doubleValue) !== void 0) {
    return { doubleValue: (0, import_smithy_client.limitedParseDouble)(output.doubleValue) };
  }
  if ((0, import_smithy_client.expectLong)(output.longValue) !== void 0) {
    return { longValue: (0, import_smithy_client.expectLong)(output.longValue) };
  }
  if ((0, import_smithy_client.expectString)(output.stringValue) !== void 0) {
    return { stringValue: (0, import_smithy_client.expectString)(output.stringValue) };
  }
  return { $unknown: Object.entries(output)[0] };
}, "de_VariableValue");
var de_Variation = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    name: import_smithy_client.expectString,
    value: (_) => de_VariableValue((0, import_core2.awsExpectUnion)(_), context)
  });
}, "de_Variation");
var de_VariationsList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Variation(entry, context);
  });
  return retVal;
}, "de_VariationsList");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var _mR = "maxResults";
var _nT = "nextToken";
var _s = "status";
var _t = "type";
var _tK = "tagKeys";

// src/commands/BatchEvaluateFeatureCommand.ts
var _BatchEvaluateFeatureCommand = class _BatchEvaluateFeatureCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Evidently", "BatchEvaluateFeature", {}).n("EvidentlyClient", "BatchEvaluateFeatureCommand").f(void 0, void 0).ser(se_BatchEvaluateFeatureCommand).de(de_BatchEvaluateFeatureCommand).build() {
};
__name(_BatchEvaluateFeatureCommand, "BatchEvaluateFeatureCommand");
var BatchEvaluateFeatureCommand = _BatchEvaluateFeatureCommand;

// src/commands/CreateExperimentCommand.ts




var _CreateExperimentCommand = class _CreateExperimentCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Evidently", "CreateExperiment", {}).n("EvidentlyClient", "CreateExperimentCommand").f(void 0, void 0).ser(se_CreateExperimentCommand).de(de_CreateExperimentCommand).build() {
};
__name(_CreateExperimentCommand, "CreateExperimentCommand");
var CreateExperimentCommand = _CreateExperimentCommand;

// src/commands/CreateFeatureCommand.ts




var _CreateFeatureCommand = class _CreateFeatureCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Evidently", "CreateFeature", {}).n("EvidentlyClient", "CreateFeatureCommand").f(void 0, void 0).ser(se_CreateFeatureCommand).de(de_CreateFeatureCommand).build() {
};
__name(_CreateFeatureCommand, "CreateFeatureCommand");
var CreateFeatureCommand = _CreateFeatureCommand;

// src/commands/CreateLaunchCommand.ts




var _CreateLaunchCommand = class _CreateLaunchCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Evidently", "CreateLaunch", {}).n("EvidentlyClient", "CreateLaunchCommand").f(void 0, void 0).ser(se_CreateLaunchCommand).de(de_CreateLaunchCommand).build() {
};
__name(_CreateLaunchCommand, "CreateLaunchCommand");
var CreateLaunchCommand = _CreateLaunchCommand;

// src/commands/CreateProjectCommand.ts




var _CreateProjectCommand = class _CreateProjectCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Evidently", "CreateProject", {}).n("EvidentlyClient", "CreateProjectCommand").f(void 0, void 0).ser(se_CreateProjectCommand).de(de_CreateProjectCommand).build() {
};
__name(_CreateProjectCommand, "CreateProjectCommand");
var CreateProjectCommand = _CreateProjectCommand;

// src/commands/CreateSegmentCommand.ts




var _CreateSegmentCommand = class _CreateSegmentCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Evidently", "CreateSegment", {}).n("EvidentlyClient", "CreateSegmentCommand").f(void 0, void 0).ser(se_CreateSegmentCommand).de(de_CreateSegmentCommand).build() {
};
__name(_CreateSegmentCommand, "CreateSegmentCommand");
var CreateSegmentCommand = _CreateSegmentCommand;

// src/commands/DeleteExperimentCommand.ts




var _DeleteExperimentCommand = class _DeleteExperimentCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Evidently", "DeleteExperiment", {}).n("EvidentlyClient", "DeleteExperimentCommand").f(void 0, void 0).ser(se_DeleteExperimentCommand).de(de_DeleteExperimentCommand).build() {
};
__name(_DeleteExperimentCommand, "DeleteExperimentCommand");
var DeleteExperimentCommand = _DeleteExperimentCommand;

// src/commands/DeleteFeatureCommand.ts




var _DeleteFeatureCommand = class _DeleteFeatureCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Evidently", "DeleteFeature", {}).n("EvidentlyClient", "DeleteFeatureCommand").f(void 0, void 0).ser(se_DeleteFeatureCommand).de(de_DeleteFeatureCommand).build() {
};
__name(_DeleteFeatureCommand, "DeleteFeatureCommand");
var DeleteFeatureCommand = _DeleteFeatureCommand;

// src/commands/DeleteLaunchCommand.ts




var _DeleteLaunchCommand = class _DeleteLaunchCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Evidently", "DeleteLaunch", {}).n("EvidentlyClient", "DeleteLaunchCommand").f(void 0, void 0).ser(se_DeleteLaunchCommand).de(de_DeleteLaunchCommand).build() {
};
__name(_DeleteLaunchCommand, "DeleteLaunchCommand");
var DeleteLaunchCommand = _DeleteLaunchCommand;

// src/commands/DeleteProjectCommand.ts




var _DeleteProjectCommand = class _DeleteProjectCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Evidently", "DeleteProject", {}).n("EvidentlyClient", "DeleteProjectCommand").f(void 0, void 0).ser(se_DeleteProjectCommand).de(de_DeleteProjectCommand).build() {
};
__name(_DeleteProjectCommand, "DeleteProjectCommand");
var DeleteProjectCommand = _DeleteProjectCommand;

// src/commands/DeleteSegmentCommand.ts




var _DeleteSegmentCommand = class _DeleteSegmentCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Evidently", "DeleteSegment", {}).n("EvidentlyClient", "DeleteSegmentCommand").f(void 0, void 0).ser(se_DeleteSegmentCommand).de(de_DeleteSegmentCommand).build() {
};
__name(_DeleteSegmentCommand, "DeleteSegmentCommand");
var DeleteSegmentCommand = _DeleteSegmentCommand;

// src/commands/EvaluateFeatureCommand.ts




var _EvaluateFeatureCommand = class _EvaluateFeatureCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Evidently", "EvaluateFeature", {}).n("EvidentlyClient", "EvaluateFeatureCommand").f(void 0, void 0).ser(se_EvaluateFeatureCommand).de(de_EvaluateFeatureCommand).build() {
};
__name(_EvaluateFeatureCommand, "EvaluateFeatureCommand");
var EvaluateFeatureCommand = _EvaluateFeatureCommand;

// src/commands/GetExperimentCommand.ts




var _GetExperimentCommand = class _GetExperimentCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Evidently", "GetExperiment", {}).n("EvidentlyClient", "GetExperimentCommand").f(void 0, void 0).ser(se_GetExperimentCommand).de(de_GetExperimentCommand).build() {
};
__name(_GetExperimentCommand, "GetExperimentCommand");
var GetExperimentCommand = _GetExperimentCommand;

// src/commands/GetExperimentResultsCommand.ts




var _GetExperimentResultsCommand = class _GetExperimentResultsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Evidently", "GetExperimentResults", {}).n("EvidentlyClient", "GetExperimentResultsCommand").f(void 0, void 0).ser(se_GetExperimentResultsCommand).de(de_GetExperimentResultsCommand).build() {
};
__name(_GetExperimentResultsCommand, "GetExperimentResultsCommand");
var GetExperimentResultsCommand = _GetExperimentResultsCommand;

// src/commands/GetFeatureCommand.ts




var _GetFeatureCommand = class _GetFeatureCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Evidently", "GetFeature", {}).n("EvidentlyClient", "GetFeatureCommand").f(void 0, void 0).ser(se_GetFeatureCommand).de(de_GetFeatureCommand).build() {
};
__name(_GetFeatureCommand, "GetFeatureCommand");
var GetFeatureCommand = _GetFeatureCommand;

// src/commands/GetLaunchCommand.ts




var _GetLaunchCommand = class _GetLaunchCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Evidently", "GetLaunch", {}).n("EvidentlyClient", "GetLaunchCommand").f(void 0, void 0).ser(se_GetLaunchCommand).de(de_GetLaunchCommand).build() {
};
__name(_GetLaunchCommand, "GetLaunchCommand");
var GetLaunchCommand = _GetLaunchCommand;

// src/commands/GetProjectCommand.ts




var _GetProjectCommand = class _GetProjectCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Evidently", "GetProject", {}).n("EvidentlyClient", "GetProjectCommand").f(void 0, void 0).ser(se_GetProjectCommand).de(de_GetProjectCommand).build() {
};
__name(_GetProjectCommand, "GetProjectCommand");
var GetProjectCommand = _GetProjectCommand;

// src/commands/GetSegmentCommand.ts




var _GetSegmentCommand = class _GetSegmentCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Evidently", "GetSegment", {}).n("EvidentlyClient", "GetSegmentCommand").f(void 0, void 0).ser(se_GetSegmentCommand).de(de_GetSegmentCommand).build() {
};
__name(_GetSegmentCommand, "GetSegmentCommand");
var GetSegmentCommand = _GetSegmentCommand;

// src/commands/ListExperimentsCommand.ts




var _ListExperimentsCommand = class _ListExperimentsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Evidently", "ListExperiments", {}).n("EvidentlyClient", "ListExperimentsCommand").f(void 0, void 0).ser(se_ListExperimentsCommand).de(de_ListExperimentsCommand).build() {
};
__name(_ListExperimentsCommand, "ListExperimentsCommand");
var ListExperimentsCommand = _ListExperimentsCommand;

// src/commands/ListFeaturesCommand.ts




var _ListFeaturesCommand = class _ListFeaturesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Evidently", "ListFeatures", {}).n("EvidentlyClient", "ListFeaturesCommand").f(void 0, void 0).ser(se_ListFeaturesCommand).de(de_ListFeaturesCommand).build() {
};
__name(_ListFeaturesCommand, "ListFeaturesCommand");
var ListFeaturesCommand = _ListFeaturesCommand;

// src/commands/ListLaunchesCommand.ts




var _ListLaunchesCommand = class _ListLaunchesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Evidently", "ListLaunches", {}).n("EvidentlyClient", "ListLaunchesCommand").f(void 0, void 0).ser(se_ListLaunchesCommand).de(de_ListLaunchesCommand).build() {
};
__name(_ListLaunchesCommand, "ListLaunchesCommand");
var ListLaunchesCommand = _ListLaunchesCommand;

// src/commands/ListProjectsCommand.ts




var _ListProjectsCommand = class _ListProjectsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Evidently", "ListProjects", {}).n("EvidentlyClient", "ListProjectsCommand").f(void 0, void 0).ser(se_ListProjectsCommand).de(de_ListProjectsCommand).build() {
};
__name(_ListProjectsCommand, "ListProjectsCommand");
var ListProjectsCommand = _ListProjectsCommand;

// src/commands/ListSegmentReferencesCommand.ts




var _ListSegmentReferencesCommand = class _ListSegmentReferencesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Evidently", "ListSegmentReferences", {}).n("EvidentlyClient", "ListSegmentReferencesCommand").f(void 0, void 0).ser(se_ListSegmentReferencesCommand).de(de_ListSegmentReferencesCommand).build() {
};
__name(_ListSegmentReferencesCommand, "ListSegmentReferencesCommand");
var ListSegmentReferencesCommand = _ListSegmentReferencesCommand;

// src/commands/ListSegmentsCommand.ts




var _ListSegmentsCommand = class _ListSegmentsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Evidently", "ListSegments", {}).n("EvidentlyClient", "ListSegmentsCommand").f(void 0, void 0).ser(se_ListSegmentsCommand).de(de_ListSegmentsCommand).build() {
};
__name(_ListSegmentsCommand, "ListSegmentsCommand");
var ListSegmentsCommand = _ListSegmentsCommand;

// src/commands/ListTagsForResourceCommand.ts




var _ListTagsForResourceCommand = class _ListTagsForResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Evidently", "ListTagsForResource", {}).n("EvidentlyClient", "ListTagsForResourceCommand").f(void 0, void 0).ser(se_ListTagsForResourceCommand).de(de_ListTagsForResourceCommand).build() {
};
__name(_ListTagsForResourceCommand, "ListTagsForResourceCommand");
var ListTagsForResourceCommand = _ListTagsForResourceCommand;

// src/commands/PutProjectEventsCommand.ts




var _PutProjectEventsCommand = class _PutProjectEventsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Evidently", "PutProjectEvents", {}).n("EvidentlyClient", "PutProjectEventsCommand").f(void 0, void 0).ser(se_PutProjectEventsCommand).de(de_PutProjectEventsCommand).build() {
};
__name(_PutProjectEventsCommand, "PutProjectEventsCommand");
var PutProjectEventsCommand = _PutProjectEventsCommand;

// src/commands/StartExperimentCommand.ts




var _StartExperimentCommand = class _StartExperimentCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Evidently", "StartExperiment", {}).n("EvidentlyClient", "StartExperimentCommand").f(void 0, void 0).ser(se_StartExperimentCommand).de(de_StartExperimentCommand).build() {
};
__name(_StartExperimentCommand, "StartExperimentCommand");
var StartExperimentCommand = _StartExperimentCommand;

// src/commands/StartLaunchCommand.ts




var _StartLaunchCommand = class _StartLaunchCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Evidently", "StartLaunch", {}).n("EvidentlyClient", "StartLaunchCommand").f(void 0, void 0).ser(se_StartLaunchCommand).de(de_StartLaunchCommand).build() {
};
__name(_StartLaunchCommand, "StartLaunchCommand");
var StartLaunchCommand = _StartLaunchCommand;

// src/commands/StopExperimentCommand.ts




var _StopExperimentCommand = class _StopExperimentCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Evidently", "StopExperiment", {}).n("EvidentlyClient", "StopExperimentCommand").f(void 0, void 0).ser(se_StopExperimentCommand).de(de_StopExperimentCommand).build() {
};
__name(_StopExperimentCommand, "StopExperimentCommand");
var StopExperimentCommand = _StopExperimentCommand;

// src/commands/StopLaunchCommand.ts




var _StopLaunchCommand = class _StopLaunchCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Evidently", "StopLaunch", {}).n("EvidentlyClient", "StopLaunchCommand").f(void 0, void 0).ser(se_StopLaunchCommand).de(de_StopLaunchCommand).build() {
};
__name(_StopLaunchCommand, "StopLaunchCommand");
var StopLaunchCommand = _StopLaunchCommand;

// src/commands/TagResourceCommand.ts




var _TagResourceCommand = class _TagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Evidently", "TagResource", {}).n("EvidentlyClient", "TagResourceCommand").f(void 0, void 0).ser(se_TagResourceCommand).de(de_TagResourceCommand).build() {
};
__name(_TagResourceCommand, "TagResourceCommand");
var TagResourceCommand = _TagResourceCommand;

// src/commands/TestSegmentPatternCommand.ts




var _TestSegmentPatternCommand = class _TestSegmentPatternCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Evidently", "TestSegmentPattern", {}).n("EvidentlyClient", "TestSegmentPatternCommand").f(void 0, void 0).ser(se_TestSegmentPatternCommand).de(de_TestSegmentPatternCommand).build() {
};
__name(_TestSegmentPatternCommand, "TestSegmentPatternCommand");
var TestSegmentPatternCommand = _TestSegmentPatternCommand;

// src/commands/UntagResourceCommand.ts




var _UntagResourceCommand = class _UntagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Evidently", "UntagResource", {}).n("EvidentlyClient", "UntagResourceCommand").f(void 0, void 0).ser(se_UntagResourceCommand).de(de_UntagResourceCommand).build() {
};
__name(_UntagResourceCommand, "UntagResourceCommand");
var UntagResourceCommand = _UntagResourceCommand;

// src/commands/UpdateExperimentCommand.ts




var _UpdateExperimentCommand = class _UpdateExperimentCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Evidently", "UpdateExperiment", {}).n("EvidentlyClient", "UpdateExperimentCommand").f(void 0, void 0).ser(se_UpdateExperimentCommand).de(de_UpdateExperimentCommand).build() {
};
__name(_UpdateExperimentCommand, "UpdateExperimentCommand");
var UpdateExperimentCommand = _UpdateExperimentCommand;

// src/commands/UpdateFeatureCommand.ts




var _UpdateFeatureCommand = class _UpdateFeatureCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Evidently", "UpdateFeature", {}).n("EvidentlyClient", "UpdateFeatureCommand").f(void 0, void 0).ser(se_UpdateFeatureCommand).de(de_UpdateFeatureCommand).build() {
};
__name(_UpdateFeatureCommand, "UpdateFeatureCommand");
var UpdateFeatureCommand = _UpdateFeatureCommand;

// src/commands/UpdateLaunchCommand.ts




var _UpdateLaunchCommand = class _UpdateLaunchCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Evidently", "UpdateLaunch", {}).n("EvidentlyClient", "UpdateLaunchCommand").f(void 0, void 0).ser(se_UpdateLaunchCommand).de(de_UpdateLaunchCommand).build() {
};
__name(_UpdateLaunchCommand, "UpdateLaunchCommand");
var UpdateLaunchCommand = _UpdateLaunchCommand;

// src/commands/UpdateProjectCommand.ts




var _UpdateProjectCommand = class _UpdateProjectCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Evidently", "UpdateProject", {}).n("EvidentlyClient", "UpdateProjectCommand").f(void 0, void 0).ser(se_UpdateProjectCommand).de(de_UpdateProjectCommand).build() {
};
__name(_UpdateProjectCommand, "UpdateProjectCommand");
var UpdateProjectCommand = _UpdateProjectCommand;

// src/commands/UpdateProjectDataDeliveryCommand.ts




var _UpdateProjectDataDeliveryCommand = class _UpdateProjectDataDeliveryCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("Evidently", "UpdateProjectDataDelivery", {}).n("EvidentlyClient", "UpdateProjectDataDeliveryCommand").f(void 0, void 0).ser(se_UpdateProjectDataDeliveryCommand).de(de_UpdateProjectDataDeliveryCommand).build() {
};
__name(_UpdateProjectDataDeliveryCommand, "UpdateProjectDataDeliveryCommand");
var UpdateProjectDataDeliveryCommand = _UpdateProjectDataDeliveryCommand;

// src/Evidently.ts
var commands = {
  BatchEvaluateFeatureCommand,
  CreateExperimentCommand,
  CreateFeatureCommand,
  CreateLaunchCommand,
  CreateProjectCommand,
  CreateSegmentCommand,
  DeleteExperimentCommand,
  DeleteFeatureCommand,
  DeleteLaunchCommand,
  DeleteProjectCommand,
  DeleteSegmentCommand,
  EvaluateFeatureCommand,
  GetExperimentCommand,
  GetExperimentResultsCommand,
  GetFeatureCommand,
  GetLaunchCommand,
  GetProjectCommand,
  GetSegmentCommand,
  ListExperimentsCommand,
  ListFeaturesCommand,
  ListLaunchesCommand,
  ListProjectsCommand,
  ListSegmentReferencesCommand,
  ListSegmentsCommand,
  ListTagsForResourceCommand,
  PutProjectEventsCommand,
  StartExperimentCommand,
  StartLaunchCommand,
  StopExperimentCommand,
  StopLaunchCommand,
  TagResourceCommand,
  TestSegmentPatternCommand,
  UntagResourceCommand,
  UpdateExperimentCommand,
  UpdateFeatureCommand,
  UpdateLaunchCommand,
  UpdateProjectCommand,
  UpdateProjectDataDeliveryCommand
};
var _Evidently = class _Evidently extends EvidentlyClient {
};
__name(_Evidently, "Evidently");
var Evidently = _Evidently;
(0, import_smithy_client.createAggregatedClient)(commands, Evidently);

// src/pagination/ListExperimentsPaginator.ts

var paginateListExperiments = (0, import_core.createPaginator)(EvidentlyClient, ListExperimentsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListFeaturesPaginator.ts

var paginateListFeatures = (0, import_core.createPaginator)(EvidentlyClient, ListFeaturesCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListLaunchesPaginator.ts

var paginateListLaunches = (0, import_core.createPaginator)(EvidentlyClient, ListLaunchesCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListProjectsPaginator.ts

var paginateListProjects = (0, import_core.createPaginator)(EvidentlyClient, ListProjectsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListSegmentReferencesPaginator.ts

var paginateListSegmentReferences = (0, import_core.createPaginator)(EvidentlyClient, ListSegmentReferencesCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListSegmentsPaginator.ts

var paginateListSegments = (0, import_core.createPaginator)(EvidentlyClient, ListSegmentsCommand, "nextToken", "nextToken", "maxResults");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  EvidentlyServiceException,
  __Client,
  EvidentlyClient,
  Evidently,
  $Command,
  BatchEvaluateFeatureCommand,
  CreateExperimentCommand,
  CreateFeatureCommand,
  CreateLaunchCommand,
  CreateProjectCommand,
  CreateSegmentCommand,
  DeleteExperimentCommand,
  DeleteFeatureCommand,
  DeleteLaunchCommand,
  DeleteProjectCommand,
  DeleteSegmentCommand,
  EvaluateFeatureCommand,
  GetExperimentCommand,
  GetExperimentResultsCommand,
  GetFeatureCommand,
  GetLaunchCommand,
  GetProjectCommand,
  GetSegmentCommand,
  ListExperimentsCommand,
  ListFeaturesCommand,
  ListLaunchesCommand,
  ListProjectsCommand,
  ListSegmentReferencesCommand,
  ListSegmentsCommand,
  ListTagsForResourceCommand,
  PutProjectEventsCommand,
  StartExperimentCommand,
  StartLaunchCommand,
  StopExperimentCommand,
  StopLaunchCommand,
  TagResourceCommand,
  TestSegmentPatternCommand,
  UntagResourceCommand,
  UpdateExperimentCommand,
  UpdateFeatureCommand,
  UpdateLaunchCommand,
  UpdateProjectCommand,
  UpdateProjectDataDeliveryCommand,
  paginateListExperiments,
  paginateListFeatures,
  paginateListLaunches,
  paginateListProjects,
  paginateListSegmentReferences,
  paginateListSegments,
  AccessDeniedException,
  VariableValue,
  ResourceNotFoundException,
  ThrottlingException,
  ValidationExceptionReason,
  ValidationException,
  ChangeDirectionEnum,
  ConflictException,
  ExperimentStatus,
  ExperimentType,
  ServiceQuotaExceededException,
  FeatureEvaluationStrategy,
  FeatureStatus,
  VariationValueType,
  LaunchStatus,
  LaunchType,
  ProjectStatus,
  InternalServerException,
  ServiceUnavailableException,
  EventType,
  ExperimentBaseStat,
  ExperimentReportName,
  ExperimentResultRequestType,
  ExperimentResultResponseType,
  ExperimentStopDesiredState,
  LaunchStopDesiredState,
  SegmentReferenceResourceType
});

