import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { ApplicationAutoScalingServiceException as __BaseException } from "./ApplicationAutoScalingServiceException";
export declare const AdjustmentType: {
  readonly ChangeInCapacity: "ChangeInCapacity";
  readonly ExactCapacity: "ExactCapacity";
  readonly PercentChangeInCapacity: "PercentChangeInCapacity";
};
export type AdjustmentType =
  (typeof AdjustmentType)[keyof typeof AdjustmentType];
export interface Alarm {
  AlarmName: string | undefined;
  AlarmARN: string | undefined;
}
export declare class ConcurrentUpdateException extends __BaseException {
  readonly name: "ConcurrentUpdateException";
  readonly $fault: "server";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ConcurrentUpdateException, __BaseException>
  );
}
export declare const ScalableDimension: {
  readonly AppstreamFleetDesiredCapacity: "appstream:fleet:DesiredCapacity";
  readonly CassandraTableReadCapacityUnits: "cassandra:table:ReadCapacityUnits";
  readonly CassandraTableWriteCapacityUnits: "cassandra:table:WriteCapacityUnits";
  readonly ComprehendDocClassifierEndpointInferenceUnits: "comprehend:document-classifier-endpoint:DesiredInferenceUnits";
  readonly ComprehendEntityRecognizerEndpointInferenceUnits: "comprehend:entity-recognizer-endpoint:DesiredInferenceUnits";
  readonly CustomResourceScalableDimension: "custom-resource:ResourceType:Property";
  readonly DynamoDBIndexReadCapacityUnits: "dynamodb:index:ReadCapacityUnits";
  readonly DynamoDBIndexWriteCapacityUnits: "dynamodb:index:WriteCapacityUnits";
  readonly DynamoDBTableReadCapacityUnits: "dynamodb:table:ReadCapacityUnits";
  readonly DynamoDBTableWriteCapacityUnits: "dynamodb:table:WriteCapacityUnits";
  readonly EC2SpotFleetRequestTargetCapacity: "ec2:spot-fleet-request:TargetCapacity";
  readonly ECSServiceDesiredCount: "ecs:service:DesiredCount";
  readonly EMRInstanceGroupInstanceCount: "elasticmapreduce:instancegroup:InstanceCount";
  readonly ElastiCacheReplicationGroupNodeGroups: "elasticache:replication-group:NodeGroups";
  readonly ElastiCacheReplicationGroupReplicas: "elasticache:replication-group:Replicas";
  readonly KafkaBrokerStorageVolumeSize: "kafka:broker-storage:VolumeSize";
  readonly LambdaFunctionProvisionedConcurrency: "lambda:function:ProvisionedConcurrency";
  readonly NeptuneClusterReadReplicaCount: "neptune:cluster:ReadReplicaCount";
  readonly RDSClusterReadReplicaCount: "rds:cluster:ReadReplicaCount";
  readonly SageMakerInferenceComponentDesiredCopyCount: "sagemaker:inference-component:DesiredCopyCount";
  readonly SageMakerVariantDesiredInstanceCount: "sagemaker:variant:DesiredInstanceCount";
  readonly SageMakerVariantDesiredProvisionedConcurrency: "sagemaker:variant:DesiredProvisionedConcurrency";
};
export type ScalableDimension =
  (typeof ScalableDimension)[keyof typeof ScalableDimension];
export declare const ServiceNamespace: {
  readonly APPSTREAM: "appstream";
  readonly CASSANDRA: "cassandra";
  readonly COMPREHEND: "comprehend";
  readonly CUSTOM_RESOURCE: "custom-resource";
  readonly DYNAMODB: "dynamodb";
  readonly EC2: "ec2";
  readonly ECS: "ecs";
  readonly ELASTICACHE: "elasticache";
  readonly EMR: "elasticmapreduce";
  readonly KAFKA: "kafka";
  readonly LAMBDA: "lambda";
  readonly NEPTUNE: "neptune";
  readonly RDS: "rds";
  readonly SAGEMAKER: "sagemaker";
};
export type ServiceNamespace =
  (typeof ServiceNamespace)[keyof typeof ServiceNamespace];
export interface DeleteScalingPolicyRequest {
  PolicyName: string | undefined;
  ServiceNamespace: ServiceNamespace | undefined;
  ResourceId: string | undefined;
  ScalableDimension: ScalableDimension | undefined;
}
export interface DeleteScalingPolicyResponse {}
export declare class InternalServiceException extends __BaseException {
  readonly name: "InternalServiceException";
  readonly $fault: "server";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<InternalServiceException, __BaseException>
  );
}
export declare class ObjectNotFoundException extends __BaseException {
  readonly name: "ObjectNotFoundException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ObjectNotFoundException, __BaseException>
  );
}
export declare class ValidationException extends __BaseException {
  readonly name: "ValidationException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ValidationException, __BaseException>
  );
}
export interface DeleteScheduledActionRequest {
  ServiceNamespace: ServiceNamespace | undefined;
  ScheduledActionName: string | undefined;
  ResourceId: string | undefined;
  ScalableDimension: ScalableDimension | undefined;
}
export interface DeleteScheduledActionResponse {}
export interface DeregisterScalableTargetRequest {
  ServiceNamespace: ServiceNamespace | undefined;
  ResourceId: string | undefined;
  ScalableDimension: ScalableDimension | undefined;
}
export interface DeregisterScalableTargetResponse {}
export interface DescribeScalableTargetsRequest {
  ServiceNamespace: ServiceNamespace | undefined;
  ResourceIds?: string[];
  ScalableDimension?: ScalableDimension;
  MaxResults?: number;
  NextToken?: string;
}
export interface SuspendedState {
  DynamicScalingInSuspended?: boolean;
  DynamicScalingOutSuspended?: boolean;
  ScheduledScalingSuspended?: boolean;
}
export interface ScalableTarget {
  ServiceNamespace: ServiceNamespace | undefined;
  ResourceId: string | undefined;
  ScalableDimension: ScalableDimension | undefined;
  MinCapacity: number | undefined;
  MaxCapacity: number | undefined;
  RoleARN: string | undefined;
  CreationTime: Date | undefined;
  SuspendedState?: SuspendedState;
  ScalableTargetARN?: string;
}
export interface DescribeScalableTargetsResponse {
  ScalableTargets?: ScalableTarget[];
  NextToken?: string;
}
export declare class InvalidNextTokenException extends __BaseException {
  readonly name: "InvalidNextTokenException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<InvalidNextTokenException, __BaseException>
  );
}
export interface DescribeScalingActivitiesRequest {
  ServiceNamespace: ServiceNamespace | undefined;
  ResourceId?: string;
  ScalableDimension?: ScalableDimension;
  MaxResults?: number;
  NextToken?: string;
  IncludeNotScaledActivities?: boolean;
}
export interface NotScaledReason {
  Code: string | undefined;
  MaxCapacity?: number;
  MinCapacity?: number;
  CurrentCapacity?: number;
}
export declare const ScalingActivityStatusCode: {
  readonly Failed: "Failed";
  readonly InProgress: "InProgress";
  readonly Overridden: "Overridden";
  readonly Pending: "Pending";
  readonly Successful: "Successful";
  readonly Unfulfilled: "Unfulfilled";
};
export type ScalingActivityStatusCode =
  (typeof ScalingActivityStatusCode)[keyof typeof ScalingActivityStatusCode];
export interface ScalingActivity {
  ActivityId: string | undefined;
  ServiceNamespace: ServiceNamespace | undefined;
  ResourceId: string | undefined;
  ScalableDimension: ScalableDimension | undefined;
  Description: string | undefined;
  Cause: string | undefined;
  StartTime: Date | undefined;
  EndTime?: Date;
  StatusCode: ScalingActivityStatusCode | undefined;
  StatusMessage?: string;
  Details?: string;
  NotScaledReasons?: NotScaledReason[];
}
export interface DescribeScalingActivitiesResponse {
  ScalingActivities?: ScalingActivity[];
  NextToken?: string;
}
export interface DescribeScalingPoliciesRequest {
  PolicyNames?: string[];
  ServiceNamespace: ServiceNamespace | undefined;
  ResourceId?: string;
  ScalableDimension?: ScalableDimension;
  MaxResults?: number;
  NextToken?: string;
}
export declare const PolicyType: {
  readonly StepScaling: "StepScaling";
  readonly TargetTrackingScaling: "TargetTrackingScaling";
};
export type PolicyType = (typeof PolicyType)[keyof typeof PolicyType];
export declare const MetricAggregationType: {
  readonly Average: "Average";
  readonly Maximum: "Maximum";
  readonly Minimum: "Minimum";
};
export type MetricAggregationType =
  (typeof MetricAggregationType)[keyof typeof MetricAggregationType];
export interface StepAdjustment {
  MetricIntervalLowerBound?: number;
  MetricIntervalUpperBound?: number;
  ScalingAdjustment: number | undefined;
}
export interface StepScalingPolicyConfiguration {
  AdjustmentType?: AdjustmentType;
  StepAdjustments?: StepAdjustment[];
  MinAdjustmentMagnitude?: number;
  Cooldown?: number;
  MetricAggregationType?: MetricAggregationType;
}
export interface MetricDimension {
  Name: string | undefined;
  Value: string | undefined;
}
export interface TargetTrackingMetricDimension {
  Name: string | undefined;
  Value: string | undefined;
}
export interface TargetTrackingMetric {
  Dimensions?: TargetTrackingMetricDimension[];
  MetricName?: string;
  Namespace?: string;
}
export interface TargetTrackingMetricStat {
  Metric: TargetTrackingMetric | undefined;
  Stat: string | undefined;
  Unit?: string;
}
export interface TargetTrackingMetricDataQuery {
  Expression?: string;
  Id: string | undefined;
  Label?: string;
  MetricStat?: TargetTrackingMetricStat;
  ReturnData?: boolean;
}
export declare const MetricStatistic: {
  readonly Average: "Average";
  readonly Maximum: "Maximum";
  readonly Minimum: "Minimum";
  readonly SampleCount: "SampleCount";
  readonly Sum: "Sum";
};
export type MetricStatistic =
  (typeof MetricStatistic)[keyof typeof MetricStatistic];
export interface CustomizedMetricSpecification {
  MetricName?: string;
  Namespace?: string;
  Dimensions?: MetricDimension[];
  Statistic?: MetricStatistic;
  Unit?: string;
  Metrics?: TargetTrackingMetricDataQuery[];
}
export declare const MetricType: {
  readonly ALBRequestCountPerTarget: "ALBRequestCountPerTarget";
  readonly AppStreamAverageCapacityUtilization: "AppStreamAverageCapacityUtilization";
  readonly CassandraReadCapacityUtilization: "CassandraReadCapacityUtilization";
  readonly CassandraWriteCapacityUtilization: "CassandraWriteCapacityUtilization";
  readonly ComprehendInferenceUtilization: "ComprehendInferenceUtilization";
  readonly DynamoDBReadCapacityUtilization: "DynamoDBReadCapacityUtilization";
  readonly DynamoDBWriteCapacityUtilization: "DynamoDBWriteCapacityUtilization";
  readonly EC2SpotFleetRequestAverageCPUUtilization: "EC2SpotFleetRequestAverageCPUUtilization";
  readonly EC2SpotFleetRequestAverageNetworkIn: "EC2SpotFleetRequestAverageNetworkIn";
  readonly EC2SpotFleetRequestAverageNetworkOut: "EC2SpotFleetRequestAverageNetworkOut";
  readonly ECSServiceAverageCPUUtilization: "ECSServiceAverageCPUUtilization";
  readonly ECSServiceAverageMemoryUtilization: "ECSServiceAverageMemoryUtilization";
  readonly ElastiCacheDatabaseCapacityUsageCountedForEvictPercentage: "ElastiCacheDatabaseCapacityUsageCountedForEvictPercentage";
  readonly ElastiCacheDatabaseMemoryUsageCountedForEvictPercentage: "ElastiCacheDatabaseMemoryUsageCountedForEvictPercentage";
  readonly ElastiCachePrimaryEngineCPUUtilization: "ElastiCachePrimaryEngineCPUUtilization";
  readonly ElastiCacheReplicaEngineCPUUtilization: "ElastiCacheReplicaEngineCPUUtilization";
  readonly KafkaBrokerStorageUtilization: "KafkaBrokerStorageUtilization";
  readonly LambdaProvisionedConcurrencyUtilization: "LambdaProvisionedConcurrencyUtilization";
  readonly NeptuneReaderAverageCPUUtilization: "NeptuneReaderAverageCPUUtilization";
  readonly RDSReaderAverageCPUUtilization: "RDSReaderAverageCPUUtilization";
  readonly RDSReaderAverageDatabaseConnections: "RDSReaderAverageDatabaseConnections";
  readonly SageMakerInferenceComponentInvocationsPerCopy: "SageMakerInferenceComponentInvocationsPerCopy";
  readonly SageMakerVariantInvocationsPerInstance: "SageMakerVariantInvocationsPerInstance";
  readonly SageMakerVariantProvisionedConcurrencyUtilization: "SageMakerVariantProvisionedConcurrencyUtilization";
};
export type MetricType = (typeof MetricType)[keyof typeof MetricType];
export interface PredefinedMetricSpecification {
  PredefinedMetricType: MetricType | undefined;
  ResourceLabel?: string;
}
export interface TargetTrackingScalingPolicyConfiguration {
  TargetValue: number | undefined;
  PredefinedMetricSpecification?: PredefinedMetricSpecification;
  CustomizedMetricSpecification?: CustomizedMetricSpecification;
  ScaleOutCooldown?: number;
  ScaleInCooldown?: number;
  DisableScaleIn?: boolean;
}
export interface ScalingPolicy {
  PolicyARN: string | undefined;
  PolicyName: string | undefined;
  ServiceNamespace: ServiceNamespace | undefined;
  ResourceId: string | undefined;
  ScalableDimension: ScalableDimension | undefined;
  PolicyType: PolicyType | undefined;
  StepScalingPolicyConfiguration?: StepScalingPolicyConfiguration;
  TargetTrackingScalingPolicyConfiguration?: TargetTrackingScalingPolicyConfiguration;
  Alarms?: Alarm[];
  CreationTime: Date | undefined;
}
export interface DescribeScalingPoliciesResponse {
  ScalingPolicies?: ScalingPolicy[];
  NextToken?: string;
}
export declare class FailedResourceAccessException extends __BaseException {
  readonly name: "FailedResourceAccessException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<FailedResourceAccessException, __BaseException>
  );
}
export interface DescribeScheduledActionsRequest {
  ScheduledActionNames?: string[];
  ServiceNamespace: ServiceNamespace | undefined;
  ResourceId?: string;
  ScalableDimension?: ScalableDimension;
  MaxResults?: number;
  NextToken?: string;
}
export interface ScalableTargetAction {
  MinCapacity?: number;
  MaxCapacity?: number;
}
export interface ScheduledAction {
  ScheduledActionName: string | undefined;
  ScheduledActionARN: string | undefined;
  ServiceNamespace: ServiceNamespace | undefined;
  Schedule: string | undefined;
  Timezone?: string;
  ResourceId: string | undefined;
  ScalableDimension?: ScalableDimension;
  StartTime?: Date;
  EndTime?: Date;
  ScalableTargetAction?: ScalableTargetAction;
  CreationTime: Date | undefined;
}
export interface DescribeScheduledActionsResponse {
  ScheduledActions?: ScheduledAction[];
  NextToken?: string;
}
export interface ListTagsForResourceRequest {
  ResourceARN: string | undefined;
}
export interface ListTagsForResourceResponse {
  Tags?: Record<string, string>;
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  Message?: string;
  ResourceName?: string;
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export declare class LimitExceededException extends __BaseException {
  readonly name: "LimitExceededException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<LimitExceededException, __BaseException>
  );
}
export interface PutScalingPolicyRequest {
  PolicyName: string | undefined;
  ServiceNamespace: ServiceNamespace | undefined;
  ResourceId: string | undefined;
  ScalableDimension: ScalableDimension | undefined;
  PolicyType?: PolicyType;
  StepScalingPolicyConfiguration?: StepScalingPolicyConfiguration;
  TargetTrackingScalingPolicyConfiguration?: TargetTrackingScalingPolicyConfiguration;
}
export interface PutScalingPolicyResponse {
  PolicyARN: string | undefined;
  Alarms?: Alarm[];
}
export interface PutScheduledActionRequest {
  ServiceNamespace: ServiceNamespace | undefined;
  Schedule?: string;
  Timezone?: string;
  ScheduledActionName: string | undefined;
  ResourceId: string | undefined;
  ScalableDimension: ScalableDimension | undefined;
  StartTime?: Date;
  EndTime?: Date;
  ScalableTargetAction?: ScalableTargetAction;
}
export interface PutScheduledActionResponse {}
export interface RegisterScalableTargetRequest {
  ServiceNamespace: ServiceNamespace | undefined;
  ResourceId: string | undefined;
  ScalableDimension: ScalableDimension | undefined;
  MinCapacity?: number;
  MaxCapacity?: number;
  RoleARN?: string;
  SuspendedState?: SuspendedState;
  Tags?: Record<string, string>;
}
export interface RegisterScalableTargetResponse {
  ScalableTargetARN?: string;
}
export interface TagResourceRequest {
  ResourceARN: string | undefined;
  Tags: Record<string, string> | undefined;
}
export interface TagResourceResponse {}
export declare class TooManyTagsException extends __BaseException {
  readonly name: "TooManyTagsException";
  readonly $fault: "client";
  Message?: string;
  ResourceName?: string;
  constructor(
    opts: __ExceptionOptionType<TooManyTagsException, __BaseException>
  );
}
export interface UntagResourceRequest {
  ResourceARN: string | undefined;
  TagKeys: string[] | undefined;
}
export interface UntagResourceResponse {}
