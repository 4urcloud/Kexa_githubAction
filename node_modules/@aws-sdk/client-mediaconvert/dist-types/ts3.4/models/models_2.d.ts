import {
  AccelerationSettings,
  BillingTagsSource,
  Endpoint,
  HopDestination,
} from "./models_0";
import {
  Commitment,
  Job,
  JobSettings,
  JobStatus,
  JobTemplate,
  JobTemplateSettings,
  Preset,
  PresetSettings,
  PricingPlan,
  Queue,
  QueueStatus,
  RenewalType,
  SimulateReservedQueue,
  StatusUpdateInterval,
} from "./models_1";
export interface CancelJobRequest {
  Id: string | undefined;
}
export interface CancelJobResponse {}
export interface CreateJobRequest {
  AccelerationSettings?: AccelerationSettings;
  BillingTagsSource?: BillingTagsSource;
  ClientRequestToken?: string;
  HopDestinations?: HopDestination[];
  JobTemplate?: string;
  Priority?: number;
  Queue?: string;
  Role: string | undefined;
  Settings: JobSettings | undefined;
  SimulateReservedQueue?: SimulateReservedQueue;
  StatusUpdateInterval?: StatusUpdateInterval;
  Tags?: Record<string, string>;
  UserMetadata?: Record<string, string>;
}
export interface CreateJobResponse {
  Job?: Job;
}
export interface CreateJobTemplateRequest {
  AccelerationSettings?: AccelerationSettings;
  Category?: string;
  Description?: string;
  HopDestinations?: HopDestination[];
  Name: string | undefined;
  Priority?: number;
  Queue?: string;
  Settings: JobTemplateSettings | undefined;
  StatusUpdateInterval?: StatusUpdateInterval;
  Tags?: Record<string, string>;
}
export interface CreateJobTemplateResponse {
  JobTemplate?: JobTemplate;
}
export interface CreatePresetRequest {
  Category?: string;
  Description?: string;
  Name: string | undefined;
  Settings: PresetSettings | undefined;
  Tags?: Record<string, string>;
}
export interface CreatePresetResponse {
  Preset?: Preset;
}
export interface ReservationPlanSettings {
  Commitment: Commitment | undefined;
  RenewalType: RenewalType | undefined;
  ReservedSlots: number | undefined;
}
export interface CreateQueueRequest {
  Description?: string;
  Name: string | undefined;
  PricingPlan?: PricingPlan;
  ReservationPlanSettings?: ReservationPlanSettings;
  Status?: QueueStatus;
  Tags?: Record<string, string>;
}
export interface CreateQueueResponse {
  Queue?: Queue;
}
export interface DeleteJobTemplateRequest {
  Name: string | undefined;
}
export interface DeleteJobTemplateResponse {}
export interface DeletePolicyRequest {}
export interface DeletePolicyResponse {}
export interface DeletePresetRequest {
  Name: string | undefined;
}
export interface DeletePresetResponse {}
export interface DeleteQueueRequest {
  Name: string | undefined;
}
export interface DeleteQueueResponse {}
export declare const DescribeEndpointsMode: {
  readonly DEFAULT: "DEFAULT";
  readonly GET_ONLY: "GET_ONLY";
};
export type DescribeEndpointsMode =
  (typeof DescribeEndpointsMode)[keyof typeof DescribeEndpointsMode];
export interface DescribeEndpointsRequest {
  MaxResults?: number;
  Mode?: DescribeEndpointsMode;
  NextToken?: string;
}
export interface DescribeEndpointsResponse {
  Endpoints?: Endpoint[];
  NextToken?: string;
}
export interface DisassociateCertificateRequest {
  Arn: string | undefined;
}
export interface DisassociateCertificateResponse {}
export interface GetJobRequest {
  Id: string | undefined;
}
export interface GetJobResponse {
  Job?: Job;
}
export interface GetJobTemplateRequest {
  Name: string | undefined;
}
export interface GetJobTemplateResponse {
  JobTemplate?: JobTemplate;
}
export interface GetPolicyRequest {}
export declare const InputPolicy: {
  readonly ALLOWED: "ALLOWED";
  readonly DISALLOWED: "DISALLOWED";
};
export type InputPolicy = (typeof InputPolicy)[keyof typeof InputPolicy];
export interface Policy {
  HttpInputs?: InputPolicy;
  HttpsInputs?: InputPolicy;
  S3Inputs?: InputPolicy;
}
export interface GetPolicyResponse {
  Policy?: Policy;
}
export interface GetPresetRequest {
  Name: string | undefined;
}
export interface GetPresetResponse {
  Preset?: Preset;
}
export interface GetQueueRequest {
  Name: string | undefined;
}
export interface GetQueueResponse {
  Queue?: Queue;
}
export declare const JobTemplateListBy: {
  readonly CREATION_DATE: "CREATION_DATE";
  readonly NAME: "NAME";
  readonly SYSTEM: "SYSTEM";
};
export type JobTemplateListBy =
  (typeof JobTemplateListBy)[keyof typeof JobTemplateListBy];
export declare const Order: {
  readonly ASCENDING: "ASCENDING";
  readonly DESCENDING: "DESCENDING";
};
export type Order = (typeof Order)[keyof typeof Order];
export interface ListJobsRequest {
  MaxResults?: number;
  NextToken?: string;
  Order?: Order;
  Queue?: string;
  Status?: JobStatus;
}
export interface ListJobsResponse {
  Jobs?: Job[];
  NextToken?: string;
}
export interface ListJobTemplatesRequest {
  Category?: string;
  ListBy?: JobTemplateListBy;
  MaxResults?: number;
  NextToken?: string;
  Order?: Order;
}
export interface ListJobTemplatesResponse {
  JobTemplates?: JobTemplate[];
  NextToken?: string;
}
export declare const PresetListBy: {
  readonly CREATION_DATE: "CREATION_DATE";
  readonly NAME: "NAME";
  readonly SYSTEM: "SYSTEM";
};
export type PresetListBy = (typeof PresetListBy)[keyof typeof PresetListBy];
export interface ListPresetsRequest {
  Category?: string;
  ListBy?: PresetListBy;
  MaxResults?: number;
  NextToken?: string;
  Order?: Order;
}
export interface ListPresetsResponse {
  NextToken?: string;
  Presets?: Preset[];
}
export declare const QueueListBy: {
  readonly CREATION_DATE: "CREATION_DATE";
  readonly NAME: "NAME";
};
export type QueueListBy = (typeof QueueListBy)[keyof typeof QueueListBy];
export interface ListQueuesRequest {
  ListBy?: QueueListBy;
  MaxResults?: number;
  NextToken?: string;
  Order?: Order;
}
export interface ListQueuesResponse {
  NextToken?: string;
  Queues?: Queue[];
}
export interface ListTagsForResourceRequest {
  Arn: string | undefined;
}
export interface ResourceTags {
  Arn?: string;
  Tags?: Record<string, string>;
}
export interface ListTagsForResourceResponse {
  ResourceTags?: ResourceTags;
}
export interface PutPolicyRequest {
  Policy: Policy | undefined;
}
export interface PutPolicyResponse {
  Policy?: Policy;
}
export interface TagResourceRequest {
  Arn: string | undefined;
  Tags: Record<string, string> | undefined;
}
export interface TagResourceResponse {}
export interface UntagResourceRequest {
  Arn: string | undefined;
  TagKeys?: string[];
}
export interface UntagResourceResponse {}
export interface UpdateJobTemplateRequest {
  AccelerationSettings?: AccelerationSettings;
  Category?: string;
  Description?: string;
  HopDestinations?: HopDestination[];
  Name: string | undefined;
  Priority?: number;
  Queue?: string;
  Settings?: JobTemplateSettings;
  StatusUpdateInterval?: StatusUpdateInterval;
}
export interface UpdateJobTemplateResponse {
  JobTemplate?: JobTemplate;
}
export interface UpdatePresetRequest {
  Category?: string;
  Description?: string;
  Name: string | undefined;
  Settings?: PresetSettings;
}
export interface UpdatePresetResponse {
  Preset?: Preset;
}
export interface UpdateQueueRequest {
  Description?: string;
  Name: string | undefined;
  ReservationPlanSettings?: ReservationPlanSettings;
  Status?: QueueStatus;
}
export interface UpdateQueueResponse {
  Queue?: Queue;
}
