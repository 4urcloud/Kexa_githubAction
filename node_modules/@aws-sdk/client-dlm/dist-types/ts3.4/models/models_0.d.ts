import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { DLMServiceException as __BaseException } from "./DLMServiceException";
export interface EncryptionConfiguration {
  Encrypted: boolean | undefined;
  CmkArn?: string;
}
export declare const RetentionIntervalUnitValues: {
  readonly DAYS: "DAYS";
  readonly MONTHS: "MONTHS";
  readonly WEEKS: "WEEKS";
  readonly YEARS: "YEARS";
};
export type RetentionIntervalUnitValues =
  (typeof RetentionIntervalUnitValues)[keyof typeof RetentionIntervalUnitValues];
export interface CrossRegionCopyRetainRule {
  Interval?: number;
  IntervalUnit?: RetentionIntervalUnitValues;
}
export interface CrossRegionCopyAction {
  Target: string | undefined;
  EncryptionConfiguration: EncryptionConfiguration | undefined;
  RetainRule?: CrossRegionCopyRetainRule;
}
export interface Action {
  Name: string | undefined;
  CrossRegionCopy: CrossRegionCopyAction[] | undefined;
}
export interface RetentionArchiveTier {
  Count?: number;
  Interval?: number;
  IntervalUnit?: RetentionIntervalUnitValues;
}
export interface ArchiveRetainRule {
  RetentionArchiveTier: RetentionArchiveTier | undefined;
}
export interface ArchiveRule {
  RetainRule: ArchiveRetainRule | undefined;
}
export interface CrossRegionCopyTarget {
  TargetRegion?: string;
}
export declare const DefaultPolicyTypeValues: {
  readonly INSTANCE: "INSTANCE";
  readonly VOLUME: "VOLUME";
};
export type DefaultPolicyTypeValues =
  (typeof DefaultPolicyTypeValues)[keyof typeof DefaultPolicyTypeValues];
export interface Tag {
  Key: string | undefined;
  Value: string | undefined;
}
export interface Exclusions {
  ExcludeBootVolumes?: boolean;
  ExcludeVolumeTypes?: string[];
  ExcludeTags?: Tag[];
}
export declare const EventTypeValues: {
  readonly SHARE_SNAPSHOT: "shareSnapshot";
};
export type EventTypeValues =
  (typeof EventTypeValues)[keyof typeof EventTypeValues];
export interface EventParameters {
  EventType: EventTypeValues | undefined;
  SnapshotOwner: string[] | undefined;
  DescriptionRegex: string | undefined;
}
export declare const EventSourceValues: {
  readonly MANAGED_CWE: "MANAGED_CWE";
};
export type EventSourceValues =
  (typeof EventSourceValues)[keyof typeof EventSourceValues];
export interface EventSource {
  Type: EventSourceValues | undefined;
  Parameters?: EventParameters;
}
export interface _Parameters {
  ExcludeBootVolume?: boolean;
  NoReboot?: boolean;
  ExcludeDataVolumeTags?: Tag[];
}
export declare const PolicyLanguageValues: {
  readonly SIMPLIFIED: "SIMPLIFIED";
  readonly STANDARD: "STANDARD";
};
export type PolicyLanguageValues =
  (typeof PolicyLanguageValues)[keyof typeof PolicyLanguageValues];
export declare const PolicyTypeValues: {
  readonly EBS_SNAPSHOT_MANAGEMENT: "EBS_SNAPSHOT_MANAGEMENT";
  readonly EVENT_BASED_POLICY: "EVENT_BASED_POLICY";
  readonly IMAGE_MANAGEMENT: "IMAGE_MANAGEMENT";
};
export type PolicyTypeValues =
  (typeof PolicyTypeValues)[keyof typeof PolicyTypeValues];
export declare const ResourceLocationValues: {
  readonly CLOUD: "CLOUD";
  readonly OUTPOST: "OUTPOST";
};
export type ResourceLocationValues =
  (typeof ResourceLocationValues)[keyof typeof ResourceLocationValues];
export declare const ResourceTypeValues: {
  readonly INSTANCE: "INSTANCE";
  readonly VOLUME: "VOLUME";
};
export type ResourceTypeValues =
  (typeof ResourceTypeValues)[keyof typeof ResourceTypeValues];
export declare const IntervalUnitValues: {
  readonly HOURS: "HOURS";
};
export type IntervalUnitValues =
  (typeof IntervalUnitValues)[keyof typeof IntervalUnitValues];
export declare const LocationValues: {
  readonly CLOUD: "CLOUD";
  readonly OUTPOST_LOCAL: "OUTPOST_LOCAL";
};
export type LocationValues =
  (typeof LocationValues)[keyof typeof LocationValues];
export declare const ExecutionHandlerServiceValues: {
  readonly AWS_SYSTEMS_MANAGER: "AWS_SYSTEMS_MANAGER";
};
export type ExecutionHandlerServiceValues =
  (typeof ExecutionHandlerServiceValues)[keyof typeof ExecutionHandlerServiceValues];
export declare const StageValues: {
  readonly POST: "POST";
  readonly PRE: "PRE";
};
export type StageValues = (typeof StageValues)[keyof typeof StageValues];
export interface Script {
  Stages?: StageValues[];
  ExecutionHandlerService?: ExecutionHandlerServiceValues;
  ExecutionHandler: string | undefined;
  ExecuteOperationOnScriptFailure?: boolean;
  ExecutionTimeout?: number;
  MaximumRetryCount?: number;
}
export interface CreateRule {
  Location?: LocationValues;
  Interval?: number;
  IntervalUnit?: IntervalUnitValues;
  Times?: string[];
  CronExpression?: string;
  Scripts?: Script[];
}
export interface CrossRegionCopyDeprecateRule {
  Interval?: number;
  IntervalUnit?: RetentionIntervalUnitValues;
}
export interface CrossRegionCopyRule {
  TargetRegion?: string;
  Target?: string;
  Encrypted: boolean | undefined;
  CmkArn?: string;
  CopyTags?: boolean;
  RetainRule?: CrossRegionCopyRetainRule;
  DeprecateRule?: CrossRegionCopyDeprecateRule;
}
export interface DeprecateRule {
  Count?: number;
  Interval?: number;
  IntervalUnit?: RetentionIntervalUnitValues;
}
export interface FastRestoreRule {
  Count?: number;
  Interval?: number;
  IntervalUnit?: RetentionIntervalUnitValues;
  AvailabilityZones: string[] | undefined;
}
export interface RetainRule {
  Count?: number;
  Interval?: number;
  IntervalUnit?: RetentionIntervalUnitValues;
}
export interface ShareRule {
  TargetAccounts: string[] | undefined;
  UnshareInterval?: number;
  UnshareIntervalUnit?: RetentionIntervalUnitValues;
}
export interface Schedule {
  Name?: string;
  CopyTags?: boolean;
  TagsToAdd?: Tag[];
  VariableTags?: Tag[];
  CreateRule?: CreateRule;
  RetainRule?: RetainRule;
  FastRestoreRule?: FastRestoreRule;
  CrossRegionCopyRules?: CrossRegionCopyRule[];
  ShareRules?: ShareRule[];
  DeprecateRule?: DeprecateRule;
  ArchiveRule?: ArchiveRule;
}
export interface PolicyDetails {
  PolicyType?: PolicyTypeValues;
  ResourceTypes?: ResourceTypeValues[];
  ResourceLocations?: ResourceLocationValues[];
  TargetTags?: Tag[];
  Schedules?: Schedule[];
  Parameters?: _Parameters;
  EventSource?: EventSource;
  Actions?: Action[];
  PolicyLanguage?: PolicyLanguageValues;
  ResourceType?: ResourceTypeValues;
  CreateInterval?: number;
  RetainInterval?: number;
  CopyTags?: boolean;
  CrossRegionCopyTargets?: CrossRegionCopyTarget[];
  ExtendDeletion?: boolean;
  Exclusions?: Exclusions;
}
export declare const SettablePolicyStateValues: {
  readonly DISABLED: "DISABLED";
  readonly ENABLED: "ENABLED";
};
export type SettablePolicyStateValues =
  (typeof SettablePolicyStateValues)[keyof typeof SettablePolicyStateValues];
export interface CreateLifecyclePolicyRequest {
  ExecutionRoleArn: string | undefined;
  Description: string | undefined;
  State: SettablePolicyStateValues | undefined;
  PolicyDetails?: PolicyDetails;
  Tags?: Record<string, string>;
  DefaultPolicy?: DefaultPolicyTypeValues;
  CreateInterval?: number;
  RetainInterval?: number;
  CopyTags?: boolean;
  ExtendDeletion?: boolean;
  CrossRegionCopyTargets?: CrossRegionCopyTarget[];
  Exclusions?: Exclusions;
}
export interface CreateLifecyclePolicyResponse {
  PolicyId?: string;
}
export declare class InternalServerException extends __BaseException {
  readonly name: "InternalServerException";
  readonly $fault: "server";
  Message?: string;
  Code?: string;
  constructor(
    opts: __ExceptionOptionType<InternalServerException, __BaseException>
  );
}
export declare class InvalidRequestException extends __BaseException {
  readonly name: "InvalidRequestException";
  readonly $fault: "client";
  Message?: string;
  Code?: string;
  RequiredParameters?: string[];
  MutuallyExclusiveParameters?: string[];
  constructor(
    opts: __ExceptionOptionType<InvalidRequestException, __BaseException>
  );
}
export declare class LimitExceededException extends __BaseException {
  readonly name: "LimitExceededException";
  readonly $fault: "client";
  Message?: string;
  Code?: string;
  ResourceType?: string;
  constructor(
    opts: __ExceptionOptionType<LimitExceededException, __BaseException>
  );
}
export declare const DefaultPoliciesTypeValues: {
  readonly ALL: "ALL";
  readonly INSTANCE: "INSTANCE";
  readonly VOLUME: "VOLUME";
};
export type DefaultPoliciesTypeValues =
  (typeof DefaultPoliciesTypeValues)[keyof typeof DefaultPoliciesTypeValues];
export interface DeleteLifecyclePolicyRequest {
  PolicyId: string | undefined;
}
export interface DeleteLifecyclePolicyResponse {}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  Message?: string;
  Code?: string;
  ResourceType?: string;
  ResourceIds?: string[];
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export declare const GettablePolicyStateValues: {
  readonly DISABLED: "DISABLED";
  readonly ENABLED: "ENABLED";
  readonly ERROR: "ERROR";
};
export type GettablePolicyStateValues =
  (typeof GettablePolicyStateValues)[keyof typeof GettablePolicyStateValues];
export interface GetLifecyclePoliciesRequest {
  PolicyIds?: string[];
  State?: GettablePolicyStateValues;
  ResourceTypes?: ResourceTypeValues[];
  TargetTags?: string[];
  TagsToAdd?: string[];
  DefaultPolicyType?: DefaultPoliciesTypeValues;
}
export interface LifecyclePolicySummary {
  PolicyId?: string;
  Description?: string;
  State?: GettablePolicyStateValues;
  Tags?: Record<string, string>;
  PolicyType?: PolicyTypeValues;
  DefaultPolicy?: boolean;
}
export interface GetLifecyclePoliciesResponse {
  Policies?: LifecyclePolicySummary[];
}
export interface GetLifecyclePolicyRequest {
  PolicyId: string | undefined;
}
export interface LifecyclePolicy {
  PolicyId?: string;
  Description?: string;
  State?: GettablePolicyStateValues;
  StatusMessage?: string;
  ExecutionRoleArn?: string;
  DateCreated?: Date;
  DateModified?: Date;
  PolicyDetails?: PolicyDetails;
  Tags?: Record<string, string>;
  PolicyArn?: string;
  DefaultPolicy?: boolean;
}
export interface GetLifecyclePolicyResponse {
  Policy?: LifecyclePolicy;
}
export interface ListTagsForResourceRequest {
  ResourceArn: string | undefined;
}
export interface ListTagsForResourceResponse {
  Tags?: Record<string, string>;
}
export interface TagResourceRequest {
  ResourceArn: string | undefined;
  Tags: Record<string, string> | undefined;
}
export interface TagResourceResponse {}
export interface UntagResourceRequest {
  ResourceArn: string | undefined;
  TagKeys: string[] | undefined;
}
export interface UntagResourceResponse {}
export interface UpdateLifecyclePolicyRequest {
  PolicyId: string | undefined;
  ExecutionRoleArn?: string;
  State?: SettablePolicyStateValues;
  Description?: string;
  PolicyDetails?: PolicyDetails;
  CreateInterval?: number;
  RetainInterval?: number;
  CopyTags?: boolean;
  ExtendDeletion?: boolean;
  CrossRegionCopyTargets?: CrossRegionCopyTarget[];
  Exclusions?: Exclusions;
}
export interface UpdateLifecyclePolicyResponse {}
