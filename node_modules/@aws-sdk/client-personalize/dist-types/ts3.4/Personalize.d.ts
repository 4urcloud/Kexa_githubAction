import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import {
  CreateBatchInferenceJobCommandInput,
  CreateBatchInferenceJobCommandOutput,
} from "./commands/CreateBatchInferenceJobCommand";
import {
  CreateBatchSegmentJobCommandInput,
  CreateBatchSegmentJobCommandOutput,
} from "./commands/CreateBatchSegmentJobCommand";
import {
  CreateCampaignCommandInput,
  CreateCampaignCommandOutput,
} from "./commands/CreateCampaignCommand";
import {
  CreateDatasetCommandInput,
  CreateDatasetCommandOutput,
} from "./commands/CreateDatasetCommand";
import {
  CreateDatasetExportJobCommandInput,
  CreateDatasetExportJobCommandOutput,
} from "./commands/CreateDatasetExportJobCommand";
import {
  CreateDatasetGroupCommandInput,
  CreateDatasetGroupCommandOutput,
} from "./commands/CreateDatasetGroupCommand";
import {
  CreateDatasetImportJobCommandInput,
  CreateDatasetImportJobCommandOutput,
} from "./commands/CreateDatasetImportJobCommand";
import {
  CreateEventTrackerCommandInput,
  CreateEventTrackerCommandOutput,
} from "./commands/CreateEventTrackerCommand";
import {
  CreateFilterCommandInput,
  CreateFilterCommandOutput,
} from "./commands/CreateFilterCommand";
import {
  CreateMetricAttributionCommandInput,
  CreateMetricAttributionCommandOutput,
} from "./commands/CreateMetricAttributionCommand";
import {
  CreateRecommenderCommandInput,
  CreateRecommenderCommandOutput,
} from "./commands/CreateRecommenderCommand";
import {
  CreateSchemaCommandInput,
  CreateSchemaCommandOutput,
} from "./commands/CreateSchemaCommand";
import {
  CreateSolutionCommandInput,
  CreateSolutionCommandOutput,
} from "./commands/CreateSolutionCommand";
import {
  CreateSolutionVersionCommandInput,
  CreateSolutionVersionCommandOutput,
} from "./commands/CreateSolutionVersionCommand";
import {
  DeleteCampaignCommandInput,
  DeleteCampaignCommandOutput,
} from "./commands/DeleteCampaignCommand";
import {
  DeleteDatasetCommandInput,
  DeleteDatasetCommandOutput,
} from "./commands/DeleteDatasetCommand";
import {
  DeleteDatasetGroupCommandInput,
  DeleteDatasetGroupCommandOutput,
} from "./commands/DeleteDatasetGroupCommand";
import {
  DeleteEventTrackerCommandInput,
  DeleteEventTrackerCommandOutput,
} from "./commands/DeleteEventTrackerCommand";
import {
  DeleteFilterCommandInput,
  DeleteFilterCommandOutput,
} from "./commands/DeleteFilterCommand";
import {
  DeleteMetricAttributionCommandInput,
  DeleteMetricAttributionCommandOutput,
} from "./commands/DeleteMetricAttributionCommand";
import {
  DeleteRecommenderCommandInput,
  DeleteRecommenderCommandOutput,
} from "./commands/DeleteRecommenderCommand";
import {
  DeleteSchemaCommandInput,
  DeleteSchemaCommandOutput,
} from "./commands/DeleteSchemaCommand";
import {
  DeleteSolutionCommandInput,
  DeleteSolutionCommandOutput,
} from "./commands/DeleteSolutionCommand";
import {
  DescribeAlgorithmCommandInput,
  DescribeAlgorithmCommandOutput,
} from "./commands/DescribeAlgorithmCommand";
import {
  DescribeBatchInferenceJobCommandInput,
  DescribeBatchInferenceJobCommandOutput,
} from "./commands/DescribeBatchInferenceJobCommand";
import {
  DescribeBatchSegmentJobCommandInput,
  DescribeBatchSegmentJobCommandOutput,
} from "./commands/DescribeBatchSegmentJobCommand";
import {
  DescribeCampaignCommandInput,
  DescribeCampaignCommandOutput,
} from "./commands/DescribeCampaignCommand";
import {
  DescribeDatasetCommandInput,
  DescribeDatasetCommandOutput,
} from "./commands/DescribeDatasetCommand";
import {
  DescribeDatasetExportJobCommandInput,
  DescribeDatasetExportJobCommandOutput,
} from "./commands/DescribeDatasetExportJobCommand";
import {
  DescribeDatasetGroupCommandInput,
  DescribeDatasetGroupCommandOutput,
} from "./commands/DescribeDatasetGroupCommand";
import {
  DescribeDatasetImportJobCommandInput,
  DescribeDatasetImportJobCommandOutput,
} from "./commands/DescribeDatasetImportJobCommand";
import {
  DescribeEventTrackerCommandInput,
  DescribeEventTrackerCommandOutput,
} from "./commands/DescribeEventTrackerCommand";
import {
  DescribeFeatureTransformationCommandInput,
  DescribeFeatureTransformationCommandOutput,
} from "./commands/DescribeFeatureTransformationCommand";
import {
  DescribeFilterCommandInput,
  DescribeFilterCommandOutput,
} from "./commands/DescribeFilterCommand";
import {
  DescribeMetricAttributionCommandInput,
  DescribeMetricAttributionCommandOutput,
} from "./commands/DescribeMetricAttributionCommand";
import {
  DescribeRecipeCommandInput,
  DescribeRecipeCommandOutput,
} from "./commands/DescribeRecipeCommand";
import {
  DescribeRecommenderCommandInput,
  DescribeRecommenderCommandOutput,
} from "./commands/DescribeRecommenderCommand";
import {
  DescribeSchemaCommandInput,
  DescribeSchemaCommandOutput,
} from "./commands/DescribeSchemaCommand";
import {
  DescribeSolutionCommandInput,
  DescribeSolutionCommandOutput,
} from "./commands/DescribeSolutionCommand";
import {
  DescribeSolutionVersionCommandInput,
  DescribeSolutionVersionCommandOutput,
} from "./commands/DescribeSolutionVersionCommand";
import {
  GetSolutionMetricsCommandInput,
  GetSolutionMetricsCommandOutput,
} from "./commands/GetSolutionMetricsCommand";
import {
  ListBatchInferenceJobsCommandInput,
  ListBatchInferenceJobsCommandOutput,
} from "./commands/ListBatchInferenceJobsCommand";
import {
  ListBatchSegmentJobsCommandInput,
  ListBatchSegmentJobsCommandOutput,
} from "./commands/ListBatchSegmentJobsCommand";
import {
  ListCampaignsCommandInput,
  ListCampaignsCommandOutput,
} from "./commands/ListCampaignsCommand";
import {
  ListDatasetExportJobsCommandInput,
  ListDatasetExportJobsCommandOutput,
} from "./commands/ListDatasetExportJobsCommand";
import {
  ListDatasetGroupsCommandInput,
  ListDatasetGroupsCommandOutput,
} from "./commands/ListDatasetGroupsCommand";
import {
  ListDatasetImportJobsCommandInput,
  ListDatasetImportJobsCommandOutput,
} from "./commands/ListDatasetImportJobsCommand";
import {
  ListDatasetsCommandInput,
  ListDatasetsCommandOutput,
} from "./commands/ListDatasetsCommand";
import {
  ListEventTrackersCommandInput,
  ListEventTrackersCommandOutput,
} from "./commands/ListEventTrackersCommand";
import {
  ListFiltersCommandInput,
  ListFiltersCommandOutput,
} from "./commands/ListFiltersCommand";
import {
  ListMetricAttributionMetricsCommandInput,
  ListMetricAttributionMetricsCommandOutput,
} from "./commands/ListMetricAttributionMetricsCommand";
import {
  ListMetricAttributionsCommandInput,
  ListMetricAttributionsCommandOutput,
} from "./commands/ListMetricAttributionsCommand";
import {
  ListRecipesCommandInput,
  ListRecipesCommandOutput,
} from "./commands/ListRecipesCommand";
import {
  ListRecommendersCommandInput,
  ListRecommendersCommandOutput,
} from "./commands/ListRecommendersCommand";
import {
  ListSchemasCommandInput,
  ListSchemasCommandOutput,
} from "./commands/ListSchemasCommand";
import {
  ListSolutionsCommandInput,
  ListSolutionsCommandOutput,
} from "./commands/ListSolutionsCommand";
import {
  ListSolutionVersionsCommandInput,
  ListSolutionVersionsCommandOutput,
} from "./commands/ListSolutionVersionsCommand";
import {
  ListTagsForResourceCommandInput,
  ListTagsForResourceCommandOutput,
} from "./commands/ListTagsForResourceCommand";
import {
  StartRecommenderCommandInput,
  StartRecommenderCommandOutput,
} from "./commands/StartRecommenderCommand";
import {
  StopRecommenderCommandInput,
  StopRecommenderCommandOutput,
} from "./commands/StopRecommenderCommand";
import {
  StopSolutionVersionCreationCommandInput,
  StopSolutionVersionCreationCommandOutput,
} from "./commands/StopSolutionVersionCreationCommand";
import {
  TagResourceCommandInput,
  TagResourceCommandOutput,
} from "./commands/TagResourceCommand";
import {
  UntagResourceCommandInput,
  UntagResourceCommandOutput,
} from "./commands/UntagResourceCommand";
import {
  UpdateCampaignCommandInput,
  UpdateCampaignCommandOutput,
} from "./commands/UpdateCampaignCommand";
import {
  UpdateDatasetCommandInput,
  UpdateDatasetCommandOutput,
} from "./commands/UpdateDatasetCommand";
import {
  UpdateMetricAttributionCommandInput,
  UpdateMetricAttributionCommandOutput,
} from "./commands/UpdateMetricAttributionCommand";
import {
  UpdateRecommenderCommandInput,
  UpdateRecommenderCommandOutput,
} from "./commands/UpdateRecommenderCommand";
import { PersonalizeClient } from "./PersonalizeClient";
export interface Personalize {
  createBatchInferenceJob(
    args: CreateBatchInferenceJobCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateBatchInferenceJobCommandOutput>;
  createBatchInferenceJob(
    args: CreateBatchInferenceJobCommandInput,
    cb: (err: any, data?: CreateBatchInferenceJobCommandOutput) => void
  ): void;
  createBatchInferenceJob(
    args: CreateBatchInferenceJobCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateBatchInferenceJobCommandOutput) => void
  ): void;
  createBatchSegmentJob(
    args: CreateBatchSegmentJobCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateBatchSegmentJobCommandOutput>;
  createBatchSegmentJob(
    args: CreateBatchSegmentJobCommandInput,
    cb: (err: any, data?: CreateBatchSegmentJobCommandOutput) => void
  ): void;
  createBatchSegmentJob(
    args: CreateBatchSegmentJobCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateBatchSegmentJobCommandOutput) => void
  ): void;
  createCampaign(
    args: CreateCampaignCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateCampaignCommandOutput>;
  createCampaign(
    args: CreateCampaignCommandInput,
    cb: (err: any, data?: CreateCampaignCommandOutput) => void
  ): void;
  createCampaign(
    args: CreateCampaignCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateCampaignCommandOutput) => void
  ): void;
  createDataset(
    args: CreateDatasetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateDatasetCommandOutput>;
  createDataset(
    args: CreateDatasetCommandInput,
    cb: (err: any, data?: CreateDatasetCommandOutput) => void
  ): void;
  createDataset(
    args: CreateDatasetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateDatasetCommandOutput) => void
  ): void;
  createDatasetExportJob(
    args: CreateDatasetExportJobCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateDatasetExportJobCommandOutput>;
  createDatasetExportJob(
    args: CreateDatasetExportJobCommandInput,
    cb: (err: any, data?: CreateDatasetExportJobCommandOutput) => void
  ): void;
  createDatasetExportJob(
    args: CreateDatasetExportJobCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateDatasetExportJobCommandOutput) => void
  ): void;
  createDatasetGroup(
    args: CreateDatasetGroupCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateDatasetGroupCommandOutput>;
  createDatasetGroup(
    args: CreateDatasetGroupCommandInput,
    cb: (err: any, data?: CreateDatasetGroupCommandOutput) => void
  ): void;
  createDatasetGroup(
    args: CreateDatasetGroupCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateDatasetGroupCommandOutput) => void
  ): void;
  createDatasetImportJob(
    args: CreateDatasetImportJobCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateDatasetImportJobCommandOutput>;
  createDatasetImportJob(
    args: CreateDatasetImportJobCommandInput,
    cb: (err: any, data?: CreateDatasetImportJobCommandOutput) => void
  ): void;
  createDatasetImportJob(
    args: CreateDatasetImportJobCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateDatasetImportJobCommandOutput) => void
  ): void;
  createEventTracker(
    args: CreateEventTrackerCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateEventTrackerCommandOutput>;
  createEventTracker(
    args: CreateEventTrackerCommandInput,
    cb: (err: any, data?: CreateEventTrackerCommandOutput) => void
  ): void;
  createEventTracker(
    args: CreateEventTrackerCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateEventTrackerCommandOutput) => void
  ): void;
  createFilter(
    args: CreateFilterCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateFilterCommandOutput>;
  createFilter(
    args: CreateFilterCommandInput,
    cb: (err: any, data?: CreateFilterCommandOutput) => void
  ): void;
  createFilter(
    args: CreateFilterCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateFilterCommandOutput) => void
  ): void;
  createMetricAttribution(
    args: CreateMetricAttributionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateMetricAttributionCommandOutput>;
  createMetricAttribution(
    args: CreateMetricAttributionCommandInput,
    cb: (err: any, data?: CreateMetricAttributionCommandOutput) => void
  ): void;
  createMetricAttribution(
    args: CreateMetricAttributionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateMetricAttributionCommandOutput) => void
  ): void;
  createRecommender(
    args: CreateRecommenderCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateRecommenderCommandOutput>;
  createRecommender(
    args: CreateRecommenderCommandInput,
    cb: (err: any, data?: CreateRecommenderCommandOutput) => void
  ): void;
  createRecommender(
    args: CreateRecommenderCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateRecommenderCommandOutput) => void
  ): void;
  createSchema(
    args: CreateSchemaCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateSchemaCommandOutput>;
  createSchema(
    args: CreateSchemaCommandInput,
    cb: (err: any, data?: CreateSchemaCommandOutput) => void
  ): void;
  createSchema(
    args: CreateSchemaCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateSchemaCommandOutput) => void
  ): void;
  createSolution(
    args: CreateSolutionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateSolutionCommandOutput>;
  createSolution(
    args: CreateSolutionCommandInput,
    cb: (err: any, data?: CreateSolutionCommandOutput) => void
  ): void;
  createSolution(
    args: CreateSolutionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateSolutionCommandOutput) => void
  ): void;
  createSolutionVersion(
    args: CreateSolutionVersionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateSolutionVersionCommandOutput>;
  createSolutionVersion(
    args: CreateSolutionVersionCommandInput,
    cb: (err: any, data?: CreateSolutionVersionCommandOutput) => void
  ): void;
  createSolutionVersion(
    args: CreateSolutionVersionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateSolutionVersionCommandOutput) => void
  ): void;
  deleteCampaign(
    args: DeleteCampaignCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteCampaignCommandOutput>;
  deleteCampaign(
    args: DeleteCampaignCommandInput,
    cb: (err: any, data?: DeleteCampaignCommandOutput) => void
  ): void;
  deleteCampaign(
    args: DeleteCampaignCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteCampaignCommandOutput) => void
  ): void;
  deleteDataset(
    args: DeleteDatasetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteDatasetCommandOutput>;
  deleteDataset(
    args: DeleteDatasetCommandInput,
    cb: (err: any, data?: DeleteDatasetCommandOutput) => void
  ): void;
  deleteDataset(
    args: DeleteDatasetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteDatasetCommandOutput) => void
  ): void;
  deleteDatasetGroup(
    args: DeleteDatasetGroupCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteDatasetGroupCommandOutput>;
  deleteDatasetGroup(
    args: DeleteDatasetGroupCommandInput,
    cb: (err: any, data?: DeleteDatasetGroupCommandOutput) => void
  ): void;
  deleteDatasetGroup(
    args: DeleteDatasetGroupCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteDatasetGroupCommandOutput) => void
  ): void;
  deleteEventTracker(
    args: DeleteEventTrackerCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteEventTrackerCommandOutput>;
  deleteEventTracker(
    args: DeleteEventTrackerCommandInput,
    cb: (err: any, data?: DeleteEventTrackerCommandOutput) => void
  ): void;
  deleteEventTracker(
    args: DeleteEventTrackerCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteEventTrackerCommandOutput) => void
  ): void;
  deleteFilter(
    args: DeleteFilterCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteFilterCommandOutput>;
  deleteFilter(
    args: DeleteFilterCommandInput,
    cb: (err: any, data?: DeleteFilterCommandOutput) => void
  ): void;
  deleteFilter(
    args: DeleteFilterCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteFilterCommandOutput) => void
  ): void;
  deleteMetricAttribution(
    args: DeleteMetricAttributionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteMetricAttributionCommandOutput>;
  deleteMetricAttribution(
    args: DeleteMetricAttributionCommandInput,
    cb: (err: any, data?: DeleteMetricAttributionCommandOutput) => void
  ): void;
  deleteMetricAttribution(
    args: DeleteMetricAttributionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteMetricAttributionCommandOutput) => void
  ): void;
  deleteRecommender(
    args: DeleteRecommenderCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteRecommenderCommandOutput>;
  deleteRecommender(
    args: DeleteRecommenderCommandInput,
    cb: (err: any, data?: DeleteRecommenderCommandOutput) => void
  ): void;
  deleteRecommender(
    args: DeleteRecommenderCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteRecommenderCommandOutput) => void
  ): void;
  deleteSchema(
    args: DeleteSchemaCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteSchemaCommandOutput>;
  deleteSchema(
    args: DeleteSchemaCommandInput,
    cb: (err: any, data?: DeleteSchemaCommandOutput) => void
  ): void;
  deleteSchema(
    args: DeleteSchemaCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteSchemaCommandOutput) => void
  ): void;
  deleteSolution(
    args: DeleteSolutionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteSolutionCommandOutput>;
  deleteSolution(
    args: DeleteSolutionCommandInput,
    cb: (err: any, data?: DeleteSolutionCommandOutput) => void
  ): void;
  deleteSolution(
    args: DeleteSolutionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteSolutionCommandOutput) => void
  ): void;
  describeAlgorithm(
    args: DescribeAlgorithmCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeAlgorithmCommandOutput>;
  describeAlgorithm(
    args: DescribeAlgorithmCommandInput,
    cb: (err: any, data?: DescribeAlgorithmCommandOutput) => void
  ): void;
  describeAlgorithm(
    args: DescribeAlgorithmCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeAlgorithmCommandOutput) => void
  ): void;
  describeBatchInferenceJob(
    args: DescribeBatchInferenceJobCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeBatchInferenceJobCommandOutput>;
  describeBatchInferenceJob(
    args: DescribeBatchInferenceJobCommandInput,
    cb: (err: any, data?: DescribeBatchInferenceJobCommandOutput) => void
  ): void;
  describeBatchInferenceJob(
    args: DescribeBatchInferenceJobCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeBatchInferenceJobCommandOutput) => void
  ): void;
  describeBatchSegmentJob(
    args: DescribeBatchSegmentJobCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeBatchSegmentJobCommandOutput>;
  describeBatchSegmentJob(
    args: DescribeBatchSegmentJobCommandInput,
    cb: (err: any, data?: DescribeBatchSegmentJobCommandOutput) => void
  ): void;
  describeBatchSegmentJob(
    args: DescribeBatchSegmentJobCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeBatchSegmentJobCommandOutput) => void
  ): void;
  describeCampaign(
    args: DescribeCampaignCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeCampaignCommandOutput>;
  describeCampaign(
    args: DescribeCampaignCommandInput,
    cb: (err: any, data?: DescribeCampaignCommandOutput) => void
  ): void;
  describeCampaign(
    args: DescribeCampaignCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeCampaignCommandOutput) => void
  ): void;
  describeDataset(
    args: DescribeDatasetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeDatasetCommandOutput>;
  describeDataset(
    args: DescribeDatasetCommandInput,
    cb: (err: any, data?: DescribeDatasetCommandOutput) => void
  ): void;
  describeDataset(
    args: DescribeDatasetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeDatasetCommandOutput) => void
  ): void;
  describeDatasetExportJob(
    args: DescribeDatasetExportJobCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeDatasetExportJobCommandOutput>;
  describeDatasetExportJob(
    args: DescribeDatasetExportJobCommandInput,
    cb: (err: any, data?: DescribeDatasetExportJobCommandOutput) => void
  ): void;
  describeDatasetExportJob(
    args: DescribeDatasetExportJobCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeDatasetExportJobCommandOutput) => void
  ): void;
  describeDatasetGroup(
    args: DescribeDatasetGroupCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeDatasetGroupCommandOutput>;
  describeDatasetGroup(
    args: DescribeDatasetGroupCommandInput,
    cb: (err: any, data?: DescribeDatasetGroupCommandOutput) => void
  ): void;
  describeDatasetGroup(
    args: DescribeDatasetGroupCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeDatasetGroupCommandOutput) => void
  ): void;
  describeDatasetImportJob(
    args: DescribeDatasetImportJobCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeDatasetImportJobCommandOutput>;
  describeDatasetImportJob(
    args: DescribeDatasetImportJobCommandInput,
    cb: (err: any, data?: DescribeDatasetImportJobCommandOutput) => void
  ): void;
  describeDatasetImportJob(
    args: DescribeDatasetImportJobCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeDatasetImportJobCommandOutput) => void
  ): void;
  describeEventTracker(
    args: DescribeEventTrackerCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeEventTrackerCommandOutput>;
  describeEventTracker(
    args: DescribeEventTrackerCommandInput,
    cb: (err: any, data?: DescribeEventTrackerCommandOutput) => void
  ): void;
  describeEventTracker(
    args: DescribeEventTrackerCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeEventTrackerCommandOutput) => void
  ): void;
  describeFeatureTransformation(
    args: DescribeFeatureTransformationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeFeatureTransformationCommandOutput>;
  describeFeatureTransformation(
    args: DescribeFeatureTransformationCommandInput,
    cb: (err: any, data?: DescribeFeatureTransformationCommandOutput) => void
  ): void;
  describeFeatureTransformation(
    args: DescribeFeatureTransformationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeFeatureTransformationCommandOutput) => void
  ): void;
  describeFilter(
    args: DescribeFilterCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeFilterCommandOutput>;
  describeFilter(
    args: DescribeFilterCommandInput,
    cb: (err: any, data?: DescribeFilterCommandOutput) => void
  ): void;
  describeFilter(
    args: DescribeFilterCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeFilterCommandOutput) => void
  ): void;
  describeMetricAttribution(
    args: DescribeMetricAttributionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeMetricAttributionCommandOutput>;
  describeMetricAttribution(
    args: DescribeMetricAttributionCommandInput,
    cb: (err: any, data?: DescribeMetricAttributionCommandOutput) => void
  ): void;
  describeMetricAttribution(
    args: DescribeMetricAttributionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeMetricAttributionCommandOutput) => void
  ): void;
  describeRecipe(
    args: DescribeRecipeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeRecipeCommandOutput>;
  describeRecipe(
    args: DescribeRecipeCommandInput,
    cb: (err: any, data?: DescribeRecipeCommandOutput) => void
  ): void;
  describeRecipe(
    args: DescribeRecipeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeRecipeCommandOutput) => void
  ): void;
  describeRecommender(
    args: DescribeRecommenderCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeRecommenderCommandOutput>;
  describeRecommender(
    args: DescribeRecommenderCommandInput,
    cb: (err: any, data?: DescribeRecommenderCommandOutput) => void
  ): void;
  describeRecommender(
    args: DescribeRecommenderCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeRecommenderCommandOutput) => void
  ): void;
  describeSchema(
    args: DescribeSchemaCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeSchemaCommandOutput>;
  describeSchema(
    args: DescribeSchemaCommandInput,
    cb: (err: any, data?: DescribeSchemaCommandOutput) => void
  ): void;
  describeSchema(
    args: DescribeSchemaCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeSchemaCommandOutput) => void
  ): void;
  describeSolution(
    args: DescribeSolutionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeSolutionCommandOutput>;
  describeSolution(
    args: DescribeSolutionCommandInput,
    cb: (err: any, data?: DescribeSolutionCommandOutput) => void
  ): void;
  describeSolution(
    args: DescribeSolutionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeSolutionCommandOutput) => void
  ): void;
  describeSolutionVersion(
    args: DescribeSolutionVersionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeSolutionVersionCommandOutput>;
  describeSolutionVersion(
    args: DescribeSolutionVersionCommandInput,
    cb: (err: any, data?: DescribeSolutionVersionCommandOutput) => void
  ): void;
  describeSolutionVersion(
    args: DescribeSolutionVersionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeSolutionVersionCommandOutput) => void
  ): void;
  getSolutionMetrics(
    args: GetSolutionMetricsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetSolutionMetricsCommandOutput>;
  getSolutionMetrics(
    args: GetSolutionMetricsCommandInput,
    cb: (err: any, data?: GetSolutionMetricsCommandOutput) => void
  ): void;
  getSolutionMetrics(
    args: GetSolutionMetricsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetSolutionMetricsCommandOutput) => void
  ): void;
  listBatchInferenceJobs(
    args: ListBatchInferenceJobsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListBatchInferenceJobsCommandOutput>;
  listBatchInferenceJobs(
    args: ListBatchInferenceJobsCommandInput,
    cb: (err: any, data?: ListBatchInferenceJobsCommandOutput) => void
  ): void;
  listBatchInferenceJobs(
    args: ListBatchInferenceJobsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListBatchInferenceJobsCommandOutput) => void
  ): void;
  listBatchSegmentJobs(
    args: ListBatchSegmentJobsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListBatchSegmentJobsCommandOutput>;
  listBatchSegmentJobs(
    args: ListBatchSegmentJobsCommandInput,
    cb: (err: any, data?: ListBatchSegmentJobsCommandOutput) => void
  ): void;
  listBatchSegmentJobs(
    args: ListBatchSegmentJobsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListBatchSegmentJobsCommandOutput) => void
  ): void;
  listCampaigns(
    args: ListCampaignsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListCampaignsCommandOutput>;
  listCampaigns(
    args: ListCampaignsCommandInput,
    cb: (err: any, data?: ListCampaignsCommandOutput) => void
  ): void;
  listCampaigns(
    args: ListCampaignsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListCampaignsCommandOutput) => void
  ): void;
  listDatasetExportJobs(
    args: ListDatasetExportJobsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListDatasetExportJobsCommandOutput>;
  listDatasetExportJobs(
    args: ListDatasetExportJobsCommandInput,
    cb: (err: any, data?: ListDatasetExportJobsCommandOutput) => void
  ): void;
  listDatasetExportJobs(
    args: ListDatasetExportJobsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListDatasetExportJobsCommandOutput) => void
  ): void;
  listDatasetGroups(
    args: ListDatasetGroupsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListDatasetGroupsCommandOutput>;
  listDatasetGroups(
    args: ListDatasetGroupsCommandInput,
    cb: (err: any, data?: ListDatasetGroupsCommandOutput) => void
  ): void;
  listDatasetGroups(
    args: ListDatasetGroupsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListDatasetGroupsCommandOutput) => void
  ): void;
  listDatasetImportJobs(
    args: ListDatasetImportJobsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListDatasetImportJobsCommandOutput>;
  listDatasetImportJobs(
    args: ListDatasetImportJobsCommandInput,
    cb: (err: any, data?: ListDatasetImportJobsCommandOutput) => void
  ): void;
  listDatasetImportJobs(
    args: ListDatasetImportJobsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListDatasetImportJobsCommandOutput) => void
  ): void;
  listDatasets(
    args: ListDatasetsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListDatasetsCommandOutput>;
  listDatasets(
    args: ListDatasetsCommandInput,
    cb: (err: any, data?: ListDatasetsCommandOutput) => void
  ): void;
  listDatasets(
    args: ListDatasetsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListDatasetsCommandOutput) => void
  ): void;
  listEventTrackers(
    args: ListEventTrackersCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListEventTrackersCommandOutput>;
  listEventTrackers(
    args: ListEventTrackersCommandInput,
    cb: (err: any, data?: ListEventTrackersCommandOutput) => void
  ): void;
  listEventTrackers(
    args: ListEventTrackersCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListEventTrackersCommandOutput) => void
  ): void;
  listFilters(
    args: ListFiltersCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListFiltersCommandOutput>;
  listFilters(
    args: ListFiltersCommandInput,
    cb: (err: any, data?: ListFiltersCommandOutput) => void
  ): void;
  listFilters(
    args: ListFiltersCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListFiltersCommandOutput) => void
  ): void;
  listMetricAttributionMetrics(
    args: ListMetricAttributionMetricsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListMetricAttributionMetricsCommandOutput>;
  listMetricAttributionMetrics(
    args: ListMetricAttributionMetricsCommandInput,
    cb: (err: any, data?: ListMetricAttributionMetricsCommandOutput) => void
  ): void;
  listMetricAttributionMetrics(
    args: ListMetricAttributionMetricsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListMetricAttributionMetricsCommandOutput) => void
  ): void;
  listMetricAttributions(
    args: ListMetricAttributionsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListMetricAttributionsCommandOutput>;
  listMetricAttributions(
    args: ListMetricAttributionsCommandInput,
    cb: (err: any, data?: ListMetricAttributionsCommandOutput) => void
  ): void;
  listMetricAttributions(
    args: ListMetricAttributionsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListMetricAttributionsCommandOutput) => void
  ): void;
  listRecipes(
    args: ListRecipesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListRecipesCommandOutput>;
  listRecipes(
    args: ListRecipesCommandInput,
    cb: (err: any, data?: ListRecipesCommandOutput) => void
  ): void;
  listRecipes(
    args: ListRecipesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListRecipesCommandOutput) => void
  ): void;
  listRecommenders(
    args: ListRecommendersCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListRecommendersCommandOutput>;
  listRecommenders(
    args: ListRecommendersCommandInput,
    cb: (err: any, data?: ListRecommendersCommandOutput) => void
  ): void;
  listRecommenders(
    args: ListRecommendersCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListRecommendersCommandOutput) => void
  ): void;
  listSchemas(
    args: ListSchemasCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListSchemasCommandOutput>;
  listSchemas(
    args: ListSchemasCommandInput,
    cb: (err: any, data?: ListSchemasCommandOutput) => void
  ): void;
  listSchemas(
    args: ListSchemasCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListSchemasCommandOutput) => void
  ): void;
  listSolutions(
    args: ListSolutionsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListSolutionsCommandOutput>;
  listSolutions(
    args: ListSolutionsCommandInput,
    cb: (err: any, data?: ListSolutionsCommandOutput) => void
  ): void;
  listSolutions(
    args: ListSolutionsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListSolutionsCommandOutput) => void
  ): void;
  listSolutionVersions(
    args: ListSolutionVersionsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListSolutionVersionsCommandOutput>;
  listSolutionVersions(
    args: ListSolutionVersionsCommandInput,
    cb: (err: any, data?: ListSolutionVersionsCommandOutput) => void
  ): void;
  listSolutionVersions(
    args: ListSolutionVersionsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListSolutionVersionsCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListTagsForResourceCommandOutput>;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  startRecommender(
    args: StartRecommenderCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<StartRecommenderCommandOutput>;
  startRecommender(
    args: StartRecommenderCommandInput,
    cb: (err: any, data?: StartRecommenderCommandOutput) => void
  ): void;
  startRecommender(
    args: StartRecommenderCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: StartRecommenderCommandOutput) => void
  ): void;
  stopRecommender(
    args: StopRecommenderCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<StopRecommenderCommandOutput>;
  stopRecommender(
    args: StopRecommenderCommandInput,
    cb: (err: any, data?: StopRecommenderCommandOutput) => void
  ): void;
  stopRecommender(
    args: StopRecommenderCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: StopRecommenderCommandOutput) => void
  ): void;
  stopSolutionVersionCreation(
    args: StopSolutionVersionCreationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<StopSolutionVersionCreationCommandOutput>;
  stopSolutionVersionCreation(
    args: StopSolutionVersionCreationCommandInput,
    cb: (err: any, data?: StopSolutionVersionCreationCommandOutput) => void
  ): void;
  stopSolutionVersionCreation(
    args: StopSolutionVersionCreationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: StopSolutionVersionCreationCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<TagResourceCommandOutput>;
  tagResource(
    args: TagResourceCommandInput,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UntagResourceCommandOutput>;
  untagResource(
    args: UntagResourceCommandInput,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  updateCampaign(
    args: UpdateCampaignCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateCampaignCommandOutput>;
  updateCampaign(
    args: UpdateCampaignCommandInput,
    cb: (err: any, data?: UpdateCampaignCommandOutput) => void
  ): void;
  updateCampaign(
    args: UpdateCampaignCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateCampaignCommandOutput) => void
  ): void;
  updateDataset(
    args: UpdateDatasetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateDatasetCommandOutput>;
  updateDataset(
    args: UpdateDatasetCommandInput,
    cb: (err: any, data?: UpdateDatasetCommandOutput) => void
  ): void;
  updateDataset(
    args: UpdateDatasetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateDatasetCommandOutput) => void
  ): void;
  updateMetricAttribution(
    args: UpdateMetricAttributionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateMetricAttributionCommandOutput>;
  updateMetricAttribution(
    args: UpdateMetricAttributionCommandInput,
    cb: (err: any, data?: UpdateMetricAttributionCommandOutput) => void
  ): void;
  updateMetricAttribution(
    args: UpdateMetricAttributionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateMetricAttributionCommandOutput) => void
  ): void;
  updateRecommender(
    args: UpdateRecommenderCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateRecommenderCommandOutput>;
  updateRecommender(
    args: UpdateRecommenderCommandInput,
    cb: (err: any, data?: UpdateRecommenderCommandOutput) => void
  ): void;
  updateRecommender(
    args: UpdateRecommenderCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateRecommenderCommandOutput) => void
  ): void;
}
export declare class Personalize
  extends PersonalizeClient
  implements Personalize {}
