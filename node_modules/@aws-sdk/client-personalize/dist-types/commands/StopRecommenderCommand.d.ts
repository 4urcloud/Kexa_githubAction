import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import { StopRecommenderRequest, StopRecommenderResponse } from "../models/models_0";
import { PersonalizeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../PersonalizeClient";
/**
 * @public
 */
export { __MetadataBearer, $Command };
/**
 * @public
 *
 * The input for {@link StopRecommenderCommand}.
 */
export interface StopRecommenderCommandInput extends StopRecommenderRequest {
}
/**
 * @public
 *
 * The output of {@link StopRecommenderCommand}.
 */
export interface StopRecommenderCommandOutput extends StopRecommenderResponse, __MetadataBearer {
}
declare const StopRecommenderCommand_base: {
    new (input: StopRecommenderCommandInput): import("@smithy/smithy-client").CommandImpl<StopRecommenderCommandInput, StopRecommenderCommandOutput, PersonalizeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
/**
 * @public
 * <p>Stops a recommender that is ACTIVE. Stopping a recommender halts billing and automatic retraining for the recommender.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { PersonalizeClient, StopRecommenderCommand } from "@aws-sdk/client-personalize"; // ES Modules import
 * // const { PersonalizeClient, StopRecommenderCommand } = require("@aws-sdk/client-personalize"); // CommonJS import
 * const client = new PersonalizeClient(config);
 * const input = { // StopRecommenderRequest
 *   recommenderArn: "STRING_VALUE", // required
 * };
 * const command = new StopRecommenderCommand(input);
 * const response = await client.send(command);
 * // { // StopRecommenderResponse
 * //   recommenderArn: "STRING_VALUE",
 * // };
 *
 * ```
 *
 * @param StopRecommenderCommandInput - {@link StopRecommenderCommandInput}
 * @returns {@link StopRecommenderCommandOutput}
 * @see {@link StopRecommenderCommandInput} for command's `input` shape.
 * @see {@link StopRecommenderCommandOutput} for command's `response` shape.
 * @see {@link PersonalizeClientResolvedConfig | config} for PersonalizeClient's `config` shape.
 *
 * @throws {@link InvalidInputException} (client fault)
 *  <p>Provide a valid value for the field or parameter.</p>
 *
 * @throws {@link ResourceInUseException} (client fault)
 *  <p>The specified resource is in use.</p>
 *
 * @throws {@link ResourceNotFoundException} (client fault)
 *  <p>Could not find the specified resource.</p>
 *
 * @throws {@link PersonalizeServiceException}
 * <p>Base exception class for all service exceptions from Personalize service.</p>
 *
 */
export declare class StopRecommenderCommand extends StopRecommenderCommand_base {
}
