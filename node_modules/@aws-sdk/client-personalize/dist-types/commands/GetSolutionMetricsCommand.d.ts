import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import { GetSolutionMetricsRequest, GetSolutionMetricsResponse } from "../models/models_0";
import { PersonalizeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../PersonalizeClient";
/**
 * @public
 */
export { __MetadataBearer, $Command };
/**
 * @public
 *
 * The input for {@link GetSolutionMetricsCommand}.
 */
export interface GetSolutionMetricsCommandInput extends GetSolutionMetricsRequest {
}
/**
 * @public
 *
 * The output of {@link GetSolutionMetricsCommand}.
 */
export interface GetSolutionMetricsCommandOutput extends GetSolutionMetricsResponse, __MetadataBearer {
}
declare const GetSolutionMetricsCommand_base: {
    new (input: GetSolutionMetricsCommandInput): import("@smithy/smithy-client").CommandImpl<GetSolutionMetricsCommandInput, GetSolutionMetricsCommandOutput, PersonalizeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    new (__0_0: GetSolutionMetricsCommandInput): import("@smithy/smithy-client").CommandImpl<GetSolutionMetricsCommandInput, GetSolutionMetricsCommandOutput, PersonalizeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
/**
 * <p>Gets the metrics for the specified solution version.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { PersonalizeClient, GetSolutionMetricsCommand } from "@aws-sdk/client-personalize"; // ES Modules import
 * // const { PersonalizeClient, GetSolutionMetricsCommand } = require("@aws-sdk/client-personalize"); // CommonJS import
 * const client = new PersonalizeClient(config);
 * const input = { // GetSolutionMetricsRequest
 *   solutionVersionArn: "STRING_VALUE", // required
 * };
 * const command = new GetSolutionMetricsCommand(input);
 * const response = await client.send(command);
 * // { // GetSolutionMetricsResponse
 * //   solutionVersionArn: "STRING_VALUE",
 * //   metrics: { // Metrics
 * //     "<keys>": Number("double"),
 * //   },
 * // };
 *
 * ```
 *
 * @param GetSolutionMetricsCommandInput - {@link GetSolutionMetricsCommandInput}
 * @returns {@link GetSolutionMetricsCommandOutput}
 * @see {@link GetSolutionMetricsCommandInput} for command's `input` shape.
 * @see {@link GetSolutionMetricsCommandOutput} for command's `response` shape.
 * @see {@link PersonalizeClientResolvedConfig | config} for PersonalizeClient's `config` shape.
 *
 * @throws {@link InvalidInputException} (client fault)
 *  <p>Provide a valid value for the field or parameter.</p>
 *
 * @throws {@link ResourceInUseException} (client fault)
 *  <p>The specified resource is in use.</p>
 *
 * @throws {@link ResourceNotFoundException} (client fault)
 *  <p>Could not find the specified resource.</p>
 *
 * @throws {@link PersonalizeServiceException}
 * <p>Base exception class for all service exceptions from Personalize service.</p>
 *
 * @public
 */
export declare class GetSolutionMetricsCommand extends GetSolutionMetricsCommand_base {
}
