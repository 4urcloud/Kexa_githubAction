import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import { DescribeFilterRequest, DescribeFilterResponse } from "../models/models_0";
import { PersonalizeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../PersonalizeClient";
/**
 * @public
 */
export { __MetadataBearer, $Command };
/**
 * @public
 *
 * The input for {@link DescribeFilterCommand}.
 */
export interface DescribeFilterCommandInput extends DescribeFilterRequest {
}
/**
 * @public
 *
 * The output of {@link DescribeFilterCommand}.
 */
export interface DescribeFilterCommandOutput extends DescribeFilterResponse, __MetadataBearer {
}
declare const DescribeFilterCommand_base: {
    new (input: DescribeFilterCommandInput): import("@smithy/smithy-client").CommandImpl<DescribeFilterCommandInput, DescribeFilterCommandOutput, PersonalizeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    new (__0_0: DescribeFilterCommandInput): import("@smithy/smithy-client").CommandImpl<DescribeFilterCommandInput, DescribeFilterCommandOutput, PersonalizeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
/**
 * <p>Describes a filter's properties.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { PersonalizeClient, DescribeFilterCommand } from "@aws-sdk/client-personalize"; // ES Modules import
 * // const { PersonalizeClient, DescribeFilterCommand } = require("@aws-sdk/client-personalize"); // CommonJS import
 * const client = new PersonalizeClient(config);
 * const input = { // DescribeFilterRequest
 *   filterArn: "STRING_VALUE", // required
 * };
 * const command = new DescribeFilterCommand(input);
 * const response = await client.send(command);
 * // { // DescribeFilterResponse
 * //   filter: { // Filter
 * //     name: "STRING_VALUE",
 * //     filterArn: "STRING_VALUE",
 * //     creationDateTime: new Date("TIMESTAMP"),
 * //     lastUpdatedDateTime: new Date("TIMESTAMP"),
 * //     datasetGroupArn: "STRING_VALUE",
 * //     failureReason: "STRING_VALUE",
 * //     filterExpression: "STRING_VALUE",
 * //     status: "STRING_VALUE",
 * //   },
 * // };
 *
 * ```
 *
 * @param DescribeFilterCommandInput - {@link DescribeFilterCommandInput}
 * @returns {@link DescribeFilterCommandOutput}
 * @see {@link DescribeFilterCommandInput} for command's `input` shape.
 * @see {@link DescribeFilterCommandOutput} for command's `response` shape.
 * @see {@link PersonalizeClientResolvedConfig | config} for PersonalizeClient's `config` shape.
 *
 * @throws {@link InvalidInputException} (client fault)
 *  <p>Provide a valid value for the field or parameter.</p>
 *
 * @throws {@link ResourceNotFoundException} (client fault)
 *  <p>Could not find the specified resource.</p>
 *
 * @throws {@link PersonalizeServiceException}
 * <p>Base exception class for all service exceptions from Personalize service.</p>
 *
 * @public
 */
export declare class DescribeFilterCommand extends DescribeFilterCommand_base {
}
