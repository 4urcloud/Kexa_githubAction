import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import { AlexaForBusinessClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../AlexaForBusinessClient";
import { DeleteSkillAuthorizationRequest, DeleteSkillAuthorizationResponse } from "../models/models_0";
/**
 * @public
 */
export { __MetadataBearer, $Command };
/**
 * @public
 *
 * The input for {@link DeleteSkillAuthorizationCommand}.
 */
export interface DeleteSkillAuthorizationCommandInput extends DeleteSkillAuthorizationRequest {
}
/**
 * @public
 *
 * The output of {@link DeleteSkillAuthorizationCommand}.
 */
export interface DeleteSkillAuthorizationCommandOutput extends DeleteSkillAuthorizationResponse, __MetadataBearer {
}
declare const DeleteSkillAuthorizationCommand_base: {
    new (input: DeleteSkillAuthorizationCommandInput): import("@smithy/smithy-client").CommandImpl<DeleteSkillAuthorizationCommandInput, DeleteSkillAuthorizationCommandOutput, AlexaForBusinessClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    new (__0_0: DeleteSkillAuthorizationCommandInput): import("@smithy/smithy-client").CommandImpl<DeleteSkillAuthorizationCommandInput, DeleteSkillAuthorizationCommandOutput, AlexaForBusinessClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
/**
 * <p>Unlinks a third-party account from a skill.</p>
 *
 * @deprecated Alexa For Business is no longer supported
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { AlexaForBusinessClient, DeleteSkillAuthorizationCommand } from "@aws-sdk/client-alexa-for-business"; // ES Modules import
 * // const { AlexaForBusinessClient, DeleteSkillAuthorizationCommand } = require("@aws-sdk/client-alexa-for-business"); // CommonJS import
 * const client = new AlexaForBusinessClient(config);
 * const input = { // DeleteSkillAuthorizationRequest
 *   SkillId: "STRING_VALUE", // required
 *   RoomArn: "STRING_VALUE",
 * };
 * const command = new DeleteSkillAuthorizationCommand(input);
 * const response = await client.send(command);
 * // {};
 *
 * ```
 *
 * @param DeleteSkillAuthorizationCommandInput - {@link DeleteSkillAuthorizationCommandInput}
 * @returns {@link DeleteSkillAuthorizationCommandOutput}
 * @see {@link DeleteSkillAuthorizationCommandInput} for command's `input` shape.
 * @see {@link DeleteSkillAuthorizationCommandOutput} for command's `response` shape.
 * @see {@link AlexaForBusinessClientResolvedConfig | config} for AlexaForBusinessClient's `config` shape.
 *
 * @throws {@link ConcurrentModificationException} (client fault)
 *  <p>There is a concurrent modification of resources.</p>
 *
 * @throws {@link NotFoundException} (client fault)
 *  <p>The resource is not found.</p>
 *
 * @throws {@link AlexaForBusinessServiceException}
 * <p>Base exception class for all service exceptions from AlexaForBusiness service.</p>
 *
 * @public
 */
export declare class DeleteSkillAuthorizationCommand extends DeleteSkillAuthorizationCommand_base {
}
