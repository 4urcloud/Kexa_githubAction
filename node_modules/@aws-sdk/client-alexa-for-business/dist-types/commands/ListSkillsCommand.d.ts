import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import { AlexaForBusinessClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../AlexaForBusinessClient";
import { ListSkillsRequest, ListSkillsResponse } from "../models/models_0";
/**
 * @public
 */
export { __MetadataBearer, $Command };
/**
 * @public
 *
 * The input for {@link ListSkillsCommand}.
 */
export interface ListSkillsCommandInput extends ListSkillsRequest {
}
/**
 * @public
 *
 * The output of {@link ListSkillsCommand}.
 */
export interface ListSkillsCommandOutput extends ListSkillsResponse, __MetadataBearer {
}
declare const ListSkillsCommand_base: {
    new (input: ListSkillsCommandInput): import("@smithy/smithy-client").CommandImpl<ListSkillsCommandInput, ListSkillsCommandOutput, AlexaForBusinessClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    new (...[input]: [] | [ListSkillsCommandInput]): import("@smithy/smithy-client").CommandImpl<ListSkillsCommandInput, ListSkillsCommandOutput, AlexaForBusinessClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
/**
 * <p>Lists all enabled skills in a specific skill group.</p>
 *
 * @deprecated Alexa For Business is no longer supported
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { AlexaForBusinessClient, ListSkillsCommand } from "@aws-sdk/client-alexa-for-business"; // ES Modules import
 * // const { AlexaForBusinessClient, ListSkillsCommand } = require("@aws-sdk/client-alexa-for-business"); // CommonJS import
 * const client = new AlexaForBusinessClient(config);
 * const input = { // ListSkillsRequest
 *   SkillGroupArn: "STRING_VALUE",
 *   EnablementType: "ENABLED" || "PENDING",
 *   SkillType: "PUBLIC" || "PRIVATE" || "ALL",
 *   NextToken: "STRING_VALUE",
 *   MaxResults: Number("int"),
 * };
 * const command = new ListSkillsCommand(input);
 * const response = await client.send(command);
 * // { // ListSkillsResponse
 * //   SkillSummaries: [ // SkillSummaryList
 * //     { // SkillSummary
 * //       SkillId: "STRING_VALUE",
 * //       SkillName: "STRING_VALUE",
 * //       SupportsLinking: true || false,
 * //       EnablementType: "ENABLED" || "PENDING",
 * //       SkillType: "PUBLIC" || "PRIVATE",
 * //     },
 * //   ],
 * //   NextToken: "STRING_VALUE",
 * // };
 *
 * ```
 *
 * @param ListSkillsCommandInput - {@link ListSkillsCommandInput}
 * @returns {@link ListSkillsCommandOutput}
 * @see {@link ListSkillsCommandInput} for command's `input` shape.
 * @see {@link ListSkillsCommandOutput} for command's `response` shape.
 * @see {@link AlexaForBusinessClientResolvedConfig | config} for AlexaForBusinessClient's `config` shape.
 *
 * @throws {@link AlexaForBusinessServiceException}
 * <p>Base exception class for all service exceptions from AlexaForBusiness service.</p>
 *
 * @public
 */
export declare class ListSkillsCommand extends ListSkillsCommand_base {
}
