import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import { AlexaForBusinessClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../AlexaForBusinessClient";
import { PutSkillAuthorizationRequest, PutSkillAuthorizationResponse } from "../models/models_0";
/**
 * @public
 */
export { __MetadataBearer, $Command };
/**
 * @public
 *
 * The input for {@link PutSkillAuthorizationCommand}.
 */
export interface PutSkillAuthorizationCommandInput extends PutSkillAuthorizationRequest {
}
/**
 * @public
 *
 * The output of {@link PutSkillAuthorizationCommand}.
 */
export interface PutSkillAuthorizationCommandOutput extends PutSkillAuthorizationResponse, __MetadataBearer {
}
declare const PutSkillAuthorizationCommand_base: {
    new (input: PutSkillAuthorizationCommandInput): import("@smithy/smithy-client").CommandImpl<PutSkillAuthorizationCommandInput, PutSkillAuthorizationCommandOutput, AlexaForBusinessClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    new (__0_0: PutSkillAuthorizationCommandInput): import("@smithy/smithy-client").CommandImpl<PutSkillAuthorizationCommandInput, PutSkillAuthorizationCommandOutput, AlexaForBusinessClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
/**
 * <p>Links a user's account to a third-party skill provider. If this API operation is
 *          called by an assumed IAM role, the skill being linked must be a private skill. Also, the
 *          skill must be owned by the AWS account that assumed the IAM role.</p>
 *
 * @deprecated Alexa For Business is no longer supported
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { AlexaForBusinessClient, PutSkillAuthorizationCommand } from "@aws-sdk/client-alexa-for-business"; // ES Modules import
 * // const { AlexaForBusinessClient, PutSkillAuthorizationCommand } = require("@aws-sdk/client-alexa-for-business"); // CommonJS import
 * const client = new AlexaForBusinessClient(config);
 * const input = { // PutSkillAuthorizationRequest
 *   AuthorizationResult: { // AuthorizationResult // required
 *     "<keys>": "STRING_VALUE",
 *   },
 *   SkillId: "STRING_VALUE", // required
 *   RoomArn: "STRING_VALUE",
 * };
 * const command = new PutSkillAuthorizationCommand(input);
 * const response = await client.send(command);
 * // {};
 *
 * ```
 *
 * @param PutSkillAuthorizationCommandInput - {@link PutSkillAuthorizationCommandInput}
 * @returns {@link PutSkillAuthorizationCommandOutput}
 * @see {@link PutSkillAuthorizationCommandInput} for command's `input` shape.
 * @see {@link PutSkillAuthorizationCommandOutput} for command's `response` shape.
 * @see {@link AlexaForBusinessClientResolvedConfig | config} for AlexaForBusinessClient's `config` shape.
 *
 * @throws {@link ConcurrentModificationException} (client fault)
 *  <p>There is a concurrent modification of resources.</p>
 *
 * @throws {@link UnauthorizedException} (client fault)
 *  <p>The caller has no permissions to operate on the resource involved in the API call.</p>
 *
 * @throws {@link AlexaForBusinessServiceException}
 * <p>Base exception class for all service exceptions from AlexaForBusiness service.</p>
 *
 * @public
 */
export declare class PutSkillAuthorizationCommand extends PutSkillAuthorizationCommand_base {
}
