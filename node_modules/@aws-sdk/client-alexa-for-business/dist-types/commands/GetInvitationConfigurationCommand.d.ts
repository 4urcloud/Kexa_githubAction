import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import { AlexaForBusinessClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../AlexaForBusinessClient";
import { GetInvitationConfigurationRequest, GetInvitationConfigurationResponse } from "../models/models_0";
/**
 * @public
 */
export { __MetadataBearer, $Command };
/**
 * @public
 *
 * The input for {@link GetInvitationConfigurationCommand}.
 */
export interface GetInvitationConfigurationCommandInput extends GetInvitationConfigurationRequest {
}
/**
 * @public
 *
 * The output of {@link GetInvitationConfigurationCommand}.
 */
export interface GetInvitationConfigurationCommandOutput extends GetInvitationConfigurationResponse, __MetadataBearer {
}
declare const GetInvitationConfigurationCommand_base: {
    new (input: GetInvitationConfigurationCommandInput): import("@smithy/smithy-client").CommandImpl<GetInvitationConfigurationCommandInput, GetInvitationConfigurationCommandOutput, AlexaForBusinessClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    new (...[input]: [] | [GetInvitationConfigurationCommandInput]): import("@smithy/smithy-client").CommandImpl<GetInvitationConfigurationCommandInput, GetInvitationConfigurationCommandOutput, AlexaForBusinessClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
/**
 * <p>Retrieves the configured values for the user enrollment invitation email
 *          template.</p>
 *
 * @deprecated Alexa For Business is no longer supported
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { AlexaForBusinessClient, GetInvitationConfigurationCommand } from "@aws-sdk/client-alexa-for-business"; // ES Modules import
 * // const { AlexaForBusinessClient, GetInvitationConfigurationCommand } = require("@aws-sdk/client-alexa-for-business"); // CommonJS import
 * const client = new AlexaForBusinessClient(config);
 * const input = {};
 * const command = new GetInvitationConfigurationCommand(input);
 * const response = await client.send(command);
 * // { // GetInvitationConfigurationResponse
 * //   OrganizationName: "STRING_VALUE",
 * //   ContactEmail: "STRING_VALUE",
 * //   PrivateSkillIds: [ // ShortSkillIdList
 * //     "STRING_VALUE",
 * //   ],
 * // };
 *
 * ```
 *
 * @param GetInvitationConfigurationCommandInput - {@link GetInvitationConfigurationCommandInput}
 * @returns {@link GetInvitationConfigurationCommandOutput}
 * @see {@link GetInvitationConfigurationCommandInput} for command's `input` shape.
 * @see {@link GetInvitationConfigurationCommandOutput} for command's `response` shape.
 * @see {@link AlexaForBusinessClientResolvedConfig | config} for AlexaForBusinessClient's `config` shape.
 *
 * @throws {@link NotFoundException} (client fault)
 *  <p>The resource is not found.</p>
 *
 * @throws {@link AlexaForBusinessServiceException}
 * <p>Base exception class for all service exceptions from AlexaForBusiness service.</p>
 *
 * @public
 */
export declare class GetInvitationConfigurationCommand extends GetInvitationConfigurationCommand_base {
}
