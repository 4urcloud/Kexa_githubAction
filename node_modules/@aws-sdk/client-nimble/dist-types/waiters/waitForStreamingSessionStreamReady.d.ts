import { WaiterConfiguration, WaiterResult } from "@smithy/util-waiter";
import { GetStreamingSessionStreamCommandInput } from "../commands/GetStreamingSessionStreamCommand";
import { NimbleClient } from "../NimbleClient";
/**
 * Wait until a StreamingSessionStream is ready. Use this after invoking CreateStreamingSessionStream
 *  @deprecated Use waitUntilStreamingSessionStreamReady instead. waitForStreamingSessionStreamReady does not throw error in non-success cases.
 */
export declare const waitForStreamingSessionStreamReady: (params: WaiterConfiguration<NimbleClient>, input: GetStreamingSessionStreamCommandInput) => Promise<WaiterResult>;
/**
 * Wait until a StreamingSessionStream is ready. Use this after invoking CreateStreamingSessionStream
 *  @param params - Waiter configuration options.
 *  @param input - The input to GetStreamingSessionStreamCommand for polling.
 */
export declare const waitUntilStreamingSessionStreamReady: (params: WaiterConfiguration<NimbleClient>, input: GetStreamingSessionStreamCommandInput) => Promise<WaiterResult>;
