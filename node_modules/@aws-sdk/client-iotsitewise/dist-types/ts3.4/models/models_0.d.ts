import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { IoTSiteWiseServiceException as __BaseException } from "./IoTSiteWiseServiceException";
export declare class AccessDeniedException extends __BaseException {
  readonly name: "AccessDeniedException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<AccessDeniedException, __BaseException>
  );
}
export interface GroupIdentity {
  id: string | undefined;
}
export interface IAMRoleIdentity {
  arn: string | undefined;
}
export interface IAMUserIdentity {
  arn: string | undefined;
}
export interface UserIdentity {
  id: string | undefined;
}
export interface Identity {
  user?: UserIdentity;
  group?: GroupIdentity;
  iamUser?: IAMUserIdentity;
  iamRole?: IAMRoleIdentity;
}
export declare const Permission: {
  readonly ADMINISTRATOR: "ADMINISTRATOR";
  readonly VIEWER: "VIEWER";
};
export type Permission = (typeof Permission)[keyof typeof Permission];
export interface PortalResource {
  id: string | undefined;
}
export interface ProjectResource {
  id: string | undefined;
}
export interface Resource {
  portal?: PortalResource;
  project?: ProjectResource;
}
export interface AccessPolicySummary {
  id: string | undefined;
  identity: Identity | undefined;
  resource: Resource | undefined;
  permission: Permission | undefined;
  creationDate?: Date;
  lastUpdateDate?: Date;
}
export interface ActionDefinition {
  actionDefinitionId: string | undefined;
  actionName: string | undefined;
  actionType: string | undefined;
}
export interface ActionPayload {
  stringValue: string | undefined;
}
export interface TargetResource {
  assetId: string | undefined;
}
export interface ActionSummary {
  actionId?: string;
  actionDefinitionId?: string;
  targetResource?: TargetResource;
}
export declare const Quality: {
  readonly BAD: "BAD";
  readonly GOOD: "GOOD";
  readonly UNCERTAIN: "UNCERTAIN";
};
export type Quality = (typeof Quality)[keyof typeof Quality];
export interface Aggregates {
  average?: number;
  count?: number;
  maximum?: number;
  minimum?: number;
  sum?: number;
  standardDeviation?: number;
}
export interface AggregatedValue {
  timestamp: Date | undefined;
  quality?: Quality;
  value: Aggregates | undefined;
}
export declare const AggregateType: {
  readonly AVERAGE: "AVERAGE";
  readonly COUNT: "COUNT";
  readonly MAXIMUM: "MAXIMUM";
  readonly MINIMUM: "MINIMUM";
  readonly STANDARD_DEVIATION: "STANDARD_DEVIATION";
  readonly SUM: "SUM";
};
export type AggregateType = (typeof AggregateType)[keyof typeof AggregateType];
export interface Alarms {
  alarmRoleArn: string | undefined;
  notificationLambdaArn?: string;
}
export declare const PropertyDataType: {
  readonly BOOLEAN: "BOOLEAN";
  readonly DOUBLE: "DOUBLE";
  readonly INTEGER: "INTEGER";
  readonly STRING: "STRING";
  readonly STRUCT: "STRUCT";
};
export type PropertyDataType =
  (typeof PropertyDataType)[keyof typeof PropertyDataType];
export declare const PropertyNotificationState: {
  readonly DISABLED: "DISABLED";
  readonly ENABLED: "ENABLED";
};
export type PropertyNotificationState =
  (typeof PropertyNotificationState)[keyof typeof PropertyNotificationState];
export interface PropertyNotification {
  topic: string | undefined;
  state: PropertyNotificationState | undefined;
}
export interface AssetPropertyPathSegment {
  id?: string;
  name?: string;
}
export interface AssetProperty {
  id: string | undefined;
  name: string | undefined;
  alias?: string;
  notification?: PropertyNotification;
  dataType: PropertyDataType | undefined;
  dataTypeSpec?: string;
  unit?: string;
  path?: AssetPropertyPathSegment[];
  externalId?: string;
}
export interface AssetCompositeModel {
  name: string | undefined;
  description?: string;
  type: string | undefined;
  properties: AssetProperty[] | undefined;
  id?: string;
  externalId?: string;
}
export interface AssetCompositeModelPathSegment {
  id?: string;
  name?: string;
}
export interface AssetCompositeModelSummary {
  id: string | undefined;
  externalId?: string;
  name: string | undefined;
  type: string | undefined;
  description: string | undefined;
  path: AssetCompositeModelPathSegment[] | undefined;
}
export declare const AssetErrorCode: {
  readonly INTERNAL_FAILURE: "INTERNAL_FAILURE";
};
export type AssetErrorCode =
  (typeof AssetErrorCode)[keyof typeof AssetErrorCode];
export interface AssetErrorDetails {
  assetId: string | undefined;
  code: AssetErrorCode | undefined;
  message: string | undefined;
}
export interface AssetHierarchy {
  id?: string;
  name: string | undefined;
  externalId?: string;
}
export interface AssetHierarchyInfo {
  parentAssetId?: string;
  childAssetId?: string;
}
export interface AssetModelPropertyPathSegment {
  id?: string;
  name?: string;
}
export interface Attribute {
  defaultValue?: string;
}
export declare const ForwardingConfigState: {
  readonly DISABLED: "DISABLED";
  readonly ENABLED: "ENABLED";
};
export type ForwardingConfigState =
  (typeof ForwardingConfigState)[keyof typeof ForwardingConfigState];
export interface ForwardingConfig {
  state: ForwardingConfigState | undefined;
}
export interface MeasurementProcessingConfig {
  forwardingConfig: ForwardingConfig | undefined;
}
export interface Measurement {
  processingConfig?: MeasurementProcessingConfig;
}
export declare const ComputeLocation: {
  readonly CLOUD: "CLOUD";
  readonly EDGE: "EDGE";
};
export type ComputeLocation =
  (typeof ComputeLocation)[keyof typeof ComputeLocation];
export interface MetricProcessingConfig {
  computeLocation: ComputeLocation | undefined;
}
export interface VariableValue {
  propertyId?: string;
  hierarchyId?: string;
  propertyPath?: AssetModelPropertyPathSegment[];
}
export interface ExpressionVariable {
  name: string | undefined;
  value: VariableValue | undefined;
}
export interface TumblingWindow {
  interval: string | undefined;
  offset?: string;
}
export interface MetricWindow {
  tumbling?: TumblingWindow;
}
export interface Metric {
  expression: string | undefined;
  variables: ExpressionVariable[] | undefined;
  window: MetricWindow | undefined;
  processingConfig?: MetricProcessingConfig;
}
export interface TransformProcessingConfig {
  computeLocation: ComputeLocation | undefined;
  forwardingConfig?: ForwardingConfig;
}
export interface Transform {
  expression: string | undefined;
  variables: ExpressionVariable[] | undefined;
  processingConfig?: TransformProcessingConfig;
}
export interface PropertyType {
  attribute?: Attribute;
  measurement?: Measurement;
  transform?: Transform;
  metric?: Metric;
}
export interface AssetModelProperty {
  id?: string;
  name: string | undefined;
  dataType: PropertyDataType | undefined;
  dataTypeSpec?: string;
  unit?: string;
  type: PropertyType | undefined;
  path?: AssetModelPropertyPathSegment[];
  externalId?: string;
}
export interface AssetModelCompositeModel {
  name: string | undefined;
  description?: string;
  type: string | undefined;
  properties?: AssetModelProperty[];
  id?: string;
  externalId?: string;
}
export interface AssetModelPropertyDefinition {
  name: string | undefined;
  dataType: PropertyDataType | undefined;
  dataTypeSpec?: string;
  unit?: string;
  type: PropertyType | undefined;
  id?: string;
  externalId?: string;
}
export interface AssetModelCompositeModelDefinition {
  name: string | undefined;
  description?: string;
  type: string | undefined;
  properties?: AssetModelPropertyDefinition[];
  id?: string;
  externalId?: string;
}
export interface AssetModelCompositeModelPathSegment {
  id?: string;
  name?: string;
}
export interface AssetModelCompositeModelSummary {
  id: string | undefined;
  externalId?: string;
  name: string | undefined;
  type: string | undefined;
  description?: string;
  path?: AssetModelCompositeModelPathSegment[];
}
export interface AssetModelHierarchy {
  id?: string;
  name: string | undefined;
  childAssetModelId: string | undefined;
  externalId?: string;
}
export interface AssetModelHierarchyDefinition {
  name: string | undefined;
  childAssetModelId: string | undefined;
  id?: string;
  externalId?: string;
}
export interface AssetModelPropertySummary {
  id?: string;
  name: string | undefined;
  dataType: PropertyDataType | undefined;
  dataTypeSpec?: string;
  unit?: string;
  type: PropertyType | undefined;
  assetModelCompositeModelId?: string;
  path?: AssetModelPropertyPathSegment[];
  externalId?: string;
}
export declare const AssetModelState: {
  readonly ACTIVE: "ACTIVE";
  readonly CREATING: "CREATING";
  readonly DELETING: "DELETING";
  readonly FAILED: "FAILED";
  readonly PROPAGATING: "PROPAGATING";
  readonly UPDATING: "UPDATING";
};
export type AssetModelState =
  (typeof AssetModelState)[keyof typeof AssetModelState];
export declare const ErrorCode: {
  readonly INTERNAL_FAILURE: "INTERNAL_FAILURE";
  readonly VALIDATION_ERROR: "VALIDATION_ERROR";
};
export type ErrorCode = (typeof ErrorCode)[keyof typeof ErrorCode];
export declare const DetailedErrorCode: {
  readonly INCOMPATIBLE_COMPUTE_LOCATION: "INCOMPATIBLE_COMPUTE_LOCATION";
  readonly INCOMPATIBLE_FORWARDING_CONFIGURATION: "INCOMPATIBLE_FORWARDING_CONFIGURATION";
};
export type DetailedErrorCode =
  (typeof DetailedErrorCode)[keyof typeof DetailedErrorCode];
export interface DetailedError {
  code: DetailedErrorCode | undefined;
  message: string | undefined;
}
export interface ErrorDetails {
  code: ErrorCode | undefined;
  message: string | undefined;
  details?: DetailedError[];
}
export interface AssetModelStatus {
  state: AssetModelState | undefined;
  error?: ErrorDetails;
}
export declare const AssetModelType: {
  readonly ASSET_MODEL: "ASSET_MODEL";
  readonly COMPONENT_MODEL: "COMPONENT_MODEL";
};
export type AssetModelType =
  (typeof AssetModelType)[keyof typeof AssetModelType];
export interface AssetModelSummary {
  id: string | undefined;
  arn: string | undefined;
  name: string | undefined;
  description: string | undefined;
  creationDate: Date | undefined;
  lastUpdateDate: Date | undefined;
  status: AssetModelStatus | undefined;
  assetModelType?: AssetModelType;
  externalId?: string;
}
export interface AssetPropertySummary {
  id: string | undefined;
  alias?: string;
  unit?: string;
  notification?: PropertyNotification;
  assetCompositeModelId?: string;
  path?: AssetPropertyPathSegment[];
  externalId?: string;
}
export interface TimeInNanos {
  timeInSeconds: number | undefined;
  offsetInNanos?: number;
}
export interface Variant {
  stringValue?: string;
  integerValue?: number;
  doubleValue?: number;
  booleanValue?: boolean;
}
export interface AssetPropertyValue {
  value: Variant | undefined;
  timestamp: TimeInNanos | undefined;
  quality?: Quality;
}
export declare const AssetRelationshipType: {
  readonly HIERARCHY: "HIERARCHY";
};
export type AssetRelationshipType =
  (typeof AssetRelationshipType)[keyof typeof AssetRelationshipType];
export interface AssetRelationshipSummary {
  hierarchyInfo?: AssetHierarchyInfo;
  relationshipType: AssetRelationshipType | undefined;
}
export declare const AssetState: {
  readonly ACTIVE: "ACTIVE";
  readonly CREATING: "CREATING";
  readonly DELETING: "DELETING";
  readonly FAILED: "FAILED";
  readonly UPDATING: "UPDATING";
};
export type AssetState = (typeof AssetState)[keyof typeof AssetState];
export interface AssetStatus {
  state: AssetState | undefined;
  error?: ErrorDetails;
}
export interface AssetSummary {
  id: string | undefined;
  arn: string | undefined;
  name: string | undefined;
  assetModelId: string | undefined;
  creationDate: Date | undefined;
  lastUpdateDate: Date | undefined;
  status: AssetStatus | undefined;
  hierarchies: AssetHierarchy[] | undefined;
  description?: string;
  externalId?: string;
}
export interface AssociateAssetsRequest {
  assetId: string | undefined;
  hierarchyId: string | undefined;
  childAssetId: string | undefined;
  clientToken?: string;
}
export declare class ConflictingOperationException extends __BaseException {
  readonly name: "ConflictingOperationException";
  readonly $fault: "client";
  resourceId: string | undefined;
  resourceArn: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ConflictingOperationException, __BaseException>
  );
}
export declare class InternalFailureException extends __BaseException {
  readonly name: "InternalFailureException";
  readonly $fault: "server";
  constructor(
    opts: __ExceptionOptionType<InternalFailureException, __BaseException>
  );
}
export declare class InvalidRequestException extends __BaseException {
  readonly name: "InvalidRequestException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidRequestException, __BaseException>
  );
}
export declare class LimitExceededException extends __BaseException {
  readonly name: "LimitExceededException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<LimitExceededException, __BaseException>
  );
}
export declare class ResourceAlreadyExistsException extends __BaseException {
  readonly name: "ResourceAlreadyExistsException";
  readonly $fault: "client";
  resourceId: string | undefined;
  resourceArn: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ResourceAlreadyExistsException, __BaseException>
  );
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export declare class ThrottlingException extends __BaseException {
  readonly name: "ThrottlingException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ThrottlingException, __BaseException>
  );
}
export interface AssociatedAssetsSummary {
  id: string | undefined;
  arn: string | undefined;
  name: string | undefined;
  assetModelId: string | undefined;
  creationDate: Date | undefined;
  lastUpdateDate: Date | undefined;
  status: AssetStatus | undefined;
  hierarchies: AssetHierarchy[] | undefined;
  description?: string;
  externalId?: string;
}
export interface AssociateTimeSeriesToAssetPropertyRequest {
  alias: string | undefined;
  assetId: string | undefined;
  propertyId: string | undefined;
  clientToken?: string;
}
export declare const AuthMode: {
  readonly IAM: "IAM";
  readonly SSO: "SSO";
};
export type AuthMode = (typeof AuthMode)[keyof typeof AuthMode];
export interface BatchAssociateProjectAssetsRequest {
  projectId: string | undefined;
  assetIds: string[] | undefined;
  clientToken?: string;
}
export interface BatchAssociateProjectAssetsResponse {
  errors?: AssetErrorDetails[];
}
export interface BatchDisassociateProjectAssetsRequest {
  projectId: string | undefined;
  assetIds: string[] | undefined;
  clientToken?: string;
}
export interface BatchDisassociateProjectAssetsResponse {
  errors?: AssetErrorDetails[];
}
export declare const TimeOrdering: {
  readonly ASCENDING: "ASCENDING";
  readonly DESCENDING: "DESCENDING";
};
export type TimeOrdering = (typeof TimeOrdering)[keyof typeof TimeOrdering];
export interface BatchGetAssetPropertyAggregatesEntry {
  entryId: string | undefined;
  assetId?: string;
  propertyId?: string;
  propertyAlias?: string;
  aggregateTypes: AggregateType[] | undefined;
  resolution: string | undefined;
  startDate: Date | undefined;
  endDate: Date | undefined;
  qualities?: Quality[];
  timeOrdering?: TimeOrdering;
}
export interface BatchGetAssetPropertyAggregatesRequest {
  entries: BatchGetAssetPropertyAggregatesEntry[] | undefined;
  nextToken?: string;
  maxResults?: number;
}
export declare const BatchGetAssetPropertyAggregatesErrorCode: {
  readonly AccessDeniedException: "AccessDeniedException";
  readonly InvalidRequestException: "InvalidRequestException";
  readonly ResourceNotFoundException: "ResourceNotFoundException";
};
export type BatchGetAssetPropertyAggregatesErrorCode =
  (typeof BatchGetAssetPropertyAggregatesErrorCode)[keyof typeof BatchGetAssetPropertyAggregatesErrorCode];
export interface BatchGetAssetPropertyAggregatesErrorEntry {
  errorCode: BatchGetAssetPropertyAggregatesErrorCode | undefined;
  errorMessage: string | undefined;
  entryId: string | undefined;
}
export declare const BatchEntryCompletionStatus: {
  readonly ERROR: "ERROR";
  readonly SUCCESS: "SUCCESS";
};
export type BatchEntryCompletionStatus =
  (typeof BatchEntryCompletionStatus)[keyof typeof BatchEntryCompletionStatus];
export interface BatchGetAssetPropertyAggregatesErrorInfo {
  errorCode: BatchGetAssetPropertyAggregatesErrorCode | undefined;
  errorTimestamp: Date | undefined;
}
export interface BatchGetAssetPropertyAggregatesSkippedEntry {
  entryId: string | undefined;
  completionStatus: BatchEntryCompletionStatus | undefined;
  errorInfo?: BatchGetAssetPropertyAggregatesErrorInfo;
}
export interface BatchGetAssetPropertyAggregatesSuccessEntry {
  entryId: string | undefined;
  aggregatedValues: AggregatedValue[] | undefined;
}
export interface BatchGetAssetPropertyAggregatesResponse {
  errorEntries: BatchGetAssetPropertyAggregatesErrorEntry[] | undefined;
  successEntries: BatchGetAssetPropertyAggregatesSuccessEntry[] | undefined;
  skippedEntries: BatchGetAssetPropertyAggregatesSkippedEntry[] | undefined;
  nextToken?: string;
}
export declare class ServiceUnavailableException extends __BaseException {
  readonly name: "ServiceUnavailableException";
  readonly $fault: "server";
  constructor(
    opts: __ExceptionOptionType<ServiceUnavailableException, __BaseException>
  );
}
export interface BatchGetAssetPropertyValueEntry {
  entryId: string | undefined;
  assetId?: string;
  propertyId?: string;
  propertyAlias?: string;
}
export interface BatchGetAssetPropertyValueRequest {
  entries: BatchGetAssetPropertyValueEntry[] | undefined;
  nextToken?: string;
}
export declare const BatchGetAssetPropertyValueErrorCode: {
  readonly AccessDeniedException: "AccessDeniedException";
  readonly InvalidRequestException: "InvalidRequestException";
  readonly ResourceNotFoundException: "ResourceNotFoundException";
};
export type BatchGetAssetPropertyValueErrorCode =
  (typeof BatchGetAssetPropertyValueErrorCode)[keyof typeof BatchGetAssetPropertyValueErrorCode];
export interface BatchGetAssetPropertyValueErrorEntry {
  errorCode: BatchGetAssetPropertyValueErrorCode | undefined;
  errorMessage: string | undefined;
  entryId: string | undefined;
}
export interface BatchGetAssetPropertyValueErrorInfo {
  errorCode: BatchGetAssetPropertyValueErrorCode | undefined;
  errorTimestamp: Date | undefined;
}
export interface BatchGetAssetPropertyValueSkippedEntry {
  entryId: string | undefined;
  completionStatus: BatchEntryCompletionStatus | undefined;
  errorInfo?: BatchGetAssetPropertyValueErrorInfo;
}
export interface BatchGetAssetPropertyValueSuccessEntry {
  entryId: string | undefined;
  assetPropertyValue?: AssetPropertyValue;
}
export interface BatchGetAssetPropertyValueResponse {
  errorEntries: BatchGetAssetPropertyValueErrorEntry[] | undefined;
  successEntries: BatchGetAssetPropertyValueSuccessEntry[] | undefined;
  skippedEntries: BatchGetAssetPropertyValueSkippedEntry[] | undefined;
  nextToken?: string;
}
export interface BatchGetAssetPropertyValueHistoryEntry {
  entryId: string | undefined;
  assetId?: string;
  propertyId?: string;
  propertyAlias?: string;
  startDate?: Date;
  endDate?: Date;
  qualities?: Quality[];
  timeOrdering?: TimeOrdering;
}
export interface BatchGetAssetPropertyValueHistoryRequest {
  entries: BatchGetAssetPropertyValueHistoryEntry[] | undefined;
  nextToken?: string;
  maxResults?: number;
}
export declare const BatchGetAssetPropertyValueHistoryErrorCode: {
  readonly AccessDeniedException: "AccessDeniedException";
  readonly InvalidRequestException: "InvalidRequestException";
  readonly ResourceNotFoundException: "ResourceNotFoundException";
};
export type BatchGetAssetPropertyValueHistoryErrorCode =
  (typeof BatchGetAssetPropertyValueHistoryErrorCode)[keyof typeof BatchGetAssetPropertyValueHistoryErrorCode];
export interface BatchGetAssetPropertyValueHistoryErrorEntry {
  errorCode: BatchGetAssetPropertyValueHistoryErrorCode | undefined;
  errorMessage: string | undefined;
  entryId: string | undefined;
}
export interface BatchGetAssetPropertyValueHistoryErrorInfo {
  errorCode: BatchGetAssetPropertyValueHistoryErrorCode | undefined;
  errorTimestamp: Date | undefined;
}
export interface BatchGetAssetPropertyValueHistorySkippedEntry {
  entryId: string | undefined;
  completionStatus: BatchEntryCompletionStatus | undefined;
  errorInfo?: BatchGetAssetPropertyValueHistoryErrorInfo;
}
export interface BatchGetAssetPropertyValueHistorySuccessEntry {
  entryId: string | undefined;
  assetPropertyValueHistory: AssetPropertyValue[] | undefined;
}
export interface BatchGetAssetPropertyValueHistoryResponse {
  errorEntries: BatchGetAssetPropertyValueHistoryErrorEntry[] | undefined;
  successEntries: BatchGetAssetPropertyValueHistorySuccessEntry[] | undefined;
  skippedEntries: BatchGetAssetPropertyValueHistorySkippedEntry[] | undefined;
  nextToken?: string;
}
export interface PutAssetPropertyValueEntry {
  entryId: string | undefined;
  assetId?: string;
  propertyId?: string;
  propertyAlias?: string;
  propertyValues: AssetPropertyValue[] | undefined;
}
export interface BatchPutAssetPropertyValueRequest {
  entries: PutAssetPropertyValueEntry[] | undefined;
}
export declare const BatchPutAssetPropertyValueErrorCode: {
  readonly AccessDeniedException: "AccessDeniedException";
  readonly ConflictingOperationException: "ConflictingOperationException";
  readonly InternalFailureException: "InternalFailureException";
  readonly InvalidRequestException: "InvalidRequestException";
  readonly LimitExceededException: "LimitExceededException";
  readonly ResourceNotFoundException: "ResourceNotFoundException";
  readonly ServiceUnavailableException: "ServiceUnavailableException";
  readonly ThrottlingException: "ThrottlingException";
  readonly TimestampOutOfRangeException: "TimestampOutOfRangeException";
};
export type BatchPutAssetPropertyValueErrorCode =
  (typeof BatchPutAssetPropertyValueErrorCode)[keyof typeof BatchPutAssetPropertyValueErrorCode];
export interface BatchPutAssetPropertyError {
  errorCode: BatchPutAssetPropertyValueErrorCode | undefined;
  errorMessage: string | undefined;
  timestamps: TimeInNanos[] | undefined;
}
export interface BatchPutAssetPropertyErrorEntry {
  entryId: string | undefined;
  errors: BatchPutAssetPropertyError[] | undefined;
}
export interface BatchPutAssetPropertyValueResponse {
  errorEntries: BatchPutAssetPropertyErrorEntry[] | undefined;
}
export interface CreateAccessPolicyRequest {
  accessPolicyIdentity: Identity | undefined;
  accessPolicyResource: Resource | undefined;
  accessPolicyPermission: Permission | undefined;
  clientToken?: string;
  tags?: Record<string, string>;
}
export interface CreateAccessPolicyResponse {
  accessPolicyId: string | undefined;
  accessPolicyArn: string | undefined;
}
export interface CreateAssetRequest {
  assetName: string | undefined;
  assetModelId: string | undefined;
  clientToken?: string;
  tags?: Record<string, string>;
  assetDescription?: string;
  assetId?: string;
  assetExternalId?: string;
}
export interface CreateAssetResponse {
  assetId: string | undefined;
  assetArn: string | undefined;
  assetStatus: AssetStatus | undefined;
}
export interface CreateAssetModelRequest {
  assetModelName: string | undefined;
  assetModelDescription?: string;
  assetModelProperties?: AssetModelPropertyDefinition[];
  assetModelHierarchies?: AssetModelHierarchyDefinition[];
  assetModelCompositeModels?: AssetModelCompositeModelDefinition[];
  clientToken?: string;
  tags?: Record<string, string>;
  assetModelId?: string;
  assetModelExternalId?: string;
  assetModelType?: AssetModelType;
}
export interface CreateAssetModelResponse {
  assetModelId: string | undefined;
  assetModelArn: string | undefined;
  assetModelStatus: AssetModelStatus | undefined;
}
export interface CreateAssetModelCompositeModelRequest {
  assetModelId: string | undefined;
  parentAssetModelCompositeModelId?: string;
  assetModelCompositeModelExternalId?: string;
  assetModelCompositeModelId?: string;
  assetModelCompositeModelDescription?: string;
  assetModelCompositeModelName: string | undefined;
  assetModelCompositeModelType: string | undefined;
  clientToken?: string;
  composedAssetModelId?: string;
  assetModelCompositeModelProperties?: AssetModelPropertyDefinition[];
}
export interface CreateAssetModelCompositeModelResponse {
  assetModelCompositeModelId: string | undefined;
  assetModelCompositeModelPath:
    | AssetModelCompositeModelPathSegment[]
    | undefined;
  assetModelStatus: AssetModelStatus | undefined;
}
export interface ErrorReportLocation {
  bucket: string | undefined;
  prefix: string | undefined;
}
export interface File {
  bucket: string | undefined;
  key: string | undefined;
  versionId?: string;
}
export declare const ColumnName: {
  readonly ALIAS: "ALIAS";
  readonly ASSET_ID: "ASSET_ID";
  readonly DATA_TYPE: "DATA_TYPE";
  readonly PROPERTY_ID: "PROPERTY_ID";
  readonly QUALITY: "QUALITY";
  readonly TIMESTAMP_NANO_OFFSET: "TIMESTAMP_NANO_OFFSET";
  readonly TIMESTAMP_SECONDS: "TIMESTAMP_SECONDS";
  readonly VALUE: "VALUE";
};
export type ColumnName = (typeof ColumnName)[keyof typeof ColumnName];
export interface Csv {
  columnNames: ColumnName[] | undefined;
}
export interface Parquet {}
export interface FileFormat {
  csv?: Csv;
  parquet?: Parquet;
}
export interface JobConfiguration {
  fileFormat: FileFormat | undefined;
}
export interface CreateBulkImportJobRequest {
  jobName: string | undefined;
  jobRoleArn: string | undefined;
  files: File[] | undefined;
  errorReportLocation: ErrorReportLocation | undefined;
  jobConfiguration: JobConfiguration | undefined;
  adaptiveIngestion?: boolean;
  deleteFilesAfterImport?: boolean;
}
export declare const JobStatus: {
  readonly CANCELLED: "CANCELLED";
  readonly COMPLETED: "COMPLETED";
  readonly COMPLETED_WITH_FAILURES: "COMPLETED_WITH_FAILURES";
  readonly FAILED: "FAILED";
  readonly PENDING: "PENDING";
  readonly RUNNING: "RUNNING";
};
export type JobStatus = (typeof JobStatus)[keyof typeof JobStatus];
export interface CreateBulkImportJobResponse {
  jobId: string | undefined;
  jobName: string | undefined;
  jobStatus: JobStatus | undefined;
}
export interface CreateDashboardRequest {
  projectId: string | undefined;
  dashboardName: string | undefined;
  dashboardDescription?: string;
  dashboardDefinition: string | undefined;
  clientToken?: string;
  tags?: Record<string, string>;
}
export interface CreateDashboardResponse {
  dashboardId: string | undefined;
  dashboardArn: string | undefined;
}
export interface Greengrass {
  groupArn: string | undefined;
}
export interface GreengrassV2 {
  coreDeviceThingName: string | undefined;
}
export interface GatewayPlatform {
  greengrass?: Greengrass;
  greengrassV2?: GreengrassV2;
}
export interface CreateGatewayRequest {
  gatewayName: string | undefined;
  gatewayPlatform: GatewayPlatform | undefined;
  tags?: Record<string, string>;
}
export interface CreateGatewayResponse {
  gatewayId: string | undefined;
  gatewayArn: string | undefined;
}
export declare const ImageFileType: {
  readonly PNG: "PNG";
};
export type ImageFileType = (typeof ImageFileType)[keyof typeof ImageFileType];
export interface ImageFile {
  data: Uint8Array | undefined;
  type: ImageFileType | undefined;
}
export interface CreatePortalRequest {
  portalName: string | undefined;
  portalDescription?: string;
  portalContactEmail: string | undefined;
  clientToken?: string;
  portalLogoImageFile?: ImageFile;
  roleArn: string | undefined;
  tags?: Record<string, string>;
  portalAuthMode?: AuthMode;
  notificationSenderEmail?: string;
  alarms?: Alarms;
}
export declare const MonitorErrorCode: {
  readonly INTERNAL_FAILURE: "INTERNAL_FAILURE";
  readonly LIMIT_EXCEEDED: "LIMIT_EXCEEDED";
  readonly VALIDATION_ERROR: "VALIDATION_ERROR";
};
export type MonitorErrorCode =
  (typeof MonitorErrorCode)[keyof typeof MonitorErrorCode];
export interface MonitorErrorDetails {
  code?: MonitorErrorCode;
  message?: string;
}
export declare const PortalState: {
  readonly ACTIVE: "ACTIVE";
  readonly CREATING: "CREATING";
  readonly DELETING: "DELETING";
  readonly FAILED: "FAILED";
  readonly UPDATING: "UPDATING";
};
export type PortalState = (typeof PortalState)[keyof typeof PortalState];
export interface PortalStatus {
  state: PortalState | undefined;
  error?: MonitorErrorDetails;
}
export interface CreatePortalResponse {
  portalId: string | undefined;
  portalArn: string | undefined;
  portalStartUrl: string | undefined;
  portalStatus: PortalStatus | undefined;
  ssoApplicationId: string | undefined;
}
export interface CreateProjectRequest {
  portalId: string | undefined;
  projectName: string | undefined;
  projectDescription?: string;
  clientToken?: string;
  tags?: Record<string, string>;
}
export interface CreateProjectResponse {
  projectId: string | undefined;
  projectArn: string | undefined;
}
export interface DeleteAccessPolicyRequest {
  accessPolicyId: string | undefined;
  clientToken?: string;
}
export interface DeleteAccessPolicyResponse {}
export interface DeleteAssetRequest {
  assetId: string | undefined;
  clientToken?: string;
}
export interface DeleteAssetResponse {
  assetStatus: AssetStatus | undefined;
}
export interface DeleteAssetModelRequest {
  assetModelId: string | undefined;
  clientToken?: string;
}
export interface DeleteAssetModelResponse {
  assetModelStatus: AssetModelStatus | undefined;
}
export interface DeleteAssetModelCompositeModelRequest {
  assetModelId: string | undefined;
  assetModelCompositeModelId: string | undefined;
  clientToken?: string;
}
export interface DeleteAssetModelCompositeModelResponse {
  assetModelStatus: AssetModelStatus | undefined;
}
export interface DeleteDashboardRequest {
  dashboardId: string | undefined;
  clientToken?: string;
}
export interface DeleteDashboardResponse {}
export interface DeleteGatewayRequest {
  gatewayId: string | undefined;
}
export interface DeletePortalRequest {
  portalId: string | undefined;
  clientToken?: string;
}
export interface DeletePortalResponse {
  portalStatus: PortalStatus | undefined;
}
export interface DeleteProjectRequest {
  projectId: string | undefined;
  clientToken?: string;
}
export interface DeleteProjectResponse {}
export interface DeleteTimeSeriesRequest {
  alias?: string;
  assetId?: string;
  propertyId?: string;
  clientToken?: string;
}
export interface DescribeAccessPolicyRequest {
  accessPolicyId: string | undefined;
}
export interface DescribeAccessPolicyResponse {
  accessPolicyId: string | undefined;
  accessPolicyArn: string | undefined;
  accessPolicyIdentity: Identity | undefined;
  accessPolicyResource: Resource | undefined;
  accessPolicyPermission: Permission | undefined;
  accessPolicyCreationDate: Date | undefined;
  accessPolicyLastUpdateDate: Date | undefined;
}
export interface DescribeActionRequest {
  actionId: string | undefined;
}
export interface DescribeActionResponse {
  actionId: string | undefined;
  targetResource: TargetResource | undefined;
  actionDefinitionId: string | undefined;
  actionPayload: ActionPayload | undefined;
  executionTime: Date | undefined;
}
export interface DescribeAssetRequest {
  assetId: string | undefined;
  excludeProperties?: boolean;
}
export interface DescribeAssetResponse {
  assetId: string | undefined;
  assetArn: string | undefined;
  assetName: string | undefined;
  assetModelId: string | undefined;
  assetProperties: AssetProperty[] | undefined;
  assetHierarchies: AssetHierarchy[] | undefined;
  assetCompositeModels?: AssetCompositeModel[];
  assetCreationDate: Date | undefined;
  assetLastUpdateDate: Date | undefined;
  assetStatus: AssetStatus | undefined;
  assetDescription?: string;
  assetCompositeModelSummaries?: AssetCompositeModelSummary[];
  assetExternalId?: string;
}
export interface DescribeAssetCompositeModelRequest {
  assetId: string | undefined;
  assetCompositeModelId: string | undefined;
}
export interface DescribeAssetCompositeModelResponse {
  assetId: string | undefined;
  assetCompositeModelId: string | undefined;
  assetCompositeModelExternalId?: string;
  assetCompositeModelPath: AssetCompositeModelPathSegment[] | undefined;
  assetCompositeModelName: string | undefined;
  assetCompositeModelDescription: string | undefined;
  assetCompositeModelType: string | undefined;
  assetCompositeModelProperties: AssetProperty[] | undefined;
  assetCompositeModelSummaries: AssetCompositeModelSummary[] | undefined;
  actionDefinitions?: ActionDefinition[];
}
export interface DescribeAssetModelRequest {
  assetModelId: string | undefined;
  excludeProperties?: boolean;
}
export interface DescribeAssetModelResponse {
  assetModelId: string | undefined;
  assetModelArn: string | undefined;
  assetModelName: string | undefined;
  assetModelDescription: string | undefined;
  assetModelProperties: AssetModelProperty[] | undefined;
  assetModelHierarchies: AssetModelHierarchy[] | undefined;
  assetModelCompositeModels?: AssetModelCompositeModel[];
  assetModelCreationDate: Date | undefined;
  assetModelLastUpdateDate: Date | undefined;
  assetModelStatus: AssetModelStatus | undefined;
  assetModelType?: AssetModelType;
  assetModelCompositeModelSummaries?: AssetModelCompositeModelSummary[];
  assetModelExternalId?: string;
}
export interface DescribeAssetModelCompositeModelRequest {
  assetModelId: string | undefined;
  assetModelCompositeModelId: string | undefined;
}
export interface CompositionRelationshipItem {
  id?: string;
}
export interface CompositionDetails {
  compositionRelationship?: CompositionRelationshipItem[];
}
export interface DescribeAssetModelCompositeModelResponse {
  assetModelId: string | undefined;
  assetModelCompositeModelId: string | undefined;
  assetModelCompositeModelExternalId?: string;
  assetModelCompositeModelPath:
    | AssetModelCompositeModelPathSegment[]
    | undefined;
  assetModelCompositeModelName: string | undefined;
  assetModelCompositeModelDescription: string | undefined;
  assetModelCompositeModelType: string | undefined;
  assetModelCompositeModelProperties: AssetModelProperty[] | undefined;
  compositionDetails?: CompositionDetails;
  assetModelCompositeModelSummaries:
    | AssetModelCompositeModelSummary[]
    | undefined;
  actionDefinitions?: ActionDefinition[];
}
export interface DescribeAssetPropertyRequest {
  assetId: string | undefined;
  propertyId: string | undefined;
}
export interface Property {
  id: string | undefined;
  name: string | undefined;
  alias?: string;
  notification?: PropertyNotification;
  dataType: PropertyDataType | undefined;
  unit?: string;
  type?: PropertyType;
  path?: AssetPropertyPathSegment[];
  externalId?: string;
}
export interface CompositeModelProperty {
  name: string | undefined;
  type: string | undefined;
  assetProperty: Property | undefined;
  id?: string;
  externalId?: string;
}
export interface DescribeAssetPropertyResponse {
  assetId: string | undefined;
  assetName: string | undefined;
  assetModelId: string | undefined;
  assetProperty?: Property;
  compositeModel?: CompositeModelProperty;
  assetExternalId?: string;
}
export interface DescribeBulkImportJobRequest {
  jobId: string | undefined;
}
export interface DescribeBulkImportJobResponse {
  jobId: string | undefined;
  jobName: string | undefined;
  jobStatus: JobStatus | undefined;
  jobRoleArn: string | undefined;
  files: File[] | undefined;
  errorReportLocation: ErrorReportLocation | undefined;
  jobConfiguration: JobConfiguration | undefined;
  jobCreationDate: Date | undefined;
  jobLastUpdateDate: Date | undefined;
  adaptiveIngestion?: boolean;
  deleteFilesAfterImport?: boolean;
}
export interface DescribeDashboardRequest {
  dashboardId: string | undefined;
}
export interface DescribeDashboardResponse {
  dashboardId: string | undefined;
  dashboardArn: string | undefined;
  dashboardName: string | undefined;
  projectId: string | undefined;
  dashboardDescription?: string;
  dashboardDefinition: string | undefined;
  dashboardCreationDate: Date | undefined;
  dashboardLastUpdateDate: Date | undefined;
}
export interface DescribeDefaultEncryptionConfigurationRequest {}
export interface ConfigurationErrorDetails {
  code: ErrorCode | undefined;
  message: string | undefined;
}
export declare const ConfigurationState: {
  readonly ACTIVE: "ACTIVE";
  readonly UPDATE_FAILED: "UPDATE_FAILED";
  readonly UPDATE_IN_PROGRESS: "UPDATE_IN_PROGRESS";
};
export type ConfigurationState =
  (typeof ConfigurationState)[keyof typeof ConfigurationState];
export interface ConfigurationStatus {
  state: ConfigurationState | undefined;
  error?: ConfigurationErrorDetails;
}
export declare const EncryptionType: {
  readonly KMS_BASED_ENCRYPTION: "KMS_BASED_ENCRYPTION";
  readonly SITEWISE_DEFAULT_ENCRYPTION: "SITEWISE_DEFAULT_ENCRYPTION";
};
export type EncryptionType =
  (typeof EncryptionType)[keyof typeof EncryptionType];
export interface DescribeDefaultEncryptionConfigurationResponse {
  encryptionType: EncryptionType | undefined;
  kmsKeyArn?: string;
  configurationStatus: ConfigurationStatus | undefined;
}
export interface DescribeGatewayRequest {
  gatewayId: string | undefined;
}
export declare const CapabilitySyncStatus: {
  readonly IN_SYNC: "IN_SYNC";
  readonly OUT_OF_SYNC: "OUT_OF_SYNC";
  readonly SYNC_FAILED: "SYNC_FAILED";
  readonly UNKNOWN: "UNKNOWN";
};
export type CapabilitySyncStatus =
  (typeof CapabilitySyncStatus)[keyof typeof CapabilitySyncStatus];
export interface GatewayCapabilitySummary {
  capabilityNamespace: string | undefined;
  capabilitySyncStatus: CapabilitySyncStatus | undefined;
}
export interface DescribeGatewayResponse {
  gatewayId: string | undefined;
  gatewayName: string | undefined;
  gatewayArn: string | undefined;
  gatewayPlatform?: GatewayPlatform;
  gatewayCapabilitySummaries: GatewayCapabilitySummary[] | undefined;
  creationDate: Date | undefined;
  lastUpdateDate: Date | undefined;
}
export interface DescribeGatewayCapabilityConfigurationRequest {
  gatewayId: string | undefined;
  capabilityNamespace: string | undefined;
}
export interface DescribeGatewayCapabilityConfigurationResponse {
  gatewayId: string | undefined;
  capabilityNamespace: string | undefined;
  capabilityConfiguration: string | undefined;
  capabilitySyncStatus: CapabilitySyncStatus | undefined;
}
export interface DescribeLoggingOptionsRequest {}
export declare const LoggingLevel: {
  readonly ERROR: "ERROR";
  readonly INFO: "INFO";
  readonly OFF: "OFF";
};
export type LoggingLevel = (typeof LoggingLevel)[keyof typeof LoggingLevel];
export interface LoggingOptions {
  level: LoggingLevel | undefined;
}
export interface DescribeLoggingOptionsResponse {
  loggingOptions: LoggingOptions | undefined;
}
export interface DescribePortalRequest {
  portalId: string | undefined;
}
export interface ImageLocation {
  id: string | undefined;
  url: string | undefined;
}
export interface DescribePortalResponse {
  portalId: string | undefined;
  portalArn: string | undefined;
  portalName: string | undefined;
  portalDescription?: string;
  portalClientId: string | undefined;
  portalStartUrl: string | undefined;
  portalContactEmail: string | undefined;
  portalStatus: PortalStatus | undefined;
  portalCreationDate: Date | undefined;
  portalLastUpdateDate: Date | undefined;
  portalLogoImageLocation?: ImageLocation;
  roleArn?: string;
  portalAuthMode?: AuthMode;
  notificationSenderEmail?: string;
  alarms?: Alarms;
}
export interface DescribeProjectRequest {
  projectId: string | undefined;
}
export interface DescribeProjectResponse {
  projectId: string | undefined;
  projectArn: string | undefined;
  projectName: string | undefined;
  portalId: string | undefined;
  projectDescription?: string;
  projectCreationDate: Date | undefined;
  projectLastUpdateDate: Date | undefined;
}
export interface DescribeStorageConfigurationRequest {}
export declare const DisassociatedDataStorageState: {
  readonly DISABLED: "DISABLED";
  readonly ENABLED: "ENABLED";
};
export type DisassociatedDataStorageState =
  (typeof DisassociatedDataStorageState)[keyof typeof DisassociatedDataStorageState];
export interface CustomerManagedS3Storage {
  s3ResourceArn: string | undefined;
  roleArn: string | undefined;
}
export interface MultiLayerStorage {
  customerManagedS3Storage: CustomerManagedS3Storage | undefined;
}
export interface RetentionPeriod {
  numberOfDays?: number;
  unlimited?: boolean;
}
export declare const StorageType: {
  readonly MULTI_LAYER_STORAGE: "MULTI_LAYER_STORAGE";
  readonly SITEWISE_DEFAULT_STORAGE: "SITEWISE_DEFAULT_STORAGE";
};
export type StorageType = (typeof StorageType)[keyof typeof StorageType];
export declare const WarmTierState: {
  readonly DISABLED: "DISABLED";
  readonly ENABLED: "ENABLED";
};
export type WarmTierState = (typeof WarmTierState)[keyof typeof WarmTierState];
export interface WarmTierRetentionPeriod {
  numberOfDays?: number;
  unlimited?: boolean;
}
export interface DescribeStorageConfigurationResponse {
  storageType: StorageType | undefined;
  multiLayerStorage?: MultiLayerStorage;
  disassociatedDataStorage?: DisassociatedDataStorageState;
  retentionPeriod?: RetentionPeriod;
  configurationStatus: ConfigurationStatus | undefined;
  lastUpdateDate?: Date;
  warmTier?: WarmTierState;
  warmTierRetentionPeriod?: WarmTierRetentionPeriod;
}
export interface DescribeTimeSeriesRequest {
  alias?: string;
  assetId?: string;
  propertyId?: string;
}
export interface DescribeTimeSeriesResponse {
  assetId?: string;
  propertyId?: string;
  alias?: string;
  timeSeriesId: string | undefined;
  dataType: PropertyDataType | undefined;
  dataTypeSpec?: string;
  timeSeriesCreationDate: Date | undefined;
  timeSeriesLastUpdateDate: Date | undefined;
  timeSeriesArn: string | undefined;
}
export interface DisassociateAssetsRequest {
  assetId: string | undefined;
  hierarchyId: string | undefined;
  childAssetId: string | undefined;
  clientToken?: string;
}
export interface DisassociateTimeSeriesFromAssetPropertyRequest {
  alias: string | undefined;
  assetId: string | undefined;
  propertyId: string | undefined;
  clientToken?: string;
}
export interface ExecuteActionRequest {
  targetResource: TargetResource | undefined;
  actionDefinitionId: string | undefined;
  actionPayload: ActionPayload | undefined;
  clientToken?: string;
}
export interface ExecuteActionResponse {
  actionId: string | undefined;
}
export interface ExecuteQueryRequest {
  queryStatement: string | undefined;
  nextToken?: string;
  maxResults?: number;
}
export declare const ScalarType: {
  readonly BOOLEAN: "BOOLEAN";
  readonly DOUBLE: "DOUBLE";
  readonly INT: "INT";
  readonly STRING: "STRING";
  readonly TIMESTAMP: "TIMESTAMP";
};
export type ScalarType = (typeof ScalarType)[keyof typeof ScalarType];
export interface ColumnType {
  scalarType?: ScalarType;
}
export interface ColumnInfo {
  name?: string;
  type?: ColumnType;
}
export declare class QueryTimeoutException extends __BaseException {
  readonly name: "QueryTimeoutException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<QueryTimeoutException, __BaseException>
  );
}
export declare class ValidationException extends __BaseException {
  readonly name: "ValidationException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ValidationException, __BaseException>
  );
}
export interface GetAssetPropertyAggregatesRequest {
  assetId?: string;
  propertyId?: string;
  propertyAlias?: string;
  aggregateTypes: AggregateType[] | undefined;
  resolution: string | undefined;
  qualities?: Quality[];
  startDate: Date | undefined;
  endDate: Date | undefined;
  timeOrdering?: TimeOrdering;
  nextToken?: string;
  maxResults?: number;
}
export interface GetAssetPropertyAggregatesResponse {
  aggregatedValues: AggregatedValue[] | undefined;
  nextToken?: string;
}
export interface GetAssetPropertyValueRequest {
  assetId?: string;
  propertyId?: string;
  propertyAlias?: string;
}
export interface GetAssetPropertyValueResponse {
  propertyValue?: AssetPropertyValue;
}
export interface GetAssetPropertyValueHistoryRequest {
  assetId?: string;
  propertyId?: string;
  propertyAlias?: string;
  startDate?: Date;
  endDate?: Date;
  qualities?: Quality[];
  timeOrdering?: TimeOrdering;
  nextToken?: string;
  maxResults?: number;
}
export interface GetAssetPropertyValueHistoryResponse {
  assetPropertyValueHistory: AssetPropertyValue[] | undefined;
  nextToken?: string;
}
export interface GetInterpolatedAssetPropertyValuesRequest {
  assetId?: string;
  propertyId?: string;
  propertyAlias?: string;
  startTimeInSeconds: number | undefined;
  startTimeOffsetInNanos?: number;
  endTimeInSeconds: number | undefined;
  endTimeOffsetInNanos?: number;
  quality: Quality | undefined;
  intervalInSeconds: number | undefined;
  nextToken?: string;
  maxResults?: number;
  type: string | undefined;
  intervalWindowInSeconds?: number;
}
export interface InterpolatedAssetPropertyValue {
  timestamp: TimeInNanos | undefined;
  value: Variant | undefined;
}
export interface GetInterpolatedAssetPropertyValuesResponse {
  interpolatedAssetPropertyValues: InterpolatedAssetPropertyValue[] | undefined;
  nextToken?: string;
}
export declare const IdentityType: {
  readonly GROUP: "GROUP";
  readonly IAM: "IAM";
  readonly USER: "USER";
};
export type IdentityType = (typeof IdentityType)[keyof typeof IdentityType];
export declare const ResourceType: {
  readonly PORTAL: "PORTAL";
  readonly PROJECT: "PROJECT";
};
export type ResourceType = (typeof ResourceType)[keyof typeof ResourceType];
export interface ListAccessPoliciesRequest {
  identityType?: IdentityType;
  identityId?: string;
  resourceType?: ResourceType;
  resourceId?: string;
  iamArn?: string;
  nextToken?: string;
  maxResults?: number;
}
export interface ListAccessPoliciesResponse {
  accessPolicySummaries: AccessPolicySummary[] | undefined;
  nextToken?: string;
}
export declare const TargetResourceType: {
  readonly ASSET: "ASSET";
};
export type TargetResourceType =
  (typeof TargetResourceType)[keyof typeof TargetResourceType];
export interface ListActionsRequest {
  targetResourceType: TargetResourceType | undefined;
  targetResourceId: string | undefined;
  nextToken?: string;
  maxResults?: number;
}
export interface ListActionsResponse {
  actionSummaries: ActionSummary[] | undefined;
  nextToken: string | undefined;
}
export interface ListAssetModelCompositeModelsRequest {
  assetModelId: string | undefined;
  nextToken?: string;
  maxResults?: number;
}
export interface ListAssetModelCompositeModelsResponse {
  assetModelCompositeModelSummaries:
    | AssetModelCompositeModelSummary[]
    | undefined;
  nextToken?: string;
}
export declare const ListAssetModelPropertiesFilter: {
  readonly ALL: "ALL";
  readonly BASE: "BASE";
};
export type ListAssetModelPropertiesFilter =
  (typeof ListAssetModelPropertiesFilter)[keyof typeof ListAssetModelPropertiesFilter];
export interface ListAssetModelPropertiesRequest {
  assetModelId: string | undefined;
  nextToken?: string;
  maxResults?: number;
  filter?: ListAssetModelPropertiesFilter;
}
export interface ListAssetModelPropertiesResponse {
  assetModelPropertySummaries: AssetModelPropertySummary[] | undefined;
  nextToken?: string;
}
export interface ListAssetModelsRequest {
  nextToken?: string;
  maxResults?: number;
  assetModelTypes?: AssetModelType[];
}
export interface ListAssetModelsResponse {
  assetModelSummaries: AssetModelSummary[] | undefined;
  nextToken?: string;
}
export declare const ListAssetPropertiesFilter: {
  readonly ALL: "ALL";
  readonly BASE: "BASE";
};
export type ListAssetPropertiesFilter =
  (typeof ListAssetPropertiesFilter)[keyof typeof ListAssetPropertiesFilter];
export interface ListAssetPropertiesRequest {
  assetId: string | undefined;
  nextToken?: string;
  maxResults?: number;
  filter?: ListAssetPropertiesFilter;
}
export interface ListAssetPropertiesResponse {
  assetPropertySummaries: AssetPropertySummary[] | undefined;
  nextToken?: string;
}
export declare const TraversalType: {
  readonly PATH_TO_ROOT: "PATH_TO_ROOT";
};
export type TraversalType = (typeof TraversalType)[keyof typeof TraversalType];
export interface ListAssetRelationshipsRequest {
  assetId: string | undefined;
  traversalType: TraversalType | undefined;
  nextToken?: string;
  maxResults?: number;
}
export interface ListAssetRelationshipsResponse {
  assetRelationshipSummaries: AssetRelationshipSummary[] | undefined;
  nextToken?: string;
}
export declare const ListAssetsFilter: {
  readonly ALL: "ALL";
  readonly TOP_LEVEL: "TOP_LEVEL";
};
export type ListAssetsFilter =
  (typeof ListAssetsFilter)[keyof typeof ListAssetsFilter];
export interface ListAssetsRequest {
  nextToken?: string;
  maxResults?: number;
  assetModelId?: string;
  filter?: ListAssetsFilter;
}
export interface ListAssetsResponse {
  assetSummaries: AssetSummary[] | undefined;
  nextToken?: string;
}
export declare const TraversalDirection: {
  readonly CHILD: "CHILD";
  readonly PARENT: "PARENT";
};
export type TraversalDirection =
  (typeof TraversalDirection)[keyof typeof TraversalDirection];
export interface ListAssociatedAssetsRequest {
  assetId: string | undefined;
  hierarchyId?: string;
  traversalDirection?: TraversalDirection;
  nextToken?: string;
  maxResults?: number;
}
export interface ListAssociatedAssetsResponse {
  assetSummaries: AssociatedAssetsSummary[] | undefined;
  nextToken?: string;
}
export declare const ListBulkImportJobsFilter: {
  readonly ALL: "ALL";
  readonly CANCELLED: "CANCELLED";
  readonly COMPLETED: "COMPLETED";
  readonly COMPLETED_WITH_FAILURES: "COMPLETED_WITH_FAILURES";
  readonly FAILED: "FAILED";
  readonly PENDING: "PENDING";
  readonly RUNNING: "RUNNING";
};
export type ListBulkImportJobsFilter =
  (typeof ListBulkImportJobsFilter)[keyof typeof ListBulkImportJobsFilter];
export interface ListBulkImportJobsRequest {
  nextToken?: string;
  maxResults?: number;
  filter?: ListBulkImportJobsFilter;
}
export interface JobSummary {
  id: string | undefined;
  name: string | undefined;
  status: JobStatus | undefined;
}
export interface ListBulkImportJobsResponse {
  jobSummaries: JobSummary[] | undefined;
  nextToken?: string;
}
export interface ListCompositionRelationshipsRequest {
  assetModelId: string | undefined;
  nextToken?: string;
  maxResults?: number;
}
export interface CompositionRelationshipSummary {
  assetModelId: string | undefined;
  assetModelCompositeModelId: string | undefined;
  assetModelCompositeModelType: string | undefined;
}
export interface ListCompositionRelationshipsResponse {
  compositionRelationshipSummaries:
    | CompositionRelationshipSummary[]
    | undefined;
  nextToken?: string;
}
export interface ListDashboardsRequest {
  projectId: string | undefined;
  nextToken?: string;
  maxResults?: number;
}
export interface DashboardSummary {
  id: string | undefined;
  name: string | undefined;
  description?: string;
  creationDate?: Date;
  lastUpdateDate?: Date;
}
export interface ListDashboardsResponse {
  dashboardSummaries: DashboardSummary[] | undefined;
  nextToken?: string;
}
export interface ListGatewaysRequest {
  nextToken?: string;
  maxResults?: number;
}
export interface GatewaySummary {
  gatewayId: string | undefined;
  gatewayName: string | undefined;
  gatewayPlatform?: GatewayPlatform;
  gatewayCapabilitySummaries?: GatewayCapabilitySummary[];
  creationDate: Date | undefined;
  lastUpdateDate: Date | undefined;
}
export interface ListGatewaysResponse {
  gatewaySummaries: GatewaySummary[] | undefined;
  nextToken?: string;
}
export interface ListPortalsRequest {
  nextToken?: string;
  maxResults?: number;
}
export interface PortalSummary {
  id: string | undefined;
  name: string | undefined;
  description?: string;
  startUrl: string | undefined;
  creationDate?: Date;
  lastUpdateDate?: Date;
  roleArn?: string;
  status: PortalStatus | undefined;
}
export interface ListPortalsResponse {
  portalSummaries?: PortalSummary[];
  nextToken?: string;
}
export interface ListProjectAssetsRequest {
  projectId: string | undefined;
  nextToken?: string;
  maxResults?: number;
}
export interface ListProjectAssetsResponse {
  assetIds: string[] | undefined;
  nextToken?: string;
}
export interface ListProjectsRequest {
  portalId: string | undefined;
  nextToken?: string;
  maxResults?: number;
}
export interface ProjectSummary {
  id: string | undefined;
  name: string | undefined;
  description?: string;
  creationDate?: Date;
  lastUpdateDate?: Date;
}
export interface ListProjectsResponse {
  projectSummaries: ProjectSummary[] | undefined;
  nextToken?: string;
}
export interface ListTagsForResourceRequest {
  resourceArn: string | undefined;
}
export interface ListTagsForResourceResponse {
  tags?: Record<string, string>;
}
export declare class UnauthorizedException extends __BaseException {
  readonly name: "UnauthorizedException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<UnauthorizedException, __BaseException>
  );
}
export declare const ListTimeSeriesType: {
  readonly ASSOCIATED: "ASSOCIATED";
  readonly DISASSOCIATED: "DISASSOCIATED";
};
export type ListTimeSeriesType =
  (typeof ListTimeSeriesType)[keyof typeof ListTimeSeriesType];
export interface ListTimeSeriesRequest {
  nextToken?: string;
  maxResults?: number;
  assetId?: string;
  aliasPrefix?: string;
  timeSeriesType?: ListTimeSeriesType;
}
export interface TimeSeriesSummary {
  assetId?: string;
  propertyId?: string;
  alias?: string;
  timeSeriesId: string | undefined;
  dataType: PropertyDataType | undefined;
  dataTypeSpec?: string;
  timeSeriesCreationDate: Date | undefined;
  timeSeriesLastUpdateDate: Date | undefined;
  timeSeriesArn: string | undefined;
}
export interface ListTimeSeriesResponse {
  TimeSeriesSummaries: TimeSeriesSummary[] | undefined;
  nextToken?: string;
}
