import { IoTSiteWiseServiceException as __BaseException } from "./IoTSiteWiseServiceException";
export class AccessDeniedException extends __BaseException {
    constructor(opts) {
        super({
            name: "AccessDeniedException",
            $fault: "client",
            ...opts,
        });
        this.name = "AccessDeniedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, AccessDeniedException.prototype);
    }
}
export const Permission = {
    ADMINISTRATOR: "ADMINISTRATOR",
    VIEWER: "VIEWER",
};
export const Quality = {
    BAD: "BAD",
    GOOD: "GOOD",
    UNCERTAIN: "UNCERTAIN",
};
export const AggregateType = {
    AVERAGE: "AVERAGE",
    COUNT: "COUNT",
    MAXIMUM: "MAXIMUM",
    MINIMUM: "MINIMUM",
    STANDARD_DEVIATION: "STANDARD_DEVIATION",
    SUM: "SUM",
};
export const PropertyDataType = {
    BOOLEAN: "BOOLEAN",
    DOUBLE: "DOUBLE",
    INTEGER: "INTEGER",
    STRING: "STRING",
    STRUCT: "STRUCT",
};
export const PropertyNotificationState = {
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
};
export const AssetErrorCode = {
    INTERNAL_FAILURE: "INTERNAL_FAILURE",
};
export const ForwardingConfigState = {
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
};
export const ComputeLocation = {
    CLOUD: "CLOUD",
    EDGE: "EDGE",
};
export const AssetModelState = {
    ACTIVE: "ACTIVE",
    CREATING: "CREATING",
    DELETING: "DELETING",
    FAILED: "FAILED",
    PROPAGATING: "PROPAGATING",
    UPDATING: "UPDATING",
};
export const ErrorCode = {
    INTERNAL_FAILURE: "INTERNAL_FAILURE",
    VALIDATION_ERROR: "VALIDATION_ERROR",
};
export const DetailedErrorCode = {
    INCOMPATIBLE_COMPUTE_LOCATION: "INCOMPATIBLE_COMPUTE_LOCATION",
    INCOMPATIBLE_FORWARDING_CONFIGURATION: "INCOMPATIBLE_FORWARDING_CONFIGURATION",
};
export const AssetModelType = {
    ASSET_MODEL: "ASSET_MODEL",
    COMPONENT_MODEL: "COMPONENT_MODEL",
};
export const AssetRelationshipType = {
    HIERARCHY: "HIERARCHY",
};
export const AssetState = {
    ACTIVE: "ACTIVE",
    CREATING: "CREATING",
    DELETING: "DELETING",
    FAILED: "FAILED",
    UPDATING: "UPDATING",
};
export class ConflictingOperationException extends __BaseException {
    constructor(opts) {
        super({
            name: "ConflictingOperationException",
            $fault: "client",
            ...opts,
        });
        this.name = "ConflictingOperationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ConflictingOperationException.prototype);
        this.resourceId = opts.resourceId;
        this.resourceArn = opts.resourceArn;
    }
}
export class InternalFailureException extends __BaseException {
    constructor(opts) {
        super({
            name: "InternalFailureException",
            $fault: "server",
            ...opts,
        });
        this.name = "InternalFailureException";
        this.$fault = "server";
        Object.setPrototypeOf(this, InternalFailureException.prototype);
    }
}
export class InvalidRequestException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidRequestException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidRequestException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidRequestException.prototype);
    }
}
export class LimitExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "LimitExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "LimitExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, LimitExceededException.prototype);
    }
}
export class ResourceAlreadyExistsException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceAlreadyExistsException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceAlreadyExistsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceAlreadyExistsException.prototype);
        this.resourceId = opts.resourceId;
        this.resourceArn = opts.resourceArn;
    }
}
export class ResourceNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
    }
}
export class ThrottlingException extends __BaseException {
    constructor(opts) {
        super({
            name: "ThrottlingException",
            $fault: "client",
            ...opts,
        });
        this.name = "ThrottlingException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ThrottlingException.prototype);
    }
}
export const AuthMode = {
    IAM: "IAM",
    SSO: "SSO",
};
export const TimeOrdering = {
    ASCENDING: "ASCENDING",
    DESCENDING: "DESCENDING",
};
export const BatchGetAssetPropertyAggregatesErrorCode = {
    AccessDeniedException: "AccessDeniedException",
    InvalidRequestException: "InvalidRequestException",
    ResourceNotFoundException: "ResourceNotFoundException",
};
export const BatchEntryCompletionStatus = {
    ERROR: "ERROR",
    SUCCESS: "SUCCESS",
};
export class ServiceUnavailableException extends __BaseException {
    constructor(opts) {
        super({
            name: "ServiceUnavailableException",
            $fault: "server",
            ...opts,
        });
        this.name = "ServiceUnavailableException";
        this.$fault = "server";
        Object.setPrototypeOf(this, ServiceUnavailableException.prototype);
    }
}
export const BatchGetAssetPropertyValueErrorCode = {
    AccessDeniedException: "AccessDeniedException",
    InvalidRequestException: "InvalidRequestException",
    ResourceNotFoundException: "ResourceNotFoundException",
};
export const BatchGetAssetPropertyValueHistoryErrorCode = {
    AccessDeniedException: "AccessDeniedException",
    InvalidRequestException: "InvalidRequestException",
    ResourceNotFoundException: "ResourceNotFoundException",
};
export const BatchPutAssetPropertyValueErrorCode = {
    AccessDeniedException: "AccessDeniedException",
    ConflictingOperationException: "ConflictingOperationException",
    InternalFailureException: "InternalFailureException",
    InvalidRequestException: "InvalidRequestException",
    LimitExceededException: "LimitExceededException",
    ResourceNotFoundException: "ResourceNotFoundException",
    ServiceUnavailableException: "ServiceUnavailableException",
    ThrottlingException: "ThrottlingException",
    TimestampOutOfRangeException: "TimestampOutOfRangeException",
};
export const ColumnName = {
    ALIAS: "ALIAS",
    ASSET_ID: "ASSET_ID",
    DATA_TYPE: "DATA_TYPE",
    PROPERTY_ID: "PROPERTY_ID",
    QUALITY: "QUALITY",
    TIMESTAMP_NANO_OFFSET: "TIMESTAMP_NANO_OFFSET",
    TIMESTAMP_SECONDS: "TIMESTAMP_SECONDS",
    VALUE: "VALUE",
};
export const JobStatus = {
    CANCELLED: "CANCELLED",
    COMPLETED: "COMPLETED",
    COMPLETED_WITH_FAILURES: "COMPLETED_WITH_FAILURES",
    FAILED: "FAILED",
    PENDING: "PENDING",
    RUNNING: "RUNNING",
};
export const ImageFileType = {
    PNG: "PNG",
};
export const MonitorErrorCode = {
    INTERNAL_FAILURE: "INTERNAL_FAILURE",
    LIMIT_EXCEEDED: "LIMIT_EXCEEDED",
    VALIDATION_ERROR: "VALIDATION_ERROR",
};
export const PortalState = {
    ACTIVE: "ACTIVE",
    CREATING: "CREATING",
    DELETING: "DELETING",
    FAILED: "FAILED",
    UPDATING: "UPDATING",
};
export const ConfigurationState = {
    ACTIVE: "ACTIVE",
    UPDATE_FAILED: "UPDATE_FAILED",
    UPDATE_IN_PROGRESS: "UPDATE_IN_PROGRESS",
};
export const EncryptionType = {
    KMS_BASED_ENCRYPTION: "KMS_BASED_ENCRYPTION",
    SITEWISE_DEFAULT_ENCRYPTION: "SITEWISE_DEFAULT_ENCRYPTION",
};
export const CapabilitySyncStatus = {
    IN_SYNC: "IN_SYNC",
    OUT_OF_SYNC: "OUT_OF_SYNC",
    SYNC_FAILED: "SYNC_FAILED",
    UNKNOWN: "UNKNOWN",
};
export const LoggingLevel = {
    ERROR: "ERROR",
    INFO: "INFO",
    OFF: "OFF",
};
export const DisassociatedDataStorageState = {
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
};
export const StorageType = {
    MULTI_LAYER_STORAGE: "MULTI_LAYER_STORAGE",
    SITEWISE_DEFAULT_STORAGE: "SITEWISE_DEFAULT_STORAGE",
};
export const WarmTierState = {
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
};
export const ScalarType = {
    BOOLEAN: "BOOLEAN",
    DOUBLE: "DOUBLE",
    INT: "INT",
    STRING: "STRING",
    TIMESTAMP: "TIMESTAMP",
};
export class QueryTimeoutException extends __BaseException {
    constructor(opts) {
        super({
            name: "QueryTimeoutException",
            $fault: "client",
            ...opts,
        });
        this.name = "QueryTimeoutException";
        this.$fault = "client";
        Object.setPrototypeOf(this, QueryTimeoutException.prototype);
    }
}
export class ValidationException extends __BaseException {
    constructor(opts) {
        super({
            name: "ValidationException",
            $fault: "client",
            ...opts,
        });
        this.name = "ValidationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ValidationException.prototype);
    }
}
export const IdentityType = {
    GROUP: "GROUP",
    IAM: "IAM",
    USER: "USER",
};
export const ResourceType = {
    PORTAL: "PORTAL",
    PROJECT: "PROJECT",
};
export const TargetResourceType = {
    ASSET: "ASSET",
};
export const ListAssetModelPropertiesFilter = {
    ALL: "ALL",
    BASE: "BASE",
};
export const ListAssetPropertiesFilter = {
    ALL: "ALL",
    BASE: "BASE",
};
export const TraversalType = {
    PATH_TO_ROOT: "PATH_TO_ROOT",
};
export const ListAssetsFilter = {
    ALL: "ALL",
    TOP_LEVEL: "TOP_LEVEL",
};
export const TraversalDirection = {
    CHILD: "CHILD",
    PARENT: "PARENT",
};
export const ListBulkImportJobsFilter = {
    ALL: "ALL",
    CANCELLED: "CANCELLED",
    COMPLETED: "COMPLETED",
    COMPLETED_WITH_FAILURES: "COMPLETED_WITH_FAILURES",
    FAILED: "FAILED",
    PENDING: "PENDING",
    RUNNING: "RUNNING",
};
export class UnauthorizedException extends __BaseException {
    constructor(opts) {
        super({
            name: "UnauthorizedException",
            $fault: "client",
            ...opts,
        });
        this.name = "UnauthorizedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, UnauthorizedException.prototype);
    }
}
export const ListTimeSeriesType = {
    ASSOCIATED: "ASSOCIATED",
    DISASSOCIATED: "DISASSOCIATED",
};
