import { Command as $Command } from "@smithy/smithy-client";
import {
  MetadataBearer as __MetadataBearer,
  StreamingBlobPayloadOutputTypes,
} from "@smithy/types";
import {
  KinesisVideoArchivedMediaClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../KinesisVideoArchivedMediaClient";
import {
  GetMediaForFragmentListInput,
  GetMediaForFragmentListOutput,
} from "../models/models_0";
export { __MetadataBearer, $Command };
export interface GetMediaForFragmentListCommandInput
  extends GetMediaForFragmentListInput {}
export interface GetMediaForFragmentListCommandOutput
  extends Pick<
      GetMediaForFragmentListOutput,
      Exclude<keyof GetMediaForFragmentListOutput, "Payload">
    >,
    __MetadataBearer {
  Payload?: StreamingBlobPayloadOutputTypes;
}
declare const GetMediaForFragmentListCommand_base: {
  new (
    input: GetMediaForFragmentListCommandInput
  ): import("@smithy/smithy-client").CommandImpl<
    GetMediaForFragmentListCommandInput,
    GetMediaForFragmentListCommandOutput,
    KinesisVideoArchivedMediaClientResolvedConfig,
    ServiceInputTypes,
    ServiceOutputTypes
  >;
  getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
export declare class GetMediaForFragmentListCommand extends GetMediaForFragmentListCommand_base {}
