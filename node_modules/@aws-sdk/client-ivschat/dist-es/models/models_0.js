import { SENSITIVE_STRING } from "@smithy/smithy-client";
import { IvschatServiceException as __BaseException } from "./IvschatServiceException";
export class AccessDeniedException extends __BaseException {
    constructor(opts) {
        super({
            name: "AccessDeniedException",
            $fault: "client",
            ...opts,
        });
        this.name = "AccessDeniedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, AccessDeniedException.prototype);
    }
}
export const ChatTokenCapability = {
    DELETE_MESSAGE: "DELETE_MESSAGE",
    DISCONNECT_USER: "DISCONNECT_USER",
    SEND_MESSAGE: "SEND_MESSAGE",
};
export class PendingVerification extends __BaseException {
    constructor(opts) {
        super({
            name: "PendingVerification",
            $fault: "client",
            ...opts,
        });
        this.name = "PendingVerification";
        this.$fault = "client";
        Object.setPrototypeOf(this, PendingVerification.prototype);
    }
}
export const ResourceType = {
    ROOM: "ROOM",
};
export class ResourceNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
        this.resourceId = opts.resourceId;
        this.resourceType = opts.resourceType;
    }
}
export const ValidationExceptionReason = {
    FIELD_VALIDATION_FAILED: "FIELD_VALIDATION_FAILED",
    OTHER: "OTHER",
    UNKNOWN_OPERATION: "UNKNOWN_OPERATION",
};
export class ValidationException extends __BaseException {
    constructor(opts) {
        super({
            name: "ValidationException",
            $fault: "client",
            ...opts,
        });
        this.name = "ValidationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ValidationException.prototype);
        this.reason = opts.reason;
        this.fieldList = opts.fieldList;
    }
}
export class ConflictException extends __BaseException {
    constructor(opts) {
        super({
            name: "ConflictException",
            $fault: "client",
            ...opts,
        });
        this.name = "ConflictException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ConflictException.prototype);
        this.resourceId = opts.resourceId;
        this.resourceType = opts.resourceType;
    }
}
export var DestinationConfiguration;
(function (DestinationConfiguration) {
    DestinationConfiguration.visit = (value, visitor) => {
        if (value.s3 !== undefined)
            return visitor.s3(value.s3);
        if (value.cloudWatchLogs !== undefined)
            return visitor.cloudWatchLogs(value.cloudWatchLogs);
        if (value.firehose !== undefined)
            return visitor.firehose(value.firehose);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(DestinationConfiguration || (DestinationConfiguration = {}));
export const CreateLoggingConfigurationState = {
    ACTIVE: "ACTIVE",
};
export class ServiceQuotaExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "ServiceQuotaExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "ServiceQuotaExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ServiceQuotaExceededException.prototype);
        this.resourceId = opts.resourceId;
        this.resourceType = opts.resourceType;
        this.limit = opts.limit;
    }
}
export const FallbackResult = {
    ALLOW: "ALLOW",
    DENY: "DENY",
};
export class ThrottlingException extends __BaseException {
    constructor(opts) {
        super({
            name: "ThrottlingException",
            $fault: "client",
            ...opts,
        });
        this.name = "ThrottlingException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ThrottlingException.prototype);
        this.resourceId = opts.resourceId;
        this.resourceType = opts.resourceType;
        this.limit = opts.limit;
    }
}
export const LoggingConfigurationState = {
    ACTIVE: "ACTIVE",
    CREATE_FAILED: "CREATE_FAILED",
    CREATING: "CREATING",
    DELETE_FAILED: "DELETE_FAILED",
    DELETING: "DELETING",
    UPDATE_FAILED: "UPDATE_FAILED",
    UPDATING: "UPDATING",
};
export class InternalServerException extends __BaseException {
    constructor(opts) {
        super({
            name: "InternalServerException",
            $fault: "server",
            ...opts,
        });
        this.name = "InternalServerException";
        this.$fault = "server";
        Object.setPrototypeOf(this, InternalServerException.prototype);
    }
}
export const UpdateLoggingConfigurationState = {
    ACTIVE: "ACTIVE",
};
export const CreateChatTokenRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.userId && { userId: SENSITIVE_STRING }),
    ...(obj.attributes && { attributes: SENSITIVE_STRING }),
});
export const CreateChatTokenResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.token && { token: SENSITIVE_STRING }),
});
export const DisconnectUserRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.userId && { userId: SENSITIVE_STRING }),
});
