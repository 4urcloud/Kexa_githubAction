"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  AccessDeniedException: () => AccessDeniedException,
  ChatTokenCapability: () => ChatTokenCapability,
  ConflictException: () => ConflictException,
  CreateChatTokenCommand: () => CreateChatTokenCommand,
  CreateChatTokenRequestFilterSensitiveLog: () => CreateChatTokenRequestFilterSensitiveLog,
  CreateChatTokenResponseFilterSensitiveLog: () => CreateChatTokenResponseFilterSensitiveLog,
  CreateLoggingConfigurationCommand: () => CreateLoggingConfigurationCommand,
  CreateLoggingConfigurationState: () => CreateLoggingConfigurationState,
  CreateRoomCommand: () => CreateRoomCommand,
  DeleteLoggingConfigurationCommand: () => DeleteLoggingConfigurationCommand,
  DeleteMessageCommand: () => DeleteMessageCommand,
  DeleteRoomCommand: () => DeleteRoomCommand,
  DestinationConfiguration: () => DestinationConfiguration,
  DisconnectUserCommand: () => DisconnectUserCommand,
  DisconnectUserRequestFilterSensitiveLog: () => DisconnectUserRequestFilterSensitiveLog,
  FallbackResult: () => FallbackResult,
  GetLoggingConfigurationCommand: () => GetLoggingConfigurationCommand,
  GetRoomCommand: () => GetRoomCommand,
  InternalServerException: () => InternalServerException,
  Ivschat: () => Ivschat,
  IvschatClient: () => IvschatClient,
  IvschatServiceException: () => IvschatServiceException,
  ListLoggingConfigurationsCommand: () => ListLoggingConfigurationsCommand,
  ListRoomsCommand: () => ListRoomsCommand,
  ListTagsForResourceCommand: () => ListTagsForResourceCommand,
  LoggingConfigurationState: () => LoggingConfigurationState,
  PendingVerification: () => PendingVerification,
  ResourceNotFoundException: () => ResourceNotFoundException,
  ResourceType: () => ResourceType,
  SendEventCommand: () => SendEventCommand,
  ServiceQuotaExceededException: () => ServiceQuotaExceededException,
  TagResourceCommand: () => TagResourceCommand,
  ThrottlingException: () => ThrottlingException,
  UntagResourceCommand: () => UntagResourceCommand,
  UpdateLoggingConfigurationCommand: () => UpdateLoggingConfigurationCommand,
  UpdateLoggingConfigurationState: () => UpdateLoggingConfigurationState,
  UpdateRoomCommand: () => UpdateRoomCommand,
  ValidationException: () => ValidationException,
  ValidationExceptionReason: () => ValidationExceptionReason,
  __Client: () => import_smithy_client.Client,
  paginateListLoggingConfigurations: () => paginateListLoggingConfigurations,
  paginateListRooms: () => paginateListRooms
});
module.exports = __toCommonJS(src_exports);

// src/IvschatClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return {
    ...options,
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "ivschat"
  };
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/IvschatClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var asPartial = /* @__PURE__ */ __name((t) => t, "asPartial");
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = {
    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),
    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
  };
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return {
    ...runtimeConfig,
    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
  };
}, "resolveRuntimeExtensions");

// src/IvschatClient.ts
var _IvschatClient = class _IvschatClient extends import_smithy_client.Client {
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_config_resolver.resolveRegionConfig)(_config_1);
    const _config_3 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_2);
    const _config_4 = (0, import_middleware_retry.resolveRetryConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, (configuration == null ? void 0 : configuration.extensions) || []);
    super(_config_8);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),
        identityProviderConfigProvider: this.getIdentityProviderConfigProvider()
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
  getDefaultHttpAuthSchemeParametersProvider() {
    return import_httpAuthSchemeProvider.defaultIvschatHttpAuthSchemeParametersProvider;
  }
  getIdentityProviderConfigProvider() {
    return async (config) => new import_core.DefaultIdentityProviderConfig({
      "aws.auth#sigv4": config.credentials
    });
  }
};
__name(_IvschatClient, "IvschatClient");
var IvschatClient = _IvschatClient;

// src/Ivschat.ts


// src/commands/CreateChatTokenCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");

var import_types = require("@smithy/types");

// src/models/models_0.ts


// src/models/IvschatServiceException.ts

var _IvschatServiceException = class _IvschatServiceException extends import_smithy_client.ServiceException {
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _IvschatServiceException.prototype);
  }
};
__name(_IvschatServiceException, "IvschatServiceException");
var IvschatServiceException = _IvschatServiceException;

// src/models/models_0.ts
var _AccessDeniedException = class _AccessDeniedException extends IvschatServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "AccessDeniedException",
      $fault: "client",
      ...opts
    });
    this.name = "AccessDeniedException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _AccessDeniedException.prototype);
  }
};
__name(_AccessDeniedException, "AccessDeniedException");
var AccessDeniedException = _AccessDeniedException;
var ChatTokenCapability = {
  DELETE_MESSAGE: "DELETE_MESSAGE",
  DISCONNECT_USER: "DISCONNECT_USER",
  SEND_MESSAGE: "SEND_MESSAGE"
};
var _PendingVerification = class _PendingVerification extends IvschatServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "PendingVerification",
      $fault: "client",
      ...opts
    });
    this.name = "PendingVerification";
    this.$fault = "client";
    Object.setPrototypeOf(this, _PendingVerification.prototype);
  }
};
__name(_PendingVerification, "PendingVerification");
var PendingVerification = _PendingVerification;
var ResourceType = {
  ROOM: "ROOM"
};
var _ResourceNotFoundException = class _ResourceNotFoundException extends IvschatServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceNotFoundException",
      $fault: "client",
      ...opts
    });
    this.name = "ResourceNotFoundException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourceNotFoundException.prototype);
    this.resourceId = opts.resourceId;
    this.resourceType = opts.resourceType;
  }
};
__name(_ResourceNotFoundException, "ResourceNotFoundException");
var ResourceNotFoundException = _ResourceNotFoundException;
var ValidationExceptionReason = {
  FIELD_VALIDATION_FAILED: "FIELD_VALIDATION_FAILED",
  OTHER: "OTHER",
  UNKNOWN_OPERATION: "UNKNOWN_OPERATION"
};
var _ValidationException = class _ValidationException extends IvschatServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ValidationException",
      $fault: "client",
      ...opts
    });
    this.name = "ValidationException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ValidationException.prototype);
    this.reason = opts.reason;
    this.fieldList = opts.fieldList;
  }
};
__name(_ValidationException, "ValidationException");
var ValidationException = _ValidationException;
var _ConflictException = class _ConflictException extends IvschatServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ConflictException",
      $fault: "client",
      ...opts
    });
    this.name = "ConflictException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ConflictException.prototype);
    this.resourceId = opts.resourceId;
    this.resourceType = opts.resourceType;
  }
};
__name(_ConflictException, "ConflictException");
var ConflictException = _ConflictException;
var DestinationConfiguration;
((DestinationConfiguration3) => {
  DestinationConfiguration3.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.s3 !== void 0)
      return visitor.s3(value.s3);
    if (value.cloudWatchLogs !== void 0)
      return visitor.cloudWatchLogs(value.cloudWatchLogs);
    if (value.firehose !== void 0)
      return visitor.firehose(value.firehose);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(DestinationConfiguration || (DestinationConfiguration = {}));
var CreateLoggingConfigurationState = {
  ACTIVE: "ACTIVE"
};
var _ServiceQuotaExceededException = class _ServiceQuotaExceededException extends IvschatServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ServiceQuotaExceededException",
      $fault: "client",
      ...opts
    });
    this.name = "ServiceQuotaExceededException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ServiceQuotaExceededException.prototype);
    this.resourceId = opts.resourceId;
    this.resourceType = opts.resourceType;
    this.limit = opts.limit;
  }
};
__name(_ServiceQuotaExceededException, "ServiceQuotaExceededException");
var ServiceQuotaExceededException = _ServiceQuotaExceededException;
var FallbackResult = {
  ALLOW: "ALLOW",
  DENY: "DENY"
};
var _ThrottlingException = class _ThrottlingException extends IvschatServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ThrottlingException",
      $fault: "client",
      ...opts
    });
    this.name = "ThrottlingException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ThrottlingException.prototype);
    this.resourceId = opts.resourceId;
    this.resourceType = opts.resourceType;
    this.limit = opts.limit;
  }
};
__name(_ThrottlingException, "ThrottlingException");
var ThrottlingException = _ThrottlingException;
var LoggingConfigurationState = {
  ACTIVE: "ACTIVE",
  CREATE_FAILED: "CREATE_FAILED",
  CREATING: "CREATING",
  DELETE_FAILED: "DELETE_FAILED",
  DELETING: "DELETING",
  UPDATE_FAILED: "UPDATE_FAILED",
  UPDATING: "UPDATING"
};
var _InternalServerException = class _InternalServerException extends IvschatServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InternalServerException",
      $fault: "server",
      ...opts
    });
    this.name = "InternalServerException";
    this.$fault = "server";
    Object.setPrototypeOf(this, _InternalServerException.prototype);
  }
};
__name(_InternalServerException, "InternalServerException");
var InternalServerException = _InternalServerException;
var UpdateLoggingConfigurationState = {
  ACTIVE: "ACTIVE"
};
var CreateChatTokenRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.userId && { userId: import_smithy_client.SENSITIVE_STRING },
  ...obj.attributes && { attributes: import_smithy_client.SENSITIVE_STRING }
}), "CreateChatTokenRequestFilterSensitiveLog");
var CreateChatTokenResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.token && { token: import_smithy_client.SENSITIVE_STRING }
}), "CreateChatTokenResponseFilterSensitiveLog");
var DisconnectUserRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.userId && { userId: import_smithy_client.SENSITIVE_STRING }
}), "DisconnectUserRequestFilterSensitiveLog");

// src/protocols/Aws_restJson1.ts
var import_core2 = require("@aws-sdk/core");


var se_CreateChatTokenCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/CreateChatToken");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      attributes: (_) => (0, import_smithy_client._json)(_),
      capabilities: (_) => (0, import_smithy_client._json)(_),
      roomIdentifier: [],
      sessionDurationInMinutes: [],
      userId: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateChatTokenCommand");
var se_CreateLoggingConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/CreateLoggingConfiguration");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      destinationConfiguration: (_) => (0, import_smithy_client._json)(_),
      name: [],
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateLoggingConfigurationCommand");
var se_CreateRoomCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/CreateRoom");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      loggingConfigurationIdentifiers: (_) => (0, import_smithy_client._json)(_),
      maximumMessageLength: [],
      maximumMessageRatePerSecond: [],
      messageReviewHandler: (_) => (0, import_smithy_client._json)(_),
      name: [],
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateRoomCommand");
var se_DeleteLoggingConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/DeleteLoggingConfiguration");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      identifier: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DeleteLoggingConfigurationCommand");
var se_DeleteMessageCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/DeleteMessage");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      id: [],
      reason: [],
      roomIdentifier: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DeleteMessageCommand");
var se_DeleteRoomCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/DeleteRoom");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      identifier: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DeleteRoomCommand");
var se_DisconnectUserCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/DisconnectUser");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      reason: [],
      roomIdentifier: [],
      userId: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DisconnectUserCommand");
var se_GetLoggingConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/GetLoggingConfiguration");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      identifier: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_GetLoggingConfigurationCommand");
var se_GetRoomCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/GetRoom");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      identifier: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_GetRoomCommand");
var se_ListLoggingConfigurationsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/ListLoggingConfigurations");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      maxResults: [],
      nextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListLoggingConfigurationsCommand");
var se_ListRoomsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/ListRooms");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      loggingConfigurationIdentifier: [],
      maxResults: [],
      messageReviewHandlerUri: [],
      name: [],
      nextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListRoomsCommand");
var se_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_ListTagsForResourceCommand");
var se_SendEventCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/SendEvent");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      attributes: (_) => (0, import_smithy_client._json)(_),
      eventName: [],
      roomIdentifier: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_SendEventCommand");
var se_TagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_TagResourceCommand");
var se_UntagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  const query = (0, import_smithy_client.map)({
    [_tK]: [
      (0, import_smithy_client.expectNonNull)(input.tagKeys, `tagKeys`) != null,
      () => (input[_tK] || []).map((_entry) => _entry)
    ]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_UntagResourceCommand");
var se_UpdateLoggingConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/UpdateLoggingConfiguration");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      destinationConfiguration: (_) => (0, import_smithy_client._json)(_),
      identifier: [],
      name: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateLoggingConfigurationCommand");
var se_UpdateRoomCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/UpdateRoom");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      identifier: [],
      loggingConfigurationIdentifiers: (_) => (0, import_smithy_client._json)(_),
      maximumMessageLength: [],
      maximumMessageRatePerSecond: [],
      messageReviewHandler: (_) => (0, import_smithy_client._json)(_),
      name: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateRoomCommand");
var de_CreateChatTokenCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    sessionExpirationTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)),
    token: import_smithy_client.expectString,
    tokenExpirationTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_))
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateChatTokenCommand");
var de_CreateLoggingConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    createTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)),
    destinationConfiguration: (_) => (0, import_smithy_client._json)((0, import_core2.awsExpectUnion)(_)),
    id: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    state: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    updateTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_))
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateLoggingConfigurationCommand");
var de_CreateRoomCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    createTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)),
    id: import_smithy_client.expectString,
    loggingConfigurationIdentifiers: import_smithy_client._json,
    maximumMessageLength: import_smithy_client.expectInt32,
    maximumMessageRatePerSecond: import_smithy_client.expectInt32,
    messageReviewHandler: import_smithy_client._json,
    name: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    updateTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_))
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateRoomCommand");
var de_DeleteLoggingConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteLoggingConfigurationCommand");
var de_DeleteMessageCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    id: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DeleteMessageCommand");
var de_DeleteRoomCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteRoomCommand");
var de_DisconnectUserCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DisconnectUserCommand");
var de_GetLoggingConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    createTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)),
    destinationConfiguration: (_) => (0, import_smithy_client._json)((0, import_core2.awsExpectUnion)(_)),
    id: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    state: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    updateTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_))
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetLoggingConfigurationCommand");
var de_GetRoomCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    createTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)),
    id: import_smithy_client.expectString,
    loggingConfigurationIdentifiers: import_smithy_client._json,
    maximumMessageLength: import_smithy_client.expectInt32,
    maximumMessageRatePerSecond: import_smithy_client.expectInt32,
    messageReviewHandler: import_smithy_client._json,
    name: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    updateTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_))
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetRoomCommand");
var de_ListLoggingConfigurationsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    loggingConfigurations: (_) => de_LoggingConfigurationList(_, context),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListLoggingConfigurationsCommand");
var de_ListRoomsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    nextToken: import_smithy_client.expectString,
    rooms: (_) => de_RoomList(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListRoomsCommand");
var de_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListTagsForResourceCommand");
var de_SendEventCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    id: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_SendEventCommand");
var de_TagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_TagResourceCommand");
var de_UntagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UntagResourceCommand");
var de_UpdateLoggingConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    createTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)),
    destinationConfiguration: (_) => (0, import_smithy_client._json)((0, import_core2.awsExpectUnion)(_)),
    id: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    state: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    updateTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_))
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateLoggingConfigurationCommand");
var de_UpdateRoomCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    createTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)),
    id: import_smithy_client.expectString,
    loggingConfigurationIdentifiers: import_smithy_client._json,
    maximumMessageLength: import_smithy_client.expectInt32,
    maximumMessageRatePerSecond: import_smithy_client.expectInt32,
    messageReviewHandler: import_smithy_client._json,
    name: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    updateTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_))
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateRoomCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await parseErrorBody(output.body, context)
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "AccessDeniedException":
    case "com.amazonaws.ivschat#AccessDeniedException":
      throw await de_AccessDeniedExceptionRes(parsedOutput, context);
    case "PendingVerification":
    case "com.amazonaws.ivschat#PendingVerification":
      throw await de_PendingVerificationRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.ivschat#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    case "ValidationException":
    case "com.amazonaws.ivschat#ValidationException":
      throw await de_ValidationExceptionRes(parsedOutput, context);
    case "ConflictException":
    case "com.amazonaws.ivschat#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    case "ServiceQuotaExceededException":
    case "com.amazonaws.ivschat#ServiceQuotaExceededException":
      throw await de_ServiceQuotaExceededExceptionRes(parsedOutput, context);
    case "ThrottlingException":
    case "com.amazonaws.ivschat#ThrottlingException":
      throw await de_ThrottlingExceptionRes(parsedOutput, context);
    case "InternalServerException":
    case "com.amazonaws.ivschat#InternalServerException":
      throw await de_InternalServerExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var throwDefaultError = (0, import_smithy_client.withBaseException)(IvschatServiceException);
var de_AccessDeniedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new AccessDeniedException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_AccessDeniedExceptionRes");
var de_ConflictExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString,
    resourceId: import_smithy_client.expectString,
    resourceType: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ConflictException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ConflictExceptionRes");
var de_InternalServerExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new InternalServerException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_InternalServerExceptionRes");
var de_PendingVerificationRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new PendingVerification({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_PendingVerificationRes");
var de_ResourceNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString,
    resourceId: import_smithy_client.expectString,
    resourceType: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ResourceNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ResourceNotFoundExceptionRes");
var de_ServiceQuotaExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    limit: import_smithy_client.expectInt32,
    message: import_smithy_client.expectString,
    resourceId: import_smithy_client.expectString,
    resourceType: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ServiceQuotaExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ServiceQuotaExceededExceptionRes");
var de_ThrottlingExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    limit: import_smithy_client.expectInt32,
    message: import_smithy_client.expectString,
    resourceId: import_smithy_client.expectString,
    resourceType: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ThrottlingException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ThrottlingExceptionRes");
var de_ValidationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    fieldList: import_smithy_client._json,
    message: import_smithy_client.expectString,
    reason: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ValidationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ValidationExceptionRes");
var de_LoggingConfigurationList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_LoggingConfigurationSummary(entry, context);
  });
  return retVal;
}, "de_LoggingConfigurationList");
var de_LoggingConfigurationSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    createTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)),
    destinationConfiguration: (_) => (0, import_smithy_client._json)((0, import_core2.awsExpectUnion)(_)),
    id: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    state: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    updateTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_))
  });
}, "de_LoggingConfigurationSummary");
var de_RoomList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_RoomSummary(entry, context);
  });
  return retVal;
}, "de_RoomList");
var de_RoomSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    createTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)),
    id: import_smithy_client.expectString,
    loggingConfigurationIdentifiers: import_smithy_client._json,
    messageReviewHandler: import_smithy_client._json,
    name: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    updateTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_))
  });
}, "de_RoomSummary");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var collectBodyString = /* @__PURE__ */ __name((streamBody, context) => (0, import_smithy_client.collectBody)(streamBody, context).then((body) => context.utf8Encoder(body)), "collectBodyString");
var _tK = "tagKeys";
var parseBody = /* @__PURE__ */ __name((streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {
  if (encoded.length) {
    return JSON.parse(encoded);
  }
  return {};
}), "parseBody");
var parseErrorBody = /* @__PURE__ */ __name(async (errorBody, context) => {
  const value = await parseBody(errorBody, context);
  value.message = value.message ?? value.Message;
  return value;
}, "parseErrorBody");
var loadRestJsonErrorCode = /* @__PURE__ */ __name((output, data) => {
  const findKey = /* @__PURE__ */ __name((object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase()), "findKey");
  const sanitizeErrorCode = /* @__PURE__ */ __name((rawValue) => {
    let cleanValue = rawValue;
    if (typeof cleanValue === "number") {
      cleanValue = cleanValue.toString();
    }
    if (cleanValue.indexOf(",") >= 0) {
      cleanValue = cleanValue.split(",")[0];
    }
    if (cleanValue.indexOf(":") >= 0) {
      cleanValue = cleanValue.split(":")[0];
    }
    if (cleanValue.indexOf("#") >= 0) {
      cleanValue = cleanValue.split("#")[1];
    }
    return cleanValue;
  }, "sanitizeErrorCode");
  const headerKey = findKey(output.headers, "x-amzn-errortype");
  if (headerKey !== void 0) {
    return sanitizeErrorCode(output.headers[headerKey]);
  }
  if (data.code !== void 0) {
    return sanitizeErrorCode(data.code);
  }
  if (data["__type"] !== void 0) {
    return sanitizeErrorCode(data["__type"]);
  }
}, "loadRestJsonErrorCode");

// src/commands/CreateChatTokenCommand.ts
var _CreateChatTokenCommand = class _CreateChatTokenCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceChat", "CreateChatToken", {}).n("IvschatClient", "CreateChatTokenCommand").f(CreateChatTokenRequestFilterSensitiveLog, CreateChatTokenResponseFilterSensitiveLog).ser(se_CreateChatTokenCommand).de(de_CreateChatTokenCommand).build() {
};
__name(_CreateChatTokenCommand, "CreateChatTokenCommand");
var CreateChatTokenCommand = _CreateChatTokenCommand;

// src/commands/CreateLoggingConfigurationCommand.ts




var _CreateLoggingConfigurationCommand = class _CreateLoggingConfigurationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceChat", "CreateLoggingConfiguration", {}).n("IvschatClient", "CreateLoggingConfigurationCommand").f(void 0, void 0).ser(se_CreateLoggingConfigurationCommand).de(de_CreateLoggingConfigurationCommand).build() {
};
__name(_CreateLoggingConfigurationCommand, "CreateLoggingConfigurationCommand");
var CreateLoggingConfigurationCommand = _CreateLoggingConfigurationCommand;

// src/commands/CreateRoomCommand.ts




var _CreateRoomCommand = class _CreateRoomCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceChat", "CreateRoom", {}).n("IvschatClient", "CreateRoomCommand").f(void 0, void 0).ser(se_CreateRoomCommand).de(de_CreateRoomCommand).build() {
};
__name(_CreateRoomCommand, "CreateRoomCommand");
var CreateRoomCommand = _CreateRoomCommand;

// src/commands/DeleteLoggingConfigurationCommand.ts




var _DeleteLoggingConfigurationCommand = class _DeleteLoggingConfigurationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceChat", "DeleteLoggingConfiguration", {}).n("IvschatClient", "DeleteLoggingConfigurationCommand").f(void 0, void 0).ser(se_DeleteLoggingConfigurationCommand).de(de_DeleteLoggingConfigurationCommand).build() {
};
__name(_DeleteLoggingConfigurationCommand, "DeleteLoggingConfigurationCommand");
var DeleteLoggingConfigurationCommand = _DeleteLoggingConfigurationCommand;

// src/commands/DeleteMessageCommand.ts




var _DeleteMessageCommand = class _DeleteMessageCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceChat", "DeleteMessage", {}).n("IvschatClient", "DeleteMessageCommand").f(void 0, void 0).ser(se_DeleteMessageCommand).de(de_DeleteMessageCommand).build() {
};
__name(_DeleteMessageCommand, "DeleteMessageCommand");
var DeleteMessageCommand = _DeleteMessageCommand;

// src/commands/DeleteRoomCommand.ts




var _DeleteRoomCommand = class _DeleteRoomCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceChat", "DeleteRoom", {}).n("IvschatClient", "DeleteRoomCommand").f(void 0, void 0).ser(se_DeleteRoomCommand).de(de_DeleteRoomCommand).build() {
};
__name(_DeleteRoomCommand, "DeleteRoomCommand");
var DeleteRoomCommand = _DeleteRoomCommand;

// src/commands/DisconnectUserCommand.ts




var _DisconnectUserCommand = class _DisconnectUserCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceChat", "DisconnectUser", {}).n("IvschatClient", "DisconnectUserCommand").f(DisconnectUserRequestFilterSensitiveLog, void 0).ser(se_DisconnectUserCommand).de(de_DisconnectUserCommand).build() {
};
__name(_DisconnectUserCommand, "DisconnectUserCommand");
var DisconnectUserCommand = _DisconnectUserCommand;

// src/commands/GetLoggingConfigurationCommand.ts




var _GetLoggingConfigurationCommand = class _GetLoggingConfigurationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceChat", "GetLoggingConfiguration", {}).n("IvschatClient", "GetLoggingConfigurationCommand").f(void 0, void 0).ser(se_GetLoggingConfigurationCommand).de(de_GetLoggingConfigurationCommand).build() {
};
__name(_GetLoggingConfigurationCommand, "GetLoggingConfigurationCommand");
var GetLoggingConfigurationCommand = _GetLoggingConfigurationCommand;

// src/commands/GetRoomCommand.ts




var _GetRoomCommand = class _GetRoomCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceChat", "GetRoom", {}).n("IvschatClient", "GetRoomCommand").f(void 0, void 0).ser(se_GetRoomCommand).de(de_GetRoomCommand).build() {
};
__name(_GetRoomCommand, "GetRoomCommand");
var GetRoomCommand = _GetRoomCommand;

// src/commands/ListLoggingConfigurationsCommand.ts




var _ListLoggingConfigurationsCommand = class _ListLoggingConfigurationsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceChat", "ListLoggingConfigurations", {}).n("IvschatClient", "ListLoggingConfigurationsCommand").f(void 0, void 0).ser(se_ListLoggingConfigurationsCommand).de(de_ListLoggingConfigurationsCommand).build() {
};
__name(_ListLoggingConfigurationsCommand, "ListLoggingConfigurationsCommand");
var ListLoggingConfigurationsCommand = _ListLoggingConfigurationsCommand;

// src/commands/ListRoomsCommand.ts




var _ListRoomsCommand = class _ListRoomsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceChat", "ListRooms", {}).n("IvschatClient", "ListRoomsCommand").f(void 0, void 0).ser(se_ListRoomsCommand).de(de_ListRoomsCommand).build() {
};
__name(_ListRoomsCommand, "ListRoomsCommand");
var ListRoomsCommand = _ListRoomsCommand;

// src/commands/ListTagsForResourceCommand.ts




var _ListTagsForResourceCommand = class _ListTagsForResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceChat", "ListTagsForResource", {}).n("IvschatClient", "ListTagsForResourceCommand").f(void 0, void 0).ser(se_ListTagsForResourceCommand).de(de_ListTagsForResourceCommand).build() {
};
__name(_ListTagsForResourceCommand, "ListTagsForResourceCommand");
var ListTagsForResourceCommand = _ListTagsForResourceCommand;

// src/commands/SendEventCommand.ts




var _SendEventCommand = class _SendEventCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceChat", "SendEvent", {}).n("IvschatClient", "SendEventCommand").f(void 0, void 0).ser(se_SendEventCommand).de(de_SendEventCommand).build() {
};
__name(_SendEventCommand, "SendEventCommand");
var SendEventCommand = _SendEventCommand;

// src/commands/TagResourceCommand.ts




var _TagResourceCommand = class _TagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceChat", "TagResource", {}).n("IvschatClient", "TagResourceCommand").f(void 0, void 0).ser(se_TagResourceCommand).de(de_TagResourceCommand).build() {
};
__name(_TagResourceCommand, "TagResourceCommand");
var TagResourceCommand = _TagResourceCommand;

// src/commands/UntagResourceCommand.ts




var _UntagResourceCommand = class _UntagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceChat", "UntagResource", {}).n("IvschatClient", "UntagResourceCommand").f(void 0, void 0).ser(se_UntagResourceCommand).de(de_UntagResourceCommand).build() {
};
__name(_UntagResourceCommand, "UntagResourceCommand");
var UntagResourceCommand = _UntagResourceCommand;

// src/commands/UpdateLoggingConfigurationCommand.ts




var _UpdateLoggingConfigurationCommand = class _UpdateLoggingConfigurationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceChat", "UpdateLoggingConfiguration", {}).n("IvschatClient", "UpdateLoggingConfigurationCommand").f(void 0, void 0).ser(se_UpdateLoggingConfigurationCommand).de(de_UpdateLoggingConfigurationCommand).build() {
};
__name(_UpdateLoggingConfigurationCommand, "UpdateLoggingConfigurationCommand");
var UpdateLoggingConfigurationCommand = _UpdateLoggingConfigurationCommand;

// src/commands/UpdateRoomCommand.ts




var _UpdateRoomCommand = class _UpdateRoomCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonInteractiveVideoServiceChat", "UpdateRoom", {}).n("IvschatClient", "UpdateRoomCommand").f(void 0, void 0).ser(se_UpdateRoomCommand).de(de_UpdateRoomCommand).build() {
};
__name(_UpdateRoomCommand, "UpdateRoomCommand");
var UpdateRoomCommand = _UpdateRoomCommand;

// src/Ivschat.ts
var commands = {
  CreateChatTokenCommand,
  CreateLoggingConfigurationCommand,
  CreateRoomCommand,
  DeleteLoggingConfigurationCommand,
  DeleteMessageCommand,
  DeleteRoomCommand,
  DisconnectUserCommand,
  GetLoggingConfigurationCommand,
  GetRoomCommand,
  ListLoggingConfigurationsCommand,
  ListRoomsCommand,
  ListTagsForResourceCommand,
  SendEventCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateLoggingConfigurationCommand,
  UpdateRoomCommand
};
var _Ivschat = class _Ivschat extends IvschatClient {
};
__name(_Ivschat, "Ivschat");
var Ivschat = _Ivschat;
(0, import_smithy_client.createAggregatedClient)(commands, Ivschat);

// src/pagination/ListLoggingConfigurationsPaginator.ts

var paginateListLoggingConfigurations = (0, import_core.createPaginator)(IvschatClient, ListLoggingConfigurationsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListRoomsPaginator.ts

var paginateListRooms = (0, import_core.createPaginator)(IvschatClient, ListRoomsCommand, "nextToken", "nextToken", "maxResults");

// src/index.ts
var import_util_endpoints = require("@aws-sdk/util-endpoints");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  IvschatServiceException,
  __Client,
  IvschatClient,
  Ivschat,
  $Command,
  CreateChatTokenCommand,
  CreateLoggingConfigurationCommand,
  CreateRoomCommand,
  DeleteLoggingConfigurationCommand,
  DeleteMessageCommand,
  DeleteRoomCommand,
  DisconnectUserCommand,
  GetLoggingConfigurationCommand,
  GetRoomCommand,
  ListLoggingConfigurationsCommand,
  ListRoomsCommand,
  ListTagsForResourceCommand,
  SendEventCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateLoggingConfigurationCommand,
  UpdateRoomCommand,
  paginateListLoggingConfigurations,
  paginateListRooms,
  AccessDeniedException,
  ChatTokenCapability,
  PendingVerification,
  ResourceType,
  ResourceNotFoundException,
  ValidationExceptionReason,
  ValidationException,
  ConflictException,
  DestinationConfiguration,
  CreateLoggingConfigurationState,
  ServiceQuotaExceededException,
  FallbackResult,
  ThrottlingException,
  LoggingConfigurationState,
  InternalServerException,
  UpdateLoggingConfigurationState,
  CreateChatTokenRequestFilterSensitiveLog,
  CreateChatTokenResponseFilterSensitiveLog,
  DisconnectUserRequestFilterSensitiveLog
});

