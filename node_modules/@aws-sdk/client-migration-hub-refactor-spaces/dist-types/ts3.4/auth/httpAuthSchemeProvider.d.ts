import {
  AwsSdkSigV4AuthInputConfig,
  AwsSdkSigV4AuthResolvedConfig,
  AwsSdkSigV4PreviouslyResolved,
} from "@aws-sdk/core";
import {
  HandlerExecutionContext,
  HttpAuthScheme,
  HttpAuthSchemeParameters,
  HttpAuthSchemeParametersProvider,
  HttpAuthSchemeProvider,
} from "@smithy/types";
import { MigrationHubRefactorSpacesClientResolvedConfig } from "../MigrationHubRefactorSpacesClient";
export interface MigrationHubRefactorSpacesHttpAuthSchemeParameters
  extends HttpAuthSchemeParameters {
  region?: string;
}
export interface MigrationHubRefactorSpacesHttpAuthSchemeParametersProvider
  extends HttpAuthSchemeParametersProvider<
    MigrationHubRefactorSpacesClientResolvedConfig,
    HandlerExecutionContext,
    MigrationHubRefactorSpacesHttpAuthSchemeParameters,
    object
  > {}
export declare const defaultMigrationHubRefactorSpacesHttpAuthSchemeParametersProvider: (
  config: MigrationHubRefactorSpacesClientResolvedConfig,
  context: HandlerExecutionContext,
  input: object
) => Promise<MigrationHubRefactorSpacesHttpAuthSchemeParameters>;
export interface MigrationHubRefactorSpacesHttpAuthSchemeProvider
  extends HttpAuthSchemeProvider<MigrationHubRefactorSpacesHttpAuthSchemeParameters> {}
export declare const defaultMigrationHubRefactorSpacesHttpAuthSchemeProvider: MigrationHubRefactorSpacesHttpAuthSchemeProvider;
export interface HttpAuthSchemeInputConfig extends AwsSdkSigV4AuthInputConfig {
  httpAuthSchemes?: HttpAuthScheme[];
  httpAuthSchemeProvider?: MigrationHubRefactorSpacesHttpAuthSchemeProvider;
}
export interface HttpAuthSchemeResolvedConfig
  extends AwsSdkSigV4AuthResolvedConfig {
  readonly httpAuthSchemes: HttpAuthScheme[];
  readonly httpAuthSchemeProvider: MigrationHubRefactorSpacesHttpAuthSchemeProvider;
}
export declare const resolveHttpAuthSchemeConfig: <T>(
  config: T & HttpAuthSchemeInputConfig & AwsSdkSigV4PreviouslyResolved
) => T & HttpAuthSchemeResolvedConfig;
