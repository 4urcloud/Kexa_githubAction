import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { LookoutMetricsServiceException as __BaseException } from "./LookoutMetricsServiceException";
export declare class AccessDeniedException extends __BaseException {
  readonly name: "AccessDeniedException";
  readonly $fault: "client";
  Message: string | undefined;
  constructor(
    opts: __ExceptionOptionType<AccessDeniedException, __BaseException>
  );
}
export interface LambdaConfiguration {
  RoleArn: string | undefined;
  LambdaArn: string | undefined;
}
export declare const SnsFormat: {
  readonly JSON: "JSON";
  readonly LONG_TEXT: "LONG_TEXT";
  readonly SHORT_TEXT: "SHORT_TEXT";
};
export type SnsFormat = (typeof SnsFormat)[keyof typeof SnsFormat];
export interface SNSConfiguration {
  RoleArn: string | undefined;
  SnsTopicArn: string | undefined;
  SnsFormat?: SnsFormat;
}
export interface Action {
  SNSConfiguration?: SNSConfiguration;
  LambdaConfiguration?: LambdaConfiguration;
}
export interface ActivateAnomalyDetectorRequest {
  AnomalyDetectorArn: string | undefined;
}
export interface ActivateAnomalyDetectorResponse {}
export declare class ConflictException extends __BaseException {
  readonly name: "ConflictException";
  readonly $fault: "client";
  Message: string | undefined;
  ResourceId?: string;
  ResourceType?: string;
  constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
}
export declare class InternalServerException extends __BaseException {
  readonly name: "InternalServerException";
  readonly $fault: "server";
  Message: string | undefined;
  constructor(
    opts: __ExceptionOptionType<InternalServerException, __BaseException>
  );
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  Message: string | undefined;
  ResourceId?: string;
  ResourceType?: string;
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export declare class TooManyRequestsException extends __BaseException {
  readonly name: "TooManyRequestsException";
  readonly $fault: "client";
  Message: string | undefined;
  constructor(
    opts: __ExceptionOptionType<TooManyRequestsException, __BaseException>
  );
}
export interface ValidationExceptionField {
  Name: string | undefined;
  Message: string | undefined;
}
export declare const ValidationExceptionReason: {
  readonly CANNOT_PARSE: "CANNOT_PARSE";
  readonly FIELD_VALIDATION_FAILED: "FIELD_VALIDATION_FAILED";
  readonly OTHER: "OTHER";
  readonly UNKNOWN_OPERATION: "UNKNOWN_OPERATION";
};
export type ValidationExceptionReason =
  (typeof ValidationExceptionReason)[keyof typeof ValidationExceptionReason];
export declare class ValidationException extends __BaseException {
  readonly name: "ValidationException";
  readonly $fault: "client";
  Message: string | undefined;
  Reason?: ValidationExceptionReason;
  Fields?: ValidationExceptionField[];
  constructor(
    opts: __ExceptionOptionType<ValidationException, __BaseException>
  );
}
export declare const AggregationFunction: {
  readonly AVG: "AVG";
  readonly SUM: "SUM";
};
export type AggregationFunction =
  (typeof AggregationFunction)[keyof typeof AggregationFunction];
export interface DimensionFilter {
  DimensionName?: string;
  DimensionValueList?: string[];
}
export interface AlertFilters {
  MetricList?: string[];
  DimensionFilterList?: DimensionFilter[];
}
export declare const AlertStatus: {
  readonly ACTIVE: "ACTIVE";
  readonly INACTIVE: "INACTIVE";
};
export type AlertStatus = (typeof AlertStatus)[keyof typeof AlertStatus];
export declare const AlertType: {
  readonly LAMBDA: "LAMBDA";
  readonly SNS: "SNS";
};
export type AlertType = (typeof AlertType)[keyof typeof AlertType];
export interface Alert {
  Action?: Action;
  AlertDescription?: string;
  AlertArn?: string;
  AnomalyDetectorArn?: string;
  AlertName?: string;
  AlertSensitivityThreshold?: number;
  AlertType?: AlertType;
  AlertStatus?: AlertStatus;
  LastModificationTime?: Date;
  CreationTime?: Date;
  AlertFilters?: AlertFilters;
}
export interface AlertSummary {
  AlertArn?: string;
  AnomalyDetectorArn?: string;
  AlertName?: string;
  AlertSensitivityThreshold?: number;
  AlertType?: AlertType;
  AlertStatus?: AlertStatus;
  LastModificationTime?: Date;
  CreationTime?: Date;
  Tags?: Record<string, string>;
}
export declare const AnomalyDetectionTaskStatus: {
  readonly COMPLETED: "COMPLETED";
  readonly FAILED: "FAILED";
  readonly FAILED_TO_SCHEDULE: "FAILED_TO_SCHEDULE";
  readonly IN_PROGRESS: "IN_PROGRESS";
  readonly PENDING: "PENDING";
};
export type AnomalyDetectionTaskStatus =
  (typeof AnomalyDetectionTaskStatus)[keyof typeof AnomalyDetectionTaskStatus];
export declare const Frequency: {
  readonly P1D: "P1D";
  readonly PT10M: "PT10M";
  readonly PT1H: "PT1H";
  readonly PT5M: "PT5M";
};
export type Frequency = (typeof Frequency)[keyof typeof Frequency];
export interface AnomalyDetectorConfig {
  AnomalyDetectorFrequency?: Frequency;
}
export interface AnomalyDetectorConfigSummary {
  AnomalyDetectorFrequency?: Frequency;
}
export declare const DataQualityMetricType: {
  readonly BACKTEST_INFERENCE_DATA_END_TIME_STAMP: "BACKTEST_INFERENCE_DATA_END_TIME_STAMP";
  readonly BACKTEST_INFERENCE_DATA_START_TIME_STAMP: "BACKTEST_INFERENCE_DATA_START_TIME_STAMP";
  readonly BACKTEST_TRAINING_DATA_END_TIME_STAMP: "BACKTEST_TRAINING_DATA_END_TIME_STAMP";
  readonly BACKTEST_TRAINING_DATA_START_TIME_STAMP: "BACKTEST_TRAINING_DATA_START_TIME_STAMP";
  readonly COLUMN_COMPLETENESS: "COLUMN_COMPLETENESS";
  readonly DIMENSION_UNIQUENESS: "DIMENSION_UNIQUENESS";
  readonly INVALID_ROWS_COMPLIANCE: "INVALID_ROWS_COMPLIANCE";
  readonly ROWS_PARTIAL_COMPLIANCE: "ROWS_PARTIAL_COMPLIANCE";
  readonly ROWS_PROCESSED: "ROWS_PROCESSED";
  readonly TIME_SERIES_COUNT: "TIME_SERIES_COUNT";
};
export type DataQualityMetricType =
  (typeof DataQualityMetricType)[keyof typeof DataQualityMetricType];
export interface DataQualityMetric {
  MetricType?: DataQualityMetricType;
  MetricDescription?: string;
  RelatedColumnName?: string;
  MetricValue?: number;
}
export interface MetricSetDataQualityMetric {
  MetricSetArn?: string;
  DataQualityMetricList?: DataQualityMetric[];
}
export interface AnomalyDetectorDataQualityMetric {
  StartTimestamp?: Date;
  MetricSetDataQualityMetricList?: MetricSetDataQualityMetric[];
}
export declare const AnomalyDetectorFailureType: {
  readonly ACTIVATION_FAILURE: "ACTIVATION_FAILURE";
  readonly BACK_TEST_ACTIVATION_FAILURE: "BACK_TEST_ACTIVATION_FAILURE";
  readonly DEACTIVATION_FAILURE: "DEACTIVATION_FAILURE";
  readonly DELETION_FAILURE: "DELETION_FAILURE";
};
export type AnomalyDetectorFailureType =
  (typeof AnomalyDetectorFailureType)[keyof typeof AnomalyDetectorFailureType];
export declare const AnomalyDetectorStatus: {
  readonly ACTIVATING: "ACTIVATING";
  readonly ACTIVE: "ACTIVE";
  readonly BACK_TEST_ACTIVATING: "BACK_TEST_ACTIVATING";
  readonly BACK_TEST_ACTIVE: "BACK_TEST_ACTIVE";
  readonly BACK_TEST_COMPLETE: "BACK_TEST_COMPLETE";
  readonly DEACTIVATED: "DEACTIVATED";
  readonly DEACTIVATING: "DEACTIVATING";
  readonly DELETING: "DELETING";
  readonly FAILED: "FAILED";
  readonly INACTIVE: "INACTIVE";
  readonly LEARNING: "LEARNING";
};
export type AnomalyDetectorStatus =
  (typeof AnomalyDetectorStatus)[keyof typeof AnomalyDetectorStatus];
export interface AnomalyDetectorSummary {
  AnomalyDetectorArn?: string;
  AnomalyDetectorName?: string;
  AnomalyDetectorDescription?: string;
  CreationTime?: Date;
  LastModificationTime?: Date;
  Status?: AnomalyDetectorStatus;
  Tags?: Record<string, string>;
}
export interface DimensionValueContribution {
  DimensionValue?: string;
  ContributionScore?: number;
}
export interface DimensionContribution {
  DimensionName?: string;
  DimensionValueContributionList?: DimensionValueContribution[];
}
export interface ContributionMatrix {
  DimensionContributionList?: DimensionContribution[];
}
export interface MetricLevelImpact {
  MetricName?: string;
  NumTimeSeries?: number;
  ContributionMatrix?: ContributionMatrix;
}
export interface AnomalyGroup {
  StartTime?: string;
  EndTime?: string;
  AnomalyGroupId?: string;
  AnomalyGroupScore?: number;
  PrimaryMetricName?: string;
  MetricLevelImpactList?: MetricLevelImpact[];
}
export interface ItemizedMetricStats {
  MetricName?: string;
  OccurrenceCount?: number;
}
export interface AnomalyGroupStatistics {
  EvaluationStartDate?: string;
  TotalCount?: number;
  ItemizedMetricStatsList?: ItemizedMetricStats[];
}
export interface AnomalyGroupSummary {
  StartTime?: string;
  EndTime?: string;
  AnomalyGroupId?: string;
  AnomalyGroupScore?: number;
  PrimaryMetricName?: string;
}
export interface AnomalyGroupTimeSeries {
  AnomalyGroupId: string | undefined;
  TimeSeriesId?: string;
}
export interface AnomalyGroupTimeSeriesFeedback {
  AnomalyGroupId: string | undefined;
  TimeSeriesId: string | undefined;
  IsAnomaly: boolean | undefined;
}
export interface AppFlowConfig {
  RoleArn?: string;
  FlowName?: string;
}
export interface BackTestConfiguration {
  RunBackTestMode: boolean | undefined;
}
export interface AthenaSourceConfig {
  RoleArn?: string;
  DatabaseName?: string;
  DataCatalog?: string;
  TableName?: string;
  WorkGroupName?: string;
  S3ResultsPath?: string;
  BackTestConfiguration?: BackTestConfiguration;
}
export interface AttributeValue {
  S?: string;
  N?: string;
  B?: string;
  SS?: string[];
  NS?: string[];
  BS?: string[];
}
export interface AutoDetectionS3SourceConfig {
  TemplatedPathList?: string[];
  HistoricalDataPathList?: string[];
}
export interface AutoDetectionMetricSource {
  S3SourceConfig?: AutoDetectionS3SourceConfig;
}
export interface BackTestAnomalyDetectorRequest {
  AnomalyDetectorArn: string | undefined;
}
export interface BackTestAnomalyDetectorResponse {}
export interface CloudWatchConfig {
  RoleArn?: string;
  BackTestConfiguration?: BackTestConfiguration;
}
export declare const Confidence: {
  readonly HIGH: "HIGH";
  readonly LOW: "LOW";
  readonly NONE: "NONE";
};
export type Confidence = (typeof Confidence)[keyof typeof Confidence];
export interface CreateAlertRequest {
  AlertName: string | undefined;
  AlertSensitivityThreshold?: number;
  AlertDescription?: string;
  AnomalyDetectorArn: string | undefined;
  Action: Action | undefined;
  Tags?: Record<string, string>;
  AlertFilters?: AlertFilters;
}
export interface CreateAlertResponse {
  AlertArn?: string;
}
export declare class ServiceQuotaExceededException extends __BaseException {
  readonly name: "ServiceQuotaExceededException";
  readonly $fault: "client";
  Message: string | undefined;
  ResourceId?: string;
  ResourceType?: string;
  QuotaCode?: string;
  ServiceCode?: string;
  constructor(
    opts: __ExceptionOptionType<ServiceQuotaExceededException, __BaseException>
  );
}
export interface CreateAnomalyDetectorRequest {
  AnomalyDetectorName: string | undefined;
  AnomalyDetectorDescription?: string;
  AnomalyDetectorConfig: AnomalyDetectorConfig | undefined;
  KmsKeyArn?: string;
  Tags?: Record<string, string>;
}
export interface CreateAnomalyDetectorResponse {
  AnomalyDetectorArn?: string;
}
export declare const FilterOperation: {
  readonly EQUALS: "EQUALS";
};
export type FilterOperation =
  (typeof FilterOperation)[keyof typeof FilterOperation];
export interface Filter {
  DimensionValue?: string;
  FilterOperation?: FilterOperation;
}
export interface MetricSetDimensionFilter {
  Name?: string;
  FilterList?: Filter[];
}
export interface Metric {
  MetricName: string | undefined;
  AggregationFunction: AggregationFunction | undefined;
  Namespace?: string;
}
export interface VpcConfiguration {
  SubnetIdList: string[] | undefined;
  SecurityGroupIdList: string[] | undefined;
}
export interface RDSSourceConfig {
  DBInstanceIdentifier?: string;
  DatabaseHost?: string;
  DatabasePort?: number;
  SecretManagerArn?: string;
  DatabaseName?: string;
  TableName?: string;
  RoleArn?: string;
  VpcConfiguration?: VpcConfiguration;
}
export interface RedshiftSourceConfig {
  ClusterIdentifier?: string;
  DatabaseHost?: string;
  DatabasePort?: number;
  SecretManagerArn?: string;
  DatabaseName?: string;
  TableName?: string;
  RoleArn?: string;
  VpcConfiguration?: VpcConfiguration;
}
export declare const CSVFileCompression: {
  readonly GZIP: "GZIP";
  readonly NONE: "NONE";
};
export type CSVFileCompression =
  (typeof CSVFileCompression)[keyof typeof CSVFileCompression];
export interface CsvFormatDescriptor {
  FileCompression?: CSVFileCompression;
  Charset?: string;
  ContainsHeader?: boolean;
  Delimiter?: string;
  HeaderList?: string[];
  QuoteSymbol?: string;
}
export declare const JsonFileCompression: {
  readonly GZIP: "GZIP";
  readonly NONE: "NONE";
};
export type JsonFileCompression =
  (typeof JsonFileCompression)[keyof typeof JsonFileCompression];
export interface JsonFormatDescriptor {
  FileCompression?: JsonFileCompression;
  Charset?: string;
}
export interface FileFormatDescriptor {
  CsvFormatDescriptor?: CsvFormatDescriptor;
  JsonFormatDescriptor?: JsonFormatDescriptor;
}
export interface S3SourceConfig {
  RoleArn?: string;
  TemplatedPathList?: string[];
  HistoricalDataPathList?: string[];
  FileFormatDescriptor?: FileFormatDescriptor;
}
export interface MetricSource {
  S3SourceConfig?: S3SourceConfig;
  AppFlowConfig?: AppFlowConfig;
  CloudWatchConfig?: CloudWatchConfig;
  RDSSourceConfig?: RDSSourceConfig;
  RedshiftSourceConfig?: RedshiftSourceConfig;
  AthenaSourceConfig?: AthenaSourceConfig;
}
export interface TimestampColumn {
  ColumnName?: string;
  ColumnFormat?: string;
}
export interface CreateMetricSetRequest {
  AnomalyDetectorArn: string | undefined;
  MetricSetName: string | undefined;
  MetricSetDescription?: string;
  MetricList: Metric[] | undefined;
  Offset?: number;
  TimestampColumn?: TimestampColumn;
  DimensionList?: string[];
  MetricSetFrequency?: Frequency;
  MetricSource: MetricSource | undefined;
  Timezone?: string;
  Tags?: Record<string, string>;
  DimensionFilterList?: MetricSetDimensionFilter[];
}
export interface CreateMetricSetResponse {
  MetricSetArn?: string;
}
export interface DeactivateAnomalyDetectorRequest {
  AnomalyDetectorArn: string | undefined;
}
export interface DeactivateAnomalyDetectorResponse {}
export interface DeleteAlertRequest {
  AlertArn: string | undefined;
}
export interface DeleteAlertResponse {}
export interface DeleteAnomalyDetectorRequest {
  AnomalyDetectorArn: string | undefined;
}
export interface DeleteAnomalyDetectorResponse {}
export interface DescribeAlertRequest {
  AlertArn: string | undefined;
}
export interface DescribeAlertResponse {
  Alert?: Alert;
}
export interface DescribeAnomalyDetectionExecutionsRequest {
  AnomalyDetectorArn: string | undefined;
  Timestamp?: string;
  MaxResults?: number;
  NextToken?: string;
}
export interface ExecutionStatus {
  Timestamp?: string;
  Status?: AnomalyDetectionTaskStatus;
  FailureReason?: string;
}
export interface DescribeAnomalyDetectionExecutionsResponse {
  ExecutionList?: ExecutionStatus[];
  NextToken?: string;
}
export interface DescribeAnomalyDetectorRequest {
  AnomalyDetectorArn: string | undefined;
}
export interface DescribeAnomalyDetectorResponse {
  AnomalyDetectorArn?: string;
  AnomalyDetectorName?: string;
  AnomalyDetectorDescription?: string;
  AnomalyDetectorConfig?: AnomalyDetectorConfigSummary;
  CreationTime?: Date;
  LastModificationTime?: Date;
  Status?: AnomalyDetectorStatus;
  FailureReason?: string;
  KmsKeyArn?: string;
  FailureType?: AnomalyDetectorFailureType;
}
export interface DescribeMetricSetRequest {
  MetricSetArn: string | undefined;
}
export interface DescribeMetricSetResponse {
  MetricSetArn?: string;
  AnomalyDetectorArn?: string;
  MetricSetName?: string;
  MetricSetDescription?: string;
  CreationTime?: Date;
  LastModificationTime?: Date;
  Offset?: number;
  MetricList?: Metric[];
  TimestampColumn?: TimestampColumn;
  DimensionList?: string[];
  MetricSetFrequency?: Frequency;
  Timezone?: string;
  MetricSource?: MetricSource;
  DimensionFilterList?: MetricSetDimensionFilter[];
}
export interface DetectedField {
  Value?: AttributeValue;
  Confidence?: Confidence;
  Message?: string;
}
export interface DetectedCsvFormatDescriptor {
  FileCompression?: DetectedField;
  Charset?: DetectedField;
  ContainsHeader?: DetectedField;
  Delimiter?: DetectedField;
  HeaderList?: DetectedField;
  QuoteSymbol?: DetectedField;
}
export interface DetectedJsonFormatDescriptor {
  FileCompression?: DetectedField;
  Charset?: DetectedField;
}
export interface DetectedFileFormatDescriptor {
  CsvFormatDescriptor?: DetectedCsvFormatDescriptor;
  JsonFormatDescriptor?: DetectedJsonFormatDescriptor;
}
export interface DetectedS3SourceConfig {
  FileFormatDescriptor?: DetectedFileFormatDescriptor;
}
export interface DetectedMetricSource {
  S3SourceConfig?: DetectedS3SourceConfig;
}
export interface DetectedMetricSetConfig {
  Offset?: DetectedField;
  MetricSetFrequency?: DetectedField;
  MetricSource?: DetectedMetricSource;
}
export interface DetectMetricSetConfigRequest {
  AnomalyDetectorArn: string | undefined;
  AutoDetectionMetricSource: AutoDetectionMetricSource | undefined;
}
export interface DetectMetricSetConfigResponse {
  DetectedMetricSetConfig?: DetectedMetricSetConfig;
}
export interface DimensionNameValue {
  DimensionName: string | undefined;
  DimensionValue: string | undefined;
}
export interface GetAnomalyGroupRequest {
  AnomalyGroupId: string | undefined;
  AnomalyDetectorArn: string | undefined;
}
export interface GetAnomalyGroupResponse {
  AnomalyGroup?: AnomalyGroup;
}
export interface GetDataQualityMetricsRequest {
  AnomalyDetectorArn: string | undefined;
  MetricSetArn?: string;
}
export interface GetDataQualityMetricsResponse {
  AnomalyDetectorDataQualityMetricList?: AnomalyDetectorDataQualityMetric[];
}
export interface GetFeedbackRequest {
  AnomalyDetectorArn: string | undefined;
  AnomalyGroupTimeSeriesFeedback: AnomalyGroupTimeSeries | undefined;
  MaxResults?: number;
  NextToken?: string;
}
export interface TimeSeriesFeedback {
  TimeSeriesId?: string;
  IsAnomaly?: boolean;
}
export interface GetFeedbackResponse {
  AnomalyGroupTimeSeriesFeedback?: TimeSeriesFeedback[];
  NextToken?: string;
}
export interface SampleDataS3SourceConfig {
  RoleArn: string | undefined;
  TemplatedPathList?: string[];
  HistoricalDataPathList?: string[];
  FileFormatDescriptor: FileFormatDescriptor | undefined;
}
export interface GetSampleDataRequest {
  S3SourceConfig?: SampleDataS3SourceConfig;
}
export interface GetSampleDataResponse {
  HeaderValues?: string[];
  SampleRows?: string[][];
}
export declare const RelationshipType: {
  readonly CAUSE_OF_INPUT_ANOMALY_GROUP: "CAUSE_OF_INPUT_ANOMALY_GROUP";
  readonly EFFECT_OF_INPUT_ANOMALY_GROUP: "EFFECT_OF_INPUT_ANOMALY_GROUP";
};
export type RelationshipType =
  (typeof RelationshipType)[keyof typeof RelationshipType];
export interface InterMetricImpactDetails {
  MetricName?: string;
  AnomalyGroupId?: string;
  RelationshipType?: RelationshipType;
  ContributionPercentage?: number;
}
export interface ListAlertsRequest {
  AnomalyDetectorArn?: string;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListAlertsResponse {
  AlertSummaryList?: AlertSummary[];
  NextToken?: string;
}
export interface ListAnomalyDetectorsRequest {
  MaxResults?: number;
  NextToken?: string;
}
export interface ListAnomalyDetectorsResponse {
  AnomalyDetectorSummaryList?: AnomalyDetectorSummary[];
  NextToken?: string;
}
export interface ListAnomalyGroupRelatedMetricsRequest {
  AnomalyDetectorArn: string | undefined;
  AnomalyGroupId: string | undefined;
  RelationshipTypeFilter?: RelationshipType;
  MaxResults?: number;
  NextToken?: string;
}
export interface ListAnomalyGroupRelatedMetricsResponse {
  InterMetricImpactList?: InterMetricImpactDetails[];
  NextToken?: string;
}
export interface ListAnomalyGroupSummariesRequest {
  AnomalyDetectorArn: string | undefined;
  SensitivityThreshold: number | undefined;
  MaxResults?: number;
  NextToken?: string;
}
export interface ListAnomalyGroupSummariesResponse {
  AnomalyGroupSummaryList?: AnomalyGroupSummary[];
  AnomalyGroupStatistics?: AnomalyGroupStatistics;
  NextToken?: string;
}
export interface ListAnomalyGroupTimeSeriesRequest {
  AnomalyDetectorArn: string | undefined;
  AnomalyGroupId: string | undefined;
  MetricName: string | undefined;
  MaxResults?: number;
  NextToken?: string;
}
export interface TimeSeries {
  TimeSeriesId: string | undefined;
  DimensionList: DimensionNameValue[] | undefined;
  MetricValueList: number[] | undefined;
}
export interface ListAnomalyGroupTimeSeriesResponse {
  AnomalyGroupId?: string;
  MetricName?: string;
  TimestampList?: string[];
  NextToken?: string;
  TimeSeriesList?: TimeSeries[];
}
export interface ListMetricSetsRequest {
  AnomalyDetectorArn?: string;
  MaxResults?: number;
  NextToken?: string;
}
export interface MetricSetSummary {
  MetricSetArn?: string;
  AnomalyDetectorArn?: string;
  MetricSetDescription?: string;
  MetricSetName?: string;
  CreationTime?: Date;
  LastModificationTime?: Date;
  Tags?: Record<string, string>;
}
export interface ListMetricSetsResponse {
  MetricSetSummaryList?: MetricSetSummary[];
  NextToken?: string;
}
export interface ListTagsForResourceRequest {
  ResourceArn: string | undefined;
}
export interface ListTagsForResourceResponse {
  Tags?: Record<string, string>;
}
export interface PutFeedbackRequest {
  AnomalyDetectorArn: string | undefined;
  AnomalyGroupTimeSeriesFeedback: AnomalyGroupTimeSeriesFeedback | undefined;
}
export interface PutFeedbackResponse {}
export interface TagResourceRequest {
  ResourceArn: string | undefined;
  Tags: Record<string, string> | undefined;
}
export interface TagResourceResponse {}
export interface UntagResourceRequest {
  ResourceArn: string | undefined;
  TagKeys: string[] | undefined;
}
export interface UntagResourceResponse {}
export interface UpdateAlertRequest {
  AlertArn: string | undefined;
  AlertDescription?: string;
  AlertSensitivityThreshold?: number;
  Action?: Action;
  AlertFilters?: AlertFilters;
}
export interface UpdateAlertResponse {
  AlertArn?: string;
}
export interface UpdateAnomalyDetectorRequest {
  AnomalyDetectorArn: string | undefined;
  KmsKeyArn?: string;
  AnomalyDetectorDescription?: string;
  AnomalyDetectorConfig?: AnomalyDetectorConfig;
}
export interface UpdateAnomalyDetectorResponse {
  AnomalyDetectorArn?: string;
}
export interface UpdateMetricSetRequest {
  MetricSetArn: string | undefined;
  MetricSetDescription?: string;
  MetricList?: Metric[];
  Offset?: number;
  TimestampColumn?: TimestampColumn;
  DimensionList?: string[];
  MetricSetFrequency?: Frequency;
  MetricSource?: MetricSource;
  DimensionFilterList?: MetricSetDimensionFilter[];
}
export interface UpdateMetricSetResponse {
  MetricSetArn?: string;
}
