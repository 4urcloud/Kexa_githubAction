import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import {
  ActivateGatewayCommandInput,
  ActivateGatewayCommandOutput,
} from "./commands/ActivateGatewayCommand";
import {
  AddCacheCommandInput,
  AddCacheCommandOutput,
} from "./commands/AddCacheCommand";
import {
  AddTagsToResourceCommandInput,
  AddTagsToResourceCommandOutput,
} from "./commands/AddTagsToResourceCommand";
import {
  AddUploadBufferCommandInput,
  AddUploadBufferCommandOutput,
} from "./commands/AddUploadBufferCommand";
import {
  AddWorkingStorageCommandInput,
  AddWorkingStorageCommandOutput,
} from "./commands/AddWorkingStorageCommand";
import {
  AssignTapePoolCommandInput,
  AssignTapePoolCommandOutput,
} from "./commands/AssignTapePoolCommand";
import {
  AssociateFileSystemCommandInput,
  AssociateFileSystemCommandOutput,
} from "./commands/AssociateFileSystemCommand";
import {
  AttachVolumeCommandInput,
  AttachVolumeCommandOutput,
} from "./commands/AttachVolumeCommand";
import {
  CancelArchivalCommandInput,
  CancelArchivalCommandOutput,
} from "./commands/CancelArchivalCommand";
import {
  CancelRetrievalCommandInput,
  CancelRetrievalCommandOutput,
} from "./commands/CancelRetrievalCommand";
import {
  CreateCachediSCSIVolumeCommandInput,
  CreateCachediSCSIVolumeCommandOutput,
} from "./commands/CreateCachediSCSIVolumeCommand";
import {
  CreateNFSFileShareCommandInput,
  CreateNFSFileShareCommandOutput,
} from "./commands/CreateNFSFileShareCommand";
import {
  CreateSMBFileShareCommandInput,
  CreateSMBFileShareCommandOutput,
} from "./commands/CreateSMBFileShareCommand";
import {
  CreateSnapshotCommandInput,
  CreateSnapshotCommandOutput,
} from "./commands/CreateSnapshotCommand";
import {
  CreateSnapshotFromVolumeRecoveryPointCommandInput,
  CreateSnapshotFromVolumeRecoveryPointCommandOutput,
} from "./commands/CreateSnapshotFromVolumeRecoveryPointCommand";
import {
  CreateStorediSCSIVolumeCommandInput,
  CreateStorediSCSIVolumeCommandOutput,
} from "./commands/CreateStorediSCSIVolumeCommand";
import {
  CreateTapePoolCommandInput,
  CreateTapePoolCommandOutput,
} from "./commands/CreateTapePoolCommand";
import {
  CreateTapesCommandInput,
  CreateTapesCommandOutput,
} from "./commands/CreateTapesCommand";
import {
  CreateTapeWithBarcodeCommandInput,
  CreateTapeWithBarcodeCommandOutput,
} from "./commands/CreateTapeWithBarcodeCommand";
import {
  DeleteAutomaticTapeCreationPolicyCommandInput,
  DeleteAutomaticTapeCreationPolicyCommandOutput,
} from "./commands/DeleteAutomaticTapeCreationPolicyCommand";
import {
  DeleteBandwidthRateLimitCommandInput,
  DeleteBandwidthRateLimitCommandOutput,
} from "./commands/DeleteBandwidthRateLimitCommand";
import {
  DeleteChapCredentialsCommandInput,
  DeleteChapCredentialsCommandOutput,
} from "./commands/DeleteChapCredentialsCommand";
import {
  DeleteFileShareCommandInput,
  DeleteFileShareCommandOutput,
} from "./commands/DeleteFileShareCommand";
import {
  DeleteGatewayCommandInput,
  DeleteGatewayCommandOutput,
} from "./commands/DeleteGatewayCommand";
import {
  DeleteSnapshotScheduleCommandInput,
  DeleteSnapshotScheduleCommandOutput,
} from "./commands/DeleteSnapshotScheduleCommand";
import {
  DeleteTapeArchiveCommandInput,
  DeleteTapeArchiveCommandOutput,
} from "./commands/DeleteTapeArchiveCommand";
import {
  DeleteTapeCommandInput,
  DeleteTapeCommandOutput,
} from "./commands/DeleteTapeCommand";
import {
  DeleteTapePoolCommandInput,
  DeleteTapePoolCommandOutput,
} from "./commands/DeleteTapePoolCommand";
import {
  DeleteVolumeCommandInput,
  DeleteVolumeCommandOutput,
} from "./commands/DeleteVolumeCommand";
import {
  DescribeAvailabilityMonitorTestCommandInput,
  DescribeAvailabilityMonitorTestCommandOutput,
} from "./commands/DescribeAvailabilityMonitorTestCommand";
import {
  DescribeBandwidthRateLimitCommandInput,
  DescribeBandwidthRateLimitCommandOutput,
} from "./commands/DescribeBandwidthRateLimitCommand";
import {
  DescribeBandwidthRateLimitScheduleCommandInput,
  DescribeBandwidthRateLimitScheduleCommandOutput,
} from "./commands/DescribeBandwidthRateLimitScheduleCommand";
import {
  DescribeCacheCommandInput,
  DescribeCacheCommandOutput,
} from "./commands/DescribeCacheCommand";
import {
  DescribeCachediSCSIVolumesCommandInput,
  DescribeCachediSCSIVolumesCommandOutput,
} from "./commands/DescribeCachediSCSIVolumesCommand";
import {
  DescribeChapCredentialsCommandInput,
  DescribeChapCredentialsCommandOutput,
} from "./commands/DescribeChapCredentialsCommand";
import {
  DescribeFileSystemAssociationsCommandInput,
  DescribeFileSystemAssociationsCommandOutput,
} from "./commands/DescribeFileSystemAssociationsCommand";
import {
  DescribeGatewayInformationCommandInput,
  DescribeGatewayInformationCommandOutput,
} from "./commands/DescribeGatewayInformationCommand";
import {
  DescribeMaintenanceStartTimeCommandInput,
  DescribeMaintenanceStartTimeCommandOutput,
} from "./commands/DescribeMaintenanceStartTimeCommand";
import {
  DescribeNFSFileSharesCommandInput,
  DescribeNFSFileSharesCommandOutput,
} from "./commands/DescribeNFSFileSharesCommand";
import {
  DescribeSMBFileSharesCommandInput,
  DescribeSMBFileSharesCommandOutput,
} from "./commands/DescribeSMBFileSharesCommand";
import {
  DescribeSMBSettingsCommandInput,
  DescribeSMBSettingsCommandOutput,
} from "./commands/DescribeSMBSettingsCommand";
import {
  DescribeSnapshotScheduleCommandInput,
  DescribeSnapshotScheduleCommandOutput,
} from "./commands/DescribeSnapshotScheduleCommand";
import {
  DescribeStorediSCSIVolumesCommandInput,
  DescribeStorediSCSIVolumesCommandOutput,
} from "./commands/DescribeStorediSCSIVolumesCommand";
import {
  DescribeTapeArchivesCommandInput,
  DescribeTapeArchivesCommandOutput,
} from "./commands/DescribeTapeArchivesCommand";
import {
  DescribeTapeRecoveryPointsCommandInput,
  DescribeTapeRecoveryPointsCommandOutput,
} from "./commands/DescribeTapeRecoveryPointsCommand";
import {
  DescribeTapesCommandInput,
  DescribeTapesCommandOutput,
} from "./commands/DescribeTapesCommand";
import {
  DescribeUploadBufferCommandInput,
  DescribeUploadBufferCommandOutput,
} from "./commands/DescribeUploadBufferCommand";
import {
  DescribeVTLDevicesCommandInput,
  DescribeVTLDevicesCommandOutput,
} from "./commands/DescribeVTLDevicesCommand";
import {
  DescribeWorkingStorageCommandInput,
  DescribeWorkingStorageCommandOutput,
} from "./commands/DescribeWorkingStorageCommand";
import {
  DetachVolumeCommandInput,
  DetachVolumeCommandOutput,
} from "./commands/DetachVolumeCommand";
import {
  DisableGatewayCommandInput,
  DisableGatewayCommandOutput,
} from "./commands/DisableGatewayCommand";
import {
  DisassociateFileSystemCommandInput,
  DisassociateFileSystemCommandOutput,
} from "./commands/DisassociateFileSystemCommand";
import {
  JoinDomainCommandInput,
  JoinDomainCommandOutput,
} from "./commands/JoinDomainCommand";
import {
  ListAutomaticTapeCreationPoliciesCommandInput,
  ListAutomaticTapeCreationPoliciesCommandOutput,
} from "./commands/ListAutomaticTapeCreationPoliciesCommand";
import {
  ListFileSharesCommandInput,
  ListFileSharesCommandOutput,
} from "./commands/ListFileSharesCommand";
import {
  ListFileSystemAssociationsCommandInput,
  ListFileSystemAssociationsCommandOutput,
} from "./commands/ListFileSystemAssociationsCommand";
import {
  ListGatewaysCommandInput,
  ListGatewaysCommandOutput,
} from "./commands/ListGatewaysCommand";
import {
  ListLocalDisksCommandInput,
  ListLocalDisksCommandOutput,
} from "./commands/ListLocalDisksCommand";
import {
  ListTagsForResourceCommandInput,
  ListTagsForResourceCommandOutput,
} from "./commands/ListTagsForResourceCommand";
import {
  ListTapePoolsCommandInput,
  ListTapePoolsCommandOutput,
} from "./commands/ListTapePoolsCommand";
import {
  ListTapesCommandInput,
  ListTapesCommandOutput,
} from "./commands/ListTapesCommand";
import {
  ListVolumeInitiatorsCommandInput,
  ListVolumeInitiatorsCommandOutput,
} from "./commands/ListVolumeInitiatorsCommand";
import {
  ListVolumeRecoveryPointsCommandInput,
  ListVolumeRecoveryPointsCommandOutput,
} from "./commands/ListVolumeRecoveryPointsCommand";
import {
  ListVolumesCommandInput,
  ListVolumesCommandOutput,
} from "./commands/ListVolumesCommand";
import {
  NotifyWhenUploadedCommandInput,
  NotifyWhenUploadedCommandOutput,
} from "./commands/NotifyWhenUploadedCommand";
import {
  RefreshCacheCommandInput,
  RefreshCacheCommandOutput,
} from "./commands/RefreshCacheCommand";
import {
  RemoveTagsFromResourceCommandInput,
  RemoveTagsFromResourceCommandOutput,
} from "./commands/RemoveTagsFromResourceCommand";
import {
  ResetCacheCommandInput,
  ResetCacheCommandOutput,
} from "./commands/ResetCacheCommand";
import {
  RetrieveTapeArchiveCommandInput,
  RetrieveTapeArchiveCommandOutput,
} from "./commands/RetrieveTapeArchiveCommand";
import {
  RetrieveTapeRecoveryPointCommandInput,
  RetrieveTapeRecoveryPointCommandOutput,
} from "./commands/RetrieveTapeRecoveryPointCommand";
import {
  SetLocalConsolePasswordCommandInput,
  SetLocalConsolePasswordCommandOutput,
} from "./commands/SetLocalConsolePasswordCommand";
import {
  SetSMBGuestPasswordCommandInput,
  SetSMBGuestPasswordCommandOutput,
} from "./commands/SetSMBGuestPasswordCommand";
import {
  ShutdownGatewayCommandInput,
  ShutdownGatewayCommandOutput,
} from "./commands/ShutdownGatewayCommand";
import {
  StartAvailabilityMonitorTestCommandInput,
  StartAvailabilityMonitorTestCommandOutput,
} from "./commands/StartAvailabilityMonitorTestCommand";
import {
  StartGatewayCommandInput,
  StartGatewayCommandOutput,
} from "./commands/StartGatewayCommand";
import {
  UpdateAutomaticTapeCreationPolicyCommandInput,
  UpdateAutomaticTapeCreationPolicyCommandOutput,
} from "./commands/UpdateAutomaticTapeCreationPolicyCommand";
import {
  UpdateBandwidthRateLimitCommandInput,
  UpdateBandwidthRateLimitCommandOutput,
} from "./commands/UpdateBandwidthRateLimitCommand";
import {
  UpdateBandwidthRateLimitScheduleCommandInput,
  UpdateBandwidthRateLimitScheduleCommandOutput,
} from "./commands/UpdateBandwidthRateLimitScheduleCommand";
import {
  UpdateChapCredentialsCommandInput,
  UpdateChapCredentialsCommandOutput,
} from "./commands/UpdateChapCredentialsCommand";
import {
  UpdateFileSystemAssociationCommandInput,
  UpdateFileSystemAssociationCommandOutput,
} from "./commands/UpdateFileSystemAssociationCommand";
import {
  UpdateGatewayInformationCommandInput,
  UpdateGatewayInformationCommandOutput,
} from "./commands/UpdateGatewayInformationCommand";
import {
  UpdateGatewaySoftwareNowCommandInput,
  UpdateGatewaySoftwareNowCommandOutput,
} from "./commands/UpdateGatewaySoftwareNowCommand";
import {
  UpdateMaintenanceStartTimeCommandInput,
  UpdateMaintenanceStartTimeCommandOutput,
} from "./commands/UpdateMaintenanceStartTimeCommand";
import {
  UpdateNFSFileShareCommandInput,
  UpdateNFSFileShareCommandOutput,
} from "./commands/UpdateNFSFileShareCommand";
import {
  UpdateSMBFileShareCommandInput,
  UpdateSMBFileShareCommandOutput,
} from "./commands/UpdateSMBFileShareCommand";
import {
  UpdateSMBFileShareVisibilityCommandInput,
  UpdateSMBFileShareVisibilityCommandOutput,
} from "./commands/UpdateSMBFileShareVisibilityCommand";
import {
  UpdateSMBLocalGroupsCommandInput,
  UpdateSMBLocalGroupsCommandOutput,
} from "./commands/UpdateSMBLocalGroupsCommand";
import {
  UpdateSMBSecurityStrategyCommandInput,
  UpdateSMBSecurityStrategyCommandOutput,
} from "./commands/UpdateSMBSecurityStrategyCommand";
import {
  UpdateSnapshotScheduleCommandInput,
  UpdateSnapshotScheduleCommandOutput,
} from "./commands/UpdateSnapshotScheduleCommand";
import {
  UpdateVTLDeviceTypeCommandInput,
  UpdateVTLDeviceTypeCommandOutput,
} from "./commands/UpdateVTLDeviceTypeCommand";
import { StorageGatewayClient } from "./StorageGatewayClient";
export interface StorageGateway {
  activateGateway(
    args: ActivateGatewayCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ActivateGatewayCommandOutput>;
  activateGateway(
    args: ActivateGatewayCommandInput,
    cb: (err: any, data?: ActivateGatewayCommandOutput) => void
  ): void;
  activateGateway(
    args: ActivateGatewayCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ActivateGatewayCommandOutput) => void
  ): void;
  addCache(
    args: AddCacheCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AddCacheCommandOutput>;
  addCache(
    args: AddCacheCommandInput,
    cb: (err: any, data?: AddCacheCommandOutput) => void
  ): void;
  addCache(
    args: AddCacheCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AddCacheCommandOutput) => void
  ): void;
  addTagsToResource(
    args: AddTagsToResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AddTagsToResourceCommandOutput>;
  addTagsToResource(
    args: AddTagsToResourceCommandInput,
    cb: (err: any, data?: AddTagsToResourceCommandOutput) => void
  ): void;
  addTagsToResource(
    args: AddTagsToResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AddTagsToResourceCommandOutput) => void
  ): void;
  addUploadBuffer(
    args: AddUploadBufferCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AddUploadBufferCommandOutput>;
  addUploadBuffer(
    args: AddUploadBufferCommandInput,
    cb: (err: any, data?: AddUploadBufferCommandOutput) => void
  ): void;
  addUploadBuffer(
    args: AddUploadBufferCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AddUploadBufferCommandOutput) => void
  ): void;
  addWorkingStorage(
    args: AddWorkingStorageCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AddWorkingStorageCommandOutput>;
  addWorkingStorage(
    args: AddWorkingStorageCommandInput,
    cb: (err: any, data?: AddWorkingStorageCommandOutput) => void
  ): void;
  addWorkingStorage(
    args: AddWorkingStorageCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AddWorkingStorageCommandOutput) => void
  ): void;
  assignTapePool(
    args: AssignTapePoolCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AssignTapePoolCommandOutput>;
  assignTapePool(
    args: AssignTapePoolCommandInput,
    cb: (err: any, data?: AssignTapePoolCommandOutput) => void
  ): void;
  assignTapePool(
    args: AssignTapePoolCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AssignTapePoolCommandOutput) => void
  ): void;
  associateFileSystem(
    args: AssociateFileSystemCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AssociateFileSystemCommandOutput>;
  associateFileSystem(
    args: AssociateFileSystemCommandInput,
    cb: (err: any, data?: AssociateFileSystemCommandOutput) => void
  ): void;
  associateFileSystem(
    args: AssociateFileSystemCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AssociateFileSystemCommandOutput) => void
  ): void;
  attachVolume(
    args: AttachVolumeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AttachVolumeCommandOutput>;
  attachVolume(
    args: AttachVolumeCommandInput,
    cb: (err: any, data?: AttachVolumeCommandOutput) => void
  ): void;
  attachVolume(
    args: AttachVolumeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AttachVolumeCommandOutput) => void
  ): void;
  cancelArchival(
    args: CancelArchivalCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CancelArchivalCommandOutput>;
  cancelArchival(
    args: CancelArchivalCommandInput,
    cb: (err: any, data?: CancelArchivalCommandOutput) => void
  ): void;
  cancelArchival(
    args: CancelArchivalCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CancelArchivalCommandOutput) => void
  ): void;
  cancelRetrieval(
    args: CancelRetrievalCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CancelRetrievalCommandOutput>;
  cancelRetrieval(
    args: CancelRetrievalCommandInput,
    cb: (err: any, data?: CancelRetrievalCommandOutput) => void
  ): void;
  cancelRetrieval(
    args: CancelRetrievalCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CancelRetrievalCommandOutput) => void
  ): void;
  createCachediSCSIVolume(
    args: CreateCachediSCSIVolumeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateCachediSCSIVolumeCommandOutput>;
  createCachediSCSIVolume(
    args: CreateCachediSCSIVolumeCommandInput,
    cb: (err: any, data?: CreateCachediSCSIVolumeCommandOutput) => void
  ): void;
  createCachediSCSIVolume(
    args: CreateCachediSCSIVolumeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateCachediSCSIVolumeCommandOutput) => void
  ): void;
  createNFSFileShare(
    args: CreateNFSFileShareCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateNFSFileShareCommandOutput>;
  createNFSFileShare(
    args: CreateNFSFileShareCommandInput,
    cb: (err: any, data?: CreateNFSFileShareCommandOutput) => void
  ): void;
  createNFSFileShare(
    args: CreateNFSFileShareCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateNFSFileShareCommandOutput) => void
  ): void;
  createSMBFileShare(
    args: CreateSMBFileShareCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateSMBFileShareCommandOutput>;
  createSMBFileShare(
    args: CreateSMBFileShareCommandInput,
    cb: (err: any, data?: CreateSMBFileShareCommandOutput) => void
  ): void;
  createSMBFileShare(
    args: CreateSMBFileShareCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateSMBFileShareCommandOutput) => void
  ): void;
  createSnapshot(
    args: CreateSnapshotCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateSnapshotCommandOutput>;
  createSnapshot(
    args: CreateSnapshotCommandInput,
    cb: (err: any, data?: CreateSnapshotCommandOutput) => void
  ): void;
  createSnapshot(
    args: CreateSnapshotCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateSnapshotCommandOutput) => void
  ): void;
  createSnapshotFromVolumeRecoveryPoint(
    args: CreateSnapshotFromVolumeRecoveryPointCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateSnapshotFromVolumeRecoveryPointCommandOutput>;
  createSnapshotFromVolumeRecoveryPoint(
    args: CreateSnapshotFromVolumeRecoveryPointCommandInput,
    cb: (
      err: any,
      data?: CreateSnapshotFromVolumeRecoveryPointCommandOutput
    ) => void
  ): void;
  createSnapshotFromVolumeRecoveryPoint(
    args: CreateSnapshotFromVolumeRecoveryPointCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: CreateSnapshotFromVolumeRecoveryPointCommandOutput
    ) => void
  ): void;
  createStorediSCSIVolume(
    args: CreateStorediSCSIVolumeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateStorediSCSIVolumeCommandOutput>;
  createStorediSCSIVolume(
    args: CreateStorediSCSIVolumeCommandInput,
    cb: (err: any, data?: CreateStorediSCSIVolumeCommandOutput) => void
  ): void;
  createStorediSCSIVolume(
    args: CreateStorediSCSIVolumeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateStorediSCSIVolumeCommandOutput) => void
  ): void;
  createTapePool(
    args: CreateTapePoolCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateTapePoolCommandOutput>;
  createTapePool(
    args: CreateTapePoolCommandInput,
    cb: (err: any, data?: CreateTapePoolCommandOutput) => void
  ): void;
  createTapePool(
    args: CreateTapePoolCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateTapePoolCommandOutput) => void
  ): void;
  createTapes(
    args: CreateTapesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateTapesCommandOutput>;
  createTapes(
    args: CreateTapesCommandInput,
    cb: (err: any, data?: CreateTapesCommandOutput) => void
  ): void;
  createTapes(
    args: CreateTapesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateTapesCommandOutput) => void
  ): void;
  createTapeWithBarcode(
    args: CreateTapeWithBarcodeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateTapeWithBarcodeCommandOutput>;
  createTapeWithBarcode(
    args: CreateTapeWithBarcodeCommandInput,
    cb: (err: any, data?: CreateTapeWithBarcodeCommandOutput) => void
  ): void;
  createTapeWithBarcode(
    args: CreateTapeWithBarcodeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateTapeWithBarcodeCommandOutput) => void
  ): void;
  deleteAutomaticTapeCreationPolicy(
    args: DeleteAutomaticTapeCreationPolicyCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteAutomaticTapeCreationPolicyCommandOutput>;
  deleteAutomaticTapeCreationPolicy(
    args: DeleteAutomaticTapeCreationPolicyCommandInput,
    cb: (
      err: any,
      data?: DeleteAutomaticTapeCreationPolicyCommandOutput
    ) => void
  ): void;
  deleteAutomaticTapeCreationPolicy(
    args: DeleteAutomaticTapeCreationPolicyCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: DeleteAutomaticTapeCreationPolicyCommandOutput
    ) => void
  ): void;
  deleteBandwidthRateLimit(
    args: DeleteBandwidthRateLimitCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteBandwidthRateLimitCommandOutput>;
  deleteBandwidthRateLimit(
    args: DeleteBandwidthRateLimitCommandInput,
    cb: (err: any, data?: DeleteBandwidthRateLimitCommandOutput) => void
  ): void;
  deleteBandwidthRateLimit(
    args: DeleteBandwidthRateLimitCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteBandwidthRateLimitCommandOutput) => void
  ): void;
  deleteChapCredentials(
    args: DeleteChapCredentialsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteChapCredentialsCommandOutput>;
  deleteChapCredentials(
    args: DeleteChapCredentialsCommandInput,
    cb: (err: any, data?: DeleteChapCredentialsCommandOutput) => void
  ): void;
  deleteChapCredentials(
    args: DeleteChapCredentialsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteChapCredentialsCommandOutput) => void
  ): void;
  deleteFileShare(
    args: DeleteFileShareCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteFileShareCommandOutput>;
  deleteFileShare(
    args: DeleteFileShareCommandInput,
    cb: (err: any, data?: DeleteFileShareCommandOutput) => void
  ): void;
  deleteFileShare(
    args: DeleteFileShareCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteFileShareCommandOutput) => void
  ): void;
  deleteGateway(
    args: DeleteGatewayCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteGatewayCommandOutput>;
  deleteGateway(
    args: DeleteGatewayCommandInput,
    cb: (err: any, data?: DeleteGatewayCommandOutput) => void
  ): void;
  deleteGateway(
    args: DeleteGatewayCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteGatewayCommandOutput) => void
  ): void;
  deleteSnapshotSchedule(
    args: DeleteSnapshotScheduleCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteSnapshotScheduleCommandOutput>;
  deleteSnapshotSchedule(
    args: DeleteSnapshotScheduleCommandInput,
    cb: (err: any, data?: DeleteSnapshotScheduleCommandOutput) => void
  ): void;
  deleteSnapshotSchedule(
    args: DeleteSnapshotScheduleCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteSnapshotScheduleCommandOutput) => void
  ): void;
  deleteTape(
    args: DeleteTapeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteTapeCommandOutput>;
  deleteTape(
    args: DeleteTapeCommandInput,
    cb: (err: any, data?: DeleteTapeCommandOutput) => void
  ): void;
  deleteTape(
    args: DeleteTapeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteTapeCommandOutput) => void
  ): void;
  deleteTapeArchive(
    args: DeleteTapeArchiveCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteTapeArchiveCommandOutput>;
  deleteTapeArchive(
    args: DeleteTapeArchiveCommandInput,
    cb: (err: any, data?: DeleteTapeArchiveCommandOutput) => void
  ): void;
  deleteTapeArchive(
    args: DeleteTapeArchiveCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteTapeArchiveCommandOutput) => void
  ): void;
  deleteTapePool(
    args: DeleteTapePoolCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteTapePoolCommandOutput>;
  deleteTapePool(
    args: DeleteTapePoolCommandInput,
    cb: (err: any, data?: DeleteTapePoolCommandOutput) => void
  ): void;
  deleteTapePool(
    args: DeleteTapePoolCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteTapePoolCommandOutput) => void
  ): void;
  deleteVolume(
    args: DeleteVolumeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteVolumeCommandOutput>;
  deleteVolume(
    args: DeleteVolumeCommandInput,
    cb: (err: any, data?: DeleteVolumeCommandOutput) => void
  ): void;
  deleteVolume(
    args: DeleteVolumeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteVolumeCommandOutput) => void
  ): void;
  describeAvailabilityMonitorTest(
    args: DescribeAvailabilityMonitorTestCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeAvailabilityMonitorTestCommandOutput>;
  describeAvailabilityMonitorTest(
    args: DescribeAvailabilityMonitorTestCommandInput,
    cb: (err: any, data?: DescribeAvailabilityMonitorTestCommandOutput) => void
  ): void;
  describeAvailabilityMonitorTest(
    args: DescribeAvailabilityMonitorTestCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeAvailabilityMonitorTestCommandOutput) => void
  ): void;
  describeBandwidthRateLimit(
    args: DescribeBandwidthRateLimitCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeBandwidthRateLimitCommandOutput>;
  describeBandwidthRateLimit(
    args: DescribeBandwidthRateLimitCommandInput,
    cb: (err: any, data?: DescribeBandwidthRateLimitCommandOutput) => void
  ): void;
  describeBandwidthRateLimit(
    args: DescribeBandwidthRateLimitCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeBandwidthRateLimitCommandOutput) => void
  ): void;
  describeBandwidthRateLimitSchedule(
    args: DescribeBandwidthRateLimitScheduleCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeBandwidthRateLimitScheduleCommandOutput>;
  describeBandwidthRateLimitSchedule(
    args: DescribeBandwidthRateLimitScheduleCommandInput,
    cb: (
      err: any,
      data?: DescribeBandwidthRateLimitScheduleCommandOutput
    ) => void
  ): void;
  describeBandwidthRateLimitSchedule(
    args: DescribeBandwidthRateLimitScheduleCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: DescribeBandwidthRateLimitScheduleCommandOutput
    ) => void
  ): void;
  describeCache(
    args: DescribeCacheCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeCacheCommandOutput>;
  describeCache(
    args: DescribeCacheCommandInput,
    cb: (err: any, data?: DescribeCacheCommandOutput) => void
  ): void;
  describeCache(
    args: DescribeCacheCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeCacheCommandOutput) => void
  ): void;
  describeCachediSCSIVolumes(
    args: DescribeCachediSCSIVolumesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeCachediSCSIVolumesCommandOutput>;
  describeCachediSCSIVolumes(
    args: DescribeCachediSCSIVolumesCommandInput,
    cb: (err: any, data?: DescribeCachediSCSIVolumesCommandOutput) => void
  ): void;
  describeCachediSCSIVolumes(
    args: DescribeCachediSCSIVolumesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeCachediSCSIVolumesCommandOutput) => void
  ): void;
  describeChapCredentials(
    args: DescribeChapCredentialsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeChapCredentialsCommandOutput>;
  describeChapCredentials(
    args: DescribeChapCredentialsCommandInput,
    cb: (err: any, data?: DescribeChapCredentialsCommandOutput) => void
  ): void;
  describeChapCredentials(
    args: DescribeChapCredentialsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeChapCredentialsCommandOutput) => void
  ): void;
  describeFileSystemAssociations(
    args: DescribeFileSystemAssociationsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeFileSystemAssociationsCommandOutput>;
  describeFileSystemAssociations(
    args: DescribeFileSystemAssociationsCommandInput,
    cb: (err: any, data?: DescribeFileSystemAssociationsCommandOutput) => void
  ): void;
  describeFileSystemAssociations(
    args: DescribeFileSystemAssociationsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeFileSystemAssociationsCommandOutput) => void
  ): void;
  describeGatewayInformation(
    args: DescribeGatewayInformationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeGatewayInformationCommandOutput>;
  describeGatewayInformation(
    args: DescribeGatewayInformationCommandInput,
    cb: (err: any, data?: DescribeGatewayInformationCommandOutput) => void
  ): void;
  describeGatewayInformation(
    args: DescribeGatewayInformationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeGatewayInformationCommandOutput) => void
  ): void;
  describeMaintenanceStartTime(
    args: DescribeMaintenanceStartTimeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeMaintenanceStartTimeCommandOutput>;
  describeMaintenanceStartTime(
    args: DescribeMaintenanceStartTimeCommandInput,
    cb: (err: any, data?: DescribeMaintenanceStartTimeCommandOutput) => void
  ): void;
  describeMaintenanceStartTime(
    args: DescribeMaintenanceStartTimeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeMaintenanceStartTimeCommandOutput) => void
  ): void;
  describeNFSFileShares(
    args: DescribeNFSFileSharesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeNFSFileSharesCommandOutput>;
  describeNFSFileShares(
    args: DescribeNFSFileSharesCommandInput,
    cb: (err: any, data?: DescribeNFSFileSharesCommandOutput) => void
  ): void;
  describeNFSFileShares(
    args: DescribeNFSFileSharesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeNFSFileSharesCommandOutput) => void
  ): void;
  describeSMBFileShares(
    args: DescribeSMBFileSharesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeSMBFileSharesCommandOutput>;
  describeSMBFileShares(
    args: DescribeSMBFileSharesCommandInput,
    cb: (err: any, data?: DescribeSMBFileSharesCommandOutput) => void
  ): void;
  describeSMBFileShares(
    args: DescribeSMBFileSharesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeSMBFileSharesCommandOutput) => void
  ): void;
  describeSMBSettings(
    args: DescribeSMBSettingsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeSMBSettingsCommandOutput>;
  describeSMBSettings(
    args: DescribeSMBSettingsCommandInput,
    cb: (err: any, data?: DescribeSMBSettingsCommandOutput) => void
  ): void;
  describeSMBSettings(
    args: DescribeSMBSettingsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeSMBSettingsCommandOutput) => void
  ): void;
  describeSnapshotSchedule(
    args: DescribeSnapshotScheduleCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeSnapshotScheduleCommandOutput>;
  describeSnapshotSchedule(
    args: DescribeSnapshotScheduleCommandInput,
    cb: (err: any, data?: DescribeSnapshotScheduleCommandOutput) => void
  ): void;
  describeSnapshotSchedule(
    args: DescribeSnapshotScheduleCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeSnapshotScheduleCommandOutput) => void
  ): void;
  describeStorediSCSIVolumes(
    args: DescribeStorediSCSIVolumesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeStorediSCSIVolumesCommandOutput>;
  describeStorediSCSIVolumes(
    args: DescribeStorediSCSIVolumesCommandInput,
    cb: (err: any, data?: DescribeStorediSCSIVolumesCommandOutput) => void
  ): void;
  describeStorediSCSIVolumes(
    args: DescribeStorediSCSIVolumesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeStorediSCSIVolumesCommandOutput) => void
  ): void;
  describeTapeArchives(): Promise<DescribeTapeArchivesCommandOutput>;
  describeTapeArchives(
    args: DescribeTapeArchivesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeTapeArchivesCommandOutput>;
  describeTapeArchives(
    args: DescribeTapeArchivesCommandInput,
    cb: (err: any, data?: DescribeTapeArchivesCommandOutput) => void
  ): void;
  describeTapeArchives(
    args: DescribeTapeArchivesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeTapeArchivesCommandOutput) => void
  ): void;
  describeTapeRecoveryPoints(
    args: DescribeTapeRecoveryPointsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeTapeRecoveryPointsCommandOutput>;
  describeTapeRecoveryPoints(
    args: DescribeTapeRecoveryPointsCommandInput,
    cb: (err: any, data?: DescribeTapeRecoveryPointsCommandOutput) => void
  ): void;
  describeTapeRecoveryPoints(
    args: DescribeTapeRecoveryPointsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeTapeRecoveryPointsCommandOutput) => void
  ): void;
  describeTapes(
    args: DescribeTapesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeTapesCommandOutput>;
  describeTapes(
    args: DescribeTapesCommandInput,
    cb: (err: any, data?: DescribeTapesCommandOutput) => void
  ): void;
  describeTapes(
    args: DescribeTapesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeTapesCommandOutput) => void
  ): void;
  describeUploadBuffer(
    args: DescribeUploadBufferCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeUploadBufferCommandOutput>;
  describeUploadBuffer(
    args: DescribeUploadBufferCommandInput,
    cb: (err: any, data?: DescribeUploadBufferCommandOutput) => void
  ): void;
  describeUploadBuffer(
    args: DescribeUploadBufferCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeUploadBufferCommandOutput) => void
  ): void;
  describeVTLDevices(
    args: DescribeVTLDevicesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeVTLDevicesCommandOutput>;
  describeVTLDevices(
    args: DescribeVTLDevicesCommandInput,
    cb: (err: any, data?: DescribeVTLDevicesCommandOutput) => void
  ): void;
  describeVTLDevices(
    args: DescribeVTLDevicesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeVTLDevicesCommandOutput) => void
  ): void;
  describeWorkingStorage(
    args: DescribeWorkingStorageCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeWorkingStorageCommandOutput>;
  describeWorkingStorage(
    args: DescribeWorkingStorageCommandInput,
    cb: (err: any, data?: DescribeWorkingStorageCommandOutput) => void
  ): void;
  describeWorkingStorage(
    args: DescribeWorkingStorageCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeWorkingStorageCommandOutput) => void
  ): void;
  detachVolume(
    args: DetachVolumeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DetachVolumeCommandOutput>;
  detachVolume(
    args: DetachVolumeCommandInput,
    cb: (err: any, data?: DetachVolumeCommandOutput) => void
  ): void;
  detachVolume(
    args: DetachVolumeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DetachVolumeCommandOutput) => void
  ): void;
  disableGateway(
    args: DisableGatewayCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DisableGatewayCommandOutput>;
  disableGateway(
    args: DisableGatewayCommandInput,
    cb: (err: any, data?: DisableGatewayCommandOutput) => void
  ): void;
  disableGateway(
    args: DisableGatewayCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DisableGatewayCommandOutput) => void
  ): void;
  disassociateFileSystem(
    args: DisassociateFileSystemCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DisassociateFileSystemCommandOutput>;
  disassociateFileSystem(
    args: DisassociateFileSystemCommandInput,
    cb: (err: any, data?: DisassociateFileSystemCommandOutput) => void
  ): void;
  disassociateFileSystem(
    args: DisassociateFileSystemCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DisassociateFileSystemCommandOutput) => void
  ): void;
  joinDomain(
    args: JoinDomainCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<JoinDomainCommandOutput>;
  joinDomain(
    args: JoinDomainCommandInput,
    cb: (err: any, data?: JoinDomainCommandOutput) => void
  ): void;
  joinDomain(
    args: JoinDomainCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: JoinDomainCommandOutput) => void
  ): void;
  listAutomaticTapeCreationPolicies(): Promise<ListAutomaticTapeCreationPoliciesCommandOutput>;
  listAutomaticTapeCreationPolicies(
    args: ListAutomaticTapeCreationPoliciesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListAutomaticTapeCreationPoliciesCommandOutput>;
  listAutomaticTapeCreationPolicies(
    args: ListAutomaticTapeCreationPoliciesCommandInput,
    cb: (
      err: any,
      data?: ListAutomaticTapeCreationPoliciesCommandOutput
    ) => void
  ): void;
  listAutomaticTapeCreationPolicies(
    args: ListAutomaticTapeCreationPoliciesCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: ListAutomaticTapeCreationPoliciesCommandOutput
    ) => void
  ): void;
  listFileShares(): Promise<ListFileSharesCommandOutput>;
  listFileShares(
    args: ListFileSharesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListFileSharesCommandOutput>;
  listFileShares(
    args: ListFileSharesCommandInput,
    cb: (err: any, data?: ListFileSharesCommandOutput) => void
  ): void;
  listFileShares(
    args: ListFileSharesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListFileSharesCommandOutput) => void
  ): void;
  listFileSystemAssociations(): Promise<ListFileSystemAssociationsCommandOutput>;
  listFileSystemAssociations(
    args: ListFileSystemAssociationsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListFileSystemAssociationsCommandOutput>;
  listFileSystemAssociations(
    args: ListFileSystemAssociationsCommandInput,
    cb: (err: any, data?: ListFileSystemAssociationsCommandOutput) => void
  ): void;
  listFileSystemAssociations(
    args: ListFileSystemAssociationsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListFileSystemAssociationsCommandOutput) => void
  ): void;
  listGateways(): Promise<ListGatewaysCommandOutput>;
  listGateways(
    args: ListGatewaysCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListGatewaysCommandOutput>;
  listGateways(
    args: ListGatewaysCommandInput,
    cb: (err: any, data?: ListGatewaysCommandOutput) => void
  ): void;
  listGateways(
    args: ListGatewaysCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListGatewaysCommandOutput) => void
  ): void;
  listLocalDisks(
    args: ListLocalDisksCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListLocalDisksCommandOutput>;
  listLocalDisks(
    args: ListLocalDisksCommandInput,
    cb: (err: any, data?: ListLocalDisksCommandOutput) => void
  ): void;
  listLocalDisks(
    args: ListLocalDisksCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListLocalDisksCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListTagsForResourceCommandOutput>;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  listTapePools(): Promise<ListTapePoolsCommandOutput>;
  listTapePools(
    args: ListTapePoolsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListTapePoolsCommandOutput>;
  listTapePools(
    args: ListTapePoolsCommandInput,
    cb: (err: any, data?: ListTapePoolsCommandOutput) => void
  ): void;
  listTapePools(
    args: ListTapePoolsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListTapePoolsCommandOutput) => void
  ): void;
  listTapes(): Promise<ListTapesCommandOutput>;
  listTapes(
    args: ListTapesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListTapesCommandOutput>;
  listTapes(
    args: ListTapesCommandInput,
    cb: (err: any, data?: ListTapesCommandOutput) => void
  ): void;
  listTapes(
    args: ListTapesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListTapesCommandOutput) => void
  ): void;
  listVolumeInitiators(
    args: ListVolumeInitiatorsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListVolumeInitiatorsCommandOutput>;
  listVolumeInitiators(
    args: ListVolumeInitiatorsCommandInput,
    cb: (err: any, data?: ListVolumeInitiatorsCommandOutput) => void
  ): void;
  listVolumeInitiators(
    args: ListVolumeInitiatorsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListVolumeInitiatorsCommandOutput) => void
  ): void;
  listVolumeRecoveryPoints(
    args: ListVolumeRecoveryPointsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListVolumeRecoveryPointsCommandOutput>;
  listVolumeRecoveryPoints(
    args: ListVolumeRecoveryPointsCommandInput,
    cb: (err: any, data?: ListVolumeRecoveryPointsCommandOutput) => void
  ): void;
  listVolumeRecoveryPoints(
    args: ListVolumeRecoveryPointsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListVolumeRecoveryPointsCommandOutput) => void
  ): void;
  listVolumes(): Promise<ListVolumesCommandOutput>;
  listVolumes(
    args: ListVolumesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListVolumesCommandOutput>;
  listVolumes(
    args: ListVolumesCommandInput,
    cb: (err: any, data?: ListVolumesCommandOutput) => void
  ): void;
  listVolumes(
    args: ListVolumesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListVolumesCommandOutput) => void
  ): void;
  notifyWhenUploaded(
    args: NotifyWhenUploadedCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<NotifyWhenUploadedCommandOutput>;
  notifyWhenUploaded(
    args: NotifyWhenUploadedCommandInput,
    cb: (err: any, data?: NotifyWhenUploadedCommandOutput) => void
  ): void;
  notifyWhenUploaded(
    args: NotifyWhenUploadedCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: NotifyWhenUploadedCommandOutput) => void
  ): void;
  refreshCache(
    args: RefreshCacheCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<RefreshCacheCommandOutput>;
  refreshCache(
    args: RefreshCacheCommandInput,
    cb: (err: any, data?: RefreshCacheCommandOutput) => void
  ): void;
  refreshCache(
    args: RefreshCacheCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: RefreshCacheCommandOutput) => void
  ): void;
  removeTagsFromResource(
    args: RemoveTagsFromResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<RemoveTagsFromResourceCommandOutput>;
  removeTagsFromResource(
    args: RemoveTagsFromResourceCommandInput,
    cb: (err: any, data?: RemoveTagsFromResourceCommandOutput) => void
  ): void;
  removeTagsFromResource(
    args: RemoveTagsFromResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: RemoveTagsFromResourceCommandOutput) => void
  ): void;
  resetCache(
    args: ResetCacheCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ResetCacheCommandOutput>;
  resetCache(
    args: ResetCacheCommandInput,
    cb: (err: any, data?: ResetCacheCommandOutput) => void
  ): void;
  resetCache(
    args: ResetCacheCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ResetCacheCommandOutput) => void
  ): void;
  retrieveTapeArchive(
    args: RetrieveTapeArchiveCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<RetrieveTapeArchiveCommandOutput>;
  retrieveTapeArchive(
    args: RetrieveTapeArchiveCommandInput,
    cb: (err: any, data?: RetrieveTapeArchiveCommandOutput) => void
  ): void;
  retrieveTapeArchive(
    args: RetrieveTapeArchiveCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: RetrieveTapeArchiveCommandOutput) => void
  ): void;
  retrieveTapeRecoveryPoint(
    args: RetrieveTapeRecoveryPointCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<RetrieveTapeRecoveryPointCommandOutput>;
  retrieveTapeRecoveryPoint(
    args: RetrieveTapeRecoveryPointCommandInput,
    cb: (err: any, data?: RetrieveTapeRecoveryPointCommandOutput) => void
  ): void;
  retrieveTapeRecoveryPoint(
    args: RetrieveTapeRecoveryPointCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: RetrieveTapeRecoveryPointCommandOutput) => void
  ): void;
  setLocalConsolePassword(
    args: SetLocalConsolePasswordCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<SetLocalConsolePasswordCommandOutput>;
  setLocalConsolePassword(
    args: SetLocalConsolePasswordCommandInput,
    cb: (err: any, data?: SetLocalConsolePasswordCommandOutput) => void
  ): void;
  setLocalConsolePassword(
    args: SetLocalConsolePasswordCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: SetLocalConsolePasswordCommandOutput) => void
  ): void;
  setSMBGuestPassword(
    args: SetSMBGuestPasswordCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<SetSMBGuestPasswordCommandOutput>;
  setSMBGuestPassword(
    args: SetSMBGuestPasswordCommandInput,
    cb: (err: any, data?: SetSMBGuestPasswordCommandOutput) => void
  ): void;
  setSMBGuestPassword(
    args: SetSMBGuestPasswordCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: SetSMBGuestPasswordCommandOutput) => void
  ): void;
  shutdownGateway(
    args: ShutdownGatewayCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ShutdownGatewayCommandOutput>;
  shutdownGateway(
    args: ShutdownGatewayCommandInput,
    cb: (err: any, data?: ShutdownGatewayCommandOutput) => void
  ): void;
  shutdownGateway(
    args: ShutdownGatewayCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ShutdownGatewayCommandOutput) => void
  ): void;
  startAvailabilityMonitorTest(
    args: StartAvailabilityMonitorTestCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<StartAvailabilityMonitorTestCommandOutput>;
  startAvailabilityMonitorTest(
    args: StartAvailabilityMonitorTestCommandInput,
    cb: (err: any, data?: StartAvailabilityMonitorTestCommandOutput) => void
  ): void;
  startAvailabilityMonitorTest(
    args: StartAvailabilityMonitorTestCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: StartAvailabilityMonitorTestCommandOutput) => void
  ): void;
  startGateway(
    args: StartGatewayCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<StartGatewayCommandOutput>;
  startGateway(
    args: StartGatewayCommandInput,
    cb: (err: any, data?: StartGatewayCommandOutput) => void
  ): void;
  startGateway(
    args: StartGatewayCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: StartGatewayCommandOutput) => void
  ): void;
  updateAutomaticTapeCreationPolicy(
    args: UpdateAutomaticTapeCreationPolicyCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateAutomaticTapeCreationPolicyCommandOutput>;
  updateAutomaticTapeCreationPolicy(
    args: UpdateAutomaticTapeCreationPolicyCommandInput,
    cb: (
      err: any,
      data?: UpdateAutomaticTapeCreationPolicyCommandOutput
    ) => void
  ): void;
  updateAutomaticTapeCreationPolicy(
    args: UpdateAutomaticTapeCreationPolicyCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: UpdateAutomaticTapeCreationPolicyCommandOutput
    ) => void
  ): void;
  updateBandwidthRateLimit(
    args: UpdateBandwidthRateLimitCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateBandwidthRateLimitCommandOutput>;
  updateBandwidthRateLimit(
    args: UpdateBandwidthRateLimitCommandInput,
    cb: (err: any, data?: UpdateBandwidthRateLimitCommandOutput) => void
  ): void;
  updateBandwidthRateLimit(
    args: UpdateBandwidthRateLimitCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateBandwidthRateLimitCommandOutput) => void
  ): void;
  updateBandwidthRateLimitSchedule(
    args: UpdateBandwidthRateLimitScheduleCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateBandwidthRateLimitScheduleCommandOutput>;
  updateBandwidthRateLimitSchedule(
    args: UpdateBandwidthRateLimitScheduleCommandInput,
    cb: (err: any, data?: UpdateBandwidthRateLimitScheduleCommandOutput) => void
  ): void;
  updateBandwidthRateLimitSchedule(
    args: UpdateBandwidthRateLimitScheduleCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateBandwidthRateLimitScheduleCommandOutput) => void
  ): void;
  updateChapCredentials(
    args: UpdateChapCredentialsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateChapCredentialsCommandOutput>;
  updateChapCredentials(
    args: UpdateChapCredentialsCommandInput,
    cb: (err: any, data?: UpdateChapCredentialsCommandOutput) => void
  ): void;
  updateChapCredentials(
    args: UpdateChapCredentialsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateChapCredentialsCommandOutput) => void
  ): void;
  updateFileSystemAssociation(
    args: UpdateFileSystemAssociationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateFileSystemAssociationCommandOutput>;
  updateFileSystemAssociation(
    args: UpdateFileSystemAssociationCommandInput,
    cb: (err: any, data?: UpdateFileSystemAssociationCommandOutput) => void
  ): void;
  updateFileSystemAssociation(
    args: UpdateFileSystemAssociationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateFileSystemAssociationCommandOutput) => void
  ): void;
  updateGatewayInformation(
    args: UpdateGatewayInformationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateGatewayInformationCommandOutput>;
  updateGatewayInformation(
    args: UpdateGatewayInformationCommandInput,
    cb: (err: any, data?: UpdateGatewayInformationCommandOutput) => void
  ): void;
  updateGatewayInformation(
    args: UpdateGatewayInformationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateGatewayInformationCommandOutput) => void
  ): void;
  updateGatewaySoftwareNow(
    args: UpdateGatewaySoftwareNowCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateGatewaySoftwareNowCommandOutput>;
  updateGatewaySoftwareNow(
    args: UpdateGatewaySoftwareNowCommandInput,
    cb: (err: any, data?: UpdateGatewaySoftwareNowCommandOutput) => void
  ): void;
  updateGatewaySoftwareNow(
    args: UpdateGatewaySoftwareNowCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateGatewaySoftwareNowCommandOutput) => void
  ): void;
  updateMaintenanceStartTime(
    args: UpdateMaintenanceStartTimeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateMaintenanceStartTimeCommandOutput>;
  updateMaintenanceStartTime(
    args: UpdateMaintenanceStartTimeCommandInput,
    cb: (err: any, data?: UpdateMaintenanceStartTimeCommandOutput) => void
  ): void;
  updateMaintenanceStartTime(
    args: UpdateMaintenanceStartTimeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateMaintenanceStartTimeCommandOutput) => void
  ): void;
  updateNFSFileShare(
    args: UpdateNFSFileShareCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateNFSFileShareCommandOutput>;
  updateNFSFileShare(
    args: UpdateNFSFileShareCommandInput,
    cb: (err: any, data?: UpdateNFSFileShareCommandOutput) => void
  ): void;
  updateNFSFileShare(
    args: UpdateNFSFileShareCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateNFSFileShareCommandOutput) => void
  ): void;
  updateSMBFileShare(
    args: UpdateSMBFileShareCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateSMBFileShareCommandOutput>;
  updateSMBFileShare(
    args: UpdateSMBFileShareCommandInput,
    cb: (err: any, data?: UpdateSMBFileShareCommandOutput) => void
  ): void;
  updateSMBFileShare(
    args: UpdateSMBFileShareCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateSMBFileShareCommandOutput) => void
  ): void;
  updateSMBFileShareVisibility(
    args: UpdateSMBFileShareVisibilityCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateSMBFileShareVisibilityCommandOutput>;
  updateSMBFileShareVisibility(
    args: UpdateSMBFileShareVisibilityCommandInput,
    cb: (err: any, data?: UpdateSMBFileShareVisibilityCommandOutput) => void
  ): void;
  updateSMBFileShareVisibility(
    args: UpdateSMBFileShareVisibilityCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateSMBFileShareVisibilityCommandOutput) => void
  ): void;
  updateSMBLocalGroups(
    args: UpdateSMBLocalGroupsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateSMBLocalGroupsCommandOutput>;
  updateSMBLocalGroups(
    args: UpdateSMBLocalGroupsCommandInput,
    cb: (err: any, data?: UpdateSMBLocalGroupsCommandOutput) => void
  ): void;
  updateSMBLocalGroups(
    args: UpdateSMBLocalGroupsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateSMBLocalGroupsCommandOutput) => void
  ): void;
  updateSMBSecurityStrategy(
    args: UpdateSMBSecurityStrategyCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateSMBSecurityStrategyCommandOutput>;
  updateSMBSecurityStrategy(
    args: UpdateSMBSecurityStrategyCommandInput,
    cb: (err: any, data?: UpdateSMBSecurityStrategyCommandOutput) => void
  ): void;
  updateSMBSecurityStrategy(
    args: UpdateSMBSecurityStrategyCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateSMBSecurityStrategyCommandOutput) => void
  ): void;
  updateSnapshotSchedule(
    args: UpdateSnapshotScheduleCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateSnapshotScheduleCommandOutput>;
  updateSnapshotSchedule(
    args: UpdateSnapshotScheduleCommandInput,
    cb: (err: any, data?: UpdateSnapshotScheduleCommandOutput) => void
  ): void;
  updateSnapshotSchedule(
    args: UpdateSnapshotScheduleCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateSnapshotScheduleCommandOutput) => void
  ): void;
  updateVTLDeviceType(
    args: UpdateVTLDeviceTypeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateVTLDeviceTypeCommandOutput>;
  updateVTLDeviceType(
    args: UpdateVTLDeviceTypeCommandInput,
    cb: (err: any, data?: UpdateVTLDeviceTypeCommandOutput) => void
  ): void;
  updateVTLDeviceType(
    args: UpdateVTLDeviceTypeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateVTLDeviceTypeCommandOutput) => void
  ): void;
}
export declare class StorageGateway
  extends StorageGatewayClient
  implements StorageGateway {}
