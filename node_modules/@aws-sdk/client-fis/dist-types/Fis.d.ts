import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import { CreateExperimentTemplateCommandInput, CreateExperimentTemplateCommandOutput } from "./commands/CreateExperimentTemplateCommand";
import { CreateTargetAccountConfigurationCommandInput, CreateTargetAccountConfigurationCommandOutput } from "./commands/CreateTargetAccountConfigurationCommand";
import { DeleteExperimentTemplateCommandInput, DeleteExperimentTemplateCommandOutput } from "./commands/DeleteExperimentTemplateCommand";
import { DeleteTargetAccountConfigurationCommandInput, DeleteTargetAccountConfigurationCommandOutput } from "./commands/DeleteTargetAccountConfigurationCommand";
import { GetActionCommandInput, GetActionCommandOutput } from "./commands/GetActionCommand";
import { GetExperimentCommandInput, GetExperimentCommandOutput } from "./commands/GetExperimentCommand";
import { GetExperimentTargetAccountConfigurationCommandInput, GetExperimentTargetAccountConfigurationCommandOutput } from "./commands/GetExperimentTargetAccountConfigurationCommand";
import { GetExperimentTemplateCommandInput, GetExperimentTemplateCommandOutput } from "./commands/GetExperimentTemplateCommand";
import { GetTargetAccountConfigurationCommandInput, GetTargetAccountConfigurationCommandOutput } from "./commands/GetTargetAccountConfigurationCommand";
import { GetTargetResourceTypeCommandInput, GetTargetResourceTypeCommandOutput } from "./commands/GetTargetResourceTypeCommand";
import { ListActionsCommandInput, ListActionsCommandOutput } from "./commands/ListActionsCommand";
import { ListExperimentResolvedTargetsCommandInput, ListExperimentResolvedTargetsCommandOutput } from "./commands/ListExperimentResolvedTargetsCommand";
import { ListExperimentsCommandInput, ListExperimentsCommandOutput } from "./commands/ListExperimentsCommand";
import { ListExperimentTargetAccountConfigurationsCommandInput, ListExperimentTargetAccountConfigurationsCommandOutput } from "./commands/ListExperimentTargetAccountConfigurationsCommand";
import { ListExperimentTemplatesCommandInput, ListExperimentTemplatesCommandOutput } from "./commands/ListExperimentTemplatesCommand";
import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "./commands/ListTagsForResourceCommand";
import { ListTargetAccountConfigurationsCommandInput, ListTargetAccountConfigurationsCommandOutput } from "./commands/ListTargetAccountConfigurationsCommand";
import { ListTargetResourceTypesCommandInput, ListTargetResourceTypesCommandOutput } from "./commands/ListTargetResourceTypesCommand";
import { StartExperimentCommandInput, StartExperimentCommandOutput } from "./commands/StartExperimentCommand";
import { StopExperimentCommandInput, StopExperimentCommandOutput } from "./commands/StopExperimentCommand";
import { TagResourceCommandInput, TagResourceCommandOutput } from "./commands/TagResourceCommand";
import { UntagResourceCommandInput, UntagResourceCommandOutput } from "./commands/UntagResourceCommand";
import { UpdateExperimentTemplateCommandInput, UpdateExperimentTemplateCommandOutput } from "./commands/UpdateExperimentTemplateCommand";
import { UpdateTargetAccountConfigurationCommandInput, UpdateTargetAccountConfigurationCommandOutput } from "./commands/UpdateTargetAccountConfigurationCommand";
import { FisClient } from "./FisClient";
export interface Fis {
    /**
     * @see {@link CreateExperimentTemplateCommand}
     */
    createExperimentTemplate(args: CreateExperimentTemplateCommandInput, options?: __HttpHandlerOptions): Promise<CreateExperimentTemplateCommandOutput>;
    createExperimentTemplate(args: CreateExperimentTemplateCommandInput, cb: (err: any, data?: CreateExperimentTemplateCommandOutput) => void): void;
    createExperimentTemplate(args: CreateExperimentTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateExperimentTemplateCommandOutput) => void): void;
    /**
     * @see {@link CreateTargetAccountConfigurationCommand}
     */
    createTargetAccountConfiguration(args: CreateTargetAccountConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<CreateTargetAccountConfigurationCommandOutput>;
    createTargetAccountConfiguration(args: CreateTargetAccountConfigurationCommandInput, cb: (err: any, data?: CreateTargetAccountConfigurationCommandOutput) => void): void;
    createTargetAccountConfiguration(args: CreateTargetAccountConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateTargetAccountConfigurationCommandOutput) => void): void;
    /**
     * @see {@link DeleteExperimentTemplateCommand}
     */
    deleteExperimentTemplate(args: DeleteExperimentTemplateCommandInput, options?: __HttpHandlerOptions): Promise<DeleteExperimentTemplateCommandOutput>;
    deleteExperimentTemplate(args: DeleteExperimentTemplateCommandInput, cb: (err: any, data?: DeleteExperimentTemplateCommandOutput) => void): void;
    deleteExperimentTemplate(args: DeleteExperimentTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteExperimentTemplateCommandOutput) => void): void;
    /**
     * @see {@link DeleteTargetAccountConfigurationCommand}
     */
    deleteTargetAccountConfiguration(args: DeleteTargetAccountConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<DeleteTargetAccountConfigurationCommandOutput>;
    deleteTargetAccountConfiguration(args: DeleteTargetAccountConfigurationCommandInput, cb: (err: any, data?: DeleteTargetAccountConfigurationCommandOutput) => void): void;
    deleteTargetAccountConfiguration(args: DeleteTargetAccountConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteTargetAccountConfigurationCommandOutput) => void): void;
    /**
     * @see {@link GetActionCommand}
     */
    getAction(args: GetActionCommandInput, options?: __HttpHandlerOptions): Promise<GetActionCommandOutput>;
    getAction(args: GetActionCommandInput, cb: (err: any, data?: GetActionCommandOutput) => void): void;
    getAction(args: GetActionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetActionCommandOutput) => void): void;
    /**
     * @see {@link GetExperimentCommand}
     */
    getExperiment(args: GetExperimentCommandInput, options?: __HttpHandlerOptions): Promise<GetExperimentCommandOutput>;
    getExperiment(args: GetExperimentCommandInput, cb: (err: any, data?: GetExperimentCommandOutput) => void): void;
    getExperiment(args: GetExperimentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetExperimentCommandOutput) => void): void;
    /**
     * @see {@link GetExperimentTargetAccountConfigurationCommand}
     */
    getExperimentTargetAccountConfiguration(args: GetExperimentTargetAccountConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<GetExperimentTargetAccountConfigurationCommandOutput>;
    getExperimentTargetAccountConfiguration(args: GetExperimentTargetAccountConfigurationCommandInput, cb: (err: any, data?: GetExperimentTargetAccountConfigurationCommandOutput) => void): void;
    getExperimentTargetAccountConfiguration(args: GetExperimentTargetAccountConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetExperimentTargetAccountConfigurationCommandOutput) => void): void;
    /**
     * @see {@link GetExperimentTemplateCommand}
     */
    getExperimentTemplate(args: GetExperimentTemplateCommandInput, options?: __HttpHandlerOptions): Promise<GetExperimentTemplateCommandOutput>;
    getExperimentTemplate(args: GetExperimentTemplateCommandInput, cb: (err: any, data?: GetExperimentTemplateCommandOutput) => void): void;
    getExperimentTemplate(args: GetExperimentTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetExperimentTemplateCommandOutput) => void): void;
    /**
     * @see {@link GetTargetAccountConfigurationCommand}
     */
    getTargetAccountConfiguration(args: GetTargetAccountConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<GetTargetAccountConfigurationCommandOutput>;
    getTargetAccountConfiguration(args: GetTargetAccountConfigurationCommandInput, cb: (err: any, data?: GetTargetAccountConfigurationCommandOutput) => void): void;
    getTargetAccountConfiguration(args: GetTargetAccountConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetTargetAccountConfigurationCommandOutput) => void): void;
    /**
     * @see {@link GetTargetResourceTypeCommand}
     */
    getTargetResourceType(args: GetTargetResourceTypeCommandInput, options?: __HttpHandlerOptions): Promise<GetTargetResourceTypeCommandOutput>;
    getTargetResourceType(args: GetTargetResourceTypeCommandInput, cb: (err: any, data?: GetTargetResourceTypeCommandOutput) => void): void;
    getTargetResourceType(args: GetTargetResourceTypeCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetTargetResourceTypeCommandOutput) => void): void;
    /**
     * @see {@link ListActionsCommand}
     */
    listActions(args: ListActionsCommandInput, options?: __HttpHandlerOptions): Promise<ListActionsCommandOutput>;
    listActions(args: ListActionsCommandInput, cb: (err: any, data?: ListActionsCommandOutput) => void): void;
    listActions(args: ListActionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListActionsCommandOutput) => void): void;
    /**
     * @see {@link ListExperimentResolvedTargetsCommand}
     */
    listExperimentResolvedTargets(args: ListExperimentResolvedTargetsCommandInput, options?: __HttpHandlerOptions): Promise<ListExperimentResolvedTargetsCommandOutput>;
    listExperimentResolvedTargets(args: ListExperimentResolvedTargetsCommandInput, cb: (err: any, data?: ListExperimentResolvedTargetsCommandOutput) => void): void;
    listExperimentResolvedTargets(args: ListExperimentResolvedTargetsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListExperimentResolvedTargetsCommandOutput) => void): void;
    /**
     * @see {@link ListExperimentsCommand}
     */
    listExperiments(args: ListExperimentsCommandInput, options?: __HttpHandlerOptions): Promise<ListExperimentsCommandOutput>;
    listExperiments(args: ListExperimentsCommandInput, cb: (err: any, data?: ListExperimentsCommandOutput) => void): void;
    listExperiments(args: ListExperimentsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListExperimentsCommandOutput) => void): void;
    /**
     * @see {@link ListExperimentTargetAccountConfigurationsCommand}
     */
    listExperimentTargetAccountConfigurations(args: ListExperimentTargetAccountConfigurationsCommandInput, options?: __HttpHandlerOptions): Promise<ListExperimentTargetAccountConfigurationsCommandOutput>;
    listExperimentTargetAccountConfigurations(args: ListExperimentTargetAccountConfigurationsCommandInput, cb: (err: any, data?: ListExperimentTargetAccountConfigurationsCommandOutput) => void): void;
    listExperimentTargetAccountConfigurations(args: ListExperimentTargetAccountConfigurationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListExperimentTargetAccountConfigurationsCommandOutput) => void): void;
    /**
     * @see {@link ListExperimentTemplatesCommand}
     */
    listExperimentTemplates(args: ListExperimentTemplatesCommandInput, options?: __HttpHandlerOptions): Promise<ListExperimentTemplatesCommandOutput>;
    listExperimentTemplates(args: ListExperimentTemplatesCommandInput, cb: (err: any, data?: ListExperimentTemplatesCommandOutput) => void): void;
    listExperimentTemplates(args: ListExperimentTemplatesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListExperimentTemplatesCommandOutput) => void): void;
    /**
     * @see {@link ListTagsForResourceCommand}
     */
    listTagsForResource(args: ListTagsForResourceCommandInput, options?: __HttpHandlerOptions): Promise<ListTagsForResourceCommandOutput>;
    listTagsForResource(args: ListTagsForResourceCommandInput, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
    listTagsForResource(args: ListTagsForResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
    /**
     * @see {@link ListTargetAccountConfigurationsCommand}
     */
    listTargetAccountConfigurations(args: ListTargetAccountConfigurationsCommandInput, options?: __HttpHandlerOptions): Promise<ListTargetAccountConfigurationsCommandOutput>;
    listTargetAccountConfigurations(args: ListTargetAccountConfigurationsCommandInput, cb: (err: any, data?: ListTargetAccountConfigurationsCommandOutput) => void): void;
    listTargetAccountConfigurations(args: ListTargetAccountConfigurationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListTargetAccountConfigurationsCommandOutput) => void): void;
    /**
     * @see {@link ListTargetResourceTypesCommand}
     */
    listTargetResourceTypes(args: ListTargetResourceTypesCommandInput, options?: __HttpHandlerOptions): Promise<ListTargetResourceTypesCommandOutput>;
    listTargetResourceTypes(args: ListTargetResourceTypesCommandInput, cb: (err: any, data?: ListTargetResourceTypesCommandOutput) => void): void;
    listTargetResourceTypes(args: ListTargetResourceTypesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListTargetResourceTypesCommandOutput) => void): void;
    /**
     * @see {@link StartExperimentCommand}
     */
    startExperiment(args: StartExperimentCommandInput, options?: __HttpHandlerOptions): Promise<StartExperimentCommandOutput>;
    startExperiment(args: StartExperimentCommandInput, cb: (err: any, data?: StartExperimentCommandOutput) => void): void;
    startExperiment(args: StartExperimentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StartExperimentCommandOutput) => void): void;
    /**
     * @see {@link StopExperimentCommand}
     */
    stopExperiment(args: StopExperimentCommandInput, options?: __HttpHandlerOptions): Promise<StopExperimentCommandOutput>;
    stopExperiment(args: StopExperimentCommandInput, cb: (err: any, data?: StopExperimentCommandOutput) => void): void;
    stopExperiment(args: StopExperimentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StopExperimentCommandOutput) => void): void;
    /**
     * @see {@link TagResourceCommand}
     */
    tagResource(args: TagResourceCommandInput, options?: __HttpHandlerOptions): Promise<TagResourceCommandOutput>;
    tagResource(args: TagResourceCommandInput, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
    tagResource(args: TagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
    /**
     * @see {@link UntagResourceCommand}
     */
    untagResource(args: UntagResourceCommandInput, options?: __HttpHandlerOptions): Promise<UntagResourceCommandOutput>;
    untagResource(args: UntagResourceCommandInput, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
    untagResource(args: UntagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
    /**
     * @see {@link UpdateExperimentTemplateCommand}
     */
    updateExperimentTemplate(args: UpdateExperimentTemplateCommandInput, options?: __HttpHandlerOptions): Promise<UpdateExperimentTemplateCommandOutput>;
    updateExperimentTemplate(args: UpdateExperimentTemplateCommandInput, cb: (err: any, data?: UpdateExperimentTemplateCommandOutput) => void): void;
    updateExperimentTemplate(args: UpdateExperimentTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateExperimentTemplateCommandOutput) => void): void;
    /**
     * @see {@link UpdateTargetAccountConfigurationCommand}
     */
    updateTargetAccountConfiguration(args: UpdateTargetAccountConfigurationCommandInput, options?: __HttpHandlerOptions): Promise<UpdateTargetAccountConfigurationCommandOutput>;
    updateTargetAccountConfiguration(args: UpdateTargetAccountConfigurationCommandInput, cb: (err: any, data?: UpdateTargetAccountConfigurationCommandOutput) => void): void;
    updateTargetAccountConfiguration(args: UpdateTargetAccountConfigurationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateTargetAccountConfigurationCommandOutput) => void): void;
}
/**
 * @public
 * <p>Fault Injection Simulator is a managed service that enables you to perform fault injection
 *            experiments on your Amazon Web Services workloads. For more information, see the <a href="https://docs.aws.amazon.com/fis/latest/userguide/">Fault Injection Simulator User Guide</a>.</p>
 */
export declare class Fis extends FisClient implements Fis {
}
