import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import { FisClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../FisClient";
import { GetExperimentTargetAccountConfigurationRequest, GetExperimentTargetAccountConfigurationResponse } from "../models/models_0";
/**
 * @public
 */
export { __MetadataBearer, $Command };
/**
 * @public
 *
 * The input for {@link GetExperimentTargetAccountConfigurationCommand}.
 */
export interface GetExperimentTargetAccountConfigurationCommandInput extends GetExperimentTargetAccountConfigurationRequest {
}
/**
 * @public
 *
 * The output of {@link GetExperimentTargetAccountConfigurationCommand}.
 */
export interface GetExperimentTargetAccountConfigurationCommandOutput extends GetExperimentTargetAccountConfigurationResponse, __MetadataBearer {
}
declare const GetExperimentTargetAccountConfigurationCommand_base: {
    new (input: GetExperimentTargetAccountConfigurationCommandInput): import("@smithy/smithy-client").CommandImpl<GetExperimentTargetAccountConfigurationCommandInput, GetExperimentTargetAccountConfigurationCommandOutput, FisClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    new (__0_0: GetExperimentTargetAccountConfigurationCommandInput): import("@smithy/smithy-client").CommandImpl<GetExperimentTargetAccountConfigurationCommandInput, GetExperimentTargetAccountConfigurationCommandOutput, FisClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
/**
 * <p>Gets information about the specified target account configuration of the experiment.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { FisClient, GetExperimentTargetAccountConfigurationCommand } from "@aws-sdk/client-fis"; // ES Modules import
 * // const { FisClient, GetExperimentTargetAccountConfigurationCommand } = require("@aws-sdk/client-fis"); // CommonJS import
 * const client = new FisClient(config);
 * const input = { // GetExperimentTargetAccountConfigurationRequest
 *   experimentId: "STRING_VALUE", // required
 *   accountId: "STRING_VALUE", // required
 * };
 * const command = new GetExperimentTargetAccountConfigurationCommand(input);
 * const response = await client.send(command);
 * // { // GetExperimentTargetAccountConfigurationResponse
 * //   targetAccountConfiguration: { // ExperimentTargetAccountConfiguration
 * //     roleArn: "STRING_VALUE",
 * //     accountId: "STRING_VALUE",
 * //     description: "STRING_VALUE",
 * //   },
 * // };
 *
 * ```
 *
 * @param GetExperimentTargetAccountConfigurationCommandInput - {@link GetExperimentTargetAccountConfigurationCommandInput}
 * @returns {@link GetExperimentTargetAccountConfigurationCommandOutput}
 * @see {@link GetExperimentTargetAccountConfigurationCommandInput} for command's `input` shape.
 * @see {@link GetExperimentTargetAccountConfigurationCommandOutput} for command's `response` shape.
 * @see {@link FisClientResolvedConfig | config} for FisClient's `config` shape.
 *
 * @throws {@link ResourceNotFoundException} (client fault)
 *  <p>The specified resource cannot be found.</p>
 *
 * @throws {@link ValidationException} (client fault)
 *  <p>The specified input is not valid, or fails to satisfy the constraints for the request.</p>
 *
 * @throws {@link FisServiceException}
 * <p>Base exception class for all service exceptions from Fis service.</p>
 *
 * @public
 */
export declare class GetExperimentTargetAccountConfigurationCommand extends GetExperimentTargetAccountConfigurationCommand_base {
}
