import { HttpRequest } from "@smithy/protocol-http";
export function predictEndpointMiddleware(options) {
    return (next) => async (args) => {
        const { input } = args;
        let { request } = args;
        if (HttpRequest.isInstance(request)) {
            if (input.PredictEndpoint) {
                const endpoint = options.urlParser(input.PredictEndpoint);
                request = {
                    ...request,
                    hostname: endpoint.hostname,
                    path: endpoint.path,
                    port: endpoint.port,
                    protocol: endpoint.protocol,
                    query: endpoint.query ?? {},
                };
            }
        }
        return next({
            ...args,
            request,
        });
    };
}
export const predictEndpointMiddlewareOptions = {
    step: "build",
    tags: ["PREDICT_ENDPOINT"],
    name: "predictEndpointMiddleware",
    override: true,
};
export const getPredictEndpointPlugin = (config) => ({
    applyToStack: (clientStack) => {
        clientStack.add(predictEndpointMiddleware(config), predictEndpointMiddlewareOptions);
    },
});
