import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import { AppMeshClient } from "./AppMeshClient";
import {
  CreateGatewayRouteCommandInput,
  CreateGatewayRouteCommandOutput,
} from "./commands/CreateGatewayRouteCommand";
import {
  CreateMeshCommandInput,
  CreateMeshCommandOutput,
} from "./commands/CreateMeshCommand";
import {
  CreateRouteCommandInput,
  CreateRouteCommandOutput,
} from "./commands/CreateRouteCommand";
import {
  CreateVirtualGatewayCommandInput,
  CreateVirtualGatewayCommandOutput,
} from "./commands/CreateVirtualGatewayCommand";
import {
  CreateVirtualNodeCommandInput,
  CreateVirtualNodeCommandOutput,
} from "./commands/CreateVirtualNodeCommand";
import {
  CreateVirtualRouterCommandInput,
  CreateVirtualRouterCommandOutput,
} from "./commands/CreateVirtualRouterCommand";
import {
  CreateVirtualServiceCommandInput,
  CreateVirtualServiceCommandOutput,
} from "./commands/CreateVirtualServiceCommand";
import {
  DeleteGatewayRouteCommandInput,
  DeleteGatewayRouteCommandOutput,
} from "./commands/DeleteGatewayRouteCommand";
import {
  DeleteMeshCommandInput,
  DeleteMeshCommandOutput,
} from "./commands/DeleteMeshCommand";
import {
  DeleteRouteCommandInput,
  DeleteRouteCommandOutput,
} from "./commands/DeleteRouteCommand";
import {
  DeleteVirtualGatewayCommandInput,
  DeleteVirtualGatewayCommandOutput,
} from "./commands/DeleteVirtualGatewayCommand";
import {
  DeleteVirtualNodeCommandInput,
  DeleteVirtualNodeCommandOutput,
} from "./commands/DeleteVirtualNodeCommand";
import {
  DeleteVirtualRouterCommandInput,
  DeleteVirtualRouterCommandOutput,
} from "./commands/DeleteVirtualRouterCommand";
import {
  DeleteVirtualServiceCommandInput,
  DeleteVirtualServiceCommandOutput,
} from "./commands/DeleteVirtualServiceCommand";
import {
  DescribeGatewayRouteCommandInput,
  DescribeGatewayRouteCommandOutput,
} from "./commands/DescribeGatewayRouteCommand";
import {
  DescribeMeshCommandInput,
  DescribeMeshCommandOutput,
} from "./commands/DescribeMeshCommand";
import {
  DescribeRouteCommandInput,
  DescribeRouteCommandOutput,
} from "./commands/DescribeRouteCommand";
import {
  DescribeVirtualGatewayCommandInput,
  DescribeVirtualGatewayCommandOutput,
} from "./commands/DescribeVirtualGatewayCommand";
import {
  DescribeVirtualNodeCommandInput,
  DescribeVirtualNodeCommandOutput,
} from "./commands/DescribeVirtualNodeCommand";
import {
  DescribeVirtualRouterCommandInput,
  DescribeVirtualRouterCommandOutput,
} from "./commands/DescribeVirtualRouterCommand";
import {
  DescribeVirtualServiceCommandInput,
  DescribeVirtualServiceCommandOutput,
} from "./commands/DescribeVirtualServiceCommand";
import {
  ListGatewayRoutesCommandInput,
  ListGatewayRoutesCommandOutput,
} from "./commands/ListGatewayRoutesCommand";
import {
  ListMeshesCommandInput,
  ListMeshesCommandOutput,
} from "./commands/ListMeshesCommand";
import {
  ListRoutesCommandInput,
  ListRoutesCommandOutput,
} from "./commands/ListRoutesCommand";
import {
  ListTagsForResourceCommandInput,
  ListTagsForResourceCommandOutput,
} from "./commands/ListTagsForResourceCommand";
import {
  ListVirtualGatewaysCommandInput,
  ListVirtualGatewaysCommandOutput,
} from "./commands/ListVirtualGatewaysCommand";
import {
  ListVirtualNodesCommandInput,
  ListVirtualNodesCommandOutput,
} from "./commands/ListVirtualNodesCommand";
import {
  ListVirtualRoutersCommandInput,
  ListVirtualRoutersCommandOutput,
} from "./commands/ListVirtualRoutersCommand";
import {
  ListVirtualServicesCommandInput,
  ListVirtualServicesCommandOutput,
} from "./commands/ListVirtualServicesCommand";
import {
  TagResourceCommandInput,
  TagResourceCommandOutput,
} from "./commands/TagResourceCommand";
import {
  UntagResourceCommandInput,
  UntagResourceCommandOutput,
} from "./commands/UntagResourceCommand";
import {
  UpdateGatewayRouteCommandInput,
  UpdateGatewayRouteCommandOutput,
} from "./commands/UpdateGatewayRouteCommand";
import {
  UpdateMeshCommandInput,
  UpdateMeshCommandOutput,
} from "./commands/UpdateMeshCommand";
import {
  UpdateRouteCommandInput,
  UpdateRouteCommandOutput,
} from "./commands/UpdateRouteCommand";
import {
  UpdateVirtualGatewayCommandInput,
  UpdateVirtualGatewayCommandOutput,
} from "./commands/UpdateVirtualGatewayCommand";
import {
  UpdateVirtualNodeCommandInput,
  UpdateVirtualNodeCommandOutput,
} from "./commands/UpdateVirtualNodeCommand";
import {
  UpdateVirtualRouterCommandInput,
  UpdateVirtualRouterCommandOutput,
} from "./commands/UpdateVirtualRouterCommand";
import {
  UpdateVirtualServiceCommandInput,
  UpdateVirtualServiceCommandOutput,
} from "./commands/UpdateVirtualServiceCommand";
export interface AppMesh {
  createGatewayRoute(
    args: CreateGatewayRouteCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateGatewayRouteCommandOutput>;
  createGatewayRoute(
    args: CreateGatewayRouteCommandInput,
    cb: (err: any, data?: CreateGatewayRouteCommandOutput) => void
  ): void;
  createGatewayRoute(
    args: CreateGatewayRouteCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateGatewayRouteCommandOutput) => void
  ): void;
  createMesh(
    args: CreateMeshCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateMeshCommandOutput>;
  createMesh(
    args: CreateMeshCommandInput,
    cb: (err: any, data?: CreateMeshCommandOutput) => void
  ): void;
  createMesh(
    args: CreateMeshCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateMeshCommandOutput) => void
  ): void;
  createRoute(
    args: CreateRouteCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateRouteCommandOutput>;
  createRoute(
    args: CreateRouteCommandInput,
    cb: (err: any, data?: CreateRouteCommandOutput) => void
  ): void;
  createRoute(
    args: CreateRouteCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateRouteCommandOutput) => void
  ): void;
  createVirtualGateway(
    args: CreateVirtualGatewayCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateVirtualGatewayCommandOutput>;
  createVirtualGateway(
    args: CreateVirtualGatewayCommandInput,
    cb: (err: any, data?: CreateVirtualGatewayCommandOutput) => void
  ): void;
  createVirtualGateway(
    args: CreateVirtualGatewayCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateVirtualGatewayCommandOutput) => void
  ): void;
  createVirtualNode(
    args: CreateVirtualNodeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateVirtualNodeCommandOutput>;
  createVirtualNode(
    args: CreateVirtualNodeCommandInput,
    cb: (err: any, data?: CreateVirtualNodeCommandOutput) => void
  ): void;
  createVirtualNode(
    args: CreateVirtualNodeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateVirtualNodeCommandOutput) => void
  ): void;
  createVirtualRouter(
    args: CreateVirtualRouterCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateVirtualRouterCommandOutput>;
  createVirtualRouter(
    args: CreateVirtualRouterCommandInput,
    cb: (err: any, data?: CreateVirtualRouterCommandOutput) => void
  ): void;
  createVirtualRouter(
    args: CreateVirtualRouterCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateVirtualRouterCommandOutput) => void
  ): void;
  createVirtualService(
    args: CreateVirtualServiceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateVirtualServiceCommandOutput>;
  createVirtualService(
    args: CreateVirtualServiceCommandInput,
    cb: (err: any, data?: CreateVirtualServiceCommandOutput) => void
  ): void;
  createVirtualService(
    args: CreateVirtualServiceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateVirtualServiceCommandOutput) => void
  ): void;
  deleteGatewayRoute(
    args: DeleteGatewayRouteCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteGatewayRouteCommandOutput>;
  deleteGatewayRoute(
    args: DeleteGatewayRouteCommandInput,
    cb: (err: any, data?: DeleteGatewayRouteCommandOutput) => void
  ): void;
  deleteGatewayRoute(
    args: DeleteGatewayRouteCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteGatewayRouteCommandOutput) => void
  ): void;
  deleteMesh(
    args: DeleteMeshCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteMeshCommandOutput>;
  deleteMesh(
    args: DeleteMeshCommandInput,
    cb: (err: any, data?: DeleteMeshCommandOutput) => void
  ): void;
  deleteMesh(
    args: DeleteMeshCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteMeshCommandOutput) => void
  ): void;
  deleteRoute(
    args: DeleteRouteCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteRouteCommandOutput>;
  deleteRoute(
    args: DeleteRouteCommandInput,
    cb: (err: any, data?: DeleteRouteCommandOutput) => void
  ): void;
  deleteRoute(
    args: DeleteRouteCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteRouteCommandOutput) => void
  ): void;
  deleteVirtualGateway(
    args: DeleteVirtualGatewayCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteVirtualGatewayCommandOutput>;
  deleteVirtualGateway(
    args: DeleteVirtualGatewayCommandInput,
    cb: (err: any, data?: DeleteVirtualGatewayCommandOutput) => void
  ): void;
  deleteVirtualGateway(
    args: DeleteVirtualGatewayCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteVirtualGatewayCommandOutput) => void
  ): void;
  deleteVirtualNode(
    args: DeleteVirtualNodeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteVirtualNodeCommandOutput>;
  deleteVirtualNode(
    args: DeleteVirtualNodeCommandInput,
    cb: (err: any, data?: DeleteVirtualNodeCommandOutput) => void
  ): void;
  deleteVirtualNode(
    args: DeleteVirtualNodeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteVirtualNodeCommandOutput) => void
  ): void;
  deleteVirtualRouter(
    args: DeleteVirtualRouterCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteVirtualRouterCommandOutput>;
  deleteVirtualRouter(
    args: DeleteVirtualRouterCommandInput,
    cb: (err: any, data?: DeleteVirtualRouterCommandOutput) => void
  ): void;
  deleteVirtualRouter(
    args: DeleteVirtualRouterCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteVirtualRouterCommandOutput) => void
  ): void;
  deleteVirtualService(
    args: DeleteVirtualServiceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteVirtualServiceCommandOutput>;
  deleteVirtualService(
    args: DeleteVirtualServiceCommandInput,
    cb: (err: any, data?: DeleteVirtualServiceCommandOutput) => void
  ): void;
  deleteVirtualService(
    args: DeleteVirtualServiceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteVirtualServiceCommandOutput) => void
  ): void;
  describeGatewayRoute(
    args: DescribeGatewayRouteCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeGatewayRouteCommandOutput>;
  describeGatewayRoute(
    args: DescribeGatewayRouteCommandInput,
    cb: (err: any, data?: DescribeGatewayRouteCommandOutput) => void
  ): void;
  describeGatewayRoute(
    args: DescribeGatewayRouteCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeGatewayRouteCommandOutput) => void
  ): void;
  describeMesh(
    args: DescribeMeshCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeMeshCommandOutput>;
  describeMesh(
    args: DescribeMeshCommandInput,
    cb: (err: any, data?: DescribeMeshCommandOutput) => void
  ): void;
  describeMesh(
    args: DescribeMeshCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeMeshCommandOutput) => void
  ): void;
  describeRoute(
    args: DescribeRouteCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeRouteCommandOutput>;
  describeRoute(
    args: DescribeRouteCommandInput,
    cb: (err: any, data?: DescribeRouteCommandOutput) => void
  ): void;
  describeRoute(
    args: DescribeRouteCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeRouteCommandOutput) => void
  ): void;
  describeVirtualGateway(
    args: DescribeVirtualGatewayCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeVirtualGatewayCommandOutput>;
  describeVirtualGateway(
    args: DescribeVirtualGatewayCommandInput,
    cb: (err: any, data?: DescribeVirtualGatewayCommandOutput) => void
  ): void;
  describeVirtualGateway(
    args: DescribeVirtualGatewayCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeVirtualGatewayCommandOutput) => void
  ): void;
  describeVirtualNode(
    args: DescribeVirtualNodeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeVirtualNodeCommandOutput>;
  describeVirtualNode(
    args: DescribeVirtualNodeCommandInput,
    cb: (err: any, data?: DescribeVirtualNodeCommandOutput) => void
  ): void;
  describeVirtualNode(
    args: DescribeVirtualNodeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeVirtualNodeCommandOutput) => void
  ): void;
  describeVirtualRouter(
    args: DescribeVirtualRouterCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeVirtualRouterCommandOutput>;
  describeVirtualRouter(
    args: DescribeVirtualRouterCommandInput,
    cb: (err: any, data?: DescribeVirtualRouterCommandOutput) => void
  ): void;
  describeVirtualRouter(
    args: DescribeVirtualRouterCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeVirtualRouterCommandOutput) => void
  ): void;
  describeVirtualService(
    args: DescribeVirtualServiceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeVirtualServiceCommandOutput>;
  describeVirtualService(
    args: DescribeVirtualServiceCommandInput,
    cb: (err: any, data?: DescribeVirtualServiceCommandOutput) => void
  ): void;
  describeVirtualService(
    args: DescribeVirtualServiceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeVirtualServiceCommandOutput) => void
  ): void;
  listGatewayRoutes(
    args: ListGatewayRoutesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListGatewayRoutesCommandOutput>;
  listGatewayRoutes(
    args: ListGatewayRoutesCommandInput,
    cb: (err: any, data?: ListGatewayRoutesCommandOutput) => void
  ): void;
  listGatewayRoutes(
    args: ListGatewayRoutesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListGatewayRoutesCommandOutput) => void
  ): void;
  listMeshes(
    args: ListMeshesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListMeshesCommandOutput>;
  listMeshes(
    args: ListMeshesCommandInput,
    cb: (err: any, data?: ListMeshesCommandOutput) => void
  ): void;
  listMeshes(
    args: ListMeshesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListMeshesCommandOutput) => void
  ): void;
  listRoutes(
    args: ListRoutesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListRoutesCommandOutput>;
  listRoutes(
    args: ListRoutesCommandInput,
    cb: (err: any, data?: ListRoutesCommandOutput) => void
  ): void;
  listRoutes(
    args: ListRoutesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListRoutesCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListTagsForResourceCommandOutput>;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  listVirtualGateways(
    args: ListVirtualGatewaysCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListVirtualGatewaysCommandOutput>;
  listVirtualGateways(
    args: ListVirtualGatewaysCommandInput,
    cb: (err: any, data?: ListVirtualGatewaysCommandOutput) => void
  ): void;
  listVirtualGateways(
    args: ListVirtualGatewaysCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListVirtualGatewaysCommandOutput) => void
  ): void;
  listVirtualNodes(
    args: ListVirtualNodesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListVirtualNodesCommandOutput>;
  listVirtualNodes(
    args: ListVirtualNodesCommandInput,
    cb: (err: any, data?: ListVirtualNodesCommandOutput) => void
  ): void;
  listVirtualNodes(
    args: ListVirtualNodesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListVirtualNodesCommandOutput) => void
  ): void;
  listVirtualRouters(
    args: ListVirtualRoutersCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListVirtualRoutersCommandOutput>;
  listVirtualRouters(
    args: ListVirtualRoutersCommandInput,
    cb: (err: any, data?: ListVirtualRoutersCommandOutput) => void
  ): void;
  listVirtualRouters(
    args: ListVirtualRoutersCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListVirtualRoutersCommandOutput) => void
  ): void;
  listVirtualServices(
    args: ListVirtualServicesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListVirtualServicesCommandOutput>;
  listVirtualServices(
    args: ListVirtualServicesCommandInput,
    cb: (err: any, data?: ListVirtualServicesCommandOutput) => void
  ): void;
  listVirtualServices(
    args: ListVirtualServicesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListVirtualServicesCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<TagResourceCommandOutput>;
  tagResource(
    args: TagResourceCommandInput,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UntagResourceCommandOutput>;
  untagResource(
    args: UntagResourceCommandInput,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  updateGatewayRoute(
    args: UpdateGatewayRouteCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateGatewayRouteCommandOutput>;
  updateGatewayRoute(
    args: UpdateGatewayRouteCommandInput,
    cb: (err: any, data?: UpdateGatewayRouteCommandOutput) => void
  ): void;
  updateGatewayRoute(
    args: UpdateGatewayRouteCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateGatewayRouteCommandOutput) => void
  ): void;
  updateMesh(
    args: UpdateMeshCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateMeshCommandOutput>;
  updateMesh(
    args: UpdateMeshCommandInput,
    cb: (err: any, data?: UpdateMeshCommandOutput) => void
  ): void;
  updateMesh(
    args: UpdateMeshCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateMeshCommandOutput) => void
  ): void;
  updateRoute(
    args: UpdateRouteCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateRouteCommandOutput>;
  updateRoute(
    args: UpdateRouteCommandInput,
    cb: (err: any, data?: UpdateRouteCommandOutput) => void
  ): void;
  updateRoute(
    args: UpdateRouteCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateRouteCommandOutput) => void
  ): void;
  updateVirtualGateway(
    args: UpdateVirtualGatewayCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateVirtualGatewayCommandOutput>;
  updateVirtualGateway(
    args: UpdateVirtualGatewayCommandInput,
    cb: (err: any, data?: UpdateVirtualGatewayCommandOutput) => void
  ): void;
  updateVirtualGateway(
    args: UpdateVirtualGatewayCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateVirtualGatewayCommandOutput) => void
  ): void;
  updateVirtualNode(
    args: UpdateVirtualNodeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateVirtualNodeCommandOutput>;
  updateVirtualNode(
    args: UpdateVirtualNodeCommandInput,
    cb: (err: any, data?: UpdateVirtualNodeCommandOutput) => void
  ): void;
  updateVirtualNode(
    args: UpdateVirtualNodeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateVirtualNodeCommandOutput) => void
  ): void;
  updateVirtualRouter(
    args: UpdateVirtualRouterCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateVirtualRouterCommandOutput>;
  updateVirtualRouter(
    args: UpdateVirtualRouterCommandInput,
    cb: (err: any, data?: UpdateVirtualRouterCommandOutput) => void
  ): void;
  updateVirtualRouter(
    args: UpdateVirtualRouterCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateVirtualRouterCommandOutput) => void
  ): void;
  updateVirtualService(
    args: UpdateVirtualServiceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateVirtualServiceCommandOutput>;
  updateVirtualService(
    args: UpdateVirtualServiceCommandInput,
    cb: (err: any, data?: UpdateVirtualServiceCommandOutput) => void
  ): void;
  updateVirtualService(
    args: UpdateVirtualServiceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateVirtualServiceCommandOutput) => void
  ): void;
}
export declare class AppMesh extends AppMeshClient implements AppMesh {}
