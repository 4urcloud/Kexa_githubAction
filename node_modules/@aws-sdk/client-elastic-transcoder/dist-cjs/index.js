"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  AccessDeniedException: () => AccessDeniedException,
  CancelJobCommand: () => CancelJobCommand,
  CreateJobCommand: () => CreateJobCommand,
  CreatePipelineCommand: () => CreatePipelineCommand,
  CreatePresetCommand: () => CreatePresetCommand,
  DeletePipelineCommand: () => DeletePipelineCommand,
  DeletePresetCommand: () => DeletePresetCommand,
  ElasticTranscoder: () => ElasticTranscoder,
  ElasticTranscoderClient: () => ElasticTranscoderClient,
  ElasticTranscoderServiceException: () => ElasticTranscoderServiceException,
  IncompatibleVersionException: () => IncompatibleVersionException,
  InternalServiceException: () => InternalServiceException,
  LimitExceededException: () => LimitExceededException,
  ListJobsByPipelineCommand: () => ListJobsByPipelineCommand,
  ListJobsByStatusCommand: () => ListJobsByStatusCommand,
  ListPipelinesCommand: () => ListPipelinesCommand,
  ListPresetsCommand: () => ListPresetsCommand,
  ReadJobCommand: () => ReadJobCommand,
  ReadPipelineCommand: () => ReadPipelineCommand,
  ReadPresetCommand: () => ReadPresetCommand,
  ResourceInUseException: () => ResourceInUseException,
  ResourceNotFoundException: () => ResourceNotFoundException,
  TestRoleCommand: () => TestRoleCommand,
  UpdatePipelineCommand: () => UpdatePipelineCommand,
  UpdatePipelineNotificationsCommand: () => UpdatePipelineNotificationsCommand,
  UpdatePipelineStatusCommand: () => UpdatePipelineStatusCommand,
  ValidationException: () => ValidationException,
  __Client: () => import_smithy_client.Client,
  paginateListJobsByPipeline: () => paginateListJobsByPipeline,
  paginateListJobsByStatus: () => paginateListJobsByStatus,
  paginateListPipelines: () => paginateListPipelines,
  paginateListPresets: () => paginateListPresets,
  waitForJobComplete: () => waitForJobComplete,
  waitUntilJobComplete: () => waitUntilJobComplete
});
module.exports = __toCommonJS(src_exports);

// src/ElasticTranscoderClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return {
    ...options,
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "elastictranscoder"
  };
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/ElasticTranscoderClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var asPartial = /* @__PURE__ */ __name((t) => t, "asPartial");
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = {
    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),
    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
  };
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return {
    ...runtimeConfig,
    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
  };
}, "resolveRuntimeExtensions");

// src/ElasticTranscoderClient.ts
var _ElasticTranscoderClient = class _ElasticTranscoderClient extends import_smithy_client.Client {
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_config_resolver.resolveRegionConfig)(_config_1);
    const _config_3 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_2);
    const _config_4 = (0, import_middleware_retry.resolveRetryConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, (configuration == null ? void 0 : configuration.extensions) || []);
    super(_config_8);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),
        identityProviderConfigProvider: this.getIdentityProviderConfigProvider()
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
  getDefaultHttpAuthSchemeParametersProvider() {
    return import_httpAuthSchemeProvider.defaultElasticTranscoderHttpAuthSchemeParametersProvider;
  }
  getIdentityProviderConfigProvider() {
    return async (config) => new import_core.DefaultIdentityProviderConfig({
      "aws.auth#sigv4": config.credentials
    });
  }
};
__name(_ElasticTranscoderClient, "ElasticTranscoderClient");
var ElasticTranscoderClient = _ElasticTranscoderClient;

// src/ElasticTranscoder.ts


// src/commands/CancelJobCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");

var import_types = require("@smithy/types");

// src/protocols/Aws_restJson1.ts
var import_core2 = require("@aws-sdk/core");



// src/models/ElasticTranscoderServiceException.ts

var _ElasticTranscoderServiceException = class _ElasticTranscoderServiceException extends import_smithy_client.ServiceException {
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _ElasticTranscoderServiceException.prototype);
  }
};
__name(_ElasticTranscoderServiceException, "ElasticTranscoderServiceException");
var ElasticTranscoderServiceException = _ElasticTranscoderServiceException;

// src/models/models_0.ts
var _AccessDeniedException = class _AccessDeniedException extends ElasticTranscoderServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "AccessDeniedException",
      $fault: "client",
      ...opts
    });
    this.name = "AccessDeniedException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _AccessDeniedException.prototype);
  }
};
__name(_AccessDeniedException, "AccessDeniedException");
var AccessDeniedException = _AccessDeniedException;
var _IncompatibleVersionException = class _IncompatibleVersionException extends ElasticTranscoderServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "IncompatibleVersionException",
      $fault: "client",
      ...opts
    });
    this.name = "IncompatibleVersionException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _IncompatibleVersionException.prototype);
  }
};
__name(_IncompatibleVersionException, "IncompatibleVersionException");
var IncompatibleVersionException = _IncompatibleVersionException;
var _InternalServiceException = class _InternalServiceException extends ElasticTranscoderServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InternalServiceException",
      $fault: "server",
      ...opts
    });
    this.name = "InternalServiceException";
    this.$fault = "server";
    Object.setPrototypeOf(this, _InternalServiceException.prototype);
  }
};
__name(_InternalServiceException, "InternalServiceException");
var InternalServiceException = _InternalServiceException;
var _ResourceInUseException = class _ResourceInUseException extends ElasticTranscoderServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceInUseException",
      $fault: "client",
      ...opts
    });
    this.name = "ResourceInUseException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourceInUseException.prototype);
  }
};
__name(_ResourceInUseException, "ResourceInUseException");
var ResourceInUseException = _ResourceInUseException;
var _ResourceNotFoundException = class _ResourceNotFoundException extends ElasticTranscoderServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceNotFoundException",
      $fault: "client",
      ...opts
    });
    this.name = "ResourceNotFoundException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourceNotFoundException.prototype);
  }
};
__name(_ResourceNotFoundException, "ResourceNotFoundException");
var ResourceNotFoundException = _ResourceNotFoundException;
var _ValidationException = class _ValidationException extends ElasticTranscoderServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ValidationException",
      $fault: "client",
      ...opts
    });
    this.name = "ValidationException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ValidationException.prototype);
  }
};
__name(_ValidationException, "ValidationException");
var ValidationException = _ValidationException;
var _LimitExceededException = class _LimitExceededException extends ElasticTranscoderServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "LimitExceededException",
      $fault: "client",
      ...opts
    });
    this.name = "LimitExceededException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _LimitExceededException.prototype);
  }
};
__name(_LimitExceededException, "LimitExceededException");
var LimitExceededException = _LimitExceededException;

// src/protocols/Aws_restJson1.ts
var se_CancelJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2012-09-25/jobs/{Id}");
  b.p("Id", () => input.Id, "{Id}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_CancelJobCommand");
var se_CreateJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2012-09-25/jobs");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Input: (_) => (0, import_smithy_client._json)(_),
      Inputs: (_) => (0, import_smithy_client._json)(_),
      Output: (_) => (0, import_smithy_client._json)(_),
      OutputKeyPrefix: [],
      Outputs: (_) => (0, import_smithy_client._json)(_),
      PipelineId: [],
      Playlists: (_) => (0, import_smithy_client._json)(_),
      UserMetadata: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateJobCommand");
var se_CreatePipelineCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2012-09-25/pipelines");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      AwsKmsKeyArn: [],
      ContentConfig: (_) => (0, import_smithy_client._json)(_),
      InputBucket: [],
      Name: [],
      Notifications: (_) => (0, import_smithy_client._json)(_),
      OutputBucket: [],
      Role: [],
      ThumbnailConfig: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreatePipelineCommand");
var se_CreatePresetCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2012-09-25/presets");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Audio: (_) => (0, import_smithy_client._json)(_),
      Container: [],
      Description: [],
      Name: [],
      Thumbnails: (_) => (0, import_smithy_client._json)(_),
      Video: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreatePresetCommand");
var se_DeletePipelineCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2012-09-25/pipelines/{Id}");
  b.p("Id", () => input.Id, "{Id}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeletePipelineCommand");
var se_DeletePresetCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2012-09-25/presets/{Id}");
  b.p("Id", () => input.Id, "{Id}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeletePresetCommand");
var se_ListJobsByPipelineCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2012-09-25/jobsByPipeline/{PipelineId}");
  b.p("PipelineId", () => input.PipelineId, "{PipelineId}", false);
  const query = (0, import_smithy_client.map)({
    [_A]: [, input[_A]],
    [_PT]: [, input[_PT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListJobsByPipelineCommand");
var se_ListJobsByStatusCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2012-09-25/jobsByStatus/{Status}");
  b.p("Status", () => input.Status, "{Status}", false);
  const query = (0, import_smithy_client.map)({
    [_A]: [, input[_A]],
    [_PT]: [, input[_PT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListJobsByStatusCommand");
var se_ListPipelinesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2012-09-25/pipelines");
  const query = (0, import_smithy_client.map)({
    [_A]: [, input[_A]],
    [_PT]: [, input[_PT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListPipelinesCommand");
var se_ListPresetsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2012-09-25/presets");
  const query = (0, import_smithy_client.map)({
    [_A]: [, input[_A]],
    [_PT]: [, input[_PT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListPresetsCommand");
var se_ReadJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2012-09-25/jobs/{Id}");
  b.p("Id", () => input.Id, "{Id}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_ReadJobCommand");
var se_ReadPipelineCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2012-09-25/pipelines/{Id}");
  b.p("Id", () => input.Id, "{Id}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_ReadPipelineCommand");
var se_ReadPresetCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2012-09-25/presets/{Id}");
  b.p("Id", () => input.Id, "{Id}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_ReadPresetCommand");
var se_TestRoleCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2012-09-25/roleTests");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      InputBucket: [],
      OutputBucket: [],
      Role: [],
      Topics: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_TestRoleCommand");
var se_UpdatePipelineCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2012-09-25/pipelines/{Id}");
  b.p("Id", () => input.Id, "{Id}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      AwsKmsKeyArn: [],
      ContentConfig: (_) => (0, import_smithy_client._json)(_),
      InputBucket: [],
      Name: [],
      Notifications: (_) => (0, import_smithy_client._json)(_),
      Role: [],
      ThumbnailConfig: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdatePipelineCommand");
var se_UpdatePipelineNotificationsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2012-09-25/pipelines/{Id}/notifications");
  b.p("Id", () => input.Id, "{Id}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Notifications: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdatePipelineNotificationsCommand");
var se_UpdatePipelineStatusCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2012-09-25/pipelines/{Id}/status");
  b.p("Id", () => input.Id, "{Id}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Status: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdatePipelineStatusCommand");
var de_CancelJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_CancelJobCommand");
var de_CreateJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Job: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateJobCommand");
var de_CreatePipelineCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Pipeline: import_smithy_client._json,
    Warnings: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreatePipelineCommand");
var de_CreatePresetCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Preset: import_smithy_client._json,
    Warning: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreatePresetCommand");
var de_DeletePipelineCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeletePipelineCommand");
var de_DeletePresetCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 202 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeletePresetCommand");
var de_ListJobsByPipelineCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Jobs: import_smithy_client._json,
    NextPageToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListJobsByPipelineCommand");
var de_ListJobsByStatusCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Jobs: import_smithy_client._json,
    NextPageToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListJobsByStatusCommand");
var de_ListPipelinesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    NextPageToken: import_smithy_client.expectString,
    Pipelines: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListPipelinesCommand");
var de_ListPresetsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    NextPageToken: import_smithy_client.expectString,
    Presets: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListPresetsCommand");
var de_ReadJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Job: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ReadJobCommand");
var de_ReadPipelineCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Pipeline: import_smithy_client._json,
    Warnings: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ReadPipelineCommand");
var de_ReadPresetCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Preset: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ReadPresetCommand");
var de_TestRoleCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Messages: import_smithy_client._json,
    Success: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_TestRoleCommand");
var de_UpdatePipelineCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Pipeline: import_smithy_client._json,
    Warnings: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdatePipelineCommand");
var de_UpdatePipelineNotificationsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Pipeline: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdatePipelineNotificationsCommand");
var de_UpdatePipelineStatusCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Pipeline: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdatePipelineStatusCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await (0, import_core2.parseJsonErrorBody)(output.body, context)
  };
  const errorCode = (0, import_core2.loadRestJsonErrorCode)(output, parsedOutput.body);
  switch (errorCode) {
    case "AccessDeniedException":
    case "com.amazonaws.elastictranscoder#AccessDeniedException":
      throw await de_AccessDeniedExceptionRes(parsedOutput, context);
    case "IncompatibleVersionException":
    case "com.amazonaws.elastictranscoder#IncompatibleVersionException":
      throw await de_IncompatibleVersionExceptionRes(parsedOutput, context);
    case "InternalServiceException":
    case "com.amazonaws.elastictranscoder#InternalServiceException":
      throw await de_InternalServiceExceptionRes(parsedOutput, context);
    case "ResourceInUseException":
    case "com.amazonaws.elastictranscoder#ResourceInUseException":
      throw await de_ResourceInUseExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.elastictranscoder#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    case "ValidationException":
    case "com.amazonaws.elastictranscoder#ValidationException":
      throw await de_ValidationExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.elastictranscoder#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var throwDefaultError = (0, import_smithy_client.withBaseException)(ElasticTranscoderServiceException);
var de_AccessDeniedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new AccessDeniedException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_AccessDeniedExceptionRes");
var de_IncompatibleVersionExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new IncompatibleVersionException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_IncompatibleVersionExceptionRes");
var de_InternalServiceExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new InternalServiceException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_InternalServiceExceptionRes");
var de_LimitExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new LimitExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_LimitExceededExceptionRes");
var de_ResourceInUseExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ResourceInUseException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ResourceInUseExceptionRes");
var de_ResourceNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ResourceNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ResourceNotFoundExceptionRes");
var de_ValidationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ValidationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ValidationExceptionRes");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var _A = "Ascending";
var _PT = "PageToken";

// src/commands/CancelJobCommand.ts
var _CancelJobCommand = class _CancelJobCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("EtsCustomerService", "CancelJob", {}).n("ElasticTranscoderClient", "CancelJobCommand").f(void 0, void 0).ser(se_CancelJobCommand).de(de_CancelJobCommand).build() {
};
__name(_CancelJobCommand, "CancelJobCommand");
var CancelJobCommand = _CancelJobCommand;

// src/commands/CreateJobCommand.ts




var _CreateJobCommand = class _CreateJobCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("EtsCustomerService", "CreateJob", {}).n("ElasticTranscoderClient", "CreateJobCommand").f(void 0, void 0).ser(se_CreateJobCommand).de(de_CreateJobCommand).build() {
};
__name(_CreateJobCommand, "CreateJobCommand");
var CreateJobCommand = _CreateJobCommand;

// src/commands/CreatePipelineCommand.ts




var _CreatePipelineCommand = class _CreatePipelineCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("EtsCustomerService", "CreatePipeline", {}).n("ElasticTranscoderClient", "CreatePipelineCommand").f(void 0, void 0).ser(se_CreatePipelineCommand).de(de_CreatePipelineCommand).build() {
};
__name(_CreatePipelineCommand, "CreatePipelineCommand");
var CreatePipelineCommand = _CreatePipelineCommand;

// src/commands/CreatePresetCommand.ts




var _CreatePresetCommand = class _CreatePresetCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("EtsCustomerService", "CreatePreset", {}).n("ElasticTranscoderClient", "CreatePresetCommand").f(void 0, void 0).ser(se_CreatePresetCommand).de(de_CreatePresetCommand).build() {
};
__name(_CreatePresetCommand, "CreatePresetCommand");
var CreatePresetCommand = _CreatePresetCommand;

// src/commands/DeletePipelineCommand.ts




var _DeletePipelineCommand = class _DeletePipelineCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("EtsCustomerService", "DeletePipeline", {}).n("ElasticTranscoderClient", "DeletePipelineCommand").f(void 0, void 0).ser(se_DeletePipelineCommand).de(de_DeletePipelineCommand).build() {
};
__name(_DeletePipelineCommand, "DeletePipelineCommand");
var DeletePipelineCommand = _DeletePipelineCommand;

// src/commands/DeletePresetCommand.ts




var _DeletePresetCommand = class _DeletePresetCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("EtsCustomerService", "DeletePreset", {}).n("ElasticTranscoderClient", "DeletePresetCommand").f(void 0, void 0).ser(se_DeletePresetCommand).de(de_DeletePresetCommand).build() {
};
__name(_DeletePresetCommand, "DeletePresetCommand");
var DeletePresetCommand = _DeletePresetCommand;

// src/commands/ListJobsByPipelineCommand.ts




var _ListJobsByPipelineCommand = class _ListJobsByPipelineCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("EtsCustomerService", "ListJobsByPipeline", {}).n("ElasticTranscoderClient", "ListJobsByPipelineCommand").f(void 0, void 0).ser(se_ListJobsByPipelineCommand).de(de_ListJobsByPipelineCommand).build() {
};
__name(_ListJobsByPipelineCommand, "ListJobsByPipelineCommand");
var ListJobsByPipelineCommand = _ListJobsByPipelineCommand;

// src/commands/ListJobsByStatusCommand.ts




var _ListJobsByStatusCommand = class _ListJobsByStatusCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("EtsCustomerService", "ListJobsByStatus", {}).n("ElasticTranscoderClient", "ListJobsByStatusCommand").f(void 0, void 0).ser(se_ListJobsByStatusCommand).de(de_ListJobsByStatusCommand).build() {
};
__name(_ListJobsByStatusCommand, "ListJobsByStatusCommand");
var ListJobsByStatusCommand = _ListJobsByStatusCommand;

// src/commands/ListPipelinesCommand.ts




var _ListPipelinesCommand = class _ListPipelinesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("EtsCustomerService", "ListPipelines", {}).n("ElasticTranscoderClient", "ListPipelinesCommand").f(void 0, void 0).ser(se_ListPipelinesCommand).de(de_ListPipelinesCommand).build() {
};
__name(_ListPipelinesCommand, "ListPipelinesCommand");
var ListPipelinesCommand = _ListPipelinesCommand;

// src/commands/ListPresetsCommand.ts




var _ListPresetsCommand = class _ListPresetsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("EtsCustomerService", "ListPresets", {}).n("ElasticTranscoderClient", "ListPresetsCommand").f(void 0, void 0).ser(se_ListPresetsCommand).de(de_ListPresetsCommand).build() {
};
__name(_ListPresetsCommand, "ListPresetsCommand");
var ListPresetsCommand = _ListPresetsCommand;

// src/commands/ReadJobCommand.ts




var _ReadJobCommand = class _ReadJobCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("EtsCustomerService", "ReadJob", {}).n("ElasticTranscoderClient", "ReadJobCommand").f(void 0, void 0).ser(se_ReadJobCommand).de(de_ReadJobCommand).build() {
};
__name(_ReadJobCommand, "ReadJobCommand");
var ReadJobCommand = _ReadJobCommand;

// src/commands/ReadPipelineCommand.ts




var _ReadPipelineCommand = class _ReadPipelineCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("EtsCustomerService", "ReadPipeline", {}).n("ElasticTranscoderClient", "ReadPipelineCommand").f(void 0, void 0).ser(se_ReadPipelineCommand).de(de_ReadPipelineCommand).build() {
};
__name(_ReadPipelineCommand, "ReadPipelineCommand");
var ReadPipelineCommand = _ReadPipelineCommand;

// src/commands/ReadPresetCommand.ts




var _ReadPresetCommand = class _ReadPresetCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("EtsCustomerService", "ReadPreset", {}).n("ElasticTranscoderClient", "ReadPresetCommand").f(void 0, void 0).ser(se_ReadPresetCommand).de(de_ReadPresetCommand).build() {
};
__name(_ReadPresetCommand, "ReadPresetCommand");
var ReadPresetCommand = _ReadPresetCommand;

// src/commands/TestRoleCommand.ts




var _TestRoleCommand = class _TestRoleCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("EtsCustomerService", "TestRole", {}).n("ElasticTranscoderClient", "TestRoleCommand").f(void 0, void 0).ser(se_TestRoleCommand).de(de_TestRoleCommand).build() {
};
__name(_TestRoleCommand, "TestRoleCommand");
var TestRoleCommand = _TestRoleCommand;

// src/commands/UpdatePipelineCommand.ts




var _UpdatePipelineCommand = class _UpdatePipelineCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("EtsCustomerService", "UpdatePipeline", {}).n("ElasticTranscoderClient", "UpdatePipelineCommand").f(void 0, void 0).ser(se_UpdatePipelineCommand).de(de_UpdatePipelineCommand).build() {
};
__name(_UpdatePipelineCommand, "UpdatePipelineCommand");
var UpdatePipelineCommand = _UpdatePipelineCommand;

// src/commands/UpdatePipelineNotificationsCommand.ts




var _UpdatePipelineNotificationsCommand = class _UpdatePipelineNotificationsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("EtsCustomerService", "UpdatePipelineNotifications", {}).n("ElasticTranscoderClient", "UpdatePipelineNotificationsCommand").f(void 0, void 0).ser(se_UpdatePipelineNotificationsCommand).de(de_UpdatePipelineNotificationsCommand).build() {
};
__name(_UpdatePipelineNotificationsCommand, "UpdatePipelineNotificationsCommand");
var UpdatePipelineNotificationsCommand = _UpdatePipelineNotificationsCommand;

// src/commands/UpdatePipelineStatusCommand.ts




var _UpdatePipelineStatusCommand = class _UpdatePipelineStatusCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("EtsCustomerService", "UpdatePipelineStatus", {}).n("ElasticTranscoderClient", "UpdatePipelineStatusCommand").f(void 0, void 0).ser(se_UpdatePipelineStatusCommand).de(de_UpdatePipelineStatusCommand).build() {
};
__name(_UpdatePipelineStatusCommand, "UpdatePipelineStatusCommand");
var UpdatePipelineStatusCommand = _UpdatePipelineStatusCommand;

// src/ElasticTranscoder.ts
var commands = {
  CancelJobCommand,
  CreateJobCommand,
  CreatePipelineCommand,
  CreatePresetCommand,
  DeletePipelineCommand,
  DeletePresetCommand,
  ListJobsByPipelineCommand,
  ListJobsByStatusCommand,
  ListPipelinesCommand,
  ListPresetsCommand,
  ReadJobCommand,
  ReadPipelineCommand,
  ReadPresetCommand,
  TestRoleCommand,
  UpdatePipelineCommand,
  UpdatePipelineNotificationsCommand,
  UpdatePipelineStatusCommand
};
var _ElasticTranscoder = class _ElasticTranscoder extends ElasticTranscoderClient {
};
__name(_ElasticTranscoder, "ElasticTranscoder");
var ElasticTranscoder = _ElasticTranscoder;
(0, import_smithy_client.createAggregatedClient)(commands, ElasticTranscoder);

// src/pagination/ListJobsByPipelinePaginator.ts

var paginateListJobsByPipeline = (0, import_core.createPaginator)(ElasticTranscoderClient, ListJobsByPipelineCommand, "PageToken", "NextPageToken", "");

// src/pagination/ListJobsByStatusPaginator.ts

var paginateListJobsByStatus = (0, import_core.createPaginator)(ElasticTranscoderClient, ListJobsByStatusCommand, "PageToken", "NextPageToken", "");

// src/pagination/ListPipelinesPaginator.ts

var paginateListPipelines = (0, import_core.createPaginator)(ElasticTranscoderClient, ListPipelinesCommand, "PageToken", "NextPageToken", "");

// src/pagination/ListPresetsPaginator.ts

var paginateListPresets = (0, import_core.createPaginator)(ElasticTranscoderClient, ListPresetsCommand, "PageToken", "NextPageToken", "");

// src/waiters/waitForJobComplete.ts
var import_util_waiter = require("@smithy/util-waiter");
var checkState = /* @__PURE__ */ __name(async (client, input) => {
  let reason;
  try {
    const result = await client.send(new ReadJobCommand(input));
    reason = result;
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        return result.Job.Status;
      }, "returnComparator");
      if (returnComparator() === "Complete") {
        return { state: import_util_waiter.WaiterState.SUCCESS, reason };
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        return result.Job.Status;
      }, "returnComparator");
      if (returnComparator() === "Canceled") {
        return { state: import_util_waiter.WaiterState.FAILURE, reason };
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        return result.Job.Status;
      }, "returnComparator");
      if (returnComparator() === "Error") {
        return { state: import_util_waiter.WaiterState.FAILURE, reason };
      }
    } catch (e) {
    }
  } catch (exception) {
    reason = exception;
  }
  return { state: import_util_waiter.WaiterState.RETRY, reason };
}, "checkState");
var waitForJobComplete = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 30, maxDelay: 120 };
  return (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState);
}, "waitForJobComplete");
var waitUntilJobComplete = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 30, maxDelay: 120 };
  const result = await (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState);
  return (0, import_util_waiter.checkExceptions)(result);
}, "waitUntilJobComplete");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  ElasticTranscoderServiceException,
  __Client,
  ElasticTranscoderClient,
  ElasticTranscoder,
  $Command,
  CancelJobCommand,
  CreateJobCommand,
  CreatePipelineCommand,
  CreatePresetCommand,
  DeletePipelineCommand,
  DeletePresetCommand,
  ListJobsByPipelineCommand,
  ListJobsByStatusCommand,
  ListPipelinesCommand,
  ListPresetsCommand,
  ReadJobCommand,
  ReadPipelineCommand,
  ReadPresetCommand,
  TestRoleCommand,
  UpdatePipelineCommand,
  UpdatePipelineNotificationsCommand,
  UpdatePipelineStatusCommand,
  paginateListJobsByPipeline,
  paginateListJobsByStatus,
  paginateListPipelines,
  paginateListPresets,
  waitForJobComplete,
  waitUntilJobComplete,
  AccessDeniedException,
  IncompatibleVersionException,
  InternalServiceException,
  ResourceInUseException,
  ResourceNotFoundException,
  ValidationException,
  LimitExceededException
});

