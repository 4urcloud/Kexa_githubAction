import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { ElasticTranscoderServiceException as __BaseException } from "./ElasticTranscoderServiceException";
export declare class AccessDeniedException extends __BaseException {
  readonly name: "AccessDeniedException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<AccessDeniedException, __BaseException>
  );
}
export interface Encryption {
  Mode?: string;
  Key?: string;
  KeyMd5?: string;
  InitializationVector?: string;
}
export interface Artwork {
  InputKey?: string;
  MaxWidth?: string;
  MaxHeight?: string;
  SizingPolicy?: string;
  PaddingPolicy?: string;
  AlbumArtFormat?: string;
  Encryption?: Encryption;
}
export interface AudioCodecOptions {
  Profile?: string;
  BitDepth?: string;
  BitOrder?: string;
  Signed?: string;
}
export interface AudioParameters {
  Codec?: string;
  SampleRate?: string;
  BitRate?: string;
  Channels?: string;
  AudioPackingMode?: string;
  CodecOptions?: AudioCodecOptions;
}
export interface CancelJobRequest {
  Id: string | undefined;
}
export interface CancelJobResponse {}
export declare class IncompatibleVersionException extends __BaseException {
  readonly name: "IncompatibleVersionException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<IncompatibleVersionException, __BaseException>
  );
}
export declare class InternalServiceException extends __BaseException {
  readonly name: "InternalServiceException";
  readonly $fault: "server";
  constructor(
    opts: __ExceptionOptionType<InternalServiceException, __BaseException>
  );
}
export declare class ResourceInUseException extends __BaseException {
  readonly name: "ResourceInUseException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ResourceInUseException, __BaseException>
  );
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export declare class ValidationException extends __BaseException {
  readonly name: "ValidationException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ValidationException, __BaseException>
  );
}
export interface CaptionFormat {
  Format?: string;
  Pattern?: string;
  Encryption?: Encryption;
}
export interface CaptionSource {
  Key?: string;
  Language?: string;
  TimeOffset?: string;
  Label?: string;
  Encryption?: Encryption;
}
export interface Captions {
  MergePolicy?: string;
  CaptionSources?: CaptionSource[];
  CaptionFormats?: CaptionFormat[];
}
export interface TimeSpan {
  StartTime?: string;
  Duration?: string;
}
export interface Clip {
  TimeSpan?: TimeSpan;
}
export interface DetectedProperties {
  Width?: number;
  Height?: number;
  FrameRate?: string;
  FileSize?: number;
  DurationMillis?: number;
}
export interface InputCaptions {
  MergePolicy?: string;
  CaptionSources?: CaptionSource[];
}
export interface JobInput {
  Key?: string;
  FrameRate?: string;
  Resolution?: string;
  AspectRatio?: string;
  Interlaced?: string;
  Container?: string;
  Encryption?: Encryption;
  TimeSpan?: TimeSpan;
  InputCaptions?: InputCaptions;
  DetectedProperties?: DetectedProperties;
}
export interface JobAlbumArt {
  MergePolicy?: string;
  Artwork?: Artwork[];
}
export interface JobWatermark {
  PresetWatermarkId?: string;
  InputKey?: string;
  Encryption?: Encryption;
}
export interface CreateJobOutput {
  Key?: string;
  ThumbnailPattern?: string;
  ThumbnailEncryption?: Encryption;
  Rotate?: string;
  PresetId?: string;
  SegmentDuration?: string;
  Watermarks?: JobWatermark[];
  AlbumArt?: JobAlbumArt;
  Composition?: Clip[];
  Captions?: Captions;
  Encryption?: Encryption;
}
export interface HlsContentProtection {
  Method?: string;
  Key?: string;
  KeyMd5?: string;
  InitializationVector?: string;
  LicenseAcquisitionUrl?: string;
  KeyStoragePolicy?: string;
}
export interface PlayReadyDrm {
  Format?: string;
  Key?: string;
  KeyMd5?: string;
  KeyId?: string;
  InitializationVector?: string;
  LicenseAcquisitionUrl?: string;
}
export interface CreateJobPlaylist {
  Name?: string;
  Format?: string;
  OutputKeys?: string[];
  HlsContentProtection?: HlsContentProtection;
  PlayReadyDrm?: PlayReadyDrm;
}
export interface CreateJobRequest {
  PipelineId: string | undefined;
  Input?: JobInput;
  Inputs?: JobInput[];
  Output?: CreateJobOutput;
  Outputs?: CreateJobOutput[];
  OutputKeyPrefix?: string;
  Playlists?: CreateJobPlaylist[];
  UserMetadata?: Record<string, string>;
}
export interface JobOutput {
  Id?: string;
  Key?: string;
  ThumbnailPattern?: string;
  ThumbnailEncryption?: Encryption;
  Rotate?: string;
  PresetId?: string;
  SegmentDuration?: string;
  Status?: string;
  StatusDetail?: string;
  Duration?: number;
  Width?: number;
  Height?: number;
  FrameRate?: string;
  FileSize?: number;
  DurationMillis?: number;
  Watermarks?: JobWatermark[];
  AlbumArt?: JobAlbumArt;
  Composition?: Clip[];
  Captions?: Captions;
  Encryption?: Encryption;
  AppliedColorSpaceConversion?: string;
}
export interface Playlist {
  Name?: string;
  Format?: string;
  OutputKeys?: string[];
  HlsContentProtection?: HlsContentProtection;
  PlayReadyDrm?: PlayReadyDrm;
  Status?: string;
  StatusDetail?: string;
}
export interface Timing {
  SubmitTimeMillis?: number;
  StartTimeMillis?: number;
  FinishTimeMillis?: number;
}
export interface Job {
  Id?: string;
  Arn?: string;
  PipelineId?: string;
  Input?: JobInput;
  Inputs?: JobInput[];
  Output?: JobOutput;
  Outputs?: JobOutput[];
  OutputKeyPrefix?: string;
  Playlists?: Playlist[];
  Status?: string;
  UserMetadata?: Record<string, string>;
  Timing?: Timing;
}
export interface CreateJobResponse {
  Job?: Job;
}
export declare class LimitExceededException extends __BaseException {
  readonly name: "LimitExceededException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<LimitExceededException, __BaseException>
  );
}
export interface Permission {
  GranteeType?: string;
  Grantee?: string;
  Access?: string[];
}
export interface PipelineOutputConfig {
  Bucket?: string;
  StorageClass?: string;
  Permissions?: Permission[];
}
export interface Notifications {
  Progressing?: string;
  Completed?: string;
  Warning?: string;
  Error?: string;
}
export interface CreatePipelineRequest {
  Name: string | undefined;
  InputBucket: string | undefined;
  OutputBucket?: string;
  Role: string | undefined;
  AwsKmsKeyArn?: string;
  Notifications?: Notifications;
  ContentConfig?: PipelineOutputConfig;
  ThumbnailConfig?: PipelineOutputConfig;
}
export interface Pipeline {
  Id?: string;
  Arn?: string;
  Name?: string;
  Status?: string;
  InputBucket?: string;
  OutputBucket?: string;
  Role?: string;
  AwsKmsKeyArn?: string;
  Notifications?: Notifications;
  ContentConfig?: PipelineOutputConfig;
  ThumbnailConfig?: PipelineOutputConfig;
}
export interface Warning {
  Code?: string;
  Message?: string;
}
export interface CreatePipelineResponse {
  Pipeline?: Pipeline;
  Warnings?: Warning[];
}
export interface Thumbnails {
  Format?: string;
  Interval?: string;
  Resolution?: string;
  AspectRatio?: string;
  MaxWidth?: string;
  MaxHeight?: string;
  SizingPolicy?: string;
  PaddingPolicy?: string;
}
export interface PresetWatermark {
  Id?: string;
  MaxWidth?: string;
  MaxHeight?: string;
  SizingPolicy?: string;
  HorizontalAlign?: string;
  HorizontalOffset?: string;
  VerticalAlign?: string;
  VerticalOffset?: string;
  Opacity?: string;
  Target?: string;
}
export interface VideoParameters {
  Codec?: string;
  CodecOptions?: Record<string, string>;
  KeyframesMaxDist?: string;
  FixedGOP?: string;
  BitRate?: string;
  FrameRate?: string;
  MaxFrameRate?: string;
  Resolution?: string;
  AspectRatio?: string;
  MaxWidth?: string;
  MaxHeight?: string;
  DisplayAspectRatio?: string;
  SizingPolicy?: string;
  PaddingPolicy?: string;
  Watermarks?: PresetWatermark[];
}
export interface CreatePresetRequest {
  Name: string | undefined;
  Description?: string;
  Container: string | undefined;
  Video?: VideoParameters;
  Audio?: AudioParameters;
  Thumbnails?: Thumbnails;
}
export interface Preset {
  Id?: string;
  Arn?: string;
  Name?: string;
  Description?: string;
  Container?: string;
  Audio?: AudioParameters;
  Video?: VideoParameters;
  Thumbnails?: Thumbnails;
  Type?: string;
}
export interface CreatePresetResponse {
  Preset?: Preset;
  Warning?: string;
}
export interface DeletePipelineRequest {
  Id: string | undefined;
}
export interface DeletePipelineResponse {}
export interface DeletePresetRequest {
  Id: string | undefined;
}
export interface DeletePresetResponse {}
export interface ListJobsByPipelineRequest {
  PipelineId: string | undefined;
  Ascending?: string;
  PageToken?: string;
}
export interface ListJobsByPipelineResponse {
  Jobs?: Job[];
  NextPageToken?: string;
}
export interface ListJobsByStatusRequest {
  Status: string | undefined;
  Ascending?: string;
  PageToken?: string;
}
export interface ListJobsByStatusResponse {
  Jobs?: Job[];
  NextPageToken?: string;
}
export interface ListPipelinesRequest {
  Ascending?: string;
  PageToken?: string;
}
export interface ListPipelinesResponse {
  Pipelines?: Pipeline[];
  NextPageToken?: string;
}
export interface ListPresetsRequest {
  Ascending?: string;
  PageToken?: string;
}
export interface ListPresetsResponse {
  Presets?: Preset[];
  NextPageToken?: string;
}
export interface ReadJobRequest {
  Id: string | undefined;
}
export interface ReadJobResponse {
  Job?: Job;
}
export interface ReadPipelineRequest {
  Id: string | undefined;
}
export interface ReadPipelineResponse {
  Pipeline?: Pipeline;
  Warnings?: Warning[];
}
export interface ReadPresetRequest {
  Id: string | undefined;
}
export interface ReadPresetResponse {
  Preset?: Preset;
}
export interface TestRoleRequest {
  Role: string | undefined;
  InputBucket: string | undefined;
  OutputBucket: string | undefined;
  Topics: string[] | undefined;
}
export interface TestRoleResponse {
  Success?: string;
  Messages?: string[];
}
export interface UpdatePipelineRequest {
  Id: string | undefined;
  Name?: string;
  InputBucket?: string;
  Role?: string;
  AwsKmsKeyArn?: string;
  Notifications?: Notifications;
  ContentConfig?: PipelineOutputConfig;
  ThumbnailConfig?: PipelineOutputConfig;
}
export interface UpdatePipelineResponse {
  Pipeline?: Pipeline;
  Warnings?: Warning[];
}
export interface UpdatePipelineNotificationsRequest {
  Id: string | undefined;
  Notifications: Notifications | undefined;
}
export interface UpdatePipelineNotificationsResponse {
  Pipeline?: Pipeline;
}
export interface UpdatePipelineStatusRequest {
  Id: string | undefined;
  Status: string | undefined;
}
export interface UpdatePipelineStatusResponse {
  Pipeline?: Pipeline;
}
