import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import {
  AssociateNodeCommandInput,
  AssociateNodeCommandOutput,
} from "./commands/AssociateNodeCommand";
import {
  CreateBackupCommandInput,
  CreateBackupCommandOutput,
} from "./commands/CreateBackupCommand";
import {
  CreateServerCommandInput,
  CreateServerCommandOutput,
} from "./commands/CreateServerCommand";
import {
  DeleteBackupCommandInput,
  DeleteBackupCommandOutput,
} from "./commands/DeleteBackupCommand";
import {
  DeleteServerCommandInput,
  DeleteServerCommandOutput,
} from "./commands/DeleteServerCommand";
import {
  DescribeAccountAttributesCommandInput,
  DescribeAccountAttributesCommandOutput,
} from "./commands/DescribeAccountAttributesCommand";
import {
  DescribeBackupsCommandInput,
  DescribeBackupsCommandOutput,
} from "./commands/DescribeBackupsCommand";
import {
  DescribeEventsCommandInput,
  DescribeEventsCommandOutput,
} from "./commands/DescribeEventsCommand";
import {
  DescribeNodeAssociationStatusCommandInput,
  DescribeNodeAssociationStatusCommandOutput,
} from "./commands/DescribeNodeAssociationStatusCommand";
import {
  DescribeServersCommandInput,
  DescribeServersCommandOutput,
} from "./commands/DescribeServersCommand";
import {
  DisassociateNodeCommandInput,
  DisassociateNodeCommandOutput,
} from "./commands/DisassociateNodeCommand";
import {
  ExportServerEngineAttributeCommandInput,
  ExportServerEngineAttributeCommandOutput,
} from "./commands/ExportServerEngineAttributeCommand";
import {
  ListTagsForResourceCommandInput,
  ListTagsForResourceCommandOutput,
} from "./commands/ListTagsForResourceCommand";
import {
  RestoreServerCommandInput,
  RestoreServerCommandOutput,
} from "./commands/RestoreServerCommand";
import {
  StartMaintenanceCommandInput,
  StartMaintenanceCommandOutput,
} from "./commands/StartMaintenanceCommand";
import {
  TagResourceCommandInput,
  TagResourceCommandOutput,
} from "./commands/TagResourceCommand";
import {
  UntagResourceCommandInput,
  UntagResourceCommandOutput,
} from "./commands/UntagResourceCommand";
import {
  UpdateServerCommandInput,
  UpdateServerCommandOutput,
} from "./commands/UpdateServerCommand";
import {
  UpdateServerEngineAttributesCommandInput,
  UpdateServerEngineAttributesCommandOutput,
} from "./commands/UpdateServerEngineAttributesCommand";
import { OpsWorksCMClient } from "./OpsWorksCMClient";
export interface OpsWorksCM {
  associateNode(
    args: AssociateNodeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AssociateNodeCommandOutput>;
  associateNode(
    args: AssociateNodeCommandInput,
    cb: (err: any, data?: AssociateNodeCommandOutput) => void
  ): void;
  associateNode(
    args: AssociateNodeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AssociateNodeCommandOutput) => void
  ): void;
  createBackup(
    args: CreateBackupCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateBackupCommandOutput>;
  createBackup(
    args: CreateBackupCommandInput,
    cb: (err: any, data?: CreateBackupCommandOutput) => void
  ): void;
  createBackup(
    args: CreateBackupCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateBackupCommandOutput) => void
  ): void;
  createServer(
    args: CreateServerCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateServerCommandOutput>;
  createServer(
    args: CreateServerCommandInput,
    cb: (err: any, data?: CreateServerCommandOutput) => void
  ): void;
  createServer(
    args: CreateServerCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateServerCommandOutput) => void
  ): void;
  deleteBackup(
    args: DeleteBackupCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteBackupCommandOutput>;
  deleteBackup(
    args: DeleteBackupCommandInput,
    cb: (err: any, data?: DeleteBackupCommandOutput) => void
  ): void;
  deleteBackup(
    args: DeleteBackupCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteBackupCommandOutput) => void
  ): void;
  deleteServer(
    args: DeleteServerCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteServerCommandOutput>;
  deleteServer(
    args: DeleteServerCommandInput,
    cb: (err: any, data?: DeleteServerCommandOutput) => void
  ): void;
  deleteServer(
    args: DeleteServerCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteServerCommandOutput) => void
  ): void;
  describeAccountAttributes(): Promise<DescribeAccountAttributesCommandOutput>;
  describeAccountAttributes(
    args: DescribeAccountAttributesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeAccountAttributesCommandOutput>;
  describeAccountAttributes(
    args: DescribeAccountAttributesCommandInput,
    cb: (err: any, data?: DescribeAccountAttributesCommandOutput) => void
  ): void;
  describeAccountAttributes(
    args: DescribeAccountAttributesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeAccountAttributesCommandOutput) => void
  ): void;
  describeBackups(): Promise<DescribeBackupsCommandOutput>;
  describeBackups(
    args: DescribeBackupsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeBackupsCommandOutput>;
  describeBackups(
    args: DescribeBackupsCommandInput,
    cb: (err: any, data?: DescribeBackupsCommandOutput) => void
  ): void;
  describeBackups(
    args: DescribeBackupsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeBackupsCommandOutput) => void
  ): void;
  describeEvents(
    args: DescribeEventsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeEventsCommandOutput>;
  describeEvents(
    args: DescribeEventsCommandInput,
    cb: (err: any, data?: DescribeEventsCommandOutput) => void
  ): void;
  describeEvents(
    args: DescribeEventsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeEventsCommandOutput) => void
  ): void;
  describeNodeAssociationStatus(
    args: DescribeNodeAssociationStatusCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeNodeAssociationStatusCommandOutput>;
  describeNodeAssociationStatus(
    args: DescribeNodeAssociationStatusCommandInput,
    cb: (err: any, data?: DescribeNodeAssociationStatusCommandOutput) => void
  ): void;
  describeNodeAssociationStatus(
    args: DescribeNodeAssociationStatusCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeNodeAssociationStatusCommandOutput) => void
  ): void;
  describeServers(): Promise<DescribeServersCommandOutput>;
  describeServers(
    args: DescribeServersCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeServersCommandOutput>;
  describeServers(
    args: DescribeServersCommandInput,
    cb: (err: any, data?: DescribeServersCommandOutput) => void
  ): void;
  describeServers(
    args: DescribeServersCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeServersCommandOutput) => void
  ): void;
  disassociateNode(
    args: DisassociateNodeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DisassociateNodeCommandOutput>;
  disassociateNode(
    args: DisassociateNodeCommandInput,
    cb: (err: any, data?: DisassociateNodeCommandOutput) => void
  ): void;
  disassociateNode(
    args: DisassociateNodeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DisassociateNodeCommandOutput) => void
  ): void;
  exportServerEngineAttribute(
    args: ExportServerEngineAttributeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ExportServerEngineAttributeCommandOutput>;
  exportServerEngineAttribute(
    args: ExportServerEngineAttributeCommandInput,
    cb: (err: any, data?: ExportServerEngineAttributeCommandOutput) => void
  ): void;
  exportServerEngineAttribute(
    args: ExportServerEngineAttributeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ExportServerEngineAttributeCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListTagsForResourceCommandOutput>;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  restoreServer(
    args: RestoreServerCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<RestoreServerCommandOutput>;
  restoreServer(
    args: RestoreServerCommandInput,
    cb: (err: any, data?: RestoreServerCommandOutput) => void
  ): void;
  restoreServer(
    args: RestoreServerCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: RestoreServerCommandOutput) => void
  ): void;
  startMaintenance(
    args: StartMaintenanceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<StartMaintenanceCommandOutput>;
  startMaintenance(
    args: StartMaintenanceCommandInput,
    cb: (err: any, data?: StartMaintenanceCommandOutput) => void
  ): void;
  startMaintenance(
    args: StartMaintenanceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: StartMaintenanceCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<TagResourceCommandOutput>;
  tagResource(
    args: TagResourceCommandInput,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UntagResourceCommandOutput>;
  untagResource(
    args: UntagResourceCommandInput,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  updateServer(
    args: UpdateServerCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateServerCommandOutput>;
  updateServer(
    args: UpdateServerCommandInput,
    cb: (err: any, data?: UpdateServerCommandOutput) => void
  ): void;
  updateServer(
    args: UpdateServerCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateServerCommandOutput) => void
  ): void;
  updateServerEngineAttributes(
    args: UpdateServerEngineAttributesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateServerEngineAttributesCommandOutput>;
  updateServerEngineAttributes(
    args: UpdateServerEngineAttributesCommandInput,
    cb: (err: any, data?: UpdateServerEngineAttributesCommandOutput) => void
  ): void;
  updateServerEngineAttributes(
    args: UpdateServerEngineAttributesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateServerEngineAttributesCommandOutput) => void
  ): void;
}
export declare class OpsWorksCM
  extends OpsWorksCMClient
  implements OpsWorksCM {}
