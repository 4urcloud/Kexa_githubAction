import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { OpsWorksCMServiceException as __BaseException } from "./OpsWorksCMServiceException";
export interface AccountAttribute {
  Name?: string;
  Maximum?: number;
  Used?: number;
}
export interface EngineAttribute {
  Name?: string;
  Value?: string;
}
export interface AssociateNodeRequest {
  ServerName: string | undefined;
  NodeName: string | undefined;
  EngineAttributes: EngineAttribute[] | undefined;
}
export interface AssociateNodeResponse {
  NodeAssociationStatusToken?: string;
}
export declare class InvalidStateException extends __BaseException {
  readonly name: "InvalidStateException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<InvalidStateException, __BaseException>
  );
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export declare class ValidationException extends __BaseException {
  readonly name: "ValidationException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ValidationException, __BaseException>
  );
}
export declare const BackupType: {
  readonly AUTOMATED: "AUTOMATED";
  readonly MANUAL: "MANUAL";
};
export type BackupType = (typeof BackupType)[keyof typeof BackupType];
export declare const BackupStatus: {
  readonly DELETING: "DELETING";
  readonly FAILED: "FAILED";
  readonly IN_PROGRESS: "IN_PROGRESS";
  readonly OK: "OK";
};
export type BackupStatus = (typeof BackupStatus)[keyof typeof BackupStatus];
export interface Backup {
  BackupArn?: string;
  BackupId?: string;
  BackupType?: BackupType;
  CreatedAt?: Date;
  Description?: string;
  Engine?: string;
  EngineModel?: string;
  EngineVersion?: string;
  InstanceProfileArn?: string;
  InstanceType?: string;
  KeyPair?: string;
  PreferredBackupWindow?: string;
  PreferredMaintenanceWindow?: string;
  S3DataSize?: number;
  S3DataUrl?: string;
  S3LogUrl?: string;
  SecurityGroupIds?: string[];
  ServerName?: string;
  ServiceRoleArn?: string;
  Status?: BackupStatus;
  StatusDescription?: string;
  SubnetIds?: string[];
  ToolsVersion?: string;
  UserArn?: string;
}
export interface Tag {
  Key: string | undefined;
  Value: string | undefined;
}
export interface CreateBackupRequest {
  ServerName: string | undefined;
  Description?: string;
  Tags?: Tag[];
}
export interface CreateBackupResponse {
  Backup?: Backup;
}
export declare class LimitExceededException extends __BaseException {
  readonly name: "LimitExceededException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<LimitExceededException, __BaseException>
  );
}
export interface CreateServerRequest {
  AssociatePublicIpAddress?: boolean;
  CustomDomain?: string;
  CustomCertificate?: string;
  CustomPrivateKey?: string;
  DisableAutomatedBackup?: boolean;
  Engine: string | undefined;
  EngineModel?: string;
  EngineVersion?: string;
  EngineAttributes?: EngineAttribute[];
  BackupRetentionCount?: number;
  ServerName: string | undefined;
  InstanceProfileArn: string | undefined;
  InstanceType: string | undefined;
  KeyPair?: string;
  PreferredMaintenanceWindow?: string;
  PreferredBackupWindow?: string;
  SecurityGroupIds?: string[];
  ServiceRoleArn: string | undefined;
  SubnetIds?: string[];
  Tags?: Tag[];
  BackupId?: string;
}
export declare const MaintenanceStatus: {
  readonly FAILED: "FAILED";
  readonly SUCCESS: "SUCCESS";
};
export type MaintenanceStatus =
  (typeof MaintenanceStatus)[keyof typeof MaintenanceStatus];
export declare const ServerStatus: {
  readonly BACKING_UP: "BACKING_UP";
  readonly CONNECTION_LOST: "CONNECTION_LOST";
  readonly CREATING: "CREATING";
  readonly DELETING: "DELETING";
  readonly FAILED: "FAILED";
  readonly HEALTHY: "HEALTHY";
  readonly MODIFYING: "MODIFYING";
  readonly RESTORING: "RESTORING";
  readonly RUNNING: "RUNNING";
  readonly SETUP: "SETUP";
  readonly TERMINATED: "TERMINATED";
  readonly UNDER_MAINTENANCE: "UNDER_MAINTENANCE";
  readonly UNHEALTHY: "UNHEALTHY";
};
export type ServerStatus = (typeof ServerStatus)[keyof typeof ServerStatus];
export interface Server {
  AssociatePublicIpAddress?: boolean;
  BackupRetentionCount?: number;
  ServerName?: string;
  CreatedAt?: Date;
  CloudFormationStackArn?: string;
  CustomDomain?: string;
  DisableAutomatedBackup?: boolean;
  Endpoint?: string;
  Engine?: string;
  EngineModel?: string;
  EngineAttributes?: EngineAttribute[];
  EngineVersion?: string;
  InstanceProfileArn?: string;
  InstanceType?: string;
  KeyPair?: string;
  MaintenanceStatus?: MaintenanceStatus;
  PreferredMaintenanceWindow?: string;
  PreferredBackupWindow?: string;
  SecurityGroupIds?: string[];
  ServiceRoleArn?: string;
  Status?: ServerStatus;
  StatusReason?: string;
  SubnetIds?: string[];
  ServerArn?: string;
}
export interface CreateServerResponse {
  Server?: Server;
}
export declare class ResourceAlreadyExistsException extends __BaseException {
  readonly name: "ResourceAlreadyExistsException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ResourceAlreadyExistsException, __BaseException>
  );
}
export interface DeleteBackupRequest {
  BackupId: string | undefined;
}
export interface DeleteBackupResponse {}
export interface DeleteServerRequest {
  ServerName: string | undefined;
}
export interface DeleteServerResponse {}
export interface DescribeAccountAttributesRequest {}
export interface DescribeAccountAttributesResponse {
  Attributes?: AccountAttribute[];
}
export interface DescribeBackupsRequest {
  BackupId?: string;
  ServerName?: string;
  NextToken?: string;
  MaxResults?: number;
}
export interface DescribeBackupsResponse {
  Backups?: Backup[];
  NextToken?: string;
}
export declare class InvalidNextTokenException extends __BaseException {
  readonly name: "InvalidNextTokenException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<InvalidNextTokenException, __BaseException>
  );
}
export interface DescribeEventsRequest {
  ServerName: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface ServerEvent {
  CreatedAt?: Date;
  ServerName?: string;
  Message?: string;
  LogUrl?: string;
}
export interface DescribeEventsResponse {
  ServerEvents?: ServerEvent[];
  NextToken?: string;
}
export interface DescribeNodeAssociationStatusRequest {
  NodeAssociationStatusToken: string | undefined;
  ServerName: string | undefined;
}
export declare const NodeAssociationStatus: {
  readonly FAILED: "FAILED";
  readonly IN_PROGRESS: "IN_PROGRESS";
  readonly SUCCESS: "SUCCESS";
};
export type NodeAssociationStatus =
  (typeof NodeAssociationStatus)[keyof typeof NodeAssociationStatus];
export interface DescribeNodeAssociationStatusResponse {
  NodeAssociationStatus?: NodeAssociationStatus;
  EngineAttributes?: EngineAttribute[];
}
export interface DescribeServersRequest {
  ServerName?: string;
  NextToken?: string;
  MaxResults?: number;
}
export interface DescribeServersResponse {
  Servers?: Server[];
  NextToken?: string;
}
export interface DisassociateNodeRequest {
  ServerName: string | undefined;
  NodeName: string | undefined;
  EngineAttributes?: EngineAttribute[];
}
export interface DisassociateNodeResponse {
  NodeAssociationStatusToken?: string;
}
export interface ExportServerEngineAttributeRequest {
  ExportAttributeName: string | undefined;
  ServerName: string | undefined;
  InputAttributes?: EngineAttribute[];
}
export interface ExportServerEngineAttributeResponse {
  EngineAttribute?: EngineAttribute;
  ServerName?: string;
}
export interface ListTagsForResourceRequest {
  ResourceArn: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListTagsForResourceResponse {
  Tags?: Tag[];
  NextToken?: string;
}
export interface RestoreServerRequest {
  BackupId: string | undefined;
  ServerName: string | undefined;
  InstanceType?: string;
  KeyPair?: string;
}
export interface RestoreServerResponse {
  Server?: Server;
}
export interface StartMaintenanceRequest {
  ServerName: string | undefined;
  EngineAttributes?: EngineAttribute[];
}
export interface StartMaintenanceResponse {
  Server?: Server;
}
export interface TagResourceRequest {
  ResourceArn: string | undefined;
  Tags: Tag[] | undefined;
}
export interface TagResourceResponse {}
export interface UntagResourceRequest {
  ResourceArn: string | undefined;
  TagKeys: string[] | undefined;
}
export interface UntagResourceResponse {}
export interface UpdateServerRequest {
  DisableAutomatedBackup?: boolean;
  BackupRetentionCount?: number;
  ServerName: string | undefined;
  PreferredMaintenanceWindow?: string;
  PreferredBackupWindow?: string;
}
export interface UpdateServerResponse {
  Server?: Server;
}
export interface UpdateServerEngineAttributesRequest {
  ServerName: string | undefined;
  AttributeName: string | undefined;
  AttributeValue?: string;
}
export interface UpdateServerEngineAttributesResponse {
  Server?: Server;
}
export declare const EngineAttributeFilterSensitiveLog: (
  obj: EngineAttribute
) => any;
export declare const AssociateNodeRequestFilterSensitiveLog: (
  obj: AssociateNodeRequest
) => any;
export declare const CreateServerRequestFilterSensitiveLog: (
  obj: CreateServerRequest
) => any;
export declare const ServerFilterSensitiveLog: (obj: Server) => any;
export declare const CreateServerResponseFilterSensitiveLog: (
  obj: CreateServerResponse
) => any;
export declare const DescribeNodeAssociationStatusResponseFilterSensitiveLog: (
  obj: DescribeNodeAssociationStatusResponse
) => any;
export declare const DescribeServersResponseFilterSensitiveLog: (
  obj: DescribeServersResponse
) => any;
export declare const DisassociateNodeRequestFilterSensitiveLog: (
  obj: DisassociateNodeRequest
) => any;
export declare const ExportServerEngineAttributeRequestFilterSensitiveLog: (
  obj: ExportServerEngineAttributeRequest
) => any;
export declare const ExportServerEngineAttributeResponseFilterSensitiveLog: (
  obj: ExportServerEngineAttributeResponse
) => any;
export declare const RestoreServerResponseFilterSensitiveLog: (
  obj: RestoreServerResponse
) => any;
export declare const StartMaintenanceRequestFilterSensitiveLog: (
  obj: StartMaintenanceRequest
) => any;
export declare const StartMaintenanceResponseFilterSensitiveLog: (
  obj: StartMaintenanceResponse
) => any;
export declare const UpdateServerResponseFilterSensitiveLog: (
  obj: UpdateServerResponse
) => any;
export declare const UpdateServerEngineAttributesResponseFilterSensitiveLog: (
  obj: UpdateServerEngineAttributesResponse
) => any;
