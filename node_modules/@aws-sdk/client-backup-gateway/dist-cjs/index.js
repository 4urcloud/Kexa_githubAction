"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  AccessDeniedException: () => AccessDeniedException,
  AssociateGatewayToServerCommand: () => AssociateGatewayToServerCommand,
  BackupGateway: () => BackupGateway,
  BackupGatewayClient: () => BackupGatewayClient,
  BackupGatewayServiceException: () => BackupGatewayServiceException,
  ConflictException: () => ConflictException,
  CreateGatewayCommand: () => CreateGatewayCommand,
  DeleteGatewayCommand: () => DeleteGatewayCommand,
  DeleteHypervisorCommand: () => DeleteHypervisorCommand,
  DisassociateGatewayFromServerCommand: () => DisassociateGatewayFromServerCommand,
  GatewayType: () => GatewayType,
  GetBandwidthRateLimitScheduleCommand: () => GetBandwidthRateLimitScheduleCommand,
  GetGatewayCommand: () => GetGatewayCommand,
  GetHypervisorCommand: () => GetHypervisorCommand,
  GetHypervisorPropertyMappingsCommand: () => GetHypervisorPropertyMappingsCommand,
  GetVirtualMachineCommand: () => GetVirtualMachineCommand,
  HypervisorState: () => HypervisorState,
  ImportHypervisorConfigurationCommand: () => ImportHypervisorConfigurationCommand,
  ImportHypervisorConfigurationInputFilterSensitiveLog: () => ImportHypervisorConfigurationInputFilterSensitiveLog,
  InternalServerException: () => InternalServerException,
  ListGatewaysCommand: () => ListGatewaysCommand,
  ListHypervisorsCommand: () => ListHypervisorsCommand,
  ListTagsForResourceCommand: () => ListTagsForResourceCommand,
  ListVirtualMachinesCommand: () => ListVirtualMachinesCommand,
  PutBandwidthRateLimitScheduleCommand: () => PutBandwidthRateLimitScheduleCommand,
  PutHypervisorPropertyMappingsCommand: () => PutHypervisorPropertyMappingsCommand,
  PutMaintenanceStartTimeCommand: () => PutMaintenanceStartTimeCommand,
  ResourceNotFoundException: () => ResourceNotFoundException,
  StartVirtualMachinesMetadataSyncCommand: () => StartVirtualMachinesMetadataSyncCommand,
  SyncMetadataStatus: () => SyncMetadataStatus,
  TagResourceCommand: () => TagResourceCommand,
  TestHypervisorConfigurationCommand: () => TestHypervisorConfigurationCommand,
  TestHypervisorConfigurationInputFilterSensitiveLog: () => TestHypervisorConfigurationInputFilterSensitiveLog,
  ThrottlingException: () => ThrottlingException,
  UntagResourceCommand: () => UntagResourceCommand,
  UpdateGatewayInformationCommand: () => UpdateGatewayInformationCommand,
  UpdateGatewaySoftwareNowCommand: () => UpdateGatewaySoftwareNowCommand,
  UpdateHypervisorCommand: () => UpdateHypervisorCommand,
  UpdateHypervisorInputFilterSensitiveLog: () => UpdateHypervisorInputFilterSensitiveLog,
  ValidationException: () => ValidationException,
  __Client: () => import_smithy_client.Client,
  paginateListGateways: () => paginateListGateways,
  paginateListHypervisors: () => paginateListHypervisors,
  paginateListVirtualMachines: () => paginateListVirtualMachines
});
module.exports = __toCommonJS(src_exports);

// src/BackupGatewayClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return {
    ...options,
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "backup-gateway"
  };
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/BackupGatewayClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var asPartial = /* @__PURE__ */ __name((t) => t, "asPartial");
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = {
    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),
    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
  };
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return {
    ...runtimeConfig,
    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
  };
}, "resolveRuntimeExtensions");

// src/BackupGatewayClient.ts
var _BackupGatewayClient = class _BackupGatewayClient extends import_smithy_client.Client {
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_config_resolver.resolveRegionConfig)(_config_1);
    const _config_3 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_2);
    const _config_4 = (0, import_middleware_retry.resolveRetryConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, (configuration == null ? void 0 : configuration.extensions) || []);
    super(_config_8);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),
        identityProviderConfigProvider: this.getIdentityProviderConfigProvider()
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
  getDefaultHttpAuthSchemeParametersProvider() {
    return import_httpAuthSchemeProvider.defaultBackupGatewayHttpAuthSchemeParametersProvider;
  }
  getIdentityProviderConfigProvider() {
    return async (config) => new import_core.DefaultIdentityProviderConfig({
      "aws.auth#sigv4": config.credentials
    });
  }
};
__name(_BackupGatewayClient, "BackupGatewayClient");
var BackupGatewayClient = _BackupGatewayClient;

// src/BackupGateway.ts


// src/commands/AssociateGatewayToServerCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");

var import_types = require("@smithy/types");

// src/protocols/Aws_json1_0.ts
var import_core2 = require("@aws-sdk/core");



// src/models/BackupGatewayServiceException.ts

var _BackupGatewayServiceException = class _BackupGatewayServiceException extends import_smithy_client.ServiceException {
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _BackupGatewayServiceException.prototype);
  }
};
__name(_BackupGatewayServiceException, "BackupGatewayServiceException");
var BackupGatewayServiceException = _BackupGatewayServiceException;

// src/models/models_0.ts

var _AccessDeniedException = class _AccessDeniedException extends BackupGatewayServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "AccessDeniedException",
      $fault: "client",
      ...opts
    });
    this.name = "AccessDeniedException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _AccessDeniedException.prototype);
    this.ErrorCode = opts.ErrorCode;
    this.Message = opts.Message;
  }
};
__name(_AccessDeniedException, "AccessDeniedException");
var AccessDeniedException = _AccessDeniedException;
var _ConflictException = class _ConflictException extends BackupGatewayServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ConflictException",
      $fault: "client",
      ...opts
    });
    this.name = "ConflictException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ConflictException.prototype);
    this.ErrorCode = opts.ErrorCode;
    this.Message = opts.Message;
  }
};
__name(_ConflictException, "ConflictException");
var ConflictException = _ConflictException;
var _InternalServerException = class _InternalServerException extends BackupGatewayServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InternalServerException",
      $fault: "server",
      ...opts
    });
    this.name = "InternalServerException";
    this.$fault = "server";
    Object.setPrototypeOf(this, _InternalServerException.prototype);
    this.ErrorCode = opts.ErrorCode;
    this.Message = opts.Message;
  }
};
__name(_InternalServerException, "InternalServerException");
var InternalServerException = _InternalServerException;
var _ThrottlingException = class _ThrottlingException extends BackupGatewayServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ThrottlingException",
      $fault: "client",
      ...opts
    });
    this.name = "ThrottlingException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ThrottlingException.prototype);
    this.ErrorCode = opts.ErrorCode;
    this.Message = opts.Message;
  }
};
__name(_ThrottlingException, "ThrottlingException");
var ThrottlingException = _ThrottlingException;
var _ValidationException = class _ValidationException extends BackupGatewayServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ValidationException",
      $fault: "client",
      ...opts
    });
    this.name = "ValidationException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ValidationException.prototype);
    this.ErrorCode = opts.ErrorCode;
    this.Message = opts.Message;
  }
};
__name(_ValidationException, "ValidationException");
var ValidationException = _ValidationException;
var _ResourceNotFoundException = class _ResourceNotFoundException extends BackupGatewayServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceNotFoundException",
      $fault: "client",
      ...opts
    });
    this.name = "ResourceNotFoundException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourceNotFoundException.prototype);
    this.ErrorCode = opts.ErrorCode;
    this.Message = opts.Message;
  }
};
__name(_ResourceNotFoundException, "ResourceNotFoundException");
var ResourceNotFoundException = _ResourceNotFoundException;
var GatewayType = {
  BACKUP_VM: "BACKUP_VM"
};
var SyncMetadataStatus = {
  CREATED: "CREATED",
  FAILED: "FAILED",
  PARTIALLY_FAILED: "PARTIALLY_FAILED",
  RUNNING: "RUNNING",
  SUCCEEDED: "SUCCEEDED"
};
var HypervisorState = {
  ERROR: "ERROR",
  OFFLINE: "OFFLINE",
  ONLINE: "ONLINE",
  PENDING: "PENDING"
};
var TestHypervisorConfigurationInputFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Username && { Username: import_smithy_client.SENSITIVE_STRING },
  ...obj.Password && { Password: import_smithy_client.SENSITIVE_STRING }
}), "TestHypervisorConfigurationInputFilterSensitiveLog");
var ImportHypervisorConfigurationInputFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Username && { Username: import_smithy_client.SENSITIVE_STRING },
  ...obj.Password && { Password: import_smithy_client.SENSITIVE_STRING }
}), "ImportHypervisorConfigurationInputFilterSensitiveLog");
var UpdateHypervisorInputFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Username && { Username: import_smithy_client.SENSITIVE_STRING },
  ...obj.Password && { Password: import_smithy_client.SENSITIVE_STRING }
}), "UpdateHypervisorInputFilterSensitiveLog");

// src/protocols/Aws_json1_0.ts
var se_AssociateGatewayToServerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("AssociateGatewayToServer");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_AssociateGatewayToServerCommand");
var se_CreateGatewayCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateGateway");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateGatewayCommand");
var se_DeleteGatewayCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteGateway");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteGatewayCommand");
var se_DeleteHypervisorCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteHypervisor");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteHypervisorCommand");
var se_DisassociateGatewayFromServerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DisassociateGatewayFromServer");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DisassociateGatewayFromServerCommand");
var se_GetBandwidthRateLimitScheduleCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetBandwidthRateLimitSchedule");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetBandwidthRateLimitScheduleCommand");
var se_GetGatewayCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetGateway");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetGatewayCommand");
var se_GetHypervisorCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetHypervisor");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetHypervisorCommand");
var se_GetHypervisorPropertyMappingsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetHypervisorPropertyMappings");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetHypervisorPropertyMappingsCommand");
var se_GetVirtualMachineCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetVirtualMachine");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetVirtualMachineCommand");
var se_ImportHypervisorConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ImportHypervisorConfiguration");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ImportHypervisorConfigurationCommand");
var se_ListGatewaysCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListGateways");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListGatewaysCommand");
var se_ListHypervisorsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListHypervisors");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListHypervisorsCommand");
var se_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListTagsForResource");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListTagsForResourceCommand");
var se_ListVirtualMachinesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListVirtualMachines");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListVirtualMachinesCommand");
var se_PutBandwidthRateLimitScheduleCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("PutBandwidthRateLimitSchedule");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_PutBandwidthRateLimitScheduleCommand");
var se_PutHypervisorPropertyMappingsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("PutHypervisorPropertyMappings");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_PutHypervisorPropertyMappingsCommand");
var se_PutMaintenanceStartTimeCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("PutMaintenanceStartTime");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_PutMaintenanceStartTimeCommand");
var se_StartVirtualMachinesMetadataSyncCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("StartVirtualMachinesMetadataSync");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_StartVirtualMachinesMetadataSyncCommand");
var se_TagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("TagResource");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_TagResourceCommand");
var se_TestHypervisorConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("TestHypervisorConfiguration");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_TestHypervisorConfigurationCommand");
var se_UntagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UntagResource");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UntagResourceCommand");
var se_UpdateGatewayInformationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateGatewayInformation");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateGatewayInformationCommand");
var se_UpdateGatewaySoftwareNowCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateGatewaySoftwareNow");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateGatewaySoftwareNowCommand");
var se_UpdateHypervisorCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateHypervisor");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateHypervisorCommand");
var de_AssociateGatewayToServerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_AssociateGatewayToServerCommand");
var de_CreateGatewayCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateGatewayCommand");
var de_DeleteGatewayCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeleteGatewayCommand");
var de_DeleteHypervisorCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DeleteHypervisorCommand");
var de_DisassociateGatewayFromServerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DisassociateGatewayFromServerCommand");
var de_GetBandwidthRateLimitScheduleCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetBandwidthRateLimitScheduleCommand");
var de_GetGatewayCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_GetGatewayOutput(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetGatewayCommand");
var de_GetHypervisorCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_GetHypervisorOutput(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetHypervisorCommand");
var de_GetHypervisorPropertyMappingsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetHypervisorPropertyMappingsCommand");
var de_GetVirtualMachineCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_GetVirtualMachineOutput(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetVirtualMachineCommand");
var de_ImportHypervisorConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ImportHypervisorConfigurationCommand");
var de_ListGatewaysCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_ListGatewaysOutput(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListGatewaysCommand");
var de_ListHypervisorsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListHypervisorsCommand");
var de_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListTagsForResourceCommand");
var de_ListVirtualMachinesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_ListVirtualMachinesOutput(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListVirtualMachinesCommand");
var de_PutBandwidthRateLimitScheduleCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_PutBandwidthRateLimitScheduleCommand");
var de_PutHypervisorPropertyMappingsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_PutHypervisorPropertyMappingsCommand");
var de_PutMaintenanceStartTimeCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_PutMaintenanceStartTimeCommand");
var de_StartVirtualMachinesMetadataSyncCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_StartVirtualMachinesMetadataSyncCommand");
var de_TagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_TagResourceCommand");
var de_TestHypervisorConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_TestHypervisorConfigurationCommand");
var de_UntagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UntagResourceCommand");
var de_UpdateGatewayInformationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateGatewayInformationCommand");
var de_UpdateGatewaySoftwareNowCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateGatewaySoftwareNowCommand");
var de_UpdateHypervisorCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateHypervisorCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await (0, import_core2.parseJsonErrorBody)(output.body, context)
  };
  const errorCode = (0, import_core2.loadRestJsonErrorCode)(output, parsedOutput.body);
  switch (errorCode) {
    case "ConflictException":
    case "com.amazonaws.backupgateway#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    case "InternalServerException":
    case "com.amazonaws.backupgateway#InternalServerException":
      throw await de_InternalServerExceptionRes(parsedOutput, context);
    case "ThrottlingException":
    case "com.amazonaws.backupgateway#ThrottlingException":
      throw await de_ThrottlingExceptionRes(parsedOutput, context);
    case "ValidationException":
    case "com.amazonaws.backupgateway#ValidationException":
      throw await de_ValidationExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.backupgateway#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    case "AccessDeniedException":
    case "com.amazonaws.backupgateway#AccessDeniedException":
      throw await de_AccessDeniedExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var de_AccessDeniedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new AccessDeniedException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_AccessDeniedExceptionRes");
var de_ConflictExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ConflictException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ConflictExceptionRes");
var de_InternalServerExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new InternalServerException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InternalServerExceptionRes");
var de_ResourceNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ResourceNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ResourceNotFoundExceptionRes");
var de_ThrottlingExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ThrottlingException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ThrottlingExceptionRes");
var de_ValidationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ValidationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ValidationExceptionRes");
var de_Gateway = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    GatewayArn: import_smithy_client.expectString,
    GatewayDisplayName: import_smithy_client.expectString,
    GatewayType: import_smithy_client.expectString,
    HypervisorId: import_smithy_client.expectString,
    LastSeenTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_)))
  });
}, "de_Gateway");
var de_GatewayDetails = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    GatewayArn: import_smithy_client.expectString,
    GatewayDisplayName: import_smithy_client.expectString,
    GatewayType: import_smithy_client.expectString,
    HypervisorId: import_smithy_client.expectString,
    LastSeenTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    MaintenanceStartTime: import_smithy_client._json,
    NextUpdateAvailabilityTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    VpcEndpoint: import_smithy_client.expectString
  });
}, "de_GatewayDetails");
var de_Gateways = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Gateway(entry, context);
  });
  return retVal;
}, "de_Gateways");
var de_GetGatewayOutput = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Gateway: (_) => de_GatewayDetails(_, context)
  });
}, "de_GetGatewayOutput");
var de_GetHypervisorOutput = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Hypervisor: (_) => de_HypervisorDetails(_, context)
  });
}, "de_GetHypervisorOutput");
var de_GetVirtualMachineOutput = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    VirtualMachine: (_) => de_VirtualMachineDetails(_, context)
  });
}, "de_GetVirtualMachineOutput");
var de_HypervisorDetails = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Host: import_smithy_client.expectString,
    HypervisorArn: import_smithy_client.expectString,
    KmsKeyArn: import_smithy_client.expectString,
    LastSuccessfulMetadataSyncTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    LatestMetadataSyncStatus: import_smithy_client.expectString,
    LatestMetadataSyncStatusMessage: import_smithy_client.expectString,
    LogGroupArn: import_smithy_client.expectString,
    Name: import_smithy_client.expectString,
    State: import_smithy_client.expectString
  });
}, "de_HypervisorDetails");
var de_ListGatewaysOutput = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Gateways: (_) => de_Gateways(_, context),
    NextToken: import_smithy_client.expectString
  });
}, "de_ListGatewaysOutput");
var de_ListVirtualMachinesOutput = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    NextToken: import_smithy_client.expectString,
    VirtualMachines: (_) => de_VirtualMachines(_, context)
  });
}, "de_ListVirtualMachinesOutput");
var de_VirtualMachine = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    HostName: import_smithy_client.expectString,
    HypervisorId: import_smithy_client.expectString,
    LastBackupDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Name: import_smithy_client.expectString,
    Path: import_smithy_client.expectString,
    ResourceArn: import_smithy_client.expectString
  });
}, "de_VirtualMachine");
var de_VirtualMachineDetails = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    HostName: import_smithy_client.expectString,
    HypervisorId: import_smithy_client.expectString,
    LastBackupDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Name: import_smithy_client.expectString,
    Path: import_smithy_client.expectString,
    ResourceArn: import_smithy_client.expectString,
    VmwareTags: import_smithy_client._json
  });
}, "de_VirtualMachineDetails");
var de_VirtualMachines = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_VirtualMachine(entry, context);
  });
  return retVal;
}, "de_VirtualMachines");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var throwDefaultError = (0, import_smithy_client.withBaseException)(BackupGatewayServiceException);
var buildHttpRpcRequest = /* @__PURE__ */ __name(async (context, headers, path, resolvedHostname, body) => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const contents = {
    protocol,
    hostname,
    port,
    method: "POST",
    path: basePath.endsWith("/") ? basePath.slice(0, -1) + path : basePath + path,
    headers
  };
  if (resolvedHostname !== void 0) {
    contents.hostname = resolvedHostname;
  }
  if (body !== void 0) {
    contents.body = body;
  }
  return new import_protocol_http.HttpRequest(contents);
}, "buildHttpRpcRequest");
function sharedHeaders(operation) {
  return {
    "content-type": "application/x-amz-json-1.0",
    "x-amz-target": `BackupOnPremises_v20210101.${operation}`
  };
}
__name(sharedHeaders, "sharedHeaders");

// src/commands/AssociateGatewayToServerCommand.ts
var _AssociateGatewayToServerCommand = class _AssociateGatewayToServerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackupOnPremises_v20210101", "AssociateGatewayToServer", {}).n("BackupGatewayClient", "AssociateGatewayToServerCommand").f(void 0, void 0).ser(se_AssociateGatewayToServerCommand).de(de_AssociateGatewayToServerCommand).build() {
};
__name(_AssociateGatewayToServerCommand, "AssociateGatewayToServerCommand");
var AssociateGatewayToServerCommand = _AssociateGatewayToServerCommand;

// src/commands/CreateGatewayCommand.ts




var _CreateGatewayCommand = class _CreateGatewayCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackupOnPremises_v20210101", "CreateGateway", {}).n("BackupGatewayClient", "CreateGatewayCommand").f(void 0, void 0).ser(se_CreateGatewayCommand).de(de_CreateGatewayCommand).build() {
};
__name(_CreateGatewayCommand, "CreateGatewayCommand");
var CreateGatewayCommand = _CreateGatewayCommand;

// src/commands/DeleteGatewayCommand.ts




var _DeleteGatewayCommand = class _DeleteGatewayCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackupOnPremises_v20210101", "DeleteGateway", {}).n("BackupGatewayClient", "DeleteGatewayCommand").f(void 0, void 0).ser(se_DeleteGatewayCommand).de(de_DeleteGatewayCommand).build() {
};
__name(_DeleteGatewayCommand, "DeleteGatewayCommand");
var DeleteGatewayCommand = _DeleteGatewayCommand;

// src/commands/DeleteHypervisorCommand.ts




var _DeleteHypervisorCommand = class _DeleteHypervisorCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackupOnPremises_v20210101", "DeleteHypervisor", {}).n("BackupGatewayClient", "DeleteHypervisorCommand").f(void 0, void 0).ser(se_DeleteHypervisorCommand).de(de_DeleteHypervisorCommand).build() {
};
__name(_DeleteHypervisorCommand, "DeleteHypervisorCommand");
var DeleteHypervisorCommand = _DeleteHypervisorCommand;

// src/commands/DisassociateGatewayFromServerCommand.ts




var _DisassociateGatewayFromServerCommand = class _DisassociateGatewayFromServerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackupOnPremises_v20210101", "DisassociateGatewayFromServer", {}).n("BackupGatewayClient", "DisassociateGatewayFromServerCommand").f(void 0, void 0).ser(se_DisassociateGatewayFromServerCommand).de(de_DisassociateGatewayFromServerCommand).build() {
};
__name(_DisassociateGatewayFromServerCommand, "DisassociateGatewayFromServerCommand");
var DisassociateGatewayFromServerCommand = _DisassociateGatewayFromServerCommand;

// src/commands/GetBandwidthRateLimitScheduleCommand.ts




var _GetBandwidthRateLimitScheduleCommand = class _GetBandwidthRateLimitScheduleCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackupOnPremises_v20210101", "GetBandwidthRateLimitSchedule", {}).n("BackupGatewayClient", "GetBandwidthRateLimitScheduleCommand").f(void 0, void 0).ser(se_GetBandwidthRateLimitScheduleCommand).de(de_GetBandwidthRateLimitScheduleCommand).build() {
};
__name(_GetBandwidthRateLimitScheduleCommand, "GetBandwidthRateLimitScheduleCommand");
var GetBandwidthRateLimitScheduleCommand = _GetBandwidthRateLimitScheduleCommand;

// src/commands/GetGatewayCommand.ts




var _GetGatewayCommand = class _GetGatewayCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackupOnPremises_v20210101", "GetGateway", {}).n("BackupGatewayClient", "GetGatewayCommand").f(void 0, void 0).ser(se_GetGatewayCommand).de(de_GetGatewayCommand).build() {
};
__name(_GetGatewayCommand, "GetGatewayCommand");
var GetGatewayCommand = _GetGatewayCommand;

// src/commands/GetHypervisorCommand.ts




var _GetHypervisorCommand = class _GetHypervisorCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackupOnPremises_v20210101", "GetHypervisor", {}).n("BackupGatewayClient", "GetHypervisorCommand").f(void 0, void 0).ser(se_GetHypervisorCommand).de(de_GetHypervisorCommand).build() {
};
__name(_GetHypervisorCommand, "GetHypervisorCommand");
var GetHypervisorCommand = _GetHypervisorCommand;

// src/commands/GetHypervisorPropertyMappingsCommand.ts




var _GetHypervisorPropertyMappingsCommand = class _GetHypervisorPropertyMappingsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackupOnPremises_v20210101", "GetHypervisorPropertyMappings", {}).n("BackupGatewayClient", "GetHypervisorPropertyMappingsCommand").f(void 0, void 0).ser(se_GetHypervisorPropertyMappingsCommand).de(de_GetHypervisorPropertyMappingsCommand).build() {
};
__name(_GetHypervisorPropertyMappingsCommand, "GetHypervisorPropertyMappingsCommand");
var GetHypervisorPropertyMappingsCommand = _GetHypervisorPropertyMappingsCommand;

// src/commands/GetVirtualMachineCommand.ts




var _GetVirtualMachineCommand = class _GetVirtualMachineCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackupOnPremises_v20210101", "GetVirtualMachine", {}).n("BackupGatewayClient", "GetVirtualMachineCommand").f(void 0, void 0).ser(se_GetVirtualMachineCommand).de(de_GetVirtualMachineCommand).build() {
};
__name(_GetVirtualMachineCommand, "GetVirtualMachineCommand");
var GetVirtualMachineCommand = _GetVirtualMachineCommand;

// src/commands/ImportHypervisorConfigurationCommand.ts




var _ImportHypervisorConfigurationCommand = class _ImportHypervisorConfigurationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackupOnPremises_v20210101", "ImportHypervisorConfiguration", {}).n("BackupGatewayClient", "ImportHypervisorConfigurationCommand").f(ImportHypervisorConfigurationInputFilterSensitiveLog, void 0).ser(se_ImportHypervisorConfigurationCommand).de(de_ImportHypervisorConfigurationCommand).build() {
};
__name(_ImportHypervisorConfigurationCommand, "ImportHypervisorConfigurationCommand");
var ImportHypervisorConfigurationCommand = _ImportHypervisorConfigurationCommand;

// src/commands/ListGatewaysCommand.ts




var _ListGatewaysCommand = class _ListGatewaysCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackupOnPremises_v20210101", "ListGateways", {}).n("BackupGatewayClient", "ListGatewaysCommand").f(void 0, void 0).ser(se_ListGatewaysCommand).de(de_ListGatewaysCommand).build() {
};
__name(_ListGatewaysCommand, "ListGatewaysCommand");
var ListGatewaysCommand = _ListGatewaysCommand;

// src/commands/ListHypervisorsCommand.ts




var _ListHypervisorsCommand = class _ListHypervisorsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackupOnPremises_v20210101", "ListHypervisors", {}).n("BackupGatewayClient", "ListHypervisorsCommand").f(void 0, void 0).ser(se_ListHypervisorsCommand).de(de_ListHypervisorsCommand).build() {
};
__name(_ListHypervisorsCommand, "ListHypervisorsCommand");
var ListHypervisorsCommand = _ListHypervisorsCommand;

// src/commands/ListTagsForResourceCommand.ts




var _ListTagsForResourceCommand = class _ListTagsForResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackupOnPremises_v20210101", "ListTagsForResource", {}).n("BackupGatewayClient", "ListTagsForResourceCommand").f(void 0, void 0).ser(se_ListTagsForResourceCommand).de(de_ListTagsForResourceCommand).build() {
};
__name(_ListTagsForResourceCommand, "ListTagsForResourceCommand");
var ListTagsForResourceCommand = _ListTagsForResourceCommand;

// src/commands/ListVirtualMachinesCommand.ts




var _ListVirtualMachinesCommand = class _ListVirtualMachinesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackupOnPremises_v20210101", "ListVirtualMachines", {}).n("BackupGatewayClient", "ListVirtualMachinesCommand").f(void 0, void 0).ser(se_ListVirtualMachinesCommand).de(de_ListVirtualMachinesCommand).build() {
};
__name(_ListVirtualMachinesCommand, "ListVirtualMachinesCommand");
var ListVirtualMachinesCommand = _ListVirtualMachinesCommand;

// src/commands/PutBandwidthRateLimitScheduleCommand.ts




var _PutBandwidthRateLimitScheduleCommand = class _PutBandwidthRateLimitScheduleCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackupOnPremises_v20210101", "PutBandwidthRateLimitSchedule", {}).n("BackupGatewayClient", "PutBandwidthRateLimitScheduleCommand").f(void 0, void 0).ser(se_PutBandwidthRateLimitScheduleCommand).de(de_PutBandwidthRateLimitScheduleCommand).build() {
};
__name(_PutBandwidthRateLimitScheduleCommand, "PutBandwidthRateLimitScheduleCommand");
var PutBandwidthRateLimitScheduleCommand = _PutBandwidthRateLimitScheduleCommand;

// src/commands/PutHypervisorPropertyMappingsCommand.ts




var _PutHypervisorPropertyMappingsCommand = class _PutHypervisorPropertyMappingsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackupOnPremises_v20210101", "PutHypervisorPropertyMappings", {}).n("BackupGatewayClient", "PutHypervisorPropertyMappingsCommand").f(void 0, void 0).ser(se_PutHypervisorPropertyMappingsCommand).de(de_PutHypervisorPropertyMappingsCommand).build() {
};
__name(_PutHypervisorPropertyMappingsCommand, "PutHypervisorPropertyMappingsCommand");
var PutHypervisorPropertyMappingsCommand = _PutHypervisorPropertyMappingsCommand;

// src/commands/PutMaintenanceStartTimeCommand.ts




var _PutMaintenanceStartTimeCommand = class _PutMaintenanceStartTimeCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackupOnPremises_v20210101", "PutMaintenanceStartTime", {}).n("BackupGatewayClient", "PutMaintenanceStartTimeCommand").f(void 0, void 0).ser(se_PutMaintenanceStartTimeCommand).de(de_PutMaintenanceStartTimeCommand).build() {
};
__name(_PutMaintenanceStartTimeCommand, "PutMaintenanceStartTimeCommand");
var PutMaintenanceStartTimeCommand = _PutMaintenanceStartTimeCommand;

// src/commands/StartVirtualMachinesMetadataSyncCommand.ts




var _StartVirtualMachinesMetadataSyncCommand = class _StartVirtualMachinesMetadataSyncCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackupOnPremises_v20210101", "StartVirtualMachinesMetadataSync", {}).n("BackupGatewayClient", "StartVirtualMachinesMetadataSyncCommand").f(void 0, void 0).ser(se_StartVirtualMachinesMetadataSyncCommand).de(de_StartVirtualMachinesMetadataSyncCommand).build() {
};
__name(_StartVirtualMachinesMetadataSyncCommand, "StartVirtualMachinesMetadataSyncCommand");
var StartVirtualMachinesMetadataSyncCommand = _StartVirtualMachinesMetadataSyncCommand;

// src/commands/TagResourceCommand.ts




var _TagResourceCommand = class _TagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackupOnPremises_v20210101", "TagResource", {}).n("BackupGatewayClient", "TagResourceCommand").f(void 0, void 0).ser(se_TagResourceCommand).de(de_TagResourceCommand).build() {
};
__name(_TagResourceCommand, "TagResourceCommand");
var TagResourceCommand = _TagResourceCommand;

// src/commands/TestHypervisorConfigurationCommand.ts




var _TestHypervisorConfigurationCommand = class _TestHypervisorConfigurationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackupOnPremises_v20210101", "TestHypervisorConfiguration", {}).n("BackupGatewayClient", "TestHypervisorConfigurationCommand").f(TestHypervisorConfigurationInputFilterSensitiveLog, void 0).ser(se_TestHypervisorConfigurationCommand).de(de_TestHypervisorConfigurationCommand).build() {
};
__name(_TestHypervisorConfigurationCommand, "TestHypervisorConfigurationCommand");
var TestHypervisorConfigurationCommand = _TestHypervisorConfigurationCommand;

// src/commands/UntagResourceCommand.ts




var _UntagResourceCommand = class _UntagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackupOnPremises_v20210101", "UntagResource", {}).n("BackupGatewayClient", "UntagResourceCommand").f(void 0, void 0).ser(se_UntagResourceCommand).de(de_UntagResourceCommand).build() {
};
__name(_UntagResourceCommand, "UntagResourceCommand");
var UntagResourceCommand = _UntagResourceCommand;

// src/commands/UpdateGatewayInformationCommand.ts




var _UpdateGatewayInformationCommand = class _UpdateGatewayInformationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackupOnPremises_v20210101", "UpdateGatewayInformation", {}).n("BackupGatewayClient", "UpdateGatewayInformationCommand").f(void 0, void 0).ser(se_UpdateGatewayInformationCommand).de(de_UpdateGatewayInformationCommand).build() {
};
__name(_UpdateGatewayInformationCommand, "UpdateGatewayInformationCommand");
var UpdateGatewayInformationCommand = _UpdateGatewayInformationCommand;

// src/commands/UpdateGatewaySoftwareNowCommand.ts




var _UpdateGatewaySoftwareNowCommand = class _UpdateGatewaySoftwareNowCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackupOnPremises_v20210101", "UpdateGatewaySoftwareNow", {}).n("BackupGatewayClient", "UpdateGatewaySoftwareNowCommand").f(void 0, void 0).ser(se_UpdateGatewaySoftwareNowCommand).de(de_UpdateGatewaySoftwareNowCommand).build() {
};
__name(_UpdateGatewaySoftwareNowCommand, "UpdateGatewaySoftwareNowCommand");
var UpdateGatewaySoftwareNowCommand = _UpdateGatewaySoftwareNowCommand;

// src/commands/UpdateHypervisorCommand.ts




var _UpdateHypervisorCommand = class _UpdateHypervisorCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("BackupOnPremises_v20210101", "UpdateHypervisor", {}).n("BackupGatewayClient", "UpdateHypervisorCommand").f(UpdateHypervisorInputFilterSensitiveLog, void 0).ser(se_UpdateHypervisorCommand).de(de_UpdateHypervisorCommand).build() {
};
__name(_UpdateHypervisorCommand, "UpdateHypervisorCommand");
var UpdateHypervisorCommand = _UpdateHypervisorCommand;

// src/BackupGateway.ts
var commands = {
  AssociateGatewayToServerCommand,
  CreateGatewayCommand,
  DeleteGatewayCommand,
  DeleteHypervisorCommand,
  DisassociateGatewayFromServerCommand,
  GetBandwidthRateLimitScheduleCommand,
  GetGatewayCommand,
  GetHypervisorCommand,
  GetHypervisorPropertyMappingsCommand,
  GetVirtualMachineCommand,
  ImportHypervisorConfigurationCommand,
  ListGatewaysCommand,
  ListHypervisorsCommand,
  ListTagsForResourceCommand,
  ListVirtualMachinesCommand,
  PutBandwidthRateLimitScheduleCommand,
  PutHypervisorPropertyMappingsCommand,
  PutMaintenanceStartTimeCommand,
  StartVirtualMachinesMetadataSyncCommand,
  TagResourceCommand,
  TestHypervisorConfigurationCommand,
  UntagResourceCommand,
  UpdateGatewayInformationCommand,
  UpdateGatewaySoftwareNowCommand,
  UpdateHypervisorCommand
};
var _BackupGateway = class _BackupGateway extends BackupGatewayClient {
};
__name(_BackupGateway, "BackupGateway");
var BackupGateway = _BackupGateway;
(0, import_smithy_client.createAggregatedClient)(commands, BackupGateway);

// src/pagination/ListGatewaysPaginator.ts

var paginateListGateways = (0, import_core.createPaginator)(BackupGatewayClient, ListGatewaysCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListHypervisorsPaginator.ts

var paginateListHypervisors = (0, import_core.createPaginator)(BackupGatewayClient, ListHypervisorsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListVirtualMachinesPaginator.ts

var paginateListVirtualMachines = (0, import_core.createPaginator)(BackupGatewayClient, ListVirtualMachinesCommand, "NextToken", "NextToken", "MaxResults");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  BackupGatewayServiceException,
  __Client,
  BackupGatewayClient,
  BackupGateway,
  $Command,
  AssociateGatewayToServerCommand,
  CreateGatewayCommand,
  DeleteGatewayCommand,
  DeleteHypervisorCommand,
  DisassociateGatewayFromServerCommand,
  GetBandwidthRateLimitScheduleCommand,
  GetGatewayCommand,
  GetHypervisorCommand,
  GetHypervisorPropertyMappingsCommand,
  GetVirtualMachineCommand,
  ImportHypervisorConfigurationCommand,
  ListGatewaysCommand,
  ListHypervisorsCommand,
  ListTagsForResourceCommand,
  ListVirtualMachinesCommand,
  PutBandwidthRateLimitScheduleCommand,
  PutHypervisorPropertyMappingsCommand,
  PutMaintenanceStartTimeCommand,
  StartVirtualMachinesMetadataSyncCommand,
  TagResourceCommand,
  TestHypervisorConfigurationCommand,
  UntagResourceCommand,
  UpdateGatewayInformationCommand,
  UpdateGatewaySoftwareNowCommand,
  UpdateHypervisorCommand,
  paginateListGateways,
  paginateListHypervisors,
  paginateListVirtualMachines,
  AccessDeniedException,
  ConflictException,
  InternalServerException,
  ThrottlingException,
  ValidationException,
  ResourceNotFoundException,
  GatewayType,
  SyncMetadataStatus,
  HypervisorState,
  TestHypervisorConfigurationInputFilterSensitiveLog,
  ImportHypervisorConfigurationInputFilterSensitiveLog,
  UpdateHypervisorInputFilterSensitiveLog
});

