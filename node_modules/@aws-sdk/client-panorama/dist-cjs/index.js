"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  AccessDeniedException: () => AccessDeniedException,
  ApplicationInstanceHealthStatus: () => ApplicationInstanceHealthStatus,
  ApplicationInstanceStatus: () => ApplicationInstanceStatus,
  ConflictException: () => ConflictException,
  ConnectionType: () => ConnectionType,
  CreateApplicationInstanceCommand: () => CreateApplicationInstanceCommand,
  CreateJobForDevicesCommand: () => CreateJobForDevicesCommand,
  CreateNodeFromTemplateJobCommand: () => CreateNodeFromTemplateJobCommand,
  CreateNodeFromTemplateJobRequestFilterSensitiveLog: () => CreateNodeFromTemplateJobRequestFilterSensitiveLog,
  CreatePackageCommand: () => CreatePackageCommand,
  CreatePackageImportJobCommand: () => CreatePackageImportJobCommand,
  DeleteDeviceCommand: () => DeleteDeviceCommand,
  DeletePackageCommand: () => DeletePackageCommand,
  DeregisterPackageVersionCommand: () => DeregisterPackageVersionCommand,
  DescribeApplicationInstanceCommand: () => DescribeApplicationInstanceCommand,
  DescribeApplicationInstanceDetailsCommand: () => DescribeApplicationInstanceDetailsCommand,
  DescribeDeviceCommand: () => DescribeDeviceCommand,
  DescribeDeviceJobCommand: () => DescribeDeviceJobCommand,
  DescribeNodeCommand: () => DescribeNodeCommand,
  DescribeNodeFromTemplateJobCommand: () => DescribeNodeFromTemplateJobCommand,
  DescribeNodeFromTemplateJobResponseFilterSensitiveLog: () => DescribeNodeFromTemplateJobResponseFilterSensitiveLog,
  DescribePackageCommand: () => DescribePackageCommand,
  DescribePackageImportJobCommand: () => DescribePackageImportJobCommand,
  DescribePackageVersionCommand: () => DescribePackageVersionCommand,
  DesiredState: () => DesiredState,
  DeviceAggregatedStatus: () => DeviceAggregatedStatus,
  DeviceBrand: () => DeviceBrand,
  DeviceConnectionStatus: () => DeviceConnectionStatus,
  DeviceReportedStatus: () => DeviceReportedStatus,
  DeviceStatus: () => DeviceStatus,
  DeviceType: () => DeviceType,
  InternalServerException: () => InternalServerException,
  JobResourceType: () => JobResourceType,
  JobType: () => JobType,
  ListApplicationInstanceDependenciesCommand: () => ListApplicationInstanceDependenciesCommand,
  ListApplicationInstanceNodeInstancesCommand: () => ListApplicationInstanceNodeInstancesCommand,
  ListApplicationInstancesCommand: () => ListApplicationInstancesCommand,
  ListDevicesCommand: () => ListDevicesCommand,
  ListDevicesJobsCommand: () => ListDevicesJobsCommand,
  ListDevicesSortBy: () => ListDevicesSortBy,
  ListNodeFromTemplateJobsCommand: () => ListNodeFromTemplateJobsCommand,
  ListNodesCommand: () => ListNodesCommand,
  ListPackageImportJobsCommand: () => ListPackageImportJobsCommand,
  ListPackagesCommand: () => ListPackagesCommand,
  ListTagsForResourceCommand: () => ListTagsForResourceCommand,
  ManifestOverridesPayload: () => ManifestOverridesPayload,
  ManifestPayload: () => ManifestPayload,
  NetworkConnectionStatus: () => NetworkConnectionStatus,
  NodeCategory: () => NodeCategory,
  NodeFromTemplateJobStatus: () => NodeFromTemplateJobStatus,
  NodeInstanceStatus: () => NodeInstanceStatus,
  NodeSignalValue: () => NodeSignalValue,
  PackageImportJobStatus: () => PackageImportJobStatus,
  PackageImportJobType: () => PackageImportJobType,
  PackageVersionStatus: () => PackageVersionStatus,
  Panorama: () => Panorama,
  PanoramaClient: () => PanoramaClient,
  PanoramaServiceException: () => PanoramaServiceException,
  PortType: () => PortType,
  ProvisionDeviceCommand: () => ProvisionDeviceCommand,
  RegisterPackageVersionCommand: () => RegisterPackageVersionCommand,
  RemoveApplicationInstanceCommand: () => RemoveApplicationInstanceCommand,
  ResourceNotFoundException: () => ResourceNotFoundException,
  ServiceQuotaExceededException: () => ServiceQuotaExceededException,
  SignalApplicationInstanceNodeInstancesCommand: () => SignalApplicationInstanceNodeInstancesCommand,
  SortOrder: () => SortOrder,
  StatusFilter: () => StatusFilter,
  TagResourceCommand: () => TagResourceCommand,
  TemplateType: () => TemplateType,
  UntagResourceCommand: () => UntagResourceCommand,
  UpdateDeviceMetadataCommand: () => UpdateDeviceMetadataCommand,
  UpdateProgress: () => UpdateProgress,
  ValidationException: () => ValidationException,
  ValidationExceptionReason: () => ValidationExceptionReason,
  __Client: () => import_smithy_client.Client,
  paginateListApplicationInstanceDependencies: () => paginateListApplicationInstanceDependencies,
  paginateListApplicationInstanceNodeInstances: () => paginateListApplicationInstanceNodeInstances,
  paginateListApplicationInstances: () => paginateListApplicationInstances,
  paginateListDevices: () => paginateListDevices,
  paginateListDevicesJobs: () => paginateListDevicesJobs,
  paginateListNodeFromTemplateJobs: () => paginateListNodeFromTemplateJobs,
  paginateListNodes: () => paginateListNodes,
  paginateListPackageImportJobs: () => paginateListPackageImportJobs,
  paginateListPackages: () => paginateListPackages
});
module.exports = __toCommonJS(src_exports);

// src/PanoramaClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return {
    ...options,
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "panorama"
  };
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/PanoramaClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var asPartial = /* @__PURE__ */ __name((t) => t, "asPartial");
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = {
    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),
    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
  };
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return {
    ...runtimeConfig,
    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
  };
}, "resolveRuntimeExtensions");

// src/PanoramaClient.ts
var _PanoramaClient = class _PanoramaClient extends import_smithy_client.Client {
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_config_resolver.resolveRegionConfig)(_config_1);
    const _config_3 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_2);
    const _config_4 = (0, import_middleware_retry.resolveRetryConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, (configuration == null ? void 0 : configuration.extensions) || []);
    super(_config_8);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),
        identityProviderConfigProvider: this.getIdentityProviderConfigProvider()
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
  getDefaultHttpAuthSchemeParametersProvider() {
    return import_httpAuthSchemeProvider.defaultPanoramaHttpAuthSchemeParametersProvider;
  }
  getIdentityProviderConfigProvider() {
    return async (config) => new import_core.DefaultIdentityProviderConfig({
      "aws.auth#sigv4": config.credentials
    });
  }
};
__name(_PanoramaClient, "PanoramaClient");
var PanoramaClient = _PanoramaClient;

// src/Panorama.ts


// src/commands/CreateApplicationInstanceCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");

var import_types = require("@smithy/types");

// src/protocols/Aws_restJson1.ts
var import_core2 = require("@aws-sdk/core");



// src/models/models_0.ts


// src/models/PanoramaServiceException.ts

var _PanoramaServiceException = class _PanoramaServiceException extends import_smithy_client.ServiceException {
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _PanoramaServiceException.prototype);
  }
};
__name(_PanoramaServiceException, "PanoramaServiceException");
var PanoramaServiceException = _PanoramaServiceException;

// src/models/models_0.ts
var _AccessDeniedException = class _AccessDeniedException extends PanoramaServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "AccessDeniedException",
      $fault: "client",
      ...opts
    });
    this.name = "AccessDeniedException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _AccessDeniedException.prototype);
    this.Message = opts.Message;
  }
};
__name(_AccessDeniedException, "AccessDeniedException");
var AccessDeniedException = _AccessDeniedException;
var ApplicationInstanceHealthStatus = {
  ERROR: "ERROR",
  NOT_AVAILABLE: "NOT_AVAILABLE",
  RUNNING: "RUNNING"
};
var DesiredState = {
  REMOVED: "REMOVED",
  RUNNING: "RUNNING",
  STOPPED: "STOPPED"
};
var DeviceReportedStatus = {
  INSTALL_ERROR: "INSTALL_ERROR",
  INSTALL_IN_PROGRESS: "INSTALL_IN_PROGRESS",
  LAUNCHED: "LAUNCHED",
  LAUNCH_ERROR: "LAUNCH_ERROR",
  REMOVAL_FAILED: "REMOVAL_FAILED",
  REMOVAL_IN_PROGRESS: "REMOVAL_IN_PROGRESS",
  RUNNING: "RUNNING",
  STARTING: "STARTING",
  STOPPED: "STOPPED",
  STOPPING: "STOPPING",
  STOP_ERROR: "STOP_ERROR"
};
var ApplicationInstanceStatus = {
  DEPLOYMENT_ERROR: "DEPLOYMENT_ERROR",
  DEPLOYMENT_FAILED: "DEPLOYMENT_FAILED",
  DEPLOYMENT_IN_PROGRESS: "DEPLOYMENT_IN_PROGRESS",
  DEPLOYMENT_PENDING: "DEPLOYMENT_PENDING",
  DEPLOYMENT_REQUESTED: "DEPLOYMENT_REQUESTED",
  DEPLOYMENT_SUCCEEDED: "DEPLOYMENT_SUCCEEDED",
  REMOVAL_FAILED: "REMOVAL_FAILED",
  REMOVAL_IN_PROGRESS: "REMOVAL_IN_PROGRESS",
  REMOVAL_PENDING: "REMOVAL_PENDING",
  REMOVAL_REQUESTED: "REMOVAL_REQUESTED",
  REMOVAL_SUCCEEDED: "REMOVAL_SUCCEEDED"
};
var _ConflictException = class _ConflictException extends PanoramaServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ConflictException",
      $fault: "client",
      ...opts
    });
    this.name = "ConflictException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ConflictException.prototype);
    this.Message = opts.Message;
    this.ResourceId = opts.ResourceId;
    this.ResourceType = opts.ResourceType;
    this.ErrorId = opts.ErrorId;
    this.ErrorArguments = opts.ErrorArguments;
  }
};
__name(_ConflictException, "ConflictException");
var ConflictException = _ConflictException;
var ConnectionType = {
  DHCP: "DHCP",
  STATIC_IP: "STATIC_IP"
};
var ManifestOverridesPayload;
((ManifestOverridesPayload3) => {
  ManifestOverridesPayload3.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.PayloadData !== void 0)
      return visitor.PayloadData(value.PayloadData);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(ManifestOverridesPayload || (ManifestOverridesPayload = {}));
var ManifestPayload;
((ManifestPayload3) => {
  ManifestPayload3.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.PayloadData !== void 0)
      return visitor.PayloadData(value.PayloadData);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(ManifestPayload || (ManifestPayload = {}));
var _InternalServerException = class _InternalServerException extends PanoramaServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InternalServerException",
      $fault: "server",
      ...opts
    });
    this.name = "InternalServerException";
    this.$fault = "server";
    Object.setPrototypeOf(this, _InternalServerException.prototype);
    this.Message = opts.Message;
    this.RetryAfterSeconds = opts.RetryAfterSeconds;
  }
};
__name(_InternalServerException, "InternalServerException");
var InternalServerException = _InternalServerException;
var _ServiceQuotaExceededException = class _ServiceQuotaExceededException extends PanoramaServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ServiceQuotaExceededException",
      $fault: "client",
      ...opts
    });
    this.name = "ServiceQuotaExceededException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ServiceQuotaExceededException.prototype);
    this.Message = opts.Message;
    this.ResourceId = opts.ResourceId;
    this.ResourceType = opts.ResourceType;
    this.QuotaCode = opts.QuotaCode;
    this.ServiceCode = opts.ServiceCode;
  }
};
__name(_ServiceQuotaExceededException, "ServiceQuotaExceededException");
var ServiceQuotaExceededException = _ServiceQuotaExceededException;
var ValidationExceptionReason = {
  CANNOT_PARSE: "CANNOT_PARSE",
  FIELD_VALIDATION_FAILED: "FIELD_VALIDATION_FAILED",
  OTHER: "OTHER",
  UNKNOWN_OPERATION: "UNKNOWN_OPERATION"
};
var _ValidationException = class _ValidationException extends PanoramaServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ValidationException",
      $fault: "client",
      ...opts
    });
    this.name = "ValidationException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ValidationException.prototype);
    this.Message = opts.Message;
    this.Reason = opts.Reason;
    this.ErrorId = opts.ErrorId;
    this.ErrorArguments = opts.ErrorArguments;
    this.Fields = opts.Fields;
  }
};
__name(_ValidationException, "ValidationException");
var ValidationException = _ValidationException;
var JobType = {
  OTA: "OTA",
  REBOOT: "REBOOT"
};
var _ResourceNotFoundException = class _ResourceNotFoundException extends PanoramaServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceNotFoundException",
      $fault: "client",
      ...opts
    });
    this.name = "ResourceNotFoundException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourceNotFoundException.prototype);
    this.Message = opts.Message;
    this.ResourceId = opts.ResourceId;
    this.ResourceType = opts.ResourceType;
  }
};
__name(_ResourceNotFoundException, "ResourceNotFoundException");
var ResourceNotFoundException = _ResourceNotFoundException;
var JobResourceType = {
  PACKAGE: "PACKAGE"
};
var TemplateType = {
  RTSP_CAMERA_STREAM: "RTSP_CAMERA_STREAM"
};
var PackageImportJobType = {
  MARKETPLACE_NODE_PACKAGE_VERSION: "MARKETPLACE_NODE_PACKAGE_VERSION",
  NODE_PACKAGE_VERSION: "NODE_PACKAGE_VERSION"
};
var DeviceBrand = {
  AWS_PANORAMA: "AWS_PANORAMA",
  LENOVO: "LENOVO"
};
var NetworkConnectionStatus = {
  CONNECTED: "CONNECTED",
  CONNECTING: "CONNECTING",
  NOT_CONNECTED: "NOT_CONNECTED"
};
var DeviceAggregatedStatus = {
  AWAITING_PROVISIONING: "AWAITING_PROVISIONING",
  DELETING: "DELETING",
  ERROR: "ERROR",
  FAILED: "FAILED",
  LEASE_EXPIRED: "LEASE_EXPIRED",
  OFFLINE: "OFFLINE",
  ONLINE: "ONLINE",
  PENDING: "PENDING",
  REBOOTING: "REBOOTING",
  UPDATE_NEEDED: "UPDATE_NEEDED"
};
var DeviceConnectionStatus = {
  AWAITING_CREDENTIALS: "AWAITING_CREDENTIALS",
  ERROR: "ERROR",
  NOT_AVAILABLE: "NOT_AVAILABLE",
  OFFLINE: "OFFLINE",
  ONLINE: "ONLINE"
};
var UpdateProgress = {
  COMPLETED: "COMPLETED",
  DOWNLOADING: "DOWNLOADING",
  FAILED: "FAILED",
  IN_PROGRESS: "IN_PROGRESS",
  PENDING: "PENDING",
  REBOOTING: "REBOOTING",
  VERIFYING: "VERIFYING"
};
var DeviceStatus = {
  AWAITING_PROVISIONING: "AWAITING_PROVISIONING",
  DELETING: "DELETING",
  ERROR: "ERROR",
  FAILED: "FAILED",
  PENDING: "PENDING",
  SUCCEEDED: "SUCCEEDED"
};
var DeviceType = {
  PANORAMA_APPLIANCE: "PANORAMA_APPLIANCE",
  PANORAMA_APPLIANCE_DEVELOPER_KIT: "PANORAMA_APPLIANCE_DEVELOPER_KIT"
};
var NodeCategory = {
  BUSINESS_LOGIC: "BUSINESS_LOGIC",
  MEDIA_SINK: "MEDIA_SINK",
  MEDIA_SOURCE: "MEDIA_SOURCE",
  ML_MODEL: "ML_MODEL"
};
var PortType = {
  BOOLEAN: "BOOLEAN",
  FLOAT32: "FLOAT32",
  INT32: "INT32",
  MEDIA: "MEDIA",
  STRING: "STRING"
};
var NodeFromTemplateJobStatus = {
  FAILED: "FAILED",
  PENDING: "PENDING",
  SUCCEEDED: "SUCCEEDED"
};
var PackageImportJobStatus = {
  FAILED: "FAILED",
  PENDING: "PENDING",
  SUCCEEDED: "SUCCEEDED"
};
var PackageVersionStatus = {
  DELETING: "DELETING",
  FAILED: "FAILED",
  REGISTER_COMPLETED: "REGISTER_COMPLETED",
  REGISTER_PENDING: "REGISTER_PENDING"
};
var NodeInstanceStatus = {
  ERROR: "ERROR",
  NOT_AVAILABLE: "NOT_AVAILABLE",
  PAUSED: "PAUSED",
  RUNNING: "RUNNING"
};
var StatusFilter = {
  DEPLOYMENT_ERROR: "DEPLOYMENT_ERROR",
  DEPLOYMENT_FAILED: "DEPLOYMENT_FAILED",
  DEPLOYMENT_SUCCEEDED: "DEPLOYMENT_SUCCEEDED",
  PROCESSING_DEPLOYMENT: "PROCESSING_DEPLOYMENT",
  PROCESSING_REMOVAL: "PROCESSING_REMOVAL",
  REMOVAL_FAILED: "REMOVAL_FAILED",
  REMOVAL_SUCCEEDED: "REMOVAL_SUCCEEDED"
};
var ListDevicesSortBy = {
  CREATED_TIME: "CREATED_TIME",
  DEVICE_AGGREGATED_STATUS: "DEVICE_AGGREGATED_STATUS",
  DEVICE_ID: "DEVICE_ID",
  NAME: "NAME"
};
var SortOrder = {
  ASCENDING: "ASCENDING",
  DESCENDING: "DESCENDING"
};
var NodeSignalValue = {
  PAUSE: "PAUSE",
  RESUME: "RESUME"
};
var CreateNodeFromTemplateJobRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.TemplateParameters && { TemplateParameters: import_smithy_client.SENSITIVE_STRING }
}), "CreateNodeFromTemplateJobRequestFilterSensitiveLog");
var DescribeNodeFromTemplateJobResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.TemplateParameters && { TemplateParameters: import_smithy_client.SENSITIVE_STRING }
}), "DescribeNodeFromTemplateJobResponseFilterSensitiveLog");

// src/protocols/Aws_restJson1.ts
var se_CreateApplicationInstanceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/application-instances");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ApplicationInstanceIdToReplace: [],
      DefaultRuntimeContextDevice: [],
      Description: [],
      ManifestOverridesPayload: (_) => (0, import_smithy_client._json)(_),
      ManifestPayload: (_) => (0, import_smithy_client._json)(_),
      Name: [],
      RuntimeRoleArn: [],
      Tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateApplicationInstanceCommand");
var se_CreateJobForDevicesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/jobs");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      DeviceIds: (_) => (0, import_smithy_client._json)(_),
      DeviceJobConfig: (_) => (0, import_smithy_client._json)(_),
      JobType: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateJobForDevicesCommand");
var se_CreateNodeFromTemplateJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/packages/template-job");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      JobTags: (_) => (0, import_smithy_client._json)(_),
      NodeDescription: [],
      NodeName: [],
      OutputPackageName: [],
      OutputPackageVersion: [],
      TemplateParameters: (_) => (0, import_smithy_client._json)(_),
      TemplateType: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateNodeFromTemplateJobCommand");
var se_CreatePackageCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/packages");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      PackageName: [],
      Tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreatePackageCommand");
var se_CreatePackageImportJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/packages/import-jobs");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ClientToken: [],
      InputConfig: (_) => (0, import_smithy_client._json)(_),
      JobTags: (_) => (0, import_smithy_client._json)(_),
      JobType: [],
      OutputConfig: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreatePackageImportJobCommand");
var se_DeleteDeviceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/devices/{DeviceId}");
  b.p("DeviceId", () => input.DeviceId, "{DeviceId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteDeviceCommand");
var se_DeletePackageCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/packages/{PackageId}");
  b.p("PackageId", () => input.PackageId, "{PackageId}", false);
  const query = (0, import_smithy_client.map)({
    [_FD]: [() => input.ForceDelete !== void 0, () => input[_FD].toString()]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_DeletePackageCommand");
var se_DeregisterPackageVersionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/packages/{PackageId}/versions/{PackageVersion}/patch/{PatchVersion}");
  b.p("PackageId", () => input.PackageId, "{PackageId}", false);
  b.p("PackageVersion", () => input.PackageVersion, "{PackageVersion}", false);
  b.p("PatchVersion", () => input.PatchVersion, "{PatchVersion}", false);
  const query = (0, import_smithy_client.map)({
    [_OA]: [, input[_OA]],
    [_ULPV]: [, input[_ULPV]]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_DeregisterPackageVersionCommand");
var se_DescribeApplicationInstanceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/application-instances/{ApplicationInstanceId}");
  b.p("ApplicationInstanceId", () => input.ApplicationInstanceId, "{ApplicationInstanceId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeApplicationInstanceCommand");
var se_DescribeApplicationInstanceDetailsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/application-instances/{ApplicationInstanceId}/details");
  b.p("ApplicationInstanceId", () => input.ApplicationInstanceId, "{ApplicationInstanceId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeApplicationInstanceDetailsCommand");
var se_DescribeDeviceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/devices/{DeviceId}");
  b.p("DeviceId", () => input.DeviceId, "{DeviceId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeDeviceCommand");
var se_DescribeDeviceJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/jobs/{JobId}");
  b.p("JobId", () => input.JobId, "{JobId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeDeviceJobCommand");
var se_DescribeNodeCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/nodes/{NodeId}");
  b.p("NodeId", () => input.NodeId, "{NodeId}", false);
  const query = (0, import_smithy_client.map)({
    [_OA]: [, input[_OA]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_DescribeNodeCommand");
var se_DescribeNodeFromTemplateJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/packages/template-job/{JobId}");
  b.p("JobId", () => input.JobId, "{JobId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeNodeFromTemplateJobCommand");
var se_DescribePackageCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/packages/metadata/{PackageId}");
  b.p("PackageId", () => input.PackageId, "{PackageId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribePackageCommand");
var se_DescribePackageImportJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/packages/import-jobs/{JobId}");
  b.p("JobId", () => input.JobId, "{JobId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribePackageImportJobCommand");
var se_DescribePackageVersionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/packages/metadata/{PackageId}/versions/{PackageVersion}");
  b.p("PackageId", () => input.PackageId, "{PackageId}", false);
  b.p("PackageVersion", () => input.PackageVersion, "{PackageVersion}", false);
  const query = (0, import_smithy_client.map)({
    [_OA]: [, input[_OA]],
    [_PV]: [, input[_PV]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_DescribePackageVersionCommand");
var se_ListApplicationInstanceDependenciesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/application-instances/{ApplicationInstanceId}/package-dependencies");
  b.p("ApplicationInstanceId", () => input.ApplicationInstanceId, "{ApplicationInstanceId}", false);
  const query = (0, import_smithy_client.map)({
    [_mR]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListApplicationInstanceDependenciesCommand");
var se_ListApplicationInstanceNodeInstancesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/application-instances/{ApplicationInstanceId}/node-instances");
  b.p("ApplicationInstanceId", () => input.ApplicationInstanceId, "{ApplicationInstanceId}", false);
  const query = (0, import_smithy_client.map)({
    [_mR]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListApplicationInstanceNodeInstancesCommand");
var se_ListApplicationInstancesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/application-instances");
  const query = (0, import_smithy_client.map)({
    [_dI]: [, input[_DI]],
    [_sF]: [, input[_SF]],
    [_mR]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListApplicationInstancesCommand");
var se_ListDevicesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/devices");
  const query = (0, import_smithy_client.map)({
    [_NT]: [, input[_NT]],
    [_MR]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_SB]: [, input[_SB]],
    [_SO]: [, input[_SO]],
    [_NF]: [, input[_NF]],
    [_DASF]: [, input[_DASF]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListDevicesCommand");
var se_ListDevicesJobsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/jobs");
  const query = (0, import_smithy_client.map)({
    [_DI]: [, input[_DI]],
    [_NT]: [, input[_NT]],
    [_MR]: [() => input.MaxResults !== void 0, () => input[_MR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListDevicesJobsCommand");
var se_ListNodeFromTemplateJobsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/packages/template-job");
  const query = (0, import_smithy_client.map)({
    [_NT]: [, input[_NT]],
    [_MR]: [() => input.MaxResults !== void 0, () => input[_MR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListNodeFromTemplateJobsCommand");
var se_ListNodesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/nodes");
  const query = (0, import_smithy_client.map)({
    [_c]: [, input[_C]],
    [_oA]: [, input[_OA]],
    [_pN]: [, input[_PN]],
    [_pV]: [, input[_PVa]],
    [_pVa]: [, input[_PV]],
    [_nT]: [, input[_NT]],
    [_mR]: [() => input.MaxResults !== void 0, () => input[_MR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListNodesCommand");
var se_ListPackageImportJobsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/packages/import-jobs");
  const query = (0, import_smithy_client.map)({
    [_NT]: [, input[_NT]],
    [_MR]: [() => input.MaxResults !== void 0, () => input[_MR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListPackageImportJobsCommand");
var se_ListPackagesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/packages");
  const query = (0, import_smithy_client.map)({
    [_mR]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListPackagesCommand");
var se_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tags/{ResourceArn}");
  b.p("ResourceArn", () => input.ResourceArn, "{ResourceArn}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_ListTagsForResourceCommand");
var se_ProvisionDeviceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/devices");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Description: [],
      Name: [],
      NetworkingConfiguration: (_) => (0, import_smithy_client._json)(_),
      Tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ProvisionDeviceCommand");
var se_RegisterPackageVersionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/packages/{PackageId}/versions/{PackageVersion}/patch/{PatchVersion}");
  b.p("PackageId", () => input.PackageId, "{PackageId}", false);
  b.p("PackageVersion", () => input.PackageVersion, "{PackageVersion}", false);
  b.p("PatchVersion", () => input.PatchVersion, "{PatchVersion}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      MarkLatest: [],
      OwnerAccount: []
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_RegisterPackageVersionCommand");
var se_RemoveApplicationInstanceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/application-instances/{ApplicationInstanceId}");
  b.p("ApplicationInstanceId", () => input.ApplicationInstanceId, "{ApplicationInstanceId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_RemoveApplicationInstanceCommand");
var se_SignalApplicationInstanceNodeInstancesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/application-instances/{ApplicationInstanceId}/node-signals");
  b.p("ApplicationInstanceId", () => input.ApplicationInstanceId, "{ApplicationInstanceId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      NodeSignals: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_SignalApplicationInstanceNodeInstancesCommand");
var se_TagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/tags/{ResourceArn}");
  b.p("ResourceArn", () => input.ResourceArn, "{ResourceArn}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_TagResourceCommand");
var se_UntagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tags/{ResourceArn}");
  b.p("ResourceArn", () => input.ResourceArn, "{ResourceArn}", false);
  const query = (0, import_smithy_client.map)({
    [_tK]: [
      (0, import_smithy_client.expectNonNull)(input.TagKeys, `TagKeys`) != null,
      () => (input[_TK] || []).map((_entry) => _entry)
    ]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_UntagResourceCommand");
var se_UpdateDeviceMetadataCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/devices/{DeviceId}");
  b.p("DeviceId", () => input.DeviceId, "{DeviceId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Description: []
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdateDeviceMetadataCommand");
var de_CreateApplicationInstanceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ApplicationInstanceId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateApplicationInstanceCommand");
var de_CreateJobForDevicesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Jobs: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateJobForDevicesCommand");
var de_CreateNodeFromTemplateJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    JobId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateNodeFromTemplateJobCommand");
var de_CreatePackageCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Arn: import_smithy_client.expectString,
    PackageId: import_smithy_client.expectString,
    StorageLocation: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreatePackageCommand");
var de_CreatePackageImportJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    JobId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreatePackageImportJobCommand");
var de_DeleteDeviceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    DeviceId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DeleteDeviceCommand");
var de_DeletePackageCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeletePackageCommand");
var de_DeregisterPackageVersionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeregisterPackageVersionCommand");
var de_DescribeApplicationInstanceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ApplicationInstanceId: import_smithy_client.expectString,
    ApplicationInstanceIdToReplace: import_smithy_client.expectString,
    Arn: import_smithy_client.expectString,
    CreatedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    DefaultRuntimeContextDevice: import_smithy_client.expectString,
    DefaultRuntimeContextDeviceName: import_smithy_client.expectString,
    Description: import_smithy_client.expectString,
    HealthStatus: import_smithy_client.expectString,
    LastUpdatedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Name: import_smithy_client.expectString,
    RuntimeContextStates: (_) => de_ReportedRuntimeContextStates(_, context),
    RuntimeRoleArn: import_smithy_client.expectString,
    Status: import_smithy_client.expectString,
    StatusDescription: import_smithy_client.expectString,
    Tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeApplicationInstanceCommand");
var de_DescribeApplicationInstanceDetailsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ApplicationInstanceId: import_smithy_client.expectString,
    ApplicationInstanceIdToReplace: import_smithy_client.expectString,
    CreatedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    DefaultRuntimeContextDevice: import_smithy_client.expectString,
    Description: import_smithy_client.expectString,
    ManifestOverridesPayload: (_) => (0, import_smithy_client._json)((0, import_core2.awsExpectUnion)(_)),
    ManifestPayload: (_) => (0, import_smithy_client._json)((0, import_core2.awsExpectUnion)(_)),
    Name: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeApplicationInstanceDetailsCommand");
var de_DescribeDeviceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    AlternateSoftwares: import_smithy_client._json,
    Arn: import_smithy_client.expectString,
    Brand: import_smithy_client.expectString,
    CreatedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    CurrentNetworkingStatus: (_) => de_NetworkStatus(_, context),
    CurrentSoftware: import_smithy_client.expectString,
    Description: import_smithy_client.expectString,
    DeviceAggregatedStatus: import_smithy_client.expectString,
    DeviceConnectionStatus: import_smithy_client.expectString,
    DeviceId: import_smithy_client.expectString,
    LatestAlternateSoftware: import_smithy_client.expectString,
    LatestDeviceJob: import_smithy_client._json,
    LatestSoftware: import_smithy_client.expectString,
    LeaseExpirationTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Name: import_smithy_client.expectString,
    NetworkingConfiguration: import_smithy_client._json,
    ProvisioningStatus: import_smithy_client.expectString,
    SerialNumber: import_smithy_client.expectString,
    Tags: import_smithy_client._json,
    Type: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeDeviceCommand");
var de_DescribeDeviceJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    CreatedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    DeviceArn: import_smithy_client.expectString,
    DeviceId: import_smithy_client.expectString,
    DeviceName: import_smithy_client.expectString,
    DeviceType: import_smithy_client.expectString,
    ImageVersion: import_smithy_client.expectString,
    JobId: import_smithy_client.expectString,
    JobType: import_smithy_client.expectString,
    Status: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeDeviceJobCommand");
var de_DescribeNodeCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    AssetName: import_smithy_client.expectString,
    Category: import_smithy_client.expectString,
    CreatedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Description: import_smithy_client.expectString,
    LastUpdatedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Name: import_smithy_client.expectString,
    NodeId: import_smithy_client.expectString,
    NodeInterface: import_smithy_client._json,
    OwnerAccount: import_smithy_client.expectString,
    PackageArn: import_smithy_client.expectString,
    PackageId: import_smithy_client.expectString,
    PackageName: import_smithy_client.expectString,
    PackageVersion: import_smithy_client.expectString,
    PatchVersion: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeNodeCommand");
var de_DescribeNodeFromTemplateJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    CreatedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    JobId: import_smithy_client.expectString,
    JobTags: import_smithy_client._json,
    LastUpdatedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    NodeDescription: import_smithy_client.expectString,
    NodeName: import_smithy_client.expectString,
    OutputPackageName: import_smithy_client.expectString,
    OutputPackageVersion: import_smithy_client.expectString,
    Status: import_smithy_client.expectString,
    StatusMessage: import_smithy_client.expectString,
    TemplateParameters: import_smithy_client._json,
    TemplateType: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeNodeFromTemplateJobCommand");
var de_DescribePackageCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Arn: import_smithy_client.expectString,
    CreatedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    PackageId: import_smithy_client.expectString,
    PackageName: import_smithy_client.expectString,
    ReadAccessPrincipalArns: import_smithy_client._json,
    StorageLocation: import_smithy_client._json,
    Tags: import_smithy_client._json,
    WriteAccessPrincipalArns: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribePackageCommand");
var de_DescribePackageImportJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ClientToken: import_smithy_client.expectString,
    CreatedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    InputConfig: import_smithy_client._json,
    JobId: import_smithy_client.expectString,
    JobTags: import_smithy_client._json,
    JobType: import_smithy_client.expectString,
    LastUpdatedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Output: import_smithy_client._json,
    OutputConfig: import_smithy_client._json,
    Status: import_smithy_client.expectString,
    StatusMessage: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribePackageImportJobCommand");
var de_DescribePackageVersionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    IsLatestPatch: import_smithy_client.expectBoolean,
    OwnerAccount: import_smithy_client.expectString,
    PackageArn: import_smithy_client.expectString,
    PackageId: import_smithy_client.expectString,
    PackageName: import_smithy_client.expectString,
    PackageVersion: import_smithy_client.expectString,
    PatchVersion: import_smithy_client.expectString,
    RegisteredTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Status: import_smithy_client.expectString,
    StatusDescription: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribePackageVersionCommand");
var de_ListApplicationInstanceDependenciesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    NextToken: import_smithy_client.expectString,
    PackageObjects: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListApplicationInstanceDependenciesCommand");
var de_ListApplicationInstanceNodeInstancesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    NextToken: import_smithy_client.expectString,
    NodeInstances: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListApplicationInstanceNodeInstancesCommand");
var de_ListApplicationInstancesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ApplicationInstances: (_) => de_ApplicationInstances(_, context),
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListApplicationInstancesCommand");
var de_ListDevicesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Devices: (_) => de_DeviceList(_, context),
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListDevicesCommand");
var de_ListDevicesJobsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    DeviceJobs: (_) => de_DeviceJobList(_, context),
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListDevicesJobsCommand");
var de_ListNodeFromTemplateJobsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    NextToken: import_smithy_client.expectString,
    NodeFromTemplateJobs: (_) => de_NodeFromTemplateJobList(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListNodeFromTemplateJobsCommand");
var de_ListNodesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    NextToken: import_smithy_client.expectString,
    Nodes: (_) => de_NodesList(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListNodesCommand");
var de_ListPackageImportJobsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    NextToken: import_smithy_client.expectString,
    PackageImportJobs: (_) => de_PackageImportJobList(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListPackageImportJobsCommand");
var de_ListPackagesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    NextToken: import_smithy_client.expectString,
    Packages: (_) => de_PackageList(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListPackagesCommand");
var de_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListTagsForResourceCommand");
var de_ProvisionDeviceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Arn: import_smithy_client.expectString,
    Certificates: context.base64Decoder,
    DeviceId: import_smithy_client.expectString,
    IotThingName: import_smithy_client.expectString,
    Status: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ProvisionDeviceCommand");
var de_RegisterPackageVersionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_RegisterPackageVersionCommand");
var de_RemoveApplicationInstanceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_RemoveApplicationInstanceCommand");
var de_SignalApplicationInstanceNodeInstancesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ApplicationInstanceId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_SignalApplicationInstanceNodeInstancesCommand");
var de_TagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_TagResourceCommand");
var de_UntagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UntagResourceCommand");
var de_UpdateDeviceMetadataCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    DeviceId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateDeviceMetadataCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await (0, import_core2.parseJsonErrorBody)(output.body, context)
  };
  const errorCode = (0, import_core2.loadRestJsonErrorCode)(output, parsedOutput.body);
  switch (errorCode) {
    case "AccessDeniedException":
    case "com.amazonaws.panorama#AccessDeniedException":
      throw await de_AccessDeniedExceptionRes(parsedOutput, context);
    case "InternalServerException":
    case "com.amazonaws.panorama#InternalServerException":
      throw await de_InternalServerExceptionRes(parsedOutput, context);
    case "ServiceQuotaExceededException":
    case "com.amazonaws.panorama#ServiceQuotaExceededException":
      throw await de_ServiceQuotaExceededExceptionRes(parsedOutput, context);
    case "ValidationException":
    case "com.amazonaws.panorama#ValidationException":
      throw await de_ValidationExceptionRes(parsedOutput, context);
    case "ConflictException":
    case "com.amazonaws.panorama#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.panorama#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var throwDefaultError = (0, import_smithy_client.withBaseException)(PanoramaServiceException);
var de_AccessDeniedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new AccessDeniedException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_AccessDeniedExceptionRes");
var de_ConflictExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    ErrorArguments: import_smithy_client._json,
    ErrorId: import_smithy_client.expectString,
    Message: import_smithy_client.expectString,
    ResourceId: import_smithy_client.expectString,
    ResourceType: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ConflictException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ConflictExceptionRes");
var de_InternalServerExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({
    [_RAS]: [() => void 0 !== parsedOutput.headers[_ra], () => (0, import_smithy_client.strictParseInt32)(parsedOutput.headers[_ra])]
  });
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new InternalServerException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_InternalServerExceptionRes");
var de_ResourceNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString,
    ResourceId: import_smithy_client.expectString,
    ResourceType: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ResourceNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ResourceNotFoundExceptionRes");
var de_ServiceQuotaExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString,
    QuotaCode: import_smithy_client.expectString,
    ResourceId: import_smithy_client.expectString,
    ResourceType: import_smithy_client.expectString,
    ServiceCode: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ServiceQuotaExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ServiceQuotaExceededExceptionRes");
var de_ValidationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    ErrorArguments: import_smithy_client._json,
    ErrorId: import_smithy_client.expectString,
    Fields: import_smithy_client._json,
    Message: import_smithy_client.expectString,
    Reason: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ValidationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ValidationExceptionRes");
var de_ApplicationInstance = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ApplicationInstanceId: import_smithy_client.expectString,
    Arn: import_smithy_client.expectString,
    CreatedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    DefaultRuntimeContextDevice: import_smithy_client.expectString,
    DefaultRuntimeContextDeviceName: import_smithy_client.expectString,
    Description: import_smithy_client.expectString,
    HealthStatus: import_smithy_client.expectString,
    Name: import_smithy_client.expectString,
    RuntimeContextStates: (_) => de_ReportedRuntimeContextStates(_, context),
    Status: import_smithy_client.expectString,
    StatusDescription: import_smithy_client.expectString,
    Tags: import_smithy_client._json
  });
}, "de_ApplicationInstance");
var de_ApplicationInstances = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ApplicationInstance(entry, context);
  });
  return retVal;
}, "de_ApplicationInstances");
var de_Device = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Brand: import_smithy_client.expectString,
    CreatedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    CurrentSoftware: import_smithy_client.expectString,
    Description: import_smithy_client.expectString,
    DeviceAggregatedStatus: import_smithy_client.expectString,
    DeviceId: import_smithy_client.expectString,
    LastUpdatedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    LatestDeviceJob: import_smithy_client._json,
    LeaseExpirationTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Name: import_smithy_client.expectString,
    ProvisioningStatus: import_smithy_client.expectString,
    Tags: import_smithy_client._json,
    Type: import_smithy_client.expectString
  });
}, "de_Device");
var de_DeviceJob = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CreatedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    DeviceId: import_smithy_client.expectString,
    DeviceName: import_smithy_client.expectString,
    JobId: import_smithy_client.expectString,
    JobType: import_smithy_client.expectString
  });
}, "de_DeviceJob");
var de_DeviceJobList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_DeviceJob(entry, context);
  });
  return retVal;
}, "de_DeviceJobList");
var de_DeviceList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Device(entry, context);
  });
  return retVal;
}, "de_DeviceList");
var de_NetworkStatus = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Ethernet0Status: import_smithy_client._json,
    Ethernet1Status: import_smithy_client._json,
    LastUpdatedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    NtpStatus: import_smithy_client._json
  });
}, "de_NetworkStatus");
var de_Node = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Category: import_smithy_client.expectString,
    CreatedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Description: import_smithy_client.expectString,
    Name: import_smithy_client.expectString,
    NodeId: import_smithy_client.expectString,
    OwnerAccount: import_smithy_client.expectString,
    PackageArn: import_smithy_client.expectString,
    PackageId: import_smithy_client.expectString,
    PackageName: import_smithy_client.expectString,
    PackageVersion: import_smithy_client.expectString,
    PatchVersion: import_smithy_client.expectString
  });
}, "de_Node");
var de_NodeFromTemplateJob = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CreatedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    JobId: import_smithy_client.expectString,
    NodeName: import_smithy_client.expectString,
    Status: import_smithy_client.expectString,
    StatusMessage: import_smithy_client.expectString,
    TemplateType: import_smithy_client.expectString
  });
}, "de_NodeFromTemplateJob");
var de_NodeFromTemplateJobList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_NodeFromTemplateJob(entry, context);
  });
  return retVal;
}, "de_NodeFromTemplateJobList");
var de_NodesList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Node(entry, context);
  });
  return retVal;
}, "de_NodesList");
var de_PackageImportJob = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CreatedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    JobId: import_smithy_client.expectString,
    JobType: import_smithy_client.expectString,
    LastUpdatedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Status: import_smithy_client.expectString,
    StatusMessage: import_smithy_client.expectString
  });
}, "de_PackageImportJob");
var de_PackageImportJobList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_PackageImportJob(entry, context);
  });
  return retVal;
}, "de_PackageImportJobList");
var de_PackageList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_PackageListItem(entry, context);
  });
  return retVal;
}, "de_PackageList");
var de_PackageListItem = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Arn: import_smithy_client.expectString,
    CreatedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    PackageId: import_smithy_client.expectString,
    PackageName: import_smithy_client.expectString,
    Tags: import_smithy_client._json
  });
}, "de_PackageListItem");
var de_ReportedRuntimeContextState = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    DesiredState: import_smithy_client.expectString,
    DeviceReportedStatus: import_smithy_client.expectString,
    DeviceReportedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    RuntimeContextName: import_smithy_client.expectString
  });
}, "de_ReportedRuntimeContextState");
var de_ReportedRuntimeContextStates = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ReportedRuntimeContextState(entry, context);
  });
  return retVal;
}, "de_ReportedRuntimeContextStates");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var _C = "Category";
var _DASF = "DeviceAggregatedStatusFilter";
var _DI = "DeviceId";
var _FD = "ForceDelete";
var _MR = "MaxResults";
var _NF = "NameFilter";
var _NT = "NextToken";
var _OA = "OwnerAccount";
var _PN = "PackageName";
var _PV = "PatchVersion";
var _PVa = "PackageVersion";
var _RAS = "RetryAfterSeconds";
var _SB = "SortBy";
var _SF = "StatusFilter";
var _SO = "SortOrder";
var _TK = "TagKeys";
var _ULPV = "UpdatedLatestPatchVersion";
var _c = "category";
var _dI = "deviceId";
var _mR = "maxResults";
var _nT = "nextToken";
var _oA = "ownerAccount";
var _pN = "packageName";
var _pV = "packageVersion";
var _pVa = "patchVersion";
var _ra = "retry-after";
var _sF = "statusFilter";
var _tK = "tagKeys";

// src/commands/CreateApplicationInstanceCommand.ts
var _CreateApplicationInstanceCommand = class _CreateApplicationInstanceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OmniCloudServiceLambda", "CreateApplicationInstance", {}).n("PanoramaClient", "CreateApplicationInstanceCommand").f(void 0, void 0).ser(se_CreateApplicationInstanceCommand).de(de_CreateApplicationInstanceCommand).build() {
};
__name(_CreateApplicationInstanceCommand, "CreateApplicationInstanceCommand");
var CreateApplicationInstanceCommand = _CreateApplicationInstanceCommand;

// src/commands/CreateJobForDevicesCommand.ts




var _CreateJobForDevicesCommand = class _CreateJobForDevicesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OmniCloudServiceLambda", "CreateJobForDevices", {}).n("PanoramaClient", "CreateJobForDevicesCommand").f(void 0, void 0).ser(se_CreateJobForDevicesCommand).de(de_CreateJobForDevicesCommand).build() {
};
__name(_CreateJobForDevicesCommand, "CreateJobForDevicesCommand");
var CreateJobForDevicesCommand = _CreateJobForDevicesCommand;

// src/commands/CreateNodeFromTemplateJobCommand.ts




var _CreateNodeFromTemplateJobCommand = class _CreateNodeFromTemplateJobCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OmniCloudServiceLambda", "CreateNodeFromTemplateJob", {}).n("PanoramaClient", "CreateNodeFromTemplateJobCommand").f(CreateNodeFromTemplateJobRequestFilterSensitiveLog, void 0).ser(se_CreateNodeFromTemplateJobCommand).de(de_CreateNodeFromTemplateJobCommand).build() {
};
__name(_CreateNodeFromTemplateJobCommand, "CreateNodeFromTemplateJobCommand");
var CreateNodeFromTemplateJobCommand = _CreateNodeFromTemplateJobCommand;

// src/commands/CreatePackageCommand.ts




var _CreatePackageCommand = class _CreatePackageCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OmniCloudServiceLambda", "CreatePackage", {}).n("PanoramaClient", "CreatePackageCommand").f(void 0, void 0).ser(se_CreatePackageCommand).de(de_CreatePackageCommand).build() {
};
__name(_CreatePackageCommand, "CreatePackageCommand");
var CreatePackageCommand = _CreatePackageCommand;

// src/commands/CreatePackageImportJobCommand.ts




var _CreatePackageImportJobCommand = class _CreatePackageImportJobCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OmniCloudServiceLambda", "CreatePackageImportJob", {}).n("PanoramaClient", "CreatePackageImportJobCommand").f(void 0, void 0).ser(se_CreatePackageImportJobCommand).de(de_CreatePackageImportJobCommand).build() {
};
__name(_CreatePackageImportJobCommand, "CreatePackageImportJobCommand");
var CreatePackageImportJobCommand = _CreatePackageImportJobCommand;

// src/commands/DeleteDeviceCommand.ts




var _DeleteDeviceCommand = class _DeleteDeviceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OmniCloudServiceLambda", "DeleteDevice", {}).n("PanoramaClient", "DeleteDeviceCommand").f(void 0, void 0).ser(se_DeleteDeviceCommand).de(de_DeleteDeviceCommand).build() {
};
__name(_DeleteDeviceCommand, "DeleteDeviceCommand");
var DeleteDeviceCommand = _DeleteDeviceCommand;

// src/commands/DeletePackageCommand.ts




var _DeletePackageCommand = class _DeletePackageCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OmniCloudServiceLambda", "DeletePackage", {}).n("PanoramaClient", "DeletePackageCommand").f(void 0, void 0).ser(se_DeletePackageCommand).de(de_DeletePackageCommand).build() {
};
__name(_DeletePackageCommand, "DeletePackageCommand");
var DeletePackageCommand = _DeletePackageCommand;

// src/commands/DeregisterPackageVersionCommand.ts




var _DeregisterPackageVersionCommand = class _DeregisterPackageVersionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OmniCloudServiceLambda", "DeregisterPackageVersion", {}).n("PanoramaClient", "DeregisterPackageVersionCommand").f(void 0, void 0).ser(se_DeregisterPackageVersionCommand).de(de_DeregisterPackageVersionCommand).build() {
};
__name(_DeregisterPackageVersionCommand, "DeregisterPackageVersionCommand");
var DeregisterPackageVersionCommand = _DeregisterPackageVersionCommand;

// src/commands/DescribeApplicationInstanceCommand.ts




var _DescribeApplicationInstanceCommand = class _DescribeApplicationInstanceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OmniCloudServiceLambda", "DescribeApplicationInstance", {}).n("PanoramaClient", "DescribeApplicationInstanceCommand").f(void 0, void 0).ser(se_DescribeApplicationInstanceCommand).de(de_DescribeApplicationInstanceCommand).build() {
};
__name(_DescribeApplicationInstanceCommand, "DescribeApplicationInstanceCommand");
var DescribeApplicationInstanceCommand = _DescribeApplicationInstanceCommand;

// src/commands/DescribeApplicationInstanceDetailsCommand.ts




var _DescribeApplicationInstanceDetailsCommand = class _DescribeApplicationInstanceDetailsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OmniCloudServiceLambda", "DescribeApplicationInstanceDetails", {}).n("PanoramaClient", "DescribeApplicationInstanceDetailsCommand").f(void 0, void 0).ser(se_DescribeApplicationInstanceDetailsCommand).de(de_DescribeApplicationInstanceDetailsCommand).build() {
};
__name(_DescribeApplicationInstanceDetailsCommand, "DescribeApplicationInstanceDetailsCommand");
var DescribeApplicationInstanceDetailsCommand = _DescribeApplicationInstanceDetailsCommand;

// src/commands/DescribeDeviceCommand.ts




var _DescribeDeviceCommand = class _DescribeDeviceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OmniCloudServiceLambda", "DescribeDevice", {}).n("PanoramaClient", "DescribeDeviceCommand").f(void 0, void 0).ser(se_DescribeDeviceCommand).de(de_DescribeDeviceCommand).build() {
};
__name(_DescribeDeviceCommand, "DescribeDeviceCommand");
var DescribeDeviceCommand = _DescribeDeviceCommand;

// src/commands/DescribeDeviceJobCommand.ts




var _DescribeDeviceJobCommand = class _DescribeDeviceJobCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OmniCloudServiceLambda", "DescribeDeviceJob", {}).n("PanoramaClient", "DescribeDeviceJobCommand").f(void 0, void 0).ser(se_DescribeDeviceJobCommand).de(de_DescribeDeviceJobCommand).build() {
};
__name(_DescribeDeviceJobCommand, "DescribeDeviceJobCommand");
var DescribeDeviceJobCommand = _DescribeDeviceJobCommand;

// src/commands/DescribeNodeCommand.ts




var _DescribeNodeCommand = class _DescribeNodeCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OmniCloudServiceLambda", "DescribeNode", {}).n("PanoramaClient", "DescribeNodeCommand").f(void 0, void 0).ser(se_DescribeNodeCommand).de(de_DescribeNodeCommand).build() {
};
__name(_DescribeNodeCommand, "DescribeNodeCommand");
var DescribeNodeCommand = _DescribeNodeCommand;

// src/commands/DescribeNodeFromTemplateJobCommand.ts




var _DescribeNodeFromTemplateJobCommand = class _DescribeNodeFromTemplateJobCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OmniCloudServiceLambda", "DescribeNodeFromTemplateJob", {}).n("PanoramaClient", "DescribeNodeFromTemplateJobCommand").f(void 0, DescribeNodeFromTemplateJobResponseFilterSensitiveLog).ser(se_DescribeNodeFromTemplateJobCommand).de(de_DescribeNodeFromTemplateJobCommand).build() {
};
__name(_DescribeNodeFromTemplateJobCommand, "DescribeNodeFromTemplateJobCommand");
var DescribeNodeFromTemplateJobCommand = _DescribeNodeFromTemplateJobCommand;

// src/commands/DescribePackageCommand.ts




var _DescribePackageCommand = class _DescribePackageCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OmniCloudServiceLambda", "DescribePackage", {}).n("PanoramaClient", "DescribePackageCommand").f(void 0, void 0).ser(se_DescribePackageCommand).de(de_DescribePackageCommand).build() {
};
__name(_DescribePackageCommand, "DescribePackageCommand");
var DescribePackageCommand = _DescribePackageCommand;

// src/commands/DescribePackageImportJobCommand.ts




var _DescribePackageImportJobCommand = class _DescribePackageImportJobCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OmniCloudServiceLambda", "DescribePackageImportJob", {}).n("PanoramaClient", "DescribePackageImportJobCommand").f(void 0, void 0).ser(se_DescribePackageImportJobCommand).de(de_DescribePackageImportJobCommand).build() {
};
__name(_DescribePackageImportJobCommand, "DescribePackageImportJobCommand");
var DescribePackageImportJobCommand = _DescribePackageImportJobCommand;

// src/commands/DescribePackageVersionCommand.ts




var _DescribePackageVersionCommand = class _DescribePackageVersionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OmniCloudServiceLambda", "DescribePackageVersion", {}).n("PanoramaClient", "DescribePackageVersionCommand").f(void 0, void 0).ser(se_DescribePackageVersionCommand).de(de_DescribePackageVersionCommand).build() {
};
__name(_DescribePackageVersionCommand, "DescribePackageVersionCommand");
var DescribePackageVersionCommand = _DescribePackageVersionCommand;

// src/commands/ListApplicationInstanceDependenciesCommand.ts




var _ListApplicationInstanceDependenciesCommand = class _ListApplicationInstanceDependenciesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OmniCloudServiceLambda", "ListApplicationInstanceDependencies", {}).n("PanoramaClient", "ListApplicationInstanceDependenciesCommand").f(void 0, void 0).ser(se_ListApplicationInstanceDependenciesCommand).de(de_ListApplicationInstanceDependenciesCommand).build() {
};
__name(_ListApplicationInstanceDependenciesCommand, "ListApplicationInstanceDependenciesCommand");
var ListApplicationInstanceDependenciesCommand = _ListApplicationInstanceDependenciesCommand;

// src/commands/ListApplicationInstanceNodeInstancesCommand.ts




var _ListApplicationInstanceNodeInstancesCommand = class _ListApplicationInstanceNodeInstancesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OmniCloudServiceLambda", "ListApplicationInstanceNodeInstances", {}).n("PanoramaClient", "ListApplicationInstanceNodeInstancesCommand").f(void 0, void 0).ser(se_ListApplicationInstanceNodeInstancesCommand).de(de_ListApplicationInstanceNodeInstancesCommand).build() {
};
__name(_ListApplicationInstanceNodeInstancesCommand, "ListApplicationInstanceNodeInstancesCommand");
var ListApplicationInstanceNodeInstancesCommand = _ListApplicationInstanceNodeInstancesCommand;

// src/commands/ListApplicationInstancesCommand.ts




var _ListApplicationInstancesCommand = class _ListApplicationInstancesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OmniCloudServiceLambda", "ListApplicationInstances", {}).n("PanoramaClient", "ListApplicationInstancesCommand").f(void 0, void 0).ser(se_ListApplicationInstancesCommand).de(de_ListApplicationInstancesCommand).build() {
};
__name(_ListApplicationInstancesCommand, "ListApplicationInstancesCommand");
var ListApplicationInstancesCommand = _ListApplicationInstancesCommand;

// src/commands/ListDevicesCommand.ts




var _ListDevicesCommand = class _ListDevicesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OmniCloudServiceLambda", "ListDevices", {}).n("PanoramaClient", "ListDevicesCommand").f(void 0, void 0).ser(se_ListDevicesCommand).de(de_ListDevicesCommand).build() {
};
__name(_ListDevicesCommand, "ListDevicesCommand");
var ListDevicesCommand = _ListDevicesCommand;

// src/commands/ListDevicesJobsCommand.ts




var _ListDevicesJobsCommand = class _ListDevicesJobsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OmniCloudServiceLambda", "ListDevicesJobs", {}).n("PanoramaClient", "ListDevicesJobsCommand").f(void 0, void 0).ser(se_ListDevicesJobsCommand).de(de_ListDevicesJobsCommand).build() {
};
__name(_ListDevicesJobsCommand, "ListDevicesJobsCommand");
var ListDevicesJobsCommand = _ListDevicesJobsCommand;

// src/commands/ListNodeFromTemplateJobsCommand.ts




var _ListNodeFromTemplateJobsCommand = class _ListNodeFromTemplateJobsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OmniCloudServiceLambda", "ListNodeFromTemplateJobs", {}).n("PanoramaClient", "ListNodeFromTemplateJobsCommand").f(void 0, void 0).ser(se_ListNodeFromTemplateJobsCommand).de(de_ListNodeFromTemplateJobsCommand).build() {
};
__name(_ListNodeFromTemplateJobsCommand, "ListNodeFromTemplateJobsCommand");
var ListNodeFromTemplateJobsCommand = _ListNodeFromTemplateJobsCommand;

// src/commands/ListNodesCommand.ts




var _ListNodesCommand = class _ListNodesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OmniCloudServiceLambda", "ListNodes", {}).n("PanoramaClient", "ListNodesCommand").f(void 0, void 0).ser(se_ListNodesCommand).de(de_ListNodesCommand).build() {
};
__name(_ListNodesCommand, "ListNodesCommand");
var ListNodesCommand = _ListNodesCommand;

// src/commands/ListPackageImportJobsCommand.ts




var _ListPackageImportJobsCommand = class _ListPackageImportJobsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OmniCloudServiceLambda", "ListPackageImportJobs", {}).n("PanoramaClient", "ListPackageImportJobsCommand").f(void 0, void 0).ser(se_ListPackageImportJobsCommand).de(de_ListPackageImportJobsCommand).build() {
};
__name(_ListPackageImportJobsCommand, "ListPackageImportJobsCommand");
var ListPackageImportJobsCommand = _ListPackageImportJobsCommand;

// src/commands/ListPackagesCommand.ts




var _ListPackagesCommand = class _ListPackagesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OmniCloudServiceLambda", "ListPackages", {}).n("PanoramaClient", "ListPackagesCommand").f(void 0, void 0).ser(se_ListPackagesCommand).de(de_ListPackagesCommand).build() {
};
__name(_ListPackagesCommand, "ListPackagesCommand");
var ListPackagesCommand = _ListPackagesCommand;

// src/commands/ListTagsForResourceCommand.ts




var _ListTagsForResourceCommand = class _ListTagsForResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OmniCloudServiceLambda", "ListTagsForResource", {}).n("PanoramaClient", "ListTagsForResourceCommand").f(void 0, void 0).ser(se_ListTagsForResourceCommand).de(de_ListTagsForResourceCommand).build() {
};
__name(_ListTagsForResourceCommand, "ListTagsForResourceCommand");
var ListTagsForResourceCommand = _ListTagsForResourceCommand;

// src/commands/ProvisionDeviceCommand.ts




var _ProvisionDeviceCommand = class _ProvisionDeviceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OmniCloudServiceLambda", "ProvisionDevice", {}).n("PanoramaClient", "ProvisionDeviceCommand").f(void 0, void 0).ser(se_ProvisionDeviceCommand).de(de_ProvisionDeviceCommand).build() {
};
__name(_ProvisionDeviceCommand, "ProvisionDeviceCommand");
var ProvisionDeviceCommand = _ProvisionDeviceCommand;

// src/commands/RegisterPackageVersionCommand.ts




var _RegisterPackageVersionCommand = class _RegisterPackageVersionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OmniCloudServiceLambda", "RegisterPackageVersion", {}).n("PanoramaClient", "RegisterPackageVersionCommand").f(void 0, void 0).ser(se_RegisterPackageVersionCommand).de(de_RegisterPackageVersionCommand).build() {
};
__name(_RegisterPackageVersionCommand, "RegisterPackageVersionCommand");
var RegisterPackageVersionCommand = _RegisterPackageVersionCommand;

// src/commands/RemoveApplicationInstanceCommand.ts




var _RemoveApplicationInstanceCommand = class _RemoveApplicationInstanceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OmniCloudServiceLambda", "RemoveApplicationInstance", {}).n("PanoramaClient", "RemoveApplicationInstanceCommand").f(void 0, void 0).ser(se_RemoveApplicationInstanceCommand).de(de_RemoveApplicationInstanceCommand).build() {
};
__name(_RemoveApplicationInstanceCommand, "RemoveApplicationInstanceCommand");
var RemoveApplicationInstanceCommand = _RemoveApplicationInstanceCommand;

// src/commands/SignalApplicationInstanceNodeInstancesCommand.ts




var _SignalApplicationInstanceNodeInstancesCommand = class _SignalApplicationInstanceNodeInstancesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OmniCloudServiceLambda", "SignalApplicationInstanceNodeInstances", {}).n("PanoramaClient", "SignalApplicationInstanceNodeInstancesCommand").f(void 0, void 0).ser(se_SignalApplicationInstanceNodeInstancesCommand).de(de_SignalApplicationInstanceNodeInstancesCommand).build() {
};
__name(_SignalApplicationInstanceNodeInstancesCommand, "SignalApplicationInstanceNodeInstancesCommand");
var SignalApplicationInstanceNodeInstancesCommand = _SignalApplicationInstanceNodeInstancesCommand;

// src/commands/TagResourceCommand.ts




var _TagResourceCommand = class _TagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OmniCloudServiceLambda", "TagResource", {}).n("PanoramaClient", "TagResourceCommand").f(void 0, void 0).ser(se_TagResourceCommand).de(de_TagResourceCommand).build() {
};
__name(_TagResourceCommand, "TagResourceCommand");
var TagResourceCommand = _TagResourceCommand;

// src/commands/UntagResourceCommand.ts




var _UntagResourceCommand = class _UntagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OmniCloudServiceLambda", "UntagResource", {}).n("PanoramaClient", "UntagResourceCommand").f(void 0, void 0).ser(se_UntagResourceCommand).de(de_UntagResourceCommand).build() {
};
__name(_UntagResourceCommand, "UntagResourceCommand");
var UntagResourceCommand = _UntagResourceCommand;

// src/commands/UpdateDeviceMetadataCommand.ts




var _UpdateDeviceMetadataCommand = class _UpdateDeviceMetadataCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("OmniCloudServiceLambda", "UpdateDeviceMetadata", {}).n("PanoramaClient", "UpdateDeviceMetadataCommand").f(void 0, void 0).ser(se_UpdateDeviceMetadataCommand).de(de_UpdateDeviceMetadataCommand).build() {
};
__name(_UpdateDeviceMetadataCommand, "UpdateDeviceMetadataCommand");
var UpdateDeviceMetadataCommand = _UpdateDeviceMetadataCommand;

// src/Panorama.ts
var commands = {
  CreateApplicationInstanceCommand,
  CreateJobForDevicesCommand,
  CreateNodeFromTemplateJobCommand,
  CreatePackageCommand,
  CreatePackageImportJobCommand,
  DeleteDeviceCommand,
  DeletePackageCommand,
  DeregisterPackageVersionCommand,
  DescribeApplicationInstanceCommand,
  DescribeApplicationInstanceDetailsCommand,
  DescribeDeviceCommand,
  DescribeDeviceJobCommand,
  DescribeNodeCommand,
  DescribeNodeFromTemplateJobCommand,
  DescribePackageCommand,
  DescribePackageImportJobCommand,
  DescribePackageVersionCommand,
  ListApplicationInstanceDependenciesCommand,
  ListApplicationInstanceNodeInstancesCommand,
  ListApplicationInstancesCommand,
  ListDevicesCommand,
  ListDevicesJobsCommand,
  ListNodeFromTemplateJobsCommand,
  ListNodesCommand,
  ListPackageImportJobsCommand,
  ListPackagesCommand,
  ListTagsForResourceCommand,
  ProvisionDeviceCommand,
  RegisterPackageVersionCommand,
  RemoveApplicationInstanceCommand,
  SignalApplicationInstanceNodeInstancesCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateDeviceMetadataCommand
};
var _Panorama = class _Panorama extends PanoramaClient {
};
__name(_Panorama, "Panorama");
var Panorama = _Panorama;
(0, import_smithy_client.createAggregatedClient)(commands, Panorama);

// src/pagination/ListApplicationInstanceDependenciesPaginator.ts

var paginateListApplicationInstanceDependencies = (0, import_core.createPaginator)(PanoramaClient, ListApplicationInstanceDependenciesCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListApplicationInstanceNodeInstancesPaginator.ts

var paginateListApplicationInstanceNodeInstances = (0, import_core.createPaginator)(PanoramaClient, ListApplicationInstanceNodeInstancesCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListApplicationInstancesPaginator.ts

var paginateListApplicationInstances = (0, import_core.createPaginator)(PanoramaClient, ListApplicationInstancesCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListDevicesJobsPaginator.ts

var paginateListDevicesJobs = (0, import_core.createPaginator)(PanoramaClient, ListDevicesJobsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListDevicesPaginator.ts

var paginateListDevices = (0, import_core.createPaginator)(PanoramaClient, ListDevicesCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListNodeFromTemplateJobsPaginator.ts

var paginateListNodeFromTemplateJobs = (0, import_core.createPaginator)(PanoramaClient, ListNodeFromTemplateJobsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListNodesPaginator.ts

var paginateListNodes = (0, import_core.createPaginator)(PanoramaClient, ListNodesCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListPackageImportJobsPaginator.ts

var paginateListPackageImportJobs = (0, import_core.createPaginator)(PanoramaClient, ListPackageImportJobsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListPackagesPaginator.ts

var paginateListPackages = (0, import_core.createPaginator)(PanoramaClient, ListPackagesCommand, "NextToken", "NextToken", "MaxResults");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  PanoramaServiceException,
  __Client,
  PanoramaClient,
  Panorama,
  $Command,
  CreateApplicationInstanceCommand,
  CreateJobForDevicesCommand,
  CreateNodeFromTemplateJobCommand,
  CreatePackageCommand,
  CreatePackageImportJobCommand,
  DeleteDeviceCommand,
  DeletePackageCommand,
  DeregisterPackageVersionCommand,
  DescribeApplicationInstanceCommand,
  DescribeApplicationInstanceDetailsCommand,
  DescribeDeviceCommand,
  DescribeDeviceJobCommand,
  DescribeNodeCommand,
  DescribeNodeFromTemplateJobCommand,
  DescribePackageCommand,
  DescribePackageImportJobCommand,
  DescribePackageVersionCommand,
  ListApplicationInstanceDependenciesCommand,
  ListApplicationInstanceNodeInstancesCommand,
  ListApplicationInstancesCommand,
  ListDevicesCommand,
  ListDevicesJobsCommand,
  ListNodeFromTemplateJobsCommand,
  ListNodesCommand,
  ListPackageImportJobsCommand,
  ListPackagesCommand,
  ListTagsForResourceCommand,
  ProvisionDeviceCommand,
  RegisterPackageVersionCommand,
  RemoveApplicationInstanceCommand,
  SignalApplicationInstanceNodeInstancesCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateDeviceMetadataCommand,
  paginateListApplicationInstanceDependencies,
  paginateListApplicationInstanceNodeInstances,
  paginateListApplicationInstances,
  paginateListDevicesJobs,
  paginateListDevices,
  paginateListNodeFromTemplateJobs,
  paginateListNodes,
  paginateListPackageImportJobs,
  paginateListPackages,
  AccessDeniedException,
  ApplicationInstanceHealthStatus,
  DesiredState,
  DeviceReportedStatus,
  ApplicationInstanceStatus,
  ConflictException,
  ConnectionType,
  ManifestOverridesPayload,
  ManifestPayload,
  InternalServerException,
  ServiceQuotaExceededException,
  ValidationExceptionReason,
  ValidationException,
  JobType,
  ResourceNotFoundException,
  JobResourceType,
  TemplateType,
  PackageImportJobType,
  DeviceBrand,
  NetworkConnectionStatus,
  DeviceAggregatedStatus,
  DeviceConnectionStatus,
  UpdateProgress,
  DeviceStatus,
  DeviceType,
  NodeCategory,
  PortType,
  NodeFromTemplateJobStatus,
  PackageImportJobStatus,
  PackageVersionStatus,
  NodeInstanceStatus,
  StatusFilter,
  ListDevicesSortBy,
  SortOrder,
  NodeSignalValue,
  CreateNodeFromTemplateJobRequestFilterSensitiveLog,
  DescribeNodeFromTemplateJobResponseFilterSensitiveLog
});

