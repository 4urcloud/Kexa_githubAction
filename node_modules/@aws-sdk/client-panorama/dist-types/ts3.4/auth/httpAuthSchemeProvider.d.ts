import {
  AwsSdkSigV4AuthInputConfig,
  AwsSdkSigV4AuthResolvedConfig,
  AwsSdkSigV4PreviouslyResolved,
} from "@aws-sdk/core";
import {
  HandlerExecutionContext,
  HttpAuthScheme,
  HttpAuthSchemeParameters,
  HttpAuthSchemeParametersProvider,
  HttpAuthSchemeProvider,
} from "@smithy/types";
import { PanoramaClientResolvedConfig } from "../PanoramaClient";
export interface PanoramaHttpAuthSchemeParameters
  extends HttpAuthSchemeParameters {
  region?: string;
}
export interface PanoramaHttpAuthSchemeParametersProvider
  extends HttpAuthSchemeParametersProvider<
    PanoramaClientResolvedConfig,
    HandlerExecutionContext,
    PanoramaHttpAuthSchemeParameters,
    object
  > {}
export declare const defaultPanoramaHttpAuthSchemeParametersProvider: (
  config: PanoramaClientResolvedConfig,
  context: HandlerExecutionContext,
  input: object
) => Promise<PanoramaHttpAuthSchemeParameters>;
export interface PanoramaHttpAuthSchemeProvider
  extends HttpAuthSchemeProvider<PanoramaHttpAuthSchemeParameters> {}
export declare const defaultPanoramaHttpAuthSchemeProvider: PanoramaHttpAuthSchemeProvider;
export interface HttpAuthSchemeInputConfig extends AwsSdkSigV4AuthInputConfig {
  httpAuthSchemes?: HttpAuthScheme[];
  httpAuthSchemeProvider?: PanoramaHttpAuthSchemeProvider;
}
export interface HttpAuthSchemeResolvedConfig
  extends AwsSdkSigV4AuthResolvedConfig {
  readonly httpAuthSchemes: HttpAuthScheme[];
  readonly httpAuthSchemeProvider: PanoramaHttpAuthSchemeProvider;
}
export declare const resolveHttpAuthSchemeConfig: <T>(
  config: T & HttpAuthSchemeInputConfig & AwsSdkSigV4PreviouslyResolved
) => T & HttpAuthSchemeResolvedConfig;
