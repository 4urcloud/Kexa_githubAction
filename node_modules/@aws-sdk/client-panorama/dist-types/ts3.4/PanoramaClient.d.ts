import {
  HostHeaderInputConfig,
  HostHeaderResolvedConfig,
} from "@aws-sdk/middleware-host-header";
import {
  UserAgentInputConfig,
  UserAgentResolvedConfig,
} from "@aws-sdk/middleware-user-agent";
import {
  RegionInputConfig,
  RegionResolvedConfig,
} from "@smithy/config-resolver";
import {
  EndpointInputConfig,
  EndpointResolvedConfig,
} from "@smithy/middleware-endpoint";
import {
  RetryInputConfig,
  RetryResolvedConfig,
} from "@smithy/middleware-retry";
import { HttpHandlerUserInput as __HttpHandlerUserInput } from "@smithy/protocol-http";
import {
  Client as __Client,
  DefaultsMode as __DefaultsMode,
  SmithyConfiguration as __SmithyConfiguration,
  SmithyResolvedConfiguration as __SmithyResolvedConfiguration,
} from "@smithy/smithy-client";
import {
  AwsCredentialIdentityProvider,
  BodyLengthCalculator as __BodyLengthCalculator,
  CheckOptionalClientConfig as __CheckOptionalClientConfig,
  ChecksumConstructor as __ChecksumConstructor,
  Decoder as __Decoder,
  Encoder as __Encoder,
  HashConstructor as __HashConstructor,
  HttpHandlerOptions as __HttpHandlerOptions,
  Logger as __Logger,
  Provider as __Provider,
  Provider,
  StreamCollector as __StreamCollector,
  UrlParser as __UrlParser,
  UserAgent as __UserAgent,
} from "@smithy/types";
import {
  HttpAuthSchemeInputConfig,
  HttpAuthSchemeResolvedConfig,
} from "./auth/httpAuthSchemeProvider";
import {
  CreateApplicationInstanceCommandInput,
  CreateApplicationInstanceCommandOutput,
} from "./commands/CreateApplicationInstanceCommand";
import {
  CreateJobForDevicesCommandInput,
  CreateJobForDevicesCommandOutput,
} from "./commands/CreateJobForDevicesCommand";
import {
  CreateNodeFromTemplateJobCommandInput,
  CreateNodeFromTemplateJobCommandOutput,
} from "./commands/CreateNodeFromTemplateJobCommand";
import {
  CreatePackageCommandInput,
  CreatePackageCommandOutput,
} from "./commands/CreatePackageCommand";
import {
  CreatePackageImportJobCommandInput,
  CreatePackageImportJobCommandOutput,
} from "./commands/CreatePackageImportJobCommand";
import {
  DeleteDeviceCommandInput,
  DeleteDeviceCommandOutput,
} from "./commands/DeleteDeviceCommand";
import {
  DeletePackageCommandInput,
  DeletePackageCommandOutput,
} from "./commands/DeletePackageCommand";
import {
  DeregisterPackageVersionCommandInput,
  DeregisterPackageVersionCommandOutput,
} from "./commands/DeregisterPackageVersionCommand";
import {
  DescribeApplicationInstanceCommandInput,
  DescribeApplicationInstanceCommandOutput,
} from "./commands/DescribeApplicationInstanceCommand";
import {
  DescribeApplicationInstanceDetailsCommandInput,
  DescribeApplicationInstanceDetailsCommandOutput,
} from "./commands/DescribeApplicationInstanceDetailsCommand";
import {
  DescribeDeviceCommandInput,
  DescribeDeviceCommandOutput,
} from "./commands/DescribeDeviceCommand";
import {
  DescribeDeviceJobCommandInput,
  DescribeDeviceJobCommandOutput,
} from "./commands/DescribeDeviceJobCommand";
import {
  DescribeNodeCommandInput,
  DescribeNodeCommandOutput,
} from "./commands/DescribeNodeCommand";
import {
  DescribeNodeFromTemplateJobCommandInput,
  DescribeNodeFromTemplateJobCommandOutput,
} from "./commands/DescribeNodeFromTemplateJobCommand";
import {
  DescribePackageCommandInput,
  DescribePackageCommandOutput,
} from "./commands/DescribePackageCommand";
import {
  DescribePackageImportJobCommandInput,
  DescribePackageImportJobCommandOutput,
} from "./commands/DescribePackageImportJobCommand";
import {
  DescribePackageVersionCommandInput,
  DescribePackageVersionCommandOutput,
} from "./commands/DescribePackageVersionCommand";
import {
  ListApplicationInstanceDependenciesCommandInput,
  ListApplicationInstanceDependenciesCommandOutput,
} from "./commands/ListApplicationInstanceDependenciesCommand";
import {
  ListApplicationInstanceNodeInstancesCommandInput,
  ListApplicationInstanceNodeInstancesCommandOutput,
} from "./commands/ListApplicationInstanceNodeInstancesCommand";
import {
  ListApplicationInstancesCommandInput,
  ListApplicationInstancesCommandOutput,
} from "./commands/ListApplicationInstancesCommand";
import {
  ListDevicesCommandInput,
  ListDevicesCommandOutput,
} from "./commands/ListDevicesCommand";
import {
  ListDevicesJobsCommandInput,
  ListDevicesJobsCommandOutput,
} from "./commands/ListDevicesJobsCommand";
import {
  ListNodeFromTemplateJobsCommandInput,
  ListNodeFromTemplateJobsCommandOutput,
} from "./commands/ListNodeFromTemplateJobsCommand";
import {
  ListNodesCommandInput,
  ListNodesCommandOutput,
} from "./commands/ListNodesCommand";
import {
  ListPackageImportJobsCommandInput,
  ListPackageImportJobsCommandOutput,
} from "./commands/ListPackageImportJobsCommand";
import {
  ListPackagesCommandInput,
  ListPackagesCommandOutput,
} from "./commands/ListPackagesCommand";
import {
  ListTagsForResourceCommandInput,
  ListTagsForResourceCommandOutput,
} from "./commands/ListTagsForResourceCommand";
import {
  ProvisionDeviceCommandInput,
  ProvisionDeviceCommandOutput,
} from "./commands/ProvisionDeviceCommand";
import {
  RegisterPackageVersionCommandInput,
  RegisterPackageVersionCommandOutput,
} from "./commands/RegisterPackageVersionCommand";
import {
  RemoveApplicationInstanceCommandInput,
  RemoveApplicationInstanceCommandOutput,
} from "./commands/RemoveApplicationInstanceCommand";
import {
  SignalApplicationInstanceNodeInstancesCommandInput,
  SignalApplicationInstanceNodeInstancesCommandOutput,
} from "./commands/SignalApplicationInstanceNodeInstancesCommand";
import {
  TagResourceCommandInput,
  TagResourceCommandOutput,
} from "./commands/TagResourceCommand";
import {
  UntagResourceCommandInput,
  UntagResourceCommandOutput,
} from "./commands/UntagResourceCommand";
import {
  UpdateDeviceMetadataCommandInput,
  UpdateDeviceMetadataCommandOutput,
} from "./commands/UpdateDeviceMetadataCommand";
import {
  ClientInputEndpointParameters,
  ClientResolvedEndpointParameters,
  EndpointParameters,
} from "./endpoint/EndpointParameters";
import { RuntimeExtension, RuntimeExtensionsConfig } from "./runtimeExtensions";
export { __Client };
export type ServiceInputTypes =
  | CreateApplicationInstanceCommandInput
  | CreateJobForDevicesCommandInput
  | CreateNodeFromTemplateJobCommandInput
  | CreatePackageCommandInput
  | CreatePackageImportJobCommandInput
  | DeleteDeviceCommandInput
  | DeletePackageCommandInput
  | DeregisterPackageVersionCommandInput
  | DescribeApplicationInstanceCommandInput
  | DescribeApplicationInstanceDetailsCommandInput
  | DescribeDeviceCommandInput
  | DescribeDeviceJobCommandInput
  | DescribeNodeCommandInput
  | DescribeNodeFromTemplateJobCommandInput
  | DescribePackageCommandInput
  | DescribePackageImportJobCommandInput
  | DescribePackageVersionCommandInput
  | ListApplicationInstanceDependenciesCommandInput
  | ListApplicationInstanceNodeInstancesCommandInput
  | ListApplicationInstancesCommandInput
  | ListDevicesCommandInput
  | ListDevicesJobsCommandInput
  | ListNodeFromTemplateJobsCommandInput
  | ListNodesCommandInput
  | ListPackageImportJobsCommandInput
  | ListPackagesCommandInput
  | ListTagsForResourceCommandInput
  | ProvisionDeviceCommandInput
  | RegisterPackageVersionCommandInput
  | RemoveApplicationInstanceCommandInput
  | SignalApplicationInstanceNodeInstancesCommandInput
  | TagResourceCommandInput
  | UntagResourceCommandInput
  | UpdateDeviceMetadataCommandInput;
export type ServiceOutputTypes =
  | CreateApplicationInstanceCommandOutput
  | CreateJobForDevicesCommandOutput
  | CreateNodeFromTemplateJobCommandOutput
  | CreatePackageCommandOutput
  | CreatePackageImportJobCommandOutput
  | DeleteDeviceCommandOutput
  | DeletePackageCommandOutput
  | DeregisterPackageVersionCommandOutput
  | DescribeApplicationInstanceCommandOutput
  | DescribeApplicationInstanceDetailsCommandOutput
  | DescribeDeviceCommandOutput
  | DescribeDeviceJobCommandOutput
  | DescribeNodeCommandOutput
  | DescribeNodeFromTemplateJobCommandOutput
  | DescribePackageCommandOutput
  | DescribePackageImportJobCommandOutput
  | DescribePackageVersionCommandOutput
  | ListApplicationInstanceDependenciesCommandOutput
  | ListApplicationInstanceNodeInstancesCommandOutput
  | ListApplicationInstancesCommandOutput
  | ListDevicesCommandOutput
  | ListDevicesJobsCommandOutput
  | ListNodeFromTemplateJobsCommandOutput
  | ListNodesCommandOutput
  | ListPackageImportJobsCommandOutput
  | ListPackagesCommandOutput
  | ListTagsForResourceCommandOutput
  | ProvisionDeviceCommandOutput
  | RegisterPackageVersionCommandOutput
  | RemoveApplicationInstanceCommandOutput
  | SignalApplicationInstanceNodeInstancesCommandOutput
  | TagResourceCommandOutput
  | UntagResourceCommandOutput
  | UpdateDeviceMetadataCommandOutput;
export interface ClientDefaults
  extends Partial<__SmithyConfiguration<__HttpHandlerOptions>> {
  requestHandler?: __HttpHandlerUserInput;
  sha256?: __ChecksumConstructor | __HashConstructor;
  urlParser?: __UrlParser;
  bodyLengthChecker?: __BodyLengthCalculator;
  streamCollector?: __StreamCollector;
  base64Decoder?: __Decoder;
  base64Encoder?: __Encoder;
  utf8Decoder?: __Decoder;
  utf8Encoder?: __Encoder;
  runtime?: string;
  disableHostPrefix?: boolean;
  serviceId?: string;
  useDualstackEndpoint?: boolean | __Provider<boolean>;
  useFipsEndpoint?: boolean | __Provider<boolean>;
  defaultUserAgentProvider?: Provider<__UserAgent>;
  region?: string | __Provider<string>;
  credentialDefaultProvider?: (input: any) => AwsCredentialIdentityProvider;
  maxAttempts?: number | __Provider<number>;
  retryMode?: string | __Provider<string>;
  logger?: __Logger;
  extensions?: RuntimeExtension[];
  defaultsMode?: __DefaultsMode | __Provider<__DefaultsMode>;
}
export type PanoramaClientConfigType = Partial<
  __SmithyConfiguration<__HttpHandlerOptions>
> &
  ClientDefaults &
  RegionInputConfig &
  EndpointInputConfig<EndpointParameters> &
  RetryInputConfig &
  HostHeaderInputConfig &
  UserAgentInputConfig &
  HttpAuthSchemeInputConfig &
  ClientInputEndpointParameters;
export interface PanoramaClientConfig extends PanoramaClientConfigType {}
export type PanoramaClientResolvedConfigType =
  __SmithyResolvedConfiguration<__HttpHandlerOptions> &
    Required<ClientDefaults> &
    RuntimeExtensionsConfig &
    RegionResolvedConfig &
    EndpointResolvedConfig<EndpointParameters> &
    RetryResolvedConfig &
    HostHeaderResolvedConfig &
    UserAgentResolvedConfig &
    HttpAuthSchemeResolvedConfig &
    ClientResolvedEndpointParameters;
export interface PanoramaClientResolvedConfig
  extends PanoramaClientResolvedConfigType {}
export declare class PanoramaClient extends __Client<
  __HttpHandlerOptions,
  ServiceInputTypes,
  ServiceOutputTypes,
  PanoramaClientResolvedConfig
> {
  readonly config: PanoramaClientResolvedConfig;
  constructor(
    ...[configuration]: __CheckOptionalClientConfig<PanoramaClientConfig>
  );
  destroy(): void;
  private getDefaultHttpAuthSchemeParametersProvider;
  private getIdentityProviderConfigProvider;
}
