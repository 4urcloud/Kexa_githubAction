import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import { CreateNodeFromTemplateJobRequest, CreateNodeFromTemplateJobResponse } from "../models/models_0";
import { PanoramaClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../PanoramaClient";
/**
 * @public
 */
export { __MetadataBearer, $Command };
/**
 * @public
 *
 * The input for {@link CreateNodeFromTemplateJobCommand}.
 */
export interface CreateNodeFromTemplateJobCommandInput extends CreateNodeFromTemplateJobRequest {
}
/**
 * @public
 *
 * The output of {@link CreateNodeFromTemplateJobCommand}.
 */
export interface CreateNodeFromTemplateJobCommandOutput extends CreateNodeFromTemplateJobResponse, __MetadataBearer {
}
declare const CreateNodeFromTemplateJobCommand_base: {
    new (input: CreateNodeFromTemplateJobCommandInput): import("@smithy/smithy-client").CommandImpl<CreateNodeFromTemplateJobCommandInput, CreateNodeFromTemplateJobCommandOutput, PanoramaClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    new (__0_0: CreateNodeFromTemplateJobCommandInput): import("@smithy/smithy-client").CommandImpl<CreateNodeFromTemplateJobCommandInput, CreateNodeFromTemplateJobCommandOutput, PanoramaClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
/**
 * <p>Creates a camera stream node.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { PanoramaClient, CreateNodeFromTemplateJobCommand } from "@aws-sdk/client-panorama"; // ES Modules import
 * // const { PanoramaClient, CreateNodeFromTemplateJobCommand } = require("@aws-sdk/client-panorama"); // CommonJS import
 * const client = new PanoramaClient(config);
 * const input = { // CreateNodeFromTemplateJobRequest
 *   TemplateType: "STRING_VALUE", // required
 *   OutputPackageName: "STRING_VALUE", // required
 *   OutputPackageVersion: "STRING_VALUE", // required
 *   NodeName: "STRING_VALUE", // required
 *   NodeDescription: "STRING_VALUE",
 *   TemplateParameters: { // TemplateParametersMap // required
 *     "<keys>": "STRING_VALUE",
 *   },
 *   JobTags: [ // JobTagsList
 *     { // JobResourceTags
 *       ResourceType: "STRING_VALUE", // required
 *       Tags: { // TagMap // required
 *         "<keys>": "STRING_VALUE",
 *       },
 *     },
 *   ],
 * };
 * const command = new CreateNodeFromTemplateJobCommand(input);
 * const response = await client.send(command);
 * // { // CreateNodeFromTemplateJobResponse
 * //   JobId: "STRING_VALUE", // required
 * // };
 *
 * ```
 *
 * @param CreateNodeFromTemplateJobCommandInput - {@link CreateNodeFromTemplateJobCommandInput}
 * @returns {@link CreateNodeFromTemplateJobCommandOutput}
 * @see {@link CreateNodeFromTemplateJobCommandInput} for command's `input` shape.
 * @see {@link CreateNodeFromTemplateJobCommandOutput} for command's `response` shape.
 * @see {@link PanoramaClientResolvedConfig | config} for PanoramaClient's `config` shape.
 *
 * @throws {@link AccessDeniedException} (client fault)
 *  <p>The requestor does not have permission to access the target action or resource.</p>
 *
 * @throws {@link ConflictException} (client fault)
 *  <p>The target resource is in use.</p>
 *
 * @throws {@link InternalServerException} (server fault)
 *  <p>An internal error occurred.</p>
 *
 * @throws {@link ValidationException} (client fault)
 *  <p>The request contains an invalid parameter value.</p>
 *
 * @throws {@link PanoramaServiceException}
 * <p>Base exception class for all service exceptions from Panorama service.</p>
 *
 * @public
 */
export declare class CreateNodeFromTemplateJobCommand extends CreateNodeFromTemplateJobCommand_base {
}
