import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import { DescribePackageRequest, DescribePackageResponse } from "../models/models_0";
import { PanoramaClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../PanoramaClient";
/**
 * @public
 */
export { __MetadataBearer, $Command };
/**
 * @public
 *
 * The input for {@link DescribePackageCommand}.
 */
export interface DescribePackageCommandInput extends DescribePackageRequest {
}
/**
 * @public
 *
 * The output of {@link DescribePackageCommand}.
 */
export interface DescribePackageCommandOutput extends DescribePackageResponse, __MetadataBearer {
}
declare const DescribePackageCommand_base: {
    new (input: DescribePackageCommandInput): import("@smithy/smithy-client").CommandImpl<DescribePackageCommandInput, DescribePackageCommandOutput, PanoramaClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    new (__0_0: DescribePackageCommandInput): import("@smithy/smithy-client").CommandImpl<DescribePackageCommandInput, DescribePackageCommandOutput, PanoramaClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
/**
 * <p>Returns information about a package.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { PanoramaClient, DescribePackageCommand } from "@aws-sdk/client-panorama"; // ES Modules import
 * // const { PanoramaClient, DescribePackageCommand } = require("@aws-sdk/client-panorama"); // CommonJS import
 * const client = new PanoramaClient(config);
 * const input = { // DescribePackageRequest
 *   PackageId: "STRING_VALUE", // required
 * };
 * const command = new DescribePackageCommand(input);
 * const response = await client.send(command);
 * // { // DescribePackageResponse
 * //   PackageId: "STRING_VALUE", // required
 * //   PackageName: "STRING_VALUE", // required
 * //   Arn: "STRING_VALUE", // required
 * //   StorageLocation: { // StorageLocation
 * //     Bucket: "STRING_VALUE", // required
 * //     RepoPrefixLocation: "STRING_VALUE", // required
 * //     GeneratedPrefixLocation: "STRING_VALUE", // required
 * //     BinaryPrefixLocation: "STRING_VALUE", // required
 * //     ManifestPrefixLocation: "STRING_VALUE", // required
 * //   },
 * //   ReadAccessPrincipalArns: [ // PrincipalArnsList
 * //     "STRING_VALUE",
 * //   ],
 * //   WriteAccessPrincipalArns: [
 * //     "STRING_VALUE",
 * //   ],
 * //   CreatedTime: new Date("TIMESTAMP"), // required
 * //   Tags: { // TagMap // required
 * //     "<keys>": "STRING_VALUE",
 * //   },
 * // };
 *
 * ```
 *
 * @param DescribePackageCommandInput - {@link DescribePackageCommandInput}
 * @returns {@link DescribePackageCommandOutput}
 * @see {@link DescribePackageCommandInput} for command's `input` shape.
 * @see {@link DescribePackageCommandOutput} for command's `response` shape.
 * @see {@link PanoramaClientResolvedConfig | config} for PanoramaClient's `config` shape.
 *
 * @throws {@link AccessDeniedException} (client fault)
 *  <p>The requestor does not have permission to access the target action or resource.</p>
 *
 * @throws {@link ConflictException} (client fault)
 *  <p>The target resource is in use.</p>
 *
 * @throws {@link InternalServerException} (server fault)
 *  <p>An internal error occurred.</p>
 *
 * @throws {@link ResourceNotFoundException} (client fault)
 *  <p>The target resource was not found.</p>
 *
 * @throws {@link ValidationException} (client fault)
 *  <p>The request contains an invalid parameter value.</p>
 *
 * @throws {@link PanoramaServiceException}
 * <p>Base exception class for all service exceptions from Panorama service.</p>
 *
 * @public
 */
export declare class DescribePackageCommand extends DescribePackageCommand_base {
}
