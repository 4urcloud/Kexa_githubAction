import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { MacieServiceException as __BaseException } from "./MacieServiceException";
export declare class AccessDeniedException extends __BaseException {
  readonly name: "AccessDeniedException";
  readonly $fault: "client";
  resourceType?: string;
  constructor(
    opts: __ExceptionOptionType<AccessDeniedException, __BaseException>
  );
}
export interface AssociateMemberAccountRequest {
  memberAccountId: string | undefined;
}
export declare class InternalException extends __BaseException {
  readonly name: "InternalException";
  readonly $fault: "server";
  errorCode?: string;
  constructor(opts: __ExceptionOptionType<InternalException, __BaseException>);
}
export declare class InvalidInputException extends __BaseException {
  readonly name: "InvalidInputException";
  readonly $fault: "client";
  errorCode?: string;
  fieldName?: string;
  constructor(
    opts: __ExceptionOptionType<InvalidInputException, __BaseException>
  );
}
export declare class LimitExceededException extends __BaseException {
  readonly name: "LimitExceededException";
  readonly $fault: "client";
  errorCode?: string;
  resourceType?: string;
  constructor(
    opts: __ExceptionOptionType<LimitExceededException, __BaseException>
  );
}
export declare const S3ContinuousClassificationType: {
  readonly FULL: "FULL";
};
export type S3ContinuousClassificationType =
  (typeof S3ContinuousClassificationType)[keyof typeof S3ContinuousClassificationType];
export declare const S3OneTimeClassificationType: {
  readonly FULL: "FULL";
  readonly NONE: "NONE";
};
export type S3OneTimeClassificationType =
  (typeof S3OneTimeClassificationType)[keyof typeof S3OneTimeClassificationType];
export interface ClassificationType {
  oneTime: S3OneTimeClassificationType | undefined;
  continuous: S3ContinuousClassificationType | undefined;
}
export interface S3ResourceClassification {
  bucketName: string | undefined;
  prefix?: string;
  classificationType: ClassificationType | undefined;
}
export interface AssociateS3ResourcesRequest {
  memberAccountId?: string;
  s3Resources: S3ResourceClassification[] | undefined;
}
export interface S3Resource {
  bucketName: string | undefined;
  prefix?: string;
}
export interface FailedS3Resource {
  failedItem?: S3Resource;
  errorCode?: string;
  errorMessage?: string;
}
export interface AssociateS3ResourcesResult {
  failedS3Resources?: FailedS3Resource[];
}
export interface ClassificationTypeUpdate {
  oneTime?: S3OneTimeClassificationType;
  continuous?: S3ContinuousClassificationType;
}
export interface DisassociateMemberAccountRequest {
  memberAccountId: string | undefined;
}
export interface DisassociateS3ResourcesRequest {
  memberAccountId?: string;
  associatedS3Resources: S3Resource[] | undefined;
}
export interface DisassociateS3ResourcesResult {
  failedS3Resources?: FailedS3Resource[];
}
export interface ListMemberAccountsRequest {
  nextToken?: string;
  maxResults?: number;
}
export interface MemberAccount {
  accountId?: string;
}
export interface ListMemberAccountsResult {
  memberAccounts?: MemberAccount[];
  nextToken?: string;
}
export interface ListS3ResourcesRequest {
  memberAccountId?: string;
  nextToken?: string;
  maxResults?: number;
}
export interface ListS3ResourcesResult {
  s3Resources?: S3ResourceClassification[];
  nextToken?: string;
}
export interface S3ResourceClassificationUpdate {
  bucketName: string | undefined;
  prefix?: string;
  classificationTypeUpdate: ClassificationTypeUpdate | undefined;
}
export interface UpdateS3ResourcesRequest {
  memberAccountId?: string;
  s3ResourcesUpdate: S3ResourceClassificationUpdate[] | undefined;
}
export interface UpdateS3ResourcesResult {
  failedS3Resources?: FailedS3Resource[];
}
