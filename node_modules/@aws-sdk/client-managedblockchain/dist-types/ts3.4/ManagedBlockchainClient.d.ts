import {
  HostHeaderInputConfig,
  HostHeaderResolvedConfig,
} from "@aws-sdk/middleware-host-header";
import {
  UserAgentInputConfig,
  UserAgentResolvedConfig,
} from "@aws-sdk/middleware-user-agent";
import {
  RegionInputConfig,
  RegionResolvedConfig,
} from "@smithy/config-resolver";
import {
  EndpointInputConfig,
  EndpointResolvedConfig,
} from "@smithy/middleware-endpoint";
import {
  RetryInputConfig,
  RetryResolvedConfig,
} from "@smithy/middleware-retry";
import { HttpHandlerUserInput as __HttpHandlerUserInput } from "@smithy/protocol-http";
import {
  Client as __Client,
  DefaultsMode as __DefaultsMode,
  SmithyConfiguration as __SmithyConfiguration,
  SmithyResolvedConfiguration as __SmithyResolvedConfiguration,
} from "@smithy/smithy-client";
import {
  AwsCredentialIdentityProvider,
  BodyLengthCalculator as __BodyLengthCalculator,
  CheckOptionalClientConfig as __CheckOptionalClientConfig,
  ChecksumConstructor as __ChecksumConstructor,
  Decoder as __Decoder,
  Encoder as __Encoder,
  HashConstructor as __HashConstructor,
  HttpHandlerOptions as __HttpHandlerOptions,
  Logger as __Logger,
  Provider as __Provider,
  Provider,
  StreamCollector as __StreamCollector,
  UrlParser as __UrlParser,
  UserAgent as __UserAgent,
} from "@smithy/types";
import {
  HttpAuthSchemeInputConfig,
  HttpAuthSchemeResolvedConfig,
} from "./auth/httpAuthSchemeProvider";
import {
  CreateAccessorCommandInput,
  CreateAccessorCommandOutput,
} from "./commands/CreateAccessorCommand";
import {
  CreateMemberCommandInput,
  CreateMemberCommandOutput,
} from "./commands/CreateMemberCommand";
import {
  CreateNetworkCommandInput,
  CreateNetworkCommandOutput,
} from "./commands/CreateNetworkCommand";
import {
  CreateNodeCommandInput,
  CreateNodeCommandOutput,
} from "./commands/CreateNodeCommand";
import {
  CreateProposalCommandInput,
  CreateProposalCommandOutput,
} from "./commands/CreateProposalCommand";
import {
  DeleteAccessorCommandInput,
  DeleteAccessorCommandOutput,
} from "./commands/DeleteAccessorCommand";
import {
  DeleteMemberCommandInput,
  DeleteMemberCommandOutput,
} from "./commands/DeleteMemberCommand";
import {
  DeleteNodeCommandInput,
  DeleteNodeCommandOutput,
} from "./commands/DeleteNodeCommand";
import {
  GetAccessorCommandInput,
  GetAccessorCommandOutput,
} from "./commands/GetAccessorCommand";
import {
  GetMemberCommandInput,
  GetMemberCommandOutput,
} from "./commands/GetMemberCommand";
import {
  GetNetworkCommandInput,
  GetNetworkCommandOutput,
} from "./commands/GetNetworkCommand";
import {
  GetNodeCommandInput,
  GetNodeCommandOutput,
} from "./commands/GetNodeCommand";
import {
  GetProposalCommandInput,
  GetProposalCommandOutput,
} from "./commands/GetProposalCommand";
import {
  ListAccessorsCommandInput,
  ListAccessorsCommandOutput,
} from "./commands/ListAccessorsCommand";
import {
  ListInvitationsCommandInput,
  ListInvitationsCommandOutput,
} from "./commands/ListInvitationsCommand";
import {
  ListMembersCommandInput,
  ListMembersCommandOutput,
} from "./commands/ListMembersCommand";
import {
  ListNetworksCommandInput,
  ListNetworksCommandOutput,
} from "./commands/ListNetworksCommand";
import {
  ListNodesCommandInput,
  ListNodesCommandOutput,
} from "./commands/ListNodesCommand";
import {
  ListProposalsCommandInput,
  ListProposalsCommandOutput,
} from "./commands/ListProposalsCommand";
import {
  ListProposalVotesCommandInput,
  ListProposalVotesCommandOutput,
} from "./commands/ListProposalVotesCommand";
import {
  ListTagsForResourceCommandInput,
  ListTagsForResourceCommandOutput,
} from "./commands/ListTagsForResourceCommand";
import {
  RejectInvitationCommandInput,
  RejectInvitationCommandOutput,
} from "./commands/RejectInvitationCommand";
import {
  TagResourceCommandInput,
  TagResourceCommandOutput,
} from "./commands/TagResourceCommand";
import {
  UntagResourceCommandInput,
  UntagResourceCommandOutput,
} from "./commands/UntagResourceCommand";
import {
  UpdateMemberCommandInput,
  UpdateMemberCommandOutput,
} from "./commands/UpdateMemberCommand";
import {
  UpdateNodeCommandInput,
  UpdateNodeCommandOutput,
} from "./commands/UpdateNodeCommand";
import {
  VoteOnProposalCommandInput,
  VoteOnProposalCommandOutput,
} from "./commands/VoteOnProposalCommand";
import {
  ClientInputEndpointParameters,
  ClientResolvedEndpointParameters,
  EndpointParameters,
} from "./endpoint/EndpointParameters";
import { RuntimeExtension, RuntimeExtensionsConfig } from "./runtimeExtensions";
export { __Client };
export type ServiceInputTypes =
  | CreateAccessorCommandInput
  | CreateMemberCommandInput
  | CreateNetworkCommandInput
  | CreateNodeCommandInput
  | CreateProposalCommandInput
  | DeleteAccessorCommandInput
  | DeleteMemberCommandInput
  | DeleteNodeCommandInput
  | GetAccessorCommandInput
  | GetMemberCommandInput
  | GetNetworkCommandInput
  | GetNodeCommandInput
  | GetProposalCommandInput
  | ListAccessorsCommandInput
  | ListInvitationsCommandInput
  | ListMembersCommandInput
  | ListNetworksCommandInput
  | ListNodesCommandInput
  | ListProposalVotesCommandInput
  | ListProposalsCommandInput
  | ListTagsForResourceCommandInput
  | RejectInvitationCommandInput
  | TagResourceCommandInput
  | UntagResourceCommandInput
  | UpdateMemberCommandInput
  | UpdateNodeCommandInput
  | VoteOnProposalCommandInput;
export type ServiceOutputTypes =
  | CreateAccessorCommandOutput
  | CreateMemberCommandOutput
  | CreateNetworkCommandOutput
  | CreateNodeCommandOutput
  | CreateProposalCommandOutput
  | DeleteAccessorCommandOutput
  | DeleteMemberCommandOutput
  | DeleteNodeCommandOutput
  | GetAccessorCommandOutput
  | GetMemberCommandOutput
  | GetNetworkCommandOutput
  | GetNodeCommandOutput
  | GetProposalCommandOutput
  | ListAccessorsCommandOutput
  | ListInvitationsCommandOutput
  | ListMembersCommandOutput
  | ListNetworksCommandOutput
  | ListNodesCommandOutput
  | ListProposalVotesCommandOutput
  | ListProposalsCommandOutput
  | ListTagsForResourceCommandOutput
  | RejectInvitationCommandOutput
  | TagResourceCommandOutput
  | UntagResourceCommandOutput
  | UpdateMemberCommandOutput
  | UpdateNodeCommandOutput
  | VoteOnProposalCommandOutput;
export interface ClientDefaults
  extends Partial<__SmithyConfiguration<__HttpHandlerOptions>> {
  requestHandler?: __HttpHandlerUserInput;
  sha256?: __ChecksumConstructor | __HashConstructor;
  urlParser?: __UrlParser;
  bodyLengthChecker?: __BodyLengthCalculator;
  streamCollector?: __StreamCollector;
  base64Decoder?: __Decoder;
  base64Encoder?: __Encoder;
  utf8Decoder?: __Decoder;
  utf8Encoder?: __Encoder;
  runtime?: string;
  disableHostPrefix?: boolean;
  serviceId?: string;
  useDualstackEndpoint?: boolean | __Provider<boolean>;
  useFipsEndpoint?: boolean | __Provider<boolean>;
  defaultUserAgentProvider?: Provider<__UserAgent>;
  region?: string | __Provider<string>;
  credentialDefaultProvider?: (input: any) => AwsCredentialIdentityProvider;
  maxAttempts?: number | __Provider<number>;
  retryMode?: string | __Provider<string>;
  logger?: __Logger;
  extensions?: RuntimeExtension[];
  defaultsMode?: __DefaultsMode | __Provider<__DefaultsMode>;
}
export type ManagedBlockchainClientConfigType = Partial<
  __SmithyConfiguration<__HttpHandlerOptions>
> &
  ClientDefaults &
  RegionInputConfig &
  EndpointInputConfig<EndpointParameters> &
  RetryInputConfig &
  HostHeaderInputConfig &
  UserAgentInputConfig &
  HttpAuthSchemeInputConfig &
  ClientInputEndpointParameters;
export interface ManagedBlockchainClientConfig
  extends ManagedBlockchainClientConfigType {}
export type ManagedBlockchainClientResolvedConfigType =
  __SmithyResolvedConfiguration<__HttpHandlerOptions> &
    Required<ClientDefaults> &
    RuntimeExtensionsConfig &
    RegionResolvedConfig &
    EndpointResolvedConfig<EndpointParameters> &
    RetryResolvedConfig &
    HostHeaderResolvedConfig &
    UserAgentResolvedConfig &
    HttpAuthSchemeResolvedConfig &
    ClientResolvedEndpointParameters;
export interface ManagedBlockchainClientResolvedConfig
  extends ManagedBlockchainClientResolvedConfigType {}
export declare class ManagedBlockchainClient extends __Client<
  __HttpHandlerOptions,
  ServiceInputTypes,
  ServiceOutputTypes,
  ManagedBlockchainClientResolvedConfig
> {
  readonly config: ManagedBlockchainClientResolvedConfig;
  constructor(
    ...[
      configuration,
    ]: __CheckOptionalClientConfig<ManagedBlockchainClientConfig>
  );
  destroy(): void;
  private getDefaultHttpAuthSchemeParametersProvider;
  private getIdentityProviderConfigProvider;
}
