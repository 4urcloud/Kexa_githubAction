import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { ManagedBlockchainServiceException as __BaseException } from "./ManagedBlockchainServiceException";
export declare class AccessDeniedException extends __BaseException {
  readonly name: "AccessDeniedException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<AccessDeniedException, __BaseException>
  );
}
export declare const AccessorNetworkType: {
  readonly ETHEREUM_GOERLI: "ETHEREUM_GOERLI";
  readonly ETHEREUM_MAINNET: "ETHEREUM_MAINNET";
  readonly ETHEREUM_MAINNET_AND_GOERLI: "ETHEREUM_MAINNET_AND_GOERLI";
  readonly POLYGON_MAINNET: "POLYGON_MAINNET";
  readonly POLYGON_MUMBAI: "POLYGON_MUMBAI";
};
export type AccessorNetworkType =
  (typeof AccessorNetworkType)[keyof typeof AccessorNetworkType];
export declare const AccessorStatus: {
  readonly AVAILABLE: "AVAILABLE";
  readonly DELETED: "DELETED";
  readonly PENDING_DELETION: "PENDING_DELETION";
};
export type AccessorStatus =
  (typeof AccessorStatus)[keyof typeof AccessorStatus];
export declare const AccessorType: {
  readonly BILLING_TOKEN: "BILLING_TOKEN";
};
export type AccessorType = (typeof AccessorType)[keyof typeof AccessorType];
export interface Accessor {
  Id?: string;
  Type?: AccessorType;
  BillingToken?: string;
  Status?: AccessorStatus;
  CreationDate?: Date;
  Arn?: string;
  Tags?: Record<string, string>;
  NetworkType?: AccessorNetworkType;
}
export interface AccessorSummary {
  Id?: string;
  Type?: AccessorType;
  Status?: AccessorStatus;
  CreationDate?: Date;
  Arn?: string;
  NetworkType?: AccessorNetworkType;
}
export declare const ThresholdComparator: {
  readonly GREATER_THAN: "GREATER_THAN";
  readonly GREATER_THAN_OR_EQUAL_TO: "GREATER_THAN_OR_EQUAL_TO";
};
export type ThresholdComparator =
  (typeof ThresholdComparator)[keyof typeof ThresholdComparator];
export interface ApprovalThresholdPolicy {
  ThresholdPercentage?: number;
  ProposalDurationInHours?: number;
  ThresholdComparator?: ThresholdComparator;
}
export interface CreateAccessorInput {
  ClientRequestToken?: string;
  AccessorType: AccessorType | undefined;
  Tags?: Record<string, string>;
  NetworkType?: AccessorNetworkType;
}
export interface CreateAccessorOutput {
  AccessorId?: string;
  BillingToken?: string;
  NetworkType?: AccessorNetworkType;
}
export declare class InternalServiceErrorException extends __BaseException {
  readonly name: "InternalServiceErrorException";
  readonly $fault: "server";
  constructor(
    opts: __ExceptionOptionType<InternalServiceErrorException, __BaseException>
  );
}
export declare class InvalidRequestException extends __BaseException {
  readonly name: "InvalidRequestException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<InvalidRequestException, __BaseException>
  );
}
export declare class ResourceAlreadyExistsException extends __BaseException {
  readonly name: "ResourceAlreadyExistsException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ResourceAlreadyExistsException, __BaseException>
  );
}
export declare class ResourceLimitExceededException extends __BaseException {
  readonly name: "ResourceLimitExceededException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ResourceLimitExceededException, __BaseException>
  );
}
export declare class ThrottlingException extends __BaseException {
  readonly name: "ThrottlingException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ThrottlingException, __BaseException>
  );
}
export declare class TooManyTagsException extends __BaseException {
  readonly name: "TooManyTagsException";
  readonly $fault: "client";
  Message?: string;
  ResourceName?: string;
  constructor(
    opts: __ExceptionOptionType<TooManyTagsException, __BaseException>
  );
}
export interface MemberFabricConfiguration {
  AdminUsername: string | undefined;
  AdminPassword: string | undefined;
}
export interface MemberFrameworkConfiguration {
  Fabric?: MemberFabricConfiguration;
}
export interface LogConfiguration {
  Enabled?: boolean;
}
export interface LogConfigurations {
  Cloudwatch?: LogConfiguration;
}
export interface MemberFabricLogPublishingConfiguration {
  CaLogs?: LogConfigurations;
}
export interface MemberLogPublishingConfiguration {
  Fabric?: MemberFabricLogPublishingConfiguration;
}
export interface MemberConfiguration {
  Name: string | undefined;
  Description?: string;
  FrameworkConfiguration: MemberFrameworkConfiguration | undefined;
  LogPublishingConfiguration?: MemberLogPublishingConfiguration;
  Tags?: Record<string, string>;
  KmsKeyArn?: string;
}
export interface CreateMemberInput {
  ClientRequestToken?: string;
  InvitationId: string | undefined;
  NetworkId: string | undefined;
  MemberConfiguration: MemberConfiguration | undefined;
}
export interface CreateMemberOutput {
  MemberId?: string;
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  Message?: string;
  ResourceName?: string;
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export declare class ResourceNotReadyException extends __BaseException {
  readonly name: "ResourceNotReadyException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ResourceNotReadyException, __BaseException>
  );
}
export declare const Framework: {
  readonly ETHEREUM: "ETHEREUM";
  readonly HYPERLEDGER_FABRIC: "HYPERLEDGER_FABRIC";
};
export type Framework = (typeof Framework)[keyof typeof Framework];
export declare const Edition: {
  readonly STANDARD: "STANDARD";
  readonly STARTER: "STARTER";
};
export type Edition = (typeof Edition)[keyof typeof Edition];
export interface NetworkFabricConfiguration {
  Edition: Edition | undefined;
}
export interface NetworkFrameworkConfiguration {
  Fabric?: NetworkFabricConfiguration;
}
export interface VotingPolicy {
  ApprovalThresholdPolicy?: ApprovalThresholdPolicy;
}
export interface CreateNetworkInput {
  ClientRequestToken?: string;
  Name: string | undefined;
  Description?: string;
  Framework: Framework | undefined;
  FrameworkVersion: string | undefined;
  FrameworkConfiguration?: NetworkFrameworkConfiguration;
  VotingPolicy: VotingPolicy | undefined;
  MemberConfiguration: MemberConfiguration | undefined;
  Tags?: Record<string, string>;
}
export interface CreateNetworkOutput {
  NetworkId?: string;
  MemberId?: string;
}
export interface NodeFabricLogPublishingConfiguration {
  ChaincodeLogs?: LogConfigurations;
  PeerLogs?: LogConfigurations;
}
export interface NodeLogPublishingConfiguration {
  Fabric?: NodeFabricLogPublishingConfiguration;
}
export declare const StateDBType: {
  readonly CouchDB: "CouchDB";
  readonly LevelDB: "LevelDB";
};
export type StateDBType = (typeof StateDBType)[keyof typeof StateDBType];
export interface NodeConfiguration {
  InstanceType: string | undefined;
  AvailabilityZone?: string;
  LogPublishingConfiguration?: NodeLogPublishingConfiguration;
  StateDB?: StateDBType;
}
export interface CreateNodeInput {
  ClientRequestToken?: string;
  NetworkId: string | undefined;
  MemberId?: string;
  NodeConfiguration: NodeConfiguration | undefined;
  Tags?: Record<string, string>;
}
export interface CreateNodeOutput {
  NodeId?: string;
}
export interface InviteAction {
  Principal: string | undefined;
}
export interface RemoveAction {
  MemberId: string | undefined;
}
export interface ProposalActions {
  Invitations?: InviteAction[];
  Removals?: RemoveAction[];
}
export interface CreateProposalInput {
  ClientRequestToken?: string;
  NetworkId: string | undefined;
  MemberId: string | undefined;
  Actions: ProposalActions | undefined;
  Description?: string;
  Tags?: Record<string, string>;
}
export interface CreateProposalOutput {
  ProposalId?: string;
}
export interface DeleteAccessorInput {
  AccessorId: string | undefined;
}
export interface DeleteAccessorOutput {}
export interface DeleteMemberInput {
  NetworkId: string | undefined;
  MemberId: string | undefined;
}
export interface DeleteMemberOutput {}
export interface DeleteNodeInput {
  NetworkId: string | undefined;
  MemberId?: string;
  NodeId: string | undefined;
}
export interface DeleteNodeOutput {}
export interface GetAccessorInput {
  AccessorId: string | undefined;
}
export interface GetAccessorOutput {
  Accessor?: Accessor;
}
export interface GetMemberInput {
  NetworkId: string | undefined;
  MemberId: string | undefined;
}
export interface MemberFabricAttributes {
  AdminUsername?: string;
  CaEndpoint?: string;
}
export interface MemberFrameworkAttributes {
  Fabric?: MemberFabricAttributes;
}
export declare const MemberStatus: {
  readonly AVAILABLE: "AVAILABLE";
  readonly CREATE_FAILED: "CREATE_FAILED";
  readonly CREATING: "CREATING";
  readonly DELETED: "DELETED";
  readonly DELETING: "DELETING";
  readonly INACCESSIBLE_ENCRYPTION_KEY: "INACCESSIBLE_ENCRYPTION_KEY";
  readonly UPDATING: "UPDATING";
};
export type MemberStatus = (typeof MemberStatus)[keyof typeof MemberStatus];
export interface Member {
  NetworkId?: string;
  Id?: string;
  Name?: string;
  Description?: string;
  FrameworkAttributes?: MemberFrameworkAttributes;
  LogPublishingConfiguration?: MemberLogPublishingConfiguration;
  Status?: MemberStatus;
  CreationDate?: Date;
  Tags?: Record<string, string>;
  Arn?: string;
  KmsKeyArn?: string;
}
export interface GetMemberOutput {
  Member?: Member;
}
export interface GetNetworkInput {
  NetworkId: string | undefined;
}
export interface NetworkEthereumAttributes {
  ChainId?: string;
}
export interface NetworkFabricAttributes {
  OrderingServiceEndpoint?: string;
  Edition?: Edition;
}
export interface NetworkFrameworkAttributes {
  Fabric?: NetworkFabricAttributes;
  Ethereum?: NetworkEthereumAttributes;
}
export declare const NetworkStatus: {
  readonly AVAILABLE: "AVAILABLE";
  readonly CREATE_FAILED: "CREATE_FAILED";
  readonly CREATING: "CREATING";
  readonly DELETED: "DELETED";
  readonly DELETING: "DELETING";
};
export type NetworkStatus = (typeof NetworkStatus)[keyof typeof NetworkStatus];
export interface Network {
  Id?: string;
  Name?: string;
  Description?: string;
  Framework?: Framework;
  FrameworkVersion?: string;
  FrameworkAttributes?: NetworkFrameworkAttributes;
  VpcEndpointServiceName?: string;
  VotingPolicy?: VotingPolicy;
  Status?: NetworkStatus;
  CreationDate?: Date;
  Tags?: Record<string, string>;
  Arn?: string;
}
export interface GetNetworkOutput {
  Network?: Network;
}
export interface GetNodeInput {
  NetworkId: string | undefined;
  MemberId?: string;
  NodeId: string | undefined;
}
export interface NodeEthereumAttributes {
  HttpEndpoint?: string;
  WebSocketEndpoint?: string;
}
export interface NodeFabricAttributes {
  PeerEndpoint?: string;
  PeerEventEndpoint?: string;
}
export interface NodeFrameworkAttributes {
  Fabric?: NodeFabricAttributes;
  Ethereum?: NodeEthereumAttributes;
}
export declare const NodeStatus: {
  readonly AVAILABLE: "AVAILABLE";
  readonly CREATE_FAILED: "CREATE_FAILED";
  readonly CREATING: "CREATING";
  readonly DELETED: "DELETED";
  readonly DELETING: "DELETING";
  readonly FAILED: "FAILED";
  readonly INACCESSIBLE_ENCRYPTION_KEY: "INACCESSIBLE_ENCRYPTION_KEY";
  readonly UNHEALTHY: "UNHEALTHY";
  readonly UPDATING: "UPDATING";
};
export type NodeStatus = (typeof NodeStatus)[keyof typeof NodeStatus];
export interface Node {
  NetworkId?: string;
  MemberId?: string;
  Id?: string;
  InstanceType?: string;
  AvailabilityZone?: string;
  FrameworkAttributes?: NodeFrameworkAttributes;
  LogPublishingConfiguration?: NodeLogPublishingConfiguration;
  StateDB?: StateDBType;
  Status?: NodeStatus;
  CreationDate?: Date;
  Tags?: Record<string, string>;
  Arn?: string;
  KmsKeyArn?: string;
}
export interface GetNodeOutput {
  Node?: Node;
}
export interface GetProposalInput {
  NetworkId: string | undefined;
  ProposalId: string | undefined;
}
export declare const ProposalStatus: {
  readonly ACTION_FAILED: "ACTION_FAILED";
  readonly APPROVED: "APPROVED";
  readonly EXPIRED: "EXPIRED";
  readonly IN_PROGRESS: "IN_PROGRESS";
  readonly REJECTED: "REJECTED";
};
export type ProposalStatus =
  (typeof ProposalStatus)[keyof typeof ProposalStatus];
export interface Proposal {
  ProposalId?: string;
  NetworkId?: string;
  Description?: string;
  Actions?: ProposalActions;
  ProposedByMemberId?: string;
  ProposedByMemberName?: string;
  Status?: ProposalStatus;
  CreationDate?: Date;
  ExpirationDate?: Date;
  YesVoteCount?: number;
  NoVoteCount?: number;
  OutstandingVoteCount?: number;
  Tags?: Record<string, string>;
  Arn?: string;
}
export interface GetProposalOutput {
  Proposal?: Proposal;
}
export declare class IllegalActionException extends __BaseException {
  readonly name: "IllegalActionException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<IllegalActionException, __BaseException>
  );
}
export interface NetworkSummary {
  Id?: string;
  Name?: string;
  Description?: string;
  Framework?: Framework;
  FrameworkVersion?: string;
  Status?: NetworkStatus;
  CreationDate?: Date;
  Arn?: string;
}
export declare const InvitationStatus: {
  readonly ACCEPTED: "ACCEPTED";
  readonly ACCEPTING: "ACCEPTING";
  readonly EXPIRED: "EXPIRED";
  readonly PENDING: "PENDING";
  readonly REJECTED: "REJECTED";
};
export type InvitationStatus =
  (typeof InvitationStatus)[keyof typeof InvitationStatus];
export interface Invitation {
  InvitationId?: string;
  CreationDate?: Date;
  ExpirationDate?: Date;
  Status?: InvitationStatus;
  NetworkSummary?: NetworkSummary;
  Arn?: string;
}
export interface ListAccessorsInput {
  MaxResults?: number;
  NextToken?: string;
  NetworkType?: AccessorNetworkType;
}
export interface ListAccessorsOutput {
  Accessors?: AccessorSummary[];
  NextToken?: string;
}
export interface ListInvitationsInput {
  MaxResults?: number;
  NextToken?: string;
}
export interface ListInvitationsOutput {
  Invitations?: Invitation[];
  NextToken?: string;
}
export interface ListMembersInput {
  NetworkId: string | undefined;
  Name?: string;
  Status?: MemberStatus;
  IsOwned?: boolean;
  MaxResults?: number;
  NextToken?: string;
}
export interface MemberSummary {
  Id?: string;
  Name?: string;
  Description?: string;
  Status?: MemberStatus;
  CreationDate?: Date;
  IsOwned?: boolean;
  Arn?: string;
}
export interface ListMembersOutput {
  Members?: MemberSummary[];
  NextToken?: string;
}
export interface ListNetworksInput {
  Name?: string;
  Framework?: Framework;
  Status?: NetworkStatus;
  MaxResults?: number;
  NextToken?: string;
}
export interface ListNetworksOutput {
  Networks?: NetworkSummary[];
  NextToken?: string;
}
export interface ListNodesInput {
  NetworkId: string | undefined;
  MemberId?: string;
  Status?: NodeStatus;
  MaxResults?: number;
  NextToken?: string;
}
export interface NodeSummary {
  Id?: string;
  Status?: NodeStatus;
  CreationDate?: Date;
  AvailabilityZone?: string;
  InstanceType?: string;
  Arn?: string;
}
export interface ListNodesOutput {
  Nodes?: NodeSummary[];
  NextToken?: string;
}
export interface ListProposalsInput {
  NetworkId: string | undefined;
  MaxResults?: number;
  NextToken?: string;
}
export interface ProposalSummary {
  ProposalId?: string;
  Description?: string;
  ProposedByMemberId?: string;
  ProposedByMemberName?: string;
  Status?: ProposalStatus;
  CreationDate?: Date;
  ExpirationDate?: Date;
  Arn?: string;
}
export interface ListProposalsOutput {
  Proposals?: ProposalSummary[];
  NextToken?: string;
}
export interface ListProposalVotesInput {
  NetworkId: string | undefined;
  ProposalId: string | undefined;
  MaxResults?: number;
  NextToken?: string;
}
export declare const VoteValue: {
  readonly NO: "NO";
  readonly YES: "YES";
};
export type VoteValue = (typeof VoteValue)[keyof typeof VoteValue];
export interface VoteSummary {
  Vote?: VoteValue;
  MemberName?: string;
  MemberId?: string;
}
export interface ListProposalVotesOutput {
  ProposalVotes?: VoteSummary[];
  NextToken?: string;
}
export interface ListTagsForResourceRequest {
  ResourceArn: string | undefined;
}
export interface ListTagsForResourceResponse {
  Tags?: Record<string, string>;
}
export interface RejectInvitationInput {
  InvitationId: string | undefined;
}
export interface RejectInvitationOutput {}
export interface TagResourceRequest {
  ResourceArn: string | undefined;
  Tags: Record<string, string> | undefined;
}
export interface TagResourceResponse {}
export interface UntagResourceRequest {
  ResourceArn: string | undefined;
  TagKeys: string[] | undefined;
}
export interface UntagResourceResponse {}
export interface UpdateMemberInput {
  NetworkId: string | undefined;
  MemberId: string | undefined;
  LogPublishingConfiguration?: MemberLogPublishingConfiguration;
}
export interface UpdateMemberOutput {}
export interface UpdateNodeInput {
  NetworkId: string | undefined;
  MemberId?: string;
  NodeId: string | undefined;
  LogPublishingConfiguration?: NodeLogPublishingConfiguration;
}
export interface UpdateNodeOutput {}
export interface VoteOnProposalInput {
  NetworkId: string | undefined;
  ProposalId: string | undefined;
  VoterMemberId: string | undefined;
  Vote: VoteValue | undefined;
}
export interface VoteOnProposalOutput {}
export declare const MemberFabricConfigurationFilterSensitiveLog: (
  obj: MemberFabricConfiguration
) => any;
export declare const MemberFrameworkConfigurationFilterSensitiveLog: (
  obj: MemberFrameworkConfiguration
) => any;
export declare const MemberConfigurationFilterSensitiveLog: (
  obj: MemberConfiguration
) => any;
export declare const CreateMemberInputFilterSensitiveLog: (
  obj: CreateMemberInput
) => any;
export declare const CreateNetworkInputFilterSensitiveLog: (
  obj: CreateNetworkInput
) => any;
