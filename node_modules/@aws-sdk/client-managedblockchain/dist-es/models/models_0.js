import { SENSITIVE_STRING } from "@smithy/smithy-client";
import { ManagedBlockchainServiceException as __BaseException } from "./ManagedBlockchainServiceException";
export class AccessDeniedException extends __BaseException {
    constructor(opts) {
        super({
            name: "AccessDeniedException",
            $fault: "client",
            ...opts,
        });
        this.name = "AccessDeniedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, AccessDeniedException.prototype);
        this.Message = opts.Message;
    }
}
export const AccessorNetworkType = {
    ETHEREUM_GOERLI: "ETHEREUM_GOERLI",
    ETHEREUM_MAINNET: "ETHEREUM_MAINNET",
    ETHEREUM_MAINNET_AND_GOERLI: "ETHEREUM_MAINNET_AND_GOERLI",
    POLYGON_MAINNET: "POLYGON_MAINNET",
    POLYGON_MUMBAI: "POLYGON_MUMBAI",
};
export const AccessorStatus = {
    AVAILABLE: "AVAILABLE",
    DELETED: "DELETED",
    PENDING_DELETION: "PENDING_DELETION",
};
export const AccessorType = {
    BILLING_TOKEN: "BILLING_TOKEN",
};
export const ThresholdComparator = {
    GREATER_THAN: "GREATER_THAN",
    GREATER_THAN_OR_EQUAL_TO: "GREATER_THAN_OR_EQUAL_TO",
};
export class InternalServiceErrorException extends __BaseException {
    constructor(opts) {
        super({
            name: "InternalServiceErrorException",
            $fault: "server",
            ...opts,
        });
        this.name = "InternalServiceErrorException";
        this.$fault = "server";
        Object.setPrototypeOf(this, InternalServiceErrorException.prototype);
    }
}
export class InvalidRequestException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidRequestException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidRequestException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidRequestException.prototype);
        this.Message = opts.Message;
    }
}
export class ResourceAlreadyExistsException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceAlreadyExistsException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceAlreadyExistsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceAlreadyExistsException.prototype);
        this.Message = opts.Message;
    }
}
export class ResourceLimitExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceLimitExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceLimitExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceLimitExceededException.prototype);
        this.Message = opts.Message;
    }
}
export class ThrottlingException extends __BaseException {
    constructor(opts) {
        super({
            name: "ThrottlingException",
            $fault: "client",
            ...opts,
        });
        this.name = "ThrottlingException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ThrottlingException.prototype);
    }
}
export class TooManyTagsException extends __BaseException {
    constructor(opts) {
        super({
            name: "TooManyTagsException",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyTagsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyTagsException.prototype);
        this.Message = opts.Message;
        this.ResourceName = opts.ResourceName;
    }
}
export class ResourceNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
        this.Message = opts.Message;
        this.ResourceName = opts.ResourceName;
    }
}
export class ResourceNotReadyException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceNotReadyException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotReadyException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotReadyException.prototype);
        this.Message = opts.Message;
    }
}
export const Framework = {
    ETHEREUM: "ETHEREUM",
    HYPERLEDGER_FABRIC: "HYPERLEDGER_FABRIC",
};
export const Edition = {
    STANDARD: "STANDARD",
    STARTER: "STARTER",
};
export const StateDBType = {
    CouchDB: "CouchDB",
    LevelDB: "LevelDB",
};
export const MemberStatus = {
    AVAILABLE: "AVAILABLE",
    CREATE_FAILED: "CREATE_FAILED",
    CREATING: "CREATING",
    DELETED: "DELETED",
    DELETING: "DELETING",
    INACCESSIBLE_ENCRYPTION_KEY: "INACCESSIBLE_ENCRYPTION_KEY",
    UPDATING: "UPDATING",
};
export const NetworkStatus = {
    AVAILABLE: "AVAILABLE",
    CREATE_FAILED: "CREATE_FAILED",
    CREATING: "CREATING",
    DELETED: "DELETED",
    DELETING: "DELETING",
};
export const NodeStatus = {
    AVAILABLE: "AVAILABLE",
    CREATE_FAILED: "CREATE_FAILED",
    CREATING: "CREATING",
    DELETED: "DELETED",
    DELETING: "DELETING",
    FAILED: "FAILED",
    INACCESSIBLE_ENCRYPTION_KEY: "INACCESSIBLE_ENCRYPTION_KEY",
    UNHEALTHY: "UNHEALTHY",
    UPDATING: "UPDATING",
};
export const ProposalStatus = {
    ACTION_FAILED: "ACTION_FAILED",
    APPROVED: "APPROVED",
    EXPIRED: "EXPIRED",
    IN_PROGRESS: "IN_PROGRESS",
    REJECTED: "REJECTED",
};
export class IllegalActionException extends __BaseException {
    constructor(opts) {
        super({
            name: "IllegalActionException",
            $fault: "client",
            ...opts,
        });
        this.name = "IllegalActionException";
        this.$fault = "client";
        Object.setPrototypeOf(this, IllegalActionException.prototype);
        this.Message = opts.Message;
    }
}
export const InvitationStatus = {
    ACCEPTED: "ACCEPTED",
    ACCEPTING: "ACCEPTING",
    EXPIRED: "EXPIRED",
    PENDING: "PENDING",
    REJECTED: "REJECTED",
};
export const VoteValue = {
    NO: "NO",
    YES: "YES",
};
export const MemberFabricConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.AdminPassword && { AdminPassword: SENSITIVE_STRING }),
});
export const MemberFrameworkConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Fabric && { Fabric: MemberFabricConfigurationFilterSensitiveLog(obj.Fabric) }),
});
export const MemberConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.FrameworkConfiguration && {
        FrameworkConfiguration: MemberFrameworkConfigurationFilterSensitiveLog(obj.FrameworkConfiguration),
    }),
});
export const CreateMemberInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.MemberConfiguration && {
        MemberConfiguration: MemberConfigurationFilterSensitiveLog(obj.MemberConfiguration),
    }),
});
export const CreateNetworkInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.MemberConfiguration && {
        MemberConfiguration: MemberConfigurationFilterSensitiveLog(obj.MemberConfiguration),
    }),
});
