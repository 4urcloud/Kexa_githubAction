import { KinesisVideoSignalingServiceException as __BaseException } from "./KinesisVideoSignalingServiceException";
export class ClientLimitExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "ClientLimitExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "ClientLimitExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ClientLimitExceededException.prototype);
        this.Message = opts.Message;
    }
}
export const Service = {
    TURN: "TURN",
};
export class InvalidArgumentException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidArgumentException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidArgumentException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidArgumentException.prototype);
        this.Message = opts.Message;
    }
}
export class InvalidClientException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidClientException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidClientException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidClientException.prototype);
    }
}
export class NotAuthorizedException extends __BaseException {
    constructor(opts) {
        super({
            name: "NotAuthorizedException",
            $fault: "client",
            ...opts,
        });
        this.name = "NotAuthorizedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, NotAuthorizedException.prototype);
        this.Message = opts.Message;
    }
}
export class ResourceNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
        this.Message = opts.Message;
    }
}
export class SessionExpiredException extends __BaseException {
    constructor(opts) {
        super({
            name: "SessionExpiredException",
            $fault: "client",
            ...opts,
        });
        this.name = "SessionExpiredException";
        this.$fault = "client";
        Object.setPrototypeOf(this, SessionExpiredException.prototype);
    }
}
