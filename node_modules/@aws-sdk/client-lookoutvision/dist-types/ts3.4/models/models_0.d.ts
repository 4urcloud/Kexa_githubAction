import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { StreamingBlobTypes } from "@smithy/types";
import { LookoutVisionServiceException as __BaseException } from "./LookoutVisionServiceException";
export declare class AccessDeniedException extends __BaseException {
  readonly name: "AccessDeniedException";
  readonly $fault: "client";
  Message: string | undefined;
  constructor(
    opts: __ExceptionOptionType<AccessDeniedException, __BaseException>
  );
}
export interface PixelAnomaly {
  TotalPercentageArea?: number;
  Color?: string;
}
export interface Anomaly {
  Name?: string;
  PixelAnomaly?: PixelAnomaly;
}
export declare const ResourceType: {
  readonly DATASET: "DATASET";
  readonly MODEL: "MODEL";
  readonly MODEL_PACKAGE_JOB: "MODEL_PACKAGE_JOB";
  readonly PROJECT: "PROJECT";
  readonly TRIAL: "TRIAL";
};
export type ResourceType = (typeof ResourceType)[keyof typeof ResourceType];
export declare class ConflictException extends __BaseException {
  readonly name: "ConflictException";
  readonly $fault: "client";
  Message: string | undefined;
  ResourceId: string | undefined;
  ResourceType: ResourceType | undefined;
  constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
}
export interface InputS3Object {
  Bucket: string | undefined;
  Key: string | undefined;
  VersionId?: string;
}
export interface DatasetGroundTruthManifest {
  S3Object?: InputS3Object;
}
export interface DatasetSource {
  GroundTruthManifest?: DatasetGroundTruthManifest;
}
export interface CreateDatasetRequest {
  ProjectName: string | undefined;
  DatasetType: string | undefined;
  DatasetSource?: DatasetSource;
  ClientToken?: string;
}
export declare const DatasetStatus: {
  readonly CREATE_COMPLETE: "CREATE_COMPLETE";
  readonly CREATE_FAILED: "CREATE_FAILED";
  readonly CREATE_IN_PROGRESS: "CREATE_IN_PROGRESS";
  readonly DELETE_COMPLETE: "DELETE_COMPLETE";
  readonly DELETE_FAILED: "DELETE_FAILED";
  readonly DELETE_IN_PROGRESS: "DELETE_IN_PROGRESS";
  readonly UPDATE_COMPLETE: "UPDATE_COMPLETE";
  readonly UPDATE_FAILED_ROLLBACK_COMPLETE: "UPDATE_FAILED_ROLLBACK_COMPLETE";
  readonly UPDATE_FAILED_ROLLBACK_IN_PROGRESS: "UPDATE_FAILED_ROLLBACK_IN_PROGRESS";
  readonly UPDATE_IN_PROGRESS: "UPDATE_IN_PROGRESS";
};
export type DatasetStatus = (typeof DatasetStatus)[keyof typeof DatasetStatus];
export interface DatasetMetadata {
  DatasetType?: string;
  CreationTimestamp?: Date;
  Status?: DatasetStatus;
  StatusMessage?: string;
}
export interface CreateDatasetResponse {
  DatasetMetadata?: DatasetMetadata;
}
export declare class InternalServerException extends __BaseException {
  readonly name: "InternalServerException";
  readonly $fault: "server";
  Message: string | undefined;
  RetryAfterSeconds?: number;
  constructor(
    opts: __ExceptionOptionType<InternalServerException, __BaseException>
  );
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  Message: string | undefined;
  ResourceId: string | undefined;
  ResourceType: ResourceType | undefined;
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export declare class ServiceQuotaExceededException extends __BaseException {
  readonly name: "ServiceQuotaExceededException";
  readonly $fault: "client";
  Message: string | undefined;
  ResourceId?: string;
  ResourceType?: ResourceType;
  QuotaCode: string | undefined;
  ServiceCode: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ServiceQuotaExceededException, __BaseException>
  );
}
export declare class ThrottlingException extends __BaseException {
  readonly name: "ThrottlingException";
  readonly $fault: "client";
  Message: string | undefined;
  QuotaCode?: string;
  ServiceCode?: string;
  RetryAfterSeconds?: number;
  constructor(
    opts: __ExceptionOptionType<ThrottlingException, __BaseException>
  );
}
export declare class ValidationException extends __BaseException {
  readonly name: "ValidationException";
  readonly $fault: "client";
  Message: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ValidationException, __BaseException>
  );
}
export interface S3Location {
  Bucket: string | undefined;
  Prefix?: string;
}
export interface OutputConfig {
  S3Location: S3Location | undefined;
}
export interface Tag {
  Key: string | undefined;
  Value: string | undefined;
}
export interface CreateModelRequest {
  ProjectName: string | undefined;
  Description?: string;
  ClientToken?: string;
  OutputConfig: OutputConfig | undefined;
  KmsKeyId?: string;
  Tags?: Tag[];
}
export interface ModelPerformance {
  F1Score?: number;
  Recall?: number;
  Precision?: number;
}
export declare const ModelStatus: {
  readonly DELETING: "DELETING";
  readonly HOSTED: "HOSTED";
  readonly HOSTING_FAILED: "HOSTING_FAILED";
  readonly STARTING_HOSTING: "STARTING_HOSTING";
  readonly STOPPING_HOSTING: "STOPPING_HOSTING";
  readonly SYSTEM_UPDATING: "SYSTEM_UPDATING";
  readonly TRAINED: "TRAINED";
  readonly TRAINING: "TRAINING";
  readonly TRAINING_FAILED: "TRAINING_FAILED";
};
export type ModelStatus = (typeof ModelStatus)[keyof typeof ModelStatus];
export interface ModelMetadata {
  CreationTimestamp?: Date;
  ModelVersion?: string;
  ModelArn?: string;
  Description?: string;
  Status?: ModelStatus;
  StatusMessage?: string;
  Performance?: ModelPerformance;
}
export interface CreateModelResponse {
  ModelMetadata?: ModelMetadata;
}
export interface CreateProjectRequest {
  ProjectName: string | undefined;
  ClientToken?: string;
}
export interface ProjectMetadata {
  ProjectArn?: string;
  ProjectName?: string;
  CreationTimestamp?: Date;
}
export interface CreateProjectResponse {
  ProjectMetadata?: ProjectMetadata;
}
export interface DatasetImageStats {
  Total?: number;
  Labeled?: number;
  Normal?: number;
  Anomaly?: number;
}
export interface DatasetDescription {
  ProjectName?: string;
  DatasetType?: string;
  CreationTimestamp?: Date;
  LastUpdatedTimestamp?: Date;
  Status?: DatasetStatus;
  StatusMessage?: string;
  ImageStats?: DatasetImageStats;
}
export interface DeleteDatasetRequest {
  ProjectName: string | undefined;
  DatasetType: string | undefined;
  ClientToken?: string;
}
export interface DeleteDatasetResponse {}
export interface DeleteModelRequest {
  ProjectName: string | undefined;
  ModelVersion: string | undefined;
  ClientToken?: string;
}
export interface DeleteModelResponse {
  ModelArn?: string;
}
export interface DeleteProjectRequest {
  ProjectName: string | undefined;
  ClientToken?: string;
}
export interface DeleteProjectResponse {
  ProjectArn?: string;
}
export interface DescribeDatasetRequest {
  ProjectName: string | undefined;
  DatasetType: string | undefined;
}
export interface DescribeDatasetResponse {
  DatasetDescription?: DatasetDescription;
}
export interface DescribeModelRequest {
  ProjectName: string | undefined;
  ModelVersion: string | undefined;
}
export interface OutputS3Object {
  Bucket: string | undefined;
  Key: string | undefined;
}
export interface ModelDescription {
  ModelVersion?: string;
  ModelArn?: string;
  CreationTimestamp?: Date;
  Description?: string;
  Status?: ModelStatus;
  StatusMessage?: string;
  Performance?: ModelPerformance;
  OutputConfig?: OutputConfig;
  EvaluationManifest?: OutputS3Object;
  EvaluationResult?: OutputS3Object;
  EvaluationEndTimestamp?: Date;
  KmsKeyId?: string;
  MinInferenceUnits?: number;
  MaxInferenceUnits?: number;
}
export interface DescribeModelResponse {
  ModelDescription?: ModelDescription;
}
export interface DescribeModelPackagingJobRequest {
  ProjectName: string | undefined;
  JobName: string | undefined;
}
export declare const TargetDevice: {
  readonly JETSON_XAVIER: "jetson_xavier";
};
export type TargetDevice = (typeof TargetDevice)[keyof typeof TargetDevice];
export declare const TargetPlatformAccelerator: {
  readonly NVIDIA: "NVIDIA";
};
export type TargetPlatformAccelerator =
  (typeof TargetPlatformAccelerator)[keyof typeof TargetPlatformAccelerator];
export declare const TargetPlatformArch: {
  readonly ARM64: "ARM64";
  readonly X86_64: "X86_64";
};
export type TargetPlatformArch =
  (typeof TargetPlatformArch)[keyof typeof TargetPlatformArch];
export declare const TargetPlatformOs: {
  readonly LINUX: "LINUX";
};
export type TargetPlatformOs =
  (typeof TargetPlatformOs)[keyof typeof TargetPlatformOs];
export interface TargetPlatform {
  Os: TargetPlatformOs | undefined;
  Arch: TargetPlatformArch | undefined;
  Accelerator?: TargetPlatformAccelerator;
}
export interface GreengrassConfiguration {
  CompilerOptions?: string;
  TargetDevice?: TargetDevice;
  TargetPlatform?: TargetPlatform;
  S3OutputLocation: S3Location | undefined;
  ComponentName: string | undefined;
  ComponentVersion?: string;
  ComponentDescription?: string;
  Tags?: Tag[];
}
export interface ModelPackagingConfiguration {
  Greengrass: GreengrassConfiguration | undefined;
}
export interface GreengrassOutputDetails {
  ComponentVersionArn?: string;
  ComponentName?: string;
  ComponentVersion?: string;
}
export interface ModelPackagingOutputDetails {
  Greengrass?: GreengrassOutputDetails;
}
export declare const ModelPackagingJobStatus: {
  readonly CREATED: "CREATED";
  readonly FAILED: "FAILED";
  readonly RUNNING: "RUNNING";
  readonly SUCCEEDED: "SUCCEEDED";
};
export type ModelPackagingJobStatus =
  (typeof ModelPackagingJobStatus)[keyof typeof ModelPackagingJobStatus];
export interface ModelPackagingDescription {
  JobName?: string;
  ProjectName?: string;
  ModelVersion?: string;
  ModelPackagingConfiguration?: ModelPackagingConfiguration;
  ModelPackagingJobDescription?: string;
  ModelPackagingMethod?: string;
  ModelPackagingOutputDetails?: ModelPackagingOutputDetails;
  Status?: ModelPackagingJobStatus;
  StatusMessage?: string;
  CreationTimestamp?: Date;
  LastUpdatedTimestamp?: Date;
}
export interface DescribeModelPackagingJobResponse {
  ModelPackagingDescription?: ModelPackagingDescription;
}
export interface DescribeProjectRequest {
  ProjectName: string | undefined;
}
export interface ProjectDescription {
  ProjectArn?: string;
  ProjectName?: string;
  CreationTimestamp?: Date;
  Datasets?: DatasetMetadata[];
}
export interface DescribeProjectResponse {
  ProjectDescription?: ProjectDescription;
}
export interface DetectAnomaliesRequest {
  ProjectName: string | undefined;
  ModelVersion: string | undefined;
  Body: StreamingBlobTypes | undefined;
  ContentType: string | undefined;
}
export interface ImageSource {
  Type?: string;
}
export interface DetectAnomalyResult {
  Source?: ImageSource;
  IsAnomalous?: boolean;
  Confidence?: number;
  Anomalies?: Anomaly[];
  AnomalyMask?: Uint8Array;
}
export interface DetectAnomaliesResponse {
  DetectAnomalyResult?: DetectAnomalyResult;
}
export interface ListDatasetEntriesRequest {
  ProjectName: string | undefined;
  DatasetType: string | undefined;
  Labeled?: boolean;
  AnomalyClass?: string;
  BeforeCreationDate?: Date;
  AfterCreationDate?: Date;
  NextToken?: string;
  MaxResults?: number;
  SourceRefContains?: string;
}
export interface ListDatasetEntriesResponse {
  DatasetEntries?: string[];
  NextToken?: string;
}
export interface ListModelPackagingJobsRequest {
  ProjectName: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface ModelPackagingJobMetadata {
  JobName?: string;
  ProjectName?: string;
  ModelVersion?: string;
  ModelPackagingJobDescription?: string;
  ModelPackagingMethod?: string;
  Status?: ModelPackagingJobStatus;
  StatusMessage?: string;
  CreationTimestamp?: Date;
  LastUpdatedTimestamp?: Date;
}
export interface ListModelPackagingJobsResponse {
  ModelPackagingJobs?: ModelPackagingJobMetadata[];
  NextToken?: string;
}
export interface ListModelsRequest {
  ProjectName: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListModelsResponse {
  Models?: ModelMetadata[];
  NextToken?: string;
}
export interface ListProjectsRequest {
  NextToken?: string;
  MaxResults?: number;
}
export interface ListProjectsResponse {
  Projects?: ProjectMetadata[];
  NextToken?: string;
}
export interface ListTagsForResourceRequest {
  ResourceArn: string | undefined;
}
export interface ListTagsForResourceResponse {
  Tags?: Tag[];
}
export interface StartModelRequest {
  ProjectName: string | undefined;
  ModelVersion: string | undefined;
  MinInferenceUnits: number | undefined;
  ClientToken?: string;
  MaxInferenceUnits?: number;
}
export declare const ModelHostingStatus: {
  readonly HOSTED: "HOSTED";
  readonly HOSTING_FAILED: "HOSTING_FAILED";
  readonly STARTING_HOSTING: "STARTING_HOSTING";
  readonly STOPPING_HOSTING: "STOPPING_HOSTING";
  readonly SYSTEM_UPDATING: "SYSTEM_UPDATING";
};
export type ModelHostingStatus =
  (typeof ModelHostingStatus)[keyof typeof ModelHostingStatus];
export interface StartModelResponse {
  Status?: ModelHostingStatus;
}
export interface StartModelPackagingJobRequest {
  ProjectName: string | undefined;
  ModelVersion: string | undefined;
  JobName?: string;
  Configuration: ModelPackagingConfiguration | undefined;
  Description?: string;
  ClientToken?: string;
}
export interface StartModelPackagingJobResponse {
  JobName?: string;
}
export interface StopModelRequest {
  ProjectName: string | undefined;
  ModelVersion: string | undefined;
  ClientToken?: string;
}
export interface StopModelResponse {
  Status?: ModelHostingStatus;
}
export interface TagResourceRequest {
  ResourceArn: string | undefined;
  Tags: Tag[] | undefined;
}
export interface TagResourceResponse {}
export interface UntagResourceRequest {
  ResourceArn: string | undefined;
  TagKeys: string[] | undefined;
}
export interface UntagResourceResponse {}
export interface UpdateDatasetEntriesRequest {
  ProjectName: string | undefined;
  DatasetType: string | undefined;
  Changes: Uint8Array | undefined;
  ClientToken?: string;
}
export interface UpdateDatasetEntriesResponse {
  Status?: DatasetStatus;
}
export declare const DetectAnomaliesRequestFilterSensitiveLog: (
  obj: DetectAnomaliesRequest
) => any;
