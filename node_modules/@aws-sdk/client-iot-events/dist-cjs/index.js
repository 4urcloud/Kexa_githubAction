"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  AlarmModelVersionStatus: () => AlarmModelVersionStatus,
  AnalysisResultLevel: () => AnalysisResultLevel,
  AnalysisStatus: () => AnalysisStatus,
  ComparisonOperator: () => ComparisonOperator,
  CreateAlarmModelCommand: () => CreateAlarmModelCommand,
  CreateDetectorModelCommand: () => CreateDetectorModelCommand,
  CreateInputCommand: () => CreateInputCommand,
  DeleteAlarmModelCommand: () => DeleteAlarmModelCommand,
  DeleteDetectorModelCommand: () => DeleteDetectorModelCommand,
  DeleteInputCommand: () => DeleteInputCommand,
  DescribeAlarmModelCommand: () => DescribeAlarmModelCommand,
  DescribeDetectorModelAnalysisCommand: () => DescribeDetectorModelAnalysisCommand,
  DescribeDetectorModelCommand: () => DescribeDetectorModelCommand,
  DescribeInputCommand: () => DescribeInputCommand,
  DescribeLoggingOptionsCommand: () => DescribeLoggingOptionsCommand,
  DetectorModelVersionStatus: () => DetectorModelVersionStatus,
  EvaluationMethod: () => EvaluationMethod,
  GetDetectorModelAnalysisResultsCommand: () => GetDetectorModelAnalysisResultsCommand,
  InputStatus: () => InputStatus,
  InternalFailureException: () => InternalFailureException,
  InvalidRequestException: () => InvalidRequestException,
  IoTEvents: () => IoTEvents,
  IoTEventsClient: () => IoTEventsClient,
  IoTEventsServiceException: () => IoTEventsServiceException,
  LimitExceededException: () => LimitExceededException,
  ListAlarmModelVersionsCommand: () => ListAlarmModelVersionsCommand,
  ListAlarmModelsCommand: () => ListAlarmModelsCommand,
  ListDetectorModelVersionsCommand: () => ListDetectorModelVersionsCommand,
  ListDetectorModelsCommand: () => ListDetectorModelsCommand,
  ListInputRoutingsCommand: () => ListInputRoutingsCommand,
  ListInputsCommand: () => ListInputsCommand,
  ListTagsForResourceCommand: () => ListTagsForResourceCommand,
  LoggingLevel: () => LoggingLevel,
  PayloadType: () => PayloadType,
  PutLoggingOptionsCommand: () => PutLoggingOptionsCommand,
  ResourceAlreadyExistsException: () => ResourceAlreadyExistsException,
  ResourceInUseException: () => ResourceInUseException,
  ResourceNotFoundException: () => ResourceNotFoundException,
  ServiceUnavailableException: () => ServiceUnavailableException,
  StartDetectorModelAnalysisCommand: () => StartDetectorModelAnalysisCommand,
  TagResourceCommand: () => TagResourceCommand,
  ThrottlingException: () => ThrottlingException,
  UnsupportedOperationException: () => UnsupportedOperationException,
  UntagResourceCommand: () => UntagResourceCommand,
  UpdateAlarmModelCommand: () => UpdateAlarmModelCommand,
  UpdateDetectorModelCommand: () => UpdateDetectorModelCommand,
  UpdateInputCommand: () => UpdateInputCommand,
  __Client: () => import_smithy_client.Client
});
module.exports = __toCommonJS(src_exports);

// src/IoTEventsClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return {
    ...options,
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "iotevents"
  };
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/IoTEventsClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var asPartial = /* @__PURE__ */ __name((t) => t, "asPartial");
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = {
    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),
    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
  };
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return {
    ...runtimeConfig,
    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
  };
}, "resolveRuntimeExtensions");

// src/IoTEventsClient.ts
var _IoTEventsClient = class _IoTEventsClient extends import_smithy_client.Client {
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_config_resolver.resolveRegionConfig)(_config_1);
    const _config_3 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_2);
    const _config_4 = (0, import_middleware_retry.resolveRetryConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, (configuration == null ? void 0 : configuration.extensions) || []);
    super(_config_8);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),
        identityProviderConfigProvider: this.getIdentityProviderConfigProvider()
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
  getDefaultHttpAuthSchemeParametersProvider() {
    return import_httpAuthSchemeProvider.defaultIoTEventsHttpAuthSchemeParametersProvider;
  }
  getIdentityProviderConfigProvider() {
    return async (config) => new import_core.DefaultIdentityProviderConfig({
      "aws.auth#sigv4": config.credentials
    });
  }
};
__name(_IoTEventsClient, "IoTEventsClient");
var IoTEventsClient = _IoTEventsClient;

// src/IoTEvents.ts


// src/commands/CreateAlarmModelCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");

var import_types = require("@smithy/types");

// src/protocols/Aws_restJson1.ts



// src/models/IoTEventsServiceException.ts

var _IoTEventsServiceException = class _IoTEventsServiceException extends import_smithy_client.ServiceException {
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _IoTEventsServiceException.prototype);
  }
};
__name(_IoTEventsServiceException, "IoTEventsServiceException");
var IoTEventsServiceException = _IoTEventsServiceException;

// src/models/models_0.ts
var PayloadType = {
  JSON: "JSON",
  STRING: "STRING"
};
var AlarmModelVersionStatus = {
  ACTIVATING: "ACTIVATING",
  ACTIVE: "ACTIVE",
  FAILED: "FAILED",
  INACTIVE: "INACTIVE"
};
var ComparisonOperator = {
  EQUAL: "EQUAL",
  GREATER: "GREATER",
  GREATER_OR_EQUAL: "GREATER_OR_EQUAL",
  LESS: "LESS",
  LESS_OR_EQUAL: "LESS_OR_EQUAL",
  NOT_EQUAL: "NOT_EQUAL"
};
var AnalysisResultLevel = {
  ERROR: "ERROR",
  INFO: "INFO",
  WARNING: "WARNING"
};
var AnalysisStatus = {
  COMPLETE: "COMPLETE",
  FAILED: "FAILED",
  RUNNING: "RUNNING"
};
var _InternalFailureException = class _InternalFailureException extends IoTEventsServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InternalFailureException",
      $fault: "server",
      ...opts
    });
    this.name = "InternalFailureException";
    this.$fault = "server";
    Object.setPrototypeOf(this, _InternalFailureException.prototype);
  }
};
__name(_InternalFailureException, "InternalFailureException");
var InternalFailureException = _InternalFailureException;
var _InvalidRequestException = class _InvalidRequestException extends IoTEventsServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidRequestException",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidRequestException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidRequestException.prototype);
  }
};
__name(_InvalidRequestException, "InvalidRequestException");
var InvalidRequestException = _InvalidRequestException;
var _LimitExceededException = class _LimitExceededException extends IoTEventsServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "LimitExceededException",
      $fault: "client",
      ...opts
    });
    this.name = "LimitExceededException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _LimitExceededException.prototype);
  }
};
__name(_LimitExceededException, "LimitExceededException");
var LimitExceededException = _LimitExceededException;
var _ResourceAlreadyExistsException = class _ResourceAlreadyExistsException extends IoTEventsServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceAlreadyExistsException",
      $fault: "client",
      ...opts
    });
    this.name = "ResourceAlreadyExistsException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourceAlreadyExistsException.prototype);
    this.resourceId = opts.resourceId;
    this.resourceArn = opts.resourceArn;
  }
};
__name(_ResourceAlreadyExistsException, "ResourceAlreadyExistsException");
var ResourceAlreadyExistsException = _ResourceAlreadyExistsException;
var _ResourceInUseException = class _ResourceInUseException extends IoTEventsServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceInUseException",
      $fault: "client",
      ...opts
    });
    this.name = "ResourceInUseException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourceInUseException.prototype);
  }
};
__name(_ResourceInUseException, "ResourceInUseException");
var ResourceInUseException = _ResourceInUseException;
var _ServiceUnavailableException = class _ServiceUnavailableException extends IoTEventsServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ServiceUnavailableException",
      $fault: "server",
      ...opts
    });
    this.name = "ServiceUnavailableException";
    this.$fault = "server";
    Object.setPrototypeOf(this, _ServiceUnavailableException.prototype);
  }
};
__name(_ServiceUnavailableException, "ServiceUnavailableException");
var ServiceUnavailableException = _ServiceUnavailableException;
var _ThrottlingException = class _ThrottlingException extends IoTEventsServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ThrottlingException",
      $fault: "client",
      ...opts
    });
    this.name = "ThrottlingException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ThrottlingException.prototype);
  }
};
__name(_ThrottlingException, "ThrottlingException");
var ThrottlingException = _ThrottlingException;
var EvaluationMethod = {
  BATCH: "BATCH",
  SERIAL: "SERIAL"
};
var DetectorModelVersionStatus = {
  ACTIVATING: "ACTIVATING",
  ACTIVE: "ACTIVE",
  DEPRECATED: "DEPRECATED",
  DRAFT: "DRAFT",
  FAILED: "FAILED",
  INACTIVE: "INACTIVE",
  PAUSED: "PAUSED"
};
var InputStatus = {
  ACTIVE: "ACTIVE",
  CREATING: "CREATING",
  DELETING: "DELETING",
  UPDATING: "UPDATING"
};
var _ResourceNotFoundException = class _ResourceNotFoundException extends IoTEventsServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceNotFoundException",
      $fault: "client",
      ...opts
    });
    this.name = "ResourceNotFoundException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourceNotFoundException.prototype);
  }
};
__name(_ResourceNotFoundException, "ResourceNotFoundException");
var ResourceNotFoundException = _ResourceNotFoundException;
var LoggingLevel = {
  DEBUG: "DEBUG",
  ERROR: "ERROR",
  INFO: "INFO"
};
var _UnsupportedOperationException = class _UnsupportedOperationException extends IoTEventsServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "UnsupportedOperationException",
      $fault: "server",
      ...opts
    });
    this.name = "UnsupportedOperationException";
    this.$fault = "server";
    Object.setPrototypeOf(this, _UnsupportedOperationException.prototype);
  }
};
__name(_UnsupportedOperationException, "UnsupportedOperationException");
var UnsupportedOperationException = _UnsupportedOperationException;

// src/protocols/Aws_restJson1.ts
var se_CreateAlarmModelCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/alarm-models");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      alarmCapabilities: (_) => (0, import_smithy_client._json)(_),
      alarmEventActions: (_) => (0, import_smithy_client._json)(_),
      alarmModelDescription: [],
      alarmModelName: [],
      alarmNotification: (_) => (0, import_smithy_client._json)(_),
      alarmRule: (_) => (0, import_smithy_client._json)(_),
      key: [],
      roleArn: [],
      severity: [],
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateAlarmModelCommand");
var se_CreateDetectorModelCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/detector-models");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      detectorModelDefinition: (_) => se_DetectorModelDefinition(_, context),
      detectorModelDescription: [],
      detectorModelName: [],
      evaluationMethod: [],
      key: [],
      roleArn: [],
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateDetectorModelCommand");
var se_CreateInputCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/inputs");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      inputDefinition: (_) => (0, import_smithy_client._json)(_),
      inputDescription: [],
      inputName: [],
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateInputCommand");
var se_DeleteAlarmModelCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/alarm-models/{alarmModelName}");
  b.p("alarmModelName", () => input.alarmModelName, "{alarmModelName}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteAlarmModelCommand");
var se_DeleteDetectorModelCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/detector-models/{detectorModelName}");
  b.p("detectorModelName", () => input.detectorModelName, "{detectorModelName}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteDetectorModelCommand");
var se_DeleteInputCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/inputs/{inputName}");
  b.p("inputName", () => input.inputName, "{inputName}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteInputCommand");
var se_DescribeAlarmModelCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/alarm-models/{alarmModelName}");
  b.p("alarmModelName", () => input.alarmModelName, "{alarmModelName}", false);
  const query = (0, import_smithy_client.map)({
    [_v]: [, input[_aMV]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_DescribeAlarmModelCommand");
var se_DescribeDetectorModelCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/detector-models/{detectorModelName}");
  b.p("detectorModelName", () => input.detectorModelName, "{detectorModelName}", false);
  const query = (0, import_smithy_client.map)({
    [_v]: [, input[_dMV]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_DescribeDetectorModelCommand");
var se_DescribeDetectorModelAnalysisCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/analysis/detector-models/{analysisId}");
  b.p("analysisId", () => input.analysisId, "{analysisId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeDetectorModelAnalysisCommand");
var se_DescribeInputCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/inputs/{inputName}");
  b.p("inputName", () => input.inputName, "{inputName}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeInputCommand");
var se_DescribeLoggingOptionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/logging");
  let body;
  body = "";
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeLoggingOptionsCommand");
var se_GetDetectorModelAnalysisResultsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/analysis/detector-models/{analysisId}/results");
  b.p("analysisId", () => input.analysisId, "{analysisId}", false);
  const query = (0, import_smithy_client.map)({
    [_nT]: [, input[_nT]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetDetectorModelAnalysisResultsCommand");
var se_ListAlarmModelsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/alarm-models");
  const query = (0, import_smithy_client.map)({
    [_nT]: [, input[_nT]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListAlarmModelsCommand");
var se_ListAlarmModelVersionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/alarm-models/{alarmModelName}/versions");
  b.p("alarmModelName", () => input.alarmModelName, "{alarmModelName}", false);
  const query = (0, import_smithy_client.map)({
    [_nT]: [, input[_nT]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListAlarmModelVersionsCommand");
var se_ListDetectorModelsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/detector-models");
  const query = (0, import_smithy_client.map)({
    [_nT]: [, input[_nT]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListDetectorModelsCommand");
var se_ListDetectorModelVersionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/detector-models/{detectorModelName}/versions");
  b.p("detectorModelName", () => input.detectorModelName, "{detectorModelName}", false);
  const query = (0, import_smithy_client.map)({
    [_nT]: [, input[_nT]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListDetectorModelVersionsCommand");
var se_ListInputRoutingsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/input-routings");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      inputIdentifier: (_) => (0, import_smithy_client._json)(_),
      maxResults: [],
      nextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListInputRoutingsCommand");
var se_ListInputsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/inputs");
  const query = (0, import_smithy_client.map)({
    [_nT]: [, input[_nT]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListInputsCommand");
var se_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tags");
  const query = (0, import_smithy_client.map)({
    [_rA]: [, (0, import_smithy_client.expectNonNull)(input[_rA], `resourceArn`)]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListTagsForResourceCommand");
var se_PutLoggingOptionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/logging");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      loggingOptions: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_PutLoggingOptionsCommand");
var se_StartDetectorModelAnalysisCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/analysis/detector-models");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      detectorModelDefinition: (_) => se_DetectorModelDefinition(_, context)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_StartDetectorModelAnalysisCommand");
var se_TagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/tags");
  const query = (0, import_smithy_client.map)({
    [_rA]: [, (0, import_smithy_client.expectNonNull)(input[_rA], `resourceArn`)]
  });
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).q(query).b(body);
  return b.build();
}, "se_TagResourceCommand");
var se_UntagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tags");
  const query = (0, import_smithy_client.map)({
    [_rA]: [, (0, import_smithy_client.expectNonNull)(input[_rA], `resourceArn`)],
    [_tK]: [
      (0, import_smithy_client.expectNonNull)(input.tagKeys, `tagKeys`) != null,
      () => (input[_tK] || []).map((_entry) => _entry)
    ]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_UntagResourceCommand");
var se_UpdateAlarmModelCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/alarm-models/{alarmModelName}");
  b.p("alarmModelName", () => input.alarmModelName, "{alarmModelName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      alarmCapabilities: (_) => (0, import_smithy_client._json)(_),
      alarmEventActions: (_) => (0, import_smithy_client._json)(_),
      alarmModelDescription: [],
      alarmNotification: (_) => (0, import_smithy_client._json)(_),
      alarmRule: (_) => (0, import_smithy_client._json)(_),
      roleArn: [],
      severity: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateAlarmModelCommand");
var se_UpdateDetectorModelCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/detector-models/{detectorModelName}");
  b.p("detectorModelName", () => input.detectorModelName, "{detectorModelName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      detectorModelDefinition: (_) => se_DetectorModelDefinition(_, context),
      detectorModelDescription: [],
      evaluationMethod: [],
      roleArn: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateDetectorModelCommand");
var se_UpdateInputCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/inputs/{inputName}");
  b.p("inputName", () => input.inputName, "{inputName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      inputDefinition: (_) => (0, import_smithy_client._json)(_),
      inputDescription: []
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdateInputCommand");
var de_CreateAlarmModelCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    alarmModelArn: import_smithy_client.expectString,
    alarmModelVersion: import_smithy_client.expectString,
    creationTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    lastUpdateTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    status: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateAlarmModelCommand");
var de_CreateDetectorModelCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    detectorModelConfiguration: (_) => de_DetectorModelConfiguration(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateDetectorModelCommand");
var de_CreateInputCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    inputConfiguration: (_) => de_InputConfiguration(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateInputCommand");
var de_DeleteAlarmModelCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteAlarmModelCommand");
var de_DeleteDetectorModelCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteDetectorModelCommand");
var de_DeleteInputCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteInputCommand");
var de_DescribeAlarmModelCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    alarmCapabilities: import_smithy_client._json,
    alarmEventActions: import_smithy_client._json,
    alarmModelArn: import_smithy_client.expectString,
    alarmModelDescription: import_smithy_client.expectString,
    alarmModelName: import_smithy_client.expectString,
    alarmModelVersion: import_smithy_client.expectString,
    alarmNotification: import_smithy_client._json,
    alarmRule: import_smithy_client._json,
    creationTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    key: import_smithy_client.expectString,
    lastUpdateTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    roleArn: import_smithy_client.expectString,
    severity: import_smithy_client.expectInt32,
    status: import_smithy_client.expectString,
    statusMessage: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeAlarmModelCommand");
var de_DescribeDetectorModelCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    detectorModel: (_) => de_DetectorModel(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeDetectorModelCommand");
var de_DescribeDetectorModelAnalysisCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    status: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeDetectorModelAnalysisCommand");
var de_DescribeInputCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    input: (_) => de_Input(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeInputCommand");
var de_DescribeLoggingOptionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    loggingOptions: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeLoggingOptionsCommand");
var de_GetDetectorModelAnalysisResultsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    analysisResults: import_smithy_client._json,
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetDetectorModelAnalysisResultsCommand");
var de_ListAlarmModelsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    alarmModelSummaries: (_) => de_AlarmModelSummaries(_, context),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListAlarmModelsCommand");
var de_ListAlarmModelVersionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    alarmModelVersionSummaries: (_) => de_AlarmModelVersionSummaries(_, context),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListAlarmModelVersionsCommand");
var de_ListDetectorModelsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    detectorModelSummaries: (_) => de_DetectorModelSummaries(_, context),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListDetectorModelsCommand");
var de_ListDetectorModelVersionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    detectorModelVersionSummaries: (_) => de_DetectorModelVersionSummaries(_, context),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListDetectorModelVersionsCommand");
var de_ListInputRoutingsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    nextToken: import_smithy_client.expectString,
    routedResources: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListInputRoutingsCommand");
var de_ListInputsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    inputSummaries: (_) => de_InputSummaries(_, context),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListInputsCommand");
var de_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListTagsForResourceCommand");
var de_PutLoggingOptionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_PutLoggingOptionsCommand");
var de_StartDetectorModelAnalysisCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    analysisId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_StartDetectorModelAnalysisCommand");
var de_TagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_TagResourceCommand");
var de_UntagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UntagResourceCommand");
var de_UpdateAlarmModelCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    alarmModelArn: import_smithy_client.expectString,
    alarmModelVersion: import_smithy_client.expectString,
    creationTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    lastUpdateTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    status: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateAlarmModelCommand");
var de_UpdateDetectorModelCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    detectorModelConfiguration: (_) => de_DetectorModelConfiguration(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateDetectorModelCommand");
var de_UpdateInputCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await parseBody(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    inputConfiguration: (_) => de_InputConfiguration(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateInputCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await parseErrorBody(output.body, context)
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalFailureException":
    case "com.amazonaws.iotevents#InternalFailureException":
      throw await de_InternalFailureExceptionRes(parsedOutput, context);
    case "InvalidRequestException":
    case "com.amazonaws.iotevents#InvalidRequestException":
      throw await de_InvalidRequestExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.iotevents#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    case "ResourceAlreadyExistsException":
    case "com.amazonaws.iotevents#ResourceAlreadyExistsException":
      throw await de_ResourceAlreadyExistsExceptionRes(parsedOutput, context);
    case "ResourceInUseException":
    case "com.amazonaws.iotevents#ResourceInUseException":
      throw await de_ResourceInUseExceptionRes(parsedOutput, context);
    case "ServiceUnavailableException":
    case "com.amazonaws.iotevents#ServiceUnavailableException":
      throw await de_ServiceUnavailableExceptionRes(parsedOutput, context);
    case "ThrottlingException":
    case "com.amazonaws.iotevents#ThrottlingException":
      throw await de_ThrottlingExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.iotevents#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    case "UnsupportedOperationException":
    case "com.amazonaws.iotevents#UnsupportedOperationException":
      throw await de_UnsupportedOperationExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var throwDefaultError = (0, import_smithy_client.withBaseException)(IoTEventsServiceException);
var de_InternalFailureExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new InternalFailureException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_InternalFailureExceptionRes");
var de_InvalidRequestExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new InvalidRequestException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_InvalidRequestExceptionRes");
var de_LimitExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new LimitExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_LimitExceededExceptionRes");
var de_ResourceAlreadyExistsExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString,
    resourceArn: import_smithy_client.expectString,
    resourceId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ResourceAlreadyExistsException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ResourceAlreadyExistsExceptionRes");
var de_ResourceInUseExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ResourceInUseException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ResourceInUseExceptionRes");
var de_ResourceNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ResourceNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ResourceNotFoundExceptionRes");
var de_ServiceUnavailableExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ServiceUnavailableException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ServiceUnavailableExceptionRes");
var de_ThrottlingExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ThrottlingException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ThrottlingExceptionRes");
var de_UnsupportedOperationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new UnsupportedOperationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_UnsupportedOperationExceptionRes");
var se_DetectorModelDefinition = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    initialStateName: [],
    states: import_smithy_client._json
  });
}, "se_DetectorModelDefinition");
var de_AlarmModelSummaries = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_AlarmModelSummary(entry, context);
  });
  return retVal;
}, "de_AlarmModelSummaries");
var de_AlarmModelSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    alarmModelDescription: import_smithy_client.expectString,
    alarmModelName: import_smithy_client.expectString,
    creationTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_)))
  });
}, "de_AlarmModelSummary");
var de_AlarmModelVersionSummaries = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_AlarmModelVersionSummary(entry, context);
  });
  return retVal;
}, "de_AlarmModelVersionSummaries");
var de_AlarmModelVersionSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    alarmModelArn: import_smithy_client.expectString,
    alarmModelName: import_smithy_client.expectString,
    alarmModelVersion: import_smithy_client.expectString,
    creationTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    lastUpdateTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    roleArn: import_smithy_client.expectString,
    status: import_smithy_client.expectString,
    statusMessage: import_smithy_client.expectString
  });
}, "de_AlarmModelVersionSummary");
var de_DetectorModel = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    detectorModelConfiguration: (_) => de_DetectorModelConfiguration(_, context),
    detectorModelDefinition: (_) => de_DetectorModelDefinition(_, context)
  });
}, "de_DetectorModel");
var de_DetectorModelConfiguration = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    creationTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    detectorModelArn: import_smithy_client.expectString,
    detectorModelDescription: import_smithy_client.expectString,
    detectorModelName: import_smithy_client.expectString,
    detectorModelVersion: import_smithy_client.expectString,
    evaluationMethod: import_smithy_client.expectString,
    key: import_smithy_client.expectString,
    lastUpdateTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    roleArn: import_smithy_client.expectString,
    status: import_smithy_client.expectString
  });
}, "de_DetectorModelConfiguration");
var de_DetectorModelDefinition = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    initialStateName: import_smithy_client.expectString,
    states: import_smithy_client._json
  });
}, "de_DetectorModelDefinition");
var de_DetectorModelSummaries = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_DetectorModelSummary(entry, context);
  });
  return retVal;
}, "de_DetectorModelSummaries");
var de_DetectorModelSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    creationTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    detectorModelDescription: import_smithy_client.expectString,
    detectorModelName: import_smithy_client.expectString
  });
}, "de_DetectorModelSummary");
var de_DetectorModelVersionSummaries = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_DetectorModelVersionSummary(entry, context);
  });
  return retVal;
}, "de_DetectorModelVersionSummaries");
var de_DetectorModelVersionSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    creationTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    detectorModelArn: import_smithy_client.expectString,
    detectorModelName: import_smithy_client.expectString,
    detectorModelVersion: import_smithy_client.expectString,
    evaluationMethod: import_smithy_client.expectString,
    lastUpdateTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    roleArn: import_smithy_client.expectString,
    status: import_smithy_client.expectString
  });
}, "de_DetectorModelVersionSummary");
var de_Input = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    inputConfiguration: (_) => de_InputConfiguration(_, context),
    inputDefinition: import_smithy_client._json
  });
}, "de_Input");
var de_InputConfiguration = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    creationTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    inputArn: import_smithy_client.expectString,
    inputDescription: import_smithy_client.expectString,
    inputName: import_smithy_client.expectString,
    lastUpdateTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    status: import_smithy_client.expectString
  });
}, "de_InputConfiguration");
var de_InputSummaries = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_InputSummary(entry, context);
  });
  return retVal;
}, "de_InputSummaries");
var de_InputSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    creationTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    inputArn: import_smithy_client.expectString,
    inputDescription: import_smithy_client.expectString,
    inputName: import_smithy_client.expectString,
    lastUpdateTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    status: import_smithy_client.expectString
  });
}, "de_InputSummary");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var collectBodyString = /* @__PURE__ */ __name((streamBody, context) => (0, import_smithy_client.collectBody)(streamBody, context).then((body) => context.utf8Encoder(body)), "collectBodyString");
var _aMV = "alarmModelVersion";
var _dMV = "detectorModelVersion";
var _mR = "maxResults";
var _nT = "nextToken";
var _rA = "resourceArn";
var _tK = "tagKeys";
var _v = "version";
var parseBody = /* @__PURE__ */ __name((streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {
  if (encoded.length) {
    return JSON.parse(encoded);
  }
  return {};
}), "parseBody");
var parseErrorBody = /* @__PURE__ */ __name(async (errorBody, context) => {
  const value = await parseBody(errorBody, context);
  value.message = value.message ?? value.Message;
  return value;
}, "parseErrorBody");
var loadRestJsonErrorCode = /* @__PURE__ */ __name((output, data) => {
  const findKey = /* @__PURE__ */ __name((object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase()), "findKey");
  const sanitizeErrorCode = /* @__PURE__ */ __name((rawValue) => {
    let cleanValue = rawValue;
    if (typeof cleanValue === "number") {
      cleanValue = cleanValue.toString();
    }
    if (cleanValue.indexOf(",") >= 0) {
      cleanValue = cleanValue.split(",")[0];
    }
    if (cleanValue.indexOf(":") >= 0) {
      cleanValue = cleanValue.split(":")[0];
    }
    if (cleanValue.indexOf("#") >= 0) {
      cleanValue = cleanValue.split("#")[1];
    }
    return cleanValue;
  }, "sanitizeErrorCode");
  const headerKey = findKey(output.headers, "x-amzn-errortype");
  if (headerKey !== void 0) {
    return sanitizeErrorCode(output.headers[headerKey]);
  }
  if (data.code !== void 0) {
    return sanitizeErrorCode(data.code);
  }
  if (data["__type"] !== void 0) {
    return sanitizeErrorCode(data["__type"]);
  }
}, "loadRestJsonErrorCode");

// src/commands/CreateAlarmModelCommand.ts
var _CreateAlarmModelCommand = class _CreateAlarmModelCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("IotColumboService", "CreateAlarmModel", {}).n("IoTEventsClient", "CreateAlarmModelCommand").f(void 0, void 0).ser(se_CreateAlarmModelCommand).de(de_CreateAlarmModelCommand).build() {
};
__name(_CreateAlarmModelCommand, "CreateAlarmModelCommand");
var CreateAlarmModelCommand = _CreateAlarmModelCommand;

// src/commands/CreateDetectorModelCommand.ts




var _CreateDetectorModelCommand = class _CreateDetectorModelCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("IotColumboService", "CreateDetectorModel", {}).n("IoTEventsClient", "CreateDetectorModelCommand").f(void 0, void 0).ser(se_CreateDetectorModelCommand).de(de_CreateDetectorModelCommand).build() {
};
__name(_CreateDetectorModelCommand, "CreateDetectorModelCommand");
var CreateDetectorModelCommand = _CreateDetectorModelCommand;

// src/commands/CreateInputCommand.ts




var _CreateInputCommand = class _CreateInputCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("IotColumboService", "CreateInput", {}).n("IoTEventsClient", "CreateInputCommand").f(void 0, void 0).ser(se_CreateInputCommand).de(de_CreateInputCommand).build() {
};
__name(_CreateInputCommand, "CreateInputCommand");
var CreateInputCommand = _CreateInputCommand;

// src/commands/DeleteAlarmModelCommand.ts




var _DeleteAlarmModelCommand = class _DeleteAlarmModelCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("IotColumboService", "DeleteAlarmModel", {}).n("IoTEventsClient", "DeleteAlarmModelCommand").f(void 0, void 0).ser(se_DeleteAlarmModelCommand).de(de_DeleteAlarmModelCommand).build() {
};
__name(_DeleteAlarmModelCommand, "DeleteAlarmModelCommand");
var DeleteAlarmModelCommand = _DeleteAlarmModelCommand;

// src/commands/DeleteDetectorModelCommand.ts




var _DeleteDetectorModelCommand = class _DeleteDetectorModelCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("IotColumboService", "DeleteDetectorModel", {}).n("IoTEventsClient", "DeleteDetectorModelCommand").f(void 0, void 0).ser(se_DeleteDetectorModelCommand).de(de_DeleteDetectorModelCommand).build() {
};
__name(_DeleteDetectorModelCommand, "DeleteDetectorModelCommand");
var DeleteDetectorModelCommand = _DeleteDetectorModelCommand;

// src/commands/DeleteInputCommand.ts




var _DeleteInputCommand = class _DeleteInputCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("IotColumboService", "DeleteInput", {}).n("IoTEventsClient", "DeleteInputCommand").f(void 0, void 0).ser(se_DeleteInputCommand).de(de_DeleteInputCommand).build() {
};
__name(_DeleteInputCommand, "DeleteInputCommand");
var DeleteInputCommand = _DeleteInputCommand;

// src/commands/DescribeAlarmModelCommand.ts




var _DescribeAlarmModelCommand = class _DescribeAlarmModelCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("IotColumboService", "DescribeAlarmModel", {}).n("IoTEventsClient", "DescribeAlarmModelCommand").f(void 0, void 0).ser(se_DescribeAlarmModelCommand).de(de_DescribeAlarmModelCommand).build() {
};
__name(_DescribeAlarmModelCommand, "DescribeAlarmModelCommand");
var DescribeAlarmModelCommand = _DescribeAlarmModelCommand;

// src/commands/DescribeDetectorModelAnalysisCommand.ts




var _DescribeDetectorModelAnalysisCommand = class _DescribeDetectorModelAnalysisCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("IotColumboService", "DescribeDetectorModelAnalysis", {}).n("IoTEventsClient", "DescribeDetectorModelAnalysisCommand").f(void 0, void 0).ser(se_DescribeDetectorModelAnalysisCommand).de(de_DescribeDetectorModelAnalysisCommand).build() {
};
__name(_DescribeDetectorModelAnalysisCommand, "DescribeDetectorModelAnalysisCommand");
var DescribeDetectorModelAnalysisCommand = _DescribeDetectorModelAnalysisCommand;

// src/commands/DescribeDetectorModelCommand.ts




var _DescribeDetectorModelCommand = class _DescribeDetectorModelCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("IotColumboService", "DescribeDetectorModel", {}).n("IoTEventsClient", "DescribeDetectorModelCommand").f(void 0, void 0).ser(se_DescribeDetectorModelCommand).de(de_DescribeDetectorModelCommand).build() {
};
__name(_DescribeDetectorModelCommand, "DescribeDetectorModelCommand");
var DescribeDetectorModelCommand = _DescribeDetectorModelCommand;

// src/commands/DescribeInputCommand.ts




var _DescribeInputCommand = class _DescribeInputCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("IotColumboService", "DescribeInput", {}).n("IoTEventsClient", "DescribeInputCommand").f(void 0, void 0).ser(se_DescribeInputCommand).de(de_DescribeInputCommand).build() {
};
__name(_DescribeInputCommand, "DescribeInputCommand");
var DescribeInputCommand = _DescribeInputCommand;

// src/commands/DescribeLoggingOptionsCommand.ts




var _DescribeLoggingOptionsCommand = class _DescribeLoggingOptionsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("IotColumboService", "DescribeLoggingOptions", {}).n("IoTEventsClient", "DescribeLoggingOptionsCommand").f(void 0, void 0).ser(se_DescribeLoggingOptionsCommand).de(de_DescribeLoggingOptionsCommand).build() {
};
__name(_DescribeLoggingOptionsCommand, "DescribeLoggingOptionsCommand");
var DescribeLoggingOptionsCommand = _DescribeLoggingOptionsCommand;

// src/commands/GetDetectorModelAnalysisResultsCommand.ts




var _GetDetectorModelAnalysisResultsCommand = class _GetDetectorModelAnalysisResultsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("IotColumboService", "GetDetectorModelAnalysisResults", {}).n("IoTEventsClient", "GetDetectorModelAnalysisResultsCommand").f(void 0, void 0).ser(se_GetDetectorModelAnalysisResultsCommand).de(de_GetDetectorModelAnalysisResultsCommand).build() {
};
__name(_GetDetectorModelAnalysisResultsCommand, "GetDetectorModelAnalysisResultsCommand");
var GetDetectorModelAnalysisResultsCommand = _GetDetectorModelAnalysisResultsCommand;

// src/commands/ListAlarmModelsCommand.ts




var _ListAlarmModelsCommand = class _ListAlarmModelsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("IotColumboService", "ListAlarmModels", {}).n("IoTEventsClient", "ListAlarmModelsCommand").f(void 0, void 0).ser(se_ListAlarmModelsCommand).de(de_ListAlarmModelsCommand).build() {
};
__name(_ListAlarmModelsCommand, "ListAlarmModelsCommand");
var ListAlarmModelsCommand = _ListAlarmModelsCommand;

// src/commands/ListAlarmModelVersionsCommand.ts




var _ListAlarmModelVersionsCommand = class _ListAlarmModelVersionsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("IotColumboService", "ListAlarmModelVersions", {}).n("IoTEventsClient", "ListAlarmModelVersionsCommand").f(void 0, void 0).ser(se_ListAlarmModelVersionsCommand).de(de_ListAlarmModelVersionsCommand).build() {
};
__name(_ListAlarmModelVersionsCommand, "ListAlarmModelVersionsCommand");
var ListAlarmModelVersionsCommand = _ListAlarmModelVersionsCommand;

// src/commands/ListDetectorModelsCommand.ts




var _ListDetectorModelsCommand = class _ListDetectorModelsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("IotColumboService", "ListDetectorModels", {}).n("IoTEventsClient", "ListDetectorModelsCommand").f(void 0, void 0).ser(se_ListDetectorModelsCommand).de(de_ListDetectorModelsCommand).build() {
};
__name(_ListDetectorModelsCommand, "ListDetectorModelsCommand");
var ListDetectorModelsCommand = _ListDetectorModelsCommand;

// src/commands/ListDetectorModelVersionsCommand.ts




var _ListDetectorModelVersionsCommand = class _ListDetectorModelVersionsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("IotColumboService", "ListDetectorModelVersions", {}).n("IoTEventsClient", "ListDetectorModelVersionsCommand").f(void 0, void 0).ser(se_ListDetectorModelVersionsCommand).de(de_ListDetectorModelVersionsCommand).build() {
};
__name(_ListDetectorModelVersionsCommand, "ListDetectorModelVersionsCommand");
var ListDetectorModelVersionsCommand = _ListDetectorModelVersionsCommand;

// src/commands/ListInputRoutingsCommand.ts




var _ListInputRoutingsCommand = class _ListInputRoutingsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("IotColumboService", "ListInputRoutings", {}).n("IoTEventsClient", "ListInputRoutingsCommand").f(void 0, void 0).ser(se_ListInputRoutingsCommand).de(de_ListInputRoutingsCommand).build() {
};
__name(_ListInputRoutingsCommand, "ListInputRoutingsCommand");
var ListInputRoutingsCommand = _ListInputRoutingsCommand;

// src/commands/ListInputsCommand.ts




var _ListInputsCommand = class _ListInputsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("IotColumboService", "ListInputs", {}).n("IoTEventsClient", "ListInputsCommand").f(void 0, void 0).ser(se_ListInputsCommand).de(de_ListInputsCommand).build() {
};
__name(_ListInputsCommand, "ListInputsCommand");
var ListInputsCommand = _ListInputsCommand;

// src/commands/ListTagsForResourceCommand.ts




var _ListTagsForResourceCommand = class _ListTagsForResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("IotColumboService", "ListTagsForResource", {}).n("IoTEventsClient", "ListTagsForResourceCommand").f(void 0, void 0).ser(se_ListTagsForResourceCommand).de(de_ListTagsForResourceCommand).build() {
};
__name(_ListTagsForResourceCommand, "ListTagsForResourceCommand");
var ListTagsForResourceCommand = _ListTagsForResourceCommand;

// src/commands/PutLoggingOptionsCommand.ts




var _PutLoggingOptionsCommand = class _PutLoggingOptionsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("IotColumboService", "PutLoggingOptions", {}).n("IoTEventsClient", "PutLoggingOptionsCommand").f(void 0, void 0).ser(se_PutLoggingOptionsCommand).de(de_PutLoggingOptionsCommand).build() {
};
__name(_PutLoggingOptionsCommand, "PutLoggingOptionsCommand");
var PutLoggingOptionsCommand = _PutLoggingOptionsCommand;

// src/commands/StartDetectorModelAnalysisCommand.ts




var _StartDetectorModelAnalysisCommand = class _StartDetectorModelAnalysisCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("IotColumboService", "StartDetectorModelAnalysis", {}).n("IoTEventsClient", "StartDetectorModelAnalysisCommand").f(void 0, void 0).ser(se_StartDetectorModelAnalysisCommand).de(de_StartDetectorModelAnalysisCommand).build() {
};
__name(_StartDetectorModelAnalysisCommand, "StartDetectorModelAnalysisCommand");
var StartDetectorModelAnalysisCommand = _StartDetectorModelAnalysisCommand;

// src/commands/TagResourceCommand.ts




var _TagResourceCommand = class _TagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("IotColumboService", "TagResource", {}).n("IoTEventsClient", "TagResourceCommand").f(void 0, void 0).ser(se_TagResourceCommand).de(de_TagResourceCommand).build() {
};
__name(_TagResourceCommand, "TagResourceCommand");
var TagResourceCommand = _TagResourceCommand;

// src/commands/UntagResourceCommand.ts




var _UntagResourceCommand = class _UntagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("IotColumboService", "UntagResource", {}).n("IoTEventsClient", "UntagResourceCommand").f(void 0, void 0).ser(se_UntagResourceCommand).de(de_UntagResourceCommand).build() {
};
__name(_UntagResourceCommand, "UntagResourceCommand");
var UntagResourceCommand = _UntagResourceCommand;

// src/commands/UpdateAlarmModelCommand.ts




var _UpdateAlarmModelCommand = class _UpdateAlarmModelCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("IotColumboService", "UpdateAlarmModel", {}).n("IoTEventsClient", "UpdateAlarmModelCommand").f(void 0, void 0).ser(se_UpdateAlarmModelCommand).de(de_UpdateAlarmModelCommand).build() {
};
__name(_UpdateAlarmModelCommand, "UpdateAlarmModelCommand");
var UpdateAlarmModelCommand = _UpdateAlarmModelCommand;

// src/commands/UpdateDetectorModelCommand.ts




var _UpdateDetectorModelCommand = class _UpdateDetectorModelCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("IotColumboService", "UpdateDetectorModel", {}).n("IoTEventsClient", "UpdateDetectorModelCommand").f(void 0, void 0).ser(se_UpdateDetectorModelCommand).de(de_UpdateDetectorModelCommand).build() {
};
__name(_UpdateDetectorModelCommand, "UpdateDetectorModelCommand");
var UpdateDetectorModelCommand = _UpdateDetectorModelCommand;

// src/commands/UpdateInputCommand.ts




var _UpdateInputCommand = class _UpdateInputCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("IotColumboService", "UpdateInput", {}).n("IoTEventsClient", "UpdateInputCommand").f(void 0, void 0).ser(se_UpdateInputCommand).de(de_UpdateInputCommand).build() {
};
__name(_UpdateInputCommand, "UpdateInputCommand");
var UpdateInputCommand = _UpdateInputCommand;

// src/IoTEvents.ts
var commands = {
  CreateAlarmModelCommand,
  CreateDetectorModelCommand,
  CreateInputCommand,
  DeleteAlarmModelCommand,
  DeleteDetectorModelCommand,
  DeleteInputCommand,
  DescribeAlarmModelCommand,
  DescribeDetectorModelCommand,
  DescribeDetectorModelAnalysisCommand,
  DescribeInputCommand,
  DescribeLoggingOptionsCommand,
  GetDetectorModelAnalysisResultsCommand,
  ListAlarmModelsCommand,
  ListAlarmModelVersionsCommand,
  ListDetectorModelsCommand,
  ListDetectorModelVersionsCommand,
  ListInputRoutingsCommand,
  ListInputsCommand,
  ListTagsForResourceCommand,
  PutLoggingOptionsCommand,
  StartDetectorModelAnalysisCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateAlarmModelCommand,
  UpdateDetectorModelCommand,
  UpdateInputCommand
};
var _IoTEvents = class _IoTEvents extends IoTEventsClient {
};
__name(_IoTEvents, "IoTEvents");
var IoTEvents = _IoTEvents;
(0, import_smithy_client.createAggregatedClient)(commands, IoTEvents);

// src/index.ts
var import_util_endpoints = require("@aws-sdk/util-endpoints");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  IoTEventsServiceException,
  __Client,
  IoTEventsClient,
  IoTEvents,
  $Command,
  CreateAlarmModelCommand,
  CreateDetectorModelCommand,
  CreateInputCommand,
  DeleteAlarmModelCommand,
  DeleteDetectorModelCommand,
  DeleteInputCommand,
  DescribeAlarmModelCommand,
  DescribeDetectorModelAnalysisCommand,
  DescribeDetectorModelCommand,
  DescribeInputCommand,
  DescribeLoggingOptionsCommand,
  GetDetectorModelAnalysisResultsCommand,
  ListAlarmModelVersionsCommand,
  ListAlarmModelsCommand,
  ListDetectorModelVersionsCommand,
  ListDetectorModelsCommand,
  ListInputRoutingsCommand,
  ListInputsCommand,
  ListTagsForResourceCommand,
  PutLoggingOptionsCommand,
  StartDetectorModelAnalysisCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateAlarmModelCommand,
  UpdateDetectorModelCommand,
  UpdateInputCommand,
  PayloadType,
  AlarmModelVersionStatus,
  ComparisonOperator,
  AnalysisResultLevel,
  AnalysisStatus,
  InternalFailureException,
  InvalidRequestException,
  LimitExceededException,
  ResourceAlreadyExistsException,
  ResourceInUseException,
  ServiceUnavailableException,
  ThrottlingException,
  EvaluationMethod,
  DetectorModelVersionStatus,
  InputStatus,
  ResourceNotFoundException,
  LoggingLevel,
  UnsupportedOperationException
});

