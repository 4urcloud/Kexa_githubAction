import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { IoTEventsServiceException as __BaseException } from "./IoTEventsServiceException";
export interface AcknowledgeFlow {
  enabled: boolean | undefined;
}
export interface ClearTimerAction {
  timerName: string | undefined;
}
export declare const PayloadType: {
  readonly JSON: "JSON";
  readonly STRING: "STRING";
};
export type PayloadType = (typeof PayloadType)[keyof typeof PayloadType];
export interface Payload {
  contentExpression: string | undefined;
  type: PayloadType | undefined;
}
export interface DynamoDBAction {
  hashKeyType?: string;
  hashKeyField: string | undefined;
  hashKeyValue: string | undefined;
  rangeKeyType?: string;
  rangeKeyField?: string;
  rangeKeyValue?: string;
  operation?: string;
  payloadField?: string;
  tableName: string | undefined;
  payload?: Payload;
}
export interface DynamoDBv2Action {
  tableName: string | undefined;
  payload?: Payload;
}
export interface FirehoseAction {
  deliveryStreamName: string | undefined;
  separator?: string;
  payload?: Payload;
}
export interface IotEventsAction {
  inputName: string | undefined;
  payload?: Payload;
}
export interface AssetPropertyTimestamp {
  timeInSeconds: string | undefined;
  offsetInNanos?: string;
}
export interface AssetPropertyVariant {
  stringValue?: string;
  integerValue?: string;
  doubleValue?: string;
  booleanValue?: string;
}
export interface AssetPropertyValue {
  value?: AssetPropertyVariant;
  timestamp?: AssetPropertyTimestamp;
  quality?: string;
}
export interface IotSiteWiseAction {
  entryId?: string;
  assetId?: string;
  propertyId?: string;
  propertyAlias?: string;
  propertyValue?: AssetPropertyValue;
}
export interface IotTopicPublishAction {
  mqttTopic: string | undefined;
  payload?: Payload;
}
export interface LambdaAction {
  functionArn: string | undefined;
  payload?: Payload;
}
export interface ResetTimerAction {
  timerName: string | undefined;
}
export interface SetTimerAction {
  timerName: string | undefined;
  seconds?: number;
  durationExpression?: string;
}
export interface SetVariableAction {
  variableName: string | undefined;
  value: string | undefined;
}
export interface SNSTopicPublishAction {
  targetArn: string | undefined;
  payload?: Payload;
}
export interface SqsAction {
  queueUrl: string | undefined;
  useBase64?: boolean;
  payload?: Payload;
}
export interface Action {
  setVariable?: SetVariableAction;
  sns?: SNSTopicPublishAction;
  iotTopicPublish?: IotTopicPublishAction;
  setTimer?: SetTimerAction;
  clearTimer?: ClearTimerAction;
  resetTimer?: ResetTimerAction;
  lambda?: LambdaAction;
  iotEvents?: IotEventsAction;
  sqs?: SqsAction;
  firehose?: FirehoseAction;
  dynamoDB?: DynamoDBAction;
  dynamoDBv2?: DynamoDBv2Action;
  iotSiteWise?: IotSiteWiseAction;
}
export interface AlarmAction {
  sns?: SNSTopicPublishAction;
  iotTopicPublish?: IotTopicPublishAction;
  lambda?: LambdaAction;
  iotEvents?: IotEventsAction;
  sqs?: SqsAction;
  firehose?: FirehoseAction;
  dynamoDB?: DynamoDBAction;
  dynamoDBv2?: DynamoDBv2Action;
  iotSiteWise?: IotSiteWiseAction;
}
export interface InitializationConfiguration {
  disabledOnInitialization: boolean | undefined;
}
export interface AlarmCapabilities {
  initializationConfiguration?: InitializationConfiguration;
  acknowledgeFlow?: AcknowledgeFlow;
}
export interface AlarmEventActions {
  alarmActions?: AlarmAction[];
}
export interface AlarmModelSummary {
  creationTime?: Date;
  alarmModelDescription?: string;
  alarmModelName?: string;
}
export declare const AlarmModelVersionStatus: {
  readonly ACTIVATING: "ACTIVATING";
  readonly ACTIVE: "ACTIVE";
  readonly FAILED: "FAILED";
  readonly INACTIVE: "INACTIVE";
};
export type AlarmModelVersionStatus =
  (typeof AlarmModelVersionStatus)[keyof typeof AlarmModelVersionStatus];
export interface AlarmModelVersionSummary {
  alarmModelName?: string;
  alarmModelArn?: string;
  alarmModelVersion?: string;
  roleArn?: string;
  creationTime?: Date;
  lastUpdateTime?: Date;
  status?: AlarmModelVersionStatus;
  statusMessage?: string;
}
export interface NotificationTargetActions {
  lambdaAction?: LambdaAction;
}
export interface EmailContent {
  subject?: string;
  additionalMessage?: string;
}
export interface SSOIdentity {
  identityStoreId: string | undefined;
  userId?: string;
}
export interface RecipientDetail {
  ssoIdentity?: SSOIdentity;
}
export interface EmailRecipients {
  to?: RecipientDetail[];
}
export interface EmailConfiguration {
  from: string | undefined;
  content?: EmailContent;
  recipients: EmailRecipients | undefined;
}
export interface SMSConfiguration {
  senderId?: string;
  additionalMessage?: string;
  recipients: RecipientDetail[] | undefined;
}
export interface NotificationAction {
  action: NotificationTargetActions | undefined;
  smsConfigurations?: SMSConfiguration[];
  emailConfigurations?: EmailConfiguration[];
}
export interface AlarmNotification {
  notificationActions?: NotificationAction[];
}
export declare const ComparisonOperator: {
  readonly EQUAL: "EQUAL";
  readonly GREATER: "GREATER";
  readonly GREATER_OR_EQUAL: "GREATER_OR_EQUAL";
  readonly LESS: "LESS";
  readonly LESS_OR_EQUAL: "LESS_OR_EQUAL";
  readonly NOT_EQUAL: "NOT_EQUAL";
};
export type ComparisonOperator =
  (typeof ComparisonOperator)[keyof typeof ComparisonOperator];
export interface SimpleRule {
  inputProperty: string | undefined;
  comparisonOperator: ComparisonOperator | undefined;
  threshold: string | undefined;
}
export interface AlarmRule {
  simpleRule?: SimpleRule;
}
export declare const AnalysisResultLevel: {
  readonly ERROR: "ERROR";
  readonly INFO: "INFO";
  readonly WARNING: "WARNING";
};
export type AnalysisResultLevel =
  (typeof AnalysisResultLevel)[keyof typeof AnalysisResultLevel];
export interface AnalysisResultLocation {
  path?: string;
}
export interface AnalysisResult {
  type?: string;
  level?: AnalysisResultLevel;
  message?: string;
  locations?: AnalysisResultLocation[];
}
export declare const AnalysisStatus: {
  readonly COMPLETE: "COMPLETE";
  readonly FAILED: "FAILED";
  readonly RUNNING: "RUNNING";
};
export type AnalysisStatus =
  (typeof AnalysisStatus)[keyof typeof AnalysisStatus];
export interface Attribute {
  jsonPath: string | undefined;
}
export interface Tag {
  key: string | undefined;
  value: string | undefined;
}
export interface CreateAlarmModelRequest {
  alarmModelName: string | undefined;
  alarmModelDescription?: string;
  roleArn: string | undefined;
  tags?: Tag[];
  key?: string;
  severity?: number;
  alarmRule: AlarmRule | undefined;
  alarmNotification?: AlarmNotification;
  alarmEventActions?: AlarmEventActions;
  alarmCapabilities?: AlarmCapabilities;
}
export interface CreateAlarmModelResponse {
  creationTime?: Date;
  alarmModelArn?: string;
  alarmModelVersion?: string;
  lastUpdateTime?: Date;
  status?: AlarmModelVersionStatus;
}
export declare class InternalFailureException extends __BaseException {
  readonly name: "InternalFailureException";
  readonly $fault: "server";
  constructor(
    opts: __ExceptionOptionType<InternalFailureException, __BaseException>
  );
}
export declare class InvalidRequestException extends __BaseException {
  readonly name: "InvalidRequestException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidRequestException, __BaseException>
  );
}
export declare class LimitExceededException extends __BaseException {
  readonly name: "LimitExceededException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<LimitExceededException, __BaseException>
  );
}
export declare class ResourceAlreadyExistsException extends __BaseException {
  readonly name: "ResourceAlreadyExistsException";
  readonly $fault: "client";
  resourceId?: string;
  resourceArn?: string;
  constructor(
    opts: __ExceptionOptionType<ResourceAlreadyExistsException, __BaseException>
  );
}
export declare class ResourceInUseException extends __BaseException {
  readonly name: "ResourceInUseException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ResourceInUseException, __BaseException>
  );
}
export declare class ServiceUnavailableException extends __BaseException {
  readonly name: "ServiceUnavailableException";
  readonly $fault: "server";
  constructor(
    opts: __ExceptionOptionType<ServiceUnavailableException, __BaseException>
  );
}
export declare class ThrottlingException extends __BaseException {
  readonly name: "ThrottlingException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ThrottlingException, __BaseException>
  );
}
export interface Event {
  eventName: string | undefined;
  condition?: string;
  actions?: Action[];
}
export interface OnEnterLifecycle {
  events?: Event[];
}
export interface OnExitLifecycle {
  events?: Event[];
}
export interface TransitionEvent {
  eventName: string | undefined;
  condition: string | undefined;
  actions?: Action[];
  nextState: string | undefined;
}
export interface OnInputLifecycle {
  events?: Event[];
  transitionEvents?: TransitionEvent[];
}
export interface State {
  stateName: string | undefined;
  onInput?: OnInputLifecycle;
  onEnter?: OnEnterLifecycle;
  onExit?: OnExitLifecycle;
}
export interface DetectorModelDefinition {
  states: State[] | undefined;
  initialStateName: string | undefined;
}
export declare const EvaluationMethod: {
  readonly BATCH: "BATCH";
  readonly SERIAL: "SERIAL";
};
export type EvaluationMethod =
  (typeof EvaluationMethod)[keyof typeof EvaluationMethod];
export interface CreateDetectorModelRequest {
  detectorModelName: string | undefined;
  detectorModelDefinition: DetectorModelDefinition | undefined;
  detectorModelDescription?: string;
  key?: string;
  roleArn: string | undefined;
  tags?: Tag[];
  evaluationMethod?: EvaluationMethod;
}
export declare const DetectorModelVersionStatus: {
  readonly ACTIVATING: "ACTIVATING";
  readonly ACTIVE: "ACTIVE";
  readonly DEPRECATED: "DEPRECATED";
  readonly DRAFT: "DRAFT";
  readonly FAILED: "FAILED";
  readonly INACTIVE: "INACTIVE";
  readonly PAUSED: "PAUSED";
};
export type DetectorModelVersionStatus =
  (typeof DetectorModelVersionStatus)[keyof typeof DetectorModelVersionStatus];
export interface DetectorModelConfiguration {
  detectorModelName?: string;
  detectorModelVersion?: string;
  detectorModelDescription?: string;
  detectorModelArn?: string;
  roleArn?: string;
  creationTime?: Date;
  lastUpdateTime?: Date;
  status?: DetectorModelVersionStatus;
  key?: string;
  evaluationMethod?: EvaluationMethod;
}
export interface CreateDetectorModelResponse {
  detectorModelConfiguration?: DetectorModelConfiguration;
}
export interface InputDefinition {
  attributes: Attribute[] | undefined;
}
export interface CreateInputRequest {
  inputName: string | undefined;
  inputDescription?: string;
  inputDefinition: InputDefinition | undefined;
  tags?: Tag[];
}
export declare const InputStatus: {
  readonly ACTIVE: "ACTIVE";
  readonly CREATING: "CREATING";
  readonly DELETING: "DELETING";
  readonly UPDATING: "UPDATING";
};
export type InputStatus = (typeof InputStatus)[keyof typeof InputStatus];
export interface InputConfiguration {
  inputName: string | undefined;
  inputDescription?: string;
  inputArn: string | undefined;
  creationTime: Date | undefined;
  lastUpdateTime: Date | undefined;
  status: InputStatus | undefined;
}
export interface CreateInputResponse {
  inputConfiguration?: InputConfiguration;
}
export interface DeleteAlarmModelRequest {
  alarmModelName: string | undefined;
}
export interface DeleteAlarmModelResponse {}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export interface DeleteDetectorModelRequest {
  detectorModelName: string | undefined;
}
export interface DeleteDetectorModelResponse {}
export interface DeleteInputRequest {
  inputName: string | undefined;
}
export interface DeleteInputResponse {}
export interface DescribeAlarmModelRequest {
  alarmModelName: string | undefined;
  alarmModelVersion?: string;
}
export interface DescribeAlarmModelResponse {
  creationTime?: Date;
  alarmModelArn?: string;
  alarmModelVersion?: string;
  lastUpdateTime?: Date;
  status?: AlarmModelVersionStatus;
  statusMessage?: string;
  alarmModelName?: string;
  alarmModelDescription?: string;
  roleArn?: string;
  key?: string;
  severity?: number;
  alarmRule?: AlarmRule;
  alarmNotification?: AlarmNotification;
  alarmEventActions?: AlarmEventActions;
  alarmCapabilities?: AlarmCapabilities;
}
export interface DescribeDetectorModelRequest {
  detectorModelName: string | undefined;
  detectorModelVersion?: string;
}
export interface DetectorModel {
  detectorModelDefinition?: DetectorModelDefinition;
  detectorModelConfiguration?: DetectorModelConfiguration;
}
export interface DescribeDetectorModelResponse {
  detectorModel?: DetectorModel;
}
export interface DescribeDetectorModelAnalysisRequest {
  analysisId: string | undefined;
}
export interface DescribeDetectorModelAnalysisResponse {
  status?: AnalysisStatus;
}
export interface DescribeInputRequest {
  inputName: string | undefined;
}
export interface Input {
  inputConfiguration?: InputConfiguration;
  inputDefinition?: InputDefinition;
}
export interface DescribeInputResponse {
  input?: Input;
}
export interface DescribeLoggingOptionsRequest {}
export interface DetectorDebugOption {
  detectorModelName: string | undefined;
  keyValue?: string;
}
export declare const LoggingLevel: {
  readonly DEBUG: "DEBUG";
  readonly ERROR: "ERROR";
  readonly INFO: "INFO";
};
export type LoggingLevel = (typeof LoggingLevel)[keyof typeof LoggingLevel];
export interface LoggingOptions {
  roleArn: string | undefined;
  level: LoggingLevel | undefined;
  enabled: boolean | undefined;
  detectorDebugOptions?: DetectorDebugOption[];
}
export interface DescribeLoggingOptionsResponse {
  loggingOptions?: LoggingOptions;
}
export declare class UnsupportedOperationException extends __BaseException {
  readonly name: "UnsupportedOperationException";
  readonly $fault: "server";
  constructor(
    opts: __ExceptionOptionType<UnsupportedOperationException, __BaseException>
  );
}
export interface DetectorModelSummary {
  detectorModelName?: string;
  detectorModelDescription?: string;
  creationTime?: Date;
}
export interface DetectorModelVersionSummary {
  detectorModelName?: string;
  detectorModelVersion?: string;
  detectorModelArn?: string;
  roleArn?: string;
  creationTime?: Date;
  lastUpdateTime?: Date;
  status?: DetectorModelVersionStatus;
  evaluationMethod?: EvaluationMethod;
}
export interface GetDetectorModelAnalysisResultsRequest {
  analysisId: string | undefined;
  nextToken?: string;
  maxResults?: number;
}
export interface GetDetectorModelAnalysisResultsResponse {
  analysisResults?: AnalysisResult[];
  nextToken?: string;
}
export interface IotEventsInputIdentifier {
  inputName: string | undefined;
}
export interface IotSiteWiseAssetModelPropertyIdentifier {
  assetModelId: string | undefined;
  propertyId: string | undefined;
}
export interface IotSiteWiseInputIdentifier {
  iotSiteWiseAssetModelPropertyIdentifier?: IotSiteWiseAssetModelPropertyIdentifier;
}
export interface InputIdentifier {
  iotEventsInputIdentifier?: IotEventsInputIdentifier;
  iotSiteWiseInputIdentifier?: IotSiteWiseInputIdentifier;
}
export interface InputSummary {
  inputName?: string;
  inputDescription?: string;
  inputArn?: string;
  creationTime?: Date;
  lastUpdateTime?: Date;
  status?: InputStatus;
}
export interface ListAlarmModelsRequest {
  nextToken?: string;
  maxResults?: number;
}
export interface ListAlarmModelsResponse {
  alarmModelSummaries?: AlarmModelSummary[];
  nextToken?: string;
}
export interface ListAlarmModelVersionsRequest {
  alarmModelName: string | undefined;
  nextToken?: string;
  maxResults?: number;
}
export interface ListAlarmModelVersionsResponse {
  alarmModelVersionSummaries?: AlarmModelVersionSummary[];
  nextToken?: string;
}
export interface ListDetectorModelsRequest {
  nextToken?: string;
  maxResults?: number;
}
export interface ListDetectorModelsResponse {
  detectorModelSummaries?: DetectorModelSummary[];
  nextToken?: string;
}
export interface ListDetectorModelVersionsRequest {
  detectorModelName: string | undefined;
  nextToken?: string;
  maxResults?: number;
}
export interface ListDetectorModelVersionsResponse {
  detectorModelVersionSummaries?: DetectorModelVersionSummary[];
  nextToken?: string;
}
export interface ListInputRoutingsRequest {
  inputIdentifier: InputIdentifier | undefined;
  maxResults?: number;
  nextToken?: string;
}
export interface RoutedResource {
  name?: string;
  arn?: string;
}
export interface ListInputRoutingsResponse {
  routedResources?: RoutedResource[];
  nextToken?: string;
}
export interface ListInputsRequest {
  nextToken?: string;
  maxResults?: number;
}
export interface ListInputsResponse {
  inputSummaries?: InputSummary[];
  nextToken?: string;
}
export interface ListTagsForResourceRequest {
  resourceArn: string | undefined;
}
export interface ListTagsForResourceResponse {
  tags?: Tag[];
}
export interface PutLoggingOptionsRequest {
  loggingOptions: LoggingOptions | undefined;
}
export interface StartDetectorModelAnalysisRequest {
  detectorModelDefinition: DetectorModelDefinition | undefined;
}
export interface StartDetectorModelAnalysisResponse {
  analysisId?: string;
}
export interface TagResourceRequest {
  resourceArn: string | undefined;
  tags: Tag[] | undefined;
}
export interface TagResourceResponse {}
export interface UntagResourceRequest {
  resourceArn: string | undefined;
  tagKeys: string[] | undefined;
}
export interface UntagResourceResponse {}
export interface UpdateAlarmModelRequest {
  alarmModelName: string | undefined;
  alarmModelDescription?: string;
  roleArn: string | undefined;
  severity?: number;
  alarmRule: AlarmRule | undefined;
  alarmNotification?: AlarmNotification;
  alarmEventActions?: AlarmEventActions;
  alarmCapabilities?: AlarmCapabilities;
}
export interface UpdateAlarmModelResponse {
  creationTime?: Date;
  alarmModelArn?: string;
  alarmModelVersion?: string;
  lastUpdateTime?: Date;
  status?: AlarmModelVersionStatus;
}
export interface UpdateDetectorModelRequest {
  detectorModelName: string | undefined;
  detectorModelDefinition: DetectorModelDefinition | undefined;
  detectorModelDescription?: string;
  roleArn: string | undefined;
  evaluationMethod?: EvaluationMethod;
}
export interface UpdateDetectorModelResponse {
  detectorModelConfiguration?: DetectorModelConfiguration;
}
export interface UpdateInputRequest {
  inputName: string | undefined;
  inputDescription?: string;
  inputDefinition: InputDefinition | undefined;
}
export interface UpdateInputResponse {
  inputConfiguration?: InputConfiguration;
}
