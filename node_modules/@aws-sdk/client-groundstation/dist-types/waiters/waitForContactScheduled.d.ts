import { WaiterConfiguration, WaiterResult } from "@smithy/util-waiter";
import { DescribeContactCommandInput } from "../commands/DescribeContactCommand";
import { GroundStationClient } from "../GroundStationClient";
/**
 * Waits until a contact has been scheduled
 *  @deprecated Use waitUntilContactScheduled instead. waitForContactScheduled does not throw error in non-success cases.
 */
export declare const waitForContactScheduled: (params: WaiterConfiguration<GroundStationClient>, input: DescribeContactCommandInput) => Promise<WaiterResult>;
/**
 * Waits until a contact has been scheduled
 *  @param params - Waiter configuration options.
 *  @param input - The input to DescribeContactCommand for polling.
 */
export declare const waitUntilContactScheduled: (params: WaiterConfiguration<GroundStationClient>, input: DescribeContactCommandInput) => Promise<WaiterResult>;
