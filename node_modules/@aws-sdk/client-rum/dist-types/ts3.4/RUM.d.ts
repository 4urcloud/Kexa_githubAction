import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import {
  BatchCreateRumMetricDefinitionsCommandInput,
  BatchCreateRumMetricDefinitionsCommandOutput,
} from "./commands/BatchCreateRumMetricDefinitionsCommand";
import {
  BatchDeleteRumMetricDefinitionsCommandInput,
  BatchDeleteRumMetricDefinitionsCommandOutput,
} from "./commands/BatchDeleteRumMetricDefinitionsCommand";
import {
  BatchGetRumMetricDefinitionsCommandInput,
  BatchGetRumMetricDefinitionsCommandOutput,
} from "./commands/BatchGetRumMetricDefinitionsCommand";
import {
  CreateAppMonitorCommandInput,
  CreateAppMonitorCommandOutput,
} from "./commands/CreateAppMonitorCommand";
import {
  DeleteAppMonitorCommandInput,
  DeleteAppMonitorCommandOutput,
} from "./commands/DeleteAppMonitorCommand";
import {
  DeleteRumMetricsDestinationCommandInput,
  DeleteRumMetricsDestinationCommandOutput,
} from "./commands/DeleteRumMetricsDestinationCommand";
import {
  GetAppMonitorCommandInput,
  GetAppMonitorCommandOutput,
} from "./commands/GetAppMonitorCommand";
import {
  GetAppMonitorDataCommandInput,
  GetAppMonitorDataCommandOutput,
} from "./commands/GetAppMonitorDataCommand";
import {
  ListAppMonitorsCommandInput,
  ListAppMonitorsCommandOutput,
} from "./commands/ListAppMonitorsCommand";
import {
  ListRumMetricsDestinationsCommandInput,
  ListRumMetricsDestinationsCommandOutput,
} from "./commands/ListRumMetricsDestinationsCommand";
import {
  ListTagsForResourceCommandInput,
  ListTagsForResourceCommandOutput,
} from "./commands/ListTagsForResourceCommand";
import {
  PutRumEventsCommandInput,
  PutRumEventsCommandOutput,
} from "./commands/PutRumEventsCommand";
import {
  PutRumMetricsDestinationCommandInput,
  PutRumMetricsDestinationCommandOutput,
} from "./commands/PutRumMetricsDestinationCommand";
import {
  TagResourceCommandInput,
  TagResourceCommandOutput,
} from "./commands/TagResourceCommand";
import {
  UntagResourceCommandInput,
  UntagResourceCommandOutput,
} from "./commands/UntagResourceCommand";
import {
  UpdateAppMonitorCommandInput,
  UpdateAppMonitorCommandOutput,
} from "./commands/UpdateAppMonitorCommand";
import {
  UpdateRumMetricDefinitionCommandInput,
  UpdateRumMetricDefinitionCommandOutput,
} from "./commands/UpdateRumMetricDefinitionCommand";
import { RUMClient } from "./RUMClient";
export interface RUM {
  batchCreateRumMetricDefinitions(
    args: BatchCreateRumMetricDefinitionsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<BatchCreateRumMetricDefinitionsCommandOutput>;
  batchCreateRumMetricDefinitions(
    args: BatchCreateRumMetricDefinitionsCommandInput,
    cb: (err: any, data?: BatchCreateRumMetricDefinitionsCommandOutput) => void
  ): void;
  batchCreateRumMetricDefinitions(
    args: BatchCreateRumMetricDefinitionsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: BatchCreateRumMetricDefinitionsCommandOutput) => void
  ): void;
  batchDeleteRumMetricDefinitions(
    args: BatchDeleteRumMetricDefinitionsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<BatchDeleteRumMetricDefinitionsCommandOutput>;
  batchDeleteRumMetricDefinitions(
    args: BatchDeleteRumMetricDefinitionsCommandInput,
    cb: (err: any, data?: BatchDeleteRumMetricDefinitionsCommandOutput) => void
  ): void;
  batchDeleteRumMetricDefinitions(
    args: BatchDeleteRumMetricDefinitionsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: BatchDeleteRumMetricDefinitionsCommandOutput) => void
  ): void;
  batchGetRumMetricDefinitions(
    args: BatchGetRumMetricDefinitionsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<BatchGetRumMetricDefinitionsCommandOutput>;
  batchGetRumMetricDefinitions(
    args: BatchGetRumMetricDefinitionsCommandInput,
    cb: (err: any, data?: BatchGetRumMetricDefinitionsCommandOutput) => void
  ): void;
  batchGetRumMetricDefinitions(
    args: BatchGetRumMetricDefinitionsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: BatchGetRumMetricDefinitionsCommandOutput) => void
  ): void;
  createAppMonitor(
    args: CreateAppMonitorCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateAppMonitorCommandOutput>;
  createAppMonitor(
    args: CreateAppMonitorCommandInput,
    cb: (err: any, data?: CreateAppMonitorCommandOutput) => void
  ): void;
  createAppMonitor(
    args: CreateAppMonitorCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateAppMonitorCommandOutput) => void
  ): void;
  deleteAppMonitor(
    args: DeleteAppMonitorCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteAppMonitorCommandOutput>;
  deleteAppMonitor(
    args: DeleteAppMonitorCommandInput,
    cb: (err: any, data?: DeleteAppMonitorCommandOutput) => void
  ): void;
  deleteAppMonitor(
    args: DeleteAppMonitorCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteAppMonitorCommandOutput) => void
  ): void;
  deleteRumMetricsDestination(
    args: DeleteRumMetricsDestinationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteRumMetricsDestinationCommandOutput>;
  deleteRumMetricsDestination(
    args: DeleteRumMetricsDestinationCommandInput,
    cb: (err: any, data?: DeleteRumMetricsDestinationCommandOutput) => void
  ): void;
  deleteRumMetricsDestination(
    args: DeleteRumMetricsDestinationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteRumMetricsDestinationCommandOutput) => void
  ): void;
  getAppMonitor(
    args: GetAppMonitorCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetAppMonitorCommandOutput>;
  getAppMonitor(
    args: GetAppMonitorCommandInput,
    cb: (err: any, data?: GetAppMonitorCommandOutput) => void
  ): void;
  getAppMonitor(
    args: GetAppMonitorCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetAppMonitorCommandOutput) => void
  ): void;
  getAppMonitorData(
    args: GetAppMonitorDataCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetAppMonitorDataCommandOutput>;
  getAppMonitorData(
    args: GetAppMonitorDataCommandInput,
    cb: (err: any, data?: GetAppMonitorDataCommandOutput) => void
  ): void;
  getAppMonitorData(
    args: GetAppMonitorDataCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetAppMonitorDataCommandOutput) => void
  ): void;
  listAppMonitors(): Promise<ListAppMonitorsCommandOutput>;
  listAppMonitors(
    args: ListAppMonitorsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListAppMonitorsCommandOutput>;
  listAppMonitors(
    args: ListAppMonitorsCommandInput,
    cb: (err: any, data?: ListAppMonitorsCommandOutput) => void
  ): void;
  listAppMonitors(
    args: ListAppMonitorsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListAppMonitorsCommandOutput) => void
  ): void;
  listRumMetricsDestinations(
    args: ListRumMetricsDestinationsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListRumMetricsDestinationsCommandOutput>;
  listRumMetricsDestinations(
    args: ListRumMetricsDestinationsCommandInput,
    cb: (err: any, data?: ListRumMetricsDestinationsCommandOutput) => void
  ): void;
  listRumMetricsDestinations(
    args: ListRumMetricsDestinationsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListRumMetricsDestinationsCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListTagsForResourceCommandOutput>;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  putRumEvents(
    args: PutRumEventsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PutRumEventsCommandOutput>;
  putRumEvents(
    args: PutRumEventsCommandInput,
    cb: (err: any, data?: PutRumEventsCommandOutput) => void
  ): void;
  putRumEvents(
    args: PutRumEventsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: PutRumEventsCommandOutput) => void
  ): void;
  putRumMetricsDestination(
    args: PutRumMetricsDestinationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PutRumMetricsDestinationCommandOutput>;
  putRumMetricsDestination(
    args: PutRumMetricsDestinationCommandInput,
    cb: (err: any, data?: PutRumMetricsDestinationCommandOutput) => void
  ): void;
  putRumMetricsDestination(
    args: PutRumMetricsDestinationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: PutRumMetricsDestinationCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<TagResourceCommandOutput>;
  tagResource(
    args: TagResourceCommandInput,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UntagResourceCommandOutput>;
  untagResource(
    args: UntagResourceCommandInput,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  updateAppMonitor(
    args: UpdateAppMonitorCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateAppMonitorCommandOutput>;
  updateAppMonitor(
    args: UpdateAppMonitorCommandInput,
    cb: (err: any, data?: UpdateAppMonitorCommandOutput) => void
  ): void;
  updateAppMonitor(
    args: UpdateAppMonitorCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateAppMonitorCommandOutput) => void
  ): void;
  updateRumMetricDefinition(
    args: UpdateRumMetricDefinitionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateRumMetricDefinitionCommandOutput>;
  updateRumMetricDefinition(
    args: UpdateRumMetricDefinitionCommandInput,
    cb: (err: any, data?: UpdateRumMetricDefinitionCommandOutput) => void
  ): void;
  updateRumMetricDefinition(
    args: UpdateRumMetricDefinitionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateRumMetricDefinitionCommandOutput) => void
  ): void;
}
export declare class RUM extends RUMClient implements RUM {}
