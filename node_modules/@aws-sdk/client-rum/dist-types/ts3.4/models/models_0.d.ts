import {
  ExceptionOptionType as __ExceptionOptionType,
  LazyJsonString as __LazyJsonString,
} from "@smithy/smithy-client";
import { RUMServiceException as __BaseException } from "./RUMServiceException";
export declare class AccessDeniedException extends __BaseException {
  readonly name: "AccessDeniedException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<AccessDeniedException, __BaseException>
  );
}
export declare const Telemetry: {
  readonly ERRORS: "errors";
  readonly HTTP: "http";
  readonly PERFORMANCE: "performance";
};
export type Telemetry = (typeof Telemetry)[keyof typeof Telemetry];
export interface AppMonitorConfiguration {
  IdentityPoolId?: string;
  ExcludedPages?: string[];
  IncludedPages?: string[];
  FavoritePages?: string[];
  SessionSampleRate?: number;
  GuestRoleArn?: string;
  AllowCookies?: boolean;
  Telemetries?: Telemetry[];
  EnableXRay?: boolean;
}
export declare const CustomEventsStatus: {
  readonly DISABLED: "DISABLED";
  readonly ENABLED: "ENABLED";
};
export type CustomEventsStatus =
  (typeof CustomEventsStatus)[keyof typeof CustomEventsStatus];
export interface CustomEvents {
  Status?: CustomEventsStatus;
}
export interface CwLog {
  CwLogEnabled?: boolean;
  CwLogGroup?: string;
}
export interface DataStorage {
  CwLog?: CwLog;
}
export declare const StateEnum: {
  readonly ACTIVE: "ACTIVE";
  readonly CREATED: "CREATED";
  readonly DELETING: "DELETING";
};
export type StateEnum = (typeof StateEnum)[keyof typeof StateEnum];
export interface AppMonitor {
  Name?: string;
  Domain?: string;
  Id?: string;
  Created?: string;
  LastModified?: string;
  Tags?: Record<string, string>;
  State?: StateEnum;
  AppMonitorConfiguration?: AppMonitorConfiguration;
  DataStorage?: DataStorage;
  CustomEvents?: CustomEvents;
}
export interface AppMonitorDetails {
  name?: string;
  id?: string;
  version?: string;
}
export declare const MetricDestination: {
  readonly CloudWatch: "CloudWatch";
  readonly Evidently: "Evidently";
};
export type MetricDestination =
  (typeof MetricDestination)[keyof typeof MetricDestination];
export interface MetricDefinitionRequest {
  Name: string | undefined;
  ValueKey?: string;
  UnitLabel?: string;
  DimensionKeys?: Record<string, string>;
  EventPattern?: string;
  Namespace?: string;
}
export interface BatchCreateRumMetricDefinitionsRequest {
  AppMonitorName: string | undefined;
  Destination: MetricDestination | undefined;
  DestinationArn?: string;
  MetricDefinitions: MetricDefinitionRequest[] | undefined;
}
export interface BatchCreateRumMetricDefinitionsError {
  MetricDefinition: MetricDefinitionRequest | undefined;
  ErrorCode: string | undefined;
  ErrorMessage: string | undefined;
}
export interface MetricDefinition {
  MetricDefinitionId: string | undefined;
  Name: string | undefined;
  ValueKey?: string;
  UnitLabel?: string;
  DimensionKeys?: Record<string, string>;
  EventPattern?: string;
  Namespace?: string;
}
export interface BatchCreateRumMetricDefinitionsResponse {
  Errors: BatchCreateRumMetricDefinitionsError[] | undefined;
  MetricDefinitions?: MetricDefinition[];
}
export declare class ConflictException extends __BaseException {
  readonly name: "ConflictException";
  readonly $fault: "client";
  resourceName: string | undefined;
  resourceType?: string;
  constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
}
export declare class InternalServerException extends __BaseException {
  readonly name: "InternalServerException";
  readonly $fault: "server";
  $retryable: {};
  retryAfterSeconds?: number;
  constructor(
    opts: __ExceptionOptionType<InternalServerException, __BaseException>
  );
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  resourceName: string | undefined;
  resourceType?: string;
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export declare class ServiceQuotaExceededException extends __BaseException {
  readonly name: "ServiceQuotaExceededException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ServiceQuotaExceededException, __BaseException>
  );
}
export declare class ThrottlingException extends __BaseException {
  readonly name: "ThrottlingException";
  readonly $fault: "client";
  $retryable: {
    throttling: boolean;
  };
  serviceCode?: string;
  quotaCode?: string;
  retryAfterSeconds?: number;
  constructor(
    opts: __ExceptionOptionType<ThrottlingException, __BaseException>
  );
}
export declare class ValidationException extends __BaseException {
  readonly name: "ValidationException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ValidationException, __BaseException>
  );
}
export interface BatchDeleteRumMetricDefinitionsRequest {
  AppMonitorName: string | undefined;
  Destination: MetricDestination | undefined;
  DestinationArn?: string;
  MetricDefinitionIds: string[] | undefined;
}
export interface BatchDeleteRumMetricDefinitionsError {
  MetricDefinitionId: string | undefined;
  ErrorCode: string | undefined;
  ErrorMessage: string | undefined;
}
export interface BatchDeleteRumMetricDefinitionsResponse {
  Errors: BatchDeleteRumMetricDefinitionsError[] | undefined;
  MetricDefinitionIds?: string[];
}
export interface BatchGetRumMetricDefinitionsRequest {
  AppMonitorName: string | undefined;
  Destination: MetricDestination | undefined;
  DestinationArn?: string;
  MaxResults?: number;
  NextToken?: string;
}
export interface BatchGetRumMetricDefinitionsResponse {
  MetricDefinitions?: MetricDefinition[];
  NextToken?: string;
}
export interface CreateAppMonitorRequest {
  Name: string | undefined;
  Domain: string | undefined;
  Tags?: Record<string, string>;
  AppMonitorConfiguration?: AppMonitorConfiguration;
  CwLogEnabled?: boolean;
  CustomEvents?: CustomEvents;
}
export interface CreateAppMonitorResponse {
  Id?: string;
}
export interface DeleteAppMonitorRequest {
  Name: string | undefined;
}
export interface DeleteAppMonitorResponse {}
export interface DeleteRumMetricsDestinationRequest {
  AppMonitorName: string | undefined;
  Destination: MetricDestination | undefined;
  DestinationArn?: string;
}
export interface DeleteRumMetricsDestinationResponse {}
export interface GetAppMonitorRequest {
  Name: string | undefined;
}
export interface GetAppMonitorResponse {
  AppMonitor?: AppMonitor;
}
export interface QueryFilter {
  Name?: string;
  Values?: string[];
}
export interface TimeRange {
  After: number | undefined;
  Before?: number;
}
export interface GetAppMonitorDataRequest {
  Name: string | undefined;
  TimeRange: TimeRange | undefined;
  Filters?: QueryFilter[];
  MaxResults?: number;
  NextToken?: string;
}
export interface GetAppMonitorDataResponse {
  Events?: string[];
  NextToken?: string;
}
export interface ListAppMonitorsRequest {
  MaxResults?: number;
  NextToken?: string;
}
export interface AppMonitorSummary {
  Name?: string;
  Id?: string;
  Created?: string;
  LastModified?: string;
  State?: StateEnum;
}
export interface ListAppMonitorsResponse {
  NextToken?: string;
  AppMonitorSummaries?: AppMonitorSummary[];
}
export interface ListRumMetricsDestinationsRequest {
  AppMonitorName: string | undefined;
  MaxResults?: number;
  NextToken?: string;
}
export interface MetricDestinationSummary {
  Destination?: MetricDestination;
  DestinationArn?: string;
  IamRoleArn?: string;
}
export interface ListRumMetricsDestinationsResponse {
  Destinations?: MetricDestinationSummary[];
  NextToken?: string;
}
export interface PutRumMetricsDestinationRequest {
  AppMonitorName: string | undefined;
  Destination: MetricDestination | undefined;
  DestinationArn?: string;
  IamRoleArn?: string;
}
export interface PutRumMetricsDestinationResponse {}
export interface UpdateAppMonitorRequest {
  Name: string | undefined;
  Domain?: string;
  AppMonitorConfiguration?: AppMonitorConfiguration;
  CwLogEnabled?: boolean;
  CustomEvents?: CustomEvents;
}
export interface UpdateAppMonitorResponse {}
export interface UpdateRumMetricDefinitionRequest {
  AppMonitorName: string | undefined;
  Destination: MetricDestination | undefined;
  DestinationArn?: string;
  MetricDefinition: MetricDefinitionRequest | undefined;
  MetricDefinitionId: string | undefined;
}
export interface UpdateRumMetricDefinitionResponse {}
export interface ListTagsForResourceRequest {
  ResourceArn: string | undefined;
}
export interface ListTagsForResourceResponse {
  ResourceArn: string | undefined;
  Tags: Record<string, string> | undefined;
}
export interface RumEvent {
  id: string | undefined;
  timestamp: Date | undefined;
  type: string | undefined;
  metadata?: __LazyJsonString | string;
  details: __LazyJsonString | string | undefined;
}
export interface UserDetails {
  userId?: string;
  sessionId?: string;
}
export interface PutRumEventsRequest {
  Id: string | undefined;
  BatchId: string | undefined;
  AppMonitorDetails: AppMonitorDetails | undefined;
  UserDetails: UserDetails | undefined;
  RumEvents: RumEvent[] | undefined;
}
export interface PutRumEventsResponse {}
export interface TagResourceRequest {
  ResourceArn: string | undefined;
  Tags: Record<string, string> | undefined;
}
export interface TagResourceResponse {}
export interface UntagResourceRequest {
  ResourceArn: string | undefined;
  TagKeys: string[] | undefined;
}
export interface UntagResourceResponse {}
